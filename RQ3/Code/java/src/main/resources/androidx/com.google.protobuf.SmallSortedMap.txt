com.google.protobuf.SmallSortedMap
<com.google.protobuf.SmallSortedMap: java.util.List entryList>
<com.google.protobuf.SmallSortedMap: boolean isImmutable>
<com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap$DescendingEntrySet lazyDescendingEntrySet>
<com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap$EntrySet lazyEntrySet>
<com.google.protobuf.SmallSortedMap: int maxArraySize>
<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>
<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntriesDescending>
    static volatile java.util.List '-$$Nest$fgetentryList'(com.google.protobuf.SmallSortedMap)
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.util.List r1;

        $r0 := @parameter0: com.google.protobuf.SmallSortedMap;

        r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        return r1;
    }

    static volatile java.util.Map '-$$Nest$fgetoverflowEntries'(com.google.protobuf.SmallSortedMap)
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.util.Map r1;

        $r0 := @parameter0: com.google.protobuf.SmallSortedMap;

        r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        return r1;
    }

    static volatile java.util.Map '-$$Nest$fgetoverflowEntriesDescending'(com.google.protobuf.SmallSortedMap)
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.util.Map r1;

        $r0 := @parameter0: com.google.protobuf.SmallSortedMap;

        r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntriesDescending>;

        return r1;
    }

    static volatile void '-$$Nest$mcheckMutable'(com.google.protobuf.SmallSortedMap)
    {
        com.google.protobuf.SmallSortedMap $r0;

        $r0 := @parameter0: com.google.protobuf.SmallSortedMap;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap: void checkMutable()>();

        return;
    }

    static volatile java.lang.Object '-$$Nest$mremoveArrayEntryAt'(com.google.protobuf.SmallSortedMap, int)
    {
        int $i0;
        java.lang.Object $r0;
        com.google.protobuf.SmallSortedMap $r1;

        $r1 := @parameter0: com.google.protobuf.SmallSortedMap;

        $i0 := @parameter1: int;

        $r0 = specialinvoke $r1.<com.google.protobuf.SmallSortedMap: java.lang.Object removeArrayEntryAt(int)>($i0);

        return $r0;
    }

    private void <init>(int)
    {
        com.google.protobuf.SmallSortedMap $r0;
        int $i0;
        java.util.List $r1;
        java.util.Map $r2;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.util.AbstractMap: void <init>()>();

        $r0.<com.google.protobuf.SmallSortedMap: int maxArraySize> = $i0;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList> = $r1;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries> = $r2;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntriesDescending> = $r2;

        return;
    }

    void <init>(int, com.google.protobuf.SmallSortedMap-IA)
    {
        com.google.protobuf.SmallSortedMap $r0;
        int $i0;
        com.google.protobuf.SmallSortedMap-IA $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.protobuf.SmallSortedMap-IA;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap: void <init>(int)>($i0);

        return;
    }

    private int binarySearchInArray(java.lang.Comparable)
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.lang.Comparable $r1, $r5;
        java.util.List $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        com.google.protobuf.SmallSortedMap$Entry $r4;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $r1 := @parameter0: java.lang.Comparable;

        $r2 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $i1 = 0;

        if $i0 < 0 goto label3;

        $r2 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (com.google.protobuf.SmallSortedMap$Entry) $r3;

        $r5 = virtualinvoke $r4.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable getKey()>();

        $i2 = interfaceinvoke $r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);

        if $i2 <= 0 goto label1;

        $i0 = $i0 + 2;

        $i0 = neg $i0;

        return $i0;

     label1:
        if $i2 == 0 goto label2;

        goto label3;

     label2:
        return $i0;

     label3:
        if $i1 > $i0 goto label7;

        $i2 = $i1 + $i0;

        $i2 = $i2 / 2;

        $r2 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r4 = (com.google.protobuf.SmallSortedMap$Entry) $r3;

        $r5 = virtualinvoke $r4.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable getKey()>();

        $i3 = interfaceinvoke $r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);

        if $i3 >= 0 goto label4;

        $i0 = $i2 + -1;

        goto label5;

     label4:
        if $i3 <= 0 goto label6;

        $i1 = $i2 + 1;

     label5:
        goto label3;

     label6:
        return $i2;

     label7:
        $i0 = $i1 + 1;

        $i0 = neg $i0;

        return $i0;
    }

    private void checkMutable()
    {
        com.google.protobuf.SmallSortedMap $r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $z0 = $r0.<com.google.protobuf.SmallSortedMap: boolean isImmutable>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    private void ensureEntryArrayMutable()
    {
        com.google.protobuf.SmallSortedMap $r0;
        int $i0;
        boolean $z0;
        java.util.List $r1;
        java.util.ArrayList r2;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap: void checkMutable()>();

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $z0 = $r1 instanceof java.util.ArrayList;

        if $z0 != 0 goto label1;

        r2 = new java.util.ArrayList;

        $i0 = $r0.<com.google.protobuf.SmallSortedMap: int maxArraySize>;

        specialinvoke r2.<java.util.ArrayList: void <init>(int)>($i0);

        $r1 = (java.util.List) r2;

        $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList> = $r1;

     label1:
        return;
    }

    private java.util.SortedMap getOverflowEntriesMutable()
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.util.Map $r1;
        boolean $z0;
        java.util.TreeMap $r2, $r3;
        java.util.NavigableMap $r4;
        java.util.SortedMap $r5;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap: void checkMutable()>();

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = $r1 instanceof java.util.TreeMap;

        if $z0 != 0 goto label1;

        $r3 = new java.util.TreeMap;

        $r2 = $r3;

        specialinvoke $r3.<java.util.TreeMap: void <init>()>();

        $r1 = (java.util.Map) $r2;

        $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries> = $r1;

        $r4 = virtualinvoke $r2.<java.util.TreeMap: java.util.NavigableMap descendingMap()>();

        $r1 = (java.util.Map) $r4;

        $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntriesDescending> = $r1;

     label1:
        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $r5 = (java.util.SortedMap) $r1;

        return $r5;
    }

    static com.google.protobuf.SmallSortedMap newFieldMap(int)
    {
        int $i0;
        com.google.protobuf.SmallSortedMap$1 $r0;

        $i0 := @parameter0: int;

        $r0 = new com.google.protobuf.SmallSortedMap$1;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap$1: void <init>(int)>($i0);

        return $r0;
    }

    private java.lang.Object removeArrayEntryAt(int)
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.util.List $r1;
        com.google.protobuf.SmallSortedMap$Entry $r2;
        int $i0;
        java.lang.Object $r3, $r8;
        java.util.Map $r4;
        boolean $z0;
        java.util.SortedMap $r5;
        java.util.Set $r6;
        java.util.Iterator $r7;
        java.util.Map$Entry $r9;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $i0 := @parameter0: int;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap: void checkMutable()>();

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i0);

        $r2 = (com.google.protobuf.SmallSortedMap$Entry) $r3;

        $r3 = virtualinvoke $r2.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object getValue()>();

        $r4 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap: java.util.SortedMap getOverflowEntriesMutable()>();

        $r6 = interfaceinvoke $r5.<java.util.SortedMap: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $r2 = new com.google.protobuf.SmallSortedMap$Entry;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.util.Map$Entry) $r8;

        specialinvoke $r2.<com.google.protobuf.SmallSortedMap$Entry: void <init>(com.google.protobuf.SmallSortedMap,java.util.Map$Entry)>($r0, $r9);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        interfaceinvoke $r7.<java.util.Iterator: void remove()>();

     label1:
        return $r3;
    }

    public void clear()
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.util.List $r1;
        boolean $z0;
        java.util.Map $r2;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap: void checkMutable()>();

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

     label1:
        $r2 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r2 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

     label2:
        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.lang.Object $r1;
        java.lang.Comparable $r2;
        int $i0;
        java.util.Map $r3;
        boolean $z0;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Comparable) $r1;

        $i0 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>($r2);

        if $i0 >= 0 goto label2;

        $r3 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    java.util.Set descendingEntrySet()
    {
        com.google.protobuf.SmallSortedMap $r0;
        com.google.protobuf.SmallSortedMap$DescendingEntrySet $r1, r2;
        java.util.Set r3;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap$DescendingEntrySet lazyDescendingEntrySet>;

        if $r1 != null goto label1;

        r2 = new com.google.protobuf.SmallSortedMap$DescendingEntrySet;

        specialinvoke r2.<com.google.protobuf.SmallSortedMap$DescendingEntrySet: void <init>(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$DescendingEntrySet-IA)>($r0, null);

        $r0.<com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap$DescendingEntrySet lazyDescendingEntrySet> = r2;

     label1:
        $r1 = $r0.<com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap$DescendingEntrySet lazyDescendingEntrySet>;

        r3 = (java.util.Set) $r1;

        return r3;
    }

    public java.util.Set entrySet()
    {
        com.google.protobuf.SmallSortedMap $r0;
        com.google.protobuf.SmallSortedMap$EntrySet $r1, r2;
        java.util.Set r3;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap$EntrySet lazyEntrySet>;

        if $r1 != null goto label1;

        r2 = new com.google.protobuf.SmallSortedMap$EntrySet;

        specialinvoke r2.<com.google.protobuf.SmallSortedMap$EntrySet: void <init>(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$EntrySet-IA)>($r0, null);

        $r0.<com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap$EntrySet lazyEntrySet> = r2;

     label1:
        $r1 = $r0.<com.google.protobuf.SmallSortedMap: com.google.protobuf.SmallSortedMap$EntrySet lazyEntrySet>;

        r3 = (java.util.Set) $r1;

        return r3;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1, $i2;
        java.util.Set $r3, $r4;
        java.util.Map$Entry $r5, $r6;
        java.util.Map $r7, $r8;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $r1 := @parameter0: java.lang.Object;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.google.protobuf.SmallSortedMap;

        if $z0 != 0 goto label2;

        $z0 = specialinvoke $r0.<java.util.AbstractMap: boolean equals(java.lang.Object)>($r1);

        return $z0;

     label2:
        $r2 = (com.google.protobuf.SmallSortedMap) $r1;

        $i0 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap: int size()>();

        $i1 = virtualinvoke $r2.<com.google.protobuf.SmallSortedMap: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $i1 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap: int getNumArrayEntries()>();

        $i2 = virtualinvoke $r2.<com.google.protobuf.SmallSortedMap: int getNumArrayEntries()>();

        if $i1 == $i2 goto label4;

        $r3 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap: java.util.Set entrySet()>();

        $r4 = virtualinvoke $r2.<com.google.protobuf.SmallSortedMap: java.util.Set entrySet()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        return $z0;

     label4:
        $i2 = 0;

     label5:
        if $i2 >= $i1 goto label7;

        $r5 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap: java.util.Map$Entry getArrayEntryAt(int)>($i2);

        $r6 = virtualinvoke $r2.<com.google.protobuf.SmallSortedMap: java.util.Map$Entry getArrayEntryAt(int)>($i2);

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label6;

        return 0;

     label6:
        $i2 = $i2 + 1;

        goto label5;

     label7:
        if $i1 == $i0 goto label8;

        $r7 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $r8 = $r2.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        return $z0;

     label8:
        return 1;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.lang.Object $r1;
        java.lang.Comparable $r2;
        int $i0;
        java.util.List $r3;
        com.google.protobuf.SmallSortedMap$Entry $r4;
        java.util.Map $r5;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Comparable) $r1;

        $i0 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>($r2);

        if $i0 < 0 goto label1;

        $r3 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $r1 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (com.google.protobuf.SmallSortedMap$Entry) $r1;

        $r1 = virtualinvoke $r4.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object getValue()>();

        return $r1;

     label1:
        $r5 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $r1 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        return $r1;
    }

    public java.util.Map$Entry getArrayEntryAt(int)
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.util.List $r1;
        java.lang.Object $r2;
        int $i0;
        java.util.Map$Entry $r3;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (java.util.Map$Entry) $r2;

        return $r3;
    }

    public int getNumArrayEntries()
    {
        com.google.protobuf.SmallSortedMap $r0;
        int $i0;
        java.util.List $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public int getNumOverflowEntries()
    {
        com.google.protobuf.SmallSortedMap $r0;
        int $i0;
        java.util.Map $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.lang.Iterable getOverflowEntries()
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.util.Map $r1;
        boolean $z0;
        java.lang.Iterable $r2;
        java.util.Set $r3;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <com.google.protobuf.SmallSortedMap$EmptySet: java.lang.Iterable iterable()>();

        return $r2;

     label1:
        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r2 = (java.lang.Iterable) $r3;

        return $r2;
    }

    public int hashCode()
    {
        com.google.protobuf.SmallSortedMap $r0;
        int $i0, $i1, $i2, $i3;
        java.util.List $r1;
        java.lang.Object $r2;
        com.google.protobuf.SmallSortedMap$Entry $r3;
        java.util.Map $r4;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $i0 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap: int getNumArrayEntries()>();

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (com.google.protobuf.SmallSortedMap$Entry) $r2;

        $i3 = virtualinvoke $r3.<com.google.protobuf.SmallSortedMap$Entry: int hashCode()>();

        $i2 = $i2 + $i3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $i0 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap: int getNumOverflowEntries()>();

        if $i0 <= 0 goto label3;

        $r4 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $i0 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

        $i2 = $i2 + $i0;

     label3:
        return $i2;
    }

    public boolean isImmutable()
    {
        com.google.protobuf.SmallSortedMap $r0;
        boolean z0;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        z0 = $r0.<com.google.protobuf.SmallSortedMap: boolean isImmutable>;

        return z0;
    }

    public void makeImmutable()
    {
        com.google.protobuf.SmallSortedMap $r0;
        boolean $z0;
        java.util.Map $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $z0 = $r0.<com.google.protobuf.SmallSortedMap: boolean isImmutable>;

        if $z0 != 0 goto label5;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        goto label2;

     label1:
        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

     label2:
        $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries> = $r1;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntriesDescending>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        goto label4;

     label3:
        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntriesDescending>;

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

     label4:
        $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntriesDescending> = $r1;

        $r0.<com.google.protobuf.SmallSortedMap: boolean isImmutable> = 1;

     label5:
        return;
    }

    public java.lang.Object put(java.lang.Comparable, java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.lang.Object $r1, $r4;
        java.lang.Comparable $r2, $r7;
        int $i0, $i1, $i2;
        java.util.List $r3;
        com.google.protobuf.SmallSortedMap$Entry $r5;
        java.util.SortedMap $r6;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $r2 := @parameter0: java.lang.Comparable;

        $r1 := @parameter1: java.lang.Object;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap: void checkMutable()>();

        $i0 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>($r2);

        if $i0 < 0 goto label1;

        $r3 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (com.google.protobuf.SmallSortedMap$Entry) $r4;

        $r1 = virtualinvoke $r5.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object setValue(java.lang.Object)>($r1);

        return $r1;

     label1:
        specialinvoke $r0.<com.google.protobuf.SmallSortedMap: void ensureEntryArrayMutable()>();

        $i0 = $i0 + 1;

        $i0 = neg $i0;

        $i1 = $r0.<com.google.protobuf.SmallSortedMap: int maxArraySize>;

        if $i0 < $i1 goto label2;

        $r6 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap: java.util.SortedMap getOverflowEntriesMutable()>();

        $r1 = interfaceinvoke $r6.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $r1;

     label2:
        $r3 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = $r0.<com.google.protobuf.SmallSortedMap: int maxArraySize>;

        if $i1 != $i2 goto label3;

        $r3 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $i1 = $i2 + -1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>($i1);

        $r5 = (com.google.protobuf.SmallSortedMap$Entry) $r4;

        $r6 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap: java.util.SortedMap getOverflowEntriesMutable()>();

        $r7 = virtualinvoke $r5.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable getKey()>();

        $r4 = virtualinvoke $r5.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r6.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r4);

     label3:
        $r3 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $r5 = new com.google.protobuf.SmallSortedMap$Entry;

        specialinvoke $r5.<com.google.protobuf.SmallSortedMap$Entry: void <init>(com.google.protobuf.SmallSortedMap,java.lang.Comparable,java.lang.Object)>($r0, $r2, $r1);

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>($i0, $r5);

        return null;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.lang.Object $r1, $r2;
        java.lang.Comparable $r3;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Comparable) $r2;

        $r2 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap: java.lang.Object put(java.lang.Comparable,java.lang.Object)>($r3, $r1);

        return $r2;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.lang.Object $r1;
        java.lang.Comparable $r2;
        int $i0;
        java.util.Map $r3;
        boolean $z0;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $r1 := @parameter0: java.lang.Object;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap: void checkMutable()>();

        $r2 = (java.lang.Comparable) $r1;

        $i0 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>($r2);

        if $i0 < 0 goto label1;

        $r1 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap: java.lang.Object removeArrayEntryAt(int)>($i0);

        return $r1;

     label1:
        $r3 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r3 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $r1 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        return $r1;
    }

    public int size()
    {
        com.google.protobuf.SmallSortedMap $r0;
        java.util.List $r1;
        int $i0, $i1;
        java.util.Map $r2;

        $r0 := @this: com.google.protobuf.SmallSortedMap;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap: java.util.List entryList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = $r0.<com.google.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $i1 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $i0 = $i0 + $i1;

        return $i0;
    }

com.google.protobuf.SmallSortedMap$1
    void <init>(int)
    {
        com.google.protobuf.SmallSortedMap$1 $r0;
        int $i0;

        $r0 := @this: com.google.protobuf.SmallSortedMap$1;

        $i0 := @parameter0: int;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap: void <init>(int,com.google.protobuf.SmallSortedMap-IA)>($i0, null);

        return;
    }

    public void makeImmutable()
    {
        com.google.protobuf.SmallSortedMap$1 $r0;
        boolean $z0;
        int $i0, $i1;
        java.util.Map$Entry $r1;
        java.lang.Object $r2;
        com.google.protobuf.FieldSet$FieldDescriptorLite $r3;
        java.util.List $r4;
        java.lang.Iterable $r5;
        java.util.Iterator $r6;

        $r0 := @this: com.google.protobuf.SmallSortedMap$1;

        $z0 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap$1: boolean isImmutable()>();

        if $z0 != 0 goto label5;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap$1: int getNumArrayEntries()>();

        if $i0 >= $i1 goto label3;

        $r1 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap$1: java.util.Map$Entry getArrayEntryAt(int)>($i0);

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (com.google.protobuf.FieldSet$FieldDescriptorLite) $r2;

        $z0 = interfaceinvoke $r3.<com.google.protobuf.FieldSet$FieldDescriptorLite: boolean isRepeated()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.util.List) $r2;

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r4);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r5 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap$1: java.lang.Iterable getOverflowEntries()>();

        $r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.util.Map$Entry) $r2;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (com.google.protobuf.FieldSet$FieldDescriptorLite) $r2;

        $z0 = interfaceinvoke $r3.<com.google.protobuf.FieldSet$FieldDescriptorLite: boolean isRepeated()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.util.List) $r2;

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r4);

        goto label4;

     label5:
        specialinvoke $r0.<com.google.protobuf.SmallSortedMap: void makeImmutable()>();

        return;
    }

com.google.protobuf.SmallSortedMap$DescendingEntryIterator-IA
com.google.protobuf.SmallSortedMap$DescendingEntryIterator
<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: java.util.Iterator lazyOverflowIterator>
<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: int pos>
<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: com.google.protobuf.SmallSortedMap this$0>
    private void <init>(com.google.protobuf.SmallSortedMap)
    {
        com.google.protobuf.SmallSortedMap$DescendingEntryIterator $r0;
        com.google.protobuf.SmallSortedMap $r1;
        java.util.List $r2;
        int $i0;

        $r0 := @this: com.google.protobuf.SmallSortedMap$DescendingEntryIterator;

        $r1 := @parameter0: com.google.protobuf.SmallSortedMap;

        $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: com.google.protobuf.SmallSortedMap this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.protobuf.SmallSortedMap: java.util.List '-$$Nest$fgetentryList'(com.google.protobuf.SmallSortedMap)>($r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: int pos> = $i0;

        return;
    }

    void <init>(com.google.protobuf.SmallSortedMap, com.google.protobuf.SmallSortedMap$DescendingEntryIterator-IA)
    {
        com.google.protobuf.SmallSortedMap$DescendingEntryIterator $r0;
        com.google.protobuf.SmallSortedMap $r1;
        com.google.protobuf.SmallSortedMap$DescendingEntryIterator-IA $r2;

        $r0 := @this: com.google.protobuf.SmallSortedMap$DescendingEntryIterator;

        $r1 := @parameter0: com.google.protobuf.SmallSortedMap;

        $r2 := @parameter1: com.google.protobuf.SmallSortedMap$DescendingEntryIterator-IA;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: void <init>(com.google.protobuf.SmallSortedMap)>($r1);

        return;
    }

    private java.util.Iterator getOverflowIterator()
    {
        com.google.protobuf.SmallSortedMap$DescendingEntryIterator $r0;
        java.util.Iterator $r1;
        com.google.protobuf.SmallSortedMap $r2;
        java.util.Map $r3;
        java.util.Set $r4;

        $r0 := @this: com.google.protobuf.SmallSortedMap$DescendingEntryIterator;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: java.util.Iterator lazyOverflowIterator>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: com.google.protobuf.SmallSortedMap this$0>;

        $r3 = staticinvoke <com.google.protobuf.SmallSortedMap: java.util.Map '-$$Nest$fgetoverflowEntriesDescending'(com.google.protobuf.SmallSortedMap)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: java.util.Iterator lazyOverflowIterator> = $r1;

     label1:
        $r1 = $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: java.util.Iterator lazyOverflowIterator>;

        return $r1;
    }

    public boolean hasNext()
    {
        com.google.protobuf.SmallSortedMap$DescendingEntryIterator $r0;
        int $i0, $i1;
        com.google.protobuf.SmallSortedMap $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;

        $r0 := @this: com.google.protobuf.SmallSortedMap$DescendingEntryIterator;

        $i0 = $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: int pos>;

        if $i0 <= 0 goto label1;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: com.google.protobuf.SmallSortedMap this$0>;

        $r2 = staticinvoke <com.google.protobuf.SmallSortedMap: java.util.List '-$$Nest$fgetentryList'(com.google.protobuf.SmallSortedMap)>($r1);

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= $i1 goto label2;

     label1:
        $r3 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: java.util.Iterator getOverflowIterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public volatile java.lang.Object next()
    {
        com.google.protobuf.SmallSortedMap$DescendingEntryIterator $r0;
        java.util.Map$Entry $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$DescendingEntryIterator;

        $r1 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: java.util.Map$Entry next()>();

        return $r1;
    }

    public java.util.Map$Entry next()
    {
        com.google.protobuf.SmallSortedMap$DescendingEntryIterator $r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.util.Map$Entry $r3;
        com.google.protobuf.SmallSortedMap $r4;
        java.util.List $r5;
        int $i0;

        $r0 := @this: com.google.protobuf.SmallSortedMap$DescendingEntryIterator;

        $r1 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: java.util.Iterator getOverflowIterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r1 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: java.util.Iterator getOverflowIterator()>();

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.util.Map$Entry) $r2;

        return $r3;

     label1:
        $r4 = $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: com.google.protobuf.SmallSortedMap this$0>;

        $r5 = staticinvoke <com.google.protobuf.SmallSortedMap: java.util.List '-$$Nest$fgetentryList'(com.google.protobuf.SmallSortedMap)>($r4);

        $i0 = $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: int pos>;

        $i0 = $i0 + -1;

        $r0.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: int pos> = $i0;

        $r2 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (java.util.Map$Entry) $r2;

        return $r3;
    }

    public void remove()
    {
        com.google.protobuf.SmallSortedMap$DescendingEntryIterator $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$DescendingEntryIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

com.google.protobuf.SmallSortedMap$DescendingEntrySet-IA
com.google.protobuf.SmallSortedMap$DescendingEntrySet
<com.google.protobuf.SmallSortedMap$DescendingEntrySet: com.google.protobuf.SmallSortedMap this$0>
    private void <init>(com.google.protobuf.SmallSortedMap)
    {
        com.google.protobuf.SmallSortedMap$DescendingEntrySet $r0;
        com.google.protobuf.SmallSortedMap $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$DescendingEntrySet;

        $r1 := @parameter0: com.google.protobuf.SmallSortedMap;

        $r0.<com.google.protobuf.SmallSortedMap$DescendingEntrySet: com.google.protobuf.SmallSortedMap this$0> = $r1;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap$EntrySet: void <init>(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$EntrySet-IA)>($r1, null);

        return;
    }

    void <init>(com.google.protobuf.SmallSortedMap, com.google.protobuf.SmallSortedMap$DescendingEntrySet-IA)
    {
        com.google.protobuf.SmallSortedMap$DescendingEntrySet $r0;
        com.google.protobuf.SmallSortedMap $r1;
        com.google.protobuf.SmallSortedMap$DescendingEntrySet-IA $r2;

        $r0 := @this: com.google.protobuf.SmallSortedMap$DescendingEntrySet;

        $r1 := @parameter0: com.google.protobuf.SmallSortedMap;

        $r2 := @parameter1: com.google.protobuf.SmallSortedMap$DescendingEntrySet-IA;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap$DescendingEntrySet: void <init>(com.google.protobuf.SmallSortedMap)>($r1);

        return;
    }

    public java.util.Iterator iterator()
    {
        com.google.protobuf.SmallSortedMap$DescendingEntrySet $r0;
        com.google.protobuf.SmallSortedMap$DescendingEntryIterator $r1;
        com.google.protobuf.SmallSortedMap $r2;

        $r0 := @this: com.google.protobuf.SmallSortedMap$DescendingEntrySet;

        $r1 = new com.google.protobuf.SmallSortedMap$DescendingEntryIterator;

        $r2 = $r0.<com.google.protobuf.SmallSortedMap$DescendingEntrySet: com.google.protobuf.SmallSortedMap this$0>;

        specialinvoke $r1.<com.google.protobuf.SmallSortedMap$DescendingEntryIterator: void <init>(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$DescendingEntryIterator-IA)>($r2, null);

        return $r1;
    }

com.google.protobuf.SmallSortedMap$EmptySet$1
    void <init>()
    {
        com.google.protobuf.SmallSortedMap$EmptySet$1 $r0;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EmptySet$1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        com.google.protobuf.SmallSortedMap$EmptySet$1 $r0;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EmptySet$1;

        return 0;
    }

    public java.lang.Object next()
    {
        com.google.protobuf.SmallSortedMap$EmptySet$1 $r0;
        java.util.NoSuchElementException $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EmptySet$1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }

    public void remove()
    {
        com.google.protobuf.SmallSortedMap$EmptySet$1 $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EmptySet$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

com.google.protobuf.SmallSortedMap$EmptySet$2
    void <init>()
    {
        com.google.protobuf.SmallSortedMap$EmptySet$2 $r0;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EmptySet$2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        com.google.protobuf.SmallSortedMap$EmptySet$2 $r0;
        java.util.Iterator $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EmptySet$2;

        $r1 = staticinvoke <com.google.protobuf.SmallSortedMap$EmptySet: java.util.Iterator '-$$Nest$sfgetITERATOR'()>();

        return $r1;
    }

com.google.protobuf.SmallSortedMap$EmptySet
<com.google.protobuf.SmallSortedMap$EmptySet: java.lang.Iterable ITERABLE>
<com.google.protobuf.SmallSortedMap$EmptySet: java.util.Iterator ITERATOR>
    static volatile java.util.Iterator '-$$Nest$sfgetITERATOR'()
    {
        java.util.Iterator r0;

        r0 = <com.google.protobuf.SmallSortedMap$EmptySet: java.util.Iterator ITERATOR>;

        return r0;
    }

    static void <clinit>()
    {
        com.google.protobuf.SmallSortedMap$EmptySet$1 $r0;
        com.google.protobuf.SmallSortedMap$EmptySet$2 $r1;

        $r0 = new com.google.protobuf.SmallSortedMap$EmptySet$1;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap$EmptySet$1: void <init>()>();

        <com.google.protobuf.SmallSortedMap$EmptySet: java.util.Iterator ITERATOR> = $r0;

        $r1 = new com.google.protobuf.SmallSortedMap$EmptySet$2;

        specialinvoke $r1.<com.google.protobuf.SmallSortedMap$EmptySet$2: void <init>()>();

        <com.google.protobuf.SmallSortedMap$EmptySet: java.lang.Iterable ITERABLE> = $r1;

        return;
    }

    static java.lang.Iterable iterable()
    {
        java.lang.Iterable r0;

        r0 = <com.google.protobuf.SmallSortedMap$EmptySet: java.lang.Iterable ITERABLE>;

        return r0;
    }

com.google.protobuf.SmallSortedMap$Entry
<com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable key>
<com.google.protobuf.SmallSortedMap$Entry: com.google.protobuf.SmallSortedMap this$0>
<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object value>
    void <init>(com.google.protobuf.SmallSortedMap, java.lang.Comparable, java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap$Entry $r0;
        com.google.protobuf.SmallSortedMap $r1;
        java.lang.Comparable $r2;
        java.lang.Object $r3;

        $r0 := @this: com.google.protobuf.SmallSortedMap$Entry;

        $r1 := @parameter0: com.google.protobuf.SmallSortedMap;

        $r2 := @parameter1: java.lang.Comparable;

        $r3 := @parameter2: java.lang.Object;

        $r0.<com.google.protobuf.SmallSortedMap$Entry: com.google.protobuf.SmallSortedMap this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable key> = $r2;

        $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object value> = $r3;

        return;
    }

    void <init>(com.google.protobuf.SmallSortedMap, java.util.Map$Entry)
    {
        com.google.protobuf.SmallSortedMap$Entry $r0;
        com.google.protobuf.SmallSortedMap $r1;
        java.util.Map$Entry $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4;

        $r0 := @this: com.google.protobuf.SmallSortedMap$Entry;

        $r1 := @parameter0: com.google.protobuf.SmallSortedMap;

        $r2 := @parameter1: java.util.Map$Entry;

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = (java.lang.Comparable) $r3;

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap$Entry: void <init>(com.google.protobuf.SmallSortedMap,java.lang.Comparable,java.lang.Object)>($r1, $r4, $r3);

        return;
    }

    private boolean equals(java.lang.Object, java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap$Entry $r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        $r0 := @this: com.google.protobuf.SmallSortedMap$Entry;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        if $r2 != null goto label2;

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public int compareTo(com.google.protobuf.SmallSortedMap$Entry)
    {
        com.google.protobuf.SmallSortedMap$Entry $r0, $r1;
        java.lang.Comparable $r2, $r3;
        int $i0;

        $r0 := @this: com.google.protobuf.SmallSortedMap$Entry;

        $r1 := @parameter0: com.google.protobuf.SmallSortedMap$Entry;

        $r2 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable getKey()>();

        $r3 = virtualinvoke $r1.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable getKey()>();

        $i0 = interfaceinvoke $r2.<java.lang.Comparable: int compareTo(java.lang.Object)>($r3);

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap$Entry $r0, $r2;
        int $i0;
        java.lang.Object $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$Entry;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.protobuf.SmallSortedMap$Entry) $r1;

        $i0 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap$Entry: int compareTo(com.google.protobuf.SmallSortedMap$Entry)>($r2);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap$Entry $r0;
        java.lang.Object $r1, $r4;
        boolean $z0;
        java.util.Map$Entry $r2;
        java.lang.Comparable $r3;

        $r0 := @this: com.google.protobuf.SmallSortedMap$Entry;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != $r0 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof java.util.Map$Entry;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (java.util.Map$Entry) $r1;

        $r3 = $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable key>;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap$Entry: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r1);

        if $z0 == 0 goto label3;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object value>;

        $r4 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap$Entry: boolean equals(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public java.lang.Comparable getKey()
    {
        com.google.protobuf.SmallSortedMap$Entry $r0;
        java.lang.Comparable r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$Entry;

        r1 = $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable key>;

        return r1;
    }

    public volatile java.lang.Object getKey()
    {
        com.google.protobuf.SmallSortedMap$Entry $r0;
        java.lang.Comparable $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$Entry;

        $r1 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable getKey()>();

        return $r1;
    }

    public java.lang.Object getValue()
    {
        com.google.protobuf.SmallSortedMap$Entry $r0;
        java.lang.Object r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$Entry;

        r1 = $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object value>;

        return r1;
    }

    public int hashCode()
    {
        com.google.protobuf.SmallSortedMap$Entry $r0;
        java.lang.Object $r1;
        java.lang.Comparable $r2;
        int $i0, $i1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$Entry;

        $r2 = $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable key>;

        $i0 = 0;

        if $r2 != null goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        $r1 = $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object value>;

        if $r1 != null goto label3;

        goto label4;

     label3:
        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

     label4:
        $i0 = $i1 ^ $i0;

        return $i0;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap$Entry $r0;
        java.lang.Object $r1, r3;
        com.google.protobuf.SmallSortedMap $r2;

        $r0 := @this: com.google.protobuf.SmallSortedMap$Entry;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<com.google.protobuf.SmallSortedMap$Entry: com.google.protobuf.SmallSortedMap this$0>;

        staticinvoke <com.google.protobuf.SmallSortedMap: void '-$$Nest$mcheckMutable'(com.google.protobuf.SmallSortedMap)>($r2);

        r3 = $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object value>;

        $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object value> = $r1;

        return r3;
    }

    public java.lang.String toString()
    {
        com.google.protobuf.SmallSortedMap$Entry $r0;
        java.lang.Comparable $r1;
        java.lang.String $r2, $r4;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5;

        $r0 := @this: com.google.protobuf.SmallSortedMap$Entry;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Comparable key>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r3 = $r0.<com.google.protobuf.SmallSortedMap$Entry: java.lang.Object value>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

com.google.protobuf.SmallSortedMap$EntryIterator-IA
com.google.protobuf.SmallSortedMap$EntryIterator
<com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Iterator lazyOverflowIterator>
<com.google.protobuf.SmallSortedMap$EntryIterator: boolean nextCalledBeforeRemove>
<com.google.protobuf.SmallSortedMap$EntryIterator: int pos>
<com.google.protobuf.SmallSortedMap$EntryIterator: com.google.protobuf.SmallSortedMap this$0>
    private void <init>(com.google.protobuf.SmallSortedMap)
    {
        com.google.protobuf.SmallSortedMap$EntryIterator $r0;
        com.google.protobuf.SmallSortedMap $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntryIterator;

        $r1 := @parameter0: com.google.protobuf.SmallSortedMap;

        $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: com.google.protobuf.SmallSortedMap this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: int pos> = -1;

        return;
    }

    void <init>(com.google.protobuf.SmallSortedMap, com.google.protobuf.SmallSortedMap$EntryIterator-IA)
    {
        com.google.protobuf.SmallSortedMap$EntryIterator $r0;
        com.google.protobuf.SmallSortedMap $r1;
        com.google.protobuf.SmallSortedMap$EntryIterator-IA $r2;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntryIterator;

        $r1 := @parameter0: com.google.protobuf.SmallSortedMap;

        $r2 := @parameter1: com.google.protobuf.SmallSortedMap$EntryIterator-IA;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: void <init>(com.google.protobuf.SmallSortedMap)>($r1);

        return;
    }

    private java.util.Iterator getOverflowIterator()
    {
        com.google.protobuf.SmallSortedMap$EntryIterator $r0;
        java.util.Iterator $r1;
        com.google.protobuf.SmallSortedMap $r2;
        java.util.Map $r3;
        java.util.Set $r4;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntryIterator;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Iterator lazyOverflowIterator>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: com.google.protobuf.SmallSortedMap this$0>;

        $r3 = staticinvoke <com.google.protobuf.SmallSortedMap: java.util.Map '-$$Nest$fgetoverflowEntries'(com.google.protobuf.SmallSortedMap)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Iterator lazyOverflowIterator> = $r1;

     label1:
        $r1 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Iterator lazyOverflowIterator>;

        return $r1;
    }

    public boolean hasNext()
    {
        com.google.protobuf.SmallSortedMap$EntryIterator $r0;
        int $i0, $i1;
        boolean $z0, $z1;
        com.google.protobuf.SmallSortedMap $r1;
        java.util.List $r2;
        java.util.Map $r3;
        java.util.Iterator $r4;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntryIterator;

        $i0 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: int pos>;

        $z0 = 1;

        $i0 = $i0 + 1;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: com.google.protobuf.SmallSortedMap this$0>;

        $r2 = staticinvoke <com.google.protobuf.SmallSortedMap: java.util.List '-$$Nest$fgetentryList'(com.google.protobuf.SmallSortedMap)>($r1);

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 < $i1 goto label2;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: com.google.protobuf.SmallSortedMap this$0>;

        $r3 = staticinvoke <com.google.protobuf.SmallSortedMap: java.util.Map '-$$Nest$fgetoverflowEntries'(com.google.protobuf.SmallSortedMap)>($r1);

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r4 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Iterator getOverflowIterator()>();

        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $z0 = 0;

        goto label2;

     label2:
        return $z0;
    }

    public volatile java.lang.Object next()
    {
        com.google.protobuf.SmallSortedMap$EntryIterator $r0;
        java.util.Map$Entry $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntryIterator;

        $r1 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Map$Entry next()>();

        return $r1;
    }

    public java.util.Map$Entry next()
    {
        com.google.protobuf.SmallSortedMap$EntryIterator $r0;
        int $i0, $i1;
        com.google.protobuf.SmallSortedMap $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        java.util.Map$Entry $r4;
        java.util.Iterator $r5;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntryIterator;

        $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: boolean nextCalledBeforeRemove> = 1;

        $i0 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: int pos>;

        $i0 = $i0 + 1;

        $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: int pos> = $i0;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: com.google.protobuf.SmallSortedMap this$0>;

        $r2 = staticinvoke <com.google.protobuf.SmallSortedMap: java.util.List '-$$Nest$fgetentryList'(com.google.protobuf.SmallSortedMap)>($r1);

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label1;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: com.google.protobuf.SmallSortedMap this$0>;

        $r2 = staticinvoke <com.google.protobuf.SmallSortedMap: java.util.List '-$$Nest$fgetentryList'(com.google.protobuf.SmallSortedMap)>($r1);

        $i0 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: int pos>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (java.util.Map$Entry) $r3;

        return $r4;

     label1:
        $r5 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Iterator getOverflowIterator()>();

        $r3 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.util.Map$Entry) $r3;

        return $r4;
    }

    public void remove()
    {
        com.google.protobuf.SmallSortedMap$EntryIterator $r0;
        int $i0, $i1;
        boolean $z0;
        com.google.protobuf.SmallSortedMap $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        java.lang.IllegalStateException $r4;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntryIterator;

        $z0 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: boolean nextCalledBeforeRemove>;

        if $z0 == 0 goto label2;

        $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: boolean nextCalledBeforeRemove> = 0;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: com.google.protobuf.SmallSortedMap this$0>;

        staticinvoke <com.google.protobuf.SmallSortedMap: void '-$$Nest$mcheckMutable'(com.google.protobuf.SmallSortedMap)>($r1);

        $i0 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: int pos>;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: com.google.protobuf.SmallSortedMap this$0>;

        $r2 = staticinvoke <com.google.protobuf.SmallSortedMap: java.util.List '-$$Nest$fgetentryList'(com.google.protobuf.SmallSortedMap)>($r1);

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label1;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: com.google.protobuf.SmallSortedMap this$0>;

        $i1 = $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: int pos>;

        $i0 = $i1 + -1;

        $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: int pos> = $i0;

        staticinvoke <com.google.protobuf.SmallSortedMap: java.lang.Object '-$$Nest$mremoveArrayEntryAt'(com.google.protobuf.SmallSortedMap,int)>($r1, $i1);

        return;

     label1:
        $r3 = specialinvoke $r0.<com.google.protobuf.SmallSortedMap$EntryIterator: java.util.Iterator getOverflowIterator()>();

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        return;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("remove() was called before next()");

        goto label3;

     label3:
        throw $r4;
    }

com.google.protobuf.SmallSortedMap$EntrySet-IA
com.google.protobuf.SmallSortedMap$EntrySet
<com.google.protobuf.SmallSortedMap$EntrySet: com.google.protobuf.SmallSortedMap this$0>
    private void <init>(com.google.protobuf.SmallSortedMap)
    {
        com.google.protobuf.SmallSortedMap$EntrySet $r0;
        com.google.protobuf.SmallSortedMap $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntrySet;

        $r1 := @parameter0: com.google.protobuf.SmallSortedMap;

        $r0.<com.google.protobuf.SmallSortedMap$EntrySet: com.google.protobuf.SmallSortedMap this$0> = $r1;

        specialinvoke $r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    void <init>(com.google.protobuf.SmallSortedMap, com.google.protobuf.SmallSortedMap$EntrySet-IA)
    {
        com.google.protobuf.SmallSortedMap$EntrySet $r0;
        com.google.protobuf.SmallSortedMap $r1;
        com.google.protobuf.SmallSortedMap$EntrySet-IA $r2;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntrySet;

        $r1 := @parameter0: com.google.protobuf.SmallSortedMap;

        $r2 := @parameter1: com.google.protobuf.SmallSortedMap$EntrySet-IA;

        specialinvoke $r0.<com.google.protobuf.SmallSortedMap$EntrySet: void <init>(com.google.protobuf.SmallSortedMap)>($r1);

        return;
    }

    public volatile boolean add(java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap$EntrySet $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.Map$Entry $r2;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntrySet;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map$Entry) $r1;

        $z0 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap$EntrySet: boolean add(java.util.Map$Entry)>($r2);

        return $z0;
    }

    public boolean add(java.util.Map$Entry)
    {
        com.google.protobuf.SmallSortedMap$EntrySet $r0;
        java.util.Map$Entry $r1;
        boolean $z0;
        com.google.protobuf.SmallSortedMap $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntrySet;

        $r1 := @parameter0: java.util.Map$Entry;

        $z0 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap$EntrySet: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r2 = $r0.<com.google.protobuf.SmallSortedMap$EntrySet: com.google.protobuf.SmallSortedMap this$0>;

        $r3 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = (java.lang.Comparable) $r3;

        $r3 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r2.<com.google.protobuf.SmallSortedMap: java.lang.Object put(java.lang.Comparable,java.lang.Object)>($r4, $r3);

        return 1;

     label1:
        return 0;
    }

    public void clear()
    {
        com.google.protobuf.SmallSortedMap$EntrySet $r0;
        com.google.protobuf.SmallSortedMap $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntrySet;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$EntrySet: com.google.protobuf.SmallSortedMap this$0>;

        virtualinvoke $r1.<com.google.protobuf.SmallSortedMap: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap$EntrySet $r0;
        java.lang.Object $r1, $r4;
        java.util.Map$Entry $r2;
        com.google.protobuf.SmallSortedMap $r3;
        boolean $z0;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntrySet;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map$Entry) $r1;

        $r3 = $r0.<com.google.protobuf.SmallSortedMap$EntrySet: com.google.protobuf.SmallSortedMap this$0>;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r1 = virtualinvoke $r3.<com.google.protobuf.SmallSortedMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r1 == $r4 goto label2;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public java.util.Iterator iterator()
    {
        com.google.protobuf.SmallSortedMap$EntrySet $r0;
        com.google.protobuf.SmallSortedMap$EntryIterator $r1;
        com.google.protobuf.SmallSortedMap $r2;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntrySet;

        $r1 = new com.google.protobuf.SmallSortedMap$EntryIterator;

        $r2 = $r0.<com.google.protobuf.SmallSortedMap$EntrySet: com.google.protobuf.SmallSortedMap this$0>;

        specialinvoke $r1.<com.google.protobuf.SmallSortedMap$EntryIterator: void <init>(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$EntryIterator-IA)>($r2, null);

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        com.google.protobuf.SmallSortedMap$EntrySet $r0;
        java.lang.Object $r1;
        java.util.Map$Entry $r2;
        boolean $z0;
        com.google.protobuf.SmallSortedMap $r3;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntrySet;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map$Entry) $r1;

        $z0 = virtualinvoke $r0.<com.google.protobuf.SmallSortedMap$EntrySet: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = $r0.<com.google.protobuf.SmallSortedMap$EntrySet: com.google.protobuf.SmallSortedMap this$0>;

        $r1 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r3.<com.google.protobuf.SmallSortedMap: java.lang.Object remove(java.lang.Object)>($r1);

        return 1;

     label1:
        return 0;
    }

    public int size()
    {
        com.google.protobuf.SmallSortedMap$EntrySet $r0;
        int $i0;
        com.google.protobuf.SmallSortedMap $r1;

        $r0 := @this: com.google.protobuf.SmallSortedMap$EntrySet;

        $r1 = $r0.<com.google.protobuf.SmallSortedMap$EntrySet: com.google.protobuf.SmallSortedMap this$0>;

        $i0 = virtualinvoke $r1.<com.google.protobuf.SmallSortedMap: int size()>();

        return $i0;
    }

