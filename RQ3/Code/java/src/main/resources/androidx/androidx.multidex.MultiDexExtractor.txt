androidx.multidex.MultiDexExtractor
<androidx.multidex.MultiDexExtractor: java.lang.String TAG>
<androidx.multidex.MultiDexExtractor: java.lang.String DEX_PREFIX>
<androidx.multidex.MultiDexExtractor: java.lang.String DEX_SUFFIX>
<androidx.multidex.MultiDexExtractor: java.lang.String EXTRACTED_NAME_EXT>
<androidx.multidex.MultiDexExtractor: java.lang.String EXTRACTED_SUFFIX>
<androidx.multidex.MultiDexExtractor: int MAX_EXTRACT_ATTEMPTS>
<androidx.multidex.MultiDexExtractor: java.lang.String PREFS_FILE>
<androidx.multidex.MultiDexExtractor: java.lang.String KEY_TIME_STAMP>
<androidx.multidex.MultiDexExtractor: java.lang.String KEY_CRC>
<androidx.multidex.MultiDexExtractor: java.lang.String KEY_DEX_NUMBER>
<androidx.multidex.MultiDexExtractor: java.lang.String KEY_DEX_CRC>
<androidx.multidex.MultiDexExtractor: java.lang.String KEY_DEX_TIME>
<androidx.multidex.MultiDexExtractor: int BUFFER_SIZE>
<androidx.multidex.MultiDexExtractor: long NO_VALUE>
<androidx.multidex.MultiDexExtractor: java.lang.String LOCK_FILENAME>
<androidx.multidex.MultiDexExtractor: java.io.File sourceApk>
<androidx.multidex.MultiDexExtractor: long sourceCrc>
<androidx.multidex.MultiDexExtractor: java.io.File dexDir>
<androidx.multidex.MultiDexExtractor: java.io.RandomAccessFile lockRaf>
<androidx.multidex.MultiDexExtractor: java.nio.channels.FileChannel lockChannel>
<androidx.multidex.MultiDexExtractor: java.nio.channels.FileLock cacheLock>
    void <init>(java.io.File, java.io.File) throws java.io.IOException
    {
        androidx.multidex.MultiDexExtractor r0;
        java.io.File r1, r2, r3, r36;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r18, $r20, $r26, $r27, r35, r38, r39;
        java.lang.String $r6, $r9, $r12, $r19, $r21, $r25, $r28;
        long $l1;
        java.io.RandomAccessFile $r15, $r30, r37;
        java.nio.channels.FileChannel $r16, $r22, $r32;
        java.nio.channels.FileLock $r23;
        java.lang.Throwable $r29, $r31, r33, r34;
        java.io.Closeable r40, r41;

        r0 := @this: androidx.multidex.MultiDexExtractor;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultiDexExtractor(");

        $r6 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r9 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r12);

        r0.<androidx.multidex.MultiDexExtractor: java.io.File sourceApk> = r1;

        r0.<androidx.multidex.MultiDexExtractor: java.io.File dexDir> = r2;

        $l1 = staticinvoke <androidx.multidex.MultiDexExtractor: long getZipCrc(java.io.File)>(r1);

        r0.<androidx.multidex.MultiDexExtractor: long sourceCrc> = $l1;

        r36 = new java.io.File;

        specialinvoke r36.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "MultiDex.lock");

        r3 = r36;

        r37 = new java.io.RandomAccessFile;

        specialinvoke r37.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r3, "rw");

        r0.<androidx.multidex.MultiDexExtractor: java.io.RandomAccessFile lockRaf> = r37;

     label1:
        $r15 = r0.<androidx.multidex.MultiDexExtractor: java.io.RandomAccessFile lockRaf>;

        $r16 = virtualinvoke $r15.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();

        r0.<androidx.multidex.MultiDexExtractor: java.nio.channels.FileChannel lockChannel> = $r16;

     label2:
        r38 = new java.lang.StringBuilder;

        specialinvoke r38.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blocking on lock ");

        $r19 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r21);

        $r22 = r0.<androidx.multidex.MultiDexExtractor: java.nio.channels.FileChannel lockChannel>;

        $r23 = virtualinvoke $r22.<java.nio.channels.FileChannel: java.nio.channels.FileLock lock()>();

        r0.<androidx.multidex.MultiDexExtractor: java.nio.channels.FileLock cacheLock> = $r23;

     label3:
        goto label5;

     label4:
        $r31 := @caughtexception;

        r33 = $r31;

        $r32 = r0.<androidx.multidex.MultiDexExtractor: java.nio.channels.FileChannel lockChannel>;

        r40 = (java.io.Closeable) $r32;

        staticinvoke <androidx.multidex.MultiDexExtractor: void closeQuietly(java.io.Closeable)>(r40);

        throw r33;

     label5:
        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $r26 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" locked");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r28);

     label6:
        goto label8;

     label7:
        $r29 := @caughtexception;

        r34 = $r29;

        $r30 = r0.<androidx.multidex.MultiDexExtractor: java.io.RandomAccessFile lockRaf>;

        r41 = (java.io.Closeable) $r30;

        staticinvoke <androidx.multidex.MultiDexExtractor: void closeQuietly(java.io.Closeable)>(r41);

        throw r34;

     label8:
        return;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label4;
        catch java.lang.Error from label2 to label3 with label4;
        catch java.io.IOException from label1 to label6 with label7;
        catch java.lang.RuntimeException from label1 to label6 with label7;
        catch java.lang.Error from label1 to label6 with label7;
    }

    java.util.List load(android.content.Context, java.lang.String, boolean) throws java.io.IOException
    {
        androidx.multidex.MultiDexExtractor r0;
        android.content.Context r1;
        java.lang.String r2, $r7, $r14, $r26;
        boolean z0, $z1, $z2;
        java.lang.Throwable r3, $r19;
        java.lang.StringBuilder $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r22, $r23, $r24, $r25;
        java.io.File $r6, $r16, $r17, $r20;
        java.nio.channels.FileLock $r15;
        long $l2, $l3, $l6, $l8, $l9;
        java.lang.IllegalStateException $r18;
        java.util.List r21;
        int $i10;

        r0 := @this: androidx.multidex.MultiDexExtractor;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MultiDexExtractor.load(");

        $r6 = r0.<androidx.multidex.MultiDexExtractor: java.io.File sourceApk>;

        $r7 = virtualinvoke $r6.<java.io.File: java.lang.String getPath()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r14);

        $r15 = r0.<androidx.multidex.MultiDexExtractor: java.nio.channels.FileLock cacheLock>;

        $z1 = virtualinvoke $r15.<java.nio.channels.FileLock: boolean isValid()>();

        if $z1 != 0 goto label1;

        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("MultiDexExtractor was closed");

        throw $r18;

     label1:
        if z0 != 0 goto label5;

        $r17 = r0.<androidx.multidex.MultiDexExtractor: java.io.File sourceApk>;

        $l6 = r0.<androidx.multidex.MultiDexExtractor: long sourceCrc>;

        $z2 = staticinvoke <androidx.multidex.MultiDexExtractor: boolean isModified(android.content.Context,java.io.File,long,java.lang.String)>(r1, $r17, $l6, r2);

        if $z2 != 0 goto label5;

     label2:
        r21 = specialinvoke r0.<androidx.multidex.MultiDexExtractor: java.util.List loadExistingExtractions(android.content.Context,java.lang.String)>(r1, r2);

     label3:
        goto label8;

     label4:
        $r19 := @caughtexception;

        r3 = $r19;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "Failed to reload existing extracted secondary dex files, falling back to fresh extraction", r3);

        r21 = specialinvoke r0.<androidx.multidex.MultiDexExtractor: java.util.List performExtractions()>();

        $r20 = r0.<androidx.multidex.MultiDexExtractor: java.io.File sourceApk>;

        $l8 = staticinvoke <androidx.multidex.MultiDexExtractor: long getTimeStamp(java.io.File)>($r20);

        $l9 = r0.<androidx.multidex.MultiDexExtractor: long sourceCrc>;

        staticinvoke <androidx.multidex.MultiDexExtractor: void putStoredApkInfo(android.content.Context,java.lang.String,long,long,java.util.List)>(r1, r2, $l8, $l9, r21);

        goto label8;

     label5:
        if z0 == 0 goto label6;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "Forced extraction must be performed.");

        goto label7;

     label6:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "Detected that extraction must be performed.");

     label7:
        r21 = specialinvoke r0.<androidx.multidex.MultiDexExtractor: java.util.List performExtractions()>();

        $r16 = r0.<androidx.multidex.MultiDexExtractor: java.io.File sourceApk>;

        $l2 = staticinvoke <androidx.multidex.MultiDexExtractor: long getTimeStamp(java.io.File)>($r16);

        $l3 = r0.<androidx.multidex.MultiDexExtractor: long sourceCrc>;

        staticinvoke <androidx.multidex.MultiDexExtractor: void putStoredApkInfo(android.content.Context,java.lang.String,long,long,java.util.List)>(r1, r2, $l2, $l3, r21);

     label8:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("load found ");

        $i10 = interfaceinvoke r21.<java.util.List: int size()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" secondary dex files");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r26);

        return r21;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void close() throws java.io.IOException
    {
        androidx.multidex.MultiDexExtractor r0;
        java.nio.channels.FileLock $r1;
        java.nio.channels.FileChannel $r2;
        java.io.RandomAccessFile $r3;

        r0 := @this: androidx.multidex.MultiDexExtractor;

        $r1 = r0.<androidx.multidex.MultiDexExtractor: java.nio.channels.FileLock cacheLock>;

        virtualinvoke $r1.<java.nio.channels.FileLock: void release()>();

        $r2 = r0.<androidx.multidex.MultiDexExtractor: java.nio.channels.FileChannel lockChannel>;

        virtualinvoke $r2.<java.nio.channels.FileChannel: void close()>();

        $r3 = r0.<androidx.multidex.MultiDexExtractor: java.io.RandomAccessFile lockRaf>;

        virtualinvoke $r3.<java.io.RandomAccessFile: void close()>();

        return;
    }

    private java.util.List loadExistingExtractions(android.content.Context, java.lang.String) throws java.io.IOException
    {
        androidx.multidex.MultiDexExtractor r0;
        android.content.Context r1;
        java.lang.String r2, r3, r6, $r10, $r16, $r27, $r30, $r35, $r40, $r55;
        android.content.SharedPreferences r4;
        int i0, $i5, i11;
        java.util.ArrayList r5, $r17;
        androidx.multidex.MultiDexExtractor$ExtractedDex r7, $r22;
        long l1, l2, l3, $l6, $l8, $l9;
        java.lang.StringBuilder $r8, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r25, $r26, $r28, $r29, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r39, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54;
        java.io.File $r9, $r23;
        boolean $z0;
        java.io.IOException $r24, $r41;
        byte $b7, $b10;

        r0 := @this: androidx.multidex.MultiDexExtractor;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", "loading existing secondary dex files");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<androidx.multidex.MultiDexExtractor: java.io.File sourceApk>;

        $r10 = virtualinvoke $r9.<java.io.File: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".classes");

        r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = staticinvoke <androidx.multidex.MultiDexExtractor: android.content.SharedPreferences getMultiDexPreferences(android.content.Context)>(r1);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dex.number");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = interfaceinvoke r4.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r16, 1);

        $r17 = new java.util.ArrayList;

        $i5 = i0 - 1;

        specialinvoke $r17.<java.util.ArrayList: void <init>(int)>($i5);

        r5 = $r17;

        i11 = 2;

     label1:
        if i11 > i0 goto label6;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".zip");

        r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = new androidx.multidex.MultiDexExtractor$ExtractedDex;

        $r23 = r0.<androidx.multidex.MultiDexExtractor: java.io.File dexDir>;

        specialinvoke $r22.<androidx.multidex.MultiDexExtractor$ExtractedDex: void <init>(java.io.File,java.lang.String)>($r23, r6);

        r7 = $r22;

        $z0 = virtualinvoke r7.<androidx.multidex.MultiDexExtractor$ExtractedDex: boolean isFile()>();

        if $z0 == 0 goto label4;

        $l6 = staticinvoke <androidx.multidex.MultiDexExtractor: long getZipCrc(java.io.File)>(r7);

        r7.<androidx.multidex.MultiDexExtractor$ExtractedDex: long crc> = $l6;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dex.crc.");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        l1 = interfaceinvoke r4.<android.content.SharedPreferences: long getLong(java.lang.String,long)>($r35, -1L);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dex.time.");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        l2 = interfaceinvoke r4.<android.content.SharedPreferences: long getLong(java.lang.String,long)>($r40, -1L);

        l3 = virtualinvoke r7.<androidx.multidex.MultiDexExtractor$ExtractedDex: long lastModified()>();

        $b7 = l2 cmp l3;

        if $b7 != 0 goto label2;

        $l9 = r7.<androidx.multidex.MultiDexExtractor$ExtractedDex: long crc>;

        $b10 = l1 cmp $l9;

        if $b10 == 0 goto label3;

     label2:
        $r41 = new java.io.IOException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid extracted dex: ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (key \"");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"), expected modification time: ");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", modification time: ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected crc: ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", file crc: ");

        $l8 = r7.<androidx.multidex.MultiDexExtractor$ExtractedDex: long crc>;

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.io.IOException: void <init>(java.lang.String)>($r55);

        throw $r41;

     label3:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r7);

        goto label5;

     label4:
        $r24 = new java.io.IOException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing extracted secondary dex file \'");

        $r27 = virtualinvoke r7.<androidx.multidex.MultiDexExtractor$ExtractedDex: java.lang.String getPath()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>($r30);

        throw $r24;

     label5:
        i11 = i11 + 1;

        goto label1;

     label6:
        return r5;
    }

    private static boolean isModified(android.content.Context, java.io.File, long, java.lang.String)
    {
        android.content.Context r0;
        java.io.File r1;
        long l0, $l1, $l2, $l4;
        java.lang.String r2, $r7, $r11;
        android.content.SharedPreferences r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10;
        byte $b3, $b5;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.io.File;

        l0 := @parameter2: long;

        r2 := @parameter3: java.lang.String;

        r3 = staticinvoke <androidx.multidex.MultiDexExtractor: android.content.SharedPreferences getMultiDexPreferences(android.content.Context)>(r0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timestamp");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $l1 = interfaceinvoke r3.<android.content.SharedPreferences: long getLong(java.lang.String,long)>($r7, -1L);

        $l2 = staticinvoke <androidx.multidex.MultiDexExtractor: long getTimeStamp(java.io.File)>(r1);

        $b3 = $l1 cmp $l2;

        if $b3 != 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("crc");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $l4 = interfaceinvoke r3.<android.content.SharedPreferences: long getLong(java.lang.String,long)>($r11, -1L);

        $b5 = $l4 cmp l0;

        if $b5 == 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static long getTimeStamp(java.io.File)
    {
        java.io.File r0;
        byte $b0;
        long l1;

        r0 := @parameter0: java.io.File;

        l1 = virtualinvoke r0.<java.io.File: long lastModified()>();

        $b0 = l1 cmp -1L;

        if $b0 != 0 goto label1;

        l1 = l1 - 1L;

     label1:
        return l1;
    }

    private static long getZipCrc(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        byte $b0;
        long l1;

        r0 := @parameter0: java.io.File;

        l1 = staticinvoke <androidx.multidex.ZipUtil: long getZipCrc(java.io.File)>(r0);

        $b0 = l1 cmp -1L;

        if $b0 != 0 goto label1;

        l1 = l1 - 1L;

     label1:
        return l1;
    }

    private java.util.List performExtractions() throws java.io.IOException
    {
        androidx.multidex.MultiDexExtractor r0;
        java.lang.String r1, r4, $r11, $r21, $r31, $r36, $r40, $r45, $r51, $r57, $r60, $r63, $r69, $r71, $r74;
        java.util.ArrayList r2, $r14;
        java.util.zip.ZipFile r3, $r15;
        androidx.multidex.MultiDexExtractor$ExtractedDex r5, $r26;
        java.lang.Throwable r6, r7, r8, $r64, $r65, $r66, $r72, r75;
        java.lang.StringBuilder $r9, $r12, $r13, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r28, $r29, $r30, $r32, $r33, $r34, $r35, $r38, $r39, $r41, $r42, $r43, $r44, $r46, $r48, $r49, $r50, $r52, $r53, $r54, $r55, $r56, $r58, $r59, $r61, $r62, $r67, $r68, $r70;
        java.io.File $r10, $r16, $r27;
        java.io.IOException $r37;
        long $l1, $l2, $l3;
        boolean $z2, z3;
        int i9, i10;
        java.util.zip.ZipEntry r73;

        r0 := @this: androidx.multidex.MultiDexExtractor;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<androidx.multidex.MultiDexExtractor: java.io.File sourceApk>;

        $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".classes");

        r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<androidx.multidex.MultiDexExtractor: void clearDexDir()>();

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r2 = $r14;

        $r15 = new java.util.zip.ZipFile;

        $r16 = r0.<androidx.multidex.MultiDexExtractor: java.io.File sourceApk>;

        specialinvoke $r15.<java.util.zip.ZipFile: void <init>(java.io.File)>($r16);

        r3 = $r15;

     label01:
        i9 = 2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("classes");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dex");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r73 = virtualinvoke r3.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>($r21);

     label02:
        if r73 == null goto label12;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".zip");

        r4 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = new androidx.multidex.MultiDexExtractor$ExtractedDex;

        $r27 = r0.<androidx.multidex.MultiDexExtractor: java.io.File dexDir>;

        specialinvoke $r26.<androidx.multidex.MultiDexExtractor$ExtractedDex: void <init>(java.io.File,java.lang.String)>($r27, r4);

        r5 = $r26;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r5);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extraction is needed for file ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r31);

        i10 = 0;

        z3 = 0;

     label03:
        if i10 >= 3 goto label10;

        if z3 != 0 goto label10;

        i10 = i10 + 1;

        staticinvoke <androidx.multidex.MultiDexExtractor: void extract(java.util.zip.ZipFile,java.util.zip.ZipEntry,java.io.File,java.lang.String)>(r3, r73, r5, r1);

     label04:
        $l1 = staticinvoke <androidx.multidex.MultiDexExtractor: long getZipCrc(java.io.File)>(r5);

        r5.<androidx.multidex.MultiDexExtractor$ExtractedDex: long crc> = $l1;

        z3 = 1;

     label05:
        goto label07;

     label06:
        $r66 := @caughtexception;

        r6 = $r66;

        z3 = 0;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read crc from ");

        $r69 = virtualinvoke r5.<androidx.multidex.MultiDexExtractor$ExtractedDex: java.lang.String getAbsolutePath()>();

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", $r71, r6);

     label07:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extraction ");

        if z3 == 0 goto label08;

        $r74 = "succeeded";

        goto label09;

     label08:
        $r74 = "failed";

     label09:
        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r51 = virtualinvoke r5.<androidx.multidex.MultiDexExtractor$ExtractedDex: java.lang.String getAbsolutePath()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': length ");

        $l2 = virtualinvoke r5.<androidx.multidex.MultiDexExtractor$ExtractedDex: long length()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - crc: ");

        $l3 = r5.<androidx.multidex.MultiDexExtractor$ExtractedDex: long crc>;

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r57);

        if z3 != 0 goto label03;

        virtualinvoke r5.<androidx.multidex.MultiDexExtractor$ExtractedDex: boolean delete()>();

        $z2 = virtualinvoke r5.<androidx.multidex.MultiDexExtractor$ExtractedDex: boolean exists()>();

        if $z2 == 0 goto label03;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete corrupted secondary dex \'");

        $r60 = virtualinvoke r5.<androidx.multidex.MultiDexExtractor$ExtractedDex: java.lang.String getPath()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MultiDex", $r63);

        goto label03;

     label10:
        if z3 != 0 goto label11;

        $r37 = new java.io.IOException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create zip file ");

        $r40 = virtualinvoke r5.<androidx.multidex.MultiDexExtractor$ExtractedDex: java.lang.String getAbsolutePath()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for secondary dex (");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.io.IOException: void <init>(java.lang.String)>($r45);

        throw $r37;

     label11:
        i9 = i9 + 1;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("classes");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dex");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        r73 = virtualinvoke r3.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>($r36);

        goto label02;

     label12:
        virtualinvoke r3.<java.util.zip.ZipFile: void close()>();

     label13:
        goto label20;

     label14:
        $r64 := @caughtexception;

        r75 = $r64;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "Failed to close resource", r75);

        goto label20;

     label15:
        $r65 := @caughtexception;

        r7 = $r65;

     label16:
        virtualinvoke r3.<java.util.zip.ZipFile: void close()>();

     label17:
        goto label19;

     label18:
        $r72 := @caughtexception;

        r8 = $r72;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "Failed to close resource", r8);

     label19:
        throw r7;

     label20:
        return r2;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label01 to label12 with label15;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private static void putStoredApkInfo(android.content.Context, java.lang.String, long, long, java.util.List)
    {
        android.content.Context r0;
        java.lang.String r1, $r10, $r15, $r20, $r27, $r33;
        long l0, l1, $l4, $l5;
        java.util.List r2;
        android.content.SharedPreferences r3;
        android.content.SharedPreferences$Editor r4;
        java.util.Iterator r5;
        androidx.multidex.MultiDexExtractor$ExtractedDex r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r12, $r13, $r14, $r17, $r18, $r19, $r23, $r24, $r25, $r26, $r29, $r30, $r31, $r32;
        int $i2, $i3, i6;
        boolean $z0;
        java.lang.Object $r22;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        r2 := @parameter4: java.util.List;

        r3 = staticinvoke <androidx.multidex.MultiDexExtractor: android.content.SharedPreferences getMultiDexPreferences(android.content.Context)>(r0);

        r4 = interfaceinvoke r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timestamp");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r10, l0);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("crc");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r15, l1);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dex.number");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        $i3 = $i2 + 1;

        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r20, $i3);

        i6 = 2;

        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r22 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.multidex.MultiDexExtractor$ExtractedDex) $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dex.crc.");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $l4 = r6.<androidx.multidex.MultiDexExtractor$ExtractedDex: long crc>;

        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r27, $l4);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dex.time.");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $l5 = virtualinvoke r6.<androidx.multidex.MultiDexExtractor$ExtractedDex: long lastModified()>();

        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>($r33, $l5);

        i6 = i6 + 1;

        goto label1;

     label2:
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    private static android.content.SharedPreferences getMultiDexPreferences(android.content.Context)
    {
        android.content.Context r0;
        int $i0;
        android.content.SharedPreferences $r1;
        byte $b1;

        r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 11 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 4;

     label2:
        $r1 = virtualinvoke r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("multidex.version", $b1);

        return $r1;
    }

    private void clearDexDir()
    {
        androidx.multidex.MultiDexExtractor r0;
        java.io.File[] r1, r2;
        int i0, i6;
        java.io.File r3, $r5, $r25;
        androidx.multidex.MultiDexExtractor$1 $r4;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r16, $r18, $r19, $r21, $r23, $r24, $r27, $r28;
        java.lang.String $r8, $r12, $r15, $r17, $r20, $r22, $r26, $r29;
        long $l1;
        boolean $z0;

        r0 := @this: androidx.multidex.MultiDexExtractor;

        $r5 = r0.<androidx.multidex.MultiDexExtractor: java.io.File dexDir>;

        $r4 = new androidx.multidex.MultiDexExtractor$1;

        specialinvoke $r4.<androidx.multidex.MultiDexExtractor$1: void <init>(androidx.multidex.MultiDexExtractor)>(r0);

        r1 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r4);

        if r1 != null goto label1;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to list secondary dex dir content (");

        $r25 = r0.<androidx.multidex.MultiDexExtractor: java.io.File dexDir>;

        $r26 = virtualinvoke $r25.<java.io.File: java.lang.String getPath()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MultiDex", $r29);

        return;

     label1:
        r2 = r1;

        i0 = lengthof r2;

        i6 = 0;

     label2:
        if i6 >= i0 goto label5;

        r3 = r2[i6];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to delete old file ");

        $r8 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of size ");

        $l1 = virtualinvoke r3.<java.io.File: long length()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r12);

        $z0 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label3;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete old file ");

        $r20 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MultiDex", $r22);

        goto label4;

     label3:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleted old file ");

        $r15 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r17);

     label4:
        i6 = i6 + 1;

        goto label2;

     label5:
        return;
    }

    private static void extract(java.util.zip.ZipFile, java.util.zip.ZipEntry, java.io.File, java.lang.String) throws java.io.IOException, java.io.FileNotFoundException
    {
        java.util.zip.ZipFile r0;
        java.util.zip.ZipEntry r1, r6, r57;
        java.io.File r2, r5, $r14;
        java.lang.String r3, $r13, $r17, $r19, $r26, $r28, $r32, $r35, $r38, $r42, $r45, $r48;
        java.io.InputStream r4;
        byte[] r7;
        java.lang.Throwable r8, r9, $r49, $r50;
        java.lang.StringBuilder $r11, $r12, $r16, $r18, $r25, $r27, $r31, $r33, $r34, $r36, $r37, $r41, $r43, $r44, $r46, $r47, r52, r53, r58, r60, r61;
        long $l0;
        boolean $z0, $z1;
        java.util.zip.ZipOutputStream r51, r56;
        int i1;
        java.io.FileOutputStream r54;
        java.io.BufferedOutputStream r55;
        java.io.IOException r59, r62;
        java.io.Closeable r63, r64;

        r0 := @parameter0: java.util.zip.ZipFile;

        r1 := @parameter1: java.util.zip.ZipEntry;

        r2 := @parameter2: java.io.File;

        r3 := @parameter3: java.lang.String;

        r4 = virtualinvoke r0.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r1);

        r52 = new java.lang.StringBuilder;

        specialinvoke r52.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tmp-");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke r2.<java.io.File: java.io.File getParentFile()>();

        r5 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>($r13, ".zip", $r14);

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting ");

        $r17 = virtualinvoke r5.<java.io.File: java.lang.String getPath()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r19);

     label01:
        r56 = new java.util.zip.ZipOutputStream;

        r55 = new java.io.BufferedOutputStream;

        r54 = new java.io.FileOutputStream;

        specialinvoke r54.<java.io.FileOutputStream: void <init>(java.io.File)>(r5);

        specialinvoke r55.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r54);

        specialinvoke r56.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>(r55);

        r51 = r56;

     label02:
        r57 = new java.util.zip.ZipEntry;

        specialinvoke r57.<java.util.zip.ZipEntry: void <init>(java.lang.String)>("classes.dex");

        r6 = r57;

        $l0 = virtualinvoke r1.<java.util.zip.ZipEntry: long getTime()>();

        virtualinvoke r6.<java.util.zip.ZipEntry: void setTime(long)>($l0);

        virtualinvoke r51.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>(r6);

        r7 = newarray (byte)[16384];

        i1 = virtualinvoke r4.<java.io.InputStream: int read(byte[])>(r7);

     label03:
        if i1 == -1 goto label04;

        virtualinvoke r51.<java.util.zip.ZipOutputStream: void write(byte[],int,int)>(r7, 0, i1);

        i1 = virtualinvoke r4.<java.io.InputStream: int read(byte[])>(r7);

        goto label03;

     label04:
        virtualinvoke r51.<java.util.zip.ZipOutputStream: void closeEntry()>();

     label05:
        virtualinvoke r51.<java.util.zip.ZipOutputStream: void close()>();

        goto label08;

     label06:
        $r50 := @caughtexception;

        r8 = $r50;

     label07:
        virtualinvoke r51.<java.util.zip.ZipOutputStream: void close()>();

        throw r8;

     label08:
        $z0 = virtualinvoke r5.<java.io.File: boolean setReadOnly()>();

        if $z0 != 0 goto label09;

        r59 = new java.io.IOException;

        r58 = new java.lang.StringBuilder;

        specialinvoke r58.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to mark readonly \"");

        $r42 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" (tmp of \"");

        $r45 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\")");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r59.<java.io.IOException: void <init>(java.lang.String)>($r48);

        throw r59;

     label09:
        r60 = new java.lang.StringBuilder;

        specialinvoke r60.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Renaming to ");

        $r26 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MultiDex", $r28);

        $z1 = virtualinvoke r5.<java.io.File: boolean renameTo(java.io.File)>(r2);

        if $z1 != 0 goto label10;

        r62 = new java.io.IOException;

        r61 = new java.lang.StringBuilder;

        specialinvoke r61.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to rename \"");

        $r32 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" to \"");

        $r35 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r62.<java.io.IOException: void <init>(java.lang.String)>($r38);

        throw r62;

     label10:
        r63 = (java.io.Closeable) r4;

        staticinvoke <androidx.multidex.MultiDexExtractor: void closeQuietly(java.io.Closeable)>(r63);

        virtualinvoke r5.<java.io.File: boolean delete()>();

        goto label13;

     label11:
        $r49 := @caughtexception;

        r9 = $r49;

     label12:
        r64 = (java.io.Closeable) r4;

        staticinvoke <androidx.multidex.MultiDexExtractor: void closeQuietly(java.io.Closeable)>(r64);

        virtualinvoke r5.<java.io.File: boolean delete()>();

        throw r9;

     label13:
        return;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private static void closeQuietly(java.io.Closeable)
    {
        java.io.Closeable r0;
        java.lang.Throwable r1, $r2;

        r0 := @parameter0: java.io.Closeable;

     label1:
        interfaceinvoke r0.<java.io.Closeable: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MultiDex", "Failed to close resource", r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

androidx.multidex.MultiDexExtractor$1
<androidx.multidex.MultiDexExtractor$1: androidx.multidex.MultiDexExtractor this$0>
    void <init>(androidx.multidex.MultiDexExtractor)
    {
        androidx.multidex.MultiDexExtractor$1 r0;
        androidx.multidex.MultiDexExtractor r1;

        r0 := @this: androidx.multidex.MultiDexExtractor$1;

        r1 := @parameter0: androidx.multidex.MultiDexExtractor;

        r0.<androidx.multidex.MultiDexExtractor$1: androidx.multidex.MultiDexExtractor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean accept(java.io.File)
    {
        androidx.multidex.MultiDexExtractor$1 r0;
        java.io.File r1;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.multidex.MultiDexExtractor$1;

        r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("MultiDex.lock");

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

androidx.multidex.MultiDexExtractor$ExtractedDex
<androidx.multidex.MultiDexExtractor$ExtractedDex: long crc>
    public void <init>(java.io.File, java.lang.String)
    {
        androidx.multidex.MultiDexExtractor$ExtractedDex r0;
        java.io.File r1;
        java.lang.String r2;

        r0 := @this: androidx.multidex.MultiDexExtractor$ExtractedDex;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, r2);

        r0.<androidx.multidex.MultiDexExtractor$ExtractedDex: long crc> = -1L;

        return;
    }

