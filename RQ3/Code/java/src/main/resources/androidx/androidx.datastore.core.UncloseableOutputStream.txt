androidx.datastore.core.UncloseableOutputStream
<androidx.datastore.core.UncloseableOutputStream: java.io.FileOutputStream fileOutputStream>
    public void <init>(java.io.FileOutputStream)
    {
        androidx.datastore.core.UncloseableOutputStream r0;
        java.io.FileOutputStream r1;

        r0 := @this: androidx.datastore.core.UncloseableOutputStream;

        r1 := @parameter0: java.io.FileOutputStream;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "fileOutputStream");

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<androidx.datastore.core.UncloseableOutputStream: java.io.FileOutputStream fileOutputStream> = r1;

        return;
    }

    public final java.io.FileOutputStream getFileOutputStream()
    {
        androidx.datastore.core.UncloseableOutputStream r0;
        java.io.FileOutputStream $r1;

        r0 := @this: androidx.datastore.core.UncloseableOutputStream;

        $r1 = r0.<androidx.datastore.core.UncloseableOutputStream: java.io.FileOutputStream fileOutputStream>;

        return $r1;
    }

    public void write(int)
    {
        androidx.datastore.core.UncloseableOutputStream r0;
        int i0;
        java.io.FileOutputStream $r1;

        r0 := @this: androidx.datastore.core.UncloseableOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.datastore.core.UncloseableOutputStream: java.io.FileOutputStream fileOutputStream>;

        virtualinvoke $r1.<java.io.FileOutputStream: void write(int)>(i0);

        return;
    }

    public void write(byte[])
    {
        androidx.datastore.core.UncloseableOutputStream r0;
        byte[] r1;
        java.io.FileOutputStream $r2;

        r0 := @this: androidx.datastore.core.UncloseableOutputStream;

        r1 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "b");

        $r2 = r0.<androidx.datastore.core.UncloseableOutputStream: java.io.FileOutputStream fileOutputStream>;

        virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[])>(r1);

        return;
    }

    public void write(byte[], int, int)
    {
        androidx.datastore.core.UncloseableOutputStream r0;
        byte[] r1;
        int i0, i1;
        java.io.FileOutputStream $r2;

        r0 := @this: androidx.datastore.core.UncloseableOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bytes");

        $r2 = r0.<androidx.datastore.core.UncloseableOutputStream: java.io.FileOutputStream fileOutputStream>;

        virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void close()
    {
        androidx.datastore.core.UncloseableOutputStream r0;

        r0 := @this: androidx.datastore.core.UncloseableOutputStream;

        return;
    }

    public void flush()
    {
        androidx.datastore.core.UncloseableOutputStream r0;
        java.io.FileOutputStream $r1;

        r0 := @this: androidx.datastore.core.UncloseableOutputStream;

        $r1 = r0.<androidx.datastore.core.UncloseableOutputStream: java.io.FileOutputStream fileOutputStream>;

        virtualinvoke $r1.<java.io.FileOutputStream: void flush()>();

        return;
    }

