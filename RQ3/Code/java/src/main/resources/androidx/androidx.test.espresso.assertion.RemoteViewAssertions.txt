androidx.test.espresso.assertion.RemoteViewAssertions
    private void <init>()
    {
        androidx.test.espresso.assertion.RemoteViewAssertions r0;

        r0 := @this: androidx.test.espresso.assertion.RemoteViewAssertions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void init(androidx.test.espresso.remote.RemoteDescriptorRegistry)
    {
        androidx.test.espresso.remote.RemoteDescriptorRegistry r0;
        androidx.test.espresso.remote.RemoteDescriptor[] r1;
        androidx.test.espresso.remote.RemoteDescriptor$Builder $r2, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16, r19, r20, r21, r22;
        androidx.test.espresso.remote.RemoteDescriptor $r5, $r9, $r13, $r17;
        java.util.List $r18;

        r0 := @parameter0: androidx.test.espresso.remote.RemoteDescriptorRegistry;

        r1 = newarray (androidx.test.espresso.remote.RemoteDescriptor)[4];

        r19 = new androidx.test.espresso.remote.RemoteDescriptor$Builder;

        specialinvoke r19.<androidx.test.espresso.remote.RemoteDescriptor$Builder: void <init>()>();

        $r2 = virtualinvoke r19.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor$Builder setInstanceType(java.lang.Class)>(class "Landroidx/test/espresso/assertion/ViewAssertions$MatchesViewAssertion;");

        $r3 = virtualinvoke $r2.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor$Builder setRemoteType(java.lang.Class)>(class "Landroidx/test/espresso/remote/GenericRemoteMessage;");

        $r4 = virtualinvoke $r3.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor$Builder setProtoType(java.lang.Class)>(class "Landroidx/test/espresso/proto/assertion/ViewAssertions$MatchesViewAssertionProto;");

        $r5 = virtualinvoke $r4.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor build()>();

        r1[0] = $r5;

        r20 = new androidx.test.espresso.remote.RemoteDescriptor$Builder;

        specialinvoke r20.<androidx.test.espresso.remote.RemoteDescriptor$Builder: void <init>()>();

        $r6 = virtualinvoke r20.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor$Builder setInstanceType(java.lang.Class)>(class "Landroidx/test/espresso/assertion/ViewAssertions$DoesNotExistViewAssertion;");

        $r7 = virtualinvoke $r6.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor$Builder setRemoteType(java.lang.Class)>(class "Landroidx/test/espresso/remote/GenericRemoteMessage;");

        $r8 = virtualinvoke $r7.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor$Builder setProtoType(java.lang.Class)>(class "Landroidx/test/espresso/proto/assertion/ViewAssertions$DoesNotExistViewAssertionProto;");

        $r9 = virtualinvoke $r8.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor build()>();

        r1[1] = $r9;

        r21 = new androidx.test.espresso.remote.RemoteDescriptor$Builder;

        specialinvoke r21.<androidx.test.espresso.remote.RemoteDescriptor$Builder: void <init>()>();

        $r10 = virtualinvoke r21.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor$Builder setInstanceType(java.lang.Class)>(class "Landroidx/test/espresso/assertion/ViewAssertions$SelectedDescendantsMatchViewAssertion;");

        $r11 = virtualinvoke $r10.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor$Builder setRemoteType(java.lang.Class)>(class "Landroidx/test/espresso/remote/GenericRemoteMessage;");

        $r12 = virtualinvoke $r11.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor$Builder setProtoType(java.lang.Class)>(class "Landroidx/test/espresso/proto/assertion/ViewAssertions$SelectedDescendantsMatchViewAssertionProto;");

        $r13 = virtualinvoke $r12.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor build()>();

        r1[2] = $r13;

        r22 = new androidx.test.espresso.remote.RemoteDescriptor$Builder;

        specialinvoke r22.<androidx.test.espresso.remote.RemoteDescriptor$Builder: void <init>()>();

        $r14 = virtualinvoke r22.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor$Builder setInstanceType(java.lang.Class)>(class "Landroidx/test/espresso/assertion/LayoutAssertions$NoOverlapsViewAssertion;");

        $r15 = virtualinvoke $r14.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor$Builder setRemoteType(java.lang.Class)>(class "Landroidx/test/espresso/remote/GenericRemoteMessage;");

        $r16 = virtualinvoke $r15.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor$Builder setProtoType(java.lang.Class)>(class "Landroidx/test/espresso/proto/assertion/ViewAssertions$NoOverlapsViewAssertionProto;");

        $r17 = virtualinvoke $r16.<androidx.test.espresso.remote.RemoteDescriptor$Builder: androidx.test.espresso.remote.RemoteDescriptor build()>();

        r1[3] = $r17;

        $r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        virtualinvoke r0.<androidx.test.espresso.remote.RemoteDescriptorRegistry: boolean registerRemoteTypeArgs(java.util.List)>($r18);

        return;
    }

