androidx.benchmark.simpleperf.ProfileSession
<androidx.benchmark.simpleperf.ProfileSession: java.lang.String SIMPLEPERF_PATH_IN_IMAGE>
<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState>
<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mAppDataDir>
<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mSimpleperfPath>
<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mSimpleperfDataDir>
<androidx.benchmark.simpleperf.ProfileSession: java.lang.Process mSimpleperfProcess>
<androidx.benchmark.simpleperf.ProfileSession: boolean mTraceOffCpu>
    public void <init>(java.lang.String)
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.lang.String r1, $r6;
        androidx.benchmark.simpleperf.ProfileSession$State $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State NOT_YET_STARTED>;

        r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState> = $r2;

        r0.<androidx.benchmark.simpleperf.ProfileSession: boolean mTraceOffCpu> = 0;

        r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mAppDataDir> = r1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/simpleperf_data");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mSimpleperfDataDir> = $r6;

        return;
    }

    public void <init>()
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.lang.String r1, $r7, $r9, $r12, $r18, $r20, r21;
        androidx.benchmark.simpleperf.ProfileSession$State $r2;
        java.io.FileInputStream $r3;
        int $i0, i2;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r10, $r11, $r16, $r17, $r19;
        java.lang.Error $r13, $r15;
        char $c1;
        java.lang.Throwable $r14, r22;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State NOT_YET_STARTED>;

        r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState> = $r2;

        r0.<androidx.benchmark.simpleperf.ProfileSession: boolean mTraceOffCpu> = 0;

     label1:
        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.lang.String)>("/proc/self/cmdline");

        r21 = specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String readInputStream(java.io.InputStream)>($r3);

        i2 = 0;

     label2:
        $i0 = virtualinvoke r21.<java.lang.String: int length()>();

        if i2 >= $i0 goto label4;

        $c1 = virtualinvoke r21.<java.lang.String: char charAt(int)>(i2);

        if $c1 != 0 goto label3;

        r21 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        goto label4;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        r1 = r21;

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

        r22 = $r14;

        $r15 = new java.lang.Error;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to find packageName: ");

        $r18 = virtualinvoke r22.<java.io.IOException: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.Error: void <init>(java.lang.String)>($r20);

        throw $r15;

     label7:
        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label8;

        $r13 = new java.lang.Error;

        specialinvoke $r13.<java.lang.Error: void <init>(java.lang.String)>("failed to find packageName");

        throw $r13;

     label8:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data/data/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mAppDataDir> = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mAppDataDir>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/simpleperf_data");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mSimpleperfDataDir> = $r12;

        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    public void startRecording(androidx.benchmark.simpleperf.RecordOptions)
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        androidx.benchmark.simpleperf.RecordOptions r1;
        java.util.List $r2;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        r1 := @parameter0: androidx.benchmark.simpleperf.RecordOptions;

        $r2 = virtualinvoke r1.<androidx.benchmark.simpleperf.RecordOptions: java.util.List toRecordArgs()>();

        virtualinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: void startRecording(java.util.List)>($r2);

        return;
    }

    public synchronized void startRecording(java.util.List)
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.util.List r1;
        androidx.benchmark.simpleperf.ProfileSession$State $r2, $r3, $r5, $r9;
        boolean $z0;
        java.lang.String $r4, $r11;
        java.lang.AssertionError $r6;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        r1 := @parameter0: java.util.List;

        $r3 = r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState>;

        $r2 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State NOT_YET_STARTED>;

        if $r3 == $r2 goto label1;

        $r6 = new java.lang.AssertionError;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startRecording: session in wrong state ");

        $r9 = r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>($r11);

        throw $r6;

     label1:
        $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>("--trace-offcpu");

        r0.<androidx.benchmark.simpleperf.ProfileSession: boolean mTraceOffCpu> = $z0;

        $r4 = virtualinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String findSimpleperf()>();

        r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mSimpleperfPath> = $r4;

        specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: void checkIfPerfEnabled()>();

        specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: void createSimpleperfDataDir()>();

        specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: void startSimpleperfRecording(java.util.List)>(r1);

        $r5 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State STARTED>;

        r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState> = $r5;

        return;
    }

    public synchronized void pauseRecording()
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        androidx.benchmark.simpleperf.ProfileSession$State $r1, $r2, $r3, $r8;
        boolean $z0;
        java.lang.AssertionError $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r10;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        $r2 = r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState>;

        $r1 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State STARTED>;

        if $r2 == $r1 goto label1;

        $r5 = new java.lang.AssertionError;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pauseRecording: session in wrong state ");

        $r8 = r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r10);

        throw $r5;

     label1:
        $z0 = r0.<androidx.benchmark.simpleperf.ProfileSession: boolean mTraceOffCpu>;

        if $z0 == 0 goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("--trace-offcpu option doesn\'t work well with pause/resume recording");

        throw $r4;

     label2:
        specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: void sendCmd(java.lang.String)>("pause");

        $r3 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State PAUSED>;

        r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState> = $r3;

        return;
    }

    public synchronized void resumeRecording()
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        androidx.benchmark.simpleperf.ProfileSession$State $r1, $r2, $r3, $r7;
        java.lang.AssertionError $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r9;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        $r2 = r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState>;

        $r1 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State PAUSED>;

        if $r2 == $r1 goto label1;

        $r4 = new java.lang.AssertionError;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resumeRecording: session in wrong state ");

        $r7 = r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r4;

     label1:
        specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: void sendCmd(java.lang.String)>("resume");

        $r3 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State STARTED>;

        r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState> = $r3;

        return;
    }

    public synchronized void stopRecording()
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        androidx.benchmark.simpleperf.ProfileSession$State $r1, $r2, $r5, $r6, $r10, $r13;
        int $i0;
        java.lang.Process $r3;
        java.lang.String $r4, $r12;
        boolean $z0;
        java.lang.AssertionError $r7;
        java.lang.StringBuilder $r8, $r9, $r11;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        $r2 = r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState>;

        $r1 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State STARTED>;

        if $r2 == $r1 goto label1;

        $r6 = r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState>;

        $r5 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State PAUSED>;

        if $r6 == $r5 goto label1;

        $r7 = new java.lang.AssertionError;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopRecording: session in wrong state ");

        $r10 = r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r7;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 29 goto label2;

        $r4 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mSimpleperfPath>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("/system/bin/simpleperf");

        if $z0 == 0 goto label2;

        specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: void destroySimpleperfProcessWithoutClosingStdin()>();

        goto label3;

     label2:
        $r3 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.Process mSimpleperfProcess>;

        virtualinvoke $r3.<java.lang.Process: void destroy()>();

     label3:
        specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: void waitForSimpleperfProcess()>();

        $r13 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State STOPPED>;

        r0.<androidx.benchmark.simpleperf.ProfileSession: androidx.benchmark.simpleperf.ProfileSession$State mState> = $r13;

        return;
    }

    private void destroySimpleperfProcessWithoutClosingStdin()
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.lang.String r1, r2, $r5, $r6, $r7;
        int i0, i1, i2, $i3;
        java.lang.Process $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        $r3 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.Process mSimpleperfProcess>;

        r1 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        r2 = "Process[pid=";

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("Process[pid=");

        if $z0 == 0 goto label1;

        $r5 = "Process[pid=";

        i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(44);

        if i1 <= i0 goto label1;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $i3 = <android.system.OsConstants: int SIGTERM>;

        staticinvoke <android.os.Process: void sendSignal(int,int)>(i2, $i3);

        return;

     label1:
        $r4 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.Process mSimpleperfProcess>;

        virtualinvoke $r4.<java.lang.Process: void destroy()>();

        return;
    }

    private java.lang.String readInputStream(java.io.InputStream)
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.io.InputStream r1;
        java.io.BufferedReader r2, $r5;
        java.lang.String r3;
        java.lang.Throwable r4, $r10;
        java.io.InputStreamReader $r6;
        java.util.stream.Stream $r7;
        java.util.stream.Collector $r8;
        java.lang.Object $r9;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        r1 := @parameter0: java.io.InputStream;

        $r5 = new java.io.BufferedReader;

        $r6 = new java.io.InputStreamReader;

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r1);

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

        r2 = $r5;

        $r7 = virtualinvoke r2.<java.io.BufferedReader: java.util.stream.Stream lines()>();

        $r8 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>("\n");

        $r9 = interfaceinvoke $r7.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r8);

        r3 = (java.lang.String) $r9;

     label1:
        virtualinvoke r2.<java.io.BufferedReader: void close()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

     label4:
        return r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String findSimpleperf()
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        boolean $z0;
        java.lang.Error $r1;
        java.lang.String r2, r3;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        r2 = specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String findSimpleperfInTempDir()>();

        if r2 == null goto label1;

        return r2;

     label1:
        r3 = "/system/bin/simpleperf";

        $z0 = specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: boolean isExecutableFile(java.lang.String)>(r3);

        if $z0 == 0 goto label2;

        return r3;

     label2:
        $r1 = new java.lang.Error;

        specialinvoke $r1.<java.lang.Error: void <init>(java.lang.String)>("can\'t find simpleperf on device. Please run api_profiler.py.");

        throw $r1;
    }

    private boolean isExecutableFile(java.lang.String)
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.lang.String r1;
        java.io.File r2, $r3;
        boolean $z0;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r1);

        r2 = $r3;

        $z0 = virtualinvoke r2.<java.io.File: boolean canExecute()>();

        return $z0;
    }

    private java.lang.String findSimpleperfInTempDir()
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.lang.String r1, r3, r4, $r7;
        java.io.File r2, $r5;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.ProcessBuilder $r10, $r13, $r14, $r17;
        java.lang.String[] $r11, $r12, $r15, $r16;
        java.io.InputStream $r18;
        java.lang.Throwable $r19, $r20, r22, r24;
        java.lang.Process r21, r23;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        r1 = "/data/local/tmp/simpleperf";

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(r1);

        r2 = $r5;

        $z0 = virtualinvoke r2.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mAppDataDir>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/simpleperf");

        r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r10 = new java.lang.ProcessBuilder;

        $r11 = newarray (java.lang.String)[0];

        specialinvoke $r10.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>($r11);

        $r12 = newarray (java.lang.String)[3];

        $r12[0] = "cp";

        $r12[1] = r1;

        $r12[2] = r3;

        $r13 = virtualinvoke $r10.<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.lang.String[])>($r12);

        r21 = virtualinvoke $r13.<java.lang.ProcessBuilder: java.lang.Process start()>();

        virtualinvoke r21.<java.lang.Process: int waitFor()>();

     label03:
        goto label05;

     label04:
        $r20 := @caughtexception;

        r22 = $r20;

        return null;

     label05:
        $z1 = specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: boolean isExecutableFile(java.lang.String)>(r3);

        if $z1 != 0 goto label06;

        return null;

     label06:
        $r14 = new java.lang.ProcessBuilder;

        $r15 = newarray (java.lang.String)[0];

        specialinvoke $r14.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>($r15);

        $r16 = newarray (java.lang.String)[3];

        $r16[0] = r3;

        $r16[1] = "list";

        $r16[2] = "sw";

        $r17 = virtualinvoke $r14.<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.lang.String[])>($r16);

        r23 = virtualinvoke $r17.<java.lang.ProcessBuilder: java.lang.Process start()>();

        virtualinvoke r23.<java.lang.Process: int waitFor()>();

        $r18 = virtualinvoke r23.<java.lang.Process: java.io.InputStream getInputStream()>();

        r4 = specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String readInputStream(java.io.InputStream)>($r18);

        $z2 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("cpu-clock");

        if $z2 != 0 goto label08;

     label07:
        return null;

     label08:
        goto label10;

     label09:
        $r19 := @caughtexception;

        r24 = $r19;

        return null;

     label10:
        return r3;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label06 to label07 with label09;
    }

    private void checkIfPerfEnabled()
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.lang.String r1;
        java.lang.Process r2;
        java.lang.ProcessBuilder $r3, $r6;
        java.lang.String[] $r4, $r5;
        java.io.InputStream $r7;
        boolean $z0;
        java.lang.Error $r8;
        java.lang.Throwable $r9, $r10, r11, r12;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

     label1:
        $r3 = new java.lang.ProcessBuilder;

        $r4 = newarray (java.lang.String)[0];

        specialinvoke $r3.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>($r4);

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "/system/bin/getprop";

        $r5[1] = "security.perf_harden";

        $r6 = virtualinvoke $r3.<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.lang.String[])>($r5);

        r2 = virtualinvoke $r6.<java.lang.ProcessBuilder: java.lang.Process start()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r11 = $r10;

        return;

     label4:
        virtualinvoke r2.<java.lang.Process: int waitFor()>();

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

        r12 = $r9;

     label7:
        $r7 = virtualinvoke r2.<java.lang.Process: java.io.InputStream getInputStream()>();

        r1 = specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String readInputStream(java.io.InputStream)>($r7);

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("1");

        if $z0 == 0 goto label8;

        $r8 = new java.lang.Error;

        specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>("linux perf events aren\'t enabled on the device. Please run api_profiler.py.");

        throw $r8;

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label4 to label5 with label6;
    }

    private void createSimpleperfDataDir()
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.io.File r1, $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        $r2 = new java.io.File;

        $r3 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mSimpleperfDataDir>;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        r1 = $r2;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label1;

        virtualinvoke r1.<java.io.File: boolean mkdir()>();

     label1:
        return;
    }

    private void createSimpleperfProcess(java.util.List)
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.util.List r1;
        java.lang.ProcessBuilder r2, $r4;
        java.lang.Throwable r3, $r8;
        java.io.File $r5;
        java.lang.String $r6, $r12, $r14;
        java.lang.Process $r7;
        java.lang.Error $r9;
        java.lang.StringBuilder $r10, $r11, $r13;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        r1 := @parameter0: java.util.List;

        $r4 = new java.lang.ProcessBuilder;

        specialinvoke $r4.<java.lang.ProcessBuilder: void <init>(java.util.List)>(r1);

        $r5 = new java.io.File;

        $r6 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mSimpleperfDataDir>;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6);

        r2 = virtualinvoke $r4.<java.lang.ProcessBuilder: java.lang.ProcessBuilder directory(java.io.File)>($r5);

     label1:
        $r7 = virtualinvoke r2.<java.lang.ProcessBuilder: java.lang.Process start()>();

        r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.Process mSimpleperfProcess> = $r7;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        $r9 = new java.lang.Error;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to create simpleperf process: ");

        $r12 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.Error: void <init>(java.lang.String)>($r14);

        throw $r9;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void waitForSimpleperfProcess()
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.lang.Process $r1;
        java.lang.AssertionError $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7, r8;
        int i0;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

     label1:
        $r1 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.Process mSimpleperfProcess>;

        i0 = virtualinvoke $r1.<java.lang.Process: int waitFor()>();

        if i0 == 0 goto label2;

        $r2 = new java.lang.AssertionError;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("simpleperf exited with error: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r2;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r8 = $r7;

     label4:
        r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.Process mSimpleperfProcess> = null;

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void convertSimpleperfOutputToProto(java.lang.String, java.lang.String)
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.lang.String r1, r2, $r5;
        java.util.ArrayList r3, $r4;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r3 = $r4;

        $r5 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mSimpleperfPath>;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("report-sample");

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("--protobuf");

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("--show-callchain");

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("-i");

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>("-o");

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: void createSimpleperfProcess(java.util.List)>(r3);

        specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: void waitForSimpleperfProcess()>();

        return;
    }

    private void startSimpleperfRecording(java.util.List)
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.util.List r1;
        java.util.ArrayList r2, $r4;
        java.lang.String r3, $r5;
        boolean $z10;
        java.lang.Error $r6;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        r1 := @parameter0: java.util.List;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        $r5 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String mSimpleperfPath>;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("record");

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("--log-to-android-buffer");

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("--log");

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("debug");

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("--stdio-controls-profiling");

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("--in-app");

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("--tracepoint-events");

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("/data/local/tmp/tracepoint_events");

        virtualinvoke r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r1);

        specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: void createSimpleperfProcess(java.util.List)>(r2);

        r3 = specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String readReply()>();

        $z10 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("started");

        if $z10 != 0 goto label1;

        $r6 = new java.lang.Error;

        specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>("failed to receive simpleperf start flag");

        throw $r6;

     label1:
        return;
    }

    private void sendCmd(java.lang.String)
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.lang.Throwable r1, $r16;
        java.lang.StringBuilder $r2, $r3, $r4, $r12, $r13, $r14, $r18, $r19, $r21;
        java.lang.Process $r5, $r8;
        java.io.OutputStream $r6, $r9;
        byte[] $r7;
        java.lang.String $r10, $r15, $r20, $r22, r23, r24;
        boolean $z0;
        java.lang.Error $r11, $r17;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        r23 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r24 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.Process mSimpleperfProcess>;

        $r6 = virtualinvoke $r5.<java.lang.Process: java.io.OutputStream getOutputStream()>();

        $r7 = virtualinvoke r24.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r7);

        $r8 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.Process mSimpleperfProcess>;

        $r9 = virtualinvoke $r8.<java.lang.Process: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r9.<java.io.OutputStream: void flush()>();

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        r1 = $r16;

        $r17 = new java.lang.Error;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to send cmd to simpleperf: ");

        $r20 = virtualinvoke r1.<java.io.IOException: java.lang.String getMessage()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.Error: void <init>(java.lang.String)>($r22);

        throw $r17;

     label4:
        $r10 = specialinvoke r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.String readReply()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("ok");

        if $z0 != 0 goto label5;

        $r11 = new java.lang.Error;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to run cmd in simpleperf: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.Error: void <init>(java.lang.String)>($r15);

        throw $r11;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.lang.String readReply()
    {
        androidx.benchmark.simpleperf.ProfileSession r0;
        java.lang.Throwable r1, $r7;
        java.lang.Process $r2;
        java.io.InputStream $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        char $c0;
        java.lang.String r8;
        int i1;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession;

        r8 = "";

     label1:
        i1 = -1;

     label2:
        $r2 = r0.<androidx.benchmark.simpleperf.ProfileSession: java.lang.Process mSimpleperfProcess>;

        $r3 = virtualinvoke $r2.<java.lang.Process: java.io.InputStream getInputStream()>();

        i1 = virtualinvoke $r3.<java.io.InputStream: int read()>();

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r1 = $r7;

     label5:
        if i1 == -1 goto label7;

        if i1 != 10 goto label6;

        goto label7;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $c0 = (char) i1;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label7:
        return r8;

        catch java.io.IOException from label2 to label3 with label4;
    }

androidx.benchmark.simpleperf.ProfileSession$State
<androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State NOT_YET_STARTED>
<androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State STARTED>
<androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State PAUSED>
<androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State STOPPED>
<androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State[] $VALUES>
    public static androidx.benchmark.simpleperf.ProfileSession$State[] values()
    {
        androidx.benchmark.simpleperf.ProfileSession$State[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.benchmark.simpleperf.ProfileSession$State[]) $r1;

        return $r2;
    }

    public static androidx.benchmark.simpleperf.ProfileSession$State valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.benchmark.simpleperf.ProfileSession$State $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/benchmark/simpleperf/ProfileSession$State;", r0);

        $r2 = (androidx.benchmark.simpleperf.ProfileSession$State) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.benchmark.simpleperf.ProfileSession$State r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.benchmark.simpleperf.ProfileSession$State;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        androidx.benchmark.simpleperf.ProfileSession$State $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        androidx.benchmark.simpleperf.ProfileSession$State[] $r4;

        $r0 = new androidx.benchmark.simpleperf.ProfileSession$State;

        specialinvoke $r0.<androidx.benchmark.simpleperf.ProfileSession$State: void <init>(java.lang.String,int)>("NOT_YET_STARTED", 0);

        <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State NOT_YET_STARTED> = $r0;

        $r1 = new androidx.benchmark.simpleperf.ProfileSession$State;

        specialinvoke $r1.<androidx.benchmark.simpleperf.ProfileSession$State: void <init>(java.lang.String,int)>("STARTED", 1);

        <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State STARTED> = $r1;

        $r2 = new androidx.benchmark.simpleperf.ProfileSession$State;

        specialinvoke $r2.<androidx.benchmark.simpleperf.ProfileSession$State: void <init>(java.lang.String,int)>("PAUSED", 2);

        <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State PAUSED> = $r2;

        $r3 = new androidx.benchmark.simpleperf.ProfileSession$State;

        specialinvoke $r3.<androidx.benchmark.simpleperf.ProfileSession$State: void <init>(java.lang.String,int)>("STOPPED", 3);

        <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State STOPPED> = $r3;

        $r4 = newarray (androidx.benchmark.simpleperf.ProfileSession$State)[4];

        $r5 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State NOT_YET_STARTED>;

        $r4[0] = $r5;

        $r6 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State STARTED>;

        $r4[1] = $r6;

        $r7 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State PAUSED>;

        $r4[2] = $r7;

        $r8 = <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State STOPPED>;

        $r4[3] = $r8;

        <androidx.benchmark.simpleperf.ProfileSession$State: androidx.benchmark.simpleperf.ProfileSession$State[] $VALUES> = $r4;

        return;
    }

