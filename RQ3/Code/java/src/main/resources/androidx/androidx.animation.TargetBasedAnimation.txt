androidx.animation.TargetBasedAnimation
<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector startValueVector>
<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector endValueVector>
<androidx.animation.TargetBasedAnimation: long durationMillis>
<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector endVelocity>
<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationSpec animationSpec>
<androidx.animation.TargetBasedAnimation: java.lang.Object endValue>
<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector startVelocityVector>
<androidx.animation.TargetBasedAnimation: androidx.animation.TwoWayConverter converter>
    public java.lang.Object getValue(long)
    {
        androidx.animation.TargetBasedAnimation r0;
        long l0, $l1;
        byte $b2;
        androidx.animation.TwoWayConverter $r1;
        kotlin.jvm.functions.Function1 $r2;
        androidx.animation.AnimationVector $r3, $r4, $r5, $r7;
        androidx.animation.AnimationSpec $r6;
        java.lang.Object $r8;

        r0 := @this: androidx.animation.TargetBasedAnimation;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<androidx.animation.TargetBasedAnimation: long getDurationMillis()>();

        $b2 = l0 cmp $l1;

        if $b2 >= 0 goto label1;

        $r1 = virtualinvoke r0.<androidx.animation.TargetBasedAnimation: androidx.animation.TwoWayConverter getConverter()>();

        $r2 = interfaceinvoke $r1.<androidx.animation.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertFromVector()>();

        $r6 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationSpec animationSpec>;

        $r5 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector startValueVector>;

        $r4 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector endValueVector>;

        $r3 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector startVelocityVector>;

        $r7 = interfaceinvoke $r6.<androidx.animation.AnimationSpec: androidx.animation.AnimationVector getValue(long,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>(l0, $r5, $r4, $r3);

        $r8 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        goto label2;

     label1:
        $r8 = r0.<androidx.animation.TargetBasedAnimation: java.lang.Object endValue>;

     label2:
        return $r8;
    }

    public long getDurationMillis()
    {
        androidx.animation.TargetBasedAnimation r0;
        long $l0;

        r0 := @this: androidx.animation.TargetBasedAnimation;

        $l0 = r0.<androidx.animation.TargetBasedAnimation: long durationMillis>;

        return $l0;
    }

    public androidx.animation.AnimationVector getVelocityVector(long)
    {
        androidx.animation.TargetBasedAnimation r0;
        long l0, $l1;
        byte $b2;
        androidx.animation.AnimationVector $r1, $r2, $r3, $r5;
        androidx.animation.AnimationSpec $r4;

        r0 := @this: androidx.animation.TargetBasedAnimation;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<androidx.animation.TargetBasedAnimation: long getDurationMillis()>();

        $b2 = l0 cmp $l1;

        if $b2 >= 0 goto label1;

        $r4 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationSpec animationSpec>;

        $r3 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector startValueVector>;

        $r2 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector endValueVector>;

        $r1 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector startVelocityVector>;

        $r5 = interfaceinvoke $r4.<androidx.animation.AnimationSpec: androidx.animation.AnimationVector getVelocity(long,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>(l0, $r3, $r2, $r1);

        goto label2;

     label1:
        $r5 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector endVelocity>;

     label2:
        return $r5;
    }

    public final java.lang.Object getEndValue()
    {
        androidx.animation.TargetBasedAnimation r0;
        java.lang.Object $r1;

        r0 := @this: androidx.animation.TargetBasedAnimation;

        $r1 = r0.<androidx.animation.TargetBasedAnimation: java.lang.Object endValue>;

        return $r1;
    }

    public androidx.animation.TwoWayConverter getConverter()
    {
        androidx.animation.TargetBasedAnimation r0;
        androidx.animation.TwoWayConverter $r1;

        r0 := @this: androidx.animation.TargetBasedAnimation;

        $r1 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.TwoWayConverter converter>;

        return $r1;
    }

    public void <init>(androidx.animation.AnimationSpec, java.lang.Object, java.lang.Object, androidx.animation.AnimationVector, androidx.animation.TwoWayConverter)
    {
        androidx.animation.TargetBasedAnimation r0;
        androidx.animation.AnimationSpec r1, $r18, $r22;
        java.lang.Object r2, r3, $r8, $r12, $r13;
        androidx.animation.AnimationVector r4, $r9, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r23;
        androidx.animation.TwoWayConverter r5, $r6, $r10;
        kotlin.jvm.functions.Function1 $r7, $r11;
        long $l0;

        r0 := @this: androidx.animation.TargetBasedAnimation;

        r1 := @parameter0: androidx.animation.AnimationSpec;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: androidx.animation.AnimationVector;

        r5 := @parameter4: androidx.animation.TwoWayConverter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animationSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "startVelocityVector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "converter");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationSpec animationSpec> = r1;

        r0.<androidx.animation.TargetBasedAnimation: java.lang.Object endValue> = r3;

        r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector startVelocityVector> = r4;

        r0.<androidx.animation.TargetBasedAnimation: androidx.animation.TwoWayConverter converter> = r5;

        $r6 = virtualinvoke r0.<androidx.animation.TargetBasedAnimation: androidx.animation.TwoWayConverter getConverter()>();

        $r7 = interfaceinvoke $r6.<androidx.animation.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r8 = interfaceinvoke $r7.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r2);

        $r9 = (androidx.animation.AnimationVector) $r8;

        r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector startValueVector> = $r9;

        $r10 = virtualinvoke r0.<androidx.animation.TargetBasedAnimation: androidx.animation.TwoWayConverter getConverter()>();

        $r11 = interfaceinvoke $r10.<androidx.animation.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r12 = r0.<androidx.animation.TargetBasedAnimation: java.lang.Object endValue>;

        $r13 = interfaceinvoke $r11.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r12);

        $r14 = (androidx.animation.AnimationVector) $r13;

        r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector endValueVector> = $r14;

        $r18 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationSpec animationSpec>;

        $r17 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector startValueVector>;

        $r16 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector endValueVector>;

        $r15 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector startVelocityVector>;

        $l0 = interfaceinvoke $r18.<androidx.animation.AnimationSpec: long getDurationMillis(androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>($r17, $r16, $r15);

        r0.<androidx.animation.TargetBasedAnimation: long durationMillis> = $l0;

        $r22 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationSpec animationSpec>;

        $r21 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector startValueVector>;

        $r20 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector endValueVector>;

        $r19 = r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector startVelocityVector>;

        $r23 = interfaceinvoke $r22.<androidx.animation.AnimationSpec: androidx.animation.AnimationVector getEndVelocity(androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>($r21, $r20, $r19);

        r0.<androidx.animation.TargetBasedAnimation: androidx.animation.AnimationVector endVelocity> = $r23;

        return;
    }

    public void <init>(androidx.animation.AnimationSpec, java.lang.Object, java.lang.Object, java.lang.Object, androidx.animation.TwoWayConverter)
    {
        androidx.animation.TargetBasedAnimation r0;
        androidx.animation.AnimationSpec r1;
        java.lang.Object r2, r3, r4, $r7;
        androidx.animation.TwoWayConverter r5;
        kotlin.jvm.functions.Function1 $r6;
        androidx.animation.AnimationVector $r8;

        r0 := @this: androidx.animation.TargetBasedAnimation;

        r1 := @parameter0: androidx.animation.AnimationSpec;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: androidx.animation.TwoWayConverter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animationSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "converter");

        $r6 = interfaceinvoke r5.<androidx.animation.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r7 = interfaceinvoke $r6.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r4);

        $r8 = (androidx.animation.AnimationVector) $r7;

        specialinvoke r0.<androidx.animation.TargetBasedAnimation: void <init>(androidx.animation.AnimationSpec,java.lang.Object,java.lang.Object,androidx.animation.AnimationVector,androidx.animation.TwoWayConverter)>(r1, r2, r3, $r8, r5);

        return;
    }

    public boolean isFinished(long)
    {
        androidx.animation.TargetBasedAnimation r0;
        long l0;
        boolean $z0;

        r0 := @this: androidx.animation.TargetBasedAnimation;

        l0 := @parameter0: long;

        $z0 = staticinvoke <androidx.animation.Animation$DefaultImpls: boolean isFinished(androidx.animation.Animation,long)>(r0, l0);

        return $z0;
    }

