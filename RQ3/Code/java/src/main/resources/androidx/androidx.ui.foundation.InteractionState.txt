androidx.ui.foundation.InteractionState
<androidx.ui.foundation.InteractionState: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.ui.foundation.InteractionState: androidx.compose.MutableState map$delegate>
    public void <init>()
    {
        androidx.ui.foundation.InteractionState r0;
        java.util.Map $r1;
        androidx.compose.MutableState $r2;

        r0 := @this: androidx.ui.foundation.InteractionState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        $r2 = staticinvoke <androidx.compose.MutableStateKt: androidx.compose.MutableState mutableStateOf$default(java.lang.Object,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r1, null, 2, null);

        r0.<androidx.ui.foundation.InteractionState: androidx.compose.MutableState map$delegate> = $r2;

        return;
    }

    private final java.util.Map getMap()
    {
        androidx.ui.foundation.InteractionState r0;
        androidx.compose.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        java.util.Map $r6;

        r0 := @this: androidx.ui.foundation.InteractionState;

        $r3 = r0.<androidx.ui.foundation.InteractionState: androidx.compose.MutableState map$delegate>;

        $r1 = (androidx.compose.State) $r3;

        $r4 = <androidx.ui.foundation.InteractionState: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[0];

        $r5 = interfaceinvoke $r1.<androidx.compose.State: java.lang.Object getValue()>();

        $r6 = (java.util.Map) $r5;

        return $r6;
    }

    private final void setMap(java.util.Map)
    {
        androidx.ui.foundation.InteractionState r0;
        java.util.Map r1;
        androidx.compose.MutableState $r2;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.ui.foundation.InteractionState;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<androidx.ui.foundation.InteractionState: androidx.compose.MutableState map$delegate>;

        $r4 = <androidx.ui.foundation.InteractionState: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[0];

        interfaceinvoke $r2.<androidx.compose.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public java.util.Set getValue()
    {
        androidx.ui.foundation.InteractionState r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: androidx.ui.foundation.InteractionState;

        $r1 = specialinvoke r0.<androidx.ui.foundation.InteractionState: java.util.Map getMap()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public final void addInteraction(androidx.ui.foundation.Interaction, androidx.ui.geometry.Offset)
    {
        androidx.ui.foundation.InteractionState r0;
        androidx.ui.foundation.Interaction r1;
        androidx.ui.geometry.Offset r2;
        boolean $z0;
        java.util.Map $r3, $r5;
        kotlin.Pair $r4;

        r0 := @this: androidx.ui.foundation.InteractionState;

        r1 := @parameter0: androidx.ui.foundation.Interaction;

        r2 := @parameter1: androidx.ui.geometry.Offset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "interaction");

        $z0 = virtualinvoke r0.<androidx.ui.foundation.InteractionState: boolean contains(androidx.ui.foundation.Interaction)>(r1);

        if $z0 != 0 goto label1;

        $r3 = specialinvoke r0.<androidx.ui.foundation.InteractionState: java.util.Map getMap()>();

        $r4 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = staticinvoke <kotlin.collections.MapsKt: java.util.Map plus(java.util.Map,kotlin.Pair)>($r3, $r4);

        specialinvoke r0.<androidx.ui.foundation.InteractionState: void setMap(java.util.Map)>($r5);

     label1:
        return;
    }

    public static void addInteraction$default(androidx.ui.foundation.InteractionState, androidx.ui.foundation.Interaction, androidx.ui.geometry.Offset, int, java.lang.Object)
    {
        androidx.ui.foundation.InteractionState r0;
        androidx.ui.foundation.Interaction r1;
        int i0, $i1;
        java.lang.Object r2;
        androidx.ui.geometry.Offset r3;

        r0 := @parameter0: androidx.ui.foundation.InteractionState;

        r1 := @parameter1: androidx.ui.foundation.Interaction;

        r3 := @parameter2: androidx.ui.geometry.Offset;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = (androidx.ui.geometry.Offset) null;

     label1:
        virtualinvoke r0.<androidx.ui.foundation.InteractionState: void addInteraction(androidx.ui.foundation.Interaction,androidx.ui.geometry.Offset)>(r1, r3);

        return;
    }

    public final void removeInteraction(androidx.ui.foundation.Interaction)
    {
        androidx.ui.foundation.InteractionState r0;
        androidx.ui.foundation.Interaction r1;
        boolean $z0;
        java.util.Map $r2, $r3;

        r0 := @this: androidx.ui.foundation.InteractionState;

        r1 := @parameter0: androidx.ui.foundation.Interaction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "interaction");

        $z0 = virtualinvoke r0.<androidx.ui.foundation.InteractionState: boolean contains(androidx.ui.foundation.Interaction)>(r1);

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<androidx.ui.foundation.InteractionState: java.util.Map getMap()>();

        $r3 = staticinvoke <kotlin.collections.MapsKt: java.util.Map minus(java.util.Map,java.lang.Object)>($r2, r1);

        specialinvoke r0.<androidx.ui.foundation.InteractionState: void setMap(java.util.Map)>($r3);

     label1:
        return;
    }

    public final androidx.ui.geometry.Offset interactionPositionFor(androidx.ui.foundation.Interaction)
    {
        androidx.ui.foundation.InteractionState r0;
        androidx.ui.foundation.Interaction r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        androidx.ui.geometry.Offset $r4;

        r0 := @this: androidx.ui.foundation.InteractionState;

        r1 := @parameter0: androidx.ui.foundation.Interaction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "interaction");

        $r2 = specialinvoke r0.<androidx.ui.foundation.InteractionState: java.util.Map getMap()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (androidx.ui.geometry.Offset) $r3;

        return $r4;
    }

    public final boolean contains(androidx.ui.foundation.Interaction)
    {
        androidx.ui.foundation.InteractionState r0;
        androidx.ui.foundation.Interaction r1;
        java.util.Map r2, r3;
        boolean z0, z1, $z2;

        r0 := @this: androidx.ui.foundation.InteractionState;

        r1 := @parameter0: androidx.ui.foundation.Interaction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "interaction");

        r2 = specialinvoke r0.<androidx.ui.foundation.InteractionState: java.util.Map getMap()>();

        z0 = 0;

        r3 = r2;

        z1 = 0;

        $z2 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z2;
    }

    public volatile java.lang.Object getValue()
    {
        androidx.ui.foundation.InteractionState r0;
        java.util.Set $r1;

        r0 := @this: androidx.ui.foundation.InteractionState;

        $r1 = virtualinvoke r0.<androidx.ui.foundation.InteractionState: java.util.Set getValue()>();

        return $r1;
    }

    public static final void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        kotlin.jvm.internal.MutablePropertyReference1Impl $r1;
        kotlin.reflect.KClass $r2;
        kotlin.reflect.KDeclarationContainer $r3;
        kotlin.jvm.internal.MutablePropertyReference1 $r4;
        kotlin.reflect.KMutableProperty1 $r5;
        kotlin.reflect.KProperty $r6;

        r0 = newarray (kotlin.reflect.KProperty)[1];

        $r1 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/foundation/InteractionState;");

        $r3 = (kotlin.reflect.KDeclarationContainer) $r2;

        specialinvoke $r1.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r3, "map", "getMap()Ljava/util/Map;");

        $r4 = (kotlin.jvm.internal.MutablePropertyReference1) $r1;

        $r5 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r4);

        $r6 = (kotlin.reflect.KProperty) $r5;

        r0[0] = $r6;

        <androidx.ui.foundation.InteractionState: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        return;
    }

