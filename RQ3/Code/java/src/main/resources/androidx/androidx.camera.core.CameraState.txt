androidx.camera.core.CameraState
<androidx.camera.core.CameraState: int ERROR_MAX_CAMERAS_IN_USE>
<androidx.camera.core.CameraState: int ERROR_CAMERA_IN_USE>
<androidx.camera.core.CameraState: int ERROR_OTHER_RECOVERABLE_ERROR>
<androidx.camera.core.CameraState: int ERROR_STREAM_CONFIG>
<androidx.camera.core.CameraState: int ERROR_CAMERA_DISABLED>
<androidx.camera.core.CameraState: int ERROR_CAMERA_FATAL_ERROR>
<androidx.camera.core.CameraState: int ERROR_DO_NOT_DISTURB_MODE_ENABLED>
    public void <init>()
    {
        androidx.camera.core.CameraState r0;

        r0 := @this: androidx.camera.core.CameraState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.camera.core.CameraState create(androidx.camera.core.CameraState$Type)
    {
        androidx.camera.core.CameraState$Type r0;
        androidx.camera.core.CameraState $r1;

        r0 := @parameter0: androidx.camera.core.CameraState$Type;

        $r1 = staticinvoke <androidx.camera.core.CameraState: androidx.camera.core.CameraState create(androidx.camera.core.CameraState$Type,androidx.camera.core.CameraState$StateError)>(r0, null);

        return $r1;
    }

    public static androidx.camera.core.CameraState create(androidx.camera.core.CameraState$Type, androidx.camera.core.CameraState$StateError)
    {
        androidx.camera.core.CameraState$Type r0;
        androidx.camera.core.CameraState$StateError r1;
        androidx.camera.core.AutoValue_CameraState $r2;

        r0 := @parameter0: androidx.camera.core.CameraState$Type;

        r1 := @parameter1: androidx.camera.core.CameraState$StateError;

        $r2 = new androidx.camera.core.AutoValue_CameraState;

        specialinvoke $r2.<androidx.camera.core.AutoValue_CameraState: void <init>(androidx.camera.core.CameraState$Type,androidx.camera.core.CameraState$StateError)>(r0, r1);

        return $r2;
    }

<androidx.camera.core.CameraState: androidx.camera.core.CameraState$Type getType()>
<androidx.camera.core.CameraState: androidx.camera.core.CameraState$StateError getError()>
androidx.camera.core.CameraState$ErrorType
<androidx.camera.core.CameraState$ErrorType: androidx.camera.core.CameraState$ErrorType RECOVERABLE>
<androidx.camera.core.CameraState$ErrorType: androidx.camera.core.CameraState$ErrorType CRITICAL>
<androidx.camera.core.CameraState$ErrorType: androidx.camera.core.CameraState$ErrorType[] $VALUES>
    public static androidx.camera.core.CameraState$ErrorType[] values()
    {
        androidx.camera.core.CameraState$ErrorType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.camera.core.CameraState$ErrorType: androidx.camera.core.CameraState$ErrorType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.camera.core.CameraState$ErrorType[]) $r1;

        return $r2;
    }

    public static androidx.camera.core.CameraState$ErrorType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.camera.core.CameraState$ErrorType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/camera/core/CameraState$ErrorType;", r0);

        $r2 = (androidx.camera.core.CameraState$ErrorType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.camera.core.CameraState$ErrorType r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.camera.core.CameraState$ErrorType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        androidx.camera.core.CameraState$ErrorType $r0, $r1, $r3, $r4;
        androidx.camera.core.CameraState$ErrorType[] $r2;

        $r0 = new androidx.camera.core.CameraState$ErrorType;

        specialinvoke $r0.<androidx.camera.core.CameraState$ErrorType: void <init>(java.lang.String,int)>("RECOVERABLE", 0);

        <androidx.camera.core.CameraState$ErrorType: androidx.camera.core.CameraState$ErrorType RECOVERABLE> = $r0;

        $r1 = new androidx.camera.core.CameraState$ErrorType;

        specialinvoke $r1.<androidx.camera.core.CameraState$ErrorType: void <init>(java.lang.String,int)>("CRITICAL", 1);

        <androidx.camera.core.CameraState$ErrorType: androidx.camera.core.CameraState$ErrorType CRITICAL> = $r1;

        $r2 = newarray (androidx.camera.core.CameraState$ErrorType)[2];

        $r3 = <androidx.camera.core.CameraState$ErrorType: androidx.camera.core.CameraState$ErrorType RECOVERABLE>;

        $r2[0] = $r3;

        $r4 = <androidx.camera.core.CameraState$ErrorType: androidx.camera.core.CameraState$ErrorType CRITICAL>;

        $r2[1] = $r4;

        <androidx.camera.core.CameraState$ErrorType: androidx.camera.core.CameraState$ErrorType[] $VALUES> = $r2;

        return;
    }

androidx.camera.core.CameraState$StateError
    public void <init>()
    {
        androidx.camera.core.CameraState$StateError r0;

        r0 := @this: androidx.camera.core.CameraState$StateError;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.camera.core.CameraState$StateError create(int)
    {
        int i0;
        androidx.camera.core.CameraState$StateError $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <androidx.camera.core.CameraState$StateError: androidx.camera.core.CameraState$StateError create(int,java.lang.Throwable)>(i0, null);

        return $r0;
    }

    public static androidx.camera.core.CameraState$StateError create(int, java.lang.Throwable)
    {
        int i0;
        java.lang.Throwable r0;
        androidx.camera.core.AutoValue_CameraState_StateError $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Throwable;

        $r1 = new androidx.camera.core.AutoValue_CameraState_StateError;

        specialinvoke $r1.<androidx.camera.core.AutoValue_CameraState_StateError: void <init>(int,java.lang.Throwable)>(i0, r0);

        return $r1;
    }

<androidx.camera.core.CameraState$StateError: int getCode()>
<androidx.camera.core.CameraState$StateError: java.lang.Throwable getCause()>
    public androidx.camera.core.CameraState$ErrorType getType()
    {
        androidx.camera.core.CameraState$StateError r0;
        int i0;
        androidx.camera.core.CameraState$ErrorType $r1, $r2;

        r0 := @this: androidx.camera.core.CameraState$StateError;

        i0 = virtualinvoke r0.<androidx.camera.core.CameraState$StateError: int getCode()>();

        if i0 == 2 goto label1;

        if i0 == 1 goto label1;

        if i0 != 3 goto label2;

     label1:
        $r2 = <androidx.camera.core.CameraState$ErrorType: androidx.camera.core.CameraState$ErrorType RECOVERABLE>;

        return $r2;

     label2:
        $r1 = <androidx.camera.core.CameraState$ErrorType: androidx.camera.core.CameraState$ErrorType CRITICAL>;

        return $r1;
    }

androidx.camera.core.CameraState$Type
<androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type PENDING_OPEN>
<androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type OPENING>
<androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type OPEN>
<androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type CLOSING>
<androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type CLOSED>
<androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type[] $VALUES>
    public static androidx.camera.core.CameraState$Type[] values()
    {
        androidx.camera.core.CameraState$Type[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.camera.core.CameraState$Type[]) $r1;

        return $r2;
    }

    public static androidx.camera.core.CameraState$Type valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.camera.core.CameraState$Type $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/camera/core/CameraState$Type;", r0);

        $r2 = (androidx.camera.core.CameraState$Type) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.camera.core.CameraState$Type r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.camera.core.CameraState$Type;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        androidx.camera.core.CameraState$Type $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        androidx.camera.core.CameraState$Type[] $r5;

        $r0 = new androidx.camera.core.CameraState$Type;

        specialinvoke $r0.<androidx.camera.core.CameraState$Type: void <init>(java.lang.String,int)>("PENDING_OPEN", 0);

        <androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type PENDING_OPEN> = $r0;

        $r1 = new androidx.camera.core.CameraState$Type;

        specialinvoke $r1.<androidx.camera.core.CameraState$Type: void <init>(java.lang.String,int)>("OPENING", 1);

        <androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type OPENING> = $r1;

        $r2 = new androidx.camera.core.CameraState$Type;

        specialinvoke $r2.<androidx.camera.core.CameraState$Type: void <init>(java.lang.String,int)>("OPEN", 2);

        <androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type OPEN> = $r2;

        $r3 = new androidx.camera.core.CameraState$Type;

        specialinvoke $r3.<androidx.camera.core.CameraState$Type: void <init>(java.lang.String,int)>("CLOSING", 3);

        <androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type CLOSING> = $r3;

        $r4 = new androidx.camera.core.CameraState$Type;

        specialinvoke $r4.<androidx.camera.core.CameraState$Type: void <init>(java.lang.String,int)>("CLOSED", 4);

        <androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type CLOSED> = $r4;

        $r5 = newarray (androidx.camera.core.CameraState$Type)[5];

        $r6 = <androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type PENDING_OPEN>;

        $r5[0] = $r6;

        $r7 = <androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type OPENING>;

        $r5[1] = $r7;

        $r8 = <androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type OPEN>;

        $r5[2] = $r8;

        $r9 = <androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type CLOSING>;

        $r5[3] = $r9;

        $r10 = <androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type CLOSED>;

        $r5[4] = $r10;

        <androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type[] $VALUES> = $r5;

        return;
    }

