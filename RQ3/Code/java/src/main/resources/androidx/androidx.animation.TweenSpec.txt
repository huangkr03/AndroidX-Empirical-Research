androidx.animation.TweenSpec
<androidx.animation.TweenSpec: androidx.animation.VectorizedAnimationSpec anim>
<androidx.animation.TweenSpec: long duration>
<androidx.animation.TweenSpec: long delay>
<androidx.animation.TweenSpec: kotlin.jvm.functions.Function1 easing>
    public androidx.animation.AnimationVector getValue(long, androidx.animation.AnimationVector, androidx.animation.AnimationVector, androidx.animation.AnimationVector)
    {
        androidx.animation.TweenSpec r0;
        long l0;
        androidx.animation.AnimationVector r1, r2, r3, $r5;
        androidx.animation.VectorizedAnimationSpec $r4;

        r0 := @this: androidx.animation.TweenSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.animation.AnimationVector;

        r2 := @parameter2: androidx.animation.AnimationVector;

        r3 := @parameter3: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "end");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "startVelocity");

        $r4 = r0.<androidx.animation.TweenSpec: androidx.animation.VectorizedAnimationSpec anim>;

        $r5 = virtualinvoke $r4.<androidx.animation.VectorizedAnimationSpec: androidx.animation.AnimationVector getValue(long,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>(l0, r1, r2, r3);

        return $r5;
    }

    public androidx.animation.AnimationVector getVelocity(long, androidx.animation.AnimationVector, androidx.animation.AnimationVector, androidx.animation.AnimationVector)
    {
        androidx.animation.TweenSpec r0;
        long l0;
        androidx.animation.AnimationVector r1, r2, r3, $r5;
        androidx.animation.VectorizedAnimationSpec $r4;

        r0 := @this: androidx.animation.TweenSpec;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.animation.AnimationVector;

        r2 := @parameter2: androidx.animation.AnimationVector;

        r3 := @parameter3: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "end");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "startVelocity");

        $r4 = r0.<androidx.animation.TweenSpec: androidx.animation.VectorizedAnimationSpec anim>;

        $r5 = virtualinvoke $r4.<androidx.animation.VectorizedAnimationSpec: androidx.animation.AnimationVector getVelocity(long,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>(l0, r1, r2, r3);

        return $r5;
    }

    public long getDuration()
    {
        androidx.animation.TweenSpec r0;
        long $l0;

        r0 := @this: androidx.animation.TweenSpec;

        $l0 = r0.<androidx.animation.TweenSpec: long duration>;

        return $l0;
    }

    public long getDelay()
    {
        androidx.animation.TweenSpec r0;
        long $l0;

        r0 := @this: androidx.animation.TweenSpec;

        $l0 = r0.<androidx.animation.TweenSpec: long delay>;

        return $l0;
    }

    public final kotlin.jvm.functions.Function1 getEasing()
    {
        androidx.animation.TweenSpec r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.animation.TweenSpec;

        $r1 = r0.<androidx.animation.TweenSpec: kotlin.jvm.functions.Function1 easing>;

        return $r1;
    }

    public void <init>(long, long, kotlin.jvm.functions.Function1)
    {
        androidx.animation.TweenSpec r0;
        long l0, l1, $l2, $l3;
        kotlin.jvm.functions.Function1 r1, $r4;
        androidx.animation.VectorizedAnimationSpec $r2;
        androidx.animation.FloatTweenSpec $r3;
        androidx.animation.FloatAnimationSpec $r5;

        r0 := @this: androidx.animation.TweenSpec;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "easing");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.animation.TweenSpec: long duration> = l0;

        r0.<androidx.animation.TweenSpec: long delay> = l1;

        r0.<androidx.animation.TweenSpec: kotlin.jvm.functions.Function1 easing> = r1;

        $r2 = new androidx.animation.VectorizedAnimationSpec;

        $r3 = new androidx.animation.FloatTweenSpec;

        $l2 = virtualinvoke r0.<androidx.animation.TweenSpec: long getDuration()>();

        $l3 = virtualinvoke r0.<androidx.animation.TweenSpec: long getDelay()>();

        $r4 = r0.<androidx.animation.TweenSpec: kotlin.jvm.functions.Function1 easing>;

        specialinvoke $r3.<androidx.animation.FloatTweenSpec: void <init>(long,long,kotlin.jvm.functions.Function1)>($l2, $l3, $r4);

        $r5 = (androidx.animation.FloatAnimationSpec) $r3;

        specialinvoke $r2.<androidx.animation.VectorizedAnimationSpec: void <init>(androidx.animation.FloatAnimationSpec)>($r5);

        r0.<androidx.animation.TweenSpec: androidx.animation.VectorizedAnimationSpec anim> = $r2;

        return;
    }

    public void <init>(long, long, kotlin.jvm.functions.Function1, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.animation.TweenSpec r0;
        int i0, $i1, $i2, $i3;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        androidx.animation.CubicBezierEasing $r2;
        long l4, l5;
        kotlin.jvm.functions.Function1 r3;

        r0 := @this: androidx.animation.TweenSpec;

        l4 := @parameter0: long;

        l5 := @parameter1: long;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        i0 := @parameter3: int;

        r1 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        l4 = 300L;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        l5 = 0L;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        $r2 = staticinvoke <androidx.animation.EasingKt: androidx.animation.CubicBezierEasing getFastOutSlowInEasing()>();

        r3 = (kotlin.jvm.functions.Function1) $r2;

     label3:
        specialinvoke r0.<androidx.animation.TweenSpec: void <init>(long,long,kotlin.jvm.functions.Function1)>(l4, l5, r3);

        return;
    }

    public void <init>()
    {
        androidx.animation.TweenSpec r0;

        r0 := @this: androidx.animation.TweenSpec;

        specialinvoke r0.<androidx.animation.TweenSpec: void <init>(long,long,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0L, 0L, null, 7, null);

        return;
    }

    public long getDurationMillis(androidx.animation.AnimationVector, androidx.animation.AnimationVector, androidx.animation.AnimationVector)
    {
        androidx.animation.TweenSpec r0;
        androidx.animation.AnimationVector r1, r2, r3;
        long $l0;

        r0 := @this: androidx.animation.TweenSpec;

        r1 := @parameter0: androidx.animation.AnimationVector;

        r2 := @parameter1: androidx.animation.AnimationVector;

        r3 := @parameter2: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "end");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "startVelocity");

        $l0 = staticinvoke <androidx.animation.DurationBasedAnimationSpec$DefaultImpls: long getDurationMillis(androidx.animation.DurationBasedAnimationSpec,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>(r0, r1, r2, r3);

        return $l0;
    }

    public androidx.animation.AnimationVector getEndVelocity(androidx.animation.AnimationVector, androidx.animation.AnimationVector, androidx.animation.AnimationVector)
    {
        androidx.animation.TweenSpec r0;
        androidx.animation.AnimationVector r1, r2, r3, $r4;

        r0 := @this: androidx.animation.TweenSpec;

        r1 := @parameter0: androidx.animation.AnimationVector;

        r2 := @parameter1: androidx.animation.AnimationVector;

        r3 := @parameter2: androidx.animation.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "start");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "end");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "startVelocity");

        $r4 = staticinvoke <androidx.animation.DurationBasedAnimationSpec$DefaultImpls: androidx.animation.AnimationVector getEndVelocity(androidx.animation.DurationBasedAnimationSpec,androidx.animation.AnimationVector,androidx.animation.AnimationVector,androidx.animation.AnimationVector)>(r0, r1, r2, r3);

        return $r4;
    }

