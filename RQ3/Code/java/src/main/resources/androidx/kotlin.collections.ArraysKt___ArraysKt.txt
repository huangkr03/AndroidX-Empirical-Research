kotlin.collections.ArraysKt___ArraysKt
    public void <init>()
    {
        kotlin.collections.ArraysKt___ArraysKt $r0;

        $r0 := @this: kotlin.collections.ArraysKt___ArraysKt;

        specialinvoke $r0.<kotlin.collections.ArraysKt___ArraysJvmKt: void <init>()>();

        return;
    }

    public static final boolean all(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean all(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean all(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean all(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean all(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean all(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean all(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r1[$i1];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean all(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean all(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean any(byte[])
    {
        byte[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static final boolean any(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static final boolean any(char[])
    {
        char[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static final boolean any(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static final boolean any(double[])
    {
        double[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static final boolean any(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static final boolean any(float[])
    {
        float[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static final boolean any(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static final boolean any(int[])
    {
        int[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static final boolean any(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static final boolean any(long[])
    {
        long[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static final boolean any(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static final boolean any(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static final boolean any(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r1[$i1];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static final boolean any(short[])
    {
        short[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static final boolean any(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static final boolean any(boolean[])
    {
        boolean[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static final boolean any(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static final java.lang.Iterable asIterable(byte[])
    {
        java.util.List $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2 r2;
        java.lang.Iterable r3;

        $r1 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        r3 = (java.lang.Iterable) $r0;

        return r3;

     label3:
        r2 = new kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2;

        specialinvoke r2.<kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2: void <init>(byte[])>($r1);

        return r2;
    }

    public static final java.lang.Iterable asIterable(char[])
    {
        java.util.List $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9 r2;
        java.lang.Iterable r3;

        $r1 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        r3 = (java.lang.Iterable) $r0;

        return r3;

     label3:
        r2 = new kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9;

        specialinvoke r2.<kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9: void <init>(char[])>($r1);

        return r2;
    }

    public static final java.lang.Iterable asIterable(double[])
    {
        java.util.List $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7 r2;
        java.lang.Iterable r3;

        $r1 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        r3 = (java.lang.Iterable) $r0;

        return r3;

     label3:
        r2 = new kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7;

        specialinvoke r2.<kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7: void <init>(double[])>($r1);

        return r2;
    }

    public static final java.lang.Iterable asIterable(float[])
    {
        java.util.List $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6 r2;
        java.lang.Iterable r3;

        $r1 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        r3 = (java.lang.Iterable) $r0;

        return r3;

     label3:
        r2 = new kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6;

        specialinvoke r2.<kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6: void <init>(float[])>($r1);

        return r2;
    }

    public static final java.lang.Iterable asIterable(int[])
    {
        java.util.List $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4 r2;
        java.lang.Iterable r3;

        $r1 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        r3 = (java.lang.Iterable) $r0;

        return r3;

     label3:
        r2 = new kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4;

        specialinvoke r2.<kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4: void <init>(int[])>($r1);

        return r2;
    }

    public static final java.lang.Iterable asIterable(long[])
    {
        java.util.List $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5 r2;
        java.lang.Iterable r3;

        $r1 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        r3 = (java.lang.Iterable) $r0;

        return r3;

     label3:
        r2 = new kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5;

        specialinvoke r2.<kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5: void <init>(long[])>($r1);

        return r2;
    }

    public static final java.lang.Iterable asIterable(java.lang.Object[])
    {
        java.util.List $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1 r2;
        java.lang.Iterable r3;

        $r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        r3 = (java.lang.Iterable) $r0;

        return r3;

     label3:
        r2 = new kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1;

        specialinvoke r2.<kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1: void <init>(java.lang.Object[])>($r1);

        return r2;
    }

    public static final java.lang.Iterable asIterable(short[])
    {
        java.util.List $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3 r2;
        java.lang.Iterable r3;

        $r1 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        r3 = (java.lang.Iterable) $r0;

        return r3;

     label3:
        r2 = new kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3;

        specialinvoke r2.<kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3: void <init>(short[])>($r1);

        return r2;
    }

    public static final java.lang.Iterable asIterable(boolean[])
    {
        java.util.List $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8 r2;
        java.lang.Iterable r3;

        $r1 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        r3 = (java.lang.Iterable) $r0;

        return r3;

     label3:
        r2 = new kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8;

        specialinvoke r2.<kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8: void <init>(boolean[])>($r1);

        return r2;
    }

    public static final kotlin.sequences.Sequence asSequence(byte[])
    {
        kotlin.sequences.Sequence $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2 $r2;

        $r1 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence emptySequence()>();

        return $r0;

     label3:
        $r2 = new kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2;

        specialinvoke $r2.<kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2: void <init>(byte[])>($r1);

        return $r2;
    }

    public static final kotlin.sequences.Sequence asSequence(char[])
    {
        kotlin.sequences.Sequence $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9 $r2;

        $r1 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence emptySequence()>();

        return $r0;

     label3:
        $r2 = new kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9;

        specialinvoke $r2.<kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9: void <init>(char[])>($r1);

        return $r2;
    }

    public static final kotlin.sequences.Sequence asSequence(double[])
    {
        kotlin.sequences.Sequence $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7 $r2;

        $r1 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence emptySequence()>();

        return $r0;

     label3:
        $r2 = new kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7;

        specialinvoke $r2.<kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7: void <init>(double[])>($r1);

        return $r2;
    }

    public static final kotlin.sequences.Sequence asSequence(float[])
    {
        kotlin.sequences.Sequence $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6 $r2;

        $r1 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence emptySequence()>();

        return $r0;

     label3:
        $r2 = new kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6;

        specialinvoke $r2.<kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6: void <init>(float[])>($r1);

        return $r2;
    }

    public static final kotlin.sequences.Sequence asSequence(int[])
    {
        kotlin.sequences.Sequence $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4 $r2;

        $r1 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence emptySequence()>();

        return $r0;

     label3:
        $r2 = new kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4;

        specialinvoke $r2.<kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4: void <init>(int[])>($r1);

        return $r2;
    }

    public static final kotlin.sequences.Sequence asSequence(long[])
    {
        kotlin.sequences.Sequence $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5 $r2;

        $r1 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence emptySequence()>();

        return $r0;

     label3:
        $r2 = new kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5;

        specialinvoke $r2.<kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5: void <init>(long[])>($r1);

        return $r2;
    }

    public static final kotlin.sequences.Sequence asSequence(java.lang.Object[])
    {
        kotlin.sequences.Sequence $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1 $r2;

        $r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence emptySequence()>();

        return $r0;

     label3:
        $r2 = new kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1;

        specialinvoke $r2.<kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1: void <init>(java.lang.Object[])>($r1);

        return $r2;
    }

    public static final kotlin.sequences.Sequence asSequence(short[])
    {
        kotlin.sequences.Sequence $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3 $r2;

        $r1 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence emptySequence()>();

        return $r0;

     label3:
        $r2 = new kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3;

        specialinvoke $r2.<kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3: void <init>(short[])>($r1);

        return $r2;
    }

    public static final kotlin.sequences.Sequence asSequence(boolean[])
    {
        kotlin.sequences.Sequence $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8 $r2;

        $r1 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r0 = staticinvoke <kotlin.sequences.SequencesKt: kotlin.sequences.Sequence emptySequence()>();

        return $r0;

     label3:
        $r2 = new kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8;

        specialinvoke $r2.<kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8: void <init>(boolean[])>($r1);

        return $r2;
    }

    public static final java.util.Map associate(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r7;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;
        java.util.Map r8;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r2 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        r8 = (java.util.Map) $r2;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r2;

        return r8;
    }

    public static final java.util.Map associate(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r7;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;
        java.util.Map r8;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r2 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        r8 = (java.util.Map) $r2;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r2;

        return r8;
    }

    public static final java.util.Map associate(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r7;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;
        java.util.Map r8;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r2 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        r8 = (java.util.Map) $r2;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r2;

        return r8;
    }

    public static final java.util.Map associate(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r7;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;
        java.util.Map r8;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r2 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        r8 = (java.util.Map) $r2;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r2;

        return r8;
    }

    public static final java.util.Map associate(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        java.util.LinkedHashMap $r2, r7;
        java.lang.Integer $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;
        java.util.Map r8;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r2 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        r8 = (java.util.Map) $r2;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r2;

        return r8;
    }

    public static final java.util.Map associate(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r7;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;
        java.util.Map r8;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r2 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        r8 = (java.util.Map) $r2;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r2;

        return r8;
    }

    public static final java.util.Map associate(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r6;
        java.lang.Object $r3, $r5;
        kotlin.Pair $r4;
        java.util.Map r7;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r6 = new java.util.LinkedHashMap;

        $r2 = r6;

        specialinvoke r6.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r0[$i1];

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (kotlin.Pair) $r3;

        $r3 = virtualinvoke $r4.<kotlin.Pair: java.lang.Object getFirst()>();

        $r5 = virtualinvoke $r4.<kotlin.Pair: java.lang.Object getSecond()>();

        r7 = (java.util.Map) $r2;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.Map) $r2;

        return r7;
    }

    public static final java.util.Map associate(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r7;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;
        java.util.Map r8;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r2 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        r8 = (java.util.Map) $r2;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r2;

        return r8;
    }

    public static final java.util.Map associate(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r7;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;
        java.util.Map r8;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r2 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        r8 = (java.util.Map) $r2;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r2;

        return r8;
    }

    public static final java.util.Map associateBy(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r5;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4;
        java.util.Map r6;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r5 = new java.util.LinkedHashMap;

        $r2 = r5;

        specialinvoke r5.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        r6 = (java.util.Map) $r2;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r6 = (java.util.Map) $r2;

        return r6;
    }

    public static final java.util.Map associateBy(byte[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r7;
        byte $b2;
        java.lang.Byte $r4;
        java.lang.Object $r5, $r6;
        java.util.Map r8;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r3 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r8 = (java.util.Map) $r3;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r3;

        return r8;
    }

    public static final java.util.Map associateBy(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r5;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.util.Map r6;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r5 = new java.util.LinkedHashMap;

        $r2 = r5;

        specialinvoke r5.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        r6 = (java.util.Map) $r2;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r6 = (java.util.Map) $r2;

        return r6;
    }

    public static final java.util.Map associateBy(char[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r7;
        char $c2;
        java.lang.Character $r4;
        java.lang.Object $r5, $r6;
        java.util.Map r8;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r3 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r8 = (java.util.Map) $r3;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r3;

        return r8;
    }

    public static final java.util.Map associateBy(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r5;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4;
        java.util.Map r6;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r5 = new java.util.LinkedHashMap;

        $r2 = r5;

        specialinvoke r5.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        r6 = (java.util.Map) $r2;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r6 = (java.util.Map) $r2;

        return r6;
    }

    public static final java.util.Map associateBy(double[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r7;
        double $d0;
        java.lang.Double $r4;
        java.lang.Object $r5, $r6;
        java.util.Map r8;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r3 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r8 = (java.util.Map) $r3;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r3;

        return r8;
    }

    public static final java.util.Map associateBy(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r5;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4;
        java.util.Map r6;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r5 = new java.util.LinkedHashMap;

        $r2 = r5;

        specialinvoke r5.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        r6 = (java.util.Map) $r2;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r6 = (java.util.Map) $r2;

        return r6;
    }

    public static final java.util.Map associateBy(float[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r7;
        float $f0;
        java.lang.Float $r4;
        java.lang.Object $r5, $r6;
        java.util.Map r8;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r3 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r8 = (java.util.Map) $r3;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r3;

        return r8;
    }

    public static final java.util.Map associateBy(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        java.util.LinkedHashMap $r2, r5;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.util.Map r6;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r5 = new java.util.LinkedHashMap;

        $r2 = r5;

        specialinvoke r5.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r6 = (java.util.Map) $r2;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r6 = (java.util.Map) $r2;

        return r6;
    }

    public static final java.util.Map associateBy(int[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1, $i2;
        java.util.LinkedHashMap $r3, r7;
        java.lang.Integer $r4;
        java.lang.Object $r5, $r6;
        java.util.Map r8;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r3 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r8 = (java.util.Map) $r3;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r3;

        return r8;
    }

    public static final java.util.Map associateBy(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r5;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4;
        java.util.Map r6;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r5 = new java.util.LinkedHashMap;

        $r2 = r5;

        specialinvoke r5.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        r6 = (java.util.Map) $r2;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r6 = (java.util.Map) $r2;

        return r6;
    }

    public static final java.util.Map associateBy(long[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r7;
        long $l2;
        java.lang.Long $r4;
        java.lang.Object $r5, $r6;
        java.util.Map r8;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r3 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r8 = (java.util.Map) $r3;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r3;

        return r8;
    }

    public static final java.util.Map associateBy(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r2, $r4;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r5;
        java.util.Map r6;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r5 = new java.util.LinkedHashMap;

        $r3 = r5;

        specialinvoke r5.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        r6 = (java.util.Map) $r3;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r6 = (java.util.Map) $r3;

        return r6;
    }

    public static final java.util.Map associateBy(java.lang.Object[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r6;
        java.lang.Object $r4, $r5;
        java.util.Map r7;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r6 = new java.util.LinkedHashMap;

        $r3 = r6;

        specialinvoke r6.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = $r0[$i1];

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r7 = (java.util.Map) $r3;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.Map) $r3;

        return r7;
    }

    public static final java.util.Map associateBy(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r5;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4;
        java.util.Map r6;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r5 = new java.util.LinkedHashMap;

        $r2 = r5;

        specialinvoke r5.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        r6 = (java.util.Map) $r2;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r6 = (java.util.Map) $r2;

        return r6;
    }

    public static final java.util.Map associateBy(short[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r7;
        short $s2;
        java.lang.Short $r4;
        java.lang.Object $r5, $r6;
        java.util.Map r8;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r3 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r8 = (java.util.Map) $r3;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r3;

        return r8;
    }

    public static final java.util.Map associateBy(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r5;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4;
        java.util.Map r6;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r5 = new java.util.LinkedHashMap;

        $r2 = r5;

        specialinvoke r5.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r6 = (java.util.Map) $r2;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r6 = (java.util.Map) $r2;

        return r6;
    }

    public static final java.util.Map associateBy(boolean[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r7;
        boolean $z0;
        java.lang.Boolean $r4;
        java.lang.Object $r5, $r6;
        java.util.Map r8;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        r7 = new java.util.LinkedHashMap;

        $r3 = r7;

        specialinvoke r7.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r8 = (java.util.Map) $r3;

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.Map) $r3;

        return r8;
    }

    public static final java.util.Map associateByTo(byte[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(byte[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r4;
        java.lang.Object $r5, $r6;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r6 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(char[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(char[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r4;
        java.lang.Object $r5, $r6;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r6 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(double[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(double[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r4;
        java.lang.Object $r5, $r6;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r6 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(float[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(float[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r4;
        java.lang.Object $r5, $r6;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(int[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(int[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Integer $r4;
        java.lang.Object $r5, $r6;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(long[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(long[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r4;
        java.lang.Object $r5, $r6;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r6 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(java.lang.Object[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3, $r4;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r0[$i1];

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(java.lang.Object[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        java.lang.Object $r4, $r5;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = $r0[$i1];

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(short[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(short[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r4;
        java.lang.Object $r5, $r6;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r6 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(boolean[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateByTo(boolean[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r4;
        java.lang.Object $r5, $r6;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateTo(byte[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateTo(char[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateTo(double[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateTo(float[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateTo(int[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateTo(long[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateTo(java.lang.Object[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        java.lang.Object $r3, $r5;
        kotlin.Pair $r4;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r0[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (kotlin.Pair) $r3;

        $r3 = virtualinvoke $r4.<kotlin.Pair: java.lang.Object getFirst()>();

        $r5 = virtualinvoke $r4.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateTo(short[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateTo(boolean[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4, $r6;
        kotlin.Pair $r5;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (kotlin.Pair) $r4;

        $r4 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getFirst()>();

        $r6 = virtualinvoke $r5.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Map associateWith(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.LinkedHashMap $r2, r6;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r3, $r4;
        java.lang.Object $r5;
        java.util.Map r7;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "valueSelector");

        r6 = new java.util.LinkedHashMap;

        $r2 = r6;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        specialinvoke r6.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r7 = (java.util.Map) $r2;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.Map) $r2;

        return r7;
    }

    private static final java.util.Map associateWith(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.LinkedHashMap $r2, r6;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3, $r4;
        java.lang.Object $r5;
        java.util.Map r7;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "valueSelector");

        r6 = new java.util.LinkedHashMap;

        $r2 = r6;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i0, 128);

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        specialinvoke r6.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r7 = (java.util.Map) $r2;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.Map) $r2;

        return r7;
    }

    private static final java.util.Map associateWith(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.LinkedHashMap $r2, r6;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r3, $r4;
        java.lang.Object $r5;
        java.util.Map r7;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "valueSelector");

        r6 = new java.util.LinkedHashMap;

        $r2 = r6;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        specialinvoke r6.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r7 = (java.util.Map) $r2;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.Map) $r2;

        return r7;
    }

    private static final java.util.Map associateWith(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.LinkedHashMap $r2, r6;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r3, $r4;
        java.lang.Object $r5;
        java.util.Map r7;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "valueSelector");

        r6 = new java.util.LinkedHashMap;

        $r2 = r6;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        specialinvoke r6.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r7 = (java.util.Map) $r2;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.Map) $r2;

        return r7;
    }

    private static final java.util.Map associateWith(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.LinkedHashMap $r2, r6;
        int $i0, $i1, $i2;
        java.lang.Integer $r3, $r4;
        java.lang.Object $r5;
        java.util.Map r7;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "valueSelector");

        r6 = new java.util.LinkedHashMap;

        $r2 = r6;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        specialinvoke r6.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r7 = (java.util.Map) $r2;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.Map) $r2;

        return r7;
    }

    private static final java.util.Map associateWith(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.LinkedHashMap $r2, r6;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r3, $r4;
        java.lang.Object $r5;
        java.util.Map r7;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "valueSelector");

        r6 = new java.util.LinkedHashMap;

        $r2 = r6;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        specialinvoke r6.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r7 = (java.util.Map) $r2;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.Map) $r2;

        return r7;
    }

    public static final java.util.Map associateWith(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r2, $r4;
        java.util.LinkedHashMap $r3, r5;
        int $i0, $i1;
        java.util.Map r6;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "valueSelector");

        r5 = new java.util.LinkedHashMap;

        $r3 = r5;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        specialinvoke r5.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        r6 = (java.util.Map) $r3;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r6 = (java.util.Map) $r3;

        return r6;
    }

    private static final java.util.Map associateWith(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.LinkedHashMap $r2, r6;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r3, $r4;
        java.lang.Object $r5;
        java.util.Map r7;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "valueSelector");

        r6 = new java.util.LinkedHashMap;

        $r2 = r6;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        specialinvoke r6.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r7 = (java.util.Map) $r2;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.Map) $r2;

        return r7;
    }

    private static final java.util.Map associateWith(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.LinkedHashMap $r2, r6;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r3, $r4;
        java.lang.Object $r5;
        java.util.Map r7;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "valueSelector");

        r6 = new java.util.LinkedHashMap;

        $r2 = r6;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 16);

        specialinvoke r6.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r7 = (java.util.Map) $r2;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.Map) $r2;

        return r7;
    }

    private static final java.util.Map associateWithTo(byte[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r3, $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueSelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Map associateWithTo(char[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3, $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueSelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Map associateWithTo(double[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r3, $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueSelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Map associateWithTo(float[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r3, $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueSelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Map associateWithTo(int[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3, $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueSelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Map associateWithTo(long[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r3, $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueSelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Map associateWithTo(java.lang.Object[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3, $r4;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueSelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r0[$i1];

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Map associateWithTo(short[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r3, $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueSelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Map associateWithTo(boolean[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r3, $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueSelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final double average(byte[])
    {
        byte[] $r0;
        int $i0, $i1, $i2;
        double $d0, $d1;
        byte $b3;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b3 = $r0[$i1];

        $d1 = (double) $b3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i2 = $i2 + 1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        if $i2 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i2;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double average(double[])
    {
        double[] $r0;
        double $d0, $d1;
        int $i0, $i1, $i2;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $d1 = 0.0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $d1 = $d1 + $d0;

        $i2 = $i2 + 1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        if $i2 != 0 goto label3;

        return #NaN;

     label3:
        $d0 = (double) $i2;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        $d1 = $d1 / $d0;

        return $d1;
    }

    public static final double average(float[])
    {
        float[] $r0;
        int $i0, $i1, $i2;
        double $d0, $d1;
        float $f0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $d1 = (double) $f0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i2 = $i2 + 1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        if $i2 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i2;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double average(int[])
    {
        int[] $r0;
        int $i0, $i1, $i2, $i3;
        double $d0, $d1;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i3 = $r0[$i1];

        $d1 = (double) $i3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i2 = $i2 + 1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        if $i2 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i2;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double average(long[])
    {
        long[] $r0;
        int $i0, $i1, $i2;
        double $d0, $d1;
        long $l3;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l3 = $r0[$i1];

        $d1 = (double) $l3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i2 = $i2 + 1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        if $i2 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i2;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double average(short[])
    {
        short[] $r0;
        int $i0, $i1, $i2;
        double $d0, $d1;
        short $s3;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s3 = $r0[$i1];

        $d1 = (double) $s3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i2 = $i2 + 1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        if $i2 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i2;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double averageOfByte(java.lang.Byte[])
    {
        java.lang.Byte[] $r0;
        byte $b0;
        int $i1, $i2, $i3;
        double $d0, $d1;
        java.lang.Byte $r1;

        $r0 := @parameter0: java.lang.Byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $d0 = 0.0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r1 = $r0[$i2];

        $b0 = virtualinvoke $r1.<java.lang.Byte: byte byteValue()>();

        $d1 = (double) $b0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i3 = $i3 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        if $i3 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double averageOfDouble(java.lang.Double[])
    {
        java.lang.Double[] $r0;
        double $d0, $d1;
        int $i0, $i1, $i2;
        java.lang.Double $r1;

        $r0 := @parameter0: java.lang.Double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $d1 = 0.0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = $r0[$i1];

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $d1 = $d1 + $d0;

        $i2 = $i2 + 1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        if $i2 != 0 goto label3;

        return #NaN;

     label3:
        $d0 = (double) $i2;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        $d1 = $d1 / $d0;

        return $d1;
    }

    public static final double averageOfFloat(java.lang.Float[])
    {
        java.lang.Float[] $r0;
        float $f0;
        int $i0, $i1, $i2;
        double $d0, $d1;
        java.lang.Float $r1;

        $r0 := @parameter0: java.lang.Float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = $r0[$i1];

        $f0 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

        $d1 = (double) $f0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i2 = $i2 + 1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        if $i2 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i2;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double averageOfInt(java.lang.Integer[])
    {
        java.lang.Integer[] $r0;
        int $i0, $i1, $i2, $i3;
        double $d0, $d1;
        java.lang.Integer $r1;

        $r0 := @parameter0: java.lang.Integer[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $d0 = 0.0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r1 = $r0[$i2];

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        $d1 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i3 = $i3 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        if $i3 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double averageOfLong(java.lang.Long[])
    {
        java.lang.Long[] $r0;
        long $l0;
        int $i1, $i2, $i3;
        double $d0, $d1;
        java.lang.Long $r1;

        $r0 := @parameter0: java.lang.Long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $d0 = 0.0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r1 = $r0[$i2];

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $d1 = (double) $l0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i3 = $i3 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        if $i3 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    public static final double averageOfShort(java.lang.Short[])
    {
        java.lang.Short[] $r0;
        short $s0;
        int $i1, $i2, $i3;
        double $d0, $d1;
        java.lang.Short $r1;

        $r0 := @parameter0: java.lang.Short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $d0 = 0.0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r1 = $r0[$i2];

        $s0 = virtualinvoke $r1.<java.lang.Short: short shortValue()>();

        $d1 = (double) $s0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 + $d1;

        $i3 = $i3 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        if $i3 != 0 goto label3;

        return #NaN;

     label3:
        $d1 = (double) $i3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        return $d0;
    }

    private static final byte component1(byte[])
    {
        byte[] $r0;
        byte $b0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $b0 = $r0[0];

        return $b0;
    }

    private static final char component1(char[])
    {
        char[] $r0;
        char $c0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $c0 = $r0[0];

        return $c0;
    }

    private static final double component1(double[])
    {
        double[] $r0;
        double $d0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $d0 = $r0[0];

        return $d0;
    }

    private static final float component1(float[])
    {
        float[] $r0;
        float $f0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $f0 = $r0[0];

        return $f0;
    }

    private static final int component1(int[])
    {
        int[] $r0;
        int $i0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = $r0[0];

        return $i0;
    }

    private static final long component1(long[])
    {
        long[] $r0;
        long $l0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $l0 = $r0[0];

        return $l0;
    }

    private static final java.lang.Object component1(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = $r0[0];

        return $r1;
    }

    private static final short component1(short[])
    {
        short[] $r0;
        short $s0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $s0 = $r0[0];

        return $s0;
    }

    private static final boolean component1(boolean[])
    {
        boolean[] $r0;
        boolean $z0;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0[0];

        return $z0;
    }

    private static final byte component2(byte[])
    {
        byte[] $r0;
        byte $b0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $b0 = $r0[1];

        return $b0;
    }

    private static final char component2(char[])
    {
        char[] $r0;
        char $c0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $c0 = $r0[1];

        return $c0;
    }

    private static final double component2(double[])
    {
        double[] $r0;
        double $d0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $d0 = $r0[1];

        return $d0;
    }

    private static final float component2(float[])
    {
        float[] $r0;
        float $f0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $f0 = $r0[1];

        return $f0;
    }

    private static final int component2(int[])
    {
        int[] $r0;
        int $i0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = $r0[1];

        return $i0;
    }

    private static final long component2(long[])
    {
        long[] $r0;
        long $l0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $l0 = $r0[1];

        return $l0;
    }

    private static final java.lang.Object component2(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = $r0[1];

        return $r1;
    }

    private static final short component2(short[])
    {
        short[] $r0;
        short $s0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $s0 = $r0[1];

        return $s0;
    }

    private static final boolean component2(boolean[])
    {
        boolean[] $r0;
        boolean $z0;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0[1];

        return $z0;
    }

    private static final byte component3(byte[])
    {
        byte[] $r0;
        byte $b0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $b0 = $r0[2];

        return $b0;
    }

    private static final char component3(char[])
    {
        char[] $r0;
        char $c0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $c0 = $r0[2];

        return $c0;
    }

    private static final double component3(double[])
    {
        double[] $r0;
        double $d0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $d0 = $r0[2];

        return $d0;
    }

    private static final float component3(float[])
    {
        float[] $r0;
        float $f0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $f0 = $r0[2];

        return $f0;
    }

    private static final int component3(int[])
    {
        int[] $r0;
        int $i0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = $r0[2];

        return $i0;
    }

    private static final long component3(long[])
    {
        long[] $r0;
        long $l0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $l0 = $r0[2];

        return $l0;
    }

    private static final java.lang.Object component3(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = $r0[2];

        return $r1;
    }

    private static final short component3(short[])
    {
        short[] $r0;
        short $s0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $s0 = $r0[2];

        return $s0;
    }

    private static final boolean component3(boolean[])
    {
        boolean[] $r0;
        boolean $z0;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0[2];

        return $z0;
    }

    private static final byte component4(byte[])
    {
        byte[] $r0;
        byte $b0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $b0 = $r0[3];

        return $b0;
    }

    private static final char component4(char[])
    {
        char[] $r0;
        char $c0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $c0 = $r0[3];

        return $c0;
    }

    private static final double component4(double[])
    {
        double[] $r0;
        double $d0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $d0 = $r0[3];

        return $d0;
    }

    private static final float component4(float[])
    {
        float[] $r0;
        float $f0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $f0 = $r0[3];

        return $f0;
    }

    private static final int component4(int[])
    {
        int[] $r0;
        int $i0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = $r0[3];

        return $i0;
    }

    private static final long component4(long[])
    {
        long[] $r0;
        long $l0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $l0 = $r0[3];

        return $l0;
    }

    private static final java.lang.Object component4(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = $r0[3];

        return $r1;
    }

    private static final short component4(short[])
    {
        short[] $r0;
        short $s0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $s0 = $r0[3];

        return $s0;
    }

    private static final boolean component4(boolean[])
    {
        boolean[] $r0;
        boolean $z0;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0[3];

        return $z0;
    }

    private static final byte component5(byte[])
    {
        byte[] $r0;
        byte $b0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $b0 = $r0[4];

        return $b0;
    }

    private static final char component5(char[])
    {
        char[] $r0;
        char $c0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $c0 = $r0[4];

        return $c0;
    }

    private static final double component5(double[])
    {
        double[] $r0;
        double $d0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $d0 = $r0[4];

        return $d0;
    }

    private static final float component5(float[])
    {
        float[] $r0;
        float $f0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $f0 = $r0[4];

        return $f0;
    }

    private static final int component5(int[])
    {
        int[] $r0;
        int $i0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = $r0[4];

        return $i0;
    }

    private static final long component5(long[])
    {
        long[] $r0;
        long $l0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $l0 = $r0[4];

        return $l0;
    }

    private static final java.lang.Object component5(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = $r0[4];

        return $r1;
    }

    private static final short component5(short[])
    {
        short[] $r0;
        short $s0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $s0 = $r0[4];

        return $s0;
    }

    private static final boolean component5(boolean[])
    {
        boolean[] $r0;
        boolean $z0;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = $r0[4];

        return $z0;
    }

    public static final boolean contains(byte[], byte)
    {
        byte $b0;
        int $i1;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        $b0 := @parameter1: byte;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int indexOf(byte[],byte)>($r0, $b0);

        if $i1 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean contains(char[], char)
    {
        char $c0;
        int $i1;
        char[] $r0;

        $r0 := @parameter0: char[];

        $c0 := @parameter1: char;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int indexOf(char[],char)>($r0, $c0);

        if $i1 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean contains(double[], double)
    {
        double[] $r0;
        double $d0, $d1;
        byte $b0;
        int $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: double[];

        $d0 := @parameter1: double;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label5;

        $d1 = $r0[$i2];

        $b0 = $d1 cmpg $d0;

        if $b0 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        return 1;

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        return 0;
    }

    public static final boolean contains(float[], float)
    {
        float[] $r0;
        float $f0, $f1;
        int $i0, $i1;
        byte $b2;
        boolean $z0;

        $r0 := @parameter0: float[];

        $f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $f1 = $r0[$i1];

        $b2 = $f1 cmpg $f0;

        if $b2 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        return 1;

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        return 0;
    }

    public static final boolean contains(int[], int)
    {
        int $i0;
        int[] $r0;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int indexOf(int[],int)>($r0, $i0);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean contains(long[], long)
    {
        long $l0;
        int $i1;
        long[] $r0;

        $r0 := @parameter0: long[];

        $l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int indexOf(long[],long)>($r0, $l0);

        if $i1 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean contains(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object $r0;
        int $i0;
        java.lang.Object[] $r1;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int indexOf(java.lang.Object[],java.lang.Object)>($r1, $r0);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean contains(short[], short)
    {
        short $s0;
        int $i1;
        short[] $r0;

        $r0 := @parameter0: short[];

        $s0 := @parameter1: short;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int indexOf(short[],short)>($r0, $s0);

        if $i1 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean contains(boolean[], boolean)
    {
        boolean $z0;
        int $i0;
        boolean[] $r0;

        $r0 := @parameter0: boolean[];

        $z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int indexOf(boolean[],boolean)>($r0, $z0);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static final int count(byte[])
    {
        byte[] $r0;
        int $i0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        return $i0;
    }

    public static final int count(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        byte $b3;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $i2 = $i2 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i2;
    }

    private static final int count(char[])
    {
        char[] $r0;
        int $i0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        return $i0;
    }

    public static final int count(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $i2 = $i2 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i2;
    }

    private static final int count(double[])
    {
        double[] $r0;
        int $i0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        return $i0;
    }

    public static final int count(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $i2 = $i2 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i2;
    }

    private static final int count(float[])
    {
        float[] $r0;
        int $i0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        return $i0;
    }

    public static final int count(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $i2 = $i2 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i2;
    }

    private static final int count(int[])
    {
        int[] $r0;
        int $i0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        return $i0;
    }

    public static final int count(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $i2 = $i2 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i2;
    }

    private static final int count(long[])
    {
        long[] $r0;
        int $i0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        return $i0;
    }

    public static final int count(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        long $l3;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $i2 = $i2 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i2;
    }

    private static final int count(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        return $i0;
    }

    public static final int count(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0[$i1];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $i2 = $i2 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i2;
    }

    private static final int count(short[])
    {
        short[] $r0;
        int $i0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        return $i0;
    }

    public static final int count(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        short $s3;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $i2 = $i2 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i2;
    }

    private static final int count(boolean[])
    {
        boolean[] $r0;
        int $i0;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        return $i0;
    }

    public static final int count(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $i2 = $i2 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i2;
    }

    public static final java.util.List distinct(byte[])
    {
        byte[] $r0;
        java.util.Set $r1;
        java.util.List $r2;
        java.lang.Iterable r3;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(byte[])>($r0);

        r3 = (java.lang.Iterable) $r1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>(r3);

        return $r2;
    }

    public static final java.util.List distinct(char[])
    {
        char[] $r0;
        java.util.Set $r1;
        java.util.List $r2;
        java.lang.Iterable r3;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(char[])>($r0);

        r3 = (java.lang.Iterable) $r1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>(r3);

        return $r2;
    }

    public static final java.util.List distinct(double[])
    {
        double[] $r0;
        java.util.Set $r1;
        java.util.List $r2;
        java.lang.Iterable r3;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(double[])>($r0);

        r3 = (java.lang.Iterable) $r1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>(r3);

        return $r2;
    }

    public static final java.util.List distinct(float[])
    {
        float[] $r0;
        java.util.Set $r1;
        java.util.List $r2;
        java.lang.Iterable r3;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(float[])>($r0);

        r3 = (java.lang.Iterable) $r1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>(r3);

        return $r2;
    }

    public static final java.util.List distinct(int[])
    {
        int[] $r0;
        java.util.Set $r1;
        java.util.List $r2;
        java.lang.Iterable r3;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(int[])>($r0);

        r3 = (java.lang.Iterable) $r1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>(r3);

        return $r2;
    }

    public static final java.util.List distinct(long[])
    {
        long[] $r0;
        java.util.Set $r1;
        java.util.List $r2;
        java.lang.Iterable r3;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(long[])>($r0);

        r3 = (java.lang.Iterable) $r1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>(r3);

        return $r2;
    }

    public static final java.util.List distinct(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.util.Set $r1;
        java.util.List $r2;
        java.lang.Iterable r3;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(java.lang.Object[])>($r0);

        r3 = (java.lang.Iterable) $r1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>(r3);

        return $r2;
    }

    public static final java.util.List distinct(short[])
    {
        short[] $r0;
        java.util.Set $r1;
        java.util.List $r2;
        java.lang.Iterable r3;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(short[])>($r0);

        r3 = (java.lang.Iterable) $r1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>(r3);

        return $r2;
    }

    public static final java.util.List distinct(boolean[])
    {
        boolean[] $r0;
        java.util.Set $r1;
        java.util.List $r2;
        java.lang.Iterable r3;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(boolean[])>($r0);

        r3 = (java.lang.Iterable) $r1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>(r3);

        return $r2;
    }

    public static final java.util.List distinctBy(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1;
        java.util.HashSet $r3, r6;
        byte $b2;
        java.lang.Byte $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.util.List r8;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        r6 = new java.util.HashSet;

        $r3 = r6;

        specialinvoke r6.<java.util.HashSet: void <init>()>();

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List distinctBy(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1;
        java.util.HashSet $r3, r6;
        char $c2;
        java.lang.Character $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.util.List r8;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        r6 = new java.util.HashSet;

        $r3 = r6;

        specialinvoke r6.<java.util.HashSet: void <init>()>();

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List distinctBy(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1;
        java.util.HashSet $r3, r6;
        double $d0;
        java.lang.Double $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.util.List r8;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        r6 = new java.util.HashSet;

        $r3 = r6;

        specialinvoke r6.<java.util.HashSet: void <init>()>();

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List distinctBy(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1;
        java.util.HashSet $r3, r6;
        float $f0;
        java.lang.Float $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.util.List r8;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        r6 = new java.util.HashSet;

        $r3 = r6;

        specialinvoke r6.<java.util.HashSet: void <init>()>();

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List distinctBy(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1, $i2;
        java.util.HashSet $r3, r6;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.util.List r8;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        r6 = new java.util.HashSet;

        $r3 = r6;

        specialinvoke r6.<java.util.HashSet: void <init>()>();

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List distinctBy(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1;
        java.util.HashSet $r3, r6;
        long $l2;
        java.lang.Long $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.util.List r8;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        r6 = new java.util.HashSet;

        $r3 = r6;

        specialinvoke r6.<java.util.HashSet: void <init>()>();

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List distinctBy(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1;
        java.lang.Object $r3, $r5;
        java.util.HashSet $r4, r6;
        boolean $z0;
        java.util.List r8;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        r6 = new java.util.HashSet;

        $r4 = r6;

        specialinvoke r6.<java.util.HashSet: void <init>()>();

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r0[$i1];

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $z0 = virtualinvoke $r4.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List distinctBy(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1;
        java.util.HashSet $r3, r6;
        short $s2;
        java.lang.Short $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.util.List r8;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        r6 = new java.util.HashSet;

        $r3 = r6;

        specialinvoke r6.<java.util.HashSet: void <init>()>();

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List distinctBy(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1;
        java.util.HashSet $r3, r6;
        boolean $z0, $z1;
        java.lang.Boolean $r4;
        java.lang.Object $r5;
        java.util.List r8;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        r6 = new java.util.HashSet;

        $r3 = r6;

        specialinvoke r6.<java.util.HashSet: void <init>()>();

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $z1 = virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

        if $z1 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List drop(byte[], int)
    {
        byte[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List takeLast(byte[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List drop(char[], int)
    {
        char[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List takeLast(char[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List drop(double[], int)
    {
        double[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: double[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List takeLast(double[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List drop(float[], int)
    {
        float[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: float[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List takeLast(float[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List drop(int[], int)
    {
        int[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List takeLast(int[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List drop(long[], int)
    {
        long[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: long[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List takeLast(long[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List drop(java.lang.Object[], int)
    {
        java.lang.Object[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List takeLast(java.lang.Object[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List drop(short[], int)
    {
        short[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: short[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List takeLast(short[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List drop(boolean[], int)
    {
        boolean[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: boolean[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List takeLast(boolean[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List dropLast(byte[], int)
    {
        byte[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(byte[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List dropLast(char[], int)
    {
        char[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(char[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List dropLast(double[], int)
    {
        double[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: double[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(double[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List dropLast(float[], int)
    {
        float[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: float[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(float[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List dropLast(int[], int)
    {
        int[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(int[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List dropLast(long[], int)
    {
        long[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: long[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(long[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List dropLast(java.lang.Object[], int)
    {
        java.lang.Object[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(java.lang.Object[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List dropLast(short[], int)
    {
        short[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: short[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(short[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List dropLast(boolean[], int)
    {
        boolean[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: boolean[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i1 = lengthof $r0;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i0, 0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(boolean[],int)>($r0, $i0);

        return $r1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;
    }

    public static final java.util.List dropLastWhile(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(byte[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r5;
    }

    public static final java.util.List dropLastWhile(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(char[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r5;
    }

    public static final java.util.List dropLastWhile(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $d0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(double[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r5;
    }

    public static final java.util.List dropLastWhile(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $f0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(float[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r5;
    }

    public static final java.util.List dropLastWhile(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0, $i1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $i1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(int[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r5;
    }

    public static final java.util.List dropLastWhile(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(long[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r5;
    }

    public static final java.util.List dropLastWhile(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;
        java.util.List $r4;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(java.lang.Object[],int)>($r1, $i0);

        return $r4;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r4;
    }

    public static final java.util.List dropLastWhile(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(short[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r5;
    }

    public static final java.util.List dropLastWhile(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.util.List $r4;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List take(boolean[],int)>($r1, $i0);

        return $r4;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r4;
    }

    public static final java.util.List dropWhile(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        boolean $z0, $z1;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.util.List r7;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $b2 = $r0[$i1];

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label3;

     label2:
        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label3;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $z0 = 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List dropWhile(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        boolean $z0, $z1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.util.List r7;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $c2 = $r0[$i1];

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label3;

     label2:
        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label3;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $z0 = 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List dropWhile(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        boolean $z0, $z1;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.util.List r7;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $d0 = $r0[$i1];

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label3;

     label2:
        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label3;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $z0 = 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List dropWhile(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        boolean $z0, $z1;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.util.List r7;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $f0 = $r0[$i1];

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label3;

     label2:
        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label3;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $z0 = 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List dropWhile(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r6;
        boolean $z0, $z1;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.util.List r7;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $i2 = $r0[$i1];

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label3;

     label2:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label3;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $z0 = 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List dropWhile(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        boolean $z0, $z1;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.util.List r7;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $l2 = $r0[$i1];

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label3;

     label2:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label3;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $z0 = 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List dropWhile(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r4;
        java.util.ArrayList $r3, r6;
        boolean $z0, $z1;
        java.lang.Boolean $r5;
        java.util.List r7;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = $r0[$i1];

        if $z0 == 0 goto label2;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        goto label3;

     label2:
        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label3;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $z0 = 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.List dropWhile(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        boolean $z0, $z1;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.util.List r7;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $s2 = $r0[$i1];

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label3;

     label2:
        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label3;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $z0 = 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List dropWhile(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r5;
        boolean $z0, $z1, $z2;
        java.lang.Boolean $r3;
        java.lang.Object $r4;
        java.util.List r6;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $z1 = $r0[$i1];

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label3;

     label2:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = (java.lang.Boolean) $r4;

        $z2 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 != 0 goto label3;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $z0 = 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        r6 = (java.util.List) $r2;

        return r6;
    }

    private static final byte elementAtOrElse(byte[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        byte $b2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        if $i0 > $i1 goto label1;

        $b2 = $r1[$i0];

        return $b2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $b2 = virtualinvoke $r4.<java.lang.Number: byte byteValue()>();

        return $b2;
    }

    private static final char elementAtOrElse(char[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        char $c2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Character $r4;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        if $i0 > $i1 goto label1;

        $c2 = $r1[$i0];

        return $c2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Character) $r3;

        $c2 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        return $c2;
    }

    private static final double elementAtOrElse(double[], int, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0, $i1;
        double $d0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        if $i0 > $i1 goto label1;

        $d0 = $r1[$i0];

        return $d0;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        return $d0;
    }

    private static final float elementAtOrElse(float[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        float $f0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: float[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        if $i0 > $i1 goto label1;

        $f0 = $r1[$i0];

        return $f0;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        return $f0;
    }

    private static final int elementAtOrElse(int[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        if $i0 > $i1 goto label1;

        $i0 = $r1[$i0];

        return $i0;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        return $i0;
    }

    private static final long elementAtOrElse(long[], int, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0, $i1;
        long $l2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: long[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        if $i0 > $i1 goto label1;

        $l2 = $r1[$i0];

        return $l2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $l2 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        return $l2;
    }

    private static final java.lang.Object elementAtOrElse(java.lang.Object[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        $r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        if $i0 > $i1 goto label1;

        $r2 = $r1[$i0];

        return $r2;

     label1:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        return $r2;
    }

    private static final short elementAtOrElse(short[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        short $s2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: short[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        if $i0 > $i1 goto label1;

        $s2 = $r1[$i0];

        return $s2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $s2 = virtualinvoke $r4.<java.lang.Number: short shortValue()>();

        return $s2;
    }

    private static final boolean elementAtOrElse(boolean[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;

        $r1 := @parameter0: boolean[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        if $i0 > $i1 goto label1;

        $z0 = $r1[$i0];

        return $z0;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private static final java.lang.Boolean elementAtOrNull(boolean[], int)
    {
        int $i0;
        java.lang.Boolean $r0;
        boolean[] $r1;

        $r1 := @parameter0: boolean[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Boolean getOrNull(boolean[],int)>($r1, $i0);

        return $r0;
    }

    private static final java.lang.Byte elementAtOrNull(byte[], int)
    {
        int $i0;
        java.lang.Byte $r0;
        byte[] $r1;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Byte getOrNull(byte[],int)>($r1, $i0);

        return $r0;
    }

    private static final java.lang.Character elementAtOrNull(char[], int)
    {
        int $i0;
        java.lang.Character $r0;
        char[] $r1;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Character getOrNull(char[],int)>($r1, $i0);

        return $r0;
    }

    private static final java.lang.Double elementAtOrNull(double[], int)
    {
        int $i0;
        java.lang.Double $r0;
        double[] $r1;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Double getOrNull(double[],int)>($r1, $i0);

        return $r0;
    }

    private static final java.lang.Float elementAtOrNull(float[], int)
    {
        int $i0;
        java.lang.Float $r0;
        float[] $r1;

        $r1 := @parameter0: float[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Float getOrNull(float[],int)>($r1, $i0);

        return $r0;
    }

    private static final java.lang.Integer elementAtOrNull(int[], int)
    {
        int $i0;
        java.lang.Integer $r0;
        int[] $r1;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Integer getOrNull(int[],int)>($r1, $i0);

        return $r0;
    }

    private static final java.lang.Long elementAtOrNull(long[], int)
    {
        int $i0;
        java.lang.Long $r0;
        long[] $r1;

        $r1 := @parameter0: long[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Long getOrNull(long[],int)>($r1, $i0);

        return $r0;
    }

    private static final java.lang.Object elementAtOrNull(java.lang.Object[], int)
    {
        int $i0;
        java.lang.Object $r0;
        java.lang.Object[] $r1;

        $r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object getOrNull(java.lang.Object[],int)>($r1, $i0);

        return $r0;
    }

    private static final java.lang.Short elementAtOrNull(short[], int)
    {
        int $i0;
        java.lang.Short $r0;
        short[] $r1;

        $r1 := @parameter0: short[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Short getOrNull(short[],int)>($r1, $i0);

        return $r0;
    }

    public static final java.util.List filter(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filter(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filter(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filter(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filter(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r6;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filter(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filter(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r4;
        java.util.ArrayList $r3, r6;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0[$i1];

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        r7 = (java.util.Collection) $r3;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r3;

        return r8;
    }

    public static final java.util.List filter(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filter(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r5;
        boolean $z0, $z1;
        java.lang.Boolean $r3;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List filterIndexed(byte[], kotlin.jvm.functions.Function2)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i2, $i3, $i4;
        byte $b1;
        java.util.ArrayList $r2, r7;
        java.lang.Integer $r3;
        java.lang.Byte $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i3 >= $i0 goto label3;

        $b1 = $r0[$i3];

        $i2 = $i4 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        r8 = (java.util.Collection) $r2;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i3 = $i3 + 1;

        $i4 = $i2;

        goto label1;

     label3:
        r9 = (java.util.List) $r2;

        return r9;
    }

    public static final java.util.List filterIndexed(char[], kotlin.jvm.functions.Function2)
    {
        char[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i2, $i3, $i4;
        char $c1;
        java.util.ArrayList $r2, r7;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i3 >= $i0 goto label3;

        $c1 = $r0[$i3];

        $i2 = $i4 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        r8 = (java.util.Collection) $r2;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i3 = $i3 + 1;

        $i4 = $i2;

        goto label1;

     label3:
        r9 = (java.util.List) $r2;

        return r9;
    }

    public static final java.util.List filterIndexed(double[], kotlin.jvm.functions.Function2)
    {
        double[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        double $d0;
        java.util.ArrayList $r2, r7;
        java.lang.Integer $r3;
        java.lang.Double $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i0 goto label3;

        $d0 = $r0[$i2];

        $i1 = $i3 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        r8 = (java.util.Collection) $r2;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i2 = $i2 + 1;

        $i3 = $i1;

        goto label1;

     label3:
        r9 = (java.util.List) $r2;

        return r9;
    }

    public static final java.util.List filterIndexed(float[], kotlin.jvm.functions.Function2)
    {
        float[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        float $f0;
        java.util.ArrayList $r2, r7;
        java.lang.Integer $r3;
        java.lang.Float $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i0 goto label3;

        $f0 = $r0[$i2];

        $i1 = $i3 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        r8 = (java.util.Collection) $r2;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i2 = $i2 + 1;

        $i3 = $i1;

        goto label1;

     label3:
        r9 = (java.util.List) $r2;

        return r9;
    }

    public static final java.util.List filterIndexed(int[], kotlin.jvm.functions.Function2)
    {
        int[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.ArrayList $r2, r7;
        java.lang.Integer $r3, $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i3 >= $i0 goto label3;

        $i1 = $r0[$i3];

        $i2 = $i4 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r8 = (java.util.Collection) $r2;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i3 = $i3 + 1;

        $i4 = $i2;

        goto label1;

     label3:
        r9 = (java.util.List) $r2;

        return r9;
    }

    public static final java.util.List filterIndexed(long[], kotlin.jvm.functions.Function2)
    {
        long[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i2, $i3, $i4;
        long $l1;
        java.util.ArrayList $r2, r7;
        java.lang.Integer $r3;
        java.lang.Long $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i3 >= $i0 goto label3;

        $l1 = $r0[$i3];

        $i2 = $i4 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        r8 = (java.util.Collection) $r2;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i3 = $i3 + 1;

        $i4 = $i2;

        goto label1;

     label3:
        r9 = (java.util.List) $r2;

        return r9;
    }

    public static final java.util.List filterIndexed(java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2, $r5;
        java.util.ArrayList $r3, r7;
        java.lang.Integer $r4;
        java.lang.Boolean $r6;
        boolean $z0;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r7 = new java.util.ArrayList;

        $r3 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i0 goto label3;

        $r2 = $r0[$i2];

        $i1 = $i3 + 1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r2);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        r8 = (java.util.Collection) $r3;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r2);

     label2:
        $i2 = $i2 + 1;

        $i3 = $i1;

        goto label1;

     label3:
        r9 = (java.util.List) $r3;

        return r9;
    }

    public static final java.util.List filterIndexed(short[], kotlin.jvm.functions.Function2)
    {
        short[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i2, $i3, $i4;
        short $s1;
        java.util.ArrayList $r2, r7;
        java.lang.Integer $r3;
        java.lang.Short $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i3 >= $i0 goto label3;

        $s1 = $r0[$i3];

        $i2 = $i4 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        r8 = (java.util.Collection) $r2;

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i3 = $i3 + 1;

        $i4 = $i2;

        goto label1;

     label3:
        r9 = (java.util.List) $r2;

        return r9;
    }

    public static final java.util.List filterIndexed(boolean[], kotlin.jvm.functions.Function2)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.util.ArrayList $r2, r6;
        java.lang.Integer $r3;
        java.lang.Boolean $r4;
        java.lang.Object $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i0 goto label3;

        $z0 = $r0[$i2];

        $i1 = $i3 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r4 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i2 = $i2 + 1;

        $i3 = $i1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.Collection filterIndexedTo(byte[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        byte[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        byte $b0;
        int $i1, $i2, $i3, $i4;
        java.lang.Integer $r3;
        java.lang.Byte $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i2 = lengthof $r0;

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        $b0 = $r0[$i3];

        $i1 = $i4 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i3 = $i3 + 1;

        $i4 = $i1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterIndexedTo(char[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        char[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        char $c0;
        int $i1, $i2, $i3, $i4;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i2 = lengthof $r0;

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        $c0 = $r0[$i3];

        $i1 = $i4 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i3 = $i3 + 1;

        $i4 = $i1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterIndexedTo(double[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        double[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        double $d0;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r3;
        java.lang.Double $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $d0 = $r0[$i2];

        $i0 = $i3 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i2 = $i2 + 1;

        $i3 = $i0;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterIndexedTo(float[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        float[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        float $f0;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r3;
        java.lang.Float $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $f0 = $r0[$i2];

        $i0 = $i3 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i2 = $i2 + 1;

        $i3 = $i0;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterIndexedTo(int[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        int[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Integer $r3, $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i2 = lengthof $r0;

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        $i0 = $r0[$i3];

        $i1 = $i4 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i3 = $i3 + 1;

        $i4 = $i1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterIndexedTo(long[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        long[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        long $l0;
        int $i1, $i2, $i3, $i4;
        java.lang.Integer $r3;
        java.lang.Long $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i2 = lengthof $r0;

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        $l0 = $r0[$i3];

        $i1 = $i4 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i3 = $i3 + 1;

        $i4 = $i1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterIndexedTo(java.lang.Object[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3, $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r4;
        java.lang.Boolean $r6;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $r3 = $r0[$i2];

        $i0 = $i3 + 1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i2 = $i2 + 1;

        $i3 = $i0;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterIndexedTo(short[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        short[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        short $s0;
        int $i1, $i2, $i3, $i4;
        java.lang.Integer $r3;
        java.lang.Short $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i2 = lengthof $r0;

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        $s0 = $r0[$i3];

        $i1 = $i4 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i3 = $i3 + 1;

        $i4 = $i1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterIndexedTo(boolean[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        boolean[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r3;
        java.lang.Boolean $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $z0 = $r0[$i2];

        $i0 = $i3 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r4 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label2:
        $i2 = $i2 + 1;

        $i3 = $i0;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.List filterIsInstance(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0, $i1;
        java.lang.Object $r1;
        java.util.ArrayList $r2, r3;
        boolean $z0;
        java.util.Collection r4;
        java.util.List r5;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.ArrayList;

        $r2 = r3;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r0[$i1];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "R");

        $z0 = $r1 instanceof java.lang.Object;

        if $z0 == 0 goto label2;

        r4 = (java.util.Collection) $r2;

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r1);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r5 = (java.util.List) $r2;

        return r5;
    }

    public static final java.util.Collection filterIsInstanceTo(java.lang.Object[], java.util.Collection)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0[$i1];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(3, "R");

        $z0 = $r2 instanceof java.lang.Object;

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.List filterNot(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filterNot(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filterNot(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filterNot(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filterNot(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r6;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filterNot(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filterNot(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r4;
        java.util.ArrayList $r3, r6;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0[$i1];

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        r7 = (java.util.Collection) $r3;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r3;

        return r8;
    }

    public static final java.util.List filterNot(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List filterNot(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r5;
        boolean $z0, $z1;
        java.lang.Boolean $r3;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List filterNotNull(java.lang.Object[])
    {
        java.util.Collection $r0;
        java.lang.Object[] $r1;
        java.util.List $r2;
        java.util.ArrayList r3;

        $r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r0 = (java.util.Collection) r3;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection)>($r1, $r0);

        $r2 = (java.util.List) $r0;

        return $r2;
    }

    public static final java.util.Collection filterNotNullTo(java.lang.Object[], java.util.Collection)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        java.lang.Object $r2;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0[$i1];

        if $r2 == null goto label2;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterNotTo(byte[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterNotTo(char[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterNotTo(double[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterNotTo(float[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterNotTo(int[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterNotTo(long[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterNotTo(java.lang.Object[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3, $r4;
        int $i0, $i1;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r0[$i1];

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterNotTo(short[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterNotTo(boolean[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.Boolean $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterTo(byte[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterTo(char[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterTo(double[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterTo(float[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterTo(int[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterTo(long[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterTo(java.lang.Object[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3, $r4;
        int $i0, $i1;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r0[$i1];

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterTo(short[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection filterTo(boolean[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.Boolean $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    private static final java.lang.Boolean find(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean $z0, $z1;
        boolean[] $r1;
        int $i0, $i1;
        java.lang.Boolean $r2;
        java.lang.Object $r3;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private static final java.lang.Byte find(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte $b0;
        byte[] $r1;
        int $i1, $i2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $b0 = $r1[$i2];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        return $r2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return null;
    }

    private static final java.lang.Character find(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char $c0;
        char[] $r1;
        int $i1, $i2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $c0 = $r1[$i2];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        return $r2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return null;
    }

    private static final java.lang.Double find(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double $d0;
        double[] $r1;
        int $i0, $i1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private static final java.lang.Float find(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float $f0;
        float[] $r1;
        int $i0, $i1;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private static final java.lang.Integer find(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1, $i2;
        int[] $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $i0 = $r1[$i2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return null;
    }

    private static final java.lang.Long find(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long $l0;
        long[] $r1;
        int $i1, $i2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $l0 = $r1[$i2];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return null;
    }

    private static final java.lang.Object find(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0[$i1];

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $r2;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private static final java.lang.Short find(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short $s0;
        short[] $r1;
        int $i1, $i2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $s0 = $r1[$i2];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        return $r2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return null;
    }

    private static final java.lang.Boolean findLast(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        boolean[] $r1;
        boolean $z0, $z1;
        java.lang.Boolean $r2;
        java.lang.Object $r3;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label4;

     label1:
        $i0 = $i1 + -1;

        $z0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;

     label2:
        if $i0 >= 0 goto label3;

        goto label4;

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        return null;
    }

    private static final java.lang.Byte findLast(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label4;

     label1:
        $i0 = $i1 + -1;

        $b2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        return $r2;

     label2:
        if $i0 >= 0 goto label3;

        goto label4;

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        return null;
    }

    private static final java.lang.Character findLast(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        char[] $r1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label4;

     label1:
        $i0 = $i1 + -1;

        $c2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r2;

     label2:
        if $i0 >= 0 goto label3;

        goto label4;

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        return null;
    }

    private static final java.lang.Double findLast(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        double $d0;
        double[] $r1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label4;

     label1:
        $i0 = $i1 + -1;

        $d0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;

     label2:
        if $i0 >= 0 goto label3;

        goto label4;

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        return null;
    }

    private static final java.lang.Float findLast(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        float[] $r1;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label4;

     label1:
        $i0 = $i1 + -1;

        $f0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;

     label2:
        if $i0 >= 0 goto label3;

        goto label4;

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        return null;
    }

    private static final java.lang.Integer findLast(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        int[] $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label4;

     label1:
        $i0 = $i1 + -1;

        $i1 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;

     label2:
        if $i0 >= 0 goto label3;

        goto label4;

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        return null;
    }

    private static final java.lang.Long findLast(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i2;
        long $l1;
        long[] $r1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i2 = $i0 + -1;

        if $i2 < 0 goto label4;

     label1:
        $i0 = $i2 + -1;

        $l1 = $r1[$i2];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r2;

     label2:
        if $i0 >= 0 goto label3;

        goto label4;

     label3:
        $i2 = $i0;

        goto label1;

     label4:
        return null;
    }

    private static final java.lang.Object findLast(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label4;

     label1:
        $i0 = $i1 + -1;

        $r2 = $r0[$i1];

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $r2;

     label2:
        if $i0 >= 0 goto label3;

        goto label4;

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        return null;
    }

    private static final java.lang.Short findLast(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        short[] $r1;
        short $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label4;

     label1:
        $i0 = $i1 + -1;

        $s2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        return $r2;

     label2:
        if $i0 >= 0 goto label3;

        goto label4;

     label3:
        $i1 = $i0;

        goto label1;

     label4:
        return null;
    }

    public static final byte first(byte[])
    {
        byte[] $r0;
        int $i0;
        boolean $z0;
        byte $b1;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $b1 = $r0[0];

        return $b1;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final byte first(byte[], kotlin.jvm.functions.Function1)
    {
        byte $b0;
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i1, $i2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $b0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $b0;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final char first(char[])
    {
        char[] $r0;
        int $i0;
        boolean $z0;
        char $c1;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $c1 = $r0[0];

        return $c1;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final char first(char[], kotlin.jvm.functions.Function1)
    {
        char $c0;
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i1, $i2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $c0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $c0;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final double first(double[])
    {
        double[] $r0;
        int $i0;
        boolean $z0;
        double $d0;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $d0 = $r0[0];

        return $d0;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final double first(double[], kotlin.jvm.functions.Function1)
    {
        double $d0;
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $d0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final float first(float[])
    {
        float[] $r0;
        int $i0;
        boolean $z0;
        float $f0;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $f0 = $r0[0];

        return $f0;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final float first(float[], kotlin.jvm.functions.Function1)
    {
        float $f0;
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $f0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final int first(int[])
    {
        int[] $r0;
        int $i0;
        boolean $z0;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = $r0[0];

        return $i0;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final int first(int[], kotlin.jvm.functions.Function1)
    {
        int $i0, $i1, $i2;
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $i0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i0;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final long first(long[])
    {
        long[] $r0;
        int $i0;
        boolean $z0;
        long $l1;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $l1 = $r0[0];

        return $l1;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final long first(long[], kotlin.jvm.functions.Function1)
    {
        long $l0;
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i1, $i2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $l0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $l0;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final java.lang.Object first(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r1 = $r0[0];

        return $r1;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    public static final java.lang.Object first(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object $r0, $r3;
        java.lang.Object[] $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r1 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r0 = $r1[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $r0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final short first(short[])
    {
        short[] $r0;
        int $i0;
        boolean $z0;
        short $s1;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $s1 = $r0[0];

        return $s1;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final short first(short[], kotlin.jvm.functions.Function1)
    {
        short $s0;
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i1, $i2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $s0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $s0;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final boolean first(boolean[])
    {
        boolean[] $r0;
        int $i0;
        boolean $z0;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $z0 = $r0[0];

        return $z0;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final boolean first(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean $z0, $z1;
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.util.NoSuchElementException $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        return $z0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r4;
    }

    private static final java.lang.Object firstNotNullOf(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object $r0, $r3;
        java.lang.Object[] $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        java.util.NoSuchElementException $r4;

        $r1 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r0 = $r1[$i1];

        $r0 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r3 = $r0;

        if $r0 != null goto label3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r3 = null;

     label3:
        if $r3 == null goto label4;

        return $r3;

     label4:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>("No element of the array was transformed to a non-null value.");

        goto label5;

     label5:
        throw $r4;
    }

    private static final java.lang.Object firstNotNullOfOrNull(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object $r1;
        java.lang.Object[] $r2;
        int $i0, $i1;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "transform");

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r2[$i1];

        $r1 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

        if $r1 == null goto label2;

        return $r1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Boolean firstOrNull(boolean[])
    {
        java.lang.Boolean $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;

        $r1 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r1[0];

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r0;
    }

    public static final java.lang.Boolean firstOrNull(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean $z0, $z1;
        boolean[] $r1;
        int $i0, $i1;
        java.lang.Boolean $r2;
        java.lang.Object $r3;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Byte firstOrNull(byte[])
    {
        java.lang.Byte $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;

        $r1 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r1[0];

        $r0 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r0;
    }

    public static final java.lang.Byte firstOrNull(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte $b0;
        byte[] $r1;
        int $i1, $i2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $b0 = $r1[$i2];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        return $r2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Character firstOrNull(char[])
    {
        java.lang.Character $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;

        $r1 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r1[0];

        $r0 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r0;
    }

    public static final java.lang.Character firstOrNull(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char $c0;
        char[] $r1;
        int $i1, $i2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $c0 = $r1[$i2];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        return $r2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Double firstOrNull(double[])
    {
        java.lang.Double $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0;

        $r1 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r1[0];

        $r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r0;
    }

    public static final java.lang.Double firstOrNull(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double $d0;
        double[] $r1;
        int $i0, $i1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Float firstOrNull(float[])
    {
        java.lang.Float $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0;

        $r1 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r1[0];

        $r0 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r0;
    }

    public static final java.lang.Float firstOrNull(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float $f0;
        float[] $r1;
        int $i0, $i1;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Integer firstOrNull(int[])
    {
        java.lang.Integer $r0;
        int[] $r1;
        int $i0;
        boolean $z0;

        $r1 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r1[0];

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r0;
    }

    public static final java.lang.Integer firstOrNull(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1, $i2;
        int[] $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $i0 = $r1[$i2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Long firstOrNull(long[])
    {
        java.lang.Long $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;

        $r1 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r1[0];

        $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r0;
    }

    public static final java.lang.Long firstOrNull(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long $l0;
        long[] $r1;
        int $i1, $i2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $l0 = $r1[$i2];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Object firstOrNull(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r1 = $r0[0];

        return $r1;
    }

    public static final java.lang.Object firstOrNull(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object $r1, $r3;
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.lang.Boolean $r4;
        boolean $z0;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r2[$i1];

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $r1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Short firstOrNull(short[])
    {
        java.lang.Short $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;

        $r1 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r1[0];

        $r0 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r0;
    }

    public static final java.lang.Short firstOrNull(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short $s0;
        short[] $r1;
        int $i1, $i2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $s0 = $r1[$i2];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        return $r2;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return null;
    }

    public static final java.util.List flatMap(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        r7 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r7, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List flatMap(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        r7 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r7, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List flatMap(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        r7 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r7, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List flatMap(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        r7 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r7, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List flatMap(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r6;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        r7 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r7, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List flatMap(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        r7 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r7, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List flatMap(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.util.ArrayList $r3, r5;
        java.lang.Iterable $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r3 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Iterable) $r2;

        r6 = (java.util.Collection) $r3;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r6, $r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.List flatMap(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        r7 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r7, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List flatMap(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        r7 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r7, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    private static final java.util.List flatMapIndexedIterable(byte[], kotlin.jvm.functions.Function2)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r7;
        byte $b3;
        java.lang.Integer $r3;
        java.lang.Byte $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        r8 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r8, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r9 = (java.util.List) $r2;

        return r9;
    }

    private static final java.util.List flatMapIndexedIterable(char[], kotlin.jvm.functions.Function2)
    {
        char[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r7;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        r8 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r8, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r9 = (java.util.List) $r2;

        return r9;
    }

    private static final java.util.List flatMapIndexedIterable(double[], kotlin.jvm.functions.Function2)
    {
        double[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r7;
        double $d0;
        java.lang.Integer $r3;
        java.lang.Double $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        r8 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r8, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r9 = (java.util.List) $r2;

        return r9;
    }

    private static final java.util.List flatMapIndexedIterable(float[], kotlin.jvm.functions.Function2)
    {
        float[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r7;
        float $f0;
        java.lang.Integer $r3;
        java.lang.Float $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        r8 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r8, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r9 = (java.util.List) $r2;

        return r9;
    }

    private static final java.util.List flatMapIndexedIterable(int[], kotlin.jvm.functions.Function2)
    {
        int[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r2, r7;
        java.lang.Integer $r3, $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        r8 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r8, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r9 = (java.util.List) $r2;

        return r9;
    }

    private static final java.util.List flatMapIndexedIterable(long[], kotlin.jvm.functions.Function2)
    {
        long[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r7;
        long $l3;
        java.lang.Integer $r3;
        java.lang.Long $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        r8 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r8, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r9 = (java.util.List) $r2;

        return r9;
    }

    private static final java.util.List flatMapIndexedIterable(java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        java.util.ArrayList $r3, r6;
        java.lang.Integer $r4;
        java.lang.Iterable $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r2);

        $r5 = (java.lang.Iterable) $r2;

        r7 = (java.util.Collection) $r3;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r7, $r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r3;

        return r8;
    }

    private static final java.util.List flatMapIndexedIterable(short[], kotlin.jvm.functions.Function2)
    {
        short[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r7;
        short $s3;
        java.lang.Integer $r3;
        java.lang.Short $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        r8 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r8, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r9 = (java.util.List) $r2;

        return r9;
    }

    private static final java.util.List flatMapIndexedIterable(boolean[], kotlin.jvm.functions.Function2)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r7;
        boolean $z0;
        java.lang.Integer $r3;
        java.lang.Boolean $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;
        java.util.Collection r8;
        java.util.List r9;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r7 = new java.util.ArrayList;

        $r2 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        r8 = (java.util.Collection) $r2;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r8, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r9 = (java.util.List) $r2;

        return r9;
    }

    private static final java.util.Collection flatMapIndexedIterableTo(byte[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        byte[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        byte $b3;
        java.lang.Integer $r3;
        java.lang.Byte $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Collection flatMapIndexedIterableTo(char[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        char[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Collection flatMapIndexedIterableTo(double[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        double[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        double $d0;
        java.lang.Integer $r3;
        java.lang.Double $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Collection flatMapIndexedIterableTo(float[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        float[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        float $f0;
        java.lang.Integer $r3;
        java.lang.Float $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Collection flatMapIndexedIterableTo(int[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        int[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r3, $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Collection flatMapIndexedIterableTo(long[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        long[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        long $l3;
        java.lang.Integer $r3;
        java.lang.Long $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Collection flatMapIndexedIterableTo(java.lang.Object[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        int $i0, $i1, $i2;
        java.lang.Integer $r4;
        java.lang.Iterable $r5;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r5 = (java.lang.Iterable) $r3;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Collection flatMapIndexedIterableTo(short[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        short[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        short $s3;
        java.lang.Integer $r3;
        java.lang.Short $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.Collection flatMapIndexedIterableTo(boolean[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        boolean[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Integer $r3;
        java.lang.Boolean $r4;
        java.lang.Object $r5;
        java.lang.Iterable $r6;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = (java.lang.Iterable) $r5;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r6);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static final java.util.List flatMapIndexedSequence(java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        java.util.ArrayList $r3, r6;
        java.lang.Integer $r4;
        kotlin.sequences.Sequence $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r2);

        $r5 = (kotlin.sequences.Sequence) $r2;

        r7 = (java.util.Collection) $r3;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>(r7, $r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r3;

        return r8;
    }

    private static final java.util.Collection flatMapIndexedSequenceTo(java.lang.Object[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        int $i0, $i1, $i2;
        java.lang.Integer $r4;
        kotlin.sequences.Sequence $r5;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r5 = (kotlin.sequences.Sequence) $r3;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>($r1, $r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.List flatMapSequence(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.util.ArrayList $r3, r5;
        kotlin.sequences.Sequence $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r3 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.sequences.Sequence) $r2;

        r6 = (java.util.Collection) $r3;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>(r6, $r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.Collection flatMapSequenceTo(java.lang.Object[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;
        int $i0, $i1;
        kotlin.sequences.Sequence $r4;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r0[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (kotlin.sequences.Sequence) $r3;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>($r1, $r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection flatMapTo(byte[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection flatMapTo(char[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection flatMapTo(double[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection flatMapTo(float[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection flatMapTo(int[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection flatMapTo(long[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection flatMapTo(java.lang.Object[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;
        int $i0, $i1;
        java.lang.Iterable $r4;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r0[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Iterable) $r3;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection flatMapTo(short[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection flatMapTo(boolean[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4;
        java.lang.Iterable $r5;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Iterable) $r4;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r1, $r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.lang.Object fold(byte[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r3;

        $r0 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object fold(char[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        char[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;

        $r0 := @parameter0: char[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object fold(double[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        double[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r3;

        $r0 := @parameter0: double[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object fold(float[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        float[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r3;

        $r0 := @parameter0: float[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object fold(int[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        int[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;

        $r0 := @parameter0: int[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object fold(long[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        long[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r3;

        $r0 := @parameter0: long[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object fold(java.lang.Object[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2, $r3;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r3 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public static final java.lang.Object fold(short[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        short[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r3;

        $r0 := @parameter0: short[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object fold(boolean[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r3;

        $r0 := @parameter0: boolean[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldIndexed(byte[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        byte $b3;
        java.lang.Integer $r3;
        java.lang.Byte $r4;

        $r0 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r2, $r4);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldIndexed(char[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        char[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;

        $r0 := @parameter0: char[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r2, $r4);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldIndexed(double[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        double[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        double $d0;
        java.lang.Integer $r3;
        java.lang.Double $r4;

        $r0 := @parameter0: double[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r2, $r4);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldIndexed(float[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        float[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        float $f0;
        java.lang.Integer $r3;
        java.lang.Float $r4;

        $r0 := @parameter0: float[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r2, $r4);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldIndexed(int[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        int[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r3, $r4;

        $r0 := @parameter0: int[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r2, $r4);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldIndexed(long[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        long[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        long $l3;
        java.lang.Integer $r3;
        java.lang.Long $r4;

        $r0 := @parameter0: long[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r2, $r4);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldIndexed(java.lang.Object[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Integer $r4;

        $r0 := @parameter0: java.lang.Object[];

        $r3 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r3, $r2);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r3;
    }

    public static final java.lang.Object foldIndexed(short[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        short[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        short $s3;
        java.lang.Integer $r3;
        java.lang.Short $r4;

        $r0 := @parameter0: short[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r2, $r4);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldIndexed(boolean[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Integer $r3;
        java.lang.Boolean $r4;

        $r0 := @parameter0: boolean[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r2, $r4);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRight(byte[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0;
        byte $b1;
        java.lang.Byte $r3;

        $r0 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $b1 = $r0[$i0];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRight(char[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        char[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0;
        char $c1;
        java.lang.Character $r3;

        $r0 := @parameter0: char[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $c1 = $r0[$i0];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRight(double[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        double[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        double $d0;
        java.lang.Object $r2;
        int $i0;
        java.lang.Double $r3;

        $r0 := @parameter0: double[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $d0 = $r0[$i0];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRight(float[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        float[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0;
        float $f0;
        java.lang.Float $r3;

        $r0 := @parameter0: float[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $f0 = $r0[$i0];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRight(int[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        int[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        $r0 := @parameter0: int[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

     label1:
        if $i1 < 0 goto label2;

        $i0 = $i1 + -1;

        $i1 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i1 = $i0;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRight(long[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        long[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        long $l0;
        java.lang.Object $r2;
        int $i1;
        java.lang.Long $r3;

        $r0 := @parameter0: long[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

     label1:
        if $i1 < 0 goto label2;

        $l0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRight(java.lang.Object[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2, $r3;
        int $i0;

        $r0 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $r3 = $r0[$i0];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRight(short[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        short[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0;
        short $s1;
        java.lang.Short $r3;

        $r0 := @parameter0: short[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $s1 = $r0[$i0];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRight(boolean[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r3;

        $r0 := @parameter0: boolean[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $z0 = $r0[$i0];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRightIndexed(byte[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0;
        java.lang.Integer $r3;
        byte $b1;
        java.lang.Byte $r4;

        $r0 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $b1 = $r0[$i0];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r4, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRightIndexed(char[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        char[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0;
        java.lang.Integer $r3;
        char $c1;
        java.lang.Character $r4;

        $r0 := @parameter0: char[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $c1 = $r0[$i0];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r4, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRightIndexed(double[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        double[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0;
        java.lang.Integer $r3;
        double $d0;
        java.lang.Double $r4;

        $r0 := @parameter0: double[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $d0 = $r0[$i0];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r4, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRightIndexed(float[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        float[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0;
        java.lang.Integer $r3;
        float $f0;
        java.lang.Float $r4;

        $r0 := @parameter0: float[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $f0 = $r0[$i0];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r4, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRightIndexed(int[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        int[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        java.lang.Integer $r3, $r4;

        $r0 := @parameter0: int[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i1 = $r0[$i0];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r4, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRightIndexed(long[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        long[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0;
        java.lang.Integer $r3;
        long $l1;
        java.lang.Long $r4;

        $r0 := @parameter0: long[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $l1 = $r0[$i0];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r4, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRightIndexed(java.lang.Object[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2, $r3;
        int $i0;
        java.lang.Integer $r4;

        $r0 := @parameter0: java.lang.Object[];

        $r3 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = $r0[$i0];

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r2, $r3);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r3;
    }

    public static final java.lang.Object foldRightIndexed(short[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        short[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0;
        java.lang.Integer $r3;
        short $s1;
        java.lang.Short $r4;

        $r0 := @parameter0: short[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $s1 = $r0[$i0];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r4, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object foldRightIndexed(boolean[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        java.lang.Object $r2;
        int $i0;
        java.lang.Integer $r3;
        boolean $z0;
        java.lang.Boolean $r4;

        $r0 := @parameter0: boolean[];

        $r2 := @parameter1: java.lang.Object;

        $r1 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r0);

     label1:
        if $i0 < 0 goto label2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = $r0[$i0];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r4, $r2);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return $r2;
    }

    public static final void forEach(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Byte $r2;
        int $i0, $i1;
        byte $b2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEach(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Character $r2;
        int $i0, $i1;
        char $c2;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEach(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Double $r2;
        int $i0, $i1;
        double $d0;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEach(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Float $r2;
        int $i0, $i1;
        float $f0;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEach(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Integer $r2;
        int $i0, $i1, $i2;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEach(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Long $r2;
        int $i0, $i1;
        long $l2;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEach(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r2;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEach(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Short $r2;
        int $i0, $i1;
        short $s2;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEach(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Boolean $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEachIndexed(byte[], kotlin.jvm.functions.Function2)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        byte $b3;
        java.lang.Integer $r2;
        java.lang.Byte $r3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEachIndexed(char[], kotlin.jvm.functions.Function2)
    {
        char[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Integer $r2;
        java.lang.Character $r3;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEachIndexed(double[], kotlin.jvm.functions.Function2)
    {
        double[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        double $d0;
        java.lang.Integer $r2;
        java.lang.Double $r3;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEachIndexed(float[], kotlin.jvm.functions.Function2)
    {
        float[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        float $f0;
        java.lang.Integer $r2;
        java.lang.Float $r3;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEachIndexed(int[], kotlin.jvm.functions.Function2)
    {
        int[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r2, $r3;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEachIndexed(long[], kotlin.jvm.functions.Function2)
    {
        long[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        long $l3;
        java.lang.Integer $r2;
        java.lang.Long $r3;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEachIndexed(java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0, $i1, $i2;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEachIndexed(short[], kotlin.jvm.functions.Function2)
    {
        short[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        short $s3;
        java.lang.Integer $r2;
        java.lang.Short $r3;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static final void forEachIndexed(boolean[], kotlin.jvm.functions.Function2)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Boolean $r3;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return;
    }

    public static final kotlin.ranges.IntRange getIndices(byte[])
    {
        int $i0;
        byte[] $r0;
        kotlin.ranges.IntRange $r1;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        return $r1;
    }

    public static final kotlin.ranges.IntRange getIndices(char[])
    {
        int $i0;
        char[] $r0;
        kotlin.ranges.IntRange $r1;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        return $r1;
    }

    public static final kotlin.ranges.IntRange getIndices(double[])
    {
        int $i0;
        double[] $r0;
        kotlin.ranges.IntRange $r1;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        return $r1;
    }

    public static final kotlin.ranges.IntRange getIndices(float[])
    {
        int $i0;
        float[] $r0;
        kotlin.ranges.IntRange $r1;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        return $r1;
    }

    public static final kotlin.ranges.IntRange getIndices(int[])
    {
        int $i0;
        int[] $r0;
        kotlin.ranges.IntRange $r1;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        return $r1;
    }

    public static final kotlin.ranges.IntRange getIndices(long[])
    {
        int $i0;
        long[] $r0;
        kotlin.ranges.IntRange $r1;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        return $r1;
    }

    public static final kotlin.ranges.IntRange getIndices(java.lang.Object[])
    {
        int $i0;
        java.lang.Object[] $r0;
        kotlin.ranges.IntRange $r1;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        return $r1;
    }

    public static final kotlin.ranges.IntRange getIndices(short[])
    {
        int $i0;
        short[] $r0;
        kotlin.ranges.IntRange $r1;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        return $r1;
    }

    public static final kotlin.ranges.IntRange getIndices(boolean[])
    {
        int $i0;
        boolean[] $r0;
        kotlin.ranges.IntRange $r1;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        return $r1;
    }

    public static final int getLastIndex(byte[])
    {
        byte[] $r0;
        int $i0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i0 = $i0 + -1;

        return $i0;
    }

    public static final int getLastIndex(char[])
    {
        char[] $r0;
        int $i0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i0 = $i0 + -1;

        return $i0;
    }

    public static final int getLastIndex(double[])
    {
        double[] $r0;
        int $i0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i0 = $i0 + -1;

        return $i0;
    }

    public static final int getLastIndex(float[])
    {
        float[] $r0;
        int $i0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i0 = $i0 + -1;

        return $i0;
    }

    public static final int getLastIndex(int[])
    {
        int[] $r0;
        int $i0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i0 = $i0 + -1;

        return $i0;
    }

    public static final int getLastIndex(long[])
    {
        long[] $r0;
        int $i0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i0 = $i0 + -1;

        return $i0;
    }

    public static final int getLastIndex(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i0 = $i0 + -1;

        return $i0;
    }

    public static final int getLastIndex(short[])
    {
        short[] $r0;
        int $i0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i0 = $i0 + -1;

        return $i0;
    }

    public static final int getLastIndex(boolean[])
    {
        boolean[] $r0;
        int $i0;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i0 = $i0 + -1;

        return $i0;
    }

    private static final byte getOrElse(byte[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        byte $b2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        if $i0 > $i1 goto label1;

        $b2 = $r1[$i0];

        return $b2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $b2 = virtualinvoke $r4.<java.lang.Number: byte byteValue()>();

        return $b2;
    }

    private static final char getOrElse(char[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        char $c2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Character $r4;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        if $i0 > $i1 goto label1;

        $c2 = $r1[$i0];

        return $c2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Character) $r3;

        $c2 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        return $c2;
    }

    private static final double getOrElse(double[], int, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0, $i1;
        double $d0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        if $i0 > $i1 goto label1;

        $d0 = $r1[$i0];

        return $d0;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        return $d0;
    }

    private static final float getOrElse(float[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        float $f0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: float[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        if $i0 > $i1 goto label1;

        $f0 = $r1[$i0];

        return $f0;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        return $f0;
    }

    private static final int getOrElse(int[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        if $i0 > $i1 goto label1;

        $i0 = $r1[$i0];

        return $i0;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        return $i0;
    }

    private static final long getOrElse(long[], int, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0, $i1;
        long $l2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: long[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        if $i0 > $i1 goto label1;

        $l2 = $r1[$i0];

        return $l2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $l2 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        return $l2;
    }

    private static final java.lang.Object getOrElse(java.lang.Object[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        $r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        if $i0 > $i1 goto label1;

        $r2 = $r1[$i0];

        return $r2;

     label1:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        return $r2;
    }

    private static final short getOrElse(short[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        short $s2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r1 := @parameter0: short[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        if $i0 > $i1 goto label1;

        $s2 = $r1[$i0];

        return $s2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $s2 = virtualinvoke $r4.<java.lang.Number: short shortValue()>();

        return $s2;
    }

    private static final boolean getOrElse(boolean[], int, kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;

        $r1 := @parameter0: boolean[];

        $i0 := @parameter1: int;

        $r0 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "defaultValue");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        if $i0 > $i1 goto label1;

        $z0 = $r1[$i0];

        return $z0;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public static final java.lang.Boolean getOrNull(boolean[], int)
    {
        int $i0, $i1;
        boolean[] $r0;
        boolean $z0;
        java.lang.Boolean $r1;

        $r0 := @parameter0: boolean[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r0);

        if $i0 > $i1 goto label1;

        $z0 = $r0[$i0];

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r1;

     label1:
        return null;
    }

    public static final java.lang.Byte getOrNull(byte[], int)
    {
        int $i0, $i1;
        byte[] $r0;
        byte $b2;
        java.lang.Byte $r1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

        if $i0 > $i1 goto label1;

        $b2 = $r0[$i0];

        $r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        return $r1;

     label1:
        return null;
    }

    public static final java.lang.Character getOrNull(char[], int)
    {
        int $i0, $i1;
        char[] $r0;
        char $c2;
        java.lang.Character $r1;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

        if $i0 > $i1 goto label1;

        $c2 = $r0[$i0];

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r1;

     label1:
        return null;
    }

    public static final java.lang.Double getOrNull(double[], int)
    {
        int $i0, $i1;
        double[] $r0;
        double $d0;
        java.lang.Double $r1;

        $r0 := @parameter0: double[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

        if $i0 > $i1 goto label1;

        $d0 = $r0[$i0];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r1;

     label1:
        return null;
    }

    public static final java.lang.Float getOrNull(float[], int)
    {
        int $i0, $i1;
        float[] $r0;
        float $f0;
        java.lang.Float $r1;

        $r0 := @parameter0: float[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

        if $i0 > $i1 goto label1;

        $f0 = $r0[$i0];

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r1;

     label1:
        return null;
    }

    public static final java.lang.Integer getOrNull(int[], int)
    {
        int $i0, $i1;
        int[] $r0;
        java.lang.Integer $r1;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

        if $i0 > $i1 goto label1;

        $i0 = $r0[$i0];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;

     label1:
        return null;
    }

    public static final java.lang.Long getOrNull(long[], int)
    {
        int $i0, $i1;
        long[] $r0;
        long $l2;
        java.lang.Long $r1;

        $r0 := @parameter0: long[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

        if $i0 > $i1 goto label1;

        $l2 = $r0[$i0];

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        return $r1;

     label1:
        return null;
    }

    public static final java.lang.Object getOrNull(java.lang.Object[], int)
    {
        int $i0, $i1;
        java.lang.Object[] $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        if $i0 > $i1 goto label1;

        $r1 = $r0[$i0];

        return $r1;

     label1:
        return null;
    }

    public static final java.lang.Short getOrNull(short[], int)
    {
        int $i0, $i1;
        short[] $r0;
        short $s2;
        java.lang.Short $r1;

        $r0 := @parameter0: short[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

        if $i0 > $i1 goto label1;

        $s2 = $r0[$i0];

        $r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        return $r1;

     label1:
        return null;
    }

    public static final java.util.Map groupBy(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r8;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r9;
        java.util.Map r10;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        r8 = new java.util.LinkedHashMap;

        $r2 = r8;

        specialinvoke r8.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r10 = (java.util.Map) $r2;

        $r5 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r9 = new java.util.ArrayList;

        $r6 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        r10 = (java.util.Map) $r2;

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r10 = (java.util.Map) $r2;

        return r10;
    }

    public static final java.util.Map groupBy(byte[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r9;
        byte $b2;
        java.lang.Byte $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r10;
        java.util.Map r11;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        r9 = new java.util.LinkedHashMap;

        $r3 = r9;

        specialinvoke r9.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r11 = (java.util.Map) $r3;

        $r6 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r10 = new java.util.ArrayList;

        $r7 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r11 = (java.util.Map) $r3;

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r11 = (java.util.Map) $r3;

        return r11;
    }

    public static final java.util.Map groupBy(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r8;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r9;
        java.util.Map r10;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        r8 = new java.util.LinkedHashMap;

        $r2 = r8;

        specialinvoke r8.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r10 = (java.util.Map) $r2;

        $r5 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r9 = new java.util.ArrayList;

        $r6 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        r10 = (java.util.Map) $r2;

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r10 = (java.util.Map) $r2;

        return r10;
    }

    public static final java.util.Map groupBy(char[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r9;
        char $c2;
        java.lang.Character $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r10;
        java.util.Map r11;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        r9 = new java.util.LinkedHashMap;

        $r3 = r9;

        specialinvoke r9.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r11 = (java.util.Map) $r3;

        $r6 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r10 = new java.util.ArrayList;

        $r7 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r11 = (java.util.Map) $r3;

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r11 = (java.util.Map) $r3;

        return r11;
    }

    public static final java.util.Map groupBy(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r8;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r9;
        java.util.Map r10;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        r8 = new java.util.LinkedHashMap;

        $r2 = r8;

        specialinvoke r8.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r10 = (java.util.Map) $r2;

        $r5 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r9 = new java.util.ArrayList;

        $r6 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        r10 = (java.util.Map) $r2;

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r10 = (java.util.Map) $r2;

        return r10;
    }

    public static final java.util.Map groupBy(double[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r9;
        double $d0;
        java.lang.Double $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r10;
        java.util.Map r11;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        r9 = new java.util.LinkedHashMap;

        $r3 = r9;

        specialinvoke r9.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r11 = (java.util.Map) $r3;

        $r6 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r10 = new java.util.ArrayList;

        $r7 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r11 = (java.util.Map) $r3;

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r11 = (java.util.Map) $r3;

        return r11;
    }

    public static final java.util.Map groupBy(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r8;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r9;
        java.util.Map r10;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        r8 = new java.util.LinkedHashMap;

        $r2 = r8;

        specialinvoke r8.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r10 = (java.util.Map) $r2;

        $r5 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r9 = new java.util.ArrayList;

        $r6 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        r10 = (java.util.Map) $r2;

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r10 = (java.util.Map) $r2;

        return r10;
    }

    public static final java.util.Map groupBy(float[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r9;
        float $f0;
        java.lang.Float $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r10;
        java.util.Map r11;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        r9 = new java.util.LinkedHashMap;

        $r3 = r9;

        specialinvoke r9.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r11 = (java.util.Map) $r3;

        $r6 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r10 = new java.util.ArrayList;

        $r7 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r11 = (java.util.Map) $r3;

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r11 = (java.util.Map) $r3;

        return r11;
    }

    public static final java.util.Map groupBy(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        java.util.LinkedHashMap $r2, r8;
        java.lang.Integer $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r9;
        java.util.Map r10;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        r8 = new java.util.LinkedHashMap;

        $r2 = r8;

        specialinvoke r8.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r10 = (java.util.Map) $r2;

        $r5 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r9 = new java.util.ArrayList;

        $r6 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        r10 = (java.util.Map) $r2;

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r10 = (java.util.Map) $r2;

        return r10;
    }

    public static final java.util.Map groupBy(int[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1, $i2;
        java.util.LinkedHashMap $r3, r9;
        java.lang.Integer $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r10;
        java.util.Map r11;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        r9 = new java.util.LinkedHashMap;

        $r3 = r9;

        specialinvoke r9.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r11 = (java.util.Map) $r3;

        $r6 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r10 = new java.util.ArrayList;

        $r7 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r11 = (java.util.Map) $r3;

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r11 = (java.util.Map) $r3;

        return r11;
    }

    public static final java.util.Map groupBy(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r8;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r9;
        java.util.Map r10;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        r8 = new java.util.LinkedHashMap;

        $r2 = r8;

        specialinvoke r8.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r10 = (java.util.Map) $r2;

        $r5 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r9 = new java.util.ArrayList;

        $r6 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        r10 = (java.util.Map) $r2;

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r10 = (java.util.Map) $r2;

        return r10;
    }

    public static final java.util.Map groupBy(long[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r9;
        long $l2;
        java.lang.Long $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r10;
        java.util.Map r11;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        r9 = new java.util.LinkedHashMap;

        $r3 = r9;

        specialinvoke r9.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r11 = (java.util.Map) $r3;

        $r6 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r10 = new java.util.ArrayList;

        $r7 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r11 = (java.util.Map) $r3;

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r11 = (java.util.Map) $r3;

        return r11;
    }

    public static final java.util.Map groupBy(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r4, $r5, $r6;
        java.util.LinkedHashMap $r3, r8;
        java.util.List $r7;
        java.util.ArrayList r9;
        java.util.Map r10;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        r8 = new java.util.LinkedHashMap;

        $r3 = r8;

        specialinvoke r8.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0[$i1];

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        r10 = (java.util.Map) $r3;

        $r5 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r9 = new java.util.ArrayList;

        $r6 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        r10 = (java.util.Map) $r3;

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r10 = (java.util.Map) $r3;

        return r10;
    }

    public static final java.util.Map groupBy(java.lang.Object[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r9;
        java.lang.Object $r4, $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r10;
        java.util.Map r11;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        r9 = new java.util.LinkedHashMap;

        $r3 = r9;

        specialinvoke r9.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r4 = $r0[$i1];

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r11 = (java.util.Map) $r3;

        $r6 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r10 = new java.util.ArrayList;

        $r7 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r11 = (java.util.Map) $r3;

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r11 = (java.util.Map) $r3;

        return r11;
    }

    public static final java.util.Map groupBy(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r8;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r9;
        java.util.Map r10;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        r8 = new java.util.LinkedHashMap;

        $r2 = r8;

        specialinvoke r8.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r10 = (java.util.Map) $r2;

        $r5 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r9 = new java.util.ArrayList;

        $r6 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        r10 = (java.util.Map) $r2;

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r10 = (java.util.Map) $r2;

        return r10;
    }

    public static final java.util.Map groupBy(short[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r9;
        short $s2;
        java.lang.Short $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r10;
        java.util.Map r11;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        r9 = new java.util.LinkedHashMap;

        $r3 = r9;

        specialinvoke r9.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r11 = (java.util.Map) $r3;

        $r6 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r10 = new java.util.ArrayList;

        $r7 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r11 = (java.util.Map) $r3;

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r11 = (java.util.Map) $r3;

        return r11;
    }

    public static final java.util.Map groupBy(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.LinkedHashMap $r2, r8;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r9;
        java.util.Map r10;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        r8 = new java.util.LinkedHashMap;

        $r2 = r8;

        specialinvoke r8.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r10 = (java.util.Map) $r2;

        $r5 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r9 = new java.util.ArrayList;

        $r6 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        r10 = (java.util.Map) $r2;

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r10 = (java.util.Map) $r2;

        return r10;
    }

    public static final java.util.Map groupBy(boolean[], kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1, $r2;
        int $i0, $i1;
        java.util.LinkedHashMap $r3, r9;
        boolean $z0;
        java.lang.Boolean $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r10;
        java.util.Map r11;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "valueTransform");

        r9 = new java.util.LinkedHashMap;

        $r3 = r9;

        specialinvoke r9.<java.util.LinkedHashMap: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        r11 = (java.util.Map) $r3;

        $r6 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r10 = new java.util.ArrayList;

        $r7 = r10;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        r11 = (java.util.Map) $r3;

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r11 = (java.util.Map) $r3;

        return r11;
    }

    public static final java.util.Map groupByTo(byte[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r8;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r8 = new java.util.ArrayList;

        $r6 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(byte[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r9;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r9 = new java.util.ArrayList;

        $r7 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(char[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r8;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r8 = new java.util.ArrayList;

        $r6 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(char[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r9;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r9 = new java.util.ArrayList;

        $r7 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(double[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r8;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r8 = new java.util.ArrayList;

        $r6 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(double[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r9;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r9 = new java.util.ArrayList;

        $r7 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(float[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r8;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r8 = new java.util.ArrayList;

        $r6 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(float[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r9;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r9 = new java.util.ArrayList;

        $r7 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(int[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r8;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r8 = new java.util.ArrayList;

        $r6 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(int[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Integer $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r9;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r9 = new java.util.ArrayList;

        $r7 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(long[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r8;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r8 = new java.util.ArrayList;

        $r6 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(long[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r9;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r9 = new java.util.ArrayList;

        $r7 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r5 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(java.lang.Object[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3, $r4, $r5, $r6;
        int $i0, $i1;
        java.util.List $r7;
        java.util.ArrayList r8;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r0[$i1];

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r8 = new java.util.ArrayList;

        $r6 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(java.lang.Object[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        java.lang.Object $r4, $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r9;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r4 = $r0[$i1];

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r9 = new java.util.ArrayList;

        $r7 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(short[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r8;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r8 = new java.util.ArrayList;

        $r6 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(short[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r9;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r9 = new java.util.ArrayList;

        $r7 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r5 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(boolean[], java.util.Map, kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4, $r5, $r6;
        java.util.List $r7;
        java.util.ArrayList r8;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = $r5;

        if $r5 != null goto label2;

        r8 = new java.util.ArrayList;

        $r6 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

     label2:
        $r7 = (java.util.List) $r6;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Map groupByTo(boolean[], java.util.Map, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        java.util.Map $r1;
        kotlin.jvm.functions.Function1 $r2, $r3;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r4;
        java.lang.Object $r5, $r6, $r7;
        java.util.List $r8;
        java.util.ArrayList r9;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        $r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "keySelector");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "valueTransform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = $r6;

        if $r6 != null goto label2;

        r9 = new java.util.ArrayList;

        $r7 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        $r8 = (java.util.List) $r7;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final kotlin.collections.Grouping groupingBy(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        kotlin.collections.ArraysKt___ArraysKt$groupingBy$1 $r2;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "keySelector");

        $r2 = new kotlin.collections.ArraysKt___ArraysKt$groupingBy$1;

        specialinvoke $r2.<kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: void <init>(java.lang.Object[],kotlin.jvm.functions.Function1)>($r0, $r1);

        return $r2;
    }

    public static final int indexOf(byte[], byte)
    {
        byte $b0, $b1;
        byte[] $r0;
        int $i2, $i3;

        $r0 := @parameter0: byte[];

        $b0 := @parameter1: byte;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i2 = lengthof $r0;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        $b1 = $r0[$i3];

        if $b0 != $b1 goto label2;

        return $i3;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOf(char[], char)
    {
        char $c0, $c1;
        char[] $r0;
        int $i2, $i3;

        $r0 := @parameter0: char[];

        $c0 := @parameter1: char;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i2 = lengthof $r0;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        $c1 = $r0[$i3];

        if $c0 != $c1 goto label2;

        return $i3;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOf(double[], double)
    {
        double $d0, $d1;
        byte $b0;
        double[] $r0;
        int $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: double[];

        $d0 := @parameter1: double;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label5;

        $d1 = $r0[$i2];

        $b0 = $d0 cmpg $d1;

        if $b0 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        return $i2;

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        return -1;
    }

    public static final int indexOf(float[], float)
    {
        float $f0, $f1;
        float[] $r0;
        int $i0, $i1;
        byte $b2;
        boolean $z0;

        $r0 := @parameter0: float[];

        $f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $f1 = $r0[$i1];

        $b2 = $f0 cmpg $f1;

        if $b2 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        return $i1;

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        return -1;
    }

    public static final int indexOf(int[], int)
    {
        int $i0, $i1, $i2, $i3;
        int[] $r0;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i2 = lengthof $r0;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        $i1 = $r0[$i3];

        if $i0 != $i1 goto label2;

        return $i3;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOf(long[], long)
    {
        long $l0, $l1;
        byte $b2;
        long[] $r0;
        int $i3, $i4;

        $r0 := @parameter0: long[];

        $l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i3 = lengthof $r0;

        $i4 = 0;

     label1:
        if $i4 >= $i3 goto label3;

        $l1 = $r0[$i4];

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label2;

        return $i4;

     label2:
        $i4 = $i4 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOf(java.lang.Object[], java.lang.Object)
    {
        boolean $z0;
        java.lang.Object[] $r0;
        java.lang.Object $r1, $r2;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = 0;

        if $r1 != null goto label3;

        $i1 = lengthof $r0;

     label1:
        if $i0 >= $i1 goto label6;

        $r1 = $r0[$i0];

        if $r1 != null goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $i1 = lengthof $r0;

     label4:
        if $i0 >= $i1 goto label6;

        $r2 = $r0[$i0];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $z0 == 0 goto label5;

        return $i0;

     label5:
        $i0 = $i0 + 1;

        goto label4;

     label6:
        return -1;
    }

    public static final int indexOf(short[], short)
    {
        short $s0, $s1;
        short[] $r0;
        int $i2, $i3;

        $r0 := @parameter0: short[];

        $s0 := @parameter1: short;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i2 = lengthof $r0;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        $s1 = $r0[$i3];

        if $s0 != $s1 goto label2;

        return $i3;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOf(boolean[], boolean)
    {
        boolean $z0, $z1;
        boolean[] $r0;
        int $i0, $i1;

        $r0 := @parameter0: boolean[];

        $z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z1 = $r0[$i1];

        if $z0 != $z1 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfFirst(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfFirst(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfFirst(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfFirst(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfFirst(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfFirst(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfFirst(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r1[$i1];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfFirst(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfFirst(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfLast(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $b2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfLast(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $c2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfLast(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $d0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfLast(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfLast(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $i2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfLast(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $l2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfLast(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $r2 = $r0[$i1];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfLast(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $s2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return -1;
    }

    public static final int indexOfLast(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return -1;
    }

    public static final java.util.Set intersect(byte[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        byte[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: byte[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(byte[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean retainAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set intersect(char[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        char[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: char[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(char[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean retainAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set intersect(double[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        double[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: double[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(double[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean retainAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set intersect(float[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        float[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: float[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(float[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean retainAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set intersect(int[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        int[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: int[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(int[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean retainAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set intersect(long[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        long[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: long[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(long[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean retainAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set intersect(java.lang.Object[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        java.lang.Object[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(java.lang.Object[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean retainAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set intersect(short[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        short[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: short[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(short[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean retainAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set intersect(boolean[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        boolean[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: boolean[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(boolean[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean retainAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    private static final boolean isEmpty(byte[])
    {
        byte[] $r0;
        int $i0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static final boolean isEmpty(char[])
    {
        char[] $r0;
        int $i0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static final boolean isEmpty(double[])
    {
        double[] $r0;
        int $i0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static final boolean isEmpty(float[])
    {
        float[] $r0;
        int $i0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static final boolean isEmpty(int[])
    {
        int[] $r0;
        int $i0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static final boolean isEmpty(long[])
    {
        long[] $r0;
        int $i0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static final boolean isEmpty(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static final boolean isEmpty(short[])
    {
        short[] $r0;
        int $i0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static final boolean isEmpty(boolean[])
    {
        boolean[] $r0;
        int $i0;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static final boolean isNotEmpty(byte[])
    {
        byte[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    private static final boolean isNotEmpty(char[])
    {
        char[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    private static final boolean isNotEmpty(double[])
    {
        double[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    private static final boolean isNotEmpty(float[])
    {
        float[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    private static final boolean isNotEmpty(int[])
    {
        int[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    private static final boolean isNotEmpty(long[])
    {
        long[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    private static final boolean isNotEmpty(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    private static final boolean isNotEmpty(short[])
    {
        short[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    private static final boolean isNotEmpty(boolean[])
    {
        boolean[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        return $z0;
    }

    public static final java.lang.Appendable joinTo(byte[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3;
        kotlin.jvm.functions.Function1 $r5;
        byte $b4;
        java.lang.Byte $r7;
        java.lang.Object $r8;
        java.lang.String $r9;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r6 := @parameter3: java.lang.CharSequence;

        $r3 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r4 := @parameter6: java.lang.CharSequence;

        $r5 := @parameter7: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "buffer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r4, "truncated");

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label6;

        $b4 = $r0[$i2];

        $i3 = $i3 + 1;

        if $i3 <= 1 goto label2;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

     label2:
        if $i0 < 0 goto label3;

        if $i3 > $i0 goto label6;

     label3:
        if $r5 == null goto label4;

        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b4);

        $r8 = interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $r6 = (java.lang.CharSequence) $r8;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        goto label5;

     label4:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($b4);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r9);

     label5:
        $i2 = $i2 + 1;

        goto label1;

     label6:
        if $i0 < 0 goto label7;

        if $i3 <= $i0 goto label7;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

     label7:
        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        return $r1;
    }

    public static final java.lang.Appendable joinTo(char[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3;
        kotlin.jvm.functions.Function1 $r5;
        char $c4;
        java.lang.Character $r7;
        java.lang.Object $r8;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r6 := @parameter3: java.lang.CharSequence;

        $r3 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r4 := @parameter6: java.lang.CharSequence;

        $r5 := @parameter7: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "buffer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r4, "truncated");

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label6;

        $c4 = $r0[$i2];

        $i3 = $i3 + 1;

        if $i3 <= 1 goto label2;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

     label2:
        if $i0 < 0 goto label3;

        if $i3 > $i0 goto label6;

     label3:
        if $r5 == null goto label4;

        $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c4);

        $r8 = interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $r6 = (java.lang.CharSequence) $r8;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        goto label5;

     label4:
        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(char)>($c4);

     label5:
        $i2 = $i2 + 1;

        goto label1;

     label6:
        if $i0 < 0 goto label7;

        if $i3 <= $i0 goto label7;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

     label7:
        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        return $r1;
    }

    public static final java.lang.Appendable joinTo(double[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3;
        kotlin.jvm.functions.Function1 $r5;
        double $d0;
        java.lang.Double $r7;
        java.lang.Object $r8;
        java.lang.String $r9;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r6 := @parameter3: java.lang.CharSequence;

        $r3 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r4 := @parameter6: java.lang.CharSequence;

        $r5 := @parameter7: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "buffer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r4, "truncated");

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label6;

        $d0 = $r0[$i2];

        $i3 = $i3 + 1;

        if $i3 <= 1 goto label2;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

     label2:
        if $i0 < 0 goto label3;

        if $i3 > $i0 goto label6;

     label3:
        if $r5 == null goto label4;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r8 = interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $r6 = (java.lang.CharSequence) $r8;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        goto label5;

     label4:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r9);

     label5:
        $i2 = $i2 + 1;

        goto label1;

     label6:
        if $i0 < 0 goto label7;

        if $i3 <= $i0 goto label7;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

     label7:
        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        return $r1;
    }

    public static final java.lang.Appendable joinTo(float[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3;
        kotlin.jvm.functions.Function1 $r5;
        float $f0;
        java.lang.Float $r7;
        java.lang.Object $r8;
        java.lang.String $r9;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r6 := @parameter3: java.lang.CharSequence;

        $r3 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r4 := @parameter6: java.lang.CharSequence;

        $r5 := @parameter7: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "buffer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r4, "truncated");

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label6;

        $f0 = $r0[$i2];

        $i3 = $i3 + 1;

        if $i3 <= 1 goto label2;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

     label2:
        if $i0 < 0 goto label3;

        if $i3 > $i0 goto label6;

     label3:
        if $r5 == null goto label4;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r8 = interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $r6 = (java.lang.CharSequence) $r8;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        goto label5;

     label4:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r9);

     label5:
        $i2 = $i2 + 1;

        goto label1;

     label6:
        if $i0 < 0 goto label7;

        if $i3 <= $i0 goto label7;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

     label7:
        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        return $r1;
    }

    public static final java.lang.Appendable joinTo(int[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        kotlin.jvm.functions.Function1 $r5;
        java.lang.Integer $r7;
        java.lang.Object $r8;
        java.lang.String $r9;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r6 := @parameter3: java.lang.CharSequence;

        $r3 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r4 := @parameter6: java.lang.CharSequence;

        $r5 := @parameter7: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "buffer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r4, "truncated");

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label6;

        $i4 = $r0[$i2];

        $i3 = $i3 + 1;

        if $i3 <= 1 goto label2;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

     label2:
        if $i0 < 0 goto label3;

        if $i3 > $i0 goto label6;

     label3:
        if $r5 == null goto label4;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r8 = interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $r6 = (java.lang.CharSequence) $r8;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        goto label5;

     label4:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r9);

     label5:
        $i2 = $i2 + 1;

        goto label1;

     label6:
        if $i0 < 0 goto label7;

        if $i3 <= $i0 goto label7;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

     label7:
        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        return $r1;
    }

    public static final java.lang.Appendable joinTo(long[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3;
        kotlin.jvm.functions.Function1 $r5;
        long $l4;
        java.lang.Long $r7;
        java.lang.Object $r8;
        java.lang.String $r9;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r6 := @parameter3: java.lang.CharSequence;

        $r3 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r4 := @parameter6: java.lang.CharSequence;

        $r5 := @parameter7: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "buffer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r4, "truncated");

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label6;

        $l4 = $r0[$i2];

        $i3 = $i3 + 1;

        if $i3 <= 1 goto label2;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

     label2:
        if $i0 < 0 goto label3;

        if $i3 > $i0 goto label6;

     label3:
        if $r5 == null goto label4;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r8 = interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $r6 = (java.lang.CharSequence) $r8;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        goto label5;

     label4:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l4);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r9);

     label5:
        $i2 = $i2 + 1;

        goto label1;

     label6:
        if $i0 < 0 goto label7;

        if $i3 <= $i0 goto label7;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

     label7:
        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        return $r1;
    }

    public static final java.lang.Appendable joinTo(java.lang.Object[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r7;
        int $i0, $i1, $i2, $i3;
        kotlin.jvm.functions.Function1 $r5;
        java.lang.Object $r6;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r7 := @parameter3: java.lang.CharSequence;

        $r3 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r4 := @parameter6: java.lang.CharSequence;

        $r5 := @parameter7: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "buffer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r7, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r4, "truncated");

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r7);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $r6 = $r0[$i2];

        $i3 = $i3 + 1;

        if $i3 <= 1 goto label2;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

     label2:
        if $i0 < 0 goto label3;

        if $i3 > $i0 goto label4;

     label3:
        staticinvoke <kotlin.text.StringsKt: void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1)>($r1, $r6, $r5);

        $i2 = $i2 + 1;

        goto label1;

     label4:
        if $i0 < 0 goto label5;

        if $i3 <= $i0 goto label5;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

     label5:
        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        return $r1;
    }

    public static final java.lang.Appendable joinTo(short[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3;
        kotlin.jvm.functions.Function1 $r5;
        short $s4;
        java.lang.Short $r7;
        java.lang.Object $r8;
        java.lang.String $r9;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r6 := @parameter3: java.lang.CharSequence;

        $r3 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r4 := @parameter6: java.lang.CharSequence;

        $r5 := @parameter7: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "buffer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r4, "truncated");

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label6;

        $s4 = $r0[$i2];

        $i3 = $i3 + 1;

        if $i3 <= 1 goto label2;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

     label2:
        if $i0 < 0 goto label3;

        if $i3 > $i0 goto label6;

     label3:
        if $r5 == null goto label4;

        $r7 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s4);

        $r8 = interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $r6 = (java.lang.CharSequence) $r8;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        goto label5;

     label4:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($s4);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r9);

     label5:
        $i2 = $i2 + 1;

        goto label1;

     label6:
        if $i0 < 0 goto label7;

        if $i3 <= $i0 goto label7;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

     label7:
        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        return $r1;
    }

    public static final java.lang.Appendable joinTo(boolean[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3;
        kotlin.jvm.functions.Function1 $r5;
        boolean $z0;
        java.lang.Boolean $r7;
        java.lang.Object $r8;
        java.lang.String $r9;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r6 := @parameter3: java.lang.CharSequence;

        $r3 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r4 := @parameter6: java.lang.CharSequence;

        $r5 := @parameter7: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "buffer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r4, "truncated");

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label6;

        $z0 = $r0[$i2];

        $i3 = $i3 + 1;

        if $i3 <= 1 goto label2;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

     label2:
        if $i0 < 0 goto label3;

        if $i3 > $i0 goto label6;

     label3:
        if $r5 == null goto label4;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r8 = interfaceinvoke $r5.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r7);

        $r6 = (java.lang.CharSequence) $r8;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r6);

        goto label5;

     label4:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r9);

     label5:
        $i2 = $i2 + 1;

        goto label1;

     label6:
        if $i0 < 0 goto label7;

        if $i3 <= $i0 goto label7;

        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r4);

     label7:
        interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r3);

        return $r1;
    }

    public static java.lang.Appendable joinTo$default(byte[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        byte[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Object $r7, $r8, $r9, $r10;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r3 := @parameter3: java.lang.CharSequence;

        $r4 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r5 := @parameter6: java.lang.CharSequence;

        $r6 := @parameter7: kotlin.jvm.functions.Function1;

        $i1 := @parameter8: int;

        $r7 := @parameter9: java.lang.Object;

        $i2 = $i1 & 2;

        if $i2 == 0 goto label01;

        $r7 = ", ";

        goto label02;

     label01:
        $r7 = $r2;

     label02:
        $i2 = $i1 & 4;

        $r8 = "";

        if $i2 == 0 goto label03;

        $r9 = "";

        goto label04;

     label03:
        $r9 = $r3;

     label04:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label05;

        goto label06;

     label05:
        $r8 = $r4;

     label06:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label07;

        $i0 = -1;

        goto label07;

     label07:
        $i2 = $i1 & 32;

        if $i2 == 0 goto label08;

        $r10 = "...";

        goto label09;

     label08:
        $r10 = $r5;

     label09:
        $i1 = $i1 & 64;

        if $i1 == 0 goto label10;

        $r6 = null;

        goto label10;

     label10:
        $r2 = (java.lang.CharSequence) $r7;

        $r3 = (java.lang.CharSequence) $r9;

        $r4 = (java.lang.CharSequence) $r8;

        $r5 = (java.lang.CharSequence) $r10;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r0, $r1, $r2, $r3, $r4, $i0, $r5, $r6);

        return $r1;
    }

    public static java.lang.Appendable joinTo$default(char[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        char[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Object $r7, $r8, $r9, $r10;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r3 := @parameter3: java.lang.CharSequence;

        $r4 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r5 := @parameter6: java.lang.CharSequence;

        $r6 := @parameter7: kotlin.jvm.functions.Function1;

        $i1 := @parameter8: int;

        $r7 := @parameter9: java.lang.Object;

        $i2 = $i1 & 2;

        if $i2 == 0 goto label01;

        $r7 = ", ";

        goto label02;

     label01:
        $r7 = $r2;

     label02:
        $i2 = $i1 & 4;

        $r8 = "";

        if $i2 == 0 goto label03;

        $r9 = "";

        goto label04;

     label03:
        $r9 = $r3;

     label04:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label05;

        goto label06;

     label05:
        $r8 = $r4;

     label06:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label07;

        $i0 = -1;

        goto label07;

     label07:
        $i2 = $i1 & 32;

        if $i2 == 0 goto label08;

        $r10 = "...";

        goto label09;

     label08:
        $r10 = $r5;

     label09:
        $i1 = $i1 & 64;

        if $i1 == 0 goto label10;

        $r6 = null;

        goto label10;

     label10:
        $r2 = (java.lang.CharSequence) $r7;

        $r3 = (java.lang.CharSequence) $r9;

        $r4 = (java.lang.CharSequence) $r8;

        $r5 = (java.lang.CharSequence) $r10;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r0, $r1, $r2, $r3, $r4, $i0, $r5, $r6);

        return $r1;
    }

    public static java.lang.Appendable joinTo$default(double[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        double[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Object $r7, $r8, $r9, $r10;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r3 := @parameter3: java.lang.CharSequence;

        $r4 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r5 := @parameter6: java.lang.CharSequence;

        $r6 := @parameter7: kotlin.jvm.functions.Function1;

        $i1 := @parameter8: int;

        $r7 := @parameter9: java.lang.Object;

        $i2 = $i1 & 2;

        if $i2 == 0 goto label01;

        $r7 = ", ";

        goto label02;

     label01:
        $r7 = $r2;

     label02:
        $i2 = $i1 & 4;

        $r8 = "";

        if $i2 == 0 goto label03;

        $r9 = "";

        goto label04;

     label03:
        $r9 = $r3;

     label04:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label05;

        goto label06;

     label05:
        $r8 = $r4;

     label06:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label07;

        $i0 = -1;

        goto label07;

     label07:
        $i2 = $i1 & 32;

        if $i2 == 0 goto label08;

        $r10 = "...";

        goto label09;

     label08:
        $r10 = $r5;

     label09:
        $i1 = $i1 & 64;

        if $i1 == 0 goto label10;

        $r6 = null;

        goto label10;

     label10:
        $r2 = (java.lang.CharSequence) $r7;

        $r3 = (java.lang.CharSequence) $r9;

        $r4 = (java.lang.CharSequence) $r8;

        $r5 = (java.lang.CharSequence) $r10;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r0, $r1, $r2, $r3, $r4, $i0, $r5, $r6);

        return $r1;
    }

    public static java.lang.Appendable joinTo$default(float[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        float[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Object $r7, $r8, $r9, $r10;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r3 := @parameter3: java.lang.CharSequence;

        $r4 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r5 := @parameter6: java.lang.CharSequence;

        $r6 := @parameter7: kotlin.jvm.functions.Function1;

        $i1 := @parameter8: int;

        $r7 := @parameter9: java.lang.Object;

        $i2 = $i1 & 2;

        if $i2 == 0 goto label01;

        $r7 = ", ";

        goto label02;

     label01:
        $r7 = $r2;

     label02:
        $i2 = $i1 & 4;

        $r8 = "";

        if $i2 == 0 goto label03;

        $r9 = "";

        goto label04;

     label03:
        $r9 = $r3;

     label04:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label05;

        goto label06;

     label05:
        $r8 = $r4;

     label06:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label07;

        $i0 = -1;

        goto label07;

     label07:
        $i2 = $i1 & 32;

        if $i2 == 0 goto label08;

        $r10 = "...";

        goto label09;

     label08:
        $r10 = $r5;

     label09:
        $i1 = $i1 & 64;

        if $i1 == 0 goto label10;

        $r6 = null;

        goto label10;

     label10:
        $r2 = (java.lang.CharSequence) $r7;

        $r3 = (java.lang.CharSequence) $r9;

        $r4 = (java.lang.CharSequence) $r8;

        $r5 = (java.lang.CharSequence) $r10;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r0, $r1, $r2, $r3, $r4, $i0, $r5, $r6);

        return $r1;
    }

    public static java.lang.Appendable joinTo$default(int[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        int[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Object $r7, $r8, $r9, $r10;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r3 := @parameter3: java.lang.CharSequence;

        $r4 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r5 := @parameter6: java.lang.CharSequence;

        $r6 := @parameter7: kotlin.jvm.functions.Function1;

        $i1 := @parameter8: int;

        $r7 := @parameter9: java.lang.Object;

        $i2 = $i1 & 2;

        if $i2 == 0 goto label01;

        $r7 = ", ";

        goto label02;

     label01:
        $r7 = $r2;

     label02:
        $i2 = $i1 & 4;

        $r8 = "";

        if $i2 == 0 goto label03;

        $r9 = "";

        goto label04;

     label03:
        $r9 = $r3;

     label04:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label05;

        goto label06;

     label05:
        $r8 = $r4;

     label06:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label07;

        $i0 = -1;

        goto label07;

     label07:
        $i2 = $i1 & 32;

        if $i2 == 0 goto label08;

        $r10 = "...";

        goto label09;

     label08:
        $r10 = $r5;

     label09:
        $i1 = $i1 & 64;

        if $i1 == 0 goto label10;

        $r6 = null;

        goto label10;

     label10:
        $r2 = (java.lang.CharSequence) $r7;

        $r3 = (java.lang.CharSequence) $r9;

        $r4 = (java.lang.CharSequence) $r8;

        $r5 = (java.lang.CharSequence) $r10;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r0, $r1, $r2, $r3, $r4, $i0, $r5, $r6);

        return $r1;
    }

    public static java.lang.Appendable joinTo$default(long[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        long[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Object $r7, $r8, $r9, $r10;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r3 := @parameter3: java.lang.CharSequence;

        $r4 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r5 := @parameter6: java.lang.CharSequence;

        $r6 := @parameter7: kotlin.jvm.functions.Function1;

        $i1 := @parameter8: int;

        $r7 := @parameter9: java.lang.Object;

        $i2 = $i1 & 2;

        if $i2 == 0 goto label01;

        $r7 = ", ";

        goto label02;

     label01:
        $r7 = $r2;

     label02:
        $i2 = $i1 & 4;

        $r8 = "";

        if $i2 == 0 goto label03;

        $r9 = "";

        goto label04;

     label03:
        $r9 = $r3;

     label04:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label05;

        goto label06;

     label05:
        $r8 = $r4;

     label06:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label07;

        $i0 = -1;

        goto label07;

     label07:
        $i2 = $i1 & 32;

        if $i2 == 0 goto label08;

        $r10 = "...";

        goto label09;

     label08:
        $r10 = $r5;

     label09:
        $i1 = $i1 & 64;

        if $i1 == 0 goto label10;

        $r6 = null;

        goto label10;

     label10:
        $r2 = (java.lang.CharSequence) $r7;

        $r3 = (java.lang.CharSequence) $r9;

        $r4 = (java.lang.CharSequence) $r8;

        $r5 = (java.lang.CharSequence) $r10;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r0, $r1, $r2, $r3, $r4, $i0, $r5, $r6);

        return $r1;
    }

    public static java.lang.Appendable joinTo$default(java.lang.Object[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Object[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Object $r7, $r8, $r9, $r10;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r3 := @parameter3: java.lang.CharSequence;

        $r4 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r5 := @parameter6: java.lang.CharSequence;

        $r6 := @parameter7: kotlin.jvm.functions.Function1;

        $i1 := @parameter8: int;

        $r7 := @parameter9: java.lang.Object;

        $i2 = $i1 & 2;

        if $i2 == 0 goto label01;

        $r7 = ", ";

        goto label02;

     label01:
        $r7 = $r2;

     label02:
        $i2 = $i1 & 4;

        $r8 = "";

        if $i2 == 0 goto label03;

        $r9 = "";

        goto label04;

     label03:
        $r9 = $r3;

     label04:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label05;

        goto label06;

     label05:
        $r8 = $r4;

     label06:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label07;

        $i0 = -1;

        goto label07;

     label07:
        $i2 = $i1 & 32;

        if $i2 == 0 goto label08;

        $r10 = "...";

        goto label09;

     label08:
        $r10 = $r5;

     label09:
        $i1 = $i1 & 64;

        if $i1 == 0 goto label10;

        $r6 = null;

        goto label10;

     label10:
        $r2 = (java.lang.CharSequence) $r7;

        $r3 = (java.lang.CharSequence) $r9;

        $r4 = (java.lang.CharSequence) $r8;

        $r5 = (java.lang.CharSequence) $r10;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r0, $r1, $r2, $r3, $r4, $i0, $r5, $r6);

        return $r1;
    }

    public static java.lang.Appendable joinTo$default(short[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        short[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Object $r7, $r8, $r9, $r10;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r3 := @parameter3: java.lang.CharSequence;

        $r4 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r5 := @parameter6: java.lang.CharSequence;

        $r6 := @parameter7: kotlin.jvm.functions.Function1;

        $i1 := @parameter8: int;

        $r7 := @parameter9: java.lang.Object;

        $i2 = $i1 & 2;

        if $i2 == 0 goto label01;

        $r7 = ", ";

        goto label02;

     label01:
        $r7 = $r2;

     label02:
        $i2 = $i1 & 4;

        $r8 = "";

        if $i2 == 0 goto label03;

        $r9 = "";

        goto label04;

     label03:
        $r9 = $r3;

     label04:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label05;

        goto label06;

     label05:
        $r8 = $r4;

     label06:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label07;

        $i0 = -1;

        goto label07;

     label07:
        $i2 = $i1 & 32;

        if $i2 == 0 goto label08;

        $r10 = "...";

        goto label09;

     label08:
        $r10 = $r5;

     label09:
        $i1 = $i1 & 64;

        if $i1 == 0 goto label10;

        $r6 = null;

        goto label10;

     label10:
        $r2 = (java.lang.CharSequence) $r7;

        $r3 = (java.lang.CharSequence) $r9;

        $r4 = (java.lang.CharSequence) $r8;

        $r5 = (java.lang.CharSequence) $r10;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r0, $r1, $r2, $r3, $r4, $i0, $r5, $r6);

        return $r1;
    }

    public static java.lang.Appendable joinTo$default(boolean[], java.lang.Appendable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        boolean[] $r0;
        java.lang.Appendable $r1;
        java.lang.CharSequence $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;
        java.lang.Object $r7, $r8, $r9, $r10;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.lang.Appendable;

        $r2 := @parameter2: java.lang.CharSequence;

        $r3 := @parameter3: java.lang.CharSequence;

        $r4 := @parameter4: java.lang.CharSequence;

        $i0 := @parameter5: int;

        $r5 := @parameter6: java.lang.CharSequence;

        $r6 := @parameter7: kotlin.jvm.functions.Function1;

        $i1 := @parameter8: int;

        $r7 := @parameter9: java.lang.Object;

        $i2 = $i1 & 2;

        if $i2 == 0 goto label01;

        $r7 = ", ";

        goto label02;

     label01:
        $r7 = $r2;

     label02:
        $i2 = $i1 & 4;

        $r8 = "";

        if $i2 == 0 goto label03;

        $r9 = "";

        goto label04;

     label03:
        $r9 = $r3;

     label04:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label05;

        goto label06;

     label05:
        $r8 = $r4;

     label06:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label07;

        $i0 = -1;

        goto label07;

     label07:
        $i2 = $i1 & 32;

        if $i2 == 0 goto label08;

        $r10 = "...";

        goto label09;

     label08:
        $r10 = $r5;

     label09:
        $i1 = $i1 & 64;

        if $i1 == 0 goto label10;

        $r6 = null;

        goto label10;

     label10:
        $r2 = (java.lang.CharSequence) $r7;

        $r3 = (java.lang.CharSequence) $r9;

        $r4 = (java.lang.CharSequence) $r8;

        $r5 = (java.lang.CharSequence) $r10;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r0, $r1, $r2, $r3, $r4, $i0, $r5, $r6);

        return $r1;
    }

    public static final java.lang.String joinToString(byte[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0, $r1, $r2, $r6;
        int $i0;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.StringBuilder $r4;
        byte[] $r5;
        java.lang.Appendable $r7;
        java.lang.String $r8;

        $r5 := @parameter0: byte[];

        $r6 := @parameter1: java.lang.CharSequence;

        $r0 := @parameter2: java.lang.CharSequence;

        $r1 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r2 := @parameter5: java.lang.CharSequence;

        $r3 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r5, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "truncated");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r5, $r4, $r6, $r0, $r1, $i0, $r2, $r3);

        $r4 = (java.lang.StringBuilder) $r7;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "joinTo(StringBuilder(), \u2026ed, transform).toString()");

        return $r8;
    }

    public static final java.lang.String joinToString(char[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0, $r1, $r2, $r6;
        int $i0;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.StringBuilder $r4;
        char[] $r5;
        java.lang.Appendable $r7;
        java.lang.String $r8;

        $r5 := @parameter0: char[];

        $r6 := @parameter1: java.lang.CharSequence;

        $r0 := @parameter2: java.lang.CharSequence;

        $r1 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r2 := @parameter5: java.lang.CharSequence;

        $r3 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r5, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "truncated");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r5, $r4, $r6, $r0, $r1, $i0, $r2, $r3);

        $r4 = (java.lang.StringBuilder) $r7;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "joinTo(StringBuilder(), \u2026ed, transform).toString()");

        return $r8;
    }

    public static final java.lang.String joinToString(double[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0, $r1, $r2, $r6;
        int $i0;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.StringBuilder $r4;
        double[] $r5;
        java.lang.Appendable $r7;
        java.lang.String $r8;

        $r5 := @parameter0: double[];

        $r6 := @parameter1: java.lang.CharSequence;

        $r0 := @parameter2: java.lang.CharSequence;

        $r1 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r2 := @parameter5: java.lang.CharSequence;

        $r3 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r5, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "truncated");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r5, $r4, $r6, $r0, $r1, $i0, $r2, $r3);

        $r4 = (java.lang.StringBuilder) $r7;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "joinTo(StringBuilder(), \u2026ed, transform).toString()");

        return $r8;
    }

    public static final java.lang.String joinToString(float[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0, $r1, $r2, $r6;
        int $i0;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.StringBuilder $r4;
        float[] $r5;
        java.lang.Appendable $r7;
        java.lang.String $r8;

        $r5 := @parameter0: float[];

        $r6 := @parameter1: java.lang.CharSequence;

        $r0 := @parameter2: java.lang.CharSequence;

        $r1 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r2 := @parameter5: java.lang.CharSequence;

        $r3 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r5, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "truncated");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r5, $r4, $r6, $r0, $r1, $i0, $r2, $r3);

        $r4 = (java.lang.StringBuilder) $r7;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "joinTo(StringBuilder(), \u2026ed, transform).toString()");

        return $r8;
    }

    public static final java.lang.String joinToString(int[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0, $r1, $r2, $r6;
        int $i0;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.StringBuilder $r4;
        int[] $r5;
        java.lang.Appendable $r7;
        java.lang.String $r8;

        $r5 := @parameter0: int[];

        $r6 := @parameter1: java.lang.CharSequence;

        $r0 := @parameter2: java.lang.CharSequence;

        $r1 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r2 := @parameter5: java.lang.CharSequence;

        $r3 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r5, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "truncated");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r5, $r4, $r6, $r0, $r1, $i0, $r2, $r3);

        $r4 = (java.lang.StringBuilder) $r7;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "joinTo(StringBuilder(), \u2026ed, transform).toString()");

        return $r8;
    }

    public static final java.lang.String joinToString(long[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0, $r1, $r2, $r6;
        int $i0;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.StringBuilder $r4;
        long[] $r5;
        java.lang.Appendable $r7;
        java.lang.String $r8;

        $r5 := @parameter0: long[];

        $r6 := @parameter1: java.lang.CharSequence;

        $r0 := @parameter2: java.lang.CharSequence;

        $r1 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r2 := @parameter5: java.lang.CharSequence;

        $r3 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r5, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "truncated");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r5, $r4, $r6, $r0, $r1, $i0, $r2, $r3);

        $r4 = (java.lang.StringBuilder) $r7;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "joinTo(StringBuilder(), \u2026ed, transform).toString()");

        return $r8;
    }

    public static final java.lang.String joinToString(java.lang.Object[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0, $r1, $r2, $r6;
        int $i0;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.StringBuilder $r4;
        java.lang.Object[] $r5;
        java.lang.Appendable $r7;
        java.lang.String $r8;

        $r5 := @parameter0: java.lang.Object[];

        $r6 := @parameter1: java.lang.CharSequence;

        $r0 := @parameter2: java.lang.CharSequence;

        $r1 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r2 := @parameter5: java.lang.CharSequence;

        $r3 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r5, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "truncated");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r5, $r4, $r6, $r0, $r1, $i0, $r2, $r3);

        $r4 = (java.lang.StringBuilder) $r7;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "joinTo(StringBuilder(), \u2026ed, transform).toString()");

        return $r8;
    }

    public static final java.lang.String joinToString(short[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0, $r1, $r2, $r6;
        int $i0;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.StringBuilder $r4;
        short[] $r5;
        java.lang.Appendable $r7;
        java.lang.String $r8;

        $r5 := @parameter0: short[];

        $r6 := @parameter1: java.lang.CharSequence;

        $r0 := @parameter2: java.lang.CharSequence;

        $r1 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r2 := @parameter5: java.lang.CharSequence;

        $r3 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r5, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "truncated");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r5, $r4, $r6, $r0, $r1, $i0, $r2, $r3);

        $r4 = (java.lang.StringBuilder) $r7;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "joinTo(StringBuilder(), \u2026ed, transform).toString()");

        return $r8;
    }

    public static final java.lang.String joinToString(boolean[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1)
    {
        java.lang.CharSequence $r0, $r1, $r2, $r6;
        int $i0;
        kotlin.jvm.functions.Function1 $r3;
        java.lang.StringBuilder $r4;
        boolean[] $r5;
        java.lang.Appendable $r7;
        java.lang.String $r8;

        $r5 := @parameter0: boolean[];

        $r6 := @parameter1: java.lang.CharSequence;

        $r0 := @parameter2: java.lang.CharSequence;

        $r1 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r2 := @parameter5: java.lang.CharSequence;

        $r3 := @parameter6: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r5, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r6, "separator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "prefix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "postfix");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "truncated");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Appendable joinTo(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r5, $r4, $r6, $r0, $r1, $i0, $r2, $r3);

        $r4 = (java.lang.StringBuilder) $r7;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "joinTo(StringBuilder(), \u2026ed, transform).toString()");

        return $r8;
    }

    public static java.lang.String joinToString$default(byte[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Object $r0, $r3, $r7, $r8;
        java.lang.String $r1;
        byte[] $r2;
        java.lang.CharSequence $r4, $r5, r9, r10;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;

        $r2 := @parameter0: byte[];

        $r3 := @parameter1: java.lang.CharSequence;

        $r4 := @parameter2: java.lang.CharSequence;

        $r5 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r0 := @parameter5: java.lang.CharSequence;

        $r6 := @parameter6: kotlin.jvm.functions.Function1;

        $i1 := @parameter7: int;

        $r7 := @parameter8: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $r3 = ", ";

     label1:
        $i2 = $i1 & 2;

        $r7 = "";

        if $i2 == 0 goto label2;

        $r8 = "";

        goto label3;

     label2:
        $r8 = $r4;

     label3:
        $i2 = $i1 & 4;

        if $i2 == 0 goto label4;

        goto label5;

     label4:
        $r7 = $r5;

     label5:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label6;

        $i0 = -1;

        goto label6;

     label6:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label7;

        $r0 = "...";

     label7:
        $i1 = $i1 & 32;

        if $i1 == 0 goto label8;

        $r6 = null;

     label8:
        $r4 = (java.lang.CharSequence) $r3;

        $r5 = (java.lang.CharSequence) $r8;

        r9 = (java.lang.CharSequence) $r7;

        r10 = (java.lang.CharSequence) $r0;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.String joinToString(byte[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r2, $r4, $r5, r9, $i0, r10, $r6);

        return $r1;
    }

    public static java.lang.String joinToString$default(char[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Object $r0, $r3, $r7, $r8;
        java.lang.String $r1;
        char[] $r2;
        java.lang.CharSequence $r4, $r5, r9, r10;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;

        $r2 := @parameter0: char[];

        $r3 := @parameter1: java.lang.CharSequence;

        $r4 := @parameter2: java.lang.CharSequence;

        $r5 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r0 := @parameter5: java.lang.CharSequence;

        $r6 := @parameter6: kotlin.jvm.functions.Function1;

        $i1 := @parameter7: int;

        $r7 := @parameter8: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $r3 = ", ";

     label1:
        $i2 = $i1 & 2;

        $r7 = "";

        if $i2 == 0 goto label2;

        $r8 = "";

        goto label3;

     label2:
        $r8 = $r4;

     label3:
        $i2 = $i1 & 4;

        if $i2 == 0 goto label4;

        goto label5;

     label4:
        $r7 = $r5;

     label5:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label6;

        $i0 = -1;

        goto label6;

     label6:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label7;

        $r0 = "...";

     label7:
        $i1 = $i1 & 32;

        if $i1 == 0 goto label8;

        $r6 = null;

     label8:
        $r4 = (java.lang.CharSequence) $r3;

        $r5 = (java.lang.CharSequence) $r8;

        r9 = (java.lang.CharSequence) $r7;

        r10 = (java.lang.CharSequence) $r0;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.String joinToString(char[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r2, $r4, $r5, r9, $i0, r10, $r6);

        return $r1;
    }

    public static java.lang.String joinToString$default(double[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Object $r0, $r3, $r7, $r8;
        java.lang.String $r1;
        double[] $r2;
        java.lang.CharSequence $r4, $r5, r9, r10;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;

        $r2 := @parameter0: double[];

        $r3 := @parameter1: java.lang.CharSequence;

        $r4 := @parameter2: java.lang.CharSequence;

        $r5 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r0 := @parameter5: java.lang.CharSequence;

        $r6 := @parameter6: kotlin.jvm.functions.Function1;

        $i1 := @parameter7: int;

        $r7 := @parameter8: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $r3 = ", ";

     label1:
        $i2 = $i1 & 2;

        $r7 = "";

        if $i2 == 0 goto label2;

        $r8 = "";

        goto label3;

     label2:
        $r8 = $r4;

     label3:
        $i2 = $i1 & 4;

        if $i2 == 0 goto label4;

        goto label5;

     label4:
        $r7 = $r5;

     label5:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label6;

        $i0 = -1;

        goto label6;

     label6:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label7;

        $r0 = "...";

     label7:
        $i1 = $i1 & 32;

        if $i1 == 0 goto label8;

        $r6 = null;

     label8:
        $r4 = (java.lang.CharSequence) $r3;

        $r5 = (java.lang.CharSequence) $r8;

        r9 = (java.lang.CharSequence) $r7;

        r10 = (java.lang.CharSequence) $r0;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.String joinToString(double[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r2, $r4, $r5, r9, $i0, r10, $r6);

        return $r1;
    }

    public static java.lang.String joinToString$default(float[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Object $r0, $r3, $r7, $r8;
        java.lang.String $r1;
        float[] $r2;
        java.lang.CharSequence $r4, $r5, r9, r10;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;

        $r2 := @parameter0: float[];

        $r3 := @parameter1: java.lang.CharSequence;

        $r4 := @parameter2: java.lang.CharSequence;

        $r5 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r0 := @parameter5: java.lang.CharSequence;

        $r6 := @parameter6: kotlin.jvm.functions.Function1;

        $i1 := @parameter7: int;

        $r7 := @parameter8: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $r3 = ", ";

     label1:
        $i2 = $i1 & 2;

        $r7 = "";

        if $i2 == 0 goto label2;

        $r8 = "";

        goto label3;

     label2:
        $r8 = $r4;

     label3:
        $i2 = $i1 & 4;

        if $i2 == 0 goto label4;

        goto label5;

     label4:
        $r7 = $r5;

     label5:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label6;

        $i0 = -1;

        goto label6;

     label6:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label7;

        $r0 = "...";

     label7:
        $i1 = $i1 & 32;

        if $i1 == 0 goto label8;

        $r6 = null;

     label8:
        $r4 = (java.lang.CharSequence) $r3;

        $r5 = (java.lang.CharSequence) $r8;

        r9 = (java.lang.CharSequence) $r7;

        r10 = (java.lang.CharSequence) $r0;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.String joinToString(float[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r2, $r4, $r5, r9, $i0, r10, $r6);

        return $r1;
    }

    public static java.lang.String joinToString$default(int[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Object $r0, $r3, $r7, $r8;
        java.lang.String $r1;
        int[] $r2;
        java.lang.CharSequence $r4, $r5, r9, r10;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;

        $r2 := @parameter0: int[];

        $r3 := @parameter1: java.lang.CharSequence;

        $r4 := @parameter2: java.lang.CharSequence;

        $r5 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r0 := @parameter5: java.lang.CharSequence;

        $r6 := @parameter6: kotlin.jvm.functions.Function1;

        $i1 := @parameter7: int;

        $r7 := @parameter8: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $r3 = ", ";

     label1:
        $i2 = $i1 & 2;

        $r7 = "";

        if $i2 == 0 goto label2;

        $r8 = "";

        goto label3;

     label2:
        $r8 = $r4;

     label3:
        $i2 = $i1 & 4;

        if $i2 == 0 goto label4;

        goto label5;

     label4:
        $r7 = $r5;

     label5:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label6;

        $i0 = -1;

        goto label6;

     label6:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label7;

        $r0 = "...";

     label7:
        $i1 = $i1 & 32;

        if $i1 == 0 goto label8;

        $r6 = null;

     label8:
        $r4 = (java.lang.CharSequence) $r3;

        $r5 = (java.lang.CharSequence) $r8;

        r9 = (java.lang.CharSequence) $r7;

        r10 = (java.lang.CharSequence) $r0;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.String joinToString(int[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r2, $r4, $r5, r9, $i0, r10, $r6);

        return $r1;
    }

    public static java.lang.String joinToString$default(long[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Object $r0, $r3, $r7, $r8;
        java.lang.String $r1;
        long[] $r2;
        java.lang.CharSequence $r4, $r5, r9, r10;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;

        $r2 := @parameter0: long[];

        $r3 := @parameter1: java.lang.CharSequence;

        $r4 := @parameter2: java.lang.CharSequence;

        $r5 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r0 := @parameter5: java.lang.CharSequence;

        $r6 := @parameter6: kotlin.jvm.functions.Function1;

        $i1 := @parameter7: int;

        $r7 := @parameter8: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $r3 = ", ";

     label1:
        $i2 = $i1 & 2;

        $r7 = "";

        if $i2 == 0 goto label2;

        $r8 = "";

        goto label3;

     label2:
        $r8 = $r4;

     label3:
        $i2 = $i1 & 4;

        if $i2 == 0 goto label4;

        goto label5;

     label4:
        $r7 = $r5;

     label5:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label6;

        $i0 = -1;

        goto label6;

     label6:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label7;

        $r0 = "...";

     label7:
        $i1 = $i1 & 32;

        if $i1 == 0 goto label8;

        $r6 = null;

     label8:
        $r4 = (java.lang.CharSequence) $r3;

        $r5 = (java.lang.CharSequence) $r8;

        r9 = (java.lang.CharSequence) $r7;

        r10 = (java.lang.CharSequence) $r0;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.String joinToString(long[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r2, $r4, $r5, r9, $i0, r10, $r6);

        return $r1;
    }

    public static java.lang.String joinToString$default(java.lang.Object[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Object $r0, $r3, $r7, $r8;
        java.lang.String $r1;
        java.lang.Object[] $r2;
        java.lang.CharSequence $r4, $r5, r9, r10;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;

        $r2 := @parameter0: java.lang.Object[];

        $r3 := @parameter1: java.lang.CharSequence;

        $r4 := @parameter2: java.lang.CharSequence;

        $r5 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r0 := @parameter5: java.lang.CharSequence;

        $r6 := @parameter6: kotlin.jvm.functions.Function1;

        $i1 := @parameter7: int;

        $r7 := @parameter8: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $r3 = ", ";

     label1:
        $i2 = $i1 & 2;

        $r7 = "";

        if $i2 == 0 goto label2;

        $r8 = "";

        goto label3;

     label2:
        $r8 = $r4;

     label3:
        $i2 = $i1 & 4;

        if $i2 == 0 goto label4;

        goto label5;

     label4:
        $r7 = $r5;

     label5:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label6;

        $i0 = -1;

        goto label6;

     label6:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label7;

        $r0 = "...";

     label7:
        $i1 = $i1 & 32;

        if $i1 == 0 goto label8;

        $r6 = null;

     label8:
        $r4 = (java.lang.CharSequence) $r3;

        $r5 = (java.lang.CharSequence) $r8;

        r9 = (java.lang.CharSequence) $r7;

        r10 = (java.lang.CharSequence) $r0;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.String joinToString(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r2, $r4, $r5, r9, $i0, r10, $r6);

        return $r1;
    }

    public static java.lang.String joinToString$default(short[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Object $r0, $r3, $r7, $r8;
        java.lang.String $r1;
        short[] $r2;
        java.lang.CharSequence $r4, $r5, r9, r10;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;

        $r2 := @parameter0: short[];

        $r3 := @parameter1: java.lang.CharSequence;

        $r4 := @parameter2: java.lang.CharSequence;

        $r5 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r0 := @parameter5: java.lang.CharSequence;

        $r6 := @parameter6: kotlin.jvm.functions.Function1;

        $i1 := @parameter7: int;

        $r7 := @parameter8: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $r3 = ", ";

     label1:
        $i2 = $i1 & 2;

        $r7 = "";

        if $i2 == 0 goto label2;

        $r8 = "";

        goto label3;

     label2:
        $r8 = $r4;

     label3:
        $i2 = $i1 & 4;

        if $i2 == 0 goto label4;

        goto label5;

     label4:
        $r7 = $r5;

     label5:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label6;

        $i0 = -1;

        goto label6;

     label6:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label7;

        $r0 = "...";

     label7:
        $i1 = $i1 & 32;

        if $i1 == 0 goto label8;

        $r6 = null;

     label8:
        $r4 = (java.lang.CharSequence) $r3;

        $r5 = (java.lang.CharSequence) $r8;

        r9 = (java.lang.CharSequence) $r7;

        r10 = (java.lang.CharSequence) $r0;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.String joinToString(short[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r2, $r4, $r5, r9, $i0, r10, $r6);

        return $r1;
    }

    public static java.lang.String joinToString$default(boolean[], java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        java.lang.Object $r0, $r3, $r7, $r8;
        java.lang.String $r1;
        boolean[] $r2;
        java.lang.CharSequence $r4, $r5, r9, r10;
        int $i0, $i1, $i2;
        kotlin.jvm.functions.Function1 $r6;

        $r2 := @parameter0: boolean[];

        $r3 := @parameter1: java.lang.CharSequence;

        $r4 := @parameter2: java.lang.CharSequence;

        $r5 := @parameter3: java.lang.CharSequence;

        $i0 := @parameter4: int;

        $r0 := @parameter5: java.lang.CharSequence;

        $r6 := @parameter6: kotlin.jvm.functions.Function1;

        $i1 := @parameter7: int;

        $r7 := @parameter8: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $r3 = ", ";

     label1:
        $i2 = $i1 & 2;

        $r7 = "";

        if $i2 == 0 goto label2;

        $r8 = "";

        goto label3;

     label2:
        $r8 = $r4;

     label3:
        $i2 = $i1 & 4;

        if $i2 == 0 goto label4;

        goto label5;

     label4:
        $r7 = $r5;

     label5:
        $i2 = $i1 & 8;

        if $i2 == 0 goto label6;

        $i0 = -1;

        goto label6;

     label6:
        $i2 = $i1 & 16;

        if $i2 == 0 goto label7;

        $r0 = "...";

     label7:
        $i1 = $i1 & 32;

        if $i1 == 0 goto label8;

        $r6 = null;

     label8:
        $r4 = (java.lang.CharSequence) $r3;

        $r5 = (java.lang.CharSequence) $r8;

        r9 = (java.lang.CharSequence) $r7;

        r10 = (java.lang.CharSequence) $r0;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.String joinToString(boolean[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)>($r2, $r4, $r5, r9, $i0, r10, $r6);

        return $r1;
    }

    public static final byte last(byte[])
    {
        int $i0;
        byte[] $r0;
        boolean $z0;
        byte $b1;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

        $b1 = $r0[$i0];

        return $b1;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final byte last(byte[], kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        byte $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $b2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $b2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final char last(char[])
    {
        int $i0;
        char[] $r0;
        boolean $z0;
        char $c1;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

        $c1 = $r0[$i0];

        return $c1;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final char last(char[], kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $c2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $c2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final double last(double[])
    {
        int $i0;
        double[] $r0;
        boolean $z0;
        double $d0;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

        $d0 = $r0[$i0];

        return $d0;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final double last(double[], kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        double $d0;
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $d0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $d0;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final float last(float[])
    {
        int $i0;
        float[] $r0;
        boolean $z0;
        float $f0;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

        $f0 = $r0[$i0];

        return $f0;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final float last(float[], kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $f0;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final int last(int[])
    {
        int $i0;
        int[] $r0;
        boolean $z0;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

        $i0 = $r0[$i0];

        return $i0;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final int last(int[], kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $i1 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final long last(long[])
    {
        int $i0;
        long[] $r0;
        boolean $z0;
        long $l1;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

        $l1 = $r0[$i0];

        return $l1;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final long last(long[], kotlin.jvm.functions.Function1)
    {
        int $i0, $i2;
        long $l1;
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i2 = $i0 + -1;

        if $i2 < 0 goto label3;

     label1:
        $i0 = $i2 + -1;

        $l1 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $l1;

     label2:
        if $i0 < 0 goto label3;

        $i2 = $i0;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final java.lang.Object last(java.lang.Object[])
    {
        int $i0;
        java.lang.Object[] $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        $r1 = $r0[$i0];

        return $r1;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    public static final java.lang.Object last(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r2, $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $r2 = $r0[$i1];

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $r2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final short last(short[])
    {
        int $i0;
        short[] $r0;
        boolean $z0;
        short $s1;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

        $s1 = $r0[$i0];

        return $s1;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final short last(short[], kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        short $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $s2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $s2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final boolean last(boolean[])
    {
        int $i0;
        boolean[] $r0;
        boolean $z0;
        java.util.NoSuchElementException $r1;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r0);

        $z0 = $r0[$i0];

        return $z0;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r1;
    }

    public static final boolean last(boolean[], kotlin.jvm.functions.Function1)
    {
        int $i0, $i1;
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        boolean $z0, $z1;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.util.NoSuchElementException $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        return $z0;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label4;

     label4:
        throw $r4;
    }

    public static final int lastIndexOf(byte[], byte)
    {
        byte[] $r0;
        byte $b0, $b2;
        int $i1, $i3;

        $r0 := @parameter0: byte[];

        $b0 := @parameter1: byte;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i3 = $i1 + -1;

        if $i3 < 0 goto label3;

     label1:
        $i1 = $i3 + -1;

        $b2 = $r0[$i3];

        if $b0 != $b2 goto label2;

        return $i3;

     label2:
        if $i1 < 0 goto label3;

        $i3 = $i1;

        goto label1;

     label3:
        return -1;
    }

    public static final int lastIndexOf(char[], char)
    {
        char[] $r0;
        char $c0, $c2;
        int $i1, $i3;

        $r0 := @parameter0: char[];

        $c0 := @parameter1: char;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i3 = $i1 + -1;

        if $i3 < 0 goto label3;

     label1:
        $i1 = $i3 + -1;

        $c2 = $r0[$i3];

        if $c0 != $c2 goto label2;

        return $i3;

     label2:
        if $i1 < 0 goto label3;

        $i3 = $i1;

        goto label1;

     label3:
        return -1;
    }

    public static final int lastIndexOf(double[], double)
    {
        double[] $r0;
        double $d0, $d1;
        int $i0, $i2;
        byte $b1;
        boolean $z0;

        $r0 := @parameter0: double[];

        $d0 := @parameter1: double;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i2 = $i0 + -1;

        if $i2 < 0 goto label5;

     label1:
        $i0 = $i2 + -1;

        $d1 = $r0[$i2];

        $b1 = $d0 cmpg $d1;

        if $b1 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        return $i2;

     label4:
        if $i0 < 0 goto label5;

        $i2 = $i0;

        goto label1;

     label5:
        return -1;
    }

    public static final int lastIndexOf(float[], float)
    {
        float[] $r0;
        float $f0, $f1;
        int $i0, $i1;
        byte $b2;
        boolean $z0;

        $r0 := @parameter0: float[];

        $f0 := @parameter1: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label5;

     label1:
        $i0 = $i1 + -1;

        $f1 = $r0[$i1];

        $b2 = $f0 cmpg $f1;

        if $b2 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        if $z0 == 0 goto label4;

        return $i1;

     label4:
        if $i0 < 0 goto label5;

        $i1 = $i0;

        goto label1;

     label5:
        return -1;
    }

    public static final int lastIndexOf(int[], int)
    {
        int[] $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i3 = $i1 + -1;

        if $i3 < 0 goto label3;

     label1:
        $i1 = $i3 + -1;

        $i2 = $r0[$i3];

        if $i0 != $i2 goto label2;

        return $i3;

     label2:
        if $i1 < 0 goto label3;

        $i3 = $i1;

        goto label1;

     label3:
        return -1;
    }

    public static final int lastIndexOf(long[], long)
    {
        long[] $r0;
        long $l0, $l2;
        int $i1, $i4;
        byte $b3;

        $r0 := @parameter0: long[];

        $l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i4 = $i1 + -1;

        if $i4 < 0 goto label3;

     label1:
        $i1 = $i4 + -1;

        $l2 = $r0[$i4];

        $b3 = $l0 cmp $l2;

        if $b3 != 0 goto label2;

        return $i4;

     label2:
        if $i1 < 0 goto label3;

        $i4 = $i1;

        goto label1;

     label3:
        return -1;
    }

    public static final int lastIndexOf(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] $r0;
        boolean $z0;
        java.lang.Object $r1, $r2;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $r1 != null goto label3;

        $i0 = lengthof $r0;

        $i0 = $i0 + -1;

        if $i0 < 0 goto label6;

     label1:
        $i1 = $i0 + -1;

        $r1 = $r0[$i0];

        if $r1 != null goto label2;

        return $i0;

     label2:
        if $i1 < 0 goto label6;

        $i0 = $i1;

        goto label1;

     label3:
        $i0 = lengthof $r0;

        $i0 = $i0 + -1;

        if $i0 < 0 goto label6;

     label4:
        $i1 = $i0 + -1;

        $r2 = $r0[$i0];

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $z0 == 0 goto label5;

        return $i0;

     label5:
        if $i1 < 0 goto label6;

        $i0 = $i1;

        goto label4;

     label6:
        return -1;
    }

    public static final int lastIndexOf(short[], short)
    {
        short[] $r0;
        short $s0, $s2;
        int $i1, $i3;

        $r0 := @parameter0: short[];

        $s0 := @parameter1: short;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i3 = $i1 + -1;

        if $i3 < 0 goto label3;

     label1:
        $i1 = $i3 + -1;

        $s2 = $r0[$i3];

        if $s0 != $s2 goto label2;

        return $i3;

     label2:
        if $i1 < 0 goto label3;

        $i3 = $i1;

        goto label1;

     label3:
        return -1;
    }

    public static final int lastIndexOf(boolean[], boolean)
    {
        boolean[] $r0;
        boolean $z0, $z1;
        int $i0, $i1;

        $r0 := @parameter0: boolean[];

        $z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $z1 = $r0[$i1];

        if $z0 != $z1 goto label2;

        return $i1;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return -1;
    }

    public static final java.lang.Boolean lastOrNull(boolean[])
    {
        java.lang.Boolean $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;

        $r1 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $z0 = $r1[$i0];

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r0;
    }

    public static final java.lang.Boolean lastOrNull(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        boolean[] $r1;
        boolean $z0, $z1;
        java.lang.Boolean $r2;
        java.lang.Object $r3;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $z0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Byte lastOrNull(byte[])
    {
        java.lang.Byte $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;

        $r1 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $b1 = $r1[$i0];

        $r0 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r0;
    }

    public static final java.lang.Byte lastOrNull(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $b2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        return $r2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Character lastOrNull(char[])
    {
        java.lang.Character $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;

        $r1 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $c1 = $r1[$i0];

        $r0 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r0;
    }

    public static final java.lang.Character lastOrNull(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        char[] $r1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $c2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Double lastOrNull(double[])
    {
        java.lang.Double $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0;

        $r1 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $d0 = $r1[$i0];

        $r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r0;
    }

    public static final java.lang.Double lastOrNull(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        double $d0;
        double[] $r1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $d0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Float lastOrNull(float[])
    {
        java.lang.Float $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0;

        $r1 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $f0 = $r1[$i0];

        $r0 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r0;
    }

    public static final java.lang.Float lastOrNull(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        float[] $r1;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $f0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Integer lastOrNull(int[])
    {
        java.lang.Integer $r0;
        int[] $r1;
        int $i0;
        boolean $z0;

        $r1 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $i0 = $r1[$i0];

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r0;
    }

    public static final java.lang.Integer lastOrNull(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        int[] $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $i1 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Long lastOrNull(long[])
    {
        java.lang.Long $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;

        $r1 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $l1 = $r1[$i0];

        $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r0;
    }

    public static final java.lang.Long lastOrNull(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i2;
        long $l1;
        long[] $r1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i2 = $i0 + -1;

        if $i2 < 0 goto label3;

     label1:
        $i0 = $i2 + -1;

        $l1 = $r1[$i2];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r2;

     label2:
        if $i0 < 0 goto label3;

        $i2 = $i0;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Object lastOrNull(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r0;

        $i0 = $i0 + -1;

        $r1 = $r0[$i0];

        return $r1;
    }

    public static final java.lang.Object lastOrNull(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        java.lang.Object[] $r1;
        java.lang.Object $r2, $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $r2 = $r1[$i1];

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return $r2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return null;
    }

    public static final java.lang.Short lastOrNull(short[])
    {
        java.lang.Short $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;

        $r1 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $s1 = $r1[$i0];

        $r0 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r0;
    }

    public static final java.lang.Short lastOrNull(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int $i0, $i1;
        short[] $r1;
        short $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label3;

     label1:
        $i0 = $i1 + -1;

        $s2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        return $r2;

     label2:
        if $i0 < 0 goto label3;

        $i1 = $i0;

        goto label1;

     label3:
        return null;
    }

    public static final java.util.List map(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r5;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        $i0 = lengthof $r0;

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List map(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r5;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        $i0 = lengthof $r0;

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List map(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r5;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        $i0 = lengthof $r0;

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List map(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r5;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        $i0 = lengthof $r0;

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List map(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r5;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        $i0 = lengthof $r0;

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List map(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r5;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        $i0 = lengthof $r0;

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List map(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r2;
        java.util.ArrayList $r3, r4;
        int $i0, $i1;
        java.util.Collection r5;
        java.util.List r6;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r4 = new java.util.ArrayList;

        $r3 = r4;

        $i0 = lengthof $r0;

        specialinvoke r4.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        r5 = (java.util.Collection) $r3;

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r6 = (java.util.List) $r3;

        return r6;
    }

    public static final java.util.List map(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r5;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        $i0 = lengthof $r0;

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List map(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.util.ArrayList $r2, r5;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        $i0 = lengthof $r0;

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        r6 = (java.util.Collection) $r2;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List mapIndexed(byte[], kotlin.jvm.functions.Function2)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r2, r6;
        byte $b4;
        java.lang.Integer $r3;
        java.lang.Byte $r4;
        java.lang.Object $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        $i0 = lengthof $r0;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $b4 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b4);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List mapIndexed(char[], kotlin.jvm.functions.Function2)
    {
        char[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r2, r6;
        char $c4;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        $i0 = lengthof $r0;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $c4 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c4);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List mapIndexed(double[], kotlin.jvm.functions.Function2)
    {
        double[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r2, r6;
        double $d0;
        java.lang.Integer $r3;
        java.lang.Double $r4;
        java.lang.Object $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        $i0 = lengthof $r0;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $d0 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List mapIndexed(float[], kotlin.jvm.functions.Function2)
    {
        float[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r2, r6;
        float $f0;
        java.lang.Integer $r3;
        java.lang.Float $r4;
        java.lang.Object $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        $i0 = lengthof $r0;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $f0 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List mapIndexed(int[], kotlin.jvm.functions.Function2)
    {
        int[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.ArrayList $r2, r6;
        java.lang.Integer $r3, $r4;
        java.lang.Object $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        $i0 = lengthof $r0;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $i4 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List mapIndexed(long[], kotlin.jvm.functions.Function2)
    {
        long[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r2, r6;
        long $l4;
        java.lang.Integer $r3;
        java.lang.Long $r4;
        java.lang.Object $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        $i0 = lengthof $r0;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $l4 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List mapIndexed(java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r3, r5;
        java.lang.Integer $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r3 = r5;

        $i0 = lengthof $r0;

        specialinvoke r5.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r0[$i2];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r2);

        r6 = (java.util.Collection) $r3;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $i2 = $i2 + 1;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.List mapIndexed(short[], kotlin.jvm.functions.Function2)
    {
        short[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r2, r6;
        short $s4;
        java.lang.Integer $r3;
        java.lang.Short $r4;
        java.lang.Object $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        $i0 = lengthof $r0;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $s4 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s4);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List mapIndexed(boolean[], kotlin.jvm.functions.Function2)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r2, r6;
        boolean $z0;
        java.lang.Integer $r3;
        java.lang.Boolean $r4;
        java.lang.Object $r5;
        java.util.Collection r7;
        java.util.List r8;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        $i0 = lengthof $r0;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $z0 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        r7 = (java.util.Collection) $r2;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List mapIndexedNotNull(java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        java.util.ArrayList $r3, r5;
        java.lang.Integer $r4;
        java.util.Collection r6;
        java.util.List r7;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r5 = new java.util.ArrayList;

        $r3 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i0 goto label3;

        $r2 = $r0[$i2];

        $i1 = $i3 + 1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r2);

        if $r2 == null goto label2;

        r6 = (java.util.Collection) $r3;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r2);

     label2:
        $i2 = $i2 + 1;

        $i3 = $i1;

        goto label1;

     label3:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.Collection mapIndexedNotNullTo(java.lang.Object[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r4;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $r3 = $r0[$i2];

        $i0 = $i3 + 1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $r3 == null goto label2;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i2 = $i2 + 1;

        $i3 = $i0;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection mapIndexedTo(byte[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        byte[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        byte $b3;
        java.lang.Integer $r3;
        java.lang.Byte $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapIndexedTo(char[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        char[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Integer $r3;
        java.lang.Character $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapIndexedTo(double[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        double[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        double $d0;
        java.lang.Integer $r3;
        java.lang.Double $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapIndexedTo(float[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        float[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        float $f0;
        java.lang.Integer $r3;
        java.lang.Float $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapIndexedTo(int[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        int[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r3, $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapIndexedTo(long[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        long[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        long $l3;
        java.lang.Integer $r3;
        java.lang.Long $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapIndexedTo(java.lang.Object[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        int $i0, $i1, $i2;
        java.lang.Integer $r4;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r3);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapIndexedTo(short[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        short[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        short $s3;
        java.lang.Integer $r3;
        java.lang.Short $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapIndexedTo(boolean[], java.util.Collection, kotlin.jvm.functions.Function2)
    {
        boolean[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Integer $r3;
        java.lang.Boolean $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r4);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.List mapNotNull(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.util.ArrayList $r3, r4;
        java.util.Collection r5;
        java.util.List r6;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        r4 = new java.util.ArrayList;

        $r3 = r4;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0[$i1];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        if $r2 == null goto label2;

        r5 = (java.util.Collection) $r3;

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        r6 = (java.util.List) $r3;

        return r6;
    }

    public static final java.util.Collection mapNotNullTo(java.lang.Object[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r0[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        if $r3 == null goto label2;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static final java.util.Collection mapTo(byte[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapTo(char[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapTo(double[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapTo(float[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapTo(int[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapTo(long[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapTo(java.lang.Object[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        java.lang.Object $r3;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r0[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapTo(short[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection mapTo(boolean[], java.util.Collection, kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        java.util.Collection $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Collection;

        $r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.lang.Boolean maxByOrNull(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0, $z1;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z1 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label5;

        $z0 = $z1;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;
    }

    public static final java.lang.Byte maxByOrNull(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1, $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label5;

        $b1 = $b2;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r2;
    }

    public static final java.lang.Character maxByOrNull(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label5;

        $c1 = $c2;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r2;
    }

    public static final java.lang.Double maxByOrNull(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label5;

        $r4 = $r7;

        $d0 = $d1;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;
    }

    public static final java.lang.Float maxByOrNull(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label5;

        $f0 = $f1;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;
    }

    public static final java.lang.Integer maxByOrNull(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r1[0];

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        if $i1 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i1 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i1 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i2 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i2 >= 0 goto label5;

        $i0 = $i1;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;
    }

    public static final java.lang.Long maxByOrNull(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1, $l2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label5;

        $r4 = $r7;

        $l1 = $l2;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r2;
    }

    public static final java.lang.Object maxByOrNull(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2, $r3, $r7;
        java.lang.Comparable $r4, $r8;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r2 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        if $i0 != 0 goto label4;

        return $r2;

     label4:
        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $r3 = $r1[$i0];

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r8 = (java.lang.Comparable) $r7;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r8);

        if $i0 >= 0 goto label5;

        $r2 = $r3;

        $r4 = $r8;

        goto label5;

     label6:
        return $r2;
    }

    public static final java.lang.Short maxByOrNull(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1, $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label5;

        $s1 = $s2;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r2;
    }

    public static final byte maxByOrThrow(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1, $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $b1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        if $i0 != 0 goto label3;

        return $b1;

     label3:
        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $b1 = $b2;

        $r4 = $r7;

        goto label4;

     label5:
        return $b1;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final char maxByOrThrow(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $c1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        if $i0 != 0 goto label3;

        return $c1;

     label3:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $c1 = $c2;

        $r4 = $r7;

        goto label4;

     label5:
        return $c1;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final double maxByOrThrow(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $d0 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        if $i0 != 0 goto label3;

        return $d0;

     label3:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        $d0 = $d1;

        goto label4;

     label5:
        return $d0;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final float maxByOrThrow(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $f0 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        if $i0 != 0 goto label3;

        return $f0;

     label3:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $f0 = $f1;

        $r4 = $r7;

        goto label4;

     label5:
        return $f0;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final int maxByOrThrow(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $i0 = $r1[0];

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        if $i1 != 0 goto label3;

        return $i0;

     label3:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i1 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i2 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i2 >= 0 goto label4;

        $i0 = $i1;

        $r4 = $r7;

        goto label4;

     label5:
        return $i0;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final long maxByOrThrow(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1, $l2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $l1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        if $i0 != 0 goto label3;

        return $l1;

     label3:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        $l1 = $l2;

        goto label4;

     label5:
        return $l1;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final java.lang.Object maxByOrThrow(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2, $r3, $r7;
        java.lang.Comparable $r4, $r8;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r9;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $r2 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        if $i0 != 0 goto label3;

        return $r2;

     label3:
        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $r3 = $r1[$i0];

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r8 = (java.lang.Comparable) $r7;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r8);

        if $i0 >= 0 goto label4;

        $r2 = $r3;

        $r4 = $r8;

        goto label4;

     label5:
        return $r2;

     label6:
        $r9 = new java.util.NoSuchElementException;

        specialinvoke $r9.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r9;
    }

    public static final short maxByOrThrow(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1, $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $s1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        if $i0 != 0 goto label3;

        return $s1;

     label3:
        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $s1 = $s2;

        $r4 = $r7;

        goto label4;

     label5:
        return $s1;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final boolean maxByOrThrow(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0, $z1;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $z0 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        if $i0 != 0 goto label3;

        return $z0;

     label3:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z1 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $z0 = $z1;

        $r4 = $r7;

        goto label4;

     label5:
        return $z0;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    private static final double maxOf(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r1[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double maxOf(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r1[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double maxOf(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r1[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double maxOf(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r1[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double maxOf(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r1[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double maxOf(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l1 = $r1[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double maxOf(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        double $d0, $d1;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r2 = $r1[0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    private static final double maxOf(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r1[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double maxOf(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $z0 = $r1[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float maxOf(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r1[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float maxOf(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r1[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float maxOf(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r1[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float maxOf(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r1[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float maxOf(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r1[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float maxOf(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l1 = $r1[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float maxOf(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        float $f0, $f1;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r2 = $r1[0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $f1 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    private static final float maxOf(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r1[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float maxOf(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $z0 = $r1[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final java.lang.Comparable maxOf(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r1[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable maxOf(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r1[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable maxOf(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r1[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable maxOf(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r1[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable maxOf(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r1[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable maxOf(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l1 = $r1[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable maxOf(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Comparable $r3, $r6;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r2 = $r1[0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Comparable) $r2;

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r6 = (java.lang.Comparable) $r2;

        $i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r6);

        if $i0 >= 0 goto label3;

        $r3 = $r6;

        goto label3;

     label4:
        return $r3;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final java.lang.Comparable maxOf(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r1[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable maxOf(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $z0 = $r1[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable maxOfOrNull(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r1[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable maxOfOrNull(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r1[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable maxOfOrNull(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r1[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable maxOfOrNull(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r1[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable maxOfOrNull(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r1[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable maxOfOrNull(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r1[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable maxOfOrNull(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Comparable $r3, $r6;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r2 = $r1[0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Comparable) $r2;

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r6 = (java.lang.Comparable) $r2;

        $i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r6);

        if $i0 >= 0 goto label4;

        $r3 = $r6;

        goto label4;

     label5:
        return $r3;
    }

    private static final java.lang.Comparable maxOfOrNull(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r1[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable maxOfOrNull(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r1[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Double maxOfOrNull(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r1[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Double maxOfOrNull(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r1[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Double maxOfOrNull(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r1[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;
    }

    private static final java.lang.Double maxOfOrNull(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r1[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Double maxOfOrNull(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r1[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Double maxOfOrNull(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r1[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Double maxOfOrNull(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        double $d0, $d1;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;
        java.lang.Double $r6;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r2 = $r1[0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r6;
    }

    private static final java.lang.Double maxOfOrNull(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r1[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Double maxOfOrNull(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r1[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Float maxOfOrNull(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r1[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Float maxOfOrNull(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r1[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Float maxOfOrNull(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r1[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Float maxOfOrNull(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r1[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;
    }

    private static final java.lang.Float maxOfOrNull(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r1[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Float maxOfOrNull(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r1[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Float maxOfOrNull(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        float $f0, $f1;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;
        java.lang.Float $r6;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r2 = $r1[0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $f1 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r6;
    }

    private static final java.lang.Float maxOfOrNull(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r1[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Float maxOfOrNull(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r1[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Object maxOfWith(byte[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        byte[] $r2;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: byte[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r2[0];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object maxOfWith(char[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        char[] $r2;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: char[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r2[0];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object maxOfWith(double[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        double[] $r2;
        int $i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: double[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r2[0];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object maxOfWith(float[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        float[] $r2;
        int $i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: float[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r2[0];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object maxOfWith(int[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        int[] $r2;
        int $i0;
        boolean $z0;
        java.lang.Integer $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: int[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r2[0];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object maxOfWith(long[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        long[] $r2;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: long[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l1 = $r2[0];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object maxOfWith(java.lang.Object[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object[] $r2;
        int $i0;
        boolean $z0;
        java.lang.Object $r3, $r6;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;
        java.util.NoSuchElementException $r7;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r3 = $r2[0];

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r2);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r6 = $r2[$i0];

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r6);

        if $i0 >= 0 goto label3;

        $r3 = $r6;

        goto label3;

     label4:
        return $r3;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final java.lang.Object maxOfWith(short[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        short[] $r2;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: short[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r2[0];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object maxOfWith(boolean[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        boolean[] $r2;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: boolean[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $z0 = $r2[0];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object maxOfWithOrNull(byte[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        byte[] $r2;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: byte[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r2[0];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object maxOfWithOrNull(char[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        char[] $r2;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: char[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r2[0];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object maxOfWithOrNull(double[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        double[] $r2;
        int $i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: double[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r2[0];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object maxOfWithOrNull(float[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        float[] $r2;
        int $i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: float[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r2[0];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object maxOfWithOrNull(int[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        int[] $r2;
        int $i0;
        boolean $z0;
        java.lang.Integer $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: int[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r2[0];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object maxOfWithOrNull(long[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        long[] $r2;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: long[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r2[0];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object maxOfWithOrNull(java.lang.Object[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object[] $r2;
        int $i0;
        boolean $z0;
        java.lang.Object $r3, $r6;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r3 = $r2[0];

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r2);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r6 = $r2[$i0];

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r6);

        if $i0 >= 0 goto label4;

        $r3 = $r6;

        goto label4;

     label5:
        return $r3;
    }

    private static final java.lang.Object maxOfWithOrNull(short[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        short[] $r2;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: short[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r2[0];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object maxOfWithOrNull(boolean[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        boolean[] $r2;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: boolean[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r2[0];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 >= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    public static final java.lang.Byte maxOrNull(byte[])
    {
        byte[] $r0;
        int $i0;
        boolean $z0;
        byte $b1, $b2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Byte $r3;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $b2 = $r0[$i0];

        if $b1 >= $b2 goto label4;

        $b1 = $b2;

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r3;
    }

    public static final java.lang.Character maxOrNull(char[])
    {
        char[] $r0;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Character $r3;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = $r0[$i0];

        $i0 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>($c1, $c2);

        if $i0 >= 0 goto label4;

        $c1 = $c2;

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r3;
    }

    public static final java.lang.Comparable maxOrNull(java.lang.Comparable[])
    {
        java.lang.Comparable[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Comparable $r1, $r4;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;

        $r0 := @parameter0: java.lang.Comparable[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r1 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = $r0[$i0];

        $i0 = interfaceinvoke $r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4);

        if $i0 >= 0 goto label4;

        $r1 = $r4;

        goto label4;

     label5:
        return $r1;
    }

    public static final java.lang.Double maxOrNull(double[])
    {
        double[] $r0;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Double $r3;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r0[$i0];

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r3;
    }

    public static final java.lang.Double maxOrNull(java.lang.Double[])
    {
        java.lang.Double[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Double $r1;
        double $d0, $d1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;

        $r0 := @parameter0: java.lang.Double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r1 = $r0[0];

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r1 = $r0[$i0];

        $d1 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r1;
    }

    public static final java.lang.Float maxOrNull(float[])
    {
        float[] $r0;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Float $r3;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r0[$i0];

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r3;
    }

    public static final java.lang.Float maxOrNull(java.lang.Float[])
    {
        java.lang.Float[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Float $r1;
        float $f0, $f1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;

        $r0 := @parameter0: java.lang.Float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r1 = $r0[0];

        $f0 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r1 = $r0[$i0];

        $f1 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r1;
    }

    public static final java.lang.Integer maxOrNull(int[])
    {
        int[] $r0;
        int $i0, $i1;
        boolean $z0;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Integer $r3;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $i1 = $r0[$i1];

        if $i0 >= $i1 goto label4;

        $i0 = $i1;

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r3;
    }

    public static final java.lang.Long maxOrNull(long[])
    {
        long[] $r0;
        int $i0;
        boolean $z0;
        long $l1, $l2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        byte $b3;
        java.lang.Long $r3;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $l2 = $r0[$i0];

        $b3 = $l1 cmp $l2;

        if $b3 >= 0 goto label4;

        $l1 = $l2;

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r3;
    }

    public static final java.lang.Short maxOrNull(short[])
    {
        short[] $r0;
        int $i0;
        boolean $z0;
        short $s1, $s2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Short $r3;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $s2 = $r0[$i0];

        if $s1 >= $s2 goto label4;

        $s1 = $s2;

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r3;
    }

    public static final byte maxOrThrow(byte[])
    {
        byte[] $r0;
        int $i0;
        boolean $z0;
        byte $b1, $b2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $b2 = $r0[$i0];

        if $b1 >= $b2 goto label3;

        $b1 = $b2;

        goto label3;

     label4:
        return $b1;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final char maxOrThrow(char[])
    {
        char[] $r0;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = $r0[$i0];

        $i0 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>($c1, $c2);

        if $i0 >= 0 goto label3;

        $c1 = $c2;

        goto label3;

     label4:
        return $c1;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final double maxOrThrow(double[])
    {
        double[] $r0;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r0[$i0];

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final double maxOrThrow(java.lang.Double[])
    {
        java.lang.Double[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Double $r1;
        double $d0, $d1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.util.NoSuchElementException $r4;

        $r0 := @parameter0: java.lang.Double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r1 = $r0[0];

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r1 = $r0[$i0];

        $d1 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r4;
    }

    public static final float maxOrThrow(float[])
    {
        float[] $r0;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r0[$i0];

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final float maxOrThrow(java.lang.Float[])
    {
        java.lang.Float[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Float $r1;
        float $f0, $f1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.util.NoSuchElementException $r4;

        $r0 := @parameter0: java.lang.Float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r1 = $r0[0];

        $f0 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r1 = $r0[$i0];

        $f1 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r4;
    }

    public static final int maxOrThrow(int[])
    {
        int[] $r0;
        int $i0, $i1;
        boolean $z0;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i1 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $i1 = $r0[$i1];

        if $i0 >= $i1 goto label3;

        $i0 = $i1;

        goto label3;

     label4:
        return $i0;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final long maxOrThrow(long[])
    {
        long[] $r0;
        int $i0;
        boolean $z0;
        long $l1, $l2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        byte $b3;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $l2 = $r0[$i0];

        $b3 = $l1 cmp $l2;

        if $b3 >= 0 goto label3;

        $l1 = $l2;

        goto label3;

     label4:
        return $l1;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final java.lang.Comparable maxOrThrow(java.lang.Comparable[])
    {
        java.lang.Comparable[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Comparable $r1, $r4;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: java.lang.Comparable[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r1 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = $r0[$i0];

        $i0 = interfaceinvoke $r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4);

        if $i0 >= 0 goto label3;

        $r1 = $r4;

        goto label3;

     label4:
        return $r1;

     label5:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r5;
    }

    public static final short maxOrThrow(short[])
    {
        short[] $r0;
        int $i0;
        boolean $z0;
        short $s1, $s2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $s2 = $r0[$i0];

        if $s1 >= $s2 goto label3;

        $s1 = $s2;

        goto label3;

     label4:
        return $s1;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final java.lang.Boolean maxWithOrNull(boolean[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0, $z1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Boolean $r4, $r5;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z1 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $z1 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label4;

        $z0 = $z1;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public static final java.lang.Byte maxWithOrNull(byte[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1, $b2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Byte $r4, $r5;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $b2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label4;

        $b1 = $b2;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r4;
    }

    public static final java.lang.Character maxWithOrNull(char[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Character $r4, $r5;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label4;

        $c1 = $c2;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r4;
    }

    public static final java.lang.Double maxWithOrNull(double[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Double $r4, $r5;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label4;

        $d0 = $d1;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r4;
    }

    public static final java.lang.Float maxWithOrNull(float[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Float $r4, $r5;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label4;

        $f0 = $f1;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r4;
    }

    public static final java.lang.Integer maxWithOrNull(int[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4, $r5;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $i1 = $r1[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i2 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i2 >= 0 goto label4;

        $i0 = $i1;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r4;
    }

    public static final java.lang.Long maxWithOrNull(long[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1, $l2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Long $r4, $r5;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $l2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label4;

        $l1 = $l2;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r4;
    }

    public static final java.lang.Object maxWithOrNull(java.lang.Object[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2, $r5;
        kotlin.ranges.IntRange $r3;
        kotlin.collections.IntIterator $r4;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r2 = $r1[0];

        $r3 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r3.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r4 = virtualinvoke $r3.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r4.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r4.<kotlin.collections.IntIterator: int nextInt()>();

        $r5 = $r1[$i0];

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r5);

        if $i0 >= 0 goto label4;

        $r2 = $r5;

        goto label4;

     label5:
        return $r2;
    }

    public static final java.lang.Short maxWithOrNull(short[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1, $s2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Short $r4, $r5;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $s2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label4;

        $s1 = $s2;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r4;
    }

    public static final byte maxWithOrThrow(byte[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1, $b2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Byte $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $b2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label3;

        $b1 = $b2;

        goto label3;

     label4:
        return $b1;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final char maxWithOrThrow(char[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Character $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label3;

        $c1 = $c2;

        goto label3;

     label4:
        return $c1;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final double maxWithOrThrow(double[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Double $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label3;

        $d0 = $d1;

        goto label3;

     label4:
        return $d0;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final float maxWithOrThrow(float[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Float $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label3;

        $f0 = $f1;

        goto label3;

     label4:
        return $f0;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final int maxWithOrThrow(int[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i1 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $i1 = $r1[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i2 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i2 >= 0 goto label3;

        $i0 = $i1;

        goto label3;

     label4:
        return $i0;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final long maxWithOrThrow(long[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1, $l2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Long $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $l2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label3;

        $l1 = $l2;

        goto label3;

     label4:
        return $l1;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final java.lang.Object maxWithOrThrow(java.lang.Object[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2, $r5;
        kotlin.ranges.IntRange $r3;
        kotlin.collections.IntIterator $r4;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r2 = $r1[0];

        $r3 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r3.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r4 = virtualinvoke $r3.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r4.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r4.<kotlin.collections.IntIterator: int nextInt()>();

        $r5 = $r1[$i0];

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r5);

        if $i0 >= 0 goto label3;

        $r2 = $r5;

        goto label3;

     label4:
        return $r2;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final short maxWithOrThrow(short[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1, $s2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Short $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $s2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label3;

        $s1 = $s2;

        goto label3;

     label4:
        return $s1;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final boolean maxWithOrThrow(boolean[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0, $z1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Boolean $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $z0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z1 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $z1 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 >= 0 goto label3;

        $z0 = $z1;

        goto label3;

     label4:
        return $z0;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final java.lang.Boolean minByOrNull(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0, $z1;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z1 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label5;

        $z0 = $z1;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;
    }

    public static final java.lang.Byte minByOrNull(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1, $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label5;

        $b1 = $b2;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r2;
    }

    public static final java.lang.Character minByOrNull(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label5;

        $c1 = $c2;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r2;
    }

    public static final java.lang.Double minByOrNull(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label5;

        $r4 = $r7;

        $d0 = $d1;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;
    }

    public static final java.lang.Float minByOrNull(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label5;

        $f0 = $f1;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;
    }

    public static final java.lang.Integer minByOrNull(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r1[0];

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        if $i1 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i1 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i1 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i2 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i2 <= 0 goto label5;

        $i0 = $i1;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;
    }

    public static final java.lang.Long minByOrNull(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1, $l2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label5;

        $r4 = $r7;

        $l1 = $l2;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r2;
    }

    public static final java.lang.Object minByOrNull(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2, $r3, $r7;
        java.lang.Comparable $r4, $r8;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r2 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        if $i0 != 0 goto label4;

        return $r2;

     label4:
        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $r3 = $r1[$i0];

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r8 = (java.lang.Comparable) $r7;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r8);

        if $i0 <= 0 goto label5;

        $r2 = $r3;

        $r4 = $r8;

        goto label5;

     label6:
        return $r2;
    }

    public static final java.lang.Short minByOrNull(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1, $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        if $i0 != 0 goto label4;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r2;

     label4:
        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label5:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label5;

        $s1 = $s2;

        $r4 = $r7;

        goto label5;

     label6:
        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r2;
    }

    public static final byte minByOrThrow(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1, $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $b1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        if $i0 != 0 goto label3;

        return $b1;

     label3:
        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $b1 = $b2;

        $r4 = $r7;

        goto label4;

     label5:
        return $b1;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final char minByOrThrow(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $c1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        if $i0 != 0 goto label3;

        return $c1;

     label3:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $c1 = $c2;

        $r4 = $r7;

        goto label4;

     label5:
        return $c1;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final double minByOrThrow(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $d0 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        if $i0 != 0 goto label3;

        return $d0;

     label3:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        $d0 = $d1;

        goto label4;

     label5:
        return $d0;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final float minByOrThrow(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $f0 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        if $i0 != 0 goto label3;

        return $f0;

     label3:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $f0 = $f1;

        $r4 = $r7;

        goto label4;

     label5:
        return $f0;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final int minByOrThrow(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $i0 = $r1[0];

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        if $i1 != 0 goto label3;

        return $i0;

     label3:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i1 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i2 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i2 <= 0 goto label4;

        $i0 = $i1;

        $r4 = $r7;

        goto label4;

     label5:
        return $i0;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final long minByOrThrow(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1, $l2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $l1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        if $i0 != 0 goto label3;

        return $l1;

     label3:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        $l1 = $l2;

        goto label4;

     label5:
        return $l1;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final java.lang.Object minByOrThrow(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2, $r3, $r7;
        java.lang.Comparable $r4, $r8;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r9;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $r2 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        if $i0 != 0 goto label3;

        return $r2;

     label3:
        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $r3 = $r1[$i0];

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r8 = (java.lang.Comparable) $r7;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r8);

        if $i0 <= 0 goto label4;

        $r2 = $r3;

        $r4 = $r8;

        goto label4;

     label5:
        return $r2;

     label6:
        $r9 = new java.util.NoSuchElementException;

        specialinvoke $r9.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r9;
    }

    public static final short minByOrThrow(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1, $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $s1 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        if $i0 != 0 goto label3;

        return $s1;

     label3:
        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s2 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $s1 = $s2;

        $r4 = $r7;

        goto label4;

     label5:
        return $s1;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    public static final boolean minByOrThrow(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0, $z1;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label6;

        $z0 = $r1[0];

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        if $i0 != 0 goto label3;

        return $z0;

     label3:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z1 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $z0 = $z1;

        $r4 = $r7;

        goto label4;

     label5:
        return $z0;

     label6:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label7;

     label7:
        throw $r8;
    }

    private static final double minOf(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r1[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double minOf(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r1[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double minOf(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r1[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double minOf(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r1[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double minOf(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r1[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double minOf(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l1 = $r1[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double minOf(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        double $d0, $d1;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r2 = $r1[0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    private static final double minOf(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r1[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final double minOf(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $z0 = $r1[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float minOf(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r1[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float minOf(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r1[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float minOf(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r1[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float minOf(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r1[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float minOf(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r1[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float minOf(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l1 = $r1[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float minOf(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        float $f0, $f1;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r2 = $r1[0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $f1 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    private static final float minOf(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r1[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final float minOf(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $z0 = $r1[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final java.lang.Comparable minOf(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r1[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable minOf(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r1[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable minOf(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r1[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable minOf(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r1[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable minOf(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r1[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable minOf(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l1 = $r1[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable minOf(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Comparable $r3, $r6;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r2 = $r1[0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Comparable) $r2;

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r6 = (java.lang.Comparable) $r2;

        $i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r6);

        if $i0 <= 0 goto label3;

        $r3 = $r6;

        goto label3;

     label4:
        return $r3;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final java.lang.Comparable minOf(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r1[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable minOf(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $z0 = $r1[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Comparable minOfOrNull(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r1[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable minOfOrNull(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r1[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable minOfOrNull(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r1[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable minOfOrNull(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r1[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable minOfOrNull(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r1[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable minOfOrNull(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r1[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable minOfOrNull(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Comparable $r3, $r6;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r2 = $r1[0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Comparable) $r2;

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r6 = (java.lang.Comparable) $r2;

        $i0 = interfaceinvoke $r3.<java.lang.Comparable: int compareTo(java.lang.Object)>($r6);

        if $i0 <= 0 goto label4;

        $r3 = $r6;

        goto label4;

     label5:
        return $r3;
    }

    private static final java.lang.Comparable minOfOrNull(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r1[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Comparable minOfOrNull(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Comparable $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r1[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Comparable) $r3;

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r7 = (java.lang.Comparable) $r3;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>($r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Double minOfOrNull(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r1[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Double minOfOrNull(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r1[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Double minOfOrNull(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r1[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;
    }

    private static final java.lang.Double minOfOrNull(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r1[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Double minOfOrNull(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r1[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Double minOfOrNull(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r1[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Double minOfOrNull(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        double $d0, $d1;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;
        java.lang.Double $r6;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r2 = $r1[0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r6;
    }

    private static final java.lang.Double minOfOrNull(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r1[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Double minOfOrNull(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        double $d0, $d1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r1[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r7;
    }

    private static final java.lang.Float minOfOrNull(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r1[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Float minOfOrNull(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r1[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Float minOfOrNull(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r1[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Float minOfOrNull(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r1[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;
    }

    private static final java.lang.Float minOfOrNull(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r1[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Float minOfOrNull(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r1[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Float minOfOrNull(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        float $f0, $f1;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;
        java.lang.Float $r6;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r2 = $r1[0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $f1 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r6;
    }

    private static final java.lang.Float minOfOrNull(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r1[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Float minOfOrNull(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0, $f1;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.lang.Float $r7;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r1[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r7;
    }

    private static final java.lang.Object minOfWith(byte[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        byte[] $r2;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: byte[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r2[0];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object minOfWith(char[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        char[] $r2;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: char[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r2[0];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object minOfWith(double[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        double[] $r2;
        int $i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: double[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r2[0];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object minOfWith(float[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        float[] $r2;
        int $i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: float[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r2[0];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object minOfWith(int[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        int[] $r2;
        int $i0;
        boolean $z0;
        java.lang.Integer $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: int[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r2[0];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object minOfWith(long[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        long[] $r2;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: long[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l1 = $r2[0];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object minOfWith(java.lang.Object[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object[] $r2;
        int $i0;
        boolean $z0;
        java.lang.Object $r3, $r6;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;
        java.util.NoSuchElementException $r7;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r3 = $r2[0];

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r2);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r6 = $r2[$i0];

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r6);

        if $i0 <= 0 goto label3;

        $r3 = $r6;

        goto label3;

     label4:
        return $r3;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r7;
    }

    private static final java.lang.Object minOfWith(short[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        short[] $r2;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: short[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r2[0];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object minOfWith(boolean[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        boolean[] $r2;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;
        java.util.NoSuchElementException $r8;

        $r2 := @parameter0: boolean[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $z0 = $r2[0];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label3;

        $r4 = $r7;

        goto label3;

     label4:
        return $r4;

     label5:
        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r8;
    }

    private static final java.lang.Object minOfWithOrNull(byte[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        byte[] $r2;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: byte[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r2[0];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $b1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object minOfWithOrNull(char[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        char[] $r2;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: char[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r2[0];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $c1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object minOfWithOrNull(double[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        double[] $r2;
        int $i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: double[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r2[0];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $d0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object minOfWithOrNull(float[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        float[] $r2;
        int $i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: float[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r2[0];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $f0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object minOfWithOrNull(int[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        int[] $r2;
        int $i0;
        boolean $z0;
        java.lang.Integer $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: int[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r2[0];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object minOfWithOrNull(long[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        long[] $r2;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: long[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r2[0];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $l1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object minOfWithOrNull(java.lang.Object[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object[] $r2;
        int $i0;
        boolean $z0;
        java.lang.Object $r3, $r6;
        kotlin.ranges.IntRange $r4;
        kotlin.collections.IntIterator $r5;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r3 = $r2[0];

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r2);

        specialinvoke $r4.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r5 = virtualinvoke $r4.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r5.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r5.<kotlin.collections.IntIterator: int nextInt()>();

        $r6 = $r2[$i0];

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r3, $r6);

        if $i0 <= 0 goto label4;

        $r3 = $r6;

        goto label4;

     label5:
        return $r3;
    }

    private static final java.lang.Object minOfWithOrNull(short[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        short[] $r2;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: short[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r2[0];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $s1 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    private static final java.lang.Object minOfWithOrNull(boolean[], java.util.Comparator, kotlin.jvm.functions.Function1)
    {
        java.util.Comparator $r0;
        kotlin.jvm.functions.Function1 $r1;
        boolean[] $r2;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.Object $r4, $r7;
        kotlin.ranges.IntRange $r5;
        kotlin.collections.IntIterator $r6;

        $r2 := @parameter0: boolean[];

        $r0 := @parameter1: java.util.Comparator;

        $r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r2[0];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r2);

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r6 = virtualinvoke $r5.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r6.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r6.<kotlin.collections.IntIterator: int nextInt()>();

        $z0 = $r2[$i0];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i0 <= 0 goto label4;

        $r4 = $r7;

        goto label4;

     label5:
        return $r4;
    }

    public static final java.lang.Byte minOrNull(byte[])
    {
        byte[] $r0;
        int $i0;
        boolean $z0;
        byte $b1, $b2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Byte $r3;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $b2 = $r0[$i0];

        if $b1 <= $b2 goto label4;

        $b1 = $b2;

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r3;
    }

    public static final java.lang.Character minOrNull(char[])
    {
        char[] $r0;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Character $r3;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = $r0[$i0];

        $i0 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>($c1, $c2);

        if $i0 <= 0 goto label4;

        $c1 = $c2;

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r3;
    }

    public static final java.lang.Comparable minOrNull(java.lang.Comparable[])
    {
        java.lang.Comparable[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Comparable $r1, $r4;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;

        $r0 := @parameter0: java.lang.Comparable[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r1 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = $r0[$i0];

        $i0 = interfaceinvoke $r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4);

        if $i0 <= 0 goto label4;

        $r1 = $r4;

        goto label4;

     label5:
        return $r1;
    }

    public static final java.lang.Double minOrNull(double[])
    {
        double[] $r0;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Double $r3;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r0[$i0];

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r3;
    }

    public static final java.lang.Double minOrNull(java.lang.Double[])
    {
        java.lang.Double[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Double $r1;
        double $d0, $d1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;

        $r0 := @parameter0: java.lang.Double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r1 = $r0[0];

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r1 = $r0[$i0];

        $d1 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label4;

     label5:
        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r1;
    }

    public static final java.lang.Float minOrNull(float[])
    {
        float[] $r0;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Float $r3;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r0[$i0];

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r3;
    }

    public static final java.lang.Float minOrNull(java.lang.Float[])
    {
        java.lang.Float[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Float $r1;
        float $f0, $f1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;

        $r0 := @parameter0: java.lang.Float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r1 = $r0[0];

        $f0 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r1 = $r0[$i0];

        $f1 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label4;

     label5:
        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r1;
    }

    public static final java.lang.Integer minOrNull(int[])
    {
        int[] $r0;
        int $i0, $i1;
        boolean $z0;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Integer $r3;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $i1 = $r0[$i1];

        if $i0 <= $i1 goto label4;

        $i0 = $i1;

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r3;
    }

    public static final java.lang.Long minOrNull(long[])
    {
        long[] $r0;
        int $i0;
        boolean $z0;
        long $l1, $l2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        byte $b3;
        java.lang.Long $r3;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $l2 = $r0[$i0];

        $b3 = $l1 cmp $l2;

        if $b3 <= 0 goto label4;

        $l1 = $l2;

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r3;
    }

    public static final java.lang.Short minOrNull(short[])
    {
        short[] $r0;
        int $i0;
        boolean $z0;
        short $s1, $s2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.lang.Short $r3;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $s2 = $r0[$i0];

        if $s1 <= $s2 goto label4;

        $s1 = $s2;

        goto label4;

     label5:
        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r3;
    }

    public static final byte minOrThrow(byte[])
    {
        byte[] $r0;
        int $i0;
        boolean $z0;
        byte $b1, $b2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $b2 = $r0[$i0];

        if $b1 <= $b2 goto label3;

        $b1 = $b2;

        goto label3;

     label4:
        return $b1;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final char minOrThrow(char[])
    {
        char[] $r0;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = $r0[$i0];

        $i0 = staticinvoke <kotlin.jvm.internal.Intrinsics: int compare(int,int)>($c1, $c2);

        if $i0 <= 0 goto label3;

        $c1 = $c2;

        goto label3;

     label4:
        return $c1;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final double minOrThrow(double[])
    {
        double[] $r0;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r0[$i0];

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final double minOrThrow(java.lang.Double[])
    {
        java.lang.Double[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Double $r1;
        double $d0, $d1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.util.NoSuchElementException $r4;

        $r0 := @parameter0: java.lang.Double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r1 = $r0[0];

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r1 = $r0[$i0];

        $d1 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $d0 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);

        goto label3;

     label4:
        return $d0;

     label5:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r4;
    }

    public static final float minOrThrow(float[])
    {
        float[] $r0;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r0[$i0];

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final float minOrThrow(java.lang.Float[])
    {
        java.lang.Float[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Float $r1;
        float $f0, $f1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.util.NoSuchElementException $r4;

        $r0 := @parameter0: java.lang.Float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r1 = $r0[0];

        $f0 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r1 = $r0[$i0];

        $f1 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        goto label3;

     label4:
        return $f0;

     label5:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r4;
    }

    public static final int minOrThrow(int[])
    {
        int[] $r0;
        int $i0, $i1;
        boolean $z0;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i1 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $i1 = $r0[$i1];

        if $i0 <= $i1 goto label3;

        $i0 = $i1;

        goto label3;

     label4:
        return $i0;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final long minOrThrow(long[])
    {
        long[] $r0;
        int $i0;
        boolean $z0;
        long $l1, $l2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        byte $b3;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $l2 = $r0[$i0];

        $b3 = $l1 cmp $l2;

        if $b3 <= 0 goto label3;

        $l1 = $l2;

        goto label3;

     label4:
        return $l1;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final java.lang.Comparable minOrThrow(java.lang.Comparable[])
    {
        java.lang.Comparable[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Comparable $r1, $r4;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.util.NoSuchElementException $r5;

        $r0 := @parameter0: java.lang.Comparable[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r1 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = $r0[$i0];

        $i0 = interfaceinvoke $r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4);

        if $i0 <= 0 goto label3;

        $r1 = $r4;

        goto label3;

     label4:
        return $r1;

     label5:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r5;
    }

    public static final short minOrThrow(short[])
    {
        short[] $r0;
        int $i0;
        boolean $z0;
        short $s1, $s2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r0[0];

        $r1 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $s2 = $r0[$i0];

        if $s1 <= $s2 goto label3;

        $s1 = $s2;

        goto label3;

     label4:
        return $s1;

     label5:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r3;
    }

    public static final java.lang.Boolean minWithOrNull(boolean[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0, $z1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Boolean $r4, $r5;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z1 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $z1 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label4;

        $z0 = $z1;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public static final java.lang.Byte minWithOrNull(byte[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1, $b2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Byte $r4, $r5;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $b2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label4;

        $b1 = $b2;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r4;
    }

    public static final java.lang.Character minWithOrNull(char[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Character $r4, $r5;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label4;

        $c1 = $c2;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r4;
    }

    public static final java.lang.Double minWithOrNull(double[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Double $r4, $r5;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label4;

        $d0 = $d1;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r4;
    }

    public static final java.lang.Float minWithOrNull(float[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Float $r4, $r5;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label4;

        $f0 = $f1;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r4;
    }

    public static final java.lang.Integer minWithOrNull(int[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4, $r5;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $i1 = $r1[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i2 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i2 <= 0 goto label4;

        $i0 = $i1;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r4;
    }

    public static final java.lang.Long minWithOrNull(long[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1, $l2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Long $r4, $r5;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $l2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label4;

        $l1 = $l2;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r4;
    }

    public static final java.lang.Object minWithOrNull(java.lang.Object[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2, $r5;
        kotlin.ranges.IntRange $r3;
        kotlin.collections.IntIterator $r4;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r2 = $r1[0];

        $r3 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r3.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r4 = virtualinvoke $r3.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r4.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r4.<kotlin.collections.IntIterator: int nextInt()>();

        $r5 = $r1[$i0];

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r5);

        if $i0 <= 0 goto label4;

        $r2 = $r5;

        goto label4;

     label5:
        return $r2;
    }

    public static final java.lang.Short minWithOrNull(short[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1, $s2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Short $r4, $r5;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $s2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label4;

        $s1 = $s2;

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r4;
    }

    public static final byte minWithOrThrow(byte[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1, $b2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Byte $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $b2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label3;

        $b1 = $b2;

        goto label3;

     label4:
        return $b1;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final char minWithOrThrow(char[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1, $c2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Character $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $c2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label3;

        $c1 = $c2;

        goto label3;

     label4:
        return $c1;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final double minWithOrThrow(double[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        double[] $r1;
        int $i0;
        boolean $z0;
        double $d0, $d1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Double $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label3;

        $d0 = $d1;

        goto label3;

     label4:
        return $d0;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final float minWithOrThrow(float[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0, $f1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Float $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label3;

        $f0 = $f1;

        goto label3;

     label4:
        return $f0;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final int minWithOrThrow(int[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i1 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $i1 = $r1[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i2 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i2 <= 0 goto label3;

        $i0 = $i1;

        goto label3;

     label4:
        return $i0;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final long minWithOrThrow(long[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        long[] $r1;
        int $i0;
        boolean $z0;
        long $l1, $l2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Long $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $l2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label3;

        $l1 = $l2;

        goto label3;

     label4:
        return $l1;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final java.lang.Object minWithOrThrow(java.lang.Object[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2, $r5;
        kotlin.ranges.IntRange $r3;
        kotlin.collections.IntIterator $r4;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r2 = $r1[0];

        $r3 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r3.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r4 = virtualinvoke $r3.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r4.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r4.<kotlin.collections.IntIterator: int nextInt()>();

        $r5 = $r1[$i0];

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r2, $r5);

        if $i0 <= 0 goto label3;

        $r2 = $r5;

        goto label3;

     label4:
        return $r2;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final short minWithOrThrow(short[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1, $s2;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Short $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $s2 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label3;

        $s1 = $s2;

        goto label3;

     label4:
        return $s1;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final boolean minWithOrThrow(boolean[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0, $z1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Boolean $r4, $r5;
        java.util.NoSuchElementException $r6;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $z0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z1 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $z1 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $i0 = interfaceinvoke $r0.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i0 <= 0 goto label3;

        $z0 = $z1;

        goto label3;

     label4:
        return $z0;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        goto label6;

     label6:
        throw $r6;
    }

    public static final boolean none(byte[])
    {
        byte[] $r0;
        int $i0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean none(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0, $i1;
        byte $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean none(char[])
    {
        char[] $r0;
        int $i0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean none(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0, $i1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean none(double[])
    {
        double[] $r0;
        int $i0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean none(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0, $i1;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean none(float[])
    {
        float[] $r0;
        int $i0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean none(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean none(int[])
    {
        int[] $r0;
        int $i0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean none(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean none(long[])
    {
        long[] $r0;
        int $i0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean none(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0, $i1;
        long $l2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean none(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean none(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r1[$i1];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean none(short[])
    {
        short[] $r0;
        int $i0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean none(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0, $i1;
        short $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static final boolean none(boolean[])
    {
        boolean[] $r0;
        int $i0;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean none(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    private static final byte[] onEach(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Byte $r2;
        int $i0, $i1;
        byte $b2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final char[] onEach(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Character $r2;
        int $i0, $i1;
        char $c2;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final double[] onEach(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Double $r2;
        int $i0, $i1;
        double $d0;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final float[] onEach(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Float $r2;
        int $i0, $i1;
        float $f0;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final int[] onEach(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Integer $r2;
        int $i0, $i1, $i2;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final long[] onEach(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Long $r2;
        int $i0, $i1;
        long $l2;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final java.lang.Object[] onEach(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r2;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final short[] onEach(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Short $r2;
        int $i0, $i1;
        short $s2;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final boolean[] onEach(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Boolean $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final byte[] onEachIndexed(byte[], kotlin.jvm.functions.Function2)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        byte $b3;
        java.lang.Integer $r2;
        java.lang.Byte $r3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final char[] onEachIndexed(char[], kotlin.jvm.functions.Function2)
    {
        char[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        char $c3;
        java.lang.Integer $r2;
        java.lang.Character $r3;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final double[] onEachIndexed(double[], kotlin.jvm.functions.Function2)
    {
        double[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        double $d0;
        java.lang.Integer $r2;
        java.lang.Double $r3;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final float[] onEachIndexed(float[], kotlin.jvm.functions.Function2)
    {
        float[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        float $f0;
        java.lang.Integer $r2;
        java.lang.Float $r3;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final int[] onEachIndexed(int[], kotlin.jvm.functions.Function2)
    {
        int[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r2, $r3;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final long[] onEachIndexed(long[], kotlin.jvm.functions.Function2)
    {
        long[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        long $l3;
        java.lang.Integer $r2;
        java.lang.Long $r3;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final java.lang.Object[] onEachIndexed(java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0, $i1, $i2;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final short[] onEachIndexed(short[], kotlin.jvm.functions.Function2)
    {
        short[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        short $s3;
        java.lang.Integer $r2;
        java.lang.Short $r3;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static final boolean[] onEachIndexed(boolean[], kotlin.jvm.functions.Function2)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Boolean $r3;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "action");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $i1 = $i1 + 1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static final kotlin.Pair partition(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.ArrayList $r1, $r3;
        int $i0, $i1;
        byte[] $r2;
        byte $b2;
        java.lang.Byte $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        kotlin.Pair $r7;

        $r2 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $b2 = $r2[$i1];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label3;

     label2:
        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r7 = new kotlin.Pair;

        specialinvoke $r7.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r1);

        return $r7;
    }

    public static final kotlin.Pair partition(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.ArrayList $r1, $r3;
        int $i0, $i1;
        char[] $r2;
        char $c2;
        java.lang.Character $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        kotlin.Pair $r7;

        $r2 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $c2 = $r2[$i1];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label3;

     label2:
        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r7 = new kotlin.Pair;

        specialinvoke $r7.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r1);

        return $r7;
    }

    public static final kotlin.Pair partition(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.ArrayList $r1, $r3;
        int $i0, $i1;
        double[] $r2;
        double $d0;
        java.lang.Double $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        kotlin.Pair $r7;

        $r2 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $d0 = $r2[$i1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label3;

     label2:
        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r7 = new kotlin.Pair;

        specialinvoke $r7.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r1);

        return $r7;
    }

    public static final kotlin.Pair partition(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.ArrayList $r1, $r3;
        int $i0, $i1;
        float[] $r2;
        float $f0;
        java.lang.Float $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        kotlin.Pair $r7;

        $r2 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $f0 = $r2[$i1];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label3;

     label2:
        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r7 = new kotlin.Pair;

        specialinvoke $r7.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r1);

        return $r7;
    }

    public static final kotlin.Pair partition(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.ArrayList $r1, $r3;
        int $i0, $i1, $i2;
        int[] $r2;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        kotlin.Pair $r7;

        $r2 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $i2 = $r2[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label3;

     label2:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r7 = new kotlin.Pair;

        specialinvoke $r7.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r1);

        return $r7;
    }

    public static final kotlin.Pair partition(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.ArrayList $r1, $r3;
        int $i0, $i1;
        long[] $r2;
        long $l2;
        java.lang.Long $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        kotlin.Pair $r7;

        $r2 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $l2 = $r2[$i1];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label3;

     label2:
        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r7 = new kotlin.Pair;

        specialinvoke $r7.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r1);

        return $r7;
    }

    public static final kotlin.Pair partition(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.ArrayList $r1, $r4;
        int $i0, $i1;
        java.lang.Object $r2, $r5;
        java.lang.Object[] $r3;
        java.lang.Boolean $r6;
        boolean $z0;
        kotlin.Pair $r7;

        $r3 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = $r3[$i1];

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        goto label3;

     label2:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r7 = new kotlin.Pair;

        specialinvoke $r7.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r1);

        return $r7;
    }

    public static final kotlin.Pair partition(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.ArrayList $r1, $r3;
        int $i0, $i1;
        short[] $r2;
        short $s2;
        java.lang.Short $r4;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        boolean $z0;
        kotlin.Pair $r7;

        $r2 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $s2 = $r2[$i1];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label3;

     label2:
        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r7 = new kotlin.Pair;

        specialinvoke $r7.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r1);

        return $r7;
    }

    public static final kotlin.Pair partition(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.ArrayList $r1, $r3;
        int $i0, $i1;
        boolean[] $r2;
        boolean $z0, $z1;
        java.lang.Boolean $r4;
        java.lang.Object $r5;
        kotlin.Pair $r6;

        $r2 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $z0 = $r2[$i1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r4 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label3;

     label2:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r6 = new kotlin.Pair;

        specialinvoke $r6.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r1);

        return $r6;
    }

    private static final byte random(byte[])
    {
        byte $b0;
        byte[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $b0 = staticinvoke <kotlin.collections.ArraysKt: byte random(byte[],kotlin.random.Random)>($r0, $r1);

        return $b0;
    }

    public static final byte random(byte[], kotlin.random.Random)
    {
        int $i0;
        byte[] $r0;
        kotlin.random.Random $r1;
        boolean $z0;
        byte $b1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $b1 = $r0[$i0];

        return $b1;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    private static final char random(char[])
    {
        char $c0;
        char[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $c0 = staticinvoke <kotlin.collections.ArraysKt: char random(char[],kotlin.random.Random)>($r0, $r1);

        return $c0;
    }

    public static final char random(char[], kotlin.random.Random)
    {
        int $i0;
        char[] $r0;
        kotlin.random.Random $r1;
        boolean $z0;
        char $c1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $c1 = $r0[$i0];

        return $c1;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    private static final double random(double[])
    {
        double[] $r0;
        double $d0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $d0 = staticinvoke <kotlin.collections.ArraysKt: double random(double[],kotlin.random.Random)>($r0, $r1);

        return $d0;
    }

    public static final double random(double[], kotlin.random.Random)
    {
        int $i0;
        double[] $r0;
        kotlin.random.Random $r1;
        boolean $z0;
        double $d0;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $d0 = $r0[$i0];

        return $d0;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    private static final float random(float[])
    {
        float $f0;
        float[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $f0 = staticinvoke <kotlin.collections.ArraysKt: float random(float[],kotlin.random.Random)>($r0, $r1);

        return $f0;
    }

    public static final float random(float[], kotlin.random.Random)
    {
        int $i0;
        float[] $r0;
        kotlin.random.Random $r1;
        boolean $z0;
        float $f0;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $f0 = $r0[$i0];

        return $f0;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    private static final int random(int[])
    {
        int $i0;
        int[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int random(int[],kotlin.random.Random)>($r0, $r1);

        return $i0;
    }

    public static final int random(int[], kotlin.random.Random)
    {
        int $i0;
        int[] $r0;
        kotlin.random.Random $r1;
        boolean $z0;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $i0 = $r0[$i0];

        return $i0;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    private static final long random(long[])
    {
        long[] $r0;
        long $l0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $l0 = staticinvoke <kotlin.collections.ArraysKt: long random(long[],kotlin.random.Random)>($r0, $r1);

        return $l0;
    }

    public static final long random(long[], kotlin.random.Random)
    {
        int $i0;
        long[] $r0;
        kotlin.random.Random $r1;
        boolean $z0;
        long $l1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $l1 = $r0[$i0];

        return $l1;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    private static final java.lang.Object random(java.lang.Object[])
    {
        java.lang.Object $r0;
        java.lang.Object[] $r1;
        kotlin.random.Random$Default $r2;

        $r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object random(java.lang.Object[],kotlin.random.Random)>($r1, $r2);

        return $r0;
    }

    public static final java.lang.Object random(java.lang.Object[], kotlin.random.Random)
    {
        int $i0;
        java.lang.Object[] $r0;
        kotlin.random.Random $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $r2 = $r0[$i0];

        return $r2;

     label3:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r3;
    }

    private static final short random(short[])
    {
        short $s0;
        short[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $s0 = staticinvoke <kotlin.collections.ArraysKt: short random(short[],kotlin.random.Random)>($r0, $r1);

        return $s0;
    }

    public static final short random(short[], kotlin.random.Random)
    {
        int $i0;
        short[] $r0;
        kotlin.random.Random $r1;
        boolean $z0;
        short $s1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $s1 = $r0[$i0];

        return $s1;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    private static final boolean random(boolean[])
    {
        boolean $z0;
        boolean[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $z0 = staticinvoke <kotlin.collections.ArraysKt: boolean random(boolean[],kotlin.random.Random)>($r0, $r1);

        return $z0;
    }

    public static final boolean random(boolean[], kotlin.random.Random)
    {
        int $i0;
        boolean[] $r0;
        kotlin.random.Random $r1;
        boolean $z0;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $z0 = $r0[$i0];

        return $z0;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    private static final java.lang.Boolean randomOrNull(boolean[])
    {
        java.lang.Boolean $r0;
        boolean[] $r1;
        kotlin.random.Random$Default $r2;

        $r1 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Boolean randomOrNull(boolean[],kotlin.random.Random)>($r1, $r2);

        return $r0;
    }

    public static final java.lang.Boolean randomOrNull(boolean[], kotlin.random.Random)
    {
        boolean[] $r0;
        kotlin.random.Random $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $z0 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;
    }

    private static final java.lang.Byte randomOrNull(byte[])
    {
        java.lang.Byte $r0;
        byte[] $r1;
        kotlin.random.Random$Default $r2;

        $r1 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Byte randomOrNull(byte[],kotlin.random.Random)>($r1, $r2);

        return $r0;
    }

    public static final java.lang.Byte randomOrNull(byte[], kotlin.random.Random)
    {
        byte[] $r0;
        kotlin.random.Random $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        java.lang.Byte $r2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $b1 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r2;
    }

    private static final java.lang.Character randomOrNull(char[])
    {
        java.lang.Character $r0;
        char[] $r1;
        kotlin.random.Random$Default $r2;

        $r1 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Character randomOrNull(char[],kotlin.random.Random)>($r1, $r2);

        return $r0;
    }

    public static final java.lang.Character randomOrNull(char[], kotlin.random.Random)
    {
        char[] $r0;
        kotlin.random.Random $r1;
        int $i0;
        boolean $z0;
        char $c1;
        java.lang.Character $r2;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $c1 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r2;
    }

    private static final java.lang.Double randomOrNull(double[])
    {
        java.lang.Double $r0;
        double[] $r1;
        kotlin.random.Random$Default $r2;

        $r1 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Double randomOrNull(double[],kotlin.random.Random)>($r1, $r2);

        return $r0;
    }

    public static final java.lang.Double randomOrNull(double[], kotlin.random.Random)
    {
        double[] $r0;
        kotlin.random.Random $r1;
        int $i0;
        boolean $z0;
        double $d0;
        java.lang.Double $r2;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $d0 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;
    }

    private static final java.lang.Float randomOrNull(float[])
    {
        java.lang.Float $r0;
        float[] $r1;
        kotlin.random.Random$Default $r2;

        $r1 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Float randomOrNull(float[],kotlin.random.Random)>($r1, $r2);

        return $r0;
    }

    public static final java.lang.Float randomOrNull(float[], kotlin.random.Random)
    {
        float[] $r0;
        kotlin.random.Random $r1;
        int $i0;
        boolean $z0;
        float $f0;
        java.lang.Float $r2;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $f0 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;
    }

    private static final java.lang.Integer randomOrNull(int[])
    {
        java.lang.Integer $r0;
        int[] $r1;
        kotlin.random.Random$Default $r2;

        $r1 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Integer randomOrNull(int[],kotlin.random.Random)>($r1, $r2);

        return $r0;
    }

    public static final java.lang.Integer randomOrNull(int[], kotlin.random.Random)
    {
        int[] $r0;
        kotlin.random.Random $r1;
        int $i0;
        boolean $z0;
        java.lang.Integer $r2;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $i0 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;
    }

    private static final java.lang.Long randomOrNull(long[])
    {
        java.lang.Long $r0;
        long[] $r1;
        kotlin.random.Random$Default $r2;

        $r1 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Long randomOrNull(long[],kotlin.random.Random)>($r1, $r2);

        return $r0;
    }

    public static final java.lang.Long randomOrNull(long[], kotlin.random.Random)
    {
        long[] $r0;
        kotlin.random.Random $r1;
        int $i0;
        boolean $z0;
        long $l1;
        java.lang.Long $r2;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $l1 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r2;
    }

    private static final java.lang.Object randomOrNull(java.lang.Object[])
    {
        java.lang.Object $r0;
        java.lang.Object[] $r1;
        kotlin.random.Random$Default $r2;

        $r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object randomOrNull(java.lang.Object[],kotlin.random.Random)>($r1, $r2);

        return $r0;
    }

    public static final java.lang.Object randomOrNull(java.lang.Object[], kotlin.random.Random)
    {
        int $i0;
        java.lang.Object[] $r0;
        kotlin.random.Random $r1;
        boolean $z0;
        java.lang.Object $r2;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $r2 = $r0[$i0];

        return $r2;
    }

    private static final java.lang.Short randomOrNull(short[])
    {
        java.lang.Short $r0;
        short[] $r1;
        kotlin.random.Random$Default $r2;

        $r1 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r2 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Short randomOrNull(short[],kotlin.random.Random)>($r1, $r2);

        return $r0;
    }

    public static final java.lang.Short randomOrNull(short[], kotlin.random.Random)
    {
        short[] $r0;
        kotlin.random.Random $r1;
        int $i0;
        boolean $z0;
        short $s1;
        java.lang.Short $r2;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = lengthof $r0;

        $i0 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $s1 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r2;
    }

    public static final byte reduce(byte[], kotlin.jvm.functions.Function2)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Byte $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;
        java.lang.UnsupportedOperationException $r8;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $b1 = $r0[$i0];

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $b1 = virtualinvoke $r7.<java.lang.Number: byte byteValue()>();

        goto label3;

     label4:
        return $b1;

     label5:
        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r8;
    }

    public static final char reduce(char[], kotlin.jvm.functions.Function2)
    {
        char[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0;
        boolean $z0;
        char $c1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Character $r4, $r5;
        java.lang.Object $r6;
        java.lang.UnsupportedOperationException $r7;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $c1 = $r0[$i0];

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r4 = (java.lang.Character) $r6;

        $c1 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        goto label3;

     label4:
        return $c1;

     label5:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r7;
    }

    public static final double reduce(double[], kotlin.jvm.functions.Function2)
    {
        double $d0;
        double[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Double $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;
        java.lang.UnsupportedOperationException $r8;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d0 = $r0[$i0];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $d0 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        goto label3;

     label4:
        return $d0;

     label5:
        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r8;
    }

    public static final float reduce(float[], kotlin.jvm.functions.Function2)
    {
        float[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0;
        boolean $z0;
        float $f0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Float $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;
        java.lang.UnsupportedOperationException $r8;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $f0 = $r0[$i0];

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $f0 = virtualinvoke $r7.<java.lang.Number: float floatValue()>();

        goto label3;

     label4:
        return $f0;

     label5:
        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r8;
    }

    public static final int reduce(int[], kotlin.jvm.functions.Function2)
    {
        int[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;
        java.lang.UnsupportedOperationException $r8;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i1 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r0[$i1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $i0 = virtualinvoke $r7.<java.lang.Number: int intValue()>();

        goto label3;

     label4:
        return $i0;

     label5:
        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r8;
    }

    public static final long reduce(long[], kotlin.jvm.functions.Function2)
    {
        long $l0;
        long[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i1;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Long $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;
        java.lang.UnsupportedOperationException $r8;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i1 = lengthof $r0;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l0 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i1 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $l0 = $r0[$i1];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $l0 = virtualinvoke $r7.<java.lang.Number: long longValue()>();

        goto label3;

     label4:
        return $l0;

     label5:
        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r8;
    }

    public static final java.lang.Object reduce(java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2, $r5;
        kotlin.ranges.IntRange $r3;
        kotlin.collections.IntIterator $r4;
        java.lang.UnsupportedOperationException $r6;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r2 = $r0[0];

        $r3 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r3.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r4 = virtualinvoke $r3.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r4.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r4.<kotlin.collections.IntIterator: int nextInt()>();

        $r5 = $r0[$i0];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        goto label3;

     label4:
        return $r2;

     label5:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r6;
    }

    public static final short reduce(short[], kotlin.jvm.functions.Function2)
    {
        short[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0;
        boolean $z0;
        short $s1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Short $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;
        java.lang.UnsupportedOperationException $r8;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $s1 = $r0[$i0];

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $s1 = virtualinvoke $r7.<java.lang.Number: short shortValue()>();

        goto label3;

     label4:
        return $s1;

     label5:
        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r8;
    }

    public static final boolean reduce(boolean[], kotlin.jvm.functions.Function2)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0;
        boolean $z0, $z1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Boolean $r4, $r5;
        java.lang.Object $r6;
        java.lang.UnsupportedOperationException $r7;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $z0 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z1 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z0 = $r0[$i0];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r4 = (java.lang.Boolean) $r6;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        goto label3;

     label4:
        return $z0;

     label5:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r7;
    }

    public static final byte reduceIndexed(byte[], kotlin.jvm.functions.Function3)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Byte $r5, $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;
        java.lang.UnsupportedOperationException $r9;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $b1 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $b1 = $r0[$i0];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r8 = (java.lang.Number) $r7;

        $b1 = virtualinvoke $r8.<java.lang.Number: byte byteValue()>();

        goto label3;

     label4:
        return $b1;

     label5:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r9;
    }

    public static final char reduceIndexed(char[], kotlin.jvm.functions.Function3)
    {
        char[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0;
        boolean $z0;
        char $c1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Character $r5, $r6;
        java.lang.Object $r7;
        java.lang.UnsupportedOperationException $r8;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $c1 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $c1 = $r0[$i0];

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r5 = (java.lang.Character) $r7;

        $c1 = virtualinvoke $r5.<java.lang.Character: char charValue()>();

        goto label3;

     label4:
        return $c1;

     label5:
        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r8;
    }

    public static final double reduceIndexed(double[], kotlin.jvm.functions.Function3)
    {
        double $d0;
        double[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Double $r5, $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;
        java.lang.UnsupportedOperationException $r9;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $d0 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d0 = $r0[$i0];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r8 = (java.lang.Number) $r7;

        $d0 = virtualinvoke $r8.<java.lang.Number: double doubleValue()>();

        goto label3;

     label4:
        return $d0;

     label5:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r9;
    }

    public static final float reduceIndexed(float[], kotlin.jvm.functions.Function3)
    {
        float[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0;
        boolean $z0;
        float $f0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Float $r5, $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;
        java.lang.UnsupportedOperationException $r9;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $f0 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $f0 = $r0[$i0];

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r8 = (java.lang.Number) $r7;

        $f0 = virtualinvoke $r8.<java.lang.Number: float floatValue()>();

        goto label3;

     label4:
        return $f0;

     label5:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r9;
    }

    public static final int reduceIndexed(int[], kotlin.jvm.functions.Function3)
    {
        int[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0, $i1;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4, $r5, $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;
        java.lang.UnsupportedOperationException $r9;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $i0 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i1 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r0[$i1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r8 = (java.lang.Number) $r7;

        $i0 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        goto label3;

     label4:
        return $i0;

     label5:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r9;
    }

    public static final long reduceIndexed(long[], kotlin.jvm.functions.Function3)
    {
        long $l0;
        long[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i1;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Long $r5, $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;
        java.lang.UnsupportedOperationException $r9;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i1 = lengthof $r0;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $l0 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i1 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $l0 = $r0[$i1];

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r8 = (java.lang.Number) $r7;

        $l0 = virtualinvoke $r8.<java.lang.Number: long longValue()>();

        goto label3;

     label4:
        return $l0;

     label5:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r9;
    }

    public static final java.lang.Object reduceIndexed(java.lang.Object[], kotlin.jvm.functions.Function3)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2, $r6;
        kotlin.ranges.IntRange $r3;
        kotlin.collections.IntIterator $r4;
        java.lang.Integer $r5;
        java.lang.UnsupportedOperationException $r7;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $r2 = $r0[0];

        $r3 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        specialinvoke $r3.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r4 = virtualinvoke $r3.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r4.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r4.<kotlin.collections.IntIterator: int nextInt()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6 = $r0[$i0];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        goto label3;

     label4:
        return $r2;

     label5:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r7;
    }

    public static final short reduceIndexed(short[], kotlin.jvm.functions.Function3)
    {
        short[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0;
        boolean $z0;
        short $s1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Short $r5, $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;
        java.lang.UnsupportedOperationException $r9;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $s1 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $s1 = $r0[$i0];

        $r6 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r8 = (java.lang.Number) $r7;

        $s1 = virtualinvoke $r8.<java.lang.Number: short shortValue()>();

        goto label3;

     label4:
        return $s1;

     label5:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r9;
    }

    public static final boolean reduceIndexed(boolean[], kotlin.jvm.functions.Function3)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0;
        boolean $z0, $z1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Boolean $r5, $r6;
        java.lang.Object $r7;
        java.lang.UnsupportedOperationException $r8;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label5;

        $z0 = $r0[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r0);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label3:
        $z1 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z0 = $r0[$i0];

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r7 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r5 = (java.lang.Boolean) $r7;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        goto label3;

     label4:
        return $z0;

     label5:
        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label6;

     label6:
        throw $r8;
    }

    public static final java.lang.Boolean reduceIndexedOrNull(boolean[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0, $z1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Boolean $r5, $r6;
        java.lang.Object $r7;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z1 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z0 = $r1[$i0];

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r5 = (java.lang.Boolean) $r7;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        goto label4;

     label5:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r5;
    }

    public static final java.lang.Byte reduceIndexedOrNull(byte[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Byte $r5, $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $b1 = $r1[$i0];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r8 = (java.lang.Number) $r7;

        $b1 = virtualinvoke $r8.<java.lang.Number: byte byteValue()>();

        goto label4;

     label5:
        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r5;
    }

    public static final java.lang.Character reduceIndexedOrNull(char[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Character $r5, $r6;
        java.lang.Object $r7;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $c1 = $r1[$i0];

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r5 = (java.lang.Character) $r7;

        $c1 = virtualinvoke $r5.<java.lang.Character: char charValue()>();

        goto label4;

     label5:
        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r5;
    }

    public static final java.lang.Double reduceIndexedOrNull(double[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        double $d0;
        double[] $r1;
        int $i0;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Double $r5, $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d0 = $r1[$i0];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r8 = (java.lang.Number) $r7;

        $d0 = virtualinvoke $r8.<java.lang.Number: double doubleValue()>();

        goto label4;

     label5:
        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r5;
    }

    public static final java.lang.Float reduceIndexedOrNull(float[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Float $r5, $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $f0 = $r1[$i0];

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r8 = (java.lang.Number) $r7;

        $f0 = virtualinvoke $r8.<java.lang.Number: float floatValue()>();

        goto label4;

     label5:
        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r5;
    }

    public static final java.lang.Integer reduceIndexedOrNull(int[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        int[] $r1;
        int $i0, $i1;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4, $r5, $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r8 = (java.lang.Number) $r7;

        $i0 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r4;
    }

    public static final java.lang.Long reduceIndexedOrNull(long[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        long $l0;
        long[] $r1;
        int $i1;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Long $r5, $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i1 = lengthof $r1;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $l0 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r8 = (java.lang.Number) $r7;

        $l0 = virtualinvoke $r8.<java.lang.Number: long longValue()>();

        goto label4;

     label5:
        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r5;
    }

    public static final java.lang.Object reduceIndexedOrNull(java.lang.Object[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2, $r6;
        kotlin.ranges.IntRange $r3;
        kotlin.collections.IntIterator $r4;
        java.lang.Integer $r5;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r2 = $r1[0];

        $r3 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r3.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r4 = virtualinvoke $r3.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r4.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r4.<kotlin.collections.IntIterator: int nextInt()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        goto label4;

     label5:
        return $r2;
    }

    public static final java.lang.Short reduceIndexedOrNull(short[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4;
        java.lang.Short $r5, $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $s1 = $r1[$i0];

        $r6 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r8 = (java.lang.Number) $r7;

        $s1 = virtualinvoke $r8.<java.lang.Number: short shortValue()>();

        goto label4;

     label5:
        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r5;
    }

    public static final java.lang.Boolean reduceOrNull(boolean[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0, $z1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Boolean $r4, $r5;
        java.lang.Object $r6;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $z0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z1 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z0 = $r1[$i0];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r4 = (java.lang.Boolean) $r6;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public static final java.lang.Byte reduceOrNull(byte[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        byte[] $r1;
        int $i0;
        boolean $z0;
        byte $b1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Byte $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $b1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $b1 = $r1[$i0];

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $b1 = virtualinvoke $r7.<java.lang.Number: byte byteValue()>();

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r4;
    }

    public static final java.lang.Character reduceOrNull(char[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        char[] $r1;
        int $i0;
        boolean $z0;
        char $c1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Character $r4, $r5;
        java.lang.Object $r6;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $c1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $c1 = $r1[$i0];

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r4 = (java.lang.Character) $r6;

        $c1 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r4;
    }

    public static final java.lang.Double reduceOrNull(double[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        double $d0;
        double[] $r1;
        int $i0;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Double $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $d0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d0 = $r1[$i0];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $d0 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r4;
    }

    public static final java.lang.Float reduceOrNull(float[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        float[] $r1;
        int $i0;
        boolean $z0;
        float $f0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Float $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $f0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $f0 = $r1[$i0];

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $f0 = virtualinvoke $r7.<java.lang.Number: float floatValue()>();

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r4;
    }

    public static final java.lang.Integer reduceOrNull(int[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int[] $r1;
        int $i0, $i1;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Integer $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $i0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $i0 = virtualinvoke $r7.<java.lang.Number: int intValue()>();

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r4;
    }

    public static final java.lang.Long reduceOrNull(long[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        long $l0;
        long[] $r1;
        int $i1;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Long $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i1 = lengthof $r1;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $l0 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i1 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $l0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $l0 = virtualinvoke $r7.<java.lang.Number: long longValue()>();

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r4;
    }

    public static final java.lang.Object reduceOrNull(java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2, $r5;
        kotlin.ranges.IntRange $r3;
        kotlin.collections.IntIterator $r4;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $r2 = $r1[0];

        $r3 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        specialinvoke $r3.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r4 = virtualinvoke $r3.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r4.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r4.<kotlin.collections.IntIterator: int nextInt()>();

        $r5 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        goto label4;

     label5:
        return $r2;
    }

    public static final java.lang.Short reduceOrNull(short[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        short[] $r1;
        int $i0;
        boolean $z0;
        short $s1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Short $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return null;

     label3:
        $s1 = $r1[0];

        $r2 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(1, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $s1 = $r1[$i0];

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $s1 = virtualinvoke $r7.<java.lang.Number: short shortValue()>();

        goto label4;

     label5:
        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r4;
    }

    public static final byte reduceRight(byte[], kotlin.jvm.functions.Function2)
    {
        int $i0, $i1;
        byte[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        byte $b2, $b3;
        java.lang.Byte $r2, $r3;
        java.lang.Object $r4;
        java.lang.Number $r5;
        java.lang.UnsupportedOperationException $r6;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $b2 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $b3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Number) $r4;

        $b2 = virtualinvoke $r5.<java.lang.Number: byte byteValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $b2;

     label3:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r6;
    }

    public static final char reduceRight(char[], kotlin.jvm.functions.Function2)
    {
        int $i0, $i1;
        char[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        char $c2, $c3;
        java.lang.Character $r2, $r3;
        java.lang.Object $r4;
        java.lang.UnsupportedOperationException $r5;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $c2 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $c3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r2 = (java.lang.Character) $r4;

        $c2 = virtualinvoke $r2.<java.lang.Character: char charValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $c2;

     label3:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final double reduceRight(double[], kotlin.jvm.functions.Function2)
    {
        double $d0, $d1;
        double[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i0, $i1;
        java.lang.Double $r2, $r3;
        java.lang.Object $r4;
        java.lang.Number $r5;
        java.lang.UnsupportedOperationException $r6;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $d1 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $d0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Number) $r4;

        $d1 = virtualinvoke $r5.<java.lang.Number: double doubleValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $d1;

     label3:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r6;
    }

    public static final float reduceRight(float[], kotlin.jvm.functions.Function2)
    {
        int $i0, $i1;
        float[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        float $f0, $f1;
        java.lang.Float $r2, $r3;
        java.lang.Object $r4;
        java.lang.Number $r5;
        java.lang.UnsupportedOperationException $r6;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $f0 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $f1 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Number) $r4;

        $f0 = virtualinvoke $r5.<java.lang.Number: float floatValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $f0;

     label3:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r6;
    }

    public static final int reduceRight(int[], kotlin.jvm.functions.Function2)
    {
        int $i0, $i1, $i2;
        int[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Integer $r2, $r3;
        java.lang.Object $r4;
        java.lang.Number $r5;
        java.lang.UnsupportedOperationException $r6;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $i2 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $i0 = $i1 + -1;

        $i1 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Number) $r4;

        $i2 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $i1 = $i0;

        goto label1;

     label2:
        return $i2;

     label3:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r6;
    }

    public static final long reduceRight(long[], kotlin.jvm.functions.Function2)
    {
        long $l0, $l3;
        long[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        int $i1, $i2;
        java.lang.Long $r2, $r3;
        java.lang.Object $r4;
        java.lang.Number $r5;
        java.lang.UnsupportedOperationException $r6;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

        if $i1 < 0 goto label3;

        $i2 = $i1 + -1;

        $l3 = $r0[$i1];

     label1:
        if $i2 < 0 goto label2;

        $l0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Number) $r4;

        $l3 = virtualinvoke $r5.<java.lang.Number: long longValue()>();

        $i2 = $i2 + -1;

        goto label1;

     label2:
        return $l3;

     label3:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r6;
    }

    public static final java.lang.Object reduceRight(java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        int $i0, $i1;
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.lang.Object $r2, $r3;
        java.lang.UnsupportedOperationException $r4;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $r2 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $r3 = $r0[$i1];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $r2;

     label3:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r4;
    }

    public static final short reduceRight(short[], kotlin.jvm.functions.Function2)
    {
        int $i0, $i1;
        short[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        short $s2, $s3;
        java.lang.Short $r2, $r3;
        java.lang.Object $r4;
        java.lang.Number $r5;
        java.lang.UnsupportedOperationException $r6;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $s2 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $s3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Number) $r4;

        $s2 = virtualinvoke $r5.<java.lang.Number: short shortValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $s2;

     label3:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r6;
    }

    public static final boolean reduceRight(boolean[], kotlin.jvm.functions.Function2)
    {
        int $i0, $i1;
        boolean[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        boolean $z0, $z1;
        java.lang.Boolean $r2, $r3;
        java.lang.Object $r4;
        java.lang.UnsupportedOperationException $r5;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $z0 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $z1 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r2 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $z0;

     label3:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final byte reduceRightIndexed(byte[], kotlin.jvm.functions.Function3)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0, $i1;
        byte $b2, $b3;
        java.lang.Integer $r2;
        java.lang.Byte $r3, $r4;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.lang.UnsupportedOperationException $r7;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $b2 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $b3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r6 = (java.lang.Number) $r5;

        $b2 = virtualinvoke $r6.<java.lang.Number: byte byteValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $b2;

     label3:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r7;
    }

    public static final char reduceRightIndexed(char[], kotlin.jvm.functions.Function3)
    {
        char[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0, $i1;
        char $c2, $c3;
        java.lang.Integer $r2;
        java.lang.Character $r3, $r4;
        java.lang.Object $r5;
        java.lang.UnsupportedOperationException $r6;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $c2 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $c3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r3 = (java.lang.Character) $r5;

        $c2 = virtualinvoke $r3.<java.lang.Character: char charValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $c2;

     label3:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r6;
    }

    public static final double reduceRightIndexed(double[], kotlin.jvm.functions.Function3)
    {
        double[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0, $i1;
        double $d0, $d1;
        java.lang.Integer $r2;
        java.lang.Double $r3, $r4;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.lang.UnsupportedOperationException $r7;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $d0 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $d1 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r6 = (java.lang.Number) $r5;

        $d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $d0;

     label3:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r7;
    }

    public static final float reduceRightIndexed(float[], kotlin.jvm.functions.Function3)
    {
        float[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0, $i1;
        float $f0, $f1;
        java.lang.Integer $r2;
        java.lang.Float $r3, $r4;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.lang.UnsupportedOperationException $r7;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $f0 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $f1 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r6 = (java.lang.Number) $r5;

        $f0 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $f0;

     label3:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r7;
    }

    public static final int reduceRightIndexed(int[], kotlin.jvm.functions.Function3)
    {
        int[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2, $r3, $r4;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.lang.UnsupportedOperationException $r7;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $i0 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r6 = (java.lang.Number) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $i0;

     label3:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r7;
    }

    public static final long reduceRightIndexed(long[], kotlin.jvm.functions.Function3)
    {
        long[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0, $i1;
        long $l2, $l3;
        java.lang.Integer $r2;
        java.lang.Long $r3, $r4;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.lang.UnsupportedOperationException $r7;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $l2 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $l3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r6 = (java.lang.Number) $r5;

        $l2 = virtualinvoke $r6.<java.lang.Number: long longValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $l2;

     label3:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r7;
    }

    public static final java.lang.Object reduceRightIndexed(java.lang.Object[], kotlin.jvm.functions.Function3)
    {
        java.lang.Object $r0, $r3;
        java.lang.Object[] $r1;
        kotlin.jvm.functions.Function3 $r2;
        int $i0, $i1;
        java.lang.Integer $r4;
        java.lang.UnsupportedOperationException $r5;

        $r1 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $r3 = $r1[$i0];

     label1:
        if $i1 < 0 goto label2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r0 = $r1[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r0, $r3);

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $r3;

     label3:
        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r5;
    }

    public static final short reduceRightIndexed(short[], kotlin.jvm.functions.Function3)
    {
        short[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0, $i1;
        short $s2, $s3;
        java.lang.Integer $r2;
        java.lang.Short $r3, $r4;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.lang.UnsupportedOperationException $r7;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $s2 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $s3 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r6 = (java.lang.Number) $r5;

        $s2 = virtualinvoke $r6.<java.lang.Number: short shortValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $s2;

     label3:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r7;
    }

    public static final boolean reduceRightIndexed(boolean[], kotlin.jvm.functions.Function3)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function3 $r1;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.Integer $r2;
        java.lang.Boolean $r3, $r4;
        java.lang.Object $r5;
        java.lang.UnsupportedOperationException $r6;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r0);

        if $i0 < 0 goto label3;

        $i1 = $i0 + -1;

        $z0 = $r0[$i0];

     label1:
        if $i1 < 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z1 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r3 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        $i1 = $i1 + -1;

        goto label1;

     label2:
        return $z0;

     label3:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Empty array can\'t be reduced.");

        goto label4;

     label4:
        throw $r6;
    }

    public static final java.lang.Boolean reduceRightIndexedOrNull(boolean[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        boolean[] $r1;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.Integer $r2;
        java.lang.Boolean $r3, $r4;
        java.lang.Object $r5;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $z0 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z1 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r3 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r3;
    }

    public static final java.lang.Byte reduceRightIndexedOrNull(byte[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        byte[] $r1;
        int $i0, $i1;
        byte $b2, $b3;
        java.lang.Integer $r2;
        java.lang.Byte $r3, $r4;
        java.lang.Object $r5;
        java.lang.Number $r6;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $b2 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $b3 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r6 = (java.lang.Number) $r5;

        $b2 = virtualinvoke $r6.<java.lang.Number: byte byteValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        return $r3;
    }

    public static final java.lang.Character reduceRightIndexedOrNull(char[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        char[] $r1;
        int $i0, $i1;
        char $c2, $c3;
        java.lang.Integer $r2;
        java.lang.Character $r3, $r4;
        java.lang.Object $r5;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $c2 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $c3 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r3 = (java.lang.Character) $r5;

        $c2 = virtualinvoke $r3.<java.lang.Character: char charValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r3;
    }

    public static final java.lang.Double reduceRightIndexedOrNull(double[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        double[] $r1;
        int $i0, $i1;
        double $d0, $d1;
        java.lang.Integer $r2;
        java.lang.Double $r3, $r4;
        java.lang.Object $r5;
        java.lang.Number $r6;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $d0 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $d1 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r6 = (java.lang.Number) $r5;

        $d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r3;
    }

    public static final java.lang.Float reduceRightIndexedOrNull(float[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        float[] $r1;
        int $i0, $i1;
        float $f0, $f1;
        java.lang.Integer $r2;
        java.lang.Float $r3, $r4;
        java.lang.Object $r5;
        java.lang.Number $r6;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $f0 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $f1 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r6 = (java.lang.Number) $r5;

        $f0 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r3;
    }

    public static final java.lang.Integer reduceRightIndexedOrNull(int[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2, $r3, $r4;
        java.lang.Object $r5;
        java.lang.Number $r6;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $i0 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i2 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r6 = (java.lang.Number) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;
    }

    public static final java.lang.Long reduceRightIndexedOrNull(long[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        long[] $r1;
        int $i0, $i1;
        long $l2, $l3;
        java.lang.Integer $r2;
        java.lang.Long $r3, $r4;
        java.lang.Object $r5;
        java.lang.Number $r6;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $l2 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $l3 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r6 = (java.lang.Number) $r5;

        $l2 = virtualinvoke $r6.<java.lang.Number: long longValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        return $r3;
    }

    public static final java.lang.Object reduceRightIndexedOrNull(java.lang.Object[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.lang.Object $r1, $r3;
        java.lang.Object[] $r2;
        int $i0, $i1;
        java.lang.Integer $r4;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r2);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $r3 = $r2[$i0];

     label2:
        if $i1 < 0 goto label3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1 = $r2[$i1];

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r1, $r3);

        $i1 = $i1 + -1;

        goto label2;

     label3:
        return $r3;
    }

    public static final java.lang.Short reduceRightIndexedOrNull(short[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        short[] $r1;
        int $i0, $i1;
        short $s2, $s3;
        java.lang.Integer $r2;
        java.lang.Short $r3, $r4;
        java.lang.Object $r5;
        java.lang.Number $r6;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $s2 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $s3 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r4);

        $r6 = (java.lang.Number) $r5;

        $s2 = virtualinvoke $r6.<java.lang.Number: short shortValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        return $r3;
    }

    public static final java.lang.Boolean reduceRightOrNull(boolean[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1;
        boolean[] $r1;
        boolean $z0, $z1;
        java.lang.Boolean $r2, $r3;
        java.lang.Object $r4;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $z0 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $z1 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r2 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;
    }

    public static final java.lang.Byte reduceRightOrNull(byte[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2, $b3;
        java.lang.Byte $r2, $r3;
        java.lang.Object $r4;
        java.lang.Number $r5;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $b2 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $b3 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Number) $r4;

        $b2 = virtualinvoke $r5.<java.lang.Number: byte byteValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        return $r2;
    }

    public static final java.lang.Character reduceRightOrNull(char[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1;
        char[] $r1;
        char $c2, $c3;
        java.lang.Character $r2, $r3;
        java.lang.Object $r4;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $c2 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $c3 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r2 = (java.lang.Character) $r4;

        $c2 = virtualinvoke $r2.<java.lang.Character: char charValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        return $r2;
    }

    public static final java.lang.Double reduceRightOrNull(double[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        double $d0, $d1;
        double[] $r1;
        int $i0, $i1;
        java.lang.Double $r2, $r3;
        java.lang.Object $r4;
        java.lang.Number $r5;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $d1 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $d0 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Number) $r4;

        $d1 = virtualinvoke $r5.<java.lang.Number: double doubleValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        return $r2;
    }

    public static final java.lang.Float reduceRightOrNull(float[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1;
        float[] $r1;
        float $f0, $f1;
        java.lang.Float $r2, $r3;
        java.lang.Object $r4;
        java.lang.Number $r5;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $f0 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $f1 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Number) $r4;

        $f0 = virtualinvoke $r5.<java.lang.Number: float floatValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r2;
    }

    public static final java.lang.Integer reduceRightOrNull(int[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1, $i2;
        int[] $r1;
        java.lang.Integer $r2, $r3;
        java.lang.Object $r4;
        java.lang.Number $r5;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $i2 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $i0 = $i1 + -1;

        $i1 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Number) $r4;

        $i2 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $i1 = $i0;

        goto label2;

     label3:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r2;
    }

    public static final java.lang.Long reduceRightOrNull(long[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        long $l0, $l3;
        long[] $r1;
        int $i1, $i2;
        java.lang.Long $r2, $r3;
        java.lang.Object $r4;
        java.lang.Number $r5;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

        if $i1 >= 0 goto label1;

        return null;

     label1:
        $i2 = $i1 + -1;

        $l3 = $r1[$i1];

     label2:
        if $i2 < 0 goto label3;

        $l0 = $r1[$i2];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Number) $r4;

        $l3 = virtualinvoke $r5.<java.lang.Number: long longValue()>();

        $i2 = $i2 + -1;

        goto label2;

     label3:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        return $r2;
    }

    public static final java.lang.Object reduceRightOrNull(java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1;
        java.lang.Object[] $r1;
        java.lang.Object $r2, $r3;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $r2 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $r3 = $r1[$i1];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r3, $r2);

        $i1 = $i1 + -1;

        goto label2;

     label3:
        return $r2;
    }

    public static final java.lang.Short reduceRightOrNull(short[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int $i0, $i1;
        short[] $r1;
        short $s2, $s3;
        java.lang.Short $r2, $r3;
        java.lang.Object $r4;
        java.lang.Number $r5;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = $i0 + -1;

        $s2 = $r1[$i0];

     label2:
        if $i1 < 0 goto label3;

        $s3 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = (java.lang.Number) $r4;

        $s2 = virtualinvoke $r5.<java.lang.Number: short shortValue()>();

        $i1 = $i1 + -1;

        goto label2;

     label3:
        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        return $r2;
    }

    public static final java.lang.Object[] requireNoNulls(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r0[$i1];

        if $r1 == null goto label2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null element found in ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label3:
        return $r0;
    }

    public static final void reverse(byte[])
    {
        byte[] $r0;
        byte $b0, $b3;
        int $i1, $i2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        boolean $z0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i1 = $i1 >> 1;

        $i1 = $i1 + -1;

        if $i1 >= 0 goto label1;

        return;

     label1:
        $i2 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

        $r1 = new kotlin.ranges.IntRange;

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label2:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i1 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $b3 = $r0[$i1];

        $b0 = $r0[$i2];

        $r0[$i1] = $b0;

        $r0[$i2] = $b3;

        $i2 = $i2 + -1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(byte[], int, int)
    {
        byte[] $r0;
        byte $b0, $b4;
        int $i1, $i2, $i3;
        kotlin.collections.AbstractList$Companion $r1;

        $r0 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i3 = lengthof $r0;

        virtualinvoke $r1.<kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)>($i1, $i2, $i3);

        $i3 = $i1 + $i2;

        $i3 = $i3 / 2;

        if $i1 != $i3 goto label1;

        return;

     label1:
        $i2 = $i2 + -1;

     label2:
        if $i1 >= $i3 goto label3;

        $b4 = $r0[$i1];

        $b0 = $r0[$i2];

        $r0[$i1] = $b0;

        $r0[$i2] = $b4;

        $i2 = $i2 + -1;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(char[])
    {
        char[] $r0;
        char $c0, $c3;
        int $i1, $i2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        boolean $z0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i1 = $i1 >> 1;

        $i1 = $i1 + -1;

        if $i1 >= 0 goto label1;

        return;

     label1:
        $i2 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

        $r1 = new kotlin.ranges.IntRange;

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label2:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i1 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $c3 = $r0[$i1];

        $c0 = $r0[$i2];

        $r0[$i1] = $c0;

        $r0[$i2] = $c3;

        $i2 = $i2 + -1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(char[], int, int)
    {
        char[] $r0;
        char $c0, $c4;
        int $i1, $i2, $i3;
        kotlin.collections.AbstractList$Companion $r1;

        $r0 := @parameter0: char[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i3 = lengthof $r0;

        virtualinvoke $r1.<kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)>($i1, $i2, $i3);

        $i3 = $i1 + $i2;

        $i3 = $i3 / 2;

        if $i1 != $i3 goto label1;

        return;

     label1:
        $i2 = $i2 + -1;

     label2:
        if $i1 >= $i3 goto label3;

        $c4 = $r0[$i1];

        $c0 = $r0[$i2];

        $r0[$i1] = $c0;

        $r0[$i2] = $c4;

        $i2 = $i2 + -1;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(double[])
    {
        double[] $r0;
        double $d0, $d1;
        int $i0, $i1;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        boolean $z0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i0 = $i0 >> 1;

        $i0 = $i0 + -1;

        if $i0 >= 0 goto label1;

        return;

     label1:
        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

        $r1 = new kotlin.ranges.IntRange;

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label2:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $d1 = $r0[$i0];

        $d0 = $r0[$i1];

        $r0[$i0] = $d0;

        $r0[$i1] = $d1;

        $i1 = $i1 + -1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(double[], int, int)
    {
        double[] $r0;
        double $d0, $d1;
        int $i0, $i1, $i2;
        kotlin.collections.AbstractList$Companion $r1;

        $r0 := @parameter0: double[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i2 = lengthof $r0;

        virtualinvoke $r1.<kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)>($i0, $i1, $i2);

        $i2 = $i0 + $i1;

        $i2 = $i2 / 2;

        if $i0 != $i2 goto label1;

        return;

     label1:
        $i1 = $i1 + -1;

     label2:
        if $i0 >= $i2 goto label3;

        $d1 = $r0[$i0];

        $d0 = $r0[$i1];

        $r0[$i0] = $d0;

        $r0[$i1] = $d1;

        $i1 = $i1 + -1;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(float[])
    {
        float[] $r0;
        float $f0, $f1;
        int $i0, $i1;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        boolean $z0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i0 = $i0 >> 1;

        $i0 = $i0 + -1;

        if $i0 >= 0 goto label1;

        return;

     label1:
        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

        $r1 = new kotlin.ranges.IntRange;

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label2:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $f1 = $r0[$i0];

        $f0 = $r0[$i1];

        $r0[$i0] = $f0;

        $r0[$i1] = $f1;

        $i1 = $i1 + -1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(float[], int, int)
    {
        float[] $r0;
        float $f0, $f1;
        int $i0, $i1, $i2;
        kotlin.collections.AbstractList$Companion $r1;

        $r0 := @parameter0: float[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i2 = lengthof $r0;

        virtualinvoke $r1.<kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)>($i0, $i1, $i2);

        $i2 = $i0 + $i1;

        $i2 = $i2 / 2;

        if $i0 != $i2 goto label1;

        return;

     label1:
        $i1 = $i1 + -1;

     label2:
        if $i0 >= $i2 goto label3;

        $f1 = $r0[$i0];

        $f0 = $r0[$i1];

        $r0[$i0] = $f0;

        $r0[$i1] = $f1;

        $i1 = $i1 + -1;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(int[])
    {
        int[] $r0;
        int $i0, $i1, $i2, $i3;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        boolean $z0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i1 = $i1 >> 1;

        $i0 = $i1 + -1;

        if $i0 >= 0 goto label1;

        return;

     label1:
        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

        $r1 = new kotlin.ranges.IntRange;

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label2:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $i3 = $r0[$i2];

        $i0 = $r0[$i1];

        $r0[$i2] = $i0;

        $r0[$i1] = $i3;

        $i1 = $i1 + -1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(int[], int, int)
    {
        int[] $r0;
        int $i0, $i1, $i2, $i3, $i4;
        kotlin.collections.AbstractList$Companion $r1;

        $r0 := @parameter0: int[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i2 = lengthof $r0;

        virtualinvoke $r1.<kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)>($i1, $i0, $i2);

        $i2 = $i1 + $i0;

        $i2 = $i2 / 2;

        if $i1 != $i2 goto label1;

        return;

     label1:
        $i3 = $i0 + -1;

     label2:
        if $i1 >= $i2 goto label3;

        $i4 = $r0[$i1];

        $i0 = $r0[$i3];

        $r0[$i1] = $i0;

        $r0[$i3] = $i4;

        $i3 = $i3 + -1;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(long[])
    {
        long[] $r0;
        long $l0, $l3;
        int $i1, $i2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        boolean $z0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i1 = $i1 >> 1;

        $i1 = $i1 + -1;

        if $i1 >= 0 goto label1;

        return;

     label1:
        $i2 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

        $r1 = new kotlin.ranges.IntRange;

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label2:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i1 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $l3 = $r0[$i1];

        $l0 = $r0[$i2];

        $r0[$i1] = $l0;

        $r0[$i2] = $l3;

        $i2 = $i2 + -1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(long[], int, int)
    {
        long[] $r0;
        long $l0, $l4;
        int $i1, $i2, $i3;
        kotlin.collections.AbstractList$Companion $r1;

        $r0 := @parameter0: long[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i3 = lengthof $r0;

        virtualinvoke $r1.<kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)>($i1, $i2, $i3);

        $i3 = $i1 + $i2;

        $i3 = $i3 / 2;

        if $i1 != $i3 goto label1;

        return;

     label1:
        $i2 = $i2 + -1;

     label2:
        if $i1 >= $i3 goto label3;

        $l4 = $r0[$i1];

        $l0 = $r0[$i2];

        $r0[$i1] = $l0;

        $r0[$i2] = $l4;

        $i2 = $i2 + -1;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i0 = $i0 >> 1;

        $i0 = $i0 + -1;

        if $i0 >= 0 goto label1;

        return;

     label1:
        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        $r2 = new kotlin.ranges.IntRange;

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label2:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $r4 = $r0[$i0];

        $r1 = $r0[$i1];

        $r0[$i0] = $r1;

        $r0[$i1] = $r4;

        $i1 = $i1 + -1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(java.lang.Object[], int, int)
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1, $r3;
        int $i0, $i1, $i2;
        kotlin.collections.AbstractList$Companion $r2;

        $r0 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i2 = lengthof $r0;

        virtualinvoke $r2.<kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)>($i0, $i1, $i2);

        $i2 = $i0 + $i1;

        $i2 = $i2 / 2;

        if $i0 != $i2 goto label1;

        return;

     label1:
        $i1 = $i1 + -1;

     label2:
        if $i0 >= $i2 goto label3;

        $r3 = $r0[$i0];

        $r1 = $r0[$i1];

        $r0[$i0] = $r1;

        $r0[$i1] = $r3;

        $i1 = $i1 + -1;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(short[])
    {
        short[] $r0;
        short $s0, $s3;
        int $i1, $i2;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;
        boolean $z0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i1 = $i1 >> 1;

        $i1 = $i1 + -1;

        if $i1 >= 0 goto label1;

        return;

     label1:
        $i2 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

        $r1 = new kotlin.ranges.IntRange;

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label2:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i1 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $s3 = $r0[$i1];

        $s0 = $r0[$i2];

        $r0[$i1] = $s0;

        $r0[$i2] = $s3;

        $i2 = $i2 + -1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(short[], int, int)
    {
        short[] $r0;
        short $s0, $s4;
        int $i1, $i2, $i3;
        kotlin.collections.AbstractList$Companion $r1;

        $r0 := @parameter0: short[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i3 = lengthof $r0;

        virtualinvoke $r1.<kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)>($i1, $i2, $i3);

        $i3 = $i1 + $i2;

        $i3 = $i3 / 2;

        if $i1 != $i3 goto label1;

        return;

     label1:
        $i2 = $i2 + -1;

     label2:
        if $i1 >= $i3 goto label3;

        $s4 = $r0[$i1];

        $s0 = $r0[$i2];

        $r0[$i1] = $s0;

        $r0[$i2] = $s4;

        $i2 = $i2 + -1;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(boolean[])
    {
        boolean[] $r0;
        boolean $z0, $z1;
        int $i0, $i1;
        kotlin.ranges.IntRange $r1;
        kotlin.collections.IntIterator $r2;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $i0 = $i0 >> 1;

        $i0 = $i0 + -1;

        if $i0 >= 0 goto label1;

        return;

     label1:
        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r0);

        $r1 = new kotlin.ranges.IntRange;

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label2:
        $z0 = virtualinvoke $r2.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r2.<kotlin.collections.IntIterator: int nextInt()>();

        $z1 = $r0[$i0];

        $z0 = $r0[$i1];

        $r0[$i0] = $z0;

        $r0[$i1] = $z1;

        $i1 = $i1 + -1;

        goto label2;

     label3:
        return;
    }

    public static final void reverse(boolean[], int, int)
    {
        boolean[] $r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        kotlin.collections.AbstractList$Companion $r1;

        $r0 := @parameter0: boolean[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion>;

        $i2 = lengthof $r0;

        virtualinvoke $r1.<kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)>($i0, $i1, $i2);

        $i2 = $i0 + $i1;

        $i2 = $i2 / 2;

        if $i0 != $i2 goto label1;

        return;

     label1:
        $i1 = $i1 + -1;

     label2:
        if $i0 >= $i2 goto label3;

        $z1 = $r0[$i0];

        $z0 = $r0[$i1];

        $r0[$i0] = $z0;

        $r0[$i1] = $z1;

        $i1 = $i1 + -1;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }

    public static final java.util.List reversed(byte[])
    {
        byte[] $r0;
        int $i0;
        boolean $z0;
        java.util.List $r1;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(byte[])>($r0);

        staticinvoke <kotlin.collections.CollectionsKt: void reverse(java.util.List)>($r1);

        return $r1;
    }

    public static final java.util.List reversed(char[])
    {
        char[] $r0;
        int $i0;
        boolean $z0;
        java.util.List $r1;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(char[])>($r0);

        staticinvoke <kotlin.collections.CollectionsKt: void reverse(java.util.List)>($r1);

        return $r1;
    }

    public static final java.util.List reversed(double[])
    {
        double[] $r0;
        int $i0;
        boolean $z0;
        java.util.List $r1;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(double[])>($r0);

        staticinvoke <kotlin.collections.CollectionsKt: void reverse(java.util.List)>($r1);

        return $r1;
    }

    public static final java.util.List reversed(float[])
    {
        float[] $r0;
        int $i0;
        boolean $z0;
        java.util.List $r1;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(float[])>($r0);

        staticinvoke <kotlin.collections.CollectionsKt: void reverse(java.util.List)>($r1);

        return $r1;
    }

    public static final java.util.List reversed(int[])
    {
        int[] $r0;
        int $i0;
        boolean $z0;
        java.util.List $r1;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(int[])>($r0);

        staticinvoke <kotlin.collections.CollectionsKt: void reverse(java.util.List)>($r1);

        return $r1;
    }

    public static final java.util.List reversed(long[])
    {
        long[] $r0;
        int $i0;
        boolean $z0;
        java.util.List $r1;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(long[])>($r0);

        staticinvoke <kotlin.collections.CollectionsKt: void reverse(java.util.List)>($r1);

        return $r1;
    }

    public static final java.util.List reversed(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;
        boolean $z0;
        java.util.List $r1;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(java.lang.Object[])>($r0);

        staticinvoke <kotlin.collections.CollectionsKt: void reverse(java.util.List)>($r1);

        return $r1;
    }

    public static final java.util.List reversed(short[])
    {
        short[] $r0;
        int $i0;
        boolean $z0;
        java.util.List $r1;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(short[])>($r0);

        staticinvoke <kotlin.collections.CollectionsKt: void reverse(java.util.List)>($r1);

        return $r1;
    }

    public static final java.util.List reversed(boolean[])
    {
        boolean[] $r0;
        int $i0;
        boolean $z0;
        java.util.List $r1;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(boolean[])>($r0);

        staticinvoke <kotlin.collections.CollectionsKt: void reverse(java.util.List)>($r1);

        return $r1;
    }

    public static final byte[] reversedArray(byte[])
    {
        byte[] $r0, $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        byte $b3;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r1 = newarray (byte)[$i0];

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

        $r2 = new kotlin.ranges.IntRange;

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i2 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $i1 - $i2;

        $b3 = $r0[$i2];

        $r1[$i0] = $b3;

        goto label4;

     label5:
        return $r1;
    }

    public static final char[] reversedArray(char[])
    {
        char[] $r0, $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        char $c3;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r1 = newarray (char)[$i0];

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

        $r2 = new kotlin.ranges.IntRange;

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i2 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $i1 - $i2;

        $c3 = $r0[$i2];

        $r1[$i0] = $c3;

        goto label4;

     label5:
        return $r1;
    }

    public static final double[] reversedArray(double[])
    {
        double[] $r0, $r1;
        int $i0, $i1, $i2;
        double $d0;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r1 = newarray (double)[$i0];

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

        $r2 = new kotlin.ranges.IntRange;

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i2 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $i1 - $i2;

        $d0 = $r0[$i2];

        $r1[$i0] = $d0;

        goto label4;

     label5:
        return $r1;
    }

    public static final float[] reversedArray(float[])
    {
        float[] $r0, $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        float $f0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r1 = newarray (float)[$i0];

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

        $r2 = new kotlin.ranges.IntRange;

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i2 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $i1 - $i2;

        $f0 = $r0[$i2];

        $r1[$i0] = $f0;

        goto label4;

     label5:
        return $r1;
    }

    public static final int[] reversedArray(int[])
    {
        int[] $r0, $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

        $r2 = new kotlin.ranges.IntRange;

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i2 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $i1 - $i2;

        $i2 = $r0[$i2];

        $r1[$i0] = $i2;

        goto label4;

     label5:
        return $r1;
    }

    public static final long[] reversedArray(long[])
    {
        long[] $r0, $r1;
        int $i0, $i2, $i3;
        long $l1;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r1 = newarray (long)[$i0];

        $i2 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

        $r2 = new kotlin.ranges.IntRange;

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i2);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i3 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $i2 - $i3;

        $l1 = $r0[$i3];

        $r1[$i0] = $l1;

        goto label4;

     label5:
        return $r1;
    }

    public static final java.lang.Object[] reversedArray(java.lang.Object[])
    {
        java.lang.Object[] $r0, $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] arrayOfNulls(java.lang.Object[],int)>($r0, $i0);

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

        $r2 = new kotlin.ranges.IntRange;

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i2 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $i1 - $i2;

        $r4 = $r0[$i2];

        $r1[$i0] = $r4;

        goto label4;

     label5:
        return $r1;
    }

    public static final short[] reversedArray(short[])
    {
        short[] $r0, $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;
        short $s3;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r1 = newarray (short)[$i0];

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

        $r2 = new kotlin.ranges.IntRange;

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i2 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $i1 - $i2;

        $s3 = $r0[$i2];

        $r1[$i0] = $s3;

        goto label4;

     label5:
        return $r1;
    }

    public static final boolean[] reversedArray(boolean[])
    {
        boolean[] $r0, $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        kotlin.ranges.IntRange $r2;
        kotlin.collections.IntIterator $r3;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r1 = newarray (boolean)[$i0];

        $i1 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r0);

        $r2 = new kotlin.ranges.IntRange;

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i1);

        $r3 = virtualinvoke $r2.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

     label4:
        $z0 = virtualinvoke $r3.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i2 = virtualinvoke $r3.<kotlin.collections.IntIterator: int nextInt()>();

        $i0 = $i1 - $i2;

        $z0 = $r0[$i2];

        $r1[$i0] = $z0;

        goto label4;

     label5:
        return $r1;
    }

    private static final java.util.List runningFold(byte[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        byte[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        byte $b2;
        java.lang.Byte $r5;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $b2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFold(char[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        char[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        char $c2;
        java.lang.Character $r5;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $c2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFold(double[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        double[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        double $d0;
        java.lang.Double $r5;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $d0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFold(float[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        float[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        float $f0;
        java.lang.Float $r5;

        $r1 := @parameter0: float[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $f0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFold(int[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1, $i2;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        java.lang.Integer $r5;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $i2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFold(long[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        long[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        long $l2;
        java.lang.Long $r5;

        $r1 := @parameter0: long[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $l2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    public static final java.util.List runningFold(java.lang.Object[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2, $r5;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r6;

        $r1 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r6 = new java.util.ArrayList;

        $r4 = r6;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = $r1[$i1];

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r5;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFold(short[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        short[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        short $s2;
        java.lang.Short $r5;

        $r1 := @parameter0: short[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $s2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFold(boolean[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        boolean[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        java.lang.Boolean $r5;

        $r1 := @parameter0: boolean[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $z0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFoldIndexed(byte[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        byte[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        byte $b2;
        java.lang.Byte $r6;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $b2 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFoldIndexed(char[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        char[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        char $c2;
        java.lang.Character $r6;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $c2 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFoldIndexed(double[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        double[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        double $d0;
        java.lang.Double $r6;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $d0 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFoldIndexed(float[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        float[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        float $f0;
        java.lang.Float $r6;

        $r1 := @parameter0: float[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $f0 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFoldIndexed(int[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        int[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1, $i2;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5, $r6;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i2 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFoldIndexed(long[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        long[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        long $l2;
        java.lang.Long $r6;

        $r1 := @parameter0: long[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $l2 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    public static final java.util.List runningFoldIndexed(java.lang.Object[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.lang.Object $r1, $r3;
        java.lang.Object[] $r2;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r4;
        java.util.ArrayList $r5, r7;
        java.lang.Integer $r6;

        $r2 := @parameter0: java.lang.Object[];

        $r3 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r2;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r3);

        return $r4;

     label3:
        r7 = new java.util.ArrayList;

        $r5 = r7;

        $i0 = lengthof $r2;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i0 = lengthof $r2;

     label4:
        if $i1 >= $i0 goto label5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1 = $r2[$i1];

        $r1 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r3, $r1);

        $r3 = $r1;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r4 = (java.util.List) $r5;

        return $r4;
    }

    private static final java.util.List runningFoldIndexed(short[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        short[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        short $s2;
        java.lang.Short $r6;

        $r1 := @parameter0: short[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $s2 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningFoldIndexed(boolean[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        boolean[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        java.lang.Boolean $r6;

        $r1 := @parameter0: boolean[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z0 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List runningReduce(byte[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        byte[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r2;
        byte $b2, $b3;
        java.util.ArrayList $r3, r8;
        java.lang.Byte $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $b2 = $r1[0];

        r8 = new java.util.ArrayList;

        $r3 = r8;

        $i0 = lengthof $r1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $b2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $b3 = virtualinvoke $r7.<java.lang.Number: byte byteValue()>();

        $b2 = $b3;

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    private static final java.util.List runningReduce(char[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        char[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r2;
        char $c2, $c3;
        java.util.ArrayList $r3, r7;
        java.lang.Character $r4, $r5;
        java.lang.Object $r6;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $c2 = $r1[0];

        r7 = new java.util.ArrayList;

        $r3 = r7;

        $i0 = lengthof $r1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $c2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r4 = (java.lang.Character) $r6;

        $c3 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        $c2 = $c3;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    private static final java.util.List runningReduce(double[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.util.ArrayList $r1, r8;
        double[] $r2;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        double $d0, $d1;
        java.lang.Double $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;

        $r2 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r2;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label3:
        $d0 = $r2[0];

        r8 = new java.util.ArrayList;

        $r1 = r8;

        $i0 = lengthof $r2;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r2;

     label4:
        if $i1 >= $i0 goto label5;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d0 = $r2[$i1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $d1 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        $d0 = $d1;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r1;

        return $r3;
    }

    private static final java.util.List runningReduce(float[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        float[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r2;
        float $f0, $f1;
        java.util.ArrayList $r3, r8;
        java.lang.Float $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $f0 = $r1[0];

        r8 = new java.util.ArrayList;

        $r3 = r8;

        $i0 = lengthof $r1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $f0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $f1 = virtualinvoke $r7.<java.lang.Number: float floatValue()>();

        $f0 = $f1;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    private static final java.util.List runningReduce(int[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.util.List $r2;
        java.util.ArrayList $r3, r8;
        java.lang.Integer $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $i0 = $r1[0];

        r8 = new java.util.ArrayList;

        $r3 = r8;

        $i2 = lengthof $r1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i2 = lengthof $r1;

     label4:
        if $i1 >= $i2 goto label5;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $i3 = virtualinvoke $r7.<java.lang.Number: int intValue()>();

        $i0 = $i3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    private static final java.util.List runningReduce(long[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.util.ArrayList $r1, r8;
        long[] $r2;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        long $l2, $l3;
        java.lang.Long $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;

        $r2 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r2;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label3:
        $l2 = $r2[0];

        r8 = new java.util.ArrayList;

        $r1 = r8;

        $i0 = lengthof $r2;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r2;

     label4:
        if $i1 >= $i0 goto label5;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $l2 = $r2[$i1];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $l3 = virtualinvoke $r7.<java.lang.Number: long longValue()>();

        $l2 = $l3;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r1;

        return $r3;
    }

    public static final java.util.List runningReduce(java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.Object $r1, $r4;
        java.lang.Object[] $r2;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r5, r6;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r2;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label3:
        $r4 = $r2[0];

        r6 = new java.util.ArrayList;

        $r5 = r6;

        $i0 = lengthof $r2;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r2;

     label4:
        if $i1 >= $i0 goto label5;

        $r1 = $r2[$i1];

        $r1 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r1);

        $r4 = $r1;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r5;

        return $r3;
    }

    private static final java.util.List runningReduce(short[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        short[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r2;
        short $s2, $s3;
        java.util.ArrayList $r3, r8;
        java.lang.Short $r4, $r5;
        java.lang.Object $r6;
        java.lang.Number $r7;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $s2 = $r1[0];

        r8 = new java.util.ArrayList;

        $r3 = r8;

        $i0 = lengthof $r1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $s2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = (java.lang.Number) $r6;

        $s3 = virtualinvoke $r7.<java.lang.Number: short shortValue()>();

        $s2 = $s3;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    private static final java.util.List runningReduce(boolean[], kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        boolean[] $r1;
        int $i0, $i1;
        boolean $z0, $z1;
        java.util.List $r2;
        java.util.ArrayList $r3, r7;
        java.lang.Boolean $r4, $r5;
        java.lang.Object $r6;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $z0 = $r1[0];

        r7 = new java.util.ArrayList;

        $r3 = r7;

        $i0 = lengthof $r1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r4 = (java.lang.Boolean) $r6;

        $z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $z0 = $z1;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    private static final java.util.List runningReduceIndexed(byte[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        byte[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r2;
        byte $b2, $b3;
        java.util.ArrayList $r3, r9;
        java.lang.Byte $r4, $r6;
        java.lang.Integer $r5;
        java.lang.Object $r7;
        java.lang.Number $r8;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $b2 = $r1[0];

        r9 = new java.util.ArrayList;

        $r3 = r9;

        $i0 = lengthof $r1;

        specialinvoke r9.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $b2 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r4, $r6);

        $r8 = (java.lang.Number) $r7;

        $b3 = virtualinvoke $r8.<java.lang.Number: byte byteValue()>();

        $b2 = $b3;

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    private static final java.util.List runningReduceIndexed(char[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        char[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r2;
        char $c2, $c3;
        java.util.ArrayList $r3, r8;
        java.lang.Character $r4, $r6;
        java.lang.Integer $r5;
        java.lang.Object $r7;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $c2 = $r1[0];

        r8 = new java.util.ArrayList;

        $r3 = r8;

        $i0 = lengthof $r1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $c2 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r4, $r6);

        $r4 = (java.lang.Character) $r7;

        $c3 = virtualinvoke $r4.<java.lang.Character: char charValue()>();

        $c2 = $c3;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    private static final java.util.List runningReduceIndexed(double[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.util.ArrayList $r1, r9;
        double $d0, $d1;
        double[] $r2;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.lang.Double $r4, $r6;
        java.lang.Integer $r5;
        java.lang.Object $r7;
        java.lang.Number $r8;

        $r2 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r2;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label3:
        $d0 = $r2[0];

        r9 = new java.util.ArrayList;

        $r1 = r9;

        $i0 = lengthof $r2;

        specialinvoke r9.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r2;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d0 = $r2[$i1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r4, $r6);

        $r8 = (java.lang.Number) $r7;

        $d1 = virtualinvoke $r8.<java.lang.Number: double doubleValue()>();

        $d0 = $d1;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r1;

        return $r3;
    }

    private static final java.util.List runningReduceIndexed(float[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        float[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r2;
        float $f0, $f1;
        java.util.ArrayList $r3, r9;
        java.lang.Float $r4, $r6;
        java.lang.Integer $r5;
        java.lang.Object $r7;
        java.lang.Number $r8;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $f0 = $r1[0];

        r9 = new java.util.ArrayList;

        $r3 = r9;

        $i0 = lengthof $r1;

        specialinvoke r9.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $f0 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r4, $r6);

        $r8 = (java.lang.Number) $r7;

        $f1 = virtualinvoke $r8.<java.lang.Number: float floatValue()>();

        $f0 = $f1;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    private static final java.util.List runningReduceIndexed(int[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.util.List $r2;
        java.util.ArrayList $r3, r9;
        java.lang.Integer $r4, $r5, $r6;
        java.lang.Object $r7;
        java.lang.Number $r8;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $i0 = $r1[0];

        r9 = new java.util.ArrayList;

        $r3 = r9;

        $i2 = lengthof $r1;

        specialinvoke r9.<java.util.ArrayList: void <init>(int)>($i2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i2 = lengthof $r1;

     label4:
        if $i1 >= $i2 goto label5;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6);

        $r8 = (java.lang.Number) $r7;

        $i3 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        $i0 = $i3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    private static final java.util.List runningReduceIndexed(long[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.util.ArrayList $r1, r9;
        long $l0, $l3;
        long[] $r2;
        int $i1, $i2;
        boolean $z0;
        java.util.List $r3;
        java.lang.Long $r4, $r6;
        java.lang.Integer $r5;
        java.lang.Object $r7;
        java.lang.Number $r8;

        $r2 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i1 = lengthof $r2;

        $i2 = 1;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label3:
        $l0 = $r2[0];

        r9 = new java.util.ArrayList;

        $r1 = r9;

        $i1 = lengthof $r2;

        specialinvoke r9.<java.util.ArrayList: void <init>(int)>($i1);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = lengthof $r2;

     label4:
        if $i2 >= $i1 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $l0 = $r2[$i2];

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r4, $r6);

        $r8 = (java.lang.Number) $r7;

        $l3 = virtualinvoke $r8.<java.lang.Number: long longValue()>();

        $l0 = $l3;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i2 = $i2 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r1;

        return $r3;
    }

    public static final java.util.List runningReduceIndexed(java.lang.Object[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.lang.Object $r1, $r4;
        java.lang.Object[] $r2;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r5, r7;
        java.lang.Integer $r6;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r2;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label3:
        $r4 = $r2[0];

        r7 = new java.util.ArrayList;

        $r5 = r7;

        $i0 = lengthof $r2;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r2;

     label4:
        if $i1 >= $i0 goto label5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1 = $r2[$i1];

        $r1 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r4, $r1);

        $r4 = $r1;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r5;

        return $r3;
    }

    private static final java.util.List runningReduceIndexed(short[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        short[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r2;
        short $s2, $s3;
        java.util.ArrayList $r3, r9;
        java.lang.Short $r4, $r6;
        java.lang.Integer $r5;
        java.lang.Object $r7;
        java.lang.Number $r8;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $s2 = $r1[0];

        r9 = new java.util.ArrayList;

        $r3 = r9;

        $i0 = lengthof $r1;

        specialinvoke r9.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $s2 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r4, $r6);

        $r8 = (java.lang.Number) $r7;

        $s3 = virtualinvoke $r8.<java.lang.Number: short shortValue()>();

        $s2 = $s3;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    private static final java.util.List runningReduceIndexed(boolean[], kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        boolean[] $r1;
        int $i0, $i1;
        boolean $z0, $z1;
        java.util.List $r2;
        java.util.ArrayList $r3, r8;
        java.lang.Boolean $r4, $r6;
        java.lang.Integer $r5;
        java.lang.Object $r7;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $z0 = $r1[0];

        r8 = new java.util.ArrayList;

        $r3 = r8;

        $i0 = lengthof $r1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z0 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r4, $r6);

        $r4 = (java.lang.Boolean) $r7;

        $z1 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $z0 = $z1;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r2 = (java.util.List) $r3;

        return $r2;
    }

    private static final java.util.List scan(byte[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        byte[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        byte $b2;
        java.lang.Byte $r5;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $b2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scan(char[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        char[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        char $c2;
        java.lang.Character $r5;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $c2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scan(double[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        double[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        double $d0;
        java.lang.Double $r5;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $d0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scan(float[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        float[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        float $f0;
        java.lang.Float $r5;

        $r1 := @parameter0: float[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $f0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scan(int[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        int[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1, $i2;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        java.lang.Integer $r5;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $i2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scan(long[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        long[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        long $l2;
        java.lang.Long $r5;

        $r1 := @parameter0: long[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $l2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    public static final java.util.List scan(java.lang.Object[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2, $r5;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r6;

        $r1 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r6 = new java.util.ArrayList;

        $r4 = r6;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = $r1[$i1];

        $r5 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r5;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scan(short[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        short[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        short $s2;
        java.lang.Short $r5;

        $r1 := @parameter0: short[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $s2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scan(boolean[], java.lang.Object, kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 $r0;
        boolean[] $r1;
        java.lang.Object $r2, $r6;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r7;
        java.lang.Boolean $r5;

        $r1 := @parameter0: boolean[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r7 = new java.util.ArrayList;

        $r4 = r7;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $z0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6 = interfaceinvoke $r0.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r2 = $r6;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scanIndexed(byte[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        byte[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        byte $b2;
        java.lang.Byte $r6;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $b2 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scanIndexed(char[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        char[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        char $c2;
        java.lang.Character $r6;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $c2 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scanIndexed(double[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        double[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        double $d0;
        java.lang.Double $r6;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $d0 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scanIndexed(float[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        float[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        float $f0;
        java.lang.Float $r6;

        $r1 := @parameter0: float[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $f0 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scanIndexed(int[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        int[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1, $i2;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5, $r6;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $i2 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scanIndexed(long[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        long[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        long $l2;
        java.lang.Long $r6;

        $r1 := @parameter0: long[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $l2 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    public static final java.util.List scanIndexed(java.lang.Object[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        java.lang.Object $r1, $r3;
        java.lang.Object[] $r2;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r4;
        java.util.ArrayList $r5, r7;
        java.lang.Integer $r6;

        $r2 := @parameter0: java.lang.Object[];

        $r3 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r2;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r3);

        return $r4;

     label3:
        r7 = new java.util.ArrayList;

        $r5 = r7;

        $i0 = lengthof $r2;

        $i0 = $i0 + 1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i0 = lengthof $r2;

     label4:
        if $i1 >= $i0 goto label5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1 = $r2[$i1];

        $r1 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r3, $r1);

        $r3 = $r1;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r4 = (java.util.List) $r5;

        return $r4;
    }

    private static final java.util.List scanIndexed(short[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        short[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        short $s2;
        java.lang.Short $r6;

        $r1 := @parameter0: short[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $s2 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    private static final java.util.List scanIndexed(boolean[], java.lang.Object, kotlin.jvm.functions.Function3)
    {
        kotlin.jvm.functions.Function3 $r0;
        boolean[] $r1;
        java.lang.Object $r2, $r7;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r3;
        java.util.ArrayList $r4, r8;
        java.lang.Integer $r5;
        java.lang.Boolean $r6;

        $r1 := @parameter0: boolean[];

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "operation");

        $i0 = lengthof $r1;

        $i1 = 0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r3;

     label3:
        r8 = new java.util.ArrayList;

        $r4 = r8;

        $i0 = lengthof $r1;

        $i0 = $i0 + 1;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = lengthof $r1;

     label4:
        if $i1 >= $i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z0 = $r1[$i1];

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r7 = interfaceinvoke $r0.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($r5, $r2, $r6);

        $r2 = $r7;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $r3 = (java.util.List) $r4;

        return $r3;
    }

    public static final void shuffle(byte[])
    {
        byte[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        staticinvoke <kotlin.collections.ArraysKt: void shuffle(byte[],kotlin.random.Random)>($r0, $r1);

        return;
    }

    public static final void shuffle(byte[], kotlin.random.Random)
    {
        byte[] $r0;
        kotlin.random.Random $r1;
        byte $b0, $b1;
        int $i2, $i3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i2 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r0);

     label1:
        if $i2 <= 0 goto label2;

        $i3 = $i2 + 1;

        $i3 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i3);

        $b0 = $r0[$i2];

        $b1 = $r0[$i3];

        $r0[$i2] = $b1;

        $r0[$i3] = $b0;

        $i2 = $i2 + -1;

        goto label1;

     label2:
        return;
    }

    public static final void shuffle(char[])
    {
        char[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        staticinvoke <kotlin.collections.ArraysKt: void shuffle(char[],kotlin.random.Random)>($r0, $r1);

        return;
    }

    public static final void shuffle(char[], kotlin.random.Random)
    {
        char[] $r0;
        kotlin.random.Random $r1;
        char $c0, $c1;
        int $i2, $i3;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i2 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r0);

     label1:
        if $i2 <= 0 goto label2;

        $i3 = $i2 + 1;

        $i3 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i3);

        $c0 = $r0[$i2];

        $c1 = $r0[$i3];

        $r0[$i2] = $c1;

        $r0[$i3] = $c0;

        $i2 = $i2 + -1;

        goto label1;

     label2:
        return;
    }

    public static final void shuffle(double[])
    {
        double[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        staticinvoke <kotlin.collections.ArraysKt: void shuffle(double[],kotlin.random.Random)>($r0, $r1);

        return;
    }

    public static final void shuffle(double[], kotlin.random.Random)
    {
        double[] $r0;
        kotlin.random.Random $r1;
        double $d0, $d1;
        int $i0, $i1;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r0);

     label1:
        if $i0 <= 0 goto label2;

        $i1 = $i0 + 1;

        $i1 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i1);

        $d0 = $r0[$i0];

        $d1 = $r0[$i1];

        $r0[$i0] = $d1;

        $r0[$i1] = $d0;

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }

    public static final void shuffle(float[])
    {
        float[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        staticinvoke <kotlin.collections.ArraysKt: void shuffle(float[],kotlin.random.Random)>($r0, $r1);

        return;
    }

    public static final void shuffle(float[], kotlin.random.Random)
    {
        float[] $r0;
        kotlin.random.Random $r1;
        float $f0, $f1;
        int $i0, $i1;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r0);

     label1:
        if $i0 <= 0 goto label2;

        $i1 = $i0 + 1;

        $i1 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i1);

        $f0 = $r0[$i0];

        $f1 = $r0[$i1];

        $r0[$i0] = $f1;

        $r0[$i1] = $f0;

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }

    public static final void shuffle(int[])
    {
        int[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        staticinvoke <kotlin.collections.ArraysKt: void shuffle(int[],kotlin.random.Random)>($r0, $r1);

        return;
    }

    public static final void shuffle(int[], kotlin.random.Random)
    {
        int[] $r0;
        kotlin.random.Random $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i2 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r0);

     label1:
        if $i2 <= 0 goto label2;

        $i0 = $i2 + 1;

        $i3 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i0);

        $i0 = $r0[$i2];

        $i1 = $r0[$i3];

        $r0[$i2] = $i1;

        $r0[$i3] = $i0;

        $i2 = $i2 + -1;

        goto label1;

     label2:
        return;
    }

    public static final void shuffle(long[])
    {
        long[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        staticinvoke <kotlin.collections.ArraysKt: void shuffle(long[],kotlin.random.Random)>($r0, $r1);

        return;
    }

    public static final void shuffle(long[], kotlin.random.Random)
    {
        long[] $r0;
        kotlin.random.Random $r1;
        long $l0, $l1;
        int $i2, $i3;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i2 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r0);

     label1:
        if $i2 <= 0 goto label2;

        $i3 = $i2 + 1;

        $i3 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i3);

        $l0 = $r0[$i2];

        $l1 = $r0[$i3];

        $r0[$i2] = $l1;

        $r0[$i3] = $l0;

        $i2 = $i2 + -1;

        goto label1;

     label2:
        return;
    }

    public static final void shuffle(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        staticinvoke <kotlin.collections.ArraysKt: void shuffle(java.lang.Object[],kotlin.random.Random)>($r0, $r1);

        return;
    }

    public static final void shuffle(java.lang.Object[], kotlin.random.Random)
    {
        java.lang.Object[] $r0;
        kotlin.random.Random $r1;
        java.lang.Object $r2, $r3;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r0);

     label1:
        if $i0 <= 0 goto label2;

        $i1 = $i0 + 1;

        $i1 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i1);

        $r2 = $r0[$i0];

        $r3 = $r0[$i1];

        $r0[$i0] = $r3;

        $r0[$i1] = $r2;

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }

    public static final void shuffle(short[])
    {
        short[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        staticinvoke <kotlin.collections.ArraysKt: void shuffle(short[],kotlin.random.Random)>($r0, $r1);

        return;
    }

    public static final void shuffle(short[], kotlin.random.Random)
    {
        short[] $r0;
        kotlin.random.Random $r1;
        short $s0, $s1;
        int $i2, $i3;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i2 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r0);

     label1:
        if $i2 <= 0 goto label2;

        $i3 = $i2 + 1;

        $i3 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i3);

        $s0 = $r0[$i2];

        $s1 = $r0[$i3];

        $r0[$i2] = $s1;

        $r0[$i3] = $s0;

        $i2 = $i2 + -1;

        goto label1;

     label2:
        return;
    }

    public static final void shuffle(boolean[])
    {
        boolean[] $r0;
        kotlin.random.Random$Default $r1;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <kotlin.random.Random: kotlin.random.Random$Default Default>;

        staticinvoke <kotlin.collections.ArraysKt: void shuffle(boolean[],kotlin.random.Random)>($r0, $r1);

        return;
    }

    public static final void shuffle(boolean[], kotlin.random.Random)
    {
        boolean[] $r0;
        kotlin.random.Random $r1;
        boolean $z0, $z1;
        int $i0, $i1;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.random.Random;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "random");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r0);

     label1:
        if $i0 <= 0 goto label2;

        $i1 = $i0 + 1;

        $i1 = virtualinvoke $r1.<kotlin.random.Random: int nextInt(int)>($i1);

        $z0 = $r0[$i0];

        $z1 = $r0[$i1];

        $r0[$i0] = $z1;

        $r0[$i1] = $z0;

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }

    public static final byte single(byte[])
    {
        byte[] $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        byte $b1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array has more than one element.");

        throw $r1;

     label2:
        $b1 = $r0[0];

        return $b1;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    public static final byte single(byte[], kotlin.jvm.functions.Function1)
    {
        byte $b0;
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i1, $i2;
        java.lang.Byte $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.lang.IllegalArgumentException $r6;
        java.util.NoSuchElementException $r7;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $r2 = null;

        $i2 = 0;

        $z0 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $b0 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $z0 = 1;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array contains more than one matching element.");

        throw $r6;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        if $z0 == 0 goto label5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Byte");

        $b0 = virtualinvoke $r2.<java.lang.Byte: byte byteValue()>();

        return $b0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label6;

     label6:
        throw $r7;
    }

    public static final char single(char[])
    {
        char[] $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        char $c1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array has more than one element.");

        throw $r1;

     label2:
        $c1 = $r0[0];

        return $c1;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    public static final char single(char[], kotlin.jvm.functions.Function1)
    {
        char $c0;
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i1, $i2;
        java.lang.Character $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.lang.IllegalArgumentException $r6;
        java.util.NoSuchElementException $r7;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $r2 = null;

        $i2 = 0;

        $z0 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $c0 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        $z0 = 1;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array contains more than one matching element.");

        throw $r6;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        if $z0 == 0 goto label5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Char");

        $c0 = virtualinvoke $r2.<java.lang.Character: char charValue()>();

        return $c0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label6;

     label6:
        throw $r7;
    }

    public static final double single(double[])
    {
        double[] $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        double $d0;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array has more than one element.");

        throw $r1;

     label2:
        $d0 = $r0[0];

        return $d0;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    public static final double single(double[], kotlin.jvm.functions.Function1)
    {
        double $d0;
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Double $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.lang.IllegalArgumentException $r6;
        java.util.NoSuchElementException $r7;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $r2 = null;

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $z0 = 1;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array contains more than one matching element.");

        throw $r6;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        if $z0 == 0 goto label5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Double");

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        return $d0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label6;

     label6:
        throw $r7;
    }

    public static final float single(float[])
    {
        float[] $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        float $f0;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array has more than one element.");

        throw $r1;

     label2:
        $f0 = $r0[0];

        return $f0;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    public static final float single(float[], kotlin.jvm.functions.Function1)
    {
        float $f0;
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Float $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.lang.IllegalArgumentException $r6;
        java.util.NoSuchElementException $r7;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $r2 = null;

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $z0 = 1;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array contains more than one matching element.");

        throw $r6;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        if $z0 == 0 goto label5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Float");

        $f0 = virtualinvoke $r2.<java.lang.Float: float floatValue()>();

        return $f0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label6;

     label6:
        throw $r7;
    }

    public static final int single(int[])
    {
        int[] $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array has more than one element.");

        throw $r1;

     label2:
        $i0 = $r0[0];

        return $i0;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    public static final int single(int[], kotlin.jvm.functions.Function1)
    {
        int $i0, $i1, $i2;
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Integer $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.lang.IllegalArgumentException $r6;
        java.util.NoSuchElementException $r7;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $r2 = null;

        $i2 = 0;

        $z0 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $i0 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = 1;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array contains more than one matching element.");

        throw $r6;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        if $z0 == 0 goto label5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Int");

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label6;

     label6:
        throw $r7;
    }

    public static final long single(long[])
    {
        long[] $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        long $l1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array has more than one element.");

        throw $r1;

     label2:
        $l1 = $r0[0];

        return $l1;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    public static final long single(long[], kotlin.jvm.functions.Function1)
    {
        long $l0;
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i1, $i2;
        java.lang.Long $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.lang.IllegalArgumentException $r6;
        java.util.NoSuchElementException $r7;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $r2 = null;

        $i2 = 0;

        $z0 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $l0 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $z0 = 1;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array contains more than one matching element.");

        throw $r6;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        if $z0 == 0 goto label5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Long");

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        return $l0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label6;

     label6:
        throw $r7;
    }

    public static final java.lang.Object single(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array has more than one element.");

        throw $r1;

     label2:
        $r2 = $r0[0];

        return $r2;

     label3:
        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r3;
    }

    public static final java.lang.Object single(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object $r0, $r3, $r4;
        java.lang.Object[] $r1;
        kotlin.jvm.functions.Function1 $r2;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.Boolean $r5;
        java.lang.IllegalArgumentException $r6;
        java.util.NoSuchElementException $r7;

        $r1 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "predicate");

        $i0 = lengthof $r1;

        $r3 = null;

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r0 = $r1[$i1];

        $r4 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label2;

        $r3 = $r0;

        $z0 = 1;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array contains more than one matching element.");

        throw $r6;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        if $z0 == 0 goto label5;

        return $r3;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label6;

     label6:
        throw $r7;
    }

    public static final short single(short[])
    {
        short[] $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        short $s1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array has more than one element.");

        throw $r1;

     label2:
        $s1 = $r0[0];

        return $s1;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    public static final short single(short[], kotlin.jvm.functions.Function1)
    {
        short $s0;
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i1, $i2;
        java.lang.Short $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        java.lang.IllegalArgumentException $r6;
        java.util.NoSuchElementException $r7;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $r2 = null;

        $i2 = 0;

        $z0 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $s0 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        $z0 = 1;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array contains more than one matching element.");

        throw $r6;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        if $z0 == 0 goto label5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Short");

        $s0 = virtualinvoke $r2.<java.lang.Short: short shortValue()>();

        return $s0;

     label5:
        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label6;

     label6:
        throw $r7;
    }

    public static final boolean single(boolean[])
    {
        boolean[] $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array has more than one element.");

        throw $r1;

     label2:
        $z0 = $r0[0];

        return $z0;

     label3:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array is empty.");

        throw $r2;
    }

    public static final boolean single(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean $z0, $z1, $z2;
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Boolean $r2, $r3;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r5;
        java.util.NoSuchElementException $r6;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $r2 = null;

        $i1 = 0;

        $z1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = (java.lang.Boolean) $r4;

        $z2 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label3;

        if $z1 != 0 goto label2;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = 1;

        goto label3;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array contains more than one matching element.");

        throw $r5;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        if $z1 == 0 goto label5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Boolean");

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label5:
        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Array contains no element matching the predicate.");

        goto label6;

     label6:
        throw $r6;
    }

    public static final java.lang.Boolean singleOrNull(boolean[])
    {
        java.lang.Boolean $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;

        $r1 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        $z0 = $r1[0];

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r0;

     label1:
        return null;
    }

    public static final java.lang.Boolean singleOrNull(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        java.lang.Boolean $r2, $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

        $r2 = null;

        $z1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = (java.lang.Boolean) $r4;

        $z2 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label3;

        if $z1 == 0 goto label2;

        return null;

     label2:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = 1;

        goto label3;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        if $z1 != 0 goto label5;

        return null;

     label5:
        return $r2;
    }

    public static final java.lang.Byte singleOrNull(byte[])
    {
        java.lang.Byte $r0;
        byte[] $r1;
        int $i0;
        byte $b1;

        $r1 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        $b1 = $r1[0];

        $r0 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r0;

     label1:
        return null;
    }

    public static final java.lang.Byte singleOrNull(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        byte $b0;
        int $i1, $i2;
        java.lang.Byte $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

        $r2 = null;

        $z0 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $b0 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $z0 = 1;

        goto label3;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        if $z0 != 0 goto label5;

        return null;

     label5:
        return $r2;
    }

    public static final java.lang.Character singleOrNull(char[])
    {
        java.lang.Character $r0;
        char[] $r1;
        int $i0;
        char $c1;

        $r1 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        $c1 = $r1[0];

        $r0 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r0;

     label1:
        return null;
    }

    public static final java.lang.Character singleOrNull(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        char $c0;
        int $i1, $i2;
        java.lang.Character $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

        $r2 = null;

        $z0 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $c0 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        $z0 = 1;

        goto label3;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        if $z0 != 0 goto label5;

        return null;

     label5:
        return $r2;
    }

    public static final java.lang.Double singleOrNull(double[])
    {
        java.lang.Double $r0;
        double[] $r1;
        int $i0;
        double $d0;

        $r1 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        $d0 = $r1[0];

        $r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r0;

     label1:
        return null;
    }

    public static final java.lang.Double singleOrNull(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        double $d0;
        int $i0, $i1;
        java.lang.Double $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

        $r2 = null;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $z0 = 1;

        goto label3;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        if $z0 != 0 goto label5;

        return null;

     label5:
        return $r2;
    }

    public static final java.lang.Float singleOrNull(float[])
    {
        java.lang.Float $r0;
        float[] $r1;
        int $i0;
        float $f0;

        $r1 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        $f0 = $r1[0];

        $r0 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r0;

     label1:
        return null;
    }

    public static final java.lang.Float singleOrNull(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        float $f0;
        int $i0, $i1;
        java.lang.Float $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

        $r2 = null;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $z0 = 1;

        goto label3;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        if $z0 != 0 goto label5;

        return null;

     label5:
        return $r2;
    }

    public static final java.lang.Integer singleOrNull(int[])
    {
        java.lang.Integer $r0;
        int[] $r1;
        int $i0;

        $r1 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        $i0 = $r1[0];

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r0;

     label1:
        return null;
    }

    public static final java.lang.Integer singleOrNull(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

        $r2 = null;

        $z0 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $i0 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z0 = 1;

        goto label3;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        if $z0 != 0 goto label5;

        return null;

     label5:
        return $r2;
    }

    public static final java.lang.Long singleOrNull(long[])
    {
        java.lang.Long $r0;
        long[] $r1;
        int $i0;
        long $l1;

        $r1 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        $l1 = $r1[0];

        $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r0;

     label1:
        return null;
    }

    public static final java.lang.Long singleOrNull(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        long $l0;
        int $i1, $i2;
        java.lang.Long $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

        $r2 = null;

        $z0 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $l0 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $z0 = 1;

        goto label3;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        if $z0 != 0 goto label5;

        return null;

     label5:
        return $r2;
    }

    public static final java.lang.Object singleOrNull(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 1 goto label1;

        $r1 = $r0[0];

        return $r1;

     label1:
        return null;
    }

    public static final java.lang.Object singleOrNull(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Object $r2, $r3, $r4;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.Boolean $r5;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i0 = lengthof $r0;

        $i1 = 0;

        $r3 = null;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = $r0[$i1];

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $z0 = 1;

        $r3 = $r2;

        goto label3;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        if $z0 != 0 goto label5;

        return null;

     label5:
        return $r3;
    }

    public static final java.lang.Short singleOrNull(short[])
    {
        java.lang.Short $r0;
        short[] $r1;
        int $i0;
        short $s1;

        $r1 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 1 goto label1;

        $s1 = $r1[0];

        $r0 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r0;

     label1:
        return null;
    }

    public static final java.lang.Short singleOrNull(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        short $s0;
        int $i1, $i2;
        java.lang.Short $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.Boolean $r5;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        $i1 = lengthof $r0;

        $i2 = 0;

        $r2 = null;

        $z0 = 0;

     label1:
        if $i2 >= $i1 goto label4;

        $s0 = $r0[$i2];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0);

        $z0 = 1;

        goto label3;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        if $z0 != 0 goto label5;

        return null;

     label5:
        return $r2;
    }

    public static final java.util.List slice(byte[], java.lang.Iterable)
    {
        java.util.ArrayList $r0, r8;
        byte[] $r1;
        java.lang.Iterable $r2;
        int $i0;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Number $r6;
        byte $b1;
        java.lang.Byte $r7;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "indices");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        if $i0 != 0 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label1:
        r8 = new java.util.ArrayList;

        $r0 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Number) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        $b1 = $r1[$i0];

        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r3 = (java.util.List) $r0;

        return $r3;
    }

    public static final java.util.List slice(byte[], kotlin.ranges.IntRange)
    {
        byte[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.util.List $r2;
        java.lang.Integer $r3;
        int $i0, $i1;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label1:
        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: byte[] copyOfRange(byte[],int,int)>($r0, $i0, $i1);

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(byte[])>($r0);

        return $r2;
    }

    public static final java.util.List slice(char[], java.lang.Iterable)
    {
        java.util.ArrayList $r0, r8;
        char[] $r1;
        java.lang.Iterable $r2;
        int $i0;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Number $r6;
        char $c1;
        java.lang.Character $r7;

        $r1 := @parameter0: char[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "indices");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        if $i0 != 0 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label1:
        r8 = new java.util.ArrayList;

        $r0 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Number) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        $c1 = $r1[$i0];

        $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r3 = (java.util.List) $r0;

        return $r3;
    }

    public static final java.util.List slice(char[], kotlin.ranges.IntRange)
    {
        char[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.util.List $r2;
        java.lang.Integer $r3;
        int $i0, $i1;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label1:
        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: char[] copyOfRange(char[],int,int)>($r0, $i0, $i1);

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(char[])>($r0);

        return $r2;
    }

    public static final java.util.List slice(double[], java.lang.Iterable)
    {
        java.util.ArrayList $r0, r8;
        double $d0;
        double[] $r1;
        java.lang.Iterable $r2;
        int $i0;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.lang.Double $r7;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "indices");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        if $i0 != 0 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label1:
        r8 = new java.util.ArrayList;

        $r0 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Number) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        $d0 = $r1[$i0];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r3 = (java.util.List) $r0;

        return $r3;
    }

    public static final java.util.List slice(double[], kotlin.ranges.IntRange)
    {
        double[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.util.List $r2;
        java.lang.Integer $r3;
        int $i0, $i1;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label1:
        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: double[] copyOfRange(double[],int,int)>($r0, $i0, $i1);

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(double[])>($r0);

        return $r2;
    }

    public static final java.util.List slice(float[], java.lang.Iterable)
    {
        java.util.ArrayList $r0, r8;
        float[] $r1;
        java.lang.Iterable $r2;
        int $i0;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Number $r6;
        float $f0;
        java.lang.Float $r7;

        $r1 := @parameter0: float[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "indices");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        if $i0 != 0 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label1:
        r8 = new java.util.ArrayList;

        $r0 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Number) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        $f0 = $r1[$i0];

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r3 = (java.util.List) $r0;

        return $r3;
    }

    public static final java.util.List slice(float[], kotlin.ranges.IntRange)
    {
        float[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.util.List $r2;
        java.lang.Integer $r3;
        int $i0, $i1;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label1:
        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: float[] copyOfRange(float[],int,int)>($r0, $i0, $i1);

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(float[])>($r0);

        return $r2;
    }

    public static final java.util.List slice(int[], java.lang.Iterable)
    {
        java.util.ArrayList $r0, r8;
        int[] $r1;
        java.lang.Iterable $r2;
        int $i0;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.lang.Integer $r7;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "indices");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        if $i0 != 0 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label1:
        r8 = new java.util.ArrayList;

        $r0 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Number) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        $i0 = $r1[$i0];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r3 = (java.util.List) $r0;

        return $r3;
    }

    public static final java.util.List slice(int[], kotlin.ranges.IntRange)
    {
        int[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.util.List $r2;
        java.lang.Integer $r3;
        int $i0, $i1;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label1:
        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: int[] copyOfRange(int[],int,int)>($r0, $i0, $i1);

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(int[])>($r0);

        return $r2;
    }

    public static final java.util.List slice(long[], java.lang.Iterable)
    {
        java.util.ArrayList $r0, r8;
        long $l0;
        long[] $r1;
        java.lang.Iterable $r2;
        int $i1;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.lang.Long $r7;

        $r1 := @parameter0: long[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "indices");

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        if $i1 != 0 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label1:
        r8 = new java.util.ArrayList;

        $r0 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i1);

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Number) $r5;

        $i1 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        $l0 = $r1[$i1];

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r3 = (java.util.List) $r0;

        return $r3;
    }

    public static final java.util.List slice(long[], kotlin.ranges.IntRange)
    {
        long[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.util.List $r2;
        java.lang.Integer $r3;
        int $i0, $i1;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label1:
        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: long[] copyOfRange(long[],int,int)>($r0, $i0, $i1);

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(long[])>($r0);

        return $r2;
    }

    public static final java.util.List slice(java.lang.Object[], java.lang.Iterable)
    {
        java.util.ArrayList $r0, r7;
        java.lang.Object[] $r1;
        java.lang.Iterable $r2;
        int $i0;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Number $r6;

        $r1 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "indices");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        if $i0 != 0 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label1:
        r7 = new java.util.ArrayList;

        $r0 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Number) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        $r5 = $r1[$i0];

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label2;

     label3:
        $r3 = (java.util.List) $r0;

        return $r3;
    }

    public static final java.util.List slice(java.lang.Object[], kotlin.ranges.IntRange)
    {
        java.lang.Object[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.util.List $r2;
        java.lang.Integer $r3;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label1:
        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>($r0, $i0, $i1);

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r0);

        return $r2;
    }

    public static final java.util.List slice(short[], java.lang.Iterable)
    {
        java.util.ArrayList $r0, r8;
        short[] $r1;
        java.lang.Iterable $r2;
        int $i0;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Number $r6;
        short $s1;
        java.lang.Short $r7;

        $r1 := @parameter0: short[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "indices");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        if $i0 != 0 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label1:
        r8 = new java.util.ArrayList;

        $r0 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Number) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        $s1 = $r1[$i0];

        $r7 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r3 = (java.util.List) $r0;

        return $r3;
    }

    public static final java.util.List slice(short[], kotlin.ranges.IntRange)
    {
        short[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.util.List $r2;
        java.lang.Integer $r3;
        int $i0, $i1;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label1:
        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: short[] copyOfRange(short[],int,int)>($r0, $i0, $i1);

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(short[])>($r0);

        return $r2;
    }

    public static final java.util.List slice(boolean[], java.lang.Iterable)
    {
        java.util.ArrayList $r0, r8;
        boolean[] $r1;
        java.lang.Iterable $r2;
        int $i0;
        java.util.List $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Number $r6;
        java.lang.Boolean $r7;

        $r1 := @parameter0: boolean[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "indices");

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        if $i0 != 0 goto label1;

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r3;

     label1:
        r8 = new java.util.ArrayList;

        $r0 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Number) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        $z0 = $r1[$i0];

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label2;

     label3:
        $r3 = (java.util.List) $r0;

        return $r3;
    }

    public static final java.util.List slice(boolean[], kotlin.ranges.IntRange)
    {
        boolean[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.util.List $r2;
        java.lang.Integer $r3;
        int $i0, $i1;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label1:
        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r3 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: boolean[] copyOfRange(boolean[],int,int)>($r0, $i0, $i1);

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(boolean[])>($r0);

        return $r2;
    }

    public static final byte[] sliceArray(byte[], java.util.Collection)
    {
        byte[] $r0, $r2;
        java.util.Collection $r1;
        int $i0, $i1;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Number $r5;
        byte $b2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $r2 = newarray (byte)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Number) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $b2 = $r0[$i1];

        $r2[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final byte[] sliceArray(byte[], kotlin.ranges.IntRange)
    {
        byte[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.lang.Integer $r2;
        int $i0, $i1;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r0 = newarray (byte)[0];

        return $r0;

     label1:
        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: byte[] copyOfRange(byte[],int,int)>($r0, $i0, $i1);

        return $r0;
    }

    public static final char[] sliceArray(char[], java.util.Collection)
    {
        char[] $r0, $r2;
        java.util.Collection $r1;
        int $i0, $i1;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Number $r5;
        char $c2;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $r2 = newarray (char)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Number) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $c2 = $r0[$i1];

        $r2[$i0] = $c2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final char[] sliceArray(char[], kotlin.ranges.IntRange)
    {
        char[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.lang.Integer $r2;
        int $i0, $i1;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r0 = newarray (char)[0];

        return $r0;

     label1:
        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: char[] copyOfRange(char[],int,int)>($r0, $i0, $i1);

        return $r0;
    }

    public static final double[] sliceArray(double[], java.util.Collection)
    {
        double[] $r0, $r2;
        java.util.Collection $r1;
        int $i0, $i1;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Number $r5;
        double $d0;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $r2 = newarray (double)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Number) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $d0 = $r0[$i1];

        $r2[$i0] = $d0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final double[] sliceArray(double[], kotlin.ranges.IntRange)
    {
        double[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.lang.Integer $r2;
        int $i0, $i1;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r0 = newarray (double)[0];

        return $r0;

     label1:
        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: double[] copyOfRange(double[],int,int)>($r0, $i0, $i1);

        return $r0;
    }

    public static final float[] sliceArray(float[], java.util.Collection)
    {
        float[] $r0, $r2;
        java.util.Collection $r1;
        int $i0, $i1;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Number $r5;
        float $f0;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $r2 = newarray (float)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Number) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $f0 = $r0[$i1];

        $r2[$i0] = $f0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final float[] sliceArray(float[], kotlin.ranges.IntRange)
    {
        float[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.lang.Integer $r2;
        int $i0, $i1;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r0 = newarray (float)[0];

        return $r0;

     label1:
        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: float[] copyOfRange(float[],int,int)>($r0, $i0, $i1);

        return $r0;
    }

    public static final int[] sliceArray(int[], java.util.Collection)
    {
        int[] $r0, $r2;
        java.util.Collection $r1;
        int $i0, $i1;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Number $r5;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $r2 = newarray (int)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Number) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $i1 = $r0[$i1];

        $r2[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final int[] sliceArray(int[], kotlin.ranges.IntRange)
    {
        int[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.lang.Integer $r2;
        int $i0, $i1;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r0 = newarray (int)[0];

        return $r0;

     label1:
        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: int[] copyOfRange(int[],int,int)>($r0, $i0, $i1);

        return $r0;
    }

    public static final long[] sliceArray(long[], java.util.Collection)
    {
        long[] $r0, $r2;
        java.util.Collection $r1;
        int $i0, $i1;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Number $r5;
        long $l2;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $r2 = newarray (long)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Number) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $l2 = $r0[$i1];

        $r2[$i0] = $l2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final long[] sliceArray(long[], kotlin.ranges.IntRange)
    {
        long[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.lang.Integer $r2;
        int $i0, $i1;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r0 = newarray (long)[0];

        return $r0;

     label1:
        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: long[] copyOfRange(long[],int,int)>($r0, $i0, $i1);

        return $r0;
    }

    public static final java.lang.Object[] sliceArray(java.lang.Object[], java.util.Collection)
    {
        java.lang.Object[] $r0, $r2;
        java.util.Collection $r1;
        int $i0, $i1;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Number $r5;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] arrayOfNulls(java.lang.Object[],int)>($r0, $i0);

        $r3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Number) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $r4 = $r0[$i1];

        $r2[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final java.lang.Object[] sliceArray(java.lang.Object[], kotlin.ranges.IntRange)
    {
        java.lang.Object[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.lang.Integer $r2;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>($r0, 0, 0);

        return $r0;

     label1:
        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>($r0, $i0, $i1);

        return $r0;
    }

    public static final short[] sliceArray(short[], java.util.Collection)
    {
        short[] $r0, $r2;
        java.util.Collection $r1;
        int $i0, $i1;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Number $r5;
        short $s2;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $r2 = newarray (short)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Number) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $s2 = $r0[$i1];

        $r2[$i0] = $s2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final short[] sliceArray(short[], kotlin.ranges.IntRange)
    {
        short[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.lang.Integer $r2;
        int $i0, $i1;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r0 = newarray (short)[0];

        return $r0;

     label1:
        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: short[] copyOfRange(short[],int,int)>($r0, $i0, $i1);

        return $r0;
    }

    public static final boolean[] sliceArray(boolean[], java.util.Collection)
    {
        boolean[] $r0, $r2;
        java.util.Collection $r1;
        int $i0, $i1;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Number $r5;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $r2 = newarray (boolean)[$i0];

        $r3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Number) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Number: int intValue()>();

        $z0 = $r0[$i1];

        $r2[$i0] = $z0;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public static final boolean[] sliceArray(boolean[], kotlin.ranges.IntRange)
    {
        boolean[] $r0;
        kotlin.ranges.IntRange $r1;
        boolean $z0;
        java.lang.Integer $r2;
        int $i0, $i1;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.ranges.IntRange;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "indices");

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r0 = newarray (boolean)[0];

        return $r0;

     label1:
        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getStart()>();

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r2 = virtualinvoke $r1.<kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()>();

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i1 = $i1 + 1;

        $r0 = staticinvoke <kotlin.collections.ArraysKt: boolean[] copyOfRange(boolean[],int,int)>($r0, $i0, $i1);

        return $r0;
    }

    public static final void sortBy(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 $r2;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        if $i0 <= 1 goto label1;

        $r2 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2;

        specialinvoke $r2.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: void <init>(kotlin.jvm.functions.Function1)>($r1);

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r0, $r2);

     label1:
        return;
    }

    public static final void sortByDescending(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 $r2;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        if $i0 <= 1 goto label1;

        $r2 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1;

        specialinvoke $r2.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: void <init>(kotlin.jvm.functions.Function1)>($r1);

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r0, $r2);

     label1:
        return;
    }

    public static final void sortDescending(byte[])
    {
        byte[] $r0;
        int $i0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 <= 1 goto label1;

        staticinvoke <kotlin.collections.ArraysKt: void sort(byte[])>($r0);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(byte[])>($r0);

     label1:
        return;
    }

    public static final void sortDescending(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.collections.ArraysKt: void sort(byte[],int,int)>($r0, $i0, $i1);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(byte[],int,int)>($r0, $i0, $i1);

        return;
    }

    public static final void sortDescending(char[])
    {
        char[] $r0;
        int $i0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 <= 1 goto label1;

        staticinvoke <kotlin.collections.ArraysKt: void sort(char[])>($r0);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(char[])>($r0);

     label1:
        return;
    }

    public static final void sortDescending(char[], int, int)
    {
        char[] $r0;
        int $i0, $i1;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.collections.ArraysKt: void sort(char[],int,int)>($r0, $i0, $i1);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(char[],int,int)>($r0, $i0, $i1);

        return;
    }

    public static final void sortDescending(double[])
    {
        double[] $r0;
        int $i0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 <= 1 goto label1;

        staticinvoke <kotlin.collections.ArraysKt: void sort(double[])>($r0);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(double[])>($r0);

     label1:
        return;
    }

    public static final void sortDescending(double[], int, int)
    {
        double[] $r0;
        int $i0, $i1;

        $r0 := @parameter0: double[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.collections.ArraysKt: void sort(double[],int,int)>($r0, $i0, $i1);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(double[],int,int)>($r0, $i0, $i1);

        return;
    }

    public static final void sortDescending(float[])
    {
        float[] $r0;
        int $i0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 <= 1 goto label1;

        staticinvoke <kotlin.collections.ArraysKt: void sort(float[])>($r0);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(float[])>($r0);

     label1:
        return;
    }

    public static final void sortDescending(float[], int, int)
    {
        float[] $r0;
        int $i0, $i1;

        $r0 := @parameter0: float[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.collections.ArraysKt: void sort(float[],int,int)>($r0, $i0, $i1);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(float[],int,int)>($r0, $i0, $i1);

        return;
    }

    public static final void sortDescending(int[])
    {
        int[] $r0;
        int $i0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 <= 1 goto label1;

        staticinvoke <kotlin.collections.ArraysKt: void sort(int[])>($r0);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(int[])>($r0);

     label1:
        return;
    }

    public static final void sortDescending(int[], int, int)
    {
        int[] $r0;
        int $i0, $i1;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.collections.ArraysKt: void sort(int[],int,int)>($r0, $i0, $i1);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(int[],int,int)>($r0, $i0, $i1);

        return;
    }

    public static final void sortDescending(long[])
    {
        long[] $r0;
        int $i0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 <= 1 goto label1;

        staticinvoke <kotlin.collections.ArraysKt: void sort(long[])>($r0);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(long[])>($r0);

     label1:
        return;
    }

    public static final void sortDescending(long[], int, int)
    {
        long[] $r0;
        int $i0, $i1;

        $r0 := @parameter0: long[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.collections.ArraysKt: void sort(long[],int,int)>($r0, $i0, $i1);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(long[],int,int)>($r0, $i0, $i1);

        return;
    }

    public static final void sortDescending(java.lang.Comparable[])
    {
        java.lang.Comparable[] $r0;
        java.util.Comparator $r1;

        $r0 := @parameter0: java.lang.Comparable[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.comparisons.ComparisonsKt: java.util.Comparator reverseOrder()>();

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r0, $r1);

        return;
    }

    public static final void sortDescending(java.lang.Comparable[], int, int)
    {
        java.lang.Comparable[] $r0;
        int $i0, $i1;
        java.util.Comparator $r1;

        $r0 := @parameter0: java.lang.Comparable[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.comparisons.ComparisonsKt: java.util.Comparator reverseOrder()>();

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator,int,int)>($r0, $r1, $i0, $i1);

        return;
    }

    public static final void sortDescending(short[])
    {
        short[] $r0;
        int $i0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 <= 1 goto label1;

        staticinvoke <kotlin.collections.ArraysKt: void sort(short[])>($r0);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(short[])>($r0);

     label1:
        return;
    }

    public static final void sortDescending(short[], int, int)
    {
        short[] $r0;
        int $i0, $i1;

        $r0 := @parameter0: short[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.collections.ArraysKt: void sort(short[],int,int)>($r0, $i0, $i1);

        staticinvoke <kotlin.collections.ArraysKt: void reverse(short[],int,int)>($r0, $i0, $i1);

        return;
    }

    public static final java.util.List sorted(byte[])
    {
        byte[] $r0;
        java.lang.Byte[] $r1;
        java.lang.Comparable[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Byte[] toTypedArray(byte[])>($r0);

        $r2 = (java.lang.Comparable[]) $r1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>");

        $r3 = (java.lang.Object[]) $r2;

        staticinvoke <kotlin.collections.ArraysKt: void sort(java.lang.Object[])>($r3);

        $r3 = (java.lang.Object[]) $r1;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.List sorted(char[])
    {
        char[] $r0;
        java.lang.Character[] $r1;
        java.lang.Comparable[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Character[] toTypedArray(char[])>($r0);

        $r2 = (java.lang.Comparable[]) $r1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>");

        $r3 = (java.lang.Object[]) $r2;

        staticinvoke <kotlin.collections.ArraysKt: void sort(java.lang.Object[])>($r3);

        $r3 = (java.lang.Object[]) $r1;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.List sorted(double[])
    {
        double[] $r0;
        java.lang.Double[] $r1;
        java.lang.Comparable[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Double[] toTypedArray(double[])>($r0);

        $r2 = (java.lang.Comparable[]) $r1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>");

        $r3 = (java.lang.Object[]) $r2;

        staticinvoke <kotlin.collections.ArraysKt: void sort(java.lang.Object[])>($r3);

        $r3 = (java.lang.Object[]) $r1;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.List sorted(float[])
    {
        float[] $r0;
        java.lang.Float[] $r1;
        java.lang.Comparable[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Float[] toTypedArray(float[])>($r0);

        $r2 = (java.lang.Comparable[]) $r1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>");

        $r3 = (java.lang.Object[]) $r2;

        staticinvoke <kotlin.collections.ArraysKt: void sort(java.lang.Object[])>($r3);

        $r3 = (java.lang.Object[]) $r1;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.List sorted(int[])
    {
        int[] $r0;
        java.lang.Integer[] $r1;
        java.lang.Comparable[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Integer[] toTypedArray(int[])>($r0);

        $r2 = (java.lang.Comparable[]) $r1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>");

        $r3 = (java.lang.Object[]) $r2;

        staticinvoke <kotlin.collections.ArraysKt: void sort(java.lang.Object[])>($r3);

        $r3 = (java.lang.Object[]) $r1;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.List sorted(long[])
    {
        long[] $r0;
        java.lang.Long[] $r1;
        java.lang.Comparable[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Long[] toTypedArray(long[])>($r0);

        $r2 = (java.lang.Comparable[]) $r1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>");

        $r3 = (java.lang.Object[]) $r2;

        staticinvoke <kotlin.collections.ArraysKt: void sort(java.lang.Object[])>($r3);

        $r3 = (java.lang.Object[]) $r1;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.List sorted(java.lang.Comparable[])
    {
        java.lang.Comparable[] $r0;
        java.util.List $r1;

        $r0 := @parameter0: java.lang.Comparable[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Comparable[] sortedArray(java.lang.Comparable[])>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r0);

        return $r1;
    }

    public static final java.util.List sorted(short[])
    {
        short[] $r0;
        java.lang.Short[] $r1;
        java.lang.Comparable[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Short[] toTypedArray(short[])>($r0);

        $r2 = (java.lang.Comparable[]) $r1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r2, "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>");

        $r3 = (java.lang.Object[]) $r2;

        staticinvoke <kotlin.collections.ArraysKt: void sort(java.lang.Object[])>($r3);

        $r3 = (java.lang.Object[]) $r1;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final byte[] sortedArray(byte[])
    {
        byte[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(byte[])>($r0);

        return $r0;
    }

    public static final char[] sortedArray(char[])
    {
        char[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(char[])>($r0);

        return $r0;
    }

    public static final double[] sortedArray(double[])
    {
        double[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(double[])>($r0);

        return $r0;
    }

    public static final float[] sortedArray(float[])
    {
        float[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(float[])>($r0);

        return $r0;
    }

    public static final int[] sortedArray(int[])
    {
        int[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(int[])>($r0);

        return $r0;
    }

    public static final long[] sortedArray(long[])
    {
        long[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(long[])>($r0);

        return $r0;
    }

    public static final java.lang.Comparable[] sortedArray(java.lang.Comparable[])
    {
        java.lang.Object[] $r0;
        java.lang.Comparable[] $r1;
        int $i0;
        boolean $z0;

        $r1 := @parameter0: java.lang.Comparable[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r1;

     label3:
        $i0 = lengthof $r1;

        $r0 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r1, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        $r1 = (java.lang.Comparable[]) $r0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r1, "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>");

        $r0 = (java.lang.Object[]) $r1;

        staticinvoke <kotlin.collections.ArraysKt: void sort(java.lang.Object[])>($r0);

        return $r1;
    }

    public static final short[] sortedArray(short[])
    {
        short[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: short[] copyOf(short[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(short[])>($r0);

        return $r0;
    }

    public static final byte[] sortedArrayDescending(byte[])
    {
        byte[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sortDescending(byte[])>($r0);

        return $r0;
    }

    public static final char[] sortedArrayDescending(char[])
    {
        char[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sortDescending(char[])>($r0);

        return $r0;
    }

    public static final double[] sortedArrayDescending(double[])
    {
        double[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sortDescending(double[])>($r0);

        return $r0;
    }

    public static final float[] sortedArrayDescending(float[])
    {
        float[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sortDescending(float[])>($r0);

        return $r0;
    }

    public static final int[] sortedArrayDescending(int[])
    {
        int[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sortDescending(int[])>($r0);

        return $r0;
    }

    public static final long[] sortedArrayDescending(long[])
    {
        long[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sortDescending(long[])>($r0);

        return $r0;
    }

    public static final java.lang.Comparable[] sortedArrayDescending(java.lang.Comparable[])
    {
        java.lang.Comparable[] $r0;
        int $i0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.util.Comparator $r2;

        $r0 := @parameter0: java.lang.Comparable[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "copyOf(this, size)");

        $r0 = (java.lang.Comparable[]) $r1;

        $r2 = staticinvoke <kotlin.comparisons.ComparisonsKt: java.util.Comparator reverseOrder()>();

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r0, $r2);

        return $r0;
    }

    public static final short[] sortedArrayDescending(short[])
    {
        short[] $r0;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r0;

     label3:
        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: short[] copyOf(short[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sortDescending(short[])>($r0);

        return $r0;
    }

    public static final java.lang.Object[] sortedArrayWith(java.lang.Object[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        return $r1;

     label3:
        $i0 = lengthof $r1;

        $r1 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r1, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r1, $r0);

        return $r1;
    }

    public static final java.util.List sortedBy(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        byte[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 $r3;

        $r2 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(byte[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedBy(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        char[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 $r3;

        $r2 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(char[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedBy(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        double[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 $r3;

        $r2 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(double[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedBy(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        float[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 $r3;

        $r2 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(float[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedBy(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        int[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 $r3;

        $r2 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(int[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedBy(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        long[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 $r3;

        $r2 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(long[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedBy(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        java.lang.Object[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 $r3;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(java.lang.Object[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedBy(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        short[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 $r3;

        $r2 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(short[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedBy(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        boolean[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 $r3;

        $r2 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(boolean[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedByDescending(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        byte[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 $r3;

        $r2 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(byte[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedByDescending(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        char[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 $r3;

        $r2 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(char[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedByDescending(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        double[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 $r3;

        $r2 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(double[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedByDescending(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        float[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 $r3;

        $r2 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(float[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedByDescending(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        int[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 $r3;

        $r2 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(int[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedByDescending(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        long[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 $r3;

        $r2 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(long[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedByDescending(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        java.lang.Object[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 $r3;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(java.lang.Object[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedByDescending(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        short[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 $r3;

        $r2 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(short[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedByDescending(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.util.List $r1;
        boolean[] $r2;
        kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1 $r3;

        $r2 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "selector");

        $r3 = new kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1;

        specialinvoke $r3.<kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: void <init>(kotlin.jvm.functions.Function1)>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(boolean[],java.util.Comparator)>($r2, $r3);

        return $r1;
    }

    public static final java.util.List sortedDescending(byte[])
    {
        byte[] $r0;
        int $i0;
        java.util.List $r1;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(byte[])>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List reversed(byte[])>($r0);

        return $r1;
    }

    public static final java.util.List sortedDescending(char[])
    {
        char[] $r0;
        int $i0;
        java.util.List $r1;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(char[])>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List reversed(char[])>($r0);

        return $r1;
    }

    public static final java.util.List sortedDescending(double[])
    {
        double[] $r0;
        int $i0;
        java.util.List $r1;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(double[])>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List reversed(double[])>($r0);

        return $r1;
    }

    public static final java.util.List sortedDescending(float[])
    {
        float[] $r0;
        int $i0;
        java.util.List $r1;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: float[] copyOf(float[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(float[])>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List reversed(float[])>($r0);

        return $r1;
    }

    public static final java.util.List sortedDescending(int[])
    {
        int[] $r0;
        int $i0;
        java.util.List $r1;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(int[])>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List reversed(int[])>($r0);

        return $r1;
    }

    public static final java.util.List sortedDescending(long[])
    {
        long[] $r0;
        int $i0;
        java.util.List $r1;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: long[] copyOf(long[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(long[])>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List reversed(long[])>($r0);

        return $r1;
    }

    public static final java.util.List sortedDescending(java.lang.Comparable[])
    {
        java.lang.Comparable[] $r0;
        java.util.Comparator $r1;
        java.util.List $r2;

        $r0 := @parameter0: java.lang.Comparable[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <kotlin.comparisons.ComparisonsKt: java.util.Comparator reverseOrder()>();

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List sortedWith(java.lang.Object[],java.util.Comparator)>($r0, $r1);

        return $r2;
    }

    public static final java.util.List sortedDescending(short[])
    {
        short[] $r0;
        int $i0;
        java.util.List $r1;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: short[] copyOf(short[],int)>($r0, $i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "copyOf(this, size)");

        staticinvoke <kotlin.collections.ArraysKt: void sort(short[])>($r0);

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List reversed(short[])>($r0);

        return $r1;
    }

    public static final java.util.List sortedWith(byte[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        byte[] $r1;
        java.lang.Byte[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Byte[] toTypedArray(byte[])>($r1);

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r2, $r0);

        $r3 = (java.lang.Object[]) $r2;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.List sortedWith(char[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        char[] $r1;
        java.lang.Character[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Character[] toTypedArray(char[])>($r1);

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r2, $r0);

        $r3 = (java.lang.Object[]) $r2;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.List sortedWith(double[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        double[] $r1;
        java.lang.Double[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Double[] toTypedArray(double[])>($r1);

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r2, $r0);

        $r3 = (java.lang.Object[]) $r2;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.List sortedWith(float[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        float[] $r1;
        java.lang.Float[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Float[] toTypedArray(float[])>($r1);

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r2, $r0);

        $r3 = (java.lang.Object[]) $r2;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.List sortedWith(int[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        int[] $r1;
        java.lang.Integer[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Integer[] toTypedArray(int[])>($r1);

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r2, $r0);

        $r3 = (java.lang.Object[]) $r2;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.List sortedWith(long[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        long[] $r1;
        java.lang.Long[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Long[] toTypedArray(long[])>($r1);

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r2, $r0);

        $r3 = (java.lang.Object[]) $r2;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.List sortedWith(java.lang.Object[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        java.lang.Object[] $r1;
        java.util.List $r2;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Object[] sortedArrayWith(java.lang.Object[],java.util.Comparator)>($r1, $r0);

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r1);

        return $r2;
    }

    public static final java.util.List sortedWith(short[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        short[] $r1;
        java.lang.Short[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Short[] toTypedArray(short[])>($r1);

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r2, $r0);

        $r3 = (java.lang.Object[]) $r2;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.List sortedWith(boolean[], java.util.Comparator)
    {
        java.util.Comparator $r0;
        boolean[] $r1;
        java.lang.Boolean[] $r2;
        java.lang.Object[] $r3;
        java.util.List $r4;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: java.util.Comparator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "comparator");

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Boolean[] toTypedArray(boolean[])>($r1);

        staticinvoke <kotlin.collections.ArraysKt: void sortWith(java.lang.Object[],java.util.Comparator)>($r2, $r0);

        $r3 = (java.lang.Object[]) $r2;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r3);

        return $r4;
    }

    public static final java.util.Set subtract(byte[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        byte[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: byte[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(byte[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set subtract(char[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        char[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: char[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(char[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set subtract(double[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        double[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: double[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(double[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set subtract(float[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        float[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: float[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(float[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set subtract(int[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        int[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: int[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(int[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set subtract(long[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        long[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: long[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(long[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set subtract(java.lang.Object[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        java.lang.Object[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(java.lang.Object[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set subtract(short[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        short[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: short[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(short[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set subtract(boolean[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        boolean[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: boolean[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(boolean[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final double sum(double[])
    {
        double[] $r0;
        double $d0, $d1;
        int $i0, $i1;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $d1 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $d1 = $d1 + $d0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d1;
    }

    public static final float sum(float[])
    {
        float[] $r0;
        float $f0, $f1;
        int $i0, $i1;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $f1 = 0.0F;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $f1 = $f1 + $f0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $f1;
    }

    public static final int sum(byte[])
    {
        byte[] $r0;
        byte $b0;
        int $i1, $i2, $i3;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $b0 = $r0[$i2];

        $i3 = $i3 + $b0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $i3;
    }

    public static final int sum(int[])
    {
        int[] $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $i0 = $r0[$i2];

        $i3 = $i3 + $i0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $i3;
    }

    public static final int sum(short[])
    {
        short[] $r0;
        short $s0;
        int $i1, $i2, $i3;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $s0 = $r0[$i2];

        $i3 = $i3 + $s0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $i3;
    }

    public static final long sum(long[])
    {
        long[] $r0;
        long $l0, $l2;
        int $i1, $i3;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $l2 = 0L;

        $i3 = 0;

     label1:
        if $i3 >= $i1 goto label2;

        $l0 = $r0[$i3];

        $l2 = $l2 + $l0;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        return $l2;
    }

    public static final int sumBy(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i4;
        byte $b3;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i4 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i4;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    public static final int sumBy(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i4;
        char $c3;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i4 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i4;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    public static final int sumBy(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    public static final int sumBy(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    public static final int sumBy(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    public static final int sumBy(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i4;
        long $l3;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i4 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i4;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    public static final int sumBy(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        java.lang.Number $r3;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $i3 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    public static final int sumBy(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i4;
        short $s3;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i4 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i4;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    public static final int sumBy(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    public static final double sumByDouble(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        byte $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    public static final double sumByDouble(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    public static final double sumByDouble(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d1 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    public static final double sumByDouble(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    public static final double sumByDouble(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        double $d0, $d1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    public static final double sumByDouble(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        long $l2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    public static final double sumByDouble(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        java.lang.Object $r2;
        java.lang.Number $r3;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    public static final double sumByDouble(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        short $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    public static final double sumByDouble(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    public static final int sumOfByte(java.lang.Byte[])
    {
        java.lang.Byte[] $r0;
        byte $b0;
        int $i1, $i2, $i3;
        java.lang.Byte $r1;

        $r0 := @parameter0: java.lang.Byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r1 = $r0[$i2];

        $b0 = virtualinvoke $r1.<java.lang.Byte: byte byteValue()>();

        $i3 = $i3 + $b0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $i3;
    }

    private static final double sumOfDouble(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        byte $b2;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    private static final double sumOfDouble(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        char $c2;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    private static final double sumOfDouble(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d1 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    private static final double sumOfDouble(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    private static final double sumOfDouble(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        double $d0, $d1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    private static final double sumOfDouble(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        long $l2;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    public static final double sumOfDouble(java.lang.Double[])
    {
        java.lang.Double[] $r0;
        double $d0, $d1;
        int $i0, $i1;
        java.lang.Double $r1;

        $r0 := @parameter0: java.lang.Double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $d1 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = $r0[$i1];

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $d1 = $d1 + $d0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d1;
    }

    private static final double sumOfDouble(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        java.lang.Object $r2;
        java.lang.Number $r3;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    private static final double sumOfDouble(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        short $s2;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    private static final double sumOfDouble(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        double $d0, $d1;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $d0 = 0.0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $d0;
    }

    public static final float sumOfFloat(java.lang.Float[])
    {
        java.lang.Float[] $r0;
        float $f0, $f1;
        int $i0, $i1;
        java.lang.Float $r1;

        $r0 := @parameter0: java.lang.Float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $f1 = 0.0F;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = $r0[$i1];

        $f0 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

        $f1 = $f1 + $f0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $f1;
    }

    private static final int sumOfInt(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i4;
        byte $b3;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i4 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i4;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfInt(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i4;
        char $c3;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i4 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i4;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfInt(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfInt(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfInt(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfInt(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i4;
        long $l3;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i4 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i4;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    public static final int sumOfInt(java.lang.Integer[])
    {
        java.lang.Integer[] $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r1;

        $r0 := @parameter0: java.lang.Integer[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r1 = $r0[$i2];

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        $i3 = $i3 + $i0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $i3;
    }

    private static final int sumOfInt(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        java.lang.Number $r3;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $i3 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfInt(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i4;
        short $s3;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i4 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i4;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfInt(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        $i2 = $i2 + $i3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final long sumOfLong(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l4;
        byte $b3;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $l1 = 0L;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $b3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        $l1 = $l1 + $l4;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfLong(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l4;
        char $c3;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $l1 = 0L;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $c3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        $l1 = $l1 + $l4;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfLong(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l3;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $l1 = 0L;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $d0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $l3 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        $l1 = $l1 + $l3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfLong(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l3;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $l1 = 0L;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $f0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $l3 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        $l1 = $l1 + $l3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfLong(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2, $i3;
        long $l1, $l4;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $l1 = 0L;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $i3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        $l1 = $l1 + $l4;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfLong(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l3;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $l1 = 0L;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $l3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $l3 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        $l1 = $l1 + $l3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    public static final long sumOfLong(java.lang.Long[])
    {
        java.lang.Long[] $r0;
        long $l0, $l2;
        int $i1, $i3;
        java.lang.Long $r1;

        $r0 := @parameter0: java.lang.Long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $l2 = 0L;

        $i3 = 0;

     label1:
        if $i3 >= $i1 goto label2;

        $r1 = $r0[$i3];

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $l2 = $l2 + $l0;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        return $l2;
    }

    private static final long sumOfLong(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l3;
        java.lang.Object $r2;
        java.lang.Number $r3;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $l1 = 0L;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $r2 = $r0[$i2];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Number) $r2;

        $l3 = virtualinvoke $r3.<java.lang.Number: long longValue()>();

        $l1 = $l1 + $l3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfLong(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l4;
        short $s3;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $l1 = 0L;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $s3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $l4 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        $l1 = $l1 + $l4;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfLong(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l3;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i0 = lengthof $r0;

        $l1 = 0L;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $z0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        $l3 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        $l1 = $l1 + $l3;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    public static final int sumOfShort(java.lang.Short[])
    {
        java.lang.Short[] $r0;
        short $s0;
        int $i1, $i2, $i3;
        java.lang.Short $r1;

        $r0 := @parameter0: java.lang.Short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r1 = $r0[$i2];

        $s0 = virtualinvoke $r1.<java.lang.Short: short shortValue()>();

        $i3 = $i3 + $s0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $i3;
    }

    private static final int sumOfUInt(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i4;
        byte $b3;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        kotlin.UInt $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i1 = 0;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(0);

        $i0 = lengthof $r0;

     label1:
        if $i1 >= $i0 goto label2;

        $b3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.UInt) $r3;

        $i4 = virtualinvoke $r4.<kotlin.UInt: int unbox-impl()>();

        $i2 = $i2 + $i4;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfUInt(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i4;
        char $c3;
        java.lang.Character $r2;
        java.lang.Object $r3;
        kotlin.UInt $r4;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i1 = 0;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(0);

        $i0 = lengthof $r0;

     label1:
        if $i1 >= $i0 goto label2;

        $c3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.UInt) $r3;

        $i4 = virtualinvoke $r4.<kotlin.UInt: int unbox-impl()>();

        $i2 = $i2 + $i4;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfUInt(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        kotlin.UInt $r4;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i1 = 0;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(0);

        $i0 = lengthof $r0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.UInt) $r3;

        $i3 = virtualinvoke $r4.<kotlin.UInt: int unbox-impl()>();

        $i2 = $i2 + $i3;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfUInt(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        kotlin.UInt $r4;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i1 = 0;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(0);

        $i0 = lengthof $r0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.UInt) $r3;

        $i3 = virtualinvoke $r4.<kotlin.UInt: int unbox-impl()>();

        $i2 = $i2 + $i3;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfUInt(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        kotlin.UInt $r4;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i1 = 0;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(0);

        $i0 = lengthof $r0;

     label1:
        if $i1 >= $i0 goto label2;

        $i3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.UInt) $r3;

        $i3 = virtualinvoke $r4.<kotlin.UInt: int unbox-impl()>();

        $i2 = $i2 + $i3;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfUInt(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i4;
        long $l3;
        java.lang.Long $r2;
        java.lang.Object $r3;
        kotlin.UInt $r4;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i1 = 0;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(0);

        $i0 = lengthof $r0;

     label1:
        if $i1 >= $i0 goto label2;

        $l3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.UInt) $r3;

        $i4 = virtualinvoke $r4.<kotlin.UInt: int unbox-impl()>();

        $i2 = $i2 + $i4;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfUInt(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        kotlin.UInt $r3;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i1 = 0;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(0);

        $i0 = lengthof $r0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (kotlin.UInt) $r2;

        $i3 = virtualinvoke $r3.<kotlin.UInt: int unbox-impl()>();

        $i2 = $i2 + $i3;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfUInt(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i4;
        short $s3;
        java.lang.Short $r2;
        java.lang.Object $r3;
        kotlin.UInt $r4;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i1 = 0;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(0);

        $i0 = lengthof $r0;

     label1:
        if $i1 >= $i0 goto label2;

        $s3 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.UInt) $r3;

        $i4 = virtualinvoke $r4.<kotlin.UInt: int unbox-impl()>();

        $i2 = $i2 + $i4;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final int sumOfUInt(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        kotlin.UInt $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $i1 = 0;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>(0);

        $i0 = lengthof $r0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.UInt) $r3;

        $i3 = virtualinvoke $r4.<kotlin.UInt: int unbox-impl()>();

        $i2 = $i2 + $i3;

        $i2 = staticinvoke <kotlin.UInt: int constructor-impl(int)>($i2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private static final long sumOfULong(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l4;
        byte $b3;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        kotlin.ULong $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>(0L);

        $i0 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $b3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.ULong) $r3;

        $l4 = virtualinvoke $r4.<kotlin.ULong: long unbox-impl()>();

        $l1 = $l1 + $l4;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfULong(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l4;
        char $c3;
        java.lang.Character $r2;
        java.lang.Object $r3;
        kotlin.ULong $r4;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>(0L);

        $i0 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $c3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.ULong) $r3;

        $l4 = virtualinvoke $r4.<kotlin.ULong: long unbox-impl()>();

        $l1 = $l1 + $l4;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfULong(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l3;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        kotlin.ULong $r4;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>(0L);

        $i0 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $d0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.ULong) $r3;

        $l3 = virtualinvoke $r4.<kotlin.ULong: long unbox-impl()>();

        $l1 = $l1 + $l3;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfULong(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l3;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        kotlin.ULong $r4;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>(0L);

        $i0 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $f0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.ULong) $r3;

        $l3 = virtualinvoke $r4.<kotlin.ULong: long unbox-impl()>();

        $l1 = $l1 + $l3;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfULong(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2, $i3;
        long $l1, $l4;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        kotlin.ULong $r4;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>(0L);

        $i0 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $i3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.ULong) $r3;

        $l4 = virtualinvoke $r4.<kotlin.ULong: long unbox-impl()>();

        $l1 = $l1 + $l4;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfULong(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l3;
        java.lang.Long $r2;
        java.lang.Object $r3;
        kotlin.ULong $r4;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>(0L);

        $i0 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $l3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.ULong) $r3;

        $l3 = virtualinvoke $r4.<kotlin.ULong: long unbox-impl()>();

        $l1 = $l1 + $l3;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfULong(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l3;
        java.lang.Object $r2;
        kotlin.ULong $r3;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>(0L);

        $i0 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $r2 = $r0[$i2];

        $r2 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (kotlin.ULong) $r2;

        $l3 = virtualinvoke $r3.<kotlin.ULong: long unbox-impl()>();

        $l1 = $l1 + $l3;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfULong(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l4;
        short $s3;
        java.lang.Short $r2;
        java.lang.Object $r3;
        kotlin.ULong $r4;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>(0L);

        $i0 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $s3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.ULong) $r3;

        $l4 = virtualinvoke $r4.<kotlin.ULong: long unbox-impl()>();

        $l1 = $l1 + $l4;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    private static final long sumOfULong(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i2;
        long $l1, $l3;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        kotlin.ULong $r4;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "selector");

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>(0L);

        $i0 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $z0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (kotlin.ULong) $r3;

        $l3 = virtualinvoke $r4.<kotlin.ULong: long unbox-impl()>();

        $l1 = $l1 + $l3;

        $l1 = staticinvoke <kotlin.ULong: long constructor-impl(long)>($l1);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $l1;
    }

    public static final java.util.List take(byte[], int)
    {
        int $i0, $i1, $i2, $i4;
        byte[] $r0;
        boolean $z0;
        java.util.List $r1;
        byte $b3;
        java.lang.Byte $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: byte[];

        $i1 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i2 = 0;

        if $i1 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label09;

        if $i1 != 0 goto label03;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label03:
        $i0 = lengthof $r0;

        if $i1 < $i0 goto label04;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(byte[])>($r0);

        return $r1;

     label04:
        if $i1 != 1 goto label05;

        $b3 = $r0[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label05:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i1);

        $i0 = lengthof $r0;

        $i4 = 0;

     label06:
        if $i2 >= $i0 goto label08;

        $b3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i4 = $i4 + 1;

        if $i4 != $i1 goto label07;

        $r1 = (java.util.List) $r3;

        return $r1;

     label07:
        $i2 = $i2 + 1;

        goto label06;

     label08:
        $r1 = (java.util.List) $r3;

        return $r1;

     label09:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label10;

     label10:
        throw r8;
    }

    public static final java.util.List take(char[], int)
    {
        int $i0, $i1, $i2, $i4;
        char[] $r0;
        boolean $z0;
        java.util.List $r1;
        char $c3;
        java.lang.Character $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: char[];

        $i1 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i2 = 0;

        if $i1 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label09;

        if $i1 != 0 goto label03;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label03:
        $i0 = lengthof $r0;

        if $i1 < $i0 goto label04;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(char[])>($r0);

        return $r1;

     label04:
        if $i1 != 1 goto label05;

        $c3 = $r0[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label05:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i1);

        $i0 = lengthof $r0;

        $i4 = 0;

     label06:
        if $i2 >= $i0 goto label08;

        $c3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i4 = $i4 + 1;

        if $i4 != $i1 goto label07;

        $r1 = (java.util.List) $r3;

        return $r1;

     label07:
        $i2 = $i2 + 1;

        goto label06;

     label08:
        $r1 = (java.util.List) $r3;

        return $r1;

     label09:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label10;

     label10:
        throw r8;
    }

    public static final java.util.List take(double[], int)
    {
        int $i0, $i1, $i2, $i3;
        double[] $r0;
        boolean $z0;
        java.util.List $r1;
        double $d0;
        java.lang.Double $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: double[];

        $i1 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i2 = 0;

        if $i1 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label09;

        if $i1 != 0 goto label03;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label03:
        $i0 = lengthof $r0;

        if $i1 < $i0 goto label04;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(double[])>($r0);

        return $r1;

     label04:
        if $i1 != 1 goto label05;

        $d0 = $r0[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label05:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i1);

        $i0 = lengthof $r0;

        $i3 = 0;

     label06:
        if $i2 >= $i0 goto label08;

        $d0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i3 = $i3 + 1;

        if $i3 != $i1 goto label07;

        $r1 = (java.util.List) $r3;

        return $r1;

     label07:
        $i2 = $i2 + 1;

        goto label06;

     label08:
        $r1 = (java.util.List) $r3;

        return $r1;

     label09:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label10;

     label10:
        throw r8;
    }

    public static final java.util.List take(float[], int)
    {
        int $i0, $i1, $i2, $i3;
        float[] $r0;
        boolean $z0;
        java.util.List $r1;
        float $f0;
        java.lang.Float $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: float[];

        $i1 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i2 = 0;

        if $i1 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label09;

        if $i1 != 0 goto label03;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label03:
        $i0 = lengthof $r0;

        if $i1 < $i0 goto label04;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(float[])>($r0);

        return $r1;

     label04:
        if $i1 != 1 goto label05;

        $f0 = $r0[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label05:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i1);

        $i0 = lengthof $r0;

        $i3 = 0;

     label06:
        if $i2 >= $i0 goto label08;

        $f0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i3 = $i3 + 1;

        if $i3 != $i1 goto label07;

        $r1 = (java.util.List) $r3;

        return $r1;

     label07:
        $i2 = $i2 + 1;

        goto label06;

     label08:
        $r1 = (java.util.List) $r3;

        return $r1;

     label09:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label10;

     label10:
        throw r8;
    }

    public static final java.util.List take(int[], int)
    {
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.Integer $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: int[];

        $i1 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i2 = 0;

        if $i1 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label09;

        if $i1 != 0 goto label03;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label03:
        $i0 = lengthof $r0;

        if $i1 < $i0 goto label04;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(int[])>($r0);

        return $r1;

     label04:
        if $i1 != 1 goto label05;

        $i1 = $r0[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label05:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i1);

        $i0 = lengthof $r0;

        $i3 = 0;

     label06:
        if $i2 >= $i0 goto label08;

        $i4 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i3 = $i3 + 1;

        if $i3 != $i1 goto label07;

        $r1 = (java.util.List) $r3;

        return $r1;

     label07:
        $i2 = $i2 + 1;

        goto label06;

     label08:
        $r1 = (java.util.List) $r3;

        return $r1;

     label09:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label10;

     label10:
        throw r8;
    }

    public static final java.util.List take(long[], int)
    {
        int $i0, $i1, $i2, $i4;
        long[] $r0;
        boolean $z0;
        java.util.List $r1;
        long $l3;
        java.lang.Long $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: long[];

        $i1 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i2 = 0;

        if $i1 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label09;

        if $i1 != 0 goto label03;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label03:
        $i0 = lengthof $r0;

        if $i1 < $i0 goto label04;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(long[])>($r0);

        return $r1;

     label04:
        if $i1 != 1 goto label05;

        $l3 = $r0[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label05:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i1);

        $i0 = lengthof $r0;

        $i4 = 0;

     label06:
        if $i2 >= $i0 goto label08;

        $l3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i4 = $i4 + 1;

        if $i4 != $i1 goto label07;

        $r1 = (java.util.List) $r3;

        return $r1;

     label07:
        $i2 = $i2 + 1;

        goto label06;

     label08:
        $r1 = (java.util.List) $r3;

        return $r1;

     label09:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label10;

     label10:
        throw r8;
    }

    public static final java.util.List take(java.lang.Object[], int)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r0;
        java.lang.Object[] $r1;
        boolean $z0;
        java.util.List $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r1 := @parameter0: java.lang.Object[];

        $i1 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $i2 = 0;

        if $i1 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label09;

        if $i1 != 0 goto label03;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label03:
        $i0 = lengthof $r1;

        if $i1 < $i0 goto label04;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(java.lang.Object[])>($r1);

        return $r2;

     label04:
        if $i1 != 1 goto label05;

        $r0 = $r1[0];

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r0);

        return $r2;

     label05:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i1);

        $i0 = lengthof $r1;

        $i3 = 0;

     label06:
        if $i2 >= $i0 goto label08;

        $r0 = $r1[$i2];

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        $i3 = $i3 + 1;

        if $i3 != $i1 goto label07;

        $r2 = (java.util.List) $r3;

        return $r2;

     label07:
        $i2 = $i2 + 1;

        goto label06;

     label08:
        $r2 = (java.util.List) $r3;

        return $r2;

     label09:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label10;

     label10:
        throw r8;
    }

    public static final java.util.List take(short[], int)
    {
        int $i0, $i1, $i2, $i4;
        short[] $r0;
        boolean $z0;
        java.util.List $r1;
        short $s3;
        java.lang.Short $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: short[];

        $i1 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i2 = 0;

        if $i1 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label09;

        if $i1 != 0 goto label03;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label03:
        $i0 = lengthof $r0;

        if $i1 < $i0 goto label04;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(short[])>($r0);

        return $r1;

     label04:
        if $i1 != 1 goto label05;

        $s3 = $r0[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label05:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i1);

        $i0 = lengthof $r0;

        $i4 = 0;

     label06:
        if $i2 >= $i0 goto label08;

        $s3 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i4 = $i4 + 1;

        if $i4 != $i1 goto label07;

        $r1 = (java.util.List) $r3;

        return $r1;

     label07:
        $i2 = $i2 + 1;

        goto label06;

     label08:
        $r1 = (java.util.List) $r3;

        return $r1;

     label09:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label10;

     label10:
        throw r8;
    }

    public static final java.util.List take(boolean[], int)
    {
        int $i0, $i1, $i2, $i3;
        boolean[] $r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.Boolean $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: boolean[];

        $i1 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i2 = 0;

        if $i1 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        if $z0 == 0 goto label09;

        if $i1 != 0 goto label03;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label03:
        $i0 = lengthof $r0;

        if $i1 < $i0 goto label04;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(boolean[])>($r0);

        return $r1;

     label04:
        if $i1 != 1 goto label05;

        $z0 = $r0[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label05:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i1);

        $i0 = lengthof $r0;

        $i3 = 0;

     label06:
        if $i2 >= $i0 goto label08;

        $z0 = $r0[$i2];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i3 = $i3 + 1;

        if $i3 != $i1 goto label07;

        $r1 = (java.util.List) $r3;

        return $r1;

     label07:
        $i2 = $i2 + 1;

        goto label06;

     label08:
        $r1 = (java.util.List) $r3;

        return $r1;

     label09:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label10;

     label10:
        throw r8;
    }

    public static final java.util.List takeLast(byte[], int)
    {
        byte[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        byte $b2;
        java.lang.Byte $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label8;

        if $i0 != 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(byte[])>($r0);

        return $r1;

     label4:
        if $i0 != 1 goto label5;

        $i0 = $i1 + -1;

        $b2 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label5:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = $i1 - $i0;

     label6:
        if $i0 >= $i1 goto label7;

        $b2 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $r1 = (java.util.List) $r3;

        return $r1;

     label8:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label9;

     label9:
        throw r8;
    }

    public static final java.util.List takeLast(char[], int)
    {
        char[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        char $c2;
        java.lang.Character $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label8;

        if $i0 != 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(char[])>($r0);

        return $r1;

     label4:
        if $i0 != 1 goto label5;

        $i0 = $i1 + -1;

        $c2 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label5:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = $i1 - $i0;

     label6:
        if $i0 >= $i1 goto label7;

        $c2 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $r1 = (java.util.List) $r3;

        return $r1;

     label8:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label9;

     label9:
        throw r8;
    }

    public static final java.util.List takeLast(double[], int)
    {
        double[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        double $d0;
        java.lang.Double $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: double[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label8;

        if $i0 != 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(double[])>($r0);

        return $r1;

     label4:
        if $i0 != 1 goto label5;

        $i0 = $i1 + -1;

        $d0 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label5:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = $i1 - $i0;

     label6:
        if $i0 >= $i1 goto label7;

        $d0 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $r1 = (java.util.List) $r3;

        return $r1;

     label8:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label9;

     label9:
        throw r8;
    }

    public static final java.util.List takeLast(float[], int)
    {
        float[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        float $f0;
        java.lang.Float $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: float[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label8;

        if $i0 != 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(float[])>($r0);

        return $r1;

     label4:
        if $i0 != 1 goto label5;

        $i0 = $i1 + -1;

        $f0 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label5:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = $i1 - $i0;

     label6:
        if $i0 >= $i1 goto label7;

        $f0 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $r1 = (java.util.List) $r3;

        return $r1;

     label8:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label9;

     label9:
        throw r8;
    }

    public static final java.util.List takeLast(int[], int)
    {
        int[] $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.util.List $r1;
        java.lang.Integer $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label8;

        if $i0 != 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(int[])>($r0);

        return $r1;

     label4:
        if $i0 != 1 goto label5;

        $i0 = $i1 + -1;

        $i0 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label5:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = $i1 - $i0;

     label6:
        if $i0 >= $i1 goto label7;

        $i2 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $r1 = (java.util.List) $r3;

        return $r1;

     label8:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label9;

     label9:
        throw r8;
    }

    public static final java.util.List takeLast(long[], int)
    {
        long[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        long $l2;
        java.lang.Long $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: long[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label8;

        if $i0 != 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(long[])>($r0);

        return $r1;

     label4:
        if $i0 != 1 goto label5;

        $i0 = $i1 + -1;

        $l2 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label5:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = $i1 - $i0;

     label6:
        if $i0 >= $i1 goto label7;

        $l2 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $r1 = (java.util.List) $r3;

        return $r1;

     label8:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label9;

     label9:
        throw r8;
    }

    public static final java.util.List takeLast(java.lang.Object[], int)
    {
        java.lang.Object $r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label8;

        if $i0 != 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r2;

     label3:
        $i1 = lengthof $r1;

        if $i0 < $i1 goto label4;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(java.lang.Object[])>($r1);

        return $r2;

     label4:
        if $i0 != 1 goto label5;

        $i0 = $i1 + -1;

        $r0 = $r1[$i0];

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r0);

        return $r2;

     label5:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = $i1 - $i0;

     label6:
        if $i0 >= $i1 goto label7;

        $r0 = $r1[$i0];

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $r2 = (java.util.List) $r3;

        return $r2;

     label8:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label9;

     label9:
        throw r8;
    }

    public static final java.util.List takeLast(short[], int)
    {
        short[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        short $s2;
        java.lang.Short $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: short[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label8;

        if $i0 != 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(short[])>($r0);

        return $r1;

     label4:
        if $i0 != 1 goto label5;

        $i0 = $i1 + -1;

        $s2 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label5:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = $i1 - $i0;

     label6:
        if $i0 >= $i1 goto label7;

        $s2 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $r1 = (java.util.List) $r3;

        return $r1;

     label8:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label9;

     label9:
        throw r8;
    }

    public static final java.util.List takeLast(boolean[], int)
    {
        boolean[] $r0;
        int $i0, $i1;
        boolean $z0;
        java.util.List $r1;
        java.lang.Boolean $r2;
        java.util.ArrayList $r3, r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5;
        java.lang.IllegalArgumentException r8;

        $r0 := @parameter0: boolean[];

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label8;

        if $i0 != 0 goto label3;

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;

     label3:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(boolean[])>($r0);

        return $r1;

     label4:
        if $i0 != 1 goto label5;

        $i0 = $i1 + -1;

        $z0 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label5:
        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = $i1 - $i0;

     label6:
        if $i0 >= $i1 goto label7;

        $z0 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $r1 = (java.util.List) $r3;

        return $r1;

     label8:
        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested element count ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than zero.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        goto label9;

     label9:
        throw r8;
    }

    public static final java.util.List takeLastWhile(byte[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        byte[] $r1;
        int $i0;
        byte $b1;
        java.lang.Byte $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: byte[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(byte[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $b1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List drop(byte[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(byte[])>($r1);

        return $r5;
    }

    public static final java.util.List takeLastWhile(char[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        char[] $r1;
        int $i0;
        char $c1;
        java.lang.Character $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: char[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(char[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $c1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List drop(char[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(char[])>($r1);

        return $r5;
    }

    public static final java.util.List takeLastWhile(double[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        double[] $r1;
        int $i0;
        double $d0;
        java.lang.Double $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: double[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(double[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $d0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List drop(double[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(double[])>($r1);

        return $r5;
    }

    public static final java.util.List takeLastWhile(float[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        float[] $r1;
        int $i0;
        float $f0;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: float[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(float[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $f0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List drop(float[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(float[])>($r1);

        return $r5;
    }

    public static final java.util.List takeLastWhile(int[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        int[] $r1;
        int $i0, $i1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: int[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(int[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $i1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List drop(int[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(int[])>($r1);

        return $r5;
    }

    public static final java.util.List takeLastWhile(long[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        long[] $r1;
        int $i0;
        long $l1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: long[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(long[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $l1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List drop(long[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(long[])>($r1);

        return $r5;
    }

    public static final java.util.List takeLastWhile(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;
        java.util.List $r4;

        $r1 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(java.lang.Object[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $r2 = $r1[$i0];

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List drop(java.lang.Object[],int)>($r1, $i0);

        return $r4;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(java.lang.Object[])>($r1);

        return $r4;
    }

    public static final java.util.List takeLastWhile(short[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        short[] $r1;
        int $i0;
        short $s1;
        java.lang.Short $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;
        java.util.List $r5;

        $r1 := @parameter0: short[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(short[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $s1 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List drop(short[],int)>($r1, $i0);

        return $r5;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r5 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(short[])>($r1);

        return $r5;
    }

    public static final java.util.List takeLastWhile(boolean[], kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean[] $r1;
        int $i0;
        boolean $z0;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.util.List $r4;

        $r1 := @parameter0: boolean[];

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $i0 = staticinvoke <kotlin.collections.ArraysKt: int getLastIndex(boolean[])>($r1);

     label1:
        if $i0 < 0 goto label3;

        $z0 = $r1[$i0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r2 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $i0 = $i0 + 1;

        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List drop(boolean[],int)>($r1, $i0);

        return $r4;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r4 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toList(boolean[])>($r1);

        return $r4;
    }

    public static final java.util.List takeWhile(byte[], kotlin.jvm.functions.Function1)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        byte $b2;
        java.lang.Byte $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.List r7;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        r7 = (java.util.List) $r2;

        return r7;

     label2:
        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List takeWhile(char[], kotlin.jvm.functions.Function1)
    {
        char[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        char $c2;
        java.lang.Character $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.List r7;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $c2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        r7 = (java.util.List) $r2;

        return r7;

     label2:
        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List takeWhile(double[], kotlin.jvm.functions.Function1)
    {
        double[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        double $d0;
        java.lang.Double $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.List r7;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $d0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        r7 = (java.util.List) $r2;

        return r7;

     label2:
        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List takeWhile(float[], kotlin.jvm.functions.Function1)
    {
        float[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        float $f0;
        java.lang.Float $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.List r7;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $f0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        r7 = (java.util.List) $r2;

        return r7;

     label2:
        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List takeWhile(int[], kotlin.jvm.functions.Function1)
    {
        int[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1, $i2;
        java.util.ArrayList $r2, r6;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.List r7;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $i2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        r7 = (java.util.List) $r2;

        return r7;

     label2:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List takeWhile(long[], kotlin.jvm.functions.Function1)
    {
        long[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        long $l2;
        java.lang.Long $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.List r7;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $l2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        r7 = (java.util.List) $r2;

        return r7;

     label2:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List takeWhile(java.lang.Object[], kotlin.jvm.functions.Function1)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r4;
        java.util.ArrayList $r3, r6;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.List r7;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0[$i1];

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        r7 = (java.util.List) $r3;

        return r7;

     label2:
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.List takeWhile(short[], kotlin.jvm.functions.Function1)
    {
        short[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        short $s2;
        java.lang.Short $r3;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        boolean $z0;
        java.util.List r7;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $s2 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        r7 = (java.util.List) $r2;

        return r7;

     label2:
        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List takeWhile(boolean[], kotlin.jvm.functions.Function1)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function1 $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r5;
        boolean $z0, $z1;
        java.lang.Boolean $r3;
        java.lang.Object $r4;
        java.util.List r6;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "predicate");

        r5 = new java.util.ArrayList;

        $r2 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $z0 = $r0[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r3 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label2;

        r6 = (java.util.List) $r2;

        return r6;

     label2:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        r6 = (java.util.List) $r2;

        return r6;
    }

    public static final boolean[] toBooleanArray(java.lang.Boolean[])
    {
        java.lang.Boolean[] $r0;
        boolean[] $r1;
        boolean $z0;
        int $i0, $i1;
        java.lang.Boolean $r2;

        $r0 := @parameter0: java.lang.Boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $r1 = newarray (boolean)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        $r1[$i1] = $z0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final byte[] toByteArray(java.lang.Byte[])
    {
        java.lang.Byte[] $r0;
        byte[] $r1;
        byte $b0;
        int $i1, $i2;
        java.lang.Byte $r2;

        $r0 := @parameter0: java.lang.Byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $r1 = newarray (byte)[$i1];

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r0[$i2];

        $b0 = virtualinvoke $r2.<java.lang.Byte: byte byteValue()>();

        $r1[$i2] = $b0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final char[] toCharArray(java.lang.Character[])
    {
        java.lang.Character[] $r0;
        char[] $r1;
        char $c0;
        int $i1, $i2;
        java.lang.Character $r2;

        $r0 := @parameter0: java.lang.Character[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $r1 = newarray (char)[$i1];

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r0[$i2];

        $c0 = virtualinvoke $r2.<java.lang.Character: char charValue()>();

        $r1[$i2] = $c0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection toCollection(byte[], java.util.Collection)
    {
        byte[] $r0;
        java.util.Collection $r1;
        java.lang.Byte $r2;
        int $i0, $i1;
        byte $b2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection toCollection(char[], java.util.Collection)
    {
        char[] $r0;
        java.util.Collection $r1;
        java.lang.Character $r2;
        int $i0, $i1;
        char $c2;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection toCollection(double[], java.util.Collection)
    {
        double[] $r0;
        java.util.Collection $r1;
        java.lang.Double $r2;
        int $i0, $i1;
        double $d0;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection toCollection(float[], java.util.Collection)
    {
        float[] $r0;
        java.util.Collection $r1;
        java.lang.Float $r2;
        int $i0, $i1;
        float $f0;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection toCollection(int[], java.util.Collection)
    {
        int[] $r0;
        java.util.Collection $r1;
        java.lang.Integer $r2;
        int $i0, $i1, $i2;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection toCollection(long[], java.util.Collection)
    {
        long[] $r0;
        java.util.Collection $r1;
        java.lang.Long $r2;
        int $i0, $i1;
        long $l2;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection toCollection(java.lang.Object[], java.util.Collection)
    {
        java.lang.Object[] $r0;
        java.util.Collection $r1;
        java.lang.Object $r2;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection toCollection(short[], java.util.Collection)
    {
        short[] $r0;
        java.util.Collection $r1;
        java.lang.Short $r2;
        int $i0, $i1;
        short $s2;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Collection toCollection(boolean[], java.util.Collection)
    {
        boolean[] $r0;
        java.util.Collection $r1;
        java.lang.Boolean $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "destination");

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final double[] toDoubleArray(java.lang.Double[])
    {
        java.lang.Double[] $r0;
        double[] $r1;
        double $d0;
        int $i0, $i1;
        java.lang.Double $r2;

        $r0 := @parameter0: java.lang.Double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $r1 = newarray (double)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $r1[$i1] = $d0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final float[] toFloatArray(java.lang.Float[])
    {
        java.lang.Float[] $r0;
        float[] $r1;
        float $f0;
        int $i0, $i1;
        java.lang.Float $r2;

        $r0 := @parameter0: java.lang.Float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        $r1 = newarray (float)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        $f0 = virtualinvoke $r2.<java.lang.Float: float floatValue()>();

        $r1[$i1] = $f0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.HashSet toHashSet(byte[])
    {
        byte[] $r0;
        java.util.HashSet $r1, r3;
        int $i0;
        java.util.Collection $r2;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.HashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

        $r2 = (java.util.Collection) r3;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(byte[],java.util.Collection)>($r0, $r2);

        $r1 = (java.util.HashSet) $r2;

        return $r1;
    }

    public static final java.util.HashSet toHashSet(char[])
    {
        char[] $r0;
        java.util.HashSet $r1, r3;
        int $i0;
        java.util.Collection $r2;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.HashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i0, 128);

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

        $r2 = (java.util.Collection) r3;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(char[],java.util.Collection)>($r0, $r2);

        $r1 = (java.util.HashSet) $r2;

        return $r1;
    }

    public static final java.util.HashSet toHashSet(double[])
    {
        double[] $r0;
        java.util.HashSet $r1, r3;
        int $i0;
        java.util.Collection $r2;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.HashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

        $r2 = (java.util.Collection) r3;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(double[],java.util.Collection)>($r0, $r2);

        $r1 = (java.util.HashSet) $r2;

        return $r1;
    }

    public static final java.util.HashSet toHashSet(float[])
    {
        float[] $r0;
        java.util.HashSet $r1, r3;
        int $i0;
        java.util.Collection $r2;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.HashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

        $r2 = (java.util.Collection) r3;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(float[],java.util.Collection)>($r0, $r2);

        $r1 = (java.util.HashSet) $r2;

        return $r1;
    }

    public static final java.util.HashSet toHashSet(int[])
    {
        int[] $r0;
        java.util.HashSet $r1, r3;
        int $i0;
        java.util.Collection $r2;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.HashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

        $r2 = (java.util.Collection) r3;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(int[],java.util.Collection)>($r0, $r2);

        $r1 = (java.util.HashSet) $r2;

        return $r1;
    }

    public static final java.util.HashSet toHashSet(long[])
    {
        long[] $r0;
        java.util.HashSet $r1, r3;
        int $i0;
        java.util.Collection $r2;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.HashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

        $r2 = (java.util.Collection) r3;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(long[],java.util.Collection)>($r0, $r2);

        $r1 = (java.util.HashSet) $r2;

        return $r1;
    }

    public static final java.util.HashSet toHashSet(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.util.HashSet $r1, r3;
        int $i0;
        java.util.Collection $r2;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.HashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

        $r2 = (java.util.Collection) r3;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(java.lang.Object[],java.util.Collection)>($r0, $r2);

        $r1 = (java.util.HashSet) $r2;

        return $r1;
    }

    public static final java.util.HashSet toHashSet(short[])
    {
        short[] $r0;
        java.util.HashSet $r1, r3;
        int $i0;
        java.util.Collection $r2;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.HashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

        $r2 = (java.util.Collection) r3;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(short[],java.util.Collection)>($r0, $r2);

        $r1 = (java.util.HashSet) $r2;

        return $r1;
    }

    public static final java.util.HashSet toHashSet(boolean[])
    {
        boolean[] $r0;
        java.util.HashSet $r1, r3;
        int $i0;
        java.util.Collection $r2;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.HashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.HashSet: void <init>(int)>($i0);

        $r2 = (java.util.Collection) r3;

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(boolean[],java.util.Collection)>($r0, $r2);

        $r1 = (java.util.HashSet) $r2;

        return $r1;
    }

    public static final int[] toIntArray(java.lang.Integer[])
    {
        java.lang.Integer[] $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        java.lang.Integer $r2;

        $r0 := @parameter0: java.lang.Integer[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $r1 = newarray (int)[$i1];

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r0[$i2];

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r1[$i2] = $i0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.List toList(byte[])
    {
        byte[] $r0;
        int $i0;
        java.util.List $r1;
        byte $b1;
        java.lang.Byte $r2;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(byte[])>($r0);

        return $r1;

     label2:
        $b1 = $r0[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;
    }

    public static final java.util.List toList(char[])
    {
        char[] $r0;
        int $i0;
        java.util.List $r1;
        char $c1;
        java.lang.Character $r2;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(char[])>($r0);

        return $r1;

     label2:
        $c1 = $r0[0];

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;
    }

    public static final java.util.List toList(double[])
    {
        double[] $r0;
        int $i0;
        java.util.List $r1;
        double $d0;
        java.lang.Double $r2;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(double[])>($r0);

        return $r1;

     label2:
        $d0 = $r0[0];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;
    }

    public static final java.util.List toList(float[])
    {
        float[] $r0;
        int $i0;
        java.util.List $r1;
        float $f0;
        java.lang.Float $r2;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(float[])>($r0);

        return $r1;

     label2:
        $f0 = $r0[0];

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;
    }

    public static final java.util.List toList(int[])
    {
        int[] $r0;
        int $i0;
        java.util.List $r1;
        java.lang.Integer $r2;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(int[])>($r0);

        return $r1;

     label2:
        $i0 = $r0[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;
    }

    public static final java.util.List toList(long[])
    {
        long[] $r0;
        int $i0;
        java.util.List $r1;
        long $l1;
        java.lang.Long $r2;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(long[])>($r0);

        return $r1;

     label2:
        $l1 = $r0[0];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;
    }

    public static final java.util.List toList(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;
        java.util.List $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(java.lang.Object[])>($r0);

        return $r1;

     label2:
        $r2 = $r0[0];

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;
    }

    public static final java.util.List toList(short[])
    {
        short[] $r0;
        int $i0;
        java.util.List $r1;
        short $s1;
        java.lang.Short $r2;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(short[])>($r0);

        return $r1;

     label2:
        $s1 = $r0[0];

        $r2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;
    }

    public static final java.util.List toList(boolean[])
    {
        boolean[] $r0;
        int $i0;
        java.util.List $r1;
        boolean $z0;
        java.lang.Boolean $r2;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.List toMutableList(boolean[])>($r0);

        return $r1;

     label2:
        $z0 = $r0[0];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r2);

        return $r1;

     label3:
        $r1 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r1;
    }

    public static final long[] toLongArray(java.lang.Long[])
    {
        java.lang.Long[] $r0;
        long[] $r1;
        long $l0;
        int $i1, $i2;
        java.lang.Long $r2;

        $r0 := @parameter0: java.lang.Long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $r1 = newarray (long)[$i1];

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r0[$i2];

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        $r1[$i2] = $l0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.List toMutableList(byte[])
    {
        byte[] $r0;
        java.lang.Byte $r1;
        java.util.ArrayList $r2, r3;
        int $i0, $i1;
        byte $b2;
        java.util.List r4;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.ArrayList;

        $r2 = r3;

        $i0 = lengthof $r0;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r4 = (java.util.List) $r2;

        return r4;
    }

    public static final java.util.List toMutableList(char[])
    {
        char[] $r0;
        java.lang.Character $r1;
        java.util.ArrayList $r2, r3;
        int $i0, $i1;
        char $c2;
        java.util.List r4;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.ArrayList;

        $r2 = r3;

        $i0 = lengthof $r0;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r4 = (java.util.List) $r2;

        return r4;
    }

    public static final java.util.List toMutableList(double[])
    {
        double[] $r0;
        java.lang.Double $r1;
        java.util.ArrayList $r2, r3;
        int $i0, $i1;
        double $d0;
        java.util.List r4;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.ArrayList;

        $r2 = r3;

        $i0 = lengthof $r0;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r4 = (java.util.List) $r2;

        return r4;
    }

    public static final java.util.List toMutableList(float[])
    {
        float[] $r0;
        java.lang.Float $r1;
        java.util.ArrayList $r2, r3;
        int $i0, $i1;
        float $f0;
        java.util.List r4;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.ArrayList;

        $r2 = r3;

        $i0 = lengthof $r0;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r4 = (java.util.List) $r2;

        return r4;
    }

    public static final java.util.List toMutableList(int[])
    {
        int[] $r0;
        java.lang.Integer $r1;
        java.util.ArrayList $r2, r3;
        int $i0, $i1, $i2;
        java.util.List r4;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.ArrayList;

        $r2 = r3;

        $i0 = lengthof $r0;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r4 = (java.util.List) $r2;

        return r4;
    }

    public static final java.util.List toMutableList(long[])
    {
        long[] $r0;
        java.lang.Long $r1;
        java.util.ArrayList $r2, r3;
        int $i0, $i1;
        long $l2;
        java.util.List r4;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.ArrayList;

        $r2 = r3;

        $i0 = lengthof $r0;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r4 = (java.util.List) $r2;

        return r4;
    }

    public static final java.util.List toMutableList(java.lang.Object[])
    {
        java.util.Collection $r0;
        java.lang.Object[] $r1;
        java.util.ArrayList r2;
        java.util.List r3;

        $r1 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        r2 = new java.util.ArrayList;

        $r0 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Collection asCollection(java.lang.Object[])>($r1);

        specialinvoke r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        r3 = (java.util.List) r2;

        return r3;
    }

    public static final java.util.List toMutableList(short[])
    {
        short[] $r0;
        java.lang.Short $r1;
        java.util.ArrayList $r2, r3;
        int $i0, $i1;
        short $s2;
        java.util.List r4;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.ArrayList;

        $r2 = r3;

        $i0 = lengthof $r0;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r1 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r4 = (java.util.List) $r2;

        return r4;
    }

    public static final java.util.List toMutableList(boolean[])
    {
        boolean[] $r0;
        java.lang.Boolean $r1;
        java.util.ArrayList $r2, r3;
        int $i0, $i1;
        boolean $z0;
        java.util.List r4;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.ArrayList;

        $r2 = r3;

        $i0 = lengthof $r0;

        specialinvoke r3.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r4 = (java.util.List) $r2;

        return r4;
    }

    public static final java.util.Set toMutableSet(byte[])
    {
        byte[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        java.util.LinkedHashSet r3;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r3;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(byte[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public static final java.util.Set toMutableSet(char[])
    {
        char[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        java.util.LinkedHashSet r3;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i0, 128);

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r3;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(char[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public static final java.util.Set toMutableSet(double[])
    {
        double[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        java.util.LinkedHashSet r3;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r3;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(double[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public static final java.util.Set toMutableSet(float[])
    {
        float[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        java.util.LinkedHashSet r3;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r3;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(float[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public static final java.util.Set toMutableSet(int[])
    {
        int[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        java.util.LinkedHashSet r3;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r3;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(int[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public static final java.util.Set toMutableSet(long[])
    {
        long[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        java.util.LinkedHashSet r3;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r3;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(long[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public static final java.util.Set toMutableSet(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        java.util.LinkedHashSet r3;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r3;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(java.lang.Object[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public static final java.util.Set toMutableSet(short[])
    {
        short[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        java.util.LinkedHashSet r3;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r3;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(short[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public static final java.util.Set toMutableSet(boolean[])
    {
        boolean[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        java.util.LinkedHashSet r3;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r3 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r3.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r3;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(boolean[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;
    }

    public static final java.util.Set toSet(byte[])
    {
        byte[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        byte $b1;
        java.lang.Byte $r3;
        java.util.LinkedHashSet r4;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        r4 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r4.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(byte[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;

     label2:
        $b1 = $r0[0];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r3);

        return $r2;

     label3:
        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r2;
    }

    public static final java.util.Set toSet(char[])
    {
        char[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        char $c1;
        java.lang.Character $r3;
        java.util.LinkedHashSet r4;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        r4 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtMost(int,int)>($i0, 128);

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r4.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(char[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;

     label2:
        $c1 = $r0[0];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r3);

        return $r2;

     label3:
        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r2;
    }

    public static final java.util.Set toSet(double[])
    {
        double[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        double $d0;
        java.lang.Double $r3;
        java.util.LinkedHashSet r4;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        r4 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r4.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(double[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;

     label2:
        $d0 = $r0[0];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r3);

        return $r2;

     label3:
        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r2;
    }

    public static final java.util.Set toSet(float[])
    {
        float[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        float $f0;
        java.lang.Float $r3;
        java.util.LinkedHashSet r4;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        r4 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r4.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(float[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;

     label2:
        $f0 = $r0[0];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r3);

        return $r2;

     label3:
        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r2;
    }

    public static final java.util.Set toSet(int[])
    {
        int[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        java.lang.Integer $r3;
        java.util.LinkedHashSet r4;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        r4 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r4.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(int[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;

     label2:
        $i0 = $r0[0];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r3);

        return $r2;

     label3:
        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r2;
    }

    public static final java.util.Set toSet(long[])
    {
        long[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        long $l1;
        java.lang.Long $r3;
        java.util.LinkedHashSet r4;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        r4 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r4.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(long[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;

     label2:
        $l1 = $r0[0];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r3);

        return $r2;

     label3:
        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r2;
    }

    public static final java.util.Set toSet(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        java.lang.Object $r3;
        java.util.LinkedHashSet r4;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        r4 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r4.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(java.lang.Object[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;

     label2:
        $r3 = $r0[0];

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r3);

        return $r2;

     label3:
        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r2;
    }

    public static final java.util.Set toSet(short[])
    {
        short[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        short $s1;
        java.lang.Short $r3;
        java.util.LinkedHashSet r4;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        r4 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r4.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(short[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;

     label2:
        $s1 = $r0[0];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r3);

        return $r2;

     label3:
        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r2;
    }

    public static final java.util.Set toSet(boolean[])
    {
        boolean[] $r0;
        int $i0;
        java.util.Collection $r1;
        java.util.Set $r2;
        boolean $z0;
        java.lang.Boolean $r3;
        java.util.LinkedHashSet r4;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = lengthof $r0;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        r4 = new java.util.LinkedHashSet;

        $i0 = lengthof $r0;

        $i0 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke r4.<java.util.LinkedHashSet: void <init>(int)>($i0);

        $r1 = (java.util.Collection) r4;

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Collection toCollection(boolean[],java.util.Collection)>($r0, $r1);

        $r2 = (java.util.Set) $r1;

        return $r2;

     label2:
        $z0 = $r0[0];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set setOf(java.lang.Object)>($r3);

        return $r2;

     label3:
        $r2 = staticinvoke <kotlin.collections.SetsKt: java.util.Set emptySet()>();

        return $r2;
    }

    public static final short[] toShortArray(java.lang.Short[])
    {
        java.lang.Short[] $r0;
        short[] $r1;
        short $s0;
        int $i1, $i2;
        java.lang.Short $r2;

        $r0 := @parameter0: java.lang.Short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i1 = lengthof $r0;

        $r1 = newarray (short)[$i1];

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r2 = $r0[$i2];

        $s0 = virtualinvoke $r2.<java.lang.Short: short shortValue()>();

        $r1[$i2] = $s0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.util.Set union(byte[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        byte[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: byte[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(byte[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set union(char[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        char[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: char[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(char[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set union(double[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        double[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: double[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(double[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set union(float[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        float[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: float[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(float[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set union(int[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        int[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: int[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(int[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set union(long[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        long[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: long[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(long[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set union(java.lang.Object[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        java.lang.Object[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: java.lang.Object[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(java.lang.Object[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set union(short[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        short[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: short[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(short[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.util.Set union(boolean[], java.lang.Iterable)
    {
        java.lang.Iterable $r0;
        java.util.Set $r1;
        boolean[] $r2;
        java.util.Collection r3;

        $r2 := @parameter0: boolean[];

        $r0 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "other");

        $r1 = staticinvoke <kotlin.collections.ArraysKt: java.util.Set toMutableSet(boolean[])>($r2);

        r3 = (java.util.Collection) $r1;

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>(r3, $r0);

        return $r1;
    }

    public static final java.lang.Iterable withIndex(byte[])
    {
        byte[] $r0;
        kotlin.collections.ArraysKt___ArraysKt$withIndex$2 $r1;
        kotlin.collections.IndexingIterable $r2;

        $r0 := @parameter0: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new kotlin.collections.IndexingIterable;

        $r1 = new kotlin.collections.ArraysKt___ArraysKt$withIndex$2;

        specialinvoke $r1.<kotlin.collections.ArraysKt___ArraysKt$withIndex$2: void <init>(byte[])>($r0);

        specialinvoke $r2.<kotlin.collections.IndexingIterable: void <init>(kotlin.jvm.functions.Function0)>($r1);

        return $r2;
    }

    public static final java.lang.Iterable withIndex(char[])
    {
        char[] $r0;
        kotlin.collections.ArraysKt___ArraysKt$withIndex$9 $r1;
        kotlin.collections.IndexingIterable $r2;

        $r0 := @parameter0: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new kotlin.collections.IndexingIterable;

        $r1 = new kotlin.collections.ArraysKt___ArraysKt$withIndex$9;

        specialinvoke $r1.<kotlin.collections.ArraysKt___ArraysKt$withIndex$9: void <init>(char[])>($r0);

        specialinvoke $r2.<kotlin.collections.IndexingIterable: void <init>(kotlin.jvm.functions.Function0)>($r1);

        return $r2;
    }

    public static final java.lang.Iterable withIndex(double[])
    {
        double[] $r0;
        kotlin.collections.ArraysKt___ArraysKt$withIndex$7 $r1;
        kotlin.collections.IndexingIterable $r2;

        $r0 := @parameter0: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new kotlin.collections.IndexingIterable;

        $r1 = new kotlin.collections.ArraysKt___ArraysKt$withIndex$7;

        specialinvoke $r1.<kotlin.collections.ArraysKt___ArraysKt$withIndex$7: void <init>(double[])>($r0);

        specialinvoke $r2.<kotlin.collections.IndexingIterable: void <init>(kotlin.jvm.functions.Function0)>($r1);

        return $r2;
    }

    public static final java.lang.Iterable withIndex(float[])
    {
        float[] $r0;
        kotlin.collections.ArraysKt___ArraysKt$withIndex$6 $r1;
        kotlin.collections.IndexingIterable $r2;

        $r0 := @parameter0: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new kotlin.collections.IndexingIterable;

        $r1 = new kotlin.collections.ArraysKt___ArraysKt$withIndex$6;

        specialinvoke $r1.<kotlin.collections.ArraysKt___ArraysKt$withIndex$6: void <init>(float[])>($r0);

        specialinvoke $r2.<kotlin.collections.IndexingIterable: void <init>(kotlin.jvm.functions.Function0)>($r1);

        return $r2;
    }

    public static final java.lang.Iterable withIndex(int[])
    {
        int[] $r0;
        kotlin.collections.ArraysKt___ArraysKt$withIndex$4 $r1;
        kotlin.collections.IndexingIterable $r2;

        $r0 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new kotlin.collections.IndexingIterable;

        $r1 = new kotlin.collections.ArraysKt___ArraysKt$withIndex$4;

        specialinvoke $r1.<kotlin.collections.ArraysKt___ArraysKt$withIndex$4: void <init>(int[])>($r0);

        specialinvoke $r2.<kotlin.collections.IndexingIterable: void <init>(kotlin.jvm.functions.Function0)>($r1);

        return $r2;
    }

    public static final java.lang.Iterable withIndex(long[])
    {
        long[] $r0;
        kotlin.collections.ArraysKt___ArraysKt$withIndex$5 $r1;
        kotlin.collections.IndexingIterable $r2;

        $r0 := @parameter0: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new kotlin.collections.IndexingIterable;

        $r1 = new kotlin.collections.ArraysKt___ArraysKt$withIndex$5;

        specialinvoke $r1.<kotlin.collections.ArraysKt___ArraysKt$withIndex$5: void <init>(long[])>($r0);

        specialinvoke $r2.<kotlin.collections.IndexingIterable: void <init>(kotlin.jvm.functions.Function0)>($r1);

        return $r2;
    }

    public static final java.lang.Iterable withIndex(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        kotlin.collections.ArraysKt___ArraysKt$withIndex$1 $r1;
        kotlin.collections.IndexingIterable $r2;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new kotlin.collections.IndexingIterable;

        $r1 = new kotlin.collections.ArraysKt___ArraysKt$withIndex$1;

        specialinvoke $r1.<kotlin.collections.ArraysKt___ArraysKt$withIndex$1: void <init>(java.lang.Object[])>($r0);

        specialinvoke $r2.<kotlin.collections.IndexingIterable: void <init>(kotlin.jvm.functions.Function0)>($r1);

        return $r2;
    }

    public static final java.lang.Iterable withIndex(short[])
    {
        short[] $r0;
        kotlin.collections.ArraysKt___ArraysKt$withIndex$3 $r1;
        kotlin.collections.IndexingIterable $r2;

        $r0 := @parameter0: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new kotlin.collections.IndexingIterable;

        $r1 = new kotlin.collections.ArraysKt___ArraysKt$withIndex$3;

        specialinvoke $r1.<kotlin.collections.ArraysKt___ArraysKt$withIndex$3: void <init>(short[])>($r0);

        specialinvoke $r2.<kotlin.collections.IndexingIterable: void <init>(kotlin.jvm.functions.Function0)>($r1);

        return $r2;
    }

    public static final java.lang.Iterable withIndex(boolean[])
    {
        boolean[] $r0;
        kotlin.collections.ArraysKt___ArraysKt$withIndex$8 $r1;
        kotlin.collections.IndexingIterable $r2;

        $r0 := @parameter0: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = new kotlin.collections.IndexingIterable;

        $r1 = new kotlin.collections.ArraysKt___ArraysKt$withIndex$8;

        specialinvoke $r1.<kotlin.collections.ArraysKt___ArraysKt$withIndex$8: void <init>(boolean[])>($r0);

        specialinvoke $r2.<kotlin.collections.IndexingIterable: void <init>(kotlin.jvm.functions.Function0)>($r1);

        return $r2;
    }

    public static final java.util.List zip(byte[], java.lang.Iterable)
    {
        byte[] $r0;
        java.util.ArrayList $r1, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        byte $b3;
        java.lang.Byte $r5;
        kotlin.Pair $r6;
        java.util.List r8;

        $r0 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "other");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $b3 = $r0[$i2];

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r6 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r5, $r4);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r1;

        return r8;

     label3:
        r8 = (java.util.List) $r1;

        return r8;
    }

    public static final java.util.List zip(byte[], java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        byte[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        byte $b3;
        java.lang.Byte $r6;
        java.util.List r8;

        $r0 := @parameter0: byte[];

        $r3 := @parameter1: java.lang.Iterable;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r2 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $b3 = $r0[$i2];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List zip(byte[], byte[])
    {
        byte[] $r0, $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        byte $b2, $b3;
        java.lang.Byte $r3, $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $b3 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r3, $r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List zip(byte[], byte[], kotlin.jvm.functions.Function2)
    {
        byte[] $r0, $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r7;
        byte $b2;
        java.lang.Byte $r4, $r5;
        java.lang.Object $r6;
        java.util.List r8;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r7 = new java.util.ArrayList;

        $r3 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $b2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r3;

        return r8;
    }

    public static final java.util.List zip(byte[], java.lang.Object[])
    {
        byte[] $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r6;
        byte $b2;
        java.lang.Byte $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r2 = $r1[$i1];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r4, $r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.List zip(byte[], java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        byte[] $r0;
        java.lang.Object[] $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        int $i0, $i1;
        java.util.ArrayList $r4, r6;
        byte $b2;
        java.lang.Byte $r5;
        java.util.List r7;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.Object[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r4 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r3 = $r1[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r4;

        return r7;
    }

    public static final java.util.List zip(char[], java.lang.Iterable)
    {
        char[] $r0;
        java.util.ArrayList $r1, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        char $c3;
        java.lang.Character $r5;
        kotlin.Pair $r6;
        java.util.List r8;

        $r0 := @parameter0: char[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "other");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $c3 = $r0[$i2];

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r6 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r5, $r4);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r1;

        return r8;

     label3:
        r8 = (java.util.List) $r1;

        return r8;
    }

    public static final java.util.List zip(char[], java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        char[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        char $c3;
        java.lang.Character $r6;
        java.util.List r8;

        $r0 := @parameter0: char[];

        $r3 := @parameter1: java.lang.Iterable;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r2 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $c3 = $r0[$i2];

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List zip(char[], char[])
    {
        char[] $r0, $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        char $c2, $c3;
        java.lang.Character $r3, $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: char[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $c3 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c3);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r3, $r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List zip(char[], char[], kotlin.jvm.functions.Function2)
    {
        char[] $r0, $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r7;
        char $c2;
        java.lang.Character $r4, $r5;
        java.lang.Object $r6;
        java.util.List r8;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: char[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r7 = new java.util.ArrayList;

        $r3 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $c2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r3;

        return r8;
    }

    public static final java.util.List zip(char[], java.lang.Object[])
    {
        char[] $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r6;
        char $c2;
        java.lang.Character $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r2 = $r1[$i1];

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r4, $r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.List zip(char[], java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        char[] $r0;
        java.lang.Object[] $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        int $i0, $i1;
        java.util.ArrayList $r4, r6;
        char $c2;
        java.lang.Character $r5;
        java.util.List r7;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.lang.Object[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r4 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $c2 = $r0[$i1];

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c2);

        $r3 = $r1[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r4;

        return r7;
    }

    public static final java.util.List zip(double[], java.lang.Iterable)
    {
        double[] $r0;
        java.util.ArrayList $r1, r7;
        int $i0, $i1, $i2;
        double $d0;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Double $r5;
        kotlin.Pair $r6;
        java.util.List r8;

        $r0 := @parameter0: double[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "other");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $d0 = $r0[$i2];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r6 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r5, $r4);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r1;

        return r8;

     label3:
        r8 = (java.util.List) $r1;

        return r8;
    }

    public static final java.util.List zip(double[], java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        double[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1, $i2;
        double $d0;
        java.lang.Iterable $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Double $r6;
        java.util.List r8;

        $r0 := @parameter0: double[];

        $r3 := @parameter1: java.lang.Iterable;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r2 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $d0 = $r0[$i2];

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List zip(double[], double[])
    {
        double[] $r0, $r1;
        double $d0, $d1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        java.lang.Double $r3, $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: double[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d1 = $r0[$i1];

        $d0 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r3, $r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List zip(double[], double[], kotlin.jvm.functions.Function2)
    {
        double[] $r0, $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r7;
        double $d0;
        java.lang.Double $r4, $r5;
        java.lang.Object $r6;
        java.util.List r8;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: double[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r7 = new java.util.ArrayList;

        $r3 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r3;

        return r8;
    }

    public static final java.util.List zip(double[], java.lang.Object[])
    {
        double[] $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r6;
        double $d0;
        java.lang.Double $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r2 = $r1[$i1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r4, $r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.List zip(double[], java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        double[] $r0;
        java.lang.Object[] $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        int $i0, $i1;
        java.util.ArrayList $r4, r6;
        double $d0;
        java.lang.Double $r5;
        java.util.List r7;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: java.lang.Object[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r4 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $d0 = $r0[$i1];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3 = $r1[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r4;

        return r7;
    }

    public static final java.util.List zip(float[], java.lang.Iterable)
    {
        float[] $r0;
        java.util.ArrayList $r1, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        float $f0;
        java.lang.Float $r5;
        kotlin.Pair $r6;
        java.util.List r8;

        $r0 := @parameter0: float[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "other");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $f0 = $r0[$i2];

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r5, $r4);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r1;

        return r8;

     label3:
        r8 = (java.util.List) $r1;

        return r8;
    }

    public static final java.util.List zip(float[], java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        float[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        float $f0;
        java.lang.Float $r6;
        java.util.List r8;

        $r0 := @parameter0: float[];

        $r3 := @parameter1: java.lang.Iterable;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r2 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $f0 = $r0[$i2];

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List zip(float[], float[])
    {
        float[] $r0, $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        float $f0, $f1;
        java.lang.Float $r3, $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: float[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $f1 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r3, $r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List zip(float[], float[], kotlin.jvm.functions.Function2)
    {
        float[] $r0, $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r7;
        float $f0;
        java.lang.Float $r4, $r5;
        java.lang.Object $r6;
        java.util.List r8;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: float[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r7 = new java.util.ArrayList;

        $r3 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $f0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r3;

        return r8;
    }

    public static final java.util.List zip(float[], java.lang.Object[])
    {
        float[] $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r6;
        float $f0;
        java.lang.Float $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r2 = $r1[$i1];

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r4, $r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.List zip(float[], java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        float[] $r0;
        java.lang.Object[] $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        int $i0, $i1;
        java.util.ArrayList $r4, r6;
        float $f0;
        java.lang.Float $r5;
        java.util.List r7;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: java.lang.Object[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r4 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f0 = $r0[$i1];

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r3 = $r1[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r4;

        return r7;
    }

    public static final java.util.List zip(int[], java.lang.Iterable)
    {
        int[] $r0;
        java.util.ArrayList $r1, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        kotlin.Pair $r6;
        java.util.List r8;

        $r0 := @parameter0: int[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "other");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $i0 = $i2 + 1;

        $i2 = $r0[$i2];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r5, $r4);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i2 = $i0;

        goto label1;

     label2:
        r8 = (java.util.List) $r1;

        return r8;

     label3:
        r8 = (java.util.List) $r1;

        return r8;
    }

    public static final java.util.List zip(int[], java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        int[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        java.util.List r8;

        $r0 := @parameter0: int[];

        $r3 := @parameter1: java.lang.Iterable;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r2 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $i0 = $i2 + 1;

        $i2 = $r0[$i2];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i2 = $i0;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List zip(int[], int[])
    {
        int[] $r0, $r1;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r2, r6;
        java.lang.Integer $r3, $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $i3 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r3, $r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List zip(int[], int[], kotlin.jvm.functions.Function2)
    {
        int[] $r0, $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1, $i2;
        java.util.ArrayList $r3, r7;
        java.lang.Integer $r4, $r5;
        java.lang.Object $r6;
        java.util.List r8;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: int[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r7 = new java.util.ArrayList;

        $r3 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r3;

        return r8;
    }

    public static final java.util.List zip(int[], java.lang.Object[])
    {
        int[] $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        java.util.ArrayList $r3, r6;
        java.lang.Integer $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r2 = $r1[$i1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r4, $r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.List zip(int[], java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        int[] $r0;
        java.lang.Object[] $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        int $i0, $i1, $i2;
        java.util.ArrayList $r4, r6;
        java.lang.Integer $r5;
        java.util.List r7;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: java.lang.Object[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r4 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $r0[$i1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r3 = $r1[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r4;

        return r7;
    }

    public static final java.util.List zip(long[], java.lang.Iterable)
    {
        long[] $r0;
        java.util.ArrayList $r1, r7;
        int $i0, $i2, $i3;
        long $l1;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Long $r5;
        kotlin.Pair $r6;
        java.util.List r8;

        $r0 := @parameter0: long[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "other");

        $i2 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i3 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $i3 >= $i2 goto label3;

        $l1 = $r0[$i3];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r6 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r5, $r4);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i3 = $i3 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r1;

        return r8;

     label3:
        r8 = (java.util.List) $r1;

        return r8;
    }

    public static final java.util.List zip(long[], java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        long[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i2, $i3;
        long $l1;
        java.lang.Iterable $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Long $r6;
        java.util.List r8;

        $r0 := @parameter0: long[];

        $r3 := @parameter1: java.lang.Iterable;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i2 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r2 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i2);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i3 = 0;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if $i3 >= $i2 goto label3;

        $l1 = $r0[$i3];

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i3 = $i3 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List zip(long[], long[])
    {
        long[] $r0, $r1;
        long $l0, $l3;
        int $i1, $i2;
        java.util.ArrayList $r2, r6;
        java.lang.Long $r3, $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: long[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i1 = lengthof $r0;

        $i2 = lengthof $r1;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i1);

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $l3 = $r0[$i2];

        $l0 = $r1[$i2];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r3, $r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List zip(long[], long[], kotlin.jvm.functions.Function2)
    {
        long[] $r0, $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r7;
        long $l2;
        java.lang.Long $r4, $r5;
        java.lang.Object $r6;
        java.util.List r8;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: long[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r7 = new java.util.ArrayList;

        $r3 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $l2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r3;

        return r8;
    }

    public static final java.util.List zip(long[], java.lang.Object[])
    {
        long[] $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r6;
        long $l2;
        java.lang.Long $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r2 = $r1[$i1];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r4, $r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.List zip(long[], java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        long[] $r0;
        java.lang.Object[] $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        int $i0, $i1;
        java.util.ArrayList $r4, r6;
        long $l2;
        java.lang.Long $r5;
        java.util.List r7;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: java.lang.Object[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r4 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $l2 = $r0[$i1];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3 = $r1[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r4;

        return r7;
    }

    public static final java.util.List zip(java.lang.Object[], java.lang.Iterable)
    {
        java.lang.Object[] $r0;
        java.util.ArrayList $r1, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        kotlin.Pair $r6;
        java.util.List r8;

        $r0 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "other");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $r5 = $r0[$i2];

        $r6 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r5, $r4);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r1;

        return r8;

     label3:
        r8 = (java.util.List) $r1;

        return r8;
    }

    public static final java.util.List zip(java.lang.Object[], java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        java.util.List r8;

        $r0 := @parameter0: java.lang.Object[];

        $r3 := @parameter1: java.lang.Iterable;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r2 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $r6 = $r0[$i2];

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List zip(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] $r0, $r1;
        java.lang.Object $r2, $r4;
        int $i0, $i1;
        java.util.ArrayList $r3, r6;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r4 = $r0[$i1];

        $r2 = $r1[$i1];

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r4, $r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.List zip(java.lang.Object[], java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        java.lang.Object[] $r0, $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3, $r5;
        int $i0, $i1;
        java.util.ArrayList $r4, r6;
        java.util.List r7;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r4 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r5 = $r0[$i1];

        $r3 = $r1[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r4;

        return r7;
    }

    public static final java.util.List zip(short[], java.lang.Iterable)
    {
        short[] $r0;
        java.util.ArrayList $r1, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        short $s3;
        java.lang.Short $r5;
        kotlin.Pair $r6;
        java.util.List r8;

        $r0 := @parameter0: short[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "other");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $s3 = $r0[$i2];

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r6 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r5, $r4);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r1;

        return r8;

     label3:
        r8 = (java.util.List) $r1;

        return r8;
    }

    public static final java.util.List zip(short[], java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        short[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        short $s3;
        java.lang.Short $r6;
        java.util.List r8;

        $r0 := @parameter0: short[];

        $r3 := @parameter1: java.lang.Iterable;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r2 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $s3 = $r0[$i2];

        $r6 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List zip(short[], java.lang.Object[])
    {
        short[] $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r6;
        short $s2;
        java.lang.Short $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r2 = $r1[$i1];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r4, $r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.List zip(short[], java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        short[] $r0;
        java.lang.Object[] $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        int $i0, $i1;
        java.util.ArrayList $r4, r6;
        short $s2;
        java.lang.Short $r5;
        java.util.List r7;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: java.lang.Object[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r4 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r3 = $r1[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r4;

        return r7;
    }

    public static final java.util.List zip(short[], short[])
    {
        short[] $r0, $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        short $s2, $s3;
        java.lang.Short $r3, $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: short[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $s3 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r3, $r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List zip(short[], short[], kotlin.jvm.functions.Function2)
    {
        short[] $r0, $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r7;
        short $s2;
        java.lang.Short $r4, $r5;
        java.lang.Object $r6;
        java.util.List r8;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: short[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r7 = new java.util.ArrayList;

        $r3 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $s2 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $s2 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r3;

        return r8;
    }

    public static final java.util.List zip(boolean[], java.lang.Iterable)
    {
        boolean[] $r0;
        java.util.ArrayList $r1, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Boolean $r5;
        kotlin.Pair $r6;
        java.util.List r8;

        $r0 := @parameter0: boolean[];

        $r2 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "other");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r1 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r2, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $z0 = $r0[$i2];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r5, $r4);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r1;

        return r8;

     label3:
        r8 = (java.util.List) $r1;

        return r8;
    }

    public static final java.util.List zip(boolean[], java.lang.Iterable, kotlin.jvm.functions.Function2)
    {
        boolean[] $r0;
        kotlin.jvm.functions.Function2 $r1;
        java.util.ArrayList $r2, r7;
        int $i0, $i1, $i2;
        java.lang.Iterable $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        java.util.List r8;

        $r0 := @parameter0: boolean[];

        $r3 := @parameter1: java.lang.Iterable;

        $r1 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "transform");

        $i1 = lengthof $r0;

        r7 = new java.util.ArrayList;

        $r2 = r7;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

        $i2 = 0;

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        if $i2 >= $i1 goto label3;

        $z0 = $r0[$i2];

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r6, $r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r2;

        return r8;

     label3:
        r8 = (java.util.List) $r2;

        return r8;
    }

    public static final java.util.List zip(boolean[], java.lang.Object[])
    {
        boolean[] $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r6;
        boolean $z0;
        java.lang.Boolean $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r3 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r2 = $r1[$i1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r4, $r2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r3;

        return r7;
    }

    public static final java.util.List zip(boolean[], java.lang.Object[], kotlin.jvm.functions.Function2)
    {
        boolean[] $r0;
        java.lang.Object[] $r1;
        kotlin.jvm.functions.Function2 $r2;
        java.lang.Object $r3;
        int $i0, $i1;
        java.util.ArrayList $r4, r6;
        boolean $z0;
        java.lang.Boolean $r5;
        java.util.List r7;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: java.lang.Object[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r4 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = $r1[$i1];

        $r3 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r3);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r4;

        return r7;
    }

    public static final java.util.List zip(boolean[], boolean[])
    {
        boolean[] $r0, $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, r6;
        boolean $z0, $z1;
        java.lang.Boolean $r3, $r4;
        kotlin.Pair $r5;
        java.util.List r7;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: boolean[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r6 = new java.util.ArrayList;

        $r2 = r6;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $z1 = $r1[$i1];

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r5 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r3, $r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r7 = (java.util.List) $r2;

        return r7;
    }

    public static final java.util.List zip(boolean[], boolean[], kotlin.jvm.functions.Function2)
    {
        boolean[] $r0, $r1;
        kotlin.jvm.functions.Function2 $r2;
        int $i0, $i1;
        java.util.ArrayList $r3, r7;
        boolean $z0;
        java.lang.Boolean $r4, $r5;
        java.lang.Object $r6;
        java.util.List r8;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: boolean[];

        $r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "transform");

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        r7 = new java.util.ArrayList;

        $r3 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $z0 = $r0[$i1];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z0 = $r1[$i1];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r4, $r5);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r8 = (java.util.List) $r3;

        return r8;
    }

