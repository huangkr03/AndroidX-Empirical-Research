androidx.concurrent.futures.ListenableFutureKt
    public static final java.lang.Object await(com.google.common.util.concurrent.ListenableFuture, kotlin.coroutines.Continuation)
    {
        com.google.common.util.concurrent.ListenableFuture $r0;
        kotlin.coroutines.Continuation $r1, r2, $r6;
        kotlinx.coroutines.CancellableContinuationImpl r3, $r5;
        kotlinx.coroutines.CancellableContinuation r4;
        boolean $z2, z3;
        androidx.concurrent.futures.ToContinuation $r7;
        androidx.concurrent.futures.DirectExecutor $r8;
        java.util.concurrent.Executor $r9;
        java.lang.Runnable $r10;
        androidx.concurrent.futures.ListenableFutureKt$await$$inlined$suspendCancellableCoroutine$lambda$1 $r11;
        kotlin.jvm.functions.Function1 $r12;
        java.lang.Object $r13, $r14, $r16;
        java.util.concurrent.Future $r15;
        java.lang.Throwable $r17, $r18, r19;

        $r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

     label1:
        $z2 = interfaceinvoke $r0.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();

        if $z2 == 0 goto label3;

        $r15 = (java.util.concurrent.Future) $r0;

        $r16 = staticinvoke <androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>($r15);

        return $r16;

     label2:
        $r17 := @caughtexception;

        r19 = $r17;

        $r18 = staticinvoke <androidx.concurrent.futures.ListenableFutureKt: java.lang.Throwable nonNullCause(java.util.concurrent.ExecutionException)>(r19);

        throw $r18;

     label3:
        z3 = 0;

        r2 = $r1;

        $r5 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r2);

        specialinvoke $r5.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r6, 1);

        r3 = $r5;

        r4 = (kotlinx.coroutines.CancellableContinuation) r3;

        $r7 = new androidx.concurrent.futures.ToContinuation;

        specialinvoke $r7.<androidx.concurrent.futures.ToContinuation: void <init>(com.google.common.util.concurrent.ListenableFuture,kotlinx.coroutines.CancellableContinuation)>($r0, r4);

        $r10 = (java.lang.Runnable) $r7;

        $r8 = <androidx.concurrent.futures.DirectExecutor: androidx.concurrent.futures.DirectExecutor INSTANCE>;

        $r9 = (java.util.concurrent.Executor) $r8;

        interfaceinvoke $r0.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r10, $r9);

        $r11 = new androidx.concurrent.futures.ListenableFutureKt$await$$inlined$suspendCancellableCoroutine$lambda$1;

        specialinvoke $r11.<androidx.concurrent.futures.ListenableFutureKt$await$$inlined$suspendCancellableCoroutine$lambda$1: void <init>(com.google.common.util.concurrent.ListenableFuture)>($r0);

        $r12 = (kotlin.jvm.functions.Function1) $r11;

        interfaceinvoke r4.<kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)>($r12);

        $r13 = virtualinvoke r3.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r14 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r13 != $r14 goto label4;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r1);

     label4:
        return $r13;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label2;
    }

    private static final java.lang.Throwable nonNullCause(java.util.concurrent.ExecutionException)
    {
        java.util.concurrent.ExecutionException $r0;
        java.lang.Throwable $r1;

        $r0 := @parameter0: java.util.concurrent.ExecutionException;

        $r1 = virtualinvoke $r0.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        if $r1 != null goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void throwNpe()>();

     label1:
        return $r1;
    }

    public static final java.lang.Throwable access$nonNullCause(java.util.concurrent.ExecutionException)
    {
        java.util.concurrent.ExecutionException $r0;
        java.lang.Throwable $r1;

        $r0 := @parameter0: java.util.concurrent.ExecutionException;

        $r1 = staticinvoke <androidx.concurrent.futures.ListenableFutureKt: java.lang.Throwable nonNullCause(java.util.concurrent.ExecutionException)>($r0);

        return $r1;
    }

