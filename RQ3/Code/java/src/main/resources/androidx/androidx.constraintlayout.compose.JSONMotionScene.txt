androidx.constraintlayout.compose.JSONMotionScene
<androidx.constraintlayout.compose.JSONMotionScene: java.util.HashMap constraintSetsContent>
<androidx.constraintlayout.compose.JSONMotionScene: java.util.HashMap transitionsContent>
<androidx.constraintlayout.compose.JSONMotionScene: float forcedProgress>
    public void <init>(java.lang.String)
    {
        androidx.constraintlayout.compose.JSONMotionScene r0;
        java.lang.String r1;
        java.util.HashMap $r2, $r3;

        r0 := @this: androidx.constraintlayout.compose.JSONMotionScene;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "content");

        specialinvoke r0.<androidx.constraintlayout.compose.EditableJSONLayout: void <init>(java.lang.String)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<androidx.constraintlayout.compose.JSONMotionScene: java.util.HashMap constraintSetsContent> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<androidx.constraintlayout.compose.JSONMotionScene: java.util.HashMap transitionsContent> = $r3;

        r0.<androidx.constraintlayout.compose.JSONMotionScene: float forcedProgress> = #NaNF;

        virtualinvoke r0.<androidx.constraintlayout.compose.JSONMotionScene: void initialization()>();

        return;
    }

    public void setConstraintSetContent(java.lang.String, java.lang.String)
    {
        androidx.constraintlayout.compose.JSONMotionScene r0;
        java.lang.String r1, r2;
        java.util.Map r3;
        boolean z0;
        java.util.HashMap $r4;

        r0 := @this: androidx.constraintlayout.compose.JSONMotionScene;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "content");

        $r4 = r0.<androidx.constraintlayout.compose.JSONMotionScene: java.util.HashMap constraintSetsContent>;

        r3 = (java.util.Map) $r4;

        z0 = 0;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void setTransitionContent(java.lang.String, java.lang.String)
    {
        androidx.constraintlayout.compose.JSONMotionScene r0;
        java.lang.String r1, r2;
        java.util.Map r3;
        boolean z0;
        java.util.HashMap $r4;

        r0 := @this: androidx.constraintlayout.compose.JSONMotionScene;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "content");

        $r4 = r0.<androidx.constraintlayout.compose.JSONMotionScene: java.util.HashMap transitionsContent>;

        r3 = (java.util.Map) $r4;

        z0 = 0;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.String getConstraintSet(java.lang.String)
    {
        androidx.constraintlayout.compose.JSONMotionScene r0;
        java.lang.String r1, $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.constraintlayout.compose.JSONMotionScene;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        $r2 = r0.<androidx.constraintlayout.compose.JSONMotionScene: java.util.HashMap constraintSetsContent>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String getConstraintSet(int)
    {
        androidx.constraintlayout.compose.JSONMotionScene r0;
        int i0;
        java.util.Collection r1;
        java.util.HashMap $r2;
        java.lang.Iterable $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: androidx.constraintlayout.compose.JSONMotionScene;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.constraintlayout.compose.JSONMotionScene: java.util.HashMap constraintSetsContent>;

        r1 = virtualinvoke $r2.<java.util.HashMap: java.util.Collection values()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "constraintSetsContent.values");

        $r3 = (java.lang.Iterable) r1;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object elementAtOrNull(java.lang.Iterable,int)>($r3, i0);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public java.lang.String getTransition(java.lang.String)
    {
        androidx.constraintlayout.compose.JSONMotionScene r0;
        java.lang.String r1, $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.constraintlayout.compose.JSONMotionScene;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        $r2 = r0.<androidx.constraintlayout.compose.JSONMotionScene: java.util.HashMap transitionsContent>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public float getForcedProgress()
    {
        androidx.constraintlayout.compose.JSONMotionScene r0;
        float $f0;

        r0 := @this: androidx.constraintlayout.compose.JSONMotionScene;

        $f0 = r0.<androidx.constraintlayout.compose.JSONMotionScene: float forcedProgress>;

        return $f0;
    }

    public void resetForcedProgress()
    {
        androidx.constraintlayout.compose.JSONMotionScene r0;

        r0 := @this: androidx.constraintlayout.compose.JSONMotionScene;

        r0.<androidx.constraintlayout.compose.JSONMotionScene: float forcedProgress> = #NaNF;

        return;
    }

    protected void onNewContent(java.lang.String)
    {
        androidx.constraintlayout.compose.JSONMotionScene r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r4;
        androidx.constraintlayout.compose.MotionScene $r3;

        r0 := @this: androidx.constraintlayout.compose.JSONMotionScene;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "content");

        specialinvoke r0.<androidx.constraintlayout.compose.EditableJSONLayout: void onNewContent(java.lang.String)>(r1);

     label1:
        $r3 = (androidx.constraintlayout.compose.MotionScene) r0;

        staticinvoke <androidx.constraintlayout.compose.ConstraintSetParserKt: void parseMotionSceneJSON(androidx.constraintlayout.compose.MotionScene,java.lang.String)>($r3, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void onNewProgress(float)
    {
        androidx.constraintlayout.compose.JSONMotionScene r0;
        float f0;

        r0 := @this: androidx.constraintlayout.compose.JSONMotionScene;

        f0 := @parameter0: float;

        r0.<androidx.constraintlayout.compose.JSONMotionScene: float forcedProgress> = f0;

        virtualinvoke r0.<androidx.constraintlayout.compose.JSONMotionScene: void signalUpdate()>();

        return;
    }

