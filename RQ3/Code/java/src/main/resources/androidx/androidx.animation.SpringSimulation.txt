androidx.animation.SpringSimulation
<androidx.animation.SpringSimulation: double naturalFreq>
<androidx.animation.SpringSimulation: boolean initialized>
<androidx.animation.SpringSimulation: double gammaPlus>
<androidx.animation.SpringSimulation: double gammaMinus>
<androidx.animation.SpringSimulation: double dampedFreq>
<androidx.animation.SpringSimulation: float dampingRatio>
<androidx.animation.SpringSimulation: float finalPosition>
    public final float getStiffness()
    {
        androidx.animation.SpringSimulation r0;
        double $d0, $d1, $d2;
        float $f0;

        r0 := @this: androidx.animation.SpringSimulation;

        $d1 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d0 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d2 = $d1 * $d0;

        $f0 = (float) $d2;

        return $f0;
    }

    public final void setStiffness(float)
    {
        androidx.animation.SpringSimulation r0, r1;
        float f0, $f1, $f2;
        double d0, d1;
        boolean z0;
        byte $b0;
        java.lang.IllegalArgumentException $r2;
        java.lang.Throwable $r3;

        r0 := @this: androidx.animation.SpringSimulation;

        f0 := @parameter0: float;

        $f1 = virtualinvoke r0.<androidx.animation.SpringSimulation: float getStiffness()>();

        $f2 = (float) 0;

        $b0 = $f1 cmpg $f2;

        if $b0 > 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Spring stiffness constant must be positive.");

        $r3 = (java.lang.Throwable) $r2;

        throw $r3;

     label1:
        d0 = (double) f0;

        r1 = r0;

        z0 = 0;

        d1 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);

        r1.<androidx.animation.SpringSimulation: double naturalFreq> = d1;

        r0.<androidx.animation.SpringSimulation: boolean initialized> = 0;

        return;
    }

    public final float getDampingRatio()
    {
        androidx.animation.SpringSimulation r0;
        float $f0;

        r0 := @this: androidx.animation.SpringSimulation;

        $f0 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        return $f0;
    }

    public final void setDampingRatio(float)
    {
        androidx.animation.SpringSimulation r0;
        float f0, $f1;
        byte $b0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Throwable $r2;

        r0 := @this: androidx.animation.SpringSimulation;

        f0 := @parameter0: float;

        $f1 = (float) 0;

        $b0 = f0 cmpg $f1;

        if $b0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Damping ratio must be non-negative");

        $r2 = (java.lang.Throwable) $r1;

        throw $r2;

     label1:
        r0.<androidx.animation.SpringSimulation: float dampingRatio> = f0;

        r0.<androidx.animation.SpringSimulation: boolean initialized> = 0;

        return;
    }

    public final float getAcceleration(float, float)
    {
        androidx.animation.SpringSimulation r0;
        float f0, f1, f2, $f3, $f4, $f5;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;

        r0 := @this: androidx.animation.SpringSimulation;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f3 = r0.<androidx.animation.SpringSimulation: float finalPosition>;

        f2 = f0 - $f3;

        $d3 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d2 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        d0 = $d3 * $d2;

        $d4 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d6 = 2.0 * $d4;

        $f4 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $d5 = (double) $f4;

        d1 = $d6 * $d5;

        $d8 = neg d0;

        $d7 = (double) f2;

        $d11 = $d8 * $d7;

        $d9 = (double) f1;

        $d10 = d1 * $d9;

        $d12 = $d11 - $d10;

        $f5 = (float) $d12;

        return $f5;
    }

    private final void init()
    {
        androidx.animation.SpringSimulation r0, r3, r4, r5;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, d16, d17, d18, d19, d20, d21, d22, d23, d24, d25;
        boolean $z0, z1, z2, z3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        byte $b0, $b1, $b2, $b3;
        java.lang.IllegalStateException $r1;
        java.lang.Throwable $r2;

        r0 := @this: androidx.animation.SpringSimulation;

        $z0 = r0.<androidx.animation.SpringSimulation: boolean initialized>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $f0 = r0.<androidx.animation.SpringSimulation: float finalPosition>;

        $f1 = staticinvoke <androidx.animation.SpringSimulationKt: float getUNSET()>();

        $b0 = $f0 cmpg $f1;

        if $b0 != 0 goto label2;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Error: Final position of the spring must be set before the animation starts");

        $r2 = (java.lang.Throwable) $r1;

        throw $r2;

     label2:
        $f2 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $d2 = (double) $f2;

        $f3 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $d1 = (double) $f3;

        d0 = $d2 * $d1;

        $f5 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $f4 = (float) 1;

        $b1 = $f5 cmpl $f4;

        if $b1 <= 0 goto label3;

        $f10 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $f11 = neg $f10;

        $d6 = (double) $f11;

        $d5 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d7 = (double) 1;

        d15 = d0 - $d7;

        d16 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        d17 = $d6 * $d5;

        r3 = r0;

        z1 = 0;

        d18 = staticinvoke <java.lang.Math: double sqrt(double)>(d15);

        $d8 = d16 * d18;

        $d9 = d17 + $d8;

        r3.<androidx.animation.SpringSimulation: double gammaPlus> = $d9;

        $f12 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $f13 = neg $f12;

        $d11 = (double) $f13;

        $d10 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d12 = (double) 1;

        d19 = d0 - $d12;

        d20 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        d21 = $d11 * $d10;

        r4 = r0;

        z2 = 0;

        d22 = staticinvoke <java.lang.Math: double sqrt(double)>(d19);

        $d13 = d20 * d22;

        $d14 = d21 - $d13;

        r4.<androidx.animation.SpringSimulation: double gammaMinus> = $d14;

        goto label4;

     label3:
        $f7 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $f6 = (float) 0;

        $b2 = $f7 cmpl $f6;

        if $b2 < 0 goto label4;

        $f9 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $f8 = (float) 1;

        $b3 = $f9 cmpg $f8;

        if $b3 >= 0 goto label4;

        $d3 = (double) 1;

        d23 = $d3 - d0;

        d24 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        r5 = r0;

        z3 = 0;

        d25 = staticinvoke <java.lang.Math: double sqrt(double)>(d23);

        $d4 = d24 * d25;

        r5.<androidx.animation.SpringSimulation: double dampedFreq> = $d4;

     label4:
        r0.<androidx.animation.SpringSimulation: boolean initialized> = 1;

        return;
    }

    public final long updateValues$ui_animation_core_release(float, float, long)
    {
        androidx.animation.SpringSimulation r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f13, f14, $f15, f16, f17;
        long l0, $l3;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, d82, d83, d84, d85, d86, d87, d88, d89, d90, d91, d92, d93, d94, d95, d96, d97, d98, d99, d100, d101, d102, d103, d104, d105, d106, d107, d108, d109, d110, d111, d112, d113, d114, d115, d116, d117, d118, d119, d120, d121, d122, d123, d124, d125, d126, d127, d128, d129, d130, d131, d132, d133, d134, d135, $d136, $d137;
        byte $b1, $b2;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12;

        r0 := @this: androidx.animation.SpringSimulation;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        l0 := @parameter2: long;

        specialinvoke r0.<androidx.animation.SpringSimulation: void init()>();

        $f3 = r0.<androidx.animation.SpringSimulation: float finalPosition>;

        f2 = f0 - $f3;

        $d3 = (double) l0;

        d0 = $d3 / 1000.0;

        d82 = 0.0;

        d83 = 0.0;

        $f5 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $f4 = (float) 1;

        $b1 = $f5 cmpl $f4;

        if $b1 <= 0 goto label1;

        $d65 = (double) f2;

        $d57 = r0.<androidx.animation.SpringSimulation: double gammaMinus>;

        $d56 = (double) f2;

        $d59 = $d57 * $d56;

        $d58 = (double) f1;

        $d63 = $d59 - $d58;

        $d61 = r0.<androidx.animation.SpringSimulation: double gammaMinus>;

        $d60 = r0.<androidx.animation.SpringSimulation: double gammaPlus>;

        $d62 = $d61 - $d60;

        $d64 = $d63 / $d62;

        d84 = $d65 - $d64;

        $d67 = r0.<androidx.animation.SpringSimulation: double gammaMinus>;

        $d66 = (double) f2;

        $d69 = $d67 * $d66;

        $d68 = (double) f1;

        $d73 = $d69 - $d68;

        $d71 = r0.<androidx.animation.SpringSimulation: double gammaMinus>;

        $d70 = r0.<androidx.animation.SpringSimulation: double gammaPlus>;

        $d72 = $d71 - $d70;

        d1 = $d73 / $d72;

        $d74 = r0.<androidx.animation.SpringSimulation: double gammaMinus>;

        d85 = $d74 * d0;

        d86 = d84;

        z0 = 0;

        d87 = staticinvoke <java.lang.Math: double exp(double)>(d85);

        $d75 = r0.<androidx.animation.SpringSimulation: double gammaPlus>;

        d88 = $d75 * d0;

        d89 = d1;

        d90 = d86 * d87;

        z1 = 0;

        d91 = staticinvoke <java.lang.Math: double exp(double)>(d88);

        $d76 = d89 * d91;

        d92 = d90 + $d76;

        $d77 = r0.<androidx.animation.SpringSimulation: double gammaMinus>;

        $d78 = r0.<androidx.animation.SpringSimulation: double gammaMinus>;

        d93 = $d78 * d0;

        d94 = d84 * $d77;

        z2 = 0;

        d95 = staticinvoke <java.lang.Math: double exp(double)>(d93);

        $d79 = r0.<androidx.animation.SpringSimulation: double gammaPlus>;

        $d80 = r0.<androidx.animation.SpringSimulation: double gammaPlus>;

        d96 = $d80 * d0;

        d97 = d1 * $d79;

        d98 = d94 * d95;

        z3 = 0;

        d99 = staticinvoke <java.lang.Math: double exp(double)>(d96);

        $d81 = d97 * d99;

        d100 = d98 + $d81;

        goto label3;

     label1:
        $f6 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $b2 = $f6 cmpg 1.0F;

        if $b2 != 0 goto label2;

        f13 = f2;

        $d41 = (double) f1;

        $d39 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d38 = (double) f2;

        $d40 = $d39 * $d38;

        d101 = $d41 + $d40;

        $d43 = (double) f13;

        $d42 = d101 * d0;

        $d44 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d45 = neg $d44;

        d102 = $d45 * d0;

        d103 = $d43 + $d42;

        z4 = 0;

        d104 = staticinvoke <java.lang.Math: double exp(double)>(d102);

        d92 = d103 * d104;

        $d47 = (double) f13;

        $d46 = d101 * d0;

        $d48 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d49 = neg $d48;

        d105 = $d49 * d0;

        d106 = $d47 + $d46;

        z5 = 0;

        d107 = staticinvoke <java.lang.Math: double exp(double)>(d105);

        $d52 = d106 * d107;

        $d50 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d51 = neg $d50;

        $d53 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d54 = neg $d53;

        d108 = $d54 * d0;

        d109 = d101;

        d110 = $d52 * $d51;

        z6 = 0;

        d111 = staticinvoke <java.lang.Math: double exp(double)>(d108);

        $d55 = d109 * d111;

        d100 = d110 + $d55;

        goto label3;

     label2:
        f14 = f2;

        $d5 = (double) 1;

        $d4 = r0.<androidx.animation.SpringSimulation: double dampedFreq>;

        $d13 = $d5 / $d4;

        $f7 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $d7 = (double) $f7;

        $d6 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d9 = $d7 * $d6;

        $d8 = (double) f2;

        $d11 = $d9 * $d8;

        $d10 = (double) f1;

        $d12 = $d11 + $d10;

        d112 = $d13 * $d12;

        $f8 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $f9 = neg $f8;

        $d15 = (double) $f9;

        $d14 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d16 = $d15 * $d14;

        d113 = $d16 * d0;

        z7 = 0;

        $d17 = staticinvoke <java.lang.Math: double exp(double)>(d113);

        $d18 = r0.<androidx.animation.SpringSimulation: double dampedFreq>;

        d114 = $d18 * d0;

        d115 = (double) f14;

        d116 = $d17;

        z8 = 0;

        d117 = staticinvoke <java.lang.Math: double cos(double)>(d114);

        $d19 = r0.<androidx.animation.SpringSimulation: double dampedFreq>;

        d118 = $d19 * d0;

        d119 = d112;

        d120 = d115 * d117;

        d121 = d116;

        z9 = 0;

        d122 = staticinvoke <java.lang.Math: double sin(double)>(d118);

        $d20 = d119 * d122;

        $d21 = d120 + $d20;

        d92 = d121 * $d21;

        $d22 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d23 = neg $d22;

        $d25 = d92 * $d23;

        $f10 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $d24 = (double) $f10;

        $f11 = r0.<androidx.animation.SpringSimulation: float dampingRatio>;

        $f12 = neg $f11;

        $d27 = (double) $f12;

        $d26 = r0.<androidx.animation.SpringSimulation: double naturalFreq>;

        $d28 = $d27 * $d26;

        d123 = $d28 * d0;

        d124 = $d25 * $d24;

        z10 = 0;

        d125 = staticinvoke <java.lang.Math: double exp(double)>(d123);

        $d29 = r0.<androidx.animation.SpringSimulation: double dampedFreq>;

        $d31 = neg $d29;

        $d30 = (double) f14;

        $d32 = r0.<androidx.animation.SpringSimulation: double dampedFreq>;

        d126 = $d32 * d0;

        d127 = $d31 * $d30;

        d128 = d125;

        d129 = d124;

        z11 = 0;

        d130 = staticinvoke <java.lang.Math: double sin(double)>(d126);

        $d33 = r0.<androidx.animation.SpringSimulation: double dampedFreq>;

        $d34 = r0.<androidx.animation.SpringSimulation: double dampedFreq>;

        d131 = $d34 * d0;

        d132 = $d33 * d112;

        d133 = d127 * d130;

        d134 = d128;

        d135 = d129;

        z12 = 0;

        d2 = staticinvoke <java.lang.Math: double cos(double)>(d131);

        $d35 = d132 * d2;

        $d36 = d133 + $d35;

        $d37 = d134 * $d36;

        d100 = d135 + $d37;

     label3:
        $f15 = r0.<androidx.animation.SpringSimulation: float finalPosition>;

        $d136 = (double) $f15;

        $d137 = d92 + $d136;

        f16 = (float) $d137;

        f17 = (float) d100;

        $l3 = staticinvoke <androidx.animation.SpringSimulationKt: long Motion(float,float)>(f16, f17);

        return $l3;
    }

    public final float getFinalPosition()
    {
        androidx.animation.SpringSimulation r0;
        float $f0;

        r0 := @this: androidx.animation.SpringSimulation;

        $f0 = r0.<androidx.animation.SpringSimulation: float finalPosition>;

        return $f0;
    }

    public final void setFinalPosition(float)
    {
        androidx.animation.SpringSimulation r0;
        float f0;

        r0 := @this: androidx.animation.SpringSimulation;

        f0 := @parameter0: float;

        r0.<androidx.animation.SpringSimulation: float finalPosition> = f0;

        return;
    }

    public void <init>(float)
    {
        androidx.animation.SpringSimulation r0, r1;
        float f0;
        double d0, d1;
        boolean z0;

        r0 := @this: androidx.animation.SpringSimulation;

        f0 := @parameter0: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.animation.SpringSimulation: float finalPosition> = f0;

        d0 = (double) 50.0F;

        r1 = r0;

        z0 = 0;

        d1 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);

        r1.<androidx.animation.SpringSimulation: double naturalFreq> = d1;

        r0.<androidx.animation.SpringSimulation: float dampingRatio> = 1.0F;

        return;
    }

