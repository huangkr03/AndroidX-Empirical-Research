androidx.test.espresso.intent.matcher.BundleMatchers
    public static org.hamcrest.Matcher doesNotHaveKey(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.intent.matcher.BundleMatchers: org.hamcrest.Matcher doesNotHaveKey(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher doesNotHaveKey(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r2, r4;
        androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r3 = new androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher anything()>();

        specialinvoke r3.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,boolean)>(r0, $r2, 0);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasEntry(java.lang.String, java.lang.Object)
    {
        java.lang.String r0;
        java.lang.Object r1;
        org.hamcrest.Matcher $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r1);

        $r4 = staticinvoke <androidx.test.espresso.intent.matcher.BundleMatchers: org.hamcrest.Matcher hasEntry(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, $r3);

        return $r4;
    }

    public static org.hamcrest.Matcher hasEntry(java.lang.String, org.hamcrest.Matcher)
    {
        java.lang.String r0;
        org.hamcrest.Matcher r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.hamcrest.Matcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r3 = staticinvoke <androidx.test.espresso.intent.matcher.BundleMatchers: org.hamcrest.Matcher hasEntry(org.hamcrest.Matcher,org.hamcrest.Matcher)>($r2, r1);

        return $r3;
    }

    public static org.hamcrest.Matcher hasEntry(org.hamcrest.Matcher, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, r1, r4;
        androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r1 := @parameter1: org.hamcrest.Matcher;

        r3 = new androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher;

        specialinvoke r3.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,boolean)>(r0, r1, 1);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasKey(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.intent.matcher.BundleMatchers: org.hamcrest.Matcher hasKey(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasKey(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r2, r4;
        androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r3 = new androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher anything()>();

        specialinvoke r3.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,boolean)>(r0, $r2, 1);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher hasValue(java.lang.Object)
    {
        java.lang.Object r0;
        org.hamcrest.Matcher $r1, $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>(r0);

        $r2 = staticinvoke <androidx.test.espresso.intent.matcher.BundleMatchers: org.hamcrest.Matcher hasValue(org.hamcrest.Matcher)>($r1);

        return $r2;
    }

    public static org.hamcrest.Matcher hasValue(org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r0, $r2, r4;
        androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher r3;

        r0 := @parameter0: org.hamcrest.Matcher;

        r3 = new androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher;

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher any(java.lang.Class)>(class "Ljava/lang/String;");

        specialinvoke r3.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: void <init>(org.hamcrest.Matcher,org.hamcrest.Matcher,boolean)>($r2, r0, 1);

        r4 = (org.hamcrest.Matcher) r3;

        return r4;
    }

    public static org.hamcrest.Matcher isEmpty()
    {
        androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher r1;
        org.hamcrest.Matcher r2;

        r1 = new androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher;

        specialinvoke r1.<androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher: void <init>(androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher-IA)>(null);

        r2 = (org.hamcrest.Matcher) r1;

        return r2;
    }

    public static org.hamcrest.Matcher isEmptyOrNull()
    {
        org.hamcrest.Matcher[] $r0;
        org.hamcrest.Matcher $r1, $r2;
        org.hamcrest.core.AnyOf $r3;

        $r0 = newarray (org.hamcrest.Matcher)[2];

        $r1 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher nullValue()>();

        $r0[0] = $r1;

        $r2 = staticinvoke <androidx.test.espresso.intent.matcher.BundleMatchers: org.hamcrest.Matcher isEmpty()>();

        $r0[1] = $r2;

        $r3 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher[])>($r0);

        return $r3;
    }

    private void <init>()
    {
        androidx.test.espresso.intent.matcher.BundleMatchers r0;

        r0 := @this: androidx.test.espresso.intent.matcher.BundleMatchers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher
<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: org.hamcrest.Matcher keyMatcher>
<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: org.hamcrest.Matcher valueMatcher>
<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: boolean shouldBePresent>
    void <init>(org.hamcrest.Matcher, org.hamcrest.Matcher, boolean)
    {
        androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher r0;
        org.hamcrest.Matcher r1, r2, $r4, $r6;
        boolean z0;
        java.lang.Object $r3, $r5;

        r0 := @this: androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher;

        r1 := @parameter0: org.hamcrest.Matcher;

        r2 := @parameter1: org.hamcrest.Matcher;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>(java.lang.Class)>(class "Landroid/os/Bundle;");

        $r3 = staticinvoke <androidx.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (org.hamcrest.Matcher) $r3;

        r0.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: org.hamcrest.Matcher keyMatcher> = $r4;

        $r5 = staticinvoke <androidx.test.espresso.intent.Checks: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (org.hamcrest.Matcher) $r5;

        r0.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: org.hamcrest.Matcher valueMatcher> = $r6;

        r0.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: boolean shouldBePresent> = z0;

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher r0;
        org.hamcrest.Description r1;
        boolean $z0;
        org.hamcrest.Matcher $r5, $r8;
        java.lang.String $r11;

        r0 := @this: androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("has bundle ");

        $z0 = r0.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: boolean shouldBePresent>;

        if $z0 == 0 goto label1;

        $r11 = "with";

        goto label2;

     label1:
        $r11 = "without";

     label2:
        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r11);

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(": key: ");

        $r5 = r0.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: org.hamcrest.Matcher keyMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r5);

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(" value: ");

        $r8 = r0.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: org.hamcrest.Matcher valueMatcher>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r8);

        return;
    }

    public boolean matchesSafely(android.os.Bundle)
    {
        androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher r0;
        android.os.Bundle r1;
        java.util.Iterator r2;
        java.lang.String r3;
        java.util.Set $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r5, $r8;
        org.hamcrest.Matcher $r6, $r7;

        r0 := @this: androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher;

        r1 := @parameter0: android.os.Bundle;

        $r4 = virtualinvoke r1.<android.os.Bundle: java.util.Set keySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r5;

        $r6 = r0.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: org.hamcrest.Matcher keyMatcher>;

        $z2 = interfaceinvoke $r6.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>(r3);

        if $z2 == 0 goto label2;

        $r7 = r0.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: org.hamcrest.Matcher valueMatcher>;

        $r8 = virtualinvoke r1.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r3);

        $z3 = interfaceinvoke $r7.<org.hamcrest.Matcher: boolean matches(java.lang.Object)>($r8);

        if $z3 == 0 goto label2;

        $z4 = r0.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: boolean shouldBePresent>;

        return $z4;

     label2:
        goto label1;

     label3:
        $z1 = r0.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: boolean shouldBePresent>;

        if $z1 != 0 goto label4;

        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        return $z5;
    }

    public volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher r0;
        java.lang.Object r1;
        android.os.Bundle $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.os.Bundle) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.intent.matcher.BundleMatchers$BundleMatcher: boolean matchesSafely(android.os.Bundle)>($r2);

        return $z0;
    }

androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher-IA
androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher
    private void <init>()
    {
        androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher r0;

        r0 := @this: androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    void <init>(androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher-IA)
    {
        androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher r0;
        androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher-IA r1;

        r0 := @this: androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher;

        r1 := @parameter0: androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher-IA;

        specialinvoke r0.<androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher r0;
        org.hamcrest.Description r1;

        r0 := @this: androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher;

        r1 := @parameter0: org.hamcrest.Description;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("is empty bundle");

        return;
    }

    protected boolean matchesSafely(android.os.Bundle)
    {
        androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher r0;
        android.os.Bundle r1;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher;

        r1 := @parameter0: android.os.Bundle;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean isEmpty()>();

        return $z0;
    }

    protected volatile boolean matchesSafely(java.lang.Object)
    {
        androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher r0;
        java.lang.Object r1;
        android.os.Bundle $r2;
        boolean $z0;

        r0 := @this: androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.os.Bundle) r1;

        $z0 = virtualinvoke r0.<androidx.test.espresso.intent.matcher.BundleMatchers$EmptyBundleMatcher: boolean matchesSafely(android.os.Bundle)>($r2);

        return $z0;
    }

