androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int defaultRecursionLimit>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int recursionDepth>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int recursionLimit>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int sizeLimit>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStreamReader wrapper>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: boolean shouldDiscardUnknownFields>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: double readDouble()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: float readFloat()>
    public static int decodeZigZag32(int)
    {
        int i0, $i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        $i3 = i0 >>> 1;

        $i1 = i0 & 1;

        $i2 = neg $i1;

        $i4 = $i3 ^ $i2;

        return $i4;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int getTotalBytesRead()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int pushLimit(int)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int readEnum()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int readFixed32()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int readInt32()>
    public static int readRawVarint32(int, java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1, $r2, $r3;
        java.lang.Throwable r4, r5, r6;

        i5 := @parameter0: int;

        r0 := @parameter1: java.io.InputStream;

        $i0 = i5 & 128;

        if $i0 != 0 goto label1;

        return i5;

     label1:
        i6 = i5 & 127;

        i7 = 7;

     label2:
        if i7 >= 32 goto label5;

        i8 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if i8 != -1 goto label3;

        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r4 = (java.lang.Throwable) $r3;

        throw r4;

     label3:
        $i2 = i8 & 127;

        $i3 = $i2 << i7;

        i6 = i6 | $i3;

        $i4 = i8 & 128;

        if $i4 != 0 goto label4;

        return i6;

     label4:
        i7 = i7 + 7;

        goto label2;

     label5:
        if i7 >= 64 goto label7;

        i9 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if i9 != -1 goto label6;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r5 = (java.lang.Throwable) $r2;

        throw r5;

     label6:
        $i1 = i9 & 128;

        if $i1 != 0 goto label8;

        return i6;

     label7:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r6 = (java.lang.Throwable) $r1;

        throw r6;

     label8:
        i7 = i7 + 7;

        goto label5;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int readSFixed32()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int readSInt32()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int readTag()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int readUInt32()>
    public static long decodeZigZag64(long)
    {
        long l0, $l1, $l2, $l3, $l4;

        l0 := @parameter0: long;

        $l3 = l0 >>> 1;

        $l1 = l0 & 1L;

        $l2 = neg $l1;

        $l4 = $l3 ^ $l2;

        return $l4;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: long readFixed64()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: long readInt64()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: long readSFixed64()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: long readSInt64()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: long readUInt64()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: androidx.test.espresso.remote.internal.deps.protobuf.ByteString readBytes()>
    public static androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(java.io.InputStream)
    {
        java.io.InputStream r0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream $r1;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(java.io.InputStream,int)>(r0, 4096);

        return $r1;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(java.nio.ByteBuffer,boolean)>(r0, 0);

        return $r1;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(byte[])
    {
        byte[] r0;
        int $i0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(java.io.InputStream, int)
    {
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        byte[] $r1;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream $r2;
        java.io.InputStream r3;
        java.lang.IllegalArgumentException r4;

        r3 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        if i0 > 0 goto label1;

        r4 = new java.lang.IllegalArgumentException;

        specialinvoke r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bufferSize must be > 0");

        throw r4;

     label1:
        if r3 != null goto label2;

        $r1 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(byte[])>($r1);

        return $r2;

     label2:
        r0 = new androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void <init>(java.io.InputStream,int,androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder-IA)>(r3, i0, null);

        return r0;
    }

    static androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(java.nio.ByteBuffer, boolean)
    {
        java.nio.ByteBuffer r0, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r1;
        boolean $z0, $z1, $z2, z3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream $r4, $r6;
        byte[] $r5, r7;

        r0 := @parameter0: java.nio.ByteBuffer;

        z3 := @parameter1: boolean;

        $z0 = virtualinvoke r0.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<java.nio.ByteBuffer: byte[] array()>();

        $i2 = virtualinvoke r0.<java.nio.ByteBuffer: int arrayOffset()>();

        $i3 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        $i4 = $i2 + $i3;

        $i5 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $r6 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(byte[],int,int,boolean)>($r5, $i4, $i5, z3);

        return $r6;

     label1:
        $z1 = virtualinvoke r0.<java.nio.ByteBuffer: boolean isDirect()>();

        if $z1 == 0 goto label2;

        $z2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean isSupported()>();

        if $z2 == 0 goto label2;

        r1 = new androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void <init>(java.nio.ByteBuffer,boolean,androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder-IA)>(r0, z3, null);

        return r1;

     label2:
        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        r7 = newarray (byte)[$i0];

        $r2 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r7);

        $i1 = lengthof r7;

        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(byte[],int,int,boolean)>(r7, 0, $i1, 1);

        return $r4;
    }

    public static androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(byte[],int,int,boolean)>(r0, i0, i1, 0);

        return $r1;
    }

    static androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream newInstance(byte[], int, int, boolean)
    {
        byte[] r0;
        int i0, i1;
        boolean z0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 = new androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: void <init>(byte[],int,int,boolean,androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder-IA)>(r0, i0, i1, z0, null);

        virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pushLimit(int)>(i1);

        goto label1;

     label1:
        return r1;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: java.lang.String readString()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: java.lang.String readStringRequireUtf8()>
    static void <clinit>()
    {
        <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int defaultRecursionLimit> = 100;

        return;
    }

    private void <init>()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int defaultRecursionLimit>;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int recursionLimit> = $i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: int sizeLimit> = 2147483647;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: boolean shouldDiscardUnknownFields> = 0;

        return;
    }

    void <init>(androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream-IA)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream r0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream-IA r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream-IA;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: void <init>()>();

        return;
    }

<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: void checkLastTagWas(int)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: void popLimit(int)>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: boolean isAtEnd()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: boolean readBool()>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: boolean skipField(int)>
androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder-IA
androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: boolean immutable>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int bufferSizeAfterLimit>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int startPos>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int lastTag>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: boolean enableAliasing>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int currentLimit>
    public byte readRawByte() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        byte[] r1;
        int i0, $i1, $i2, $i3;
        byte $b4;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r2;
        java.lang.Throwable r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        if $i2 != $i1 goto label1;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r3 = (java.lang.Throwable) $r2;

        throw r3;

     label1:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer>;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i3 = i0 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = $i3;

        $b4 = r1[i0];

        return $b4;
    }

    public double readDouble() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        long $l0;
        double $d0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: long readRawLittleEndian64()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public float readFloat() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int $i0;
        float $f0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int readRawLittleEndian32()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public int getTotalBytesRead()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int startPos>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public int pushLimit(int) throws androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0, $i1, i2, i3;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1, $r2, $r3;
        java.lang.Throwable r4, r5, r6;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i2 := @parameter0: int;

        if i2 >= 0 goto label1;

        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()>();

        r4 = (java.lang.Throwable) $r3;

        throw r4;

     label1:
        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int getTotalBytesRead()>();

        i3 = i2 + $i1;

        if i3 >= 0 goto label2;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException parseFailure()>();

        r5 = (java.lang.Throwable) $r2;

        throw r5;

     label2:
        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int currentLimit>;

        if i3 <= i0 goto label3;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r6 = (java.lang.Throwable) $r1;

        throw r6;

     label3:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int currentLimit> = i3;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: void recomputeBufferSizeAfterLimit()>();

        return i0;
    }

    public int readEnum() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int readRawVarint32()>();

        return $i0;
    }

    public int readFixed32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int readRawLittleEndian32()>();

        return $i0;
    }

    public int readInt32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int readRawVarint32()>();

        return $i0;
    }

    public int readRawLittleEndian32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0, $i1, $i2, $i3, $i5, $i8, $i10, $i13, $i14, $i15, $i18, $i19, $i20;
        byte[] r1;
        byte $b4, $b6, $b11, $b16;
        short $s7, $s9, $s12, $s17;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r2;
        java.lang.Throwable r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        $i2 = $i1 - i0;

        if $i2 >= 4 goto label1;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r3 = (java.lang.Throwable) $r2;

        throw r3;

     label1:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer>;

        $i3 = i0 + 4;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = $i3;

        $b4 = r1[i0];

        $s9 = $b4 & 255;

        $i5 = i0 + 1;

        $b6 = r1[$i5];

        $s7 = $b6 & 255;

        $i8 = $s7 << 8;

        $i14 = $s9 | $i8;

        $i10 = i0 + 2;

        $b11 = r1[$i10];

        $s12 = $b11 & 255;

        $i13 = $s12 << 16;

        $i19 = $i14 | $i13;

        $i15 = i0 + 3;

        $b16 = r1[$i15];

        $s17 = $b16 & 255;

        $i18 = $s17 << 24;

        $i20 = $i19 | $i18;

        return $i20;
    }

    public int readRawVarint32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0, $i1, $i2, $i3, $i5, $i7, $i9, $i10, $i11, i17, $i19, i20, i22, i23, i24, i25, i26, i27, i28, i29, i30, i32, i33;
        byte $b4, $b6, $b8, $b12, $b13, $b14, $b15, $b16, b21, b31;
        long $l18;
        byte[] r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i17 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        if $i1 != i17 goto label02;

     label01:
        $l18 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: long readRawVarint64SlowPath()>();

        $i19 = (int) $l18;

        return $i19;

     label02:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer>;

        i20 = i17 + 1;

        b21 = r1[i17];

        if b21 < 0 goto label03;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = i20;

        return b21;

     label03:
        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        $i3 = $i2 - i20;

        if $i3 < 9 goto label01;

        i22 = i20 + 1;

        $b4 = r1[i20];

        $i5 = $b4 << 7;

        i23 = b21 ^ $i5;

        if i23 >= 0 goto label05;

        i24 = i23 ^ -128;

        i25 = i22;

     label04:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = i25;

        return i24;

     label05:
        i26 = i22 + 1;

        $b6 = r1[i22];

        $i7 = $b6 << 14;

        i27 = i23 ^ $i7;

        if i27 < 0 goto label06;

        i24 = i27 ^ 16256;

        i25 = i26;

        goto label04;

     label06:
        i28 = i26 + 1;

        $b8 = r1[i26];

        $i9 = $b8 << 21;

        i29 = i27 ^ $i9;

        if i29 >= 0 goto label07;

        i24 = i29 ^ -2080896;

        i25 = i28;

        goto label04;

     label07:
        i30 = i28 + 1;

        b31 = r1[i28];

        $i10 = b31 << 28;

        $i11 = i29 ^ $i10;

        i0 = $i11 ^ 266354560;

        if b31 >= 0 goto label12;

        i25 = i30 + 1;

        $b12 = r1[i30];

        if $b12 >= 0 goto label11;

        i32 = i25 + 1;

        $b13 = r1[i25];

        if $b13 >= 0 goto label10;

        i25 = i32 + 1;

        $b14 = r1[i32];

        if $b14 >= 0 goto label09;

        i33 = i25 + 1;

        $b15 = r1[i25];

        if $b15 >= 0 goto label08;

        i25 = i33 + 1;

        $b16 = r1[i33];

        if $b16 < 0 goto label01;

        i24 = i0;

        goto label04;

     label08:
        i25 = i33;

        i24 = i0;

        goto label04;

     label09:
        i24 = i0;

        goto label04;

     label10:
        i25 = i32;

        i24 = i0;

        goto label04;

     label11:
        i24 = i0;

        goto label04;

     label12:
        i25 = i30;

        i24 = i0;

        goto label04;
    }

    public int readSFixed32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int readRawLittleEndian32()>();

        return $i0;
    }

    public int readSInt32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int $i0, $i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int readRawVarint32()>();

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int decodeZigZag32(int)>($i0);

        return $i1;
    }

    public int readTag() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $z0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: boolean isAtEnd()>();

        if $z0 == 0 goto label1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int lastTag> = 0;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int readRawVarint32()>();

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int lastTag> = $i0;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int lastTag>;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagFieldNumber(int)>($i1);

        if $i2 != 0 goto label2;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException invalidTag()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label2:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int lastTag>;

        return $i3;
    }

    public int readUInt32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int readRawVarint32()>();

        return $i0;
    }

    public long readFixed64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: long readRawLittleEndian64()>();

        return $l0;
    }

    public long readInt64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: long readRawVarint64()>();

        return $l0;
    }

    public long readRawLittleEndian64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0, $i1, $i2, $i3, $i6, $i12, $i18, $i24, $i30, $i36, $i42;
        byte[] r1;
        byte $b4, $b7, $b13, $b19, $b25, $b31, $b37, $b43;
        long $l5, $l8, $l9, $l10, $l11, $l14, $l15, $l16, $l17, $l20, $l21, $l22, $l23, $l26, $l27, $l28, $l29, $l32, $l33, $l34, $l35, $l38, $l39, $l40, $l41, $l44, $l45, $l46, $l47, $l48;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r2;
        java.lang.Throwable r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        $i2 = $i1 - i0;

        if $i2 >= 8 goto label1;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r3 = (java.lang.Throwable) $r2;

        throw r3;

     label1:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer>;

        $i3 = i0 + 8;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = $i3;

        $b4 = r1[i0];

        $l5 = (long) $b4;

        $l11 = $l5 & 255L;

        $i6 = i0 + 1;

        $b7 = r1[$i6];

        $l8 = (long) $b7;

        $l9 = $l8 & 255L;

        $l10 = $l9 << 8;

        $l17 = $l11 | $l10;

        $i12 = i0 + 2;

        $b13 = r1[$i12];

        $l14 = (long) $b13;

        $l15 = $l14 & 255L;

        $l16 = $l15 << 16;

        $l23 = $l17 | $l16;

        $i18 = i0 + 3;

        $b19 = r1[$i18];

        $l20 = (long) $b19;

        $l21 = $l20 & 255L;

        $l22 = $l21 << 24;

        $l29 = $l23 | $l22;

        $i24 = i0 + 4;

        $b25 = r1[$i24];

        $l26 = (long) $b25;

        $l27 = $l26 & 255L;

        $l28 = $l27 << 32;

        $l35 = $l29 | $l28;

        $i30 = i0 + 5;

        $b31 = r1[$i30];

        $l32 = (long) $b31;

        $l33 = $l32 & 255L;

        $l34 = $l33 << 40;

        $l41 = $l35 | $l34;

        $i36 = i0 + 6;

        $b37 = r1[$i36];

        $l38 = (long) $b37;

        $l39 = $l38 & 255L;

        $l40 = $l39 << 48;

        $l47 = $l41 | $l40;

        $i42 = i0 + 7;

        $b43 = r1[$i42];

        $l44 = (long) $b43;

        $l45 = $l44 & 255L;

        $l46 = $l45 << 56;

        $l48 = $l47 | $l46;

        return $l48;
    }

    public long readRawVarint64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        long l0, l1, $l12, $l13, $l14, $l17, $l18, $l21, $l22, $l25, $l26, $l29, $l30, $l31, $l34, $l39, $l41, l46, l48, l51, l54, l56, l57, l58, l60, l61, l62, l63;
        int $i2, $i3, $i4, $i6, $i8, $i10, $i36, $i37, $i38, i40, i42, i44, i45, i47, i49, i50, i52, i53, i55, i59, i64;
        byte $b5, $b7, $b9, $b11, $b15, $b16, $b19, $b20, $b23, $b24, $b27, $b28, $b32, $b33, $b35, b43;
        byte[] r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i40 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        if $i2 != i40 goto label02;

     label01:
        $l41 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: long readRawVarint64SlowPath()>();

        return $l41;

     label02:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer>;

        i42 = i40 + 1;

        b43 = r1[i40];

        if b43 < 0 goto label03;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = i42;

        $l39 = (long) b43;

        return $l39;

     label03:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        $i4 = $i3 - i42;

        if $i4 < 9 goto label01;

        i44 = i42 + 1;

        $b5 = r1[i42];

        $i6 = $b5 << 7;

        i45 = b43 ^ $i6;

        if i45 >= 0 goto label05;

        $i38 = i45 ^ -128;

        l46 = (long) $i38;

        i47 = i44;

        l48 = l46;

     label04:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = i47;

        return l48;

     label05:
        i49 = i44 + 1;

        $b7 = r1[i44];

        $i8 = $b7 << 14;

        i50 = i45 ^ $i8;

        if i50 < 0 goto label06;

        $i37 = i50 ^ 16256;

        l51 = (long) $i37;

        i47 = i49;

        l48 = l51;

        goto label04;

     label06:
        i52 = i49 + 1;

        $b9 = r1[i49];

        $i10 = $b9 << 21;

        i53 = i50 ^ $i10;

        if i53 >= 0 goto label07;

        $i36 = i53 ^ -2080896;

        l54 = (long) $i36;

        i47 = i52;

        l48 = l54;

        goto label04;

     label07:
        i55 = i52 + 1;

        $l14 = (long) i53;

        $b11 = r1[i52];

        $l12 = (long) $b11;

        $l13 = $l12 << 28;

        l0 = $l14 ^ $l13;

        $b15 = l0 cmp 0L;

        if $b15 < 0 goto label08;

        l56 = l0 ^ 266354560L;

        i47 = i55;

        l48 = l56;

        goto label04;

     label08:
        i47 = i55 + 1;

        $b16 = r1[i55];

        $l17 = (long) $b16;

        $l18 = $l17 << 35;

        l57 = l0 ^ $l18;

        $b19 = l57 cmp 0L;

        if $b19 >= 0 goto label09;

        l58 = l57 ^ -34093383808L;

        l48 = l58;

        goto label04;

     label09:
        i59 = i47 + 1;

        $b20 = r1[i47];

        $l21 = (long) $b20;

        $l22 = $l21 << 42;

        l60 = l57 ^ $l22;

        $b23 = l60 cmp 0L;

        if $b23 < 0 goto label10;

        l61 = l60 ^ 4363953127296L;

        i47 = i59;

        l48 = l61;

        goto label04;

     label10:
        i47 = i59 + 1;

        $b24 = r1[i59];

        $l25 = (long) $b24;

        $l26 = $l25 << 49;

        l62 = l60 ^ $l26;

        $b27 = l62 cmp 0L;

        if $b27 >= 0 goto label11;

        l63 = l62 ^ -558586000294016L;

        l48 = l63;

        goto label04;

     label11:
        i64 = i47 + 1;

        $b28 = r1[i47];

        $l29 = (long) $b28;

        $l30 = $l29 << 56;

        $l31 = l62 ^ $l30;

        l1 = $l31 ^ 71499008037633920L;

        $b32 = l1 cmp 0L;

        if $b32 >= 0 goto label12;

        i47 = i64 + 1;

        $b33 = r1[i64];

        $l34 = (long) $b33;

        $b35 = $l34 cmp 0L;

        if $b35 < 0 goto label01;

        l48 = l1;

        goto label04;

     label12:
        i47 = i64;

        l48 = l1;

        goto label04;
    }

    long readRawVarint64SlowPath() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        byte b0, $b2;
        long l1, $l3, $l4, l6;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        short $s5;
        int i7;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        l6 = 0L;

        i7 = 0;

     label1:
        if i7 >= 64 goto label2;

        b0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte readRawByte()>();

        $b2 = b0 & 127;

        $l3 = (long) $b2;

        $l4 = $l3 << i7;

        l1 = l6 | $l4;

        $s5 = b0 & 128;

        if $s5 != 0 goto label3;

        return l1;

     label2:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label3:
        i7 = i7 + 7;

        l6 = l1;

        goto label1;
    }

    public long readSFixed64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: long readRawLittleEndian64()>();

        return $l0;
    }

    public long readSInt64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        long $l0, $l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: long readRawVarint64()>();

        $l1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: long decodeZigZag64(long)>($l0);

        return $l1;
    }

    public long readUInt64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: long readRawVarint64()>();

        return $l0;
    }

    public androidx.test.espresso.remote.internal.deps.protobuf.ByteString readBytes() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        byte[] $r1, $r4, $r5;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r2, $r3, r6;
        boolean $z0, $z1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int readRawVarint32()>();

        if i0 <= 0 goto label3;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i3 = $i2 - $i1;

        if i0 > $i3 goto label3;

        $z0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: boolean immutable>;

        if $z0 == 0 goto label2;

        $z1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: boolean enableAliasing>;

        if $z1 == 0 goto label2;

        $r5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer>;

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        r6 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString wrap(byte[],int,int)>($r5, $i7, i0);

     label1:
        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i6 = $i5 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = $i6;

        return r6;

     label2:
        $r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer>;

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        r6 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString copyFrom(byte[],int,int)>($r4, $i4, i0);

        goto label1;

     label3:
        if i0 != 0 goto label4;

        $r3 = <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString EMPTY>;

        return $r3;

     label4:
        $r1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] readRawBytes(int)>(i0);

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString wrap(byte[])>($r1);

        return $r2;
    }

    public java.lang.String readString() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String r1, r6;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r2, $r3;
        java.nio.charset.Charset $r4;
        byte[] $r5;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int readRawVarint32()>();

        if i0 <= 0 goto label1;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i3 = $i2 - $i1;

        if i0 > $i3 goto label1;

        r6 = new java.lang.String;

        r1 = r6;

        $r5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer>;

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $r4 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        specialinvoke r6.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r5, $i4, i0, $r4);

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i6 = $i5 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = $i6;

        return r1;

     label1:
        if i0 != 0 goto label4;

        return "";

     label2:
        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r7 = (java.lang.Throwable) $r2;

        throw r7;

     label3:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()>();

        r8 = (java.lang.Throwable) $r3;

        throw r8;

     label4:
        if i0 >= 0 goto label2;

        goto label3;
    }

    public java.lang.String readStringRequireUtf8() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1, $r2;
        byte[] r3;
        java.lang.String r4;
        java.lang.Throwable r5, r6;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int readRawVarint32()>();

        if i0 <= 0 goto label1;

        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i4 = $i3 - $i2;

        if i0 > $i4 goto label1;

        r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer>;

        i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: java.lang.String decodeUtf8(byte[],int,int)>(r3, i1, i0);

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i6 = $i5 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = $i6;

        return r4;

     label1:
        if i0 != 0 goto label4;

        return "";

     label2:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r5 = (java.lang.Throwable) $r1;

        throw r5;

     label3:
        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()>();

        r6 = (java.lang.Throwable) $r2;

        throw r6;

     label4:
        if i0 > 0 goto label2;

        goto label3;
    }

    private void <init>(byte[], int, int, boolean)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        byte[] r1;
        int i0, i1, $i2, $i3;
        boolean z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: void <init>(androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream-IA)>(null);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int currentLimit> = 2147483647;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer> = r1;

        $i2 = i0 + i1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit> = $i2;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = i0;

        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int startPos> = $i3;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: boolean immutable> = z0;

        return;
    }

    void <init>(byte[], int, int, boolean, androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder-IA)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        byte[] r1;
        int i0, i1;
        boolean z0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder-IA r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r2 := @parameter4: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder-IA;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: void <init>(byte[],int,int,boolean)>(r1, i0, i1, z0);

        return;
    }

    public void checkLastTagWas(int) throws androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0, $i1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int lastTag>;

        if $i1 == i0 goto label1;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException invalidEndTag()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label1:
        return;
    }

    public void popLimit(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i0 := @parameter0: int;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int currentLimit> = i0;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: void recomputeBufferSizeAfterLimit()>();

        return;
    }

    private void recomputeBufferSizeAfterLimit()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int bufferSizeAfterLimit>;

        $i3 = $i2 + $i1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit> = $i3;

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int startPos>;

        i0 = $i5 - $i4;

        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int currentLimit>;

        if i0 <= $i6 goto label1;

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int currentLimit>;

        $i8 = i0 - $i7;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int bufferSizeAfterLimit> = $i8;

        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        $i9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int bufferSizeAfterLimit>;

        $i11 = $i10 - $i9;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit> = $i11;

        return;

     label1:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int bufferSizeAfterLimit> = 0;

        return;
    }

    public void skipMessage() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

     label1:
        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int readTag()>();

        if i0 == 0 goto label2;

        $z0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: boolean skipField(int)>(i0);

        if $z0 != 0 goto label1;

     label2:
        return;
    }

    public void skipRawBytes(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1, $r2;
        java.lang.Throwable r3, r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i0 := @parameter0: int;

        if i0 < 0 goto label3;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i3 = $i2 - $i1;

        if i0 > $i3 goto label3;

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i5 = $i4 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = $i5;

        return;

     label1:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r3 = (java.lang.Throwable) $r1;

        throw r3;

     label2:
        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()>();

        r4 = (java.lang.Throwable) $r2;

        throw r4;

     label3:
        if i0 >= 0 goto label1;

        goto label2;
    }

    private void skipRawVarint() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i2 = $i1 - $i0;

        if $i2 < 10 goto label1;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: void skipRawVarintFastPath()>();

        return;

     label1:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: void skipRawVarintSlowPath()>();

        return;
    }

    private void skipRawVarintFastPath() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        byte[] r1;
        int i0, $i1, i3;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r2;
        byte $b2;
        java.lang.Throwable r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i3 = 0;

     label1:
        if i3 >= 10 goto label2;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer>;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i1 = i0 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = $i1;

        $b2 = r1[i0];

        if $b2 < 0 goto label3;

        return;

     label2:
        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r3 = (java.lang.Throwable) $r2;

        throw r3;

     label3:
        i3 = i3 + 1;

        goto label1;
    }

    private void skipRawVarintSlowPath() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        byte $b0;
        int i1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i1 = 0;

     label1:
        if i1 >= 10 goto label2;

        $b0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte readRawByte()>();

        if $b0 < 0 goto label3;

        return;

     label2:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label3:
        i1 = i1 + 1;

        goto label1;
    }

    public boolean isAtEnd() throws java.io.IOException
    {
        int $i0, $i1;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        boolean z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        if $i1 != $i0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    public boolean readBool() throws java.io.IOException
    {
        long $l0;
        byte $b1;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        boolean z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: long readRawVarint64()>();

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    public boolean skipField(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0, $i1, $i2, $i3, $i4;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>(i0);

        tableswitch($i1)
        {
            case 0: goto label7;
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label3;
            case 5: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label2:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: void skipRawBytes(int)>(4);

        return 1;

     label3:
        return 0;

     label4:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: void skipMessage()>();

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagFieldNumber(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int makeTag(int,int)>($i2, 4);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: void checkLastTagWas(int)>($i3);

        return 1;

     label5:
        $i4 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int readRawVarint32()>();

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: void skipRawBytes(int)>($i4);

        return 1;

     label6:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: void skipRawBytes(int)>(8);

        return 1;

     label7:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: void skipRawVarint()>();

        return 1;
    }

    public byte[] readRawBytes(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1, $r3;
        byte[] $r2, $r4, $r5;
        java.lang.Throwable r6, r7;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int limit>;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i4 = $i3 - $i2;

        if i0 > $i4 goto label1;

        i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $i6 = $i5 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos> = $i6;

        $r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: byte[] buffer>;

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$ArrayDecoder: int pos>;

        $r5 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r4, i1, $i7);

        return $r5;

     label1:
        if i0 > 0 goto label2;

        if i0 == 0 goto label3;

        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()>();

        r6 = (java.lang.Throwable) $r3;

        throw r6;

     label2:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r7 = (java.lang.Throwable) $r1;

        throw r7;

     label3:
        $r2 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        return $r2;
    }

androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder$RefillCallback
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder$RefillCallback: void onRefill()>
androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder-IA
androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: java.io.InputStream input>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSizeAfterLimit>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int lastTag>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int currentLimit>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder$RefillCallback refillCallback>
    public byte readRawByte() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        byte[] r1;
        int i0, $i1, $i2, $i3;
        byte $b4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        if $i2 != $i1 goto label1;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void refillBuffer(int)>(1);

     label1:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i3 = i0 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = $i3;

        $b4 = r1[i0];

        return $b4;
    }

    public double readDouble() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        long $l0;
        double $d0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: long readRawLittleEndian64()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public float readFloat() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int $i0;
        float $f0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int readRawLittleEndian32()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    private static int available(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0;

        r0 := @parameter0: java.io.InputStream;

        i0 = virtualinvoke r0.<java.io.InputStream: int available()>();

        goto label1;

     label1:
        return i0;
    }

    public int getTotalBytesRead()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i2 = $i1 + $i0;

        return $i2;
    }

    public int pushLimit(int) throws androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int i0, $i1, $i2, $i3, i4, i5;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1, $r2;
        java.lang.Throwable r3, r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i4 := @parameter0: int;

        if i4 >= 0 goto label1;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()>();

        r3 = (java.lang.Throwable) $r2;

        throw r3;

     label1:
        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i3 = $i2 + $i1;

        i5 = i4 + $i3;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int currentLimit>;

        if i5 <= i0 goto label2;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r4 = (java.lang.Throwable) $r1;

        throw r4;

     label2:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int currentLimit> = i5;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void recomputeBufferSizeAfterLimit()>();

        return i0;
    }

    private static int read(java.io.InputStream, byte[], int, int) throws java.io.IOException
    {
        byte[] r0;
        int i0, i1, i2;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r0 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r0, i0, i1);

        goto label1;

     label1:
        return i2;
    }

    public int readEnum() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int readRawVarint32()>();

        return $i0;
    }

    public int readFixed32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int readRawLittleEndian32()>();

        return $i0;
    }

    public int readInt32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int readRawVarint32()>();

        return $i0;
    }

    public int readRawLittleEndian32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        byte[] r1;
        int $i0, $i1, $i2, $i4, $i7, $i9, $i12, $i13, $i14, $i17, $i18, $i19, i20;
        byte $b3, $b5, $b10, $b15;
        short $s6, $s8, $s11, $s16;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i20 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i1 = $i0 - i20;

        if $i1 >= 4 goto label1;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void refillBuffer(int)>(4);

        i20 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

     label1:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        $i2 = i20 + 4;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = $i2;

        $b3 = r1[i20];

        $s8 = $b3 & 255;

        $i4 = i20 + 1;

        $b5 = r1[$i4];

        $s6 = $b5 & 255;

        $i7 = $s6 << 8;

        $i13 = $s8 | $i7;

        $i9 = i20 + 2;

        $b10 = r1[$i9];

        $s11 = $b10 & 255;

        $i12 = $s11 << 16;

        $i18 = $i13 | $i12;

        $i14 = i20 + 3;

        $b15 = r1[$i14];

        $s16 = $b15 & 255;

        $i17 = $s16 << 24;

        $i19 = $i18 | $i17;

        return $i19;
    }

    public int readRawVarint32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int i0, $i1, $i2, $i3, $i5, $i7, $i9, $i10, $i11, i17, $i19, i20, i22, i23, i24, i25, i26, i27, i28, i29, i30, i32, i33;
        byte $b4, $b6, $b8, $b12, $b13, $b14, $b15, $b16, b21, b31;
        long $l18;
        byte[] r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i17 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        if $i1 != i17 goto label02;

     label01:
        $l18 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: long readRawVarint64SlowPath()>();

        $i19 = (int) $l18;

        return $i19;

     label02:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        i20 = i17 + 1;

        b21 = r1[i17];

        if b21 < 0 goto label03;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = i20;

        return b21;

     label03:
        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i3 = $i2 - i20;

        if $i3 < 9 goto label01;

        i22 = i20 + 1;

        $b4 = r1[i20];

        $i5 = $b4 << 7;

        i23 = b21 ^ $i5;

        if i23 >= 0 goto label05;

        i24 = i23 ^ -128;

        i25 = i22;

     label04:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = i25;

        return i24;

     label05:
        i26 = i22 + 1;

        $b6 = r1[i22];

        $i7 = $b6 << 14;

        i27 = i23 ^ $i7;

        if i27 < 0 goto label06;

        i24 = i27 ^ 16256;

        i25 = i26;

        goto label04;

     label06:
        i28 = i26 + 1;

        $b8 = r1[i26];

        $i9 = $b8 << 21;

        i29 = i27 ^ $i9;

        if i29 >= 0 goto label07;

        i24 = i29 ^ -2080896;

        i25 = i28;

        goto label04;

     label07:
        i30 = i28 + 1;

        b31 = r1[i28];

        $i10 = b31 << 28;

        $i11 = i29 ^ $i10;

        i0 = $i11 ^ 266354560;

        if b31 >= 0 goto label12;

        i25 = i30 + 1;

        $b12 = r1[i30];

        if $b12 >= 0 goto label11;

        i32 = i25 + 1;

        $b13 = r1[i25];

        if $b13 >= 0 goto label10;

        i25 = i32 + 1;

        $b14 = r1[i32];

        if $b14 >= 0 goto label09;

        i33 = i25 + 1;

        $b15 = r1[i25];

        if $b15 >= 0 goto label08;

        i25 = i33 + 1;

        $b16 = r1[i33];

        if $b16 < 0 goto label01;

        i24 = i0;

        goto label04;

     label08:
        i25 = i33;

        i24 = i0;

        goto label04;

     label09:
        i24 = i0;

        goto label04;

     label10:
        i25 = i32;

        i24 = i0;

        goto label04;

     label11:
        i24 = i0;

        goto label04;

     label12:
        i25 = i30;

        i24 = i0;

        goto label04;
    }

    public int readSFixed32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int readRawLittleEndian32()>();

        return $i0;
    }

    public int readSInt32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int $i0, $i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int readRawVarint32()>();

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int decodeZigZag32(int)>($i0);

        return $i1;
    }

    public int readTag() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $z0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: boolean isAtEnd()>();

        if $z0 == 0 goto label1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int lastTag> = 0;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int readRawVarint32()>();

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int lastTag> = $i0;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int lastTag>;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagFieldNumber(int)>($i1);

        if $i2 != 0 goto label2;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException invalidTag()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label2:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int lastTag>;

        return $i3;
    }

    public int readUInt32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int readRawVarint32()>();

        return $i0;
    }

    public long readFixed64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: long readRawLittleEndian64()>();

        return $l0;
    }

    public long readInt64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: long readRawVarint64()>();

        return $l0;
    }

    public long readRawLittleEndian64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        byte[] r1;
        int $i0, $i1, $i2, $i5, $i11, $i17, $i23, $i29, $i35, $i41, i48;
        byte $b3, $b6, $b12, $b18, $b24, $b30, $b36, $b42;
        long $l4, $l7, $l8, $l9, $l10, $l13, $l14, $l15, $l16, $l19, $l20, $l21, $l22, $l25, $l26, $l27, $l28, $l31, $l32, $l33, $l34, $l37, $l38, $l39, $l40, $l43, $l44, $l45, $l46, $l47;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i48 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i1 = $i0 - i48;

        if $i1 >= 8 goto label1;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void refillBuffer(int)>(8);

        i48 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

     label1:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        $i2 = i48 + 8;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = $i2;

        $b3 = r1[i48];

        $l4 = (long) $b3;

        $l10 = $l4 & 255L;

        $i5 = i48 + 1;

        $b6 = r1[$i5];

        $l7 = (long) $b6;

        $l8 = $l7 & 255L;

        $l9 = $l8 << 8;

        $l16 = $l10 | $l9;

        $i11 = i48 + 2;

        $b12 = r1[$i11];

        $l13 = (long) $b12;

        $l14 = $l13 & 255L;

        $l15 = $l14 << 16;

        $l22 = $l16 | $l15;

        $i17 = i48 + 3;

        $b18 = r1[$i17];

        $l19 = (long) $b18;

        $l20 = $l19 & 255L;

        $l21 = $l20 << 24;

        $l28 = $l22 | $l21;

        $i23 = i48 + 4;

        $b24 = r1[$i23];

        $l25 = (long) $b24;

        $l26 = $l25 & 255L;

        $l27 = $l26 << 32;

        $l34 = $l28 | $l27;

        $i29 = i48 + 5;

        $b30 = r1[$i29];

        $l31 = (long) $b30;

        $l32 = $l31 & 255L;

        $l33 = $l32 << 40;

        $l40 = $l34 | $l33;

        $i35 = i48 + 6;

        $b36 = r1[$i35];

        $l37 = (long) $b36;

        $l38 = $l37 & 255L;

        $l39 = $l38 << 48;

        $l46 = $l40 | $l39;

        $i41 = i48 + 7;

        $b42 = r1[$i41];

        $l43 = (long) $b42;

        $l44 = $l43 & 255L;

        $l45 = $l44 << 56;

        $l47 = $l46 | $l45;

        return $l47;
    }

    public long readRawVarint64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        long l0, l1, $l12, $l13, $l14, $l17, $l18, $l21, $l22, $l25, $l26, $l29, $l30, $l31, $l34, $l39, $l41, l46, l48, l51, l54, l56, l57, l58, l60, l61, l62, l63;
        int $i2, $i3, $i4, $i6, $i8, $i10, $i36, $i37, $i38, i40, i42, i44, i45, i47, i49, i50, i52, i53, i55, i59, i64;
        byte $b5, $b7, $b9, $b11, $b15, $b16, $b19, $b20, $b23, $b24, $b27, $b28, $b32, $b33, $b35, b43;
        byte[] r1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i40 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        if $i2 != i40 goto label02;

     label01:
        $l41 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: long readRawVarint64SlowPath()>();

        return $l41;

     label02:
        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        i42 = i40 + 1;

        b43 = r1[i40];

        if b43 < 0 goto label03;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = i42;

        $l39 = (long) b43;

        return $l39;

     label03:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i4 = $i3 - i42;

        if $i4 < 9 goto label01;

        i44 = i42 + 1;

        $b5 = r1[i42];

        $i6 = $b5 << 7;

        i45 = b43 ^ $i6;

        if i45 >= 0 goto label05;

        $i38 = i45 ^ -128;

        l46 = (long) $i38;

        i47 = i44;

        l48 = l46;

     label04:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = i47;

        return l48;

     label05:
        i49 = i44 + 1;

        $b7 = r1[i44];

        $i8 = $b7 << 14;

        i50 = i45 ^ $i8;

        if i50 < 0 goto label06;

        $i37 = i50 ^ 16256;

        l51 = (long) $i37;

        i47 = i49;

        l48 = l51;

        goto label04;

     label06:
        i52 = i49 + 1;

        $b9 = r1[i49];

        $i10 = $b9 << 21;

        i53 = i50 ^ $i10;

        if i53 >= 0 goto label07;

        $i36 = i53 ^ -2080896;

        l54 = (long) $i36;

        i47 = i52;

        l48 = l54;

        goto label04;

     label07:
        i55 = i52 + 1;

        $l14 = (long) i53;

        $b11 = r1[i52];

        $l12 = (long) $b11;

        $l13 = $l12 << 28;

        l0 = $l14 ^ $l13;

        $b15 = l0 cmp 0L;

        if $b15 < 0 goto label08;

        l56 = l0 ^ 266354560L;

        i47 = i55;

        l48 = l56;

        goto label04;

     label08:
        i47 = i55 + 1;

        $b16 = r1[i55];

        $l17 = (long) $b16;

        $l18 = $l17 << 35;

        l57 = l0 ^ $l18;

        $b19 = l57 cmp 0L;

        if $b19 >= 0 goto label09;

        l58 = l57 ^ -34093383808L;

        l48 = l58;

        goto label04;

     label09:
        i59 = i47 + 1;

        $b20 = r1[i47];

        $l21 = (long) $b20;

        $l22 = $l21 << 42;

        l60 = l57 ^ $l22;

        $b23 = l60 cmp 0L;

        if $b23 < 0 goto label10;

        l61 = l60 ^ 4363953127296L;

        i47 = i59;

        l48 = l61;

        goto label04;

     label10:
        i47 = i59 + 1;

        $b24 = r1[i59];

        $l25 = (long) $b24;

        $l26 = $l25 << 49;

        l62 = l60 ^ $l26;

        $b27 = l62 cmp 0L;

        if $b27 >= 0 goto label11;

        l63 = l62 ^ -558586000294016L;

        l48 = l63;

        goto label04;

     label11:
        i64 = i47 + 1;

        $b28 = r1[i47];

        $l29 = (long) $b28;

        $l30 = $l29 << 56;

        $l31 = l62 ^ $l30;

        l1 = $l31 ^ 71499008037633920L;

        $b32 = l1 cmp 0L;

        if $b32 >= 0 goto label12;

        i47 = i64 + 1;

        $b33 = r1[i64];

        $l34 = (long) $b33;

        $b35 = $l34 cmp 0L;

        if $b35 < 0 goto label01;

        l48 = l1;

        goto label04;

     label12:
        i47 = i64;

        l48 = l1;

        goto label04;
    }

    long readRawVarint64SlowPath() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        byte b0, $b2;
        long l1, $l3, $l4, l6;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        short $s5;
        int i7;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        l6 = 0L;

        i7 = 0;

     label1:
        if i7 >= 64 goto label2;

        b0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte readRawByte()>();

        $b2 = b0 & 127;

        $l3 = (long) $b2;

        $l4 = $l3 << i7;

        l1 = l6 | $l4;

        $s5 = b0 & 128;

        if $s5 != 0 goto label3;

        return l1;

     label2:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label3:
        i7 = i7 + 7;

        l6 = l1;

        goto label1;
    }

    public long readSFixed64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: long readRawLittleEndian64()>();

        return $l0;
    }

    public long readSInt64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        long $l0, $l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: long readRawVarint64()>();

        $l1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: long decodeZigZag64(long)>($l0);

        return $l1;
    }

    public long readUInt64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: long readRawVarint64()>();

        return $l0;
    }

    private static long skip(java.io.InputStream, long) throws java.io.IOException
    {
        java.io.InputStream r0;
        long l0, l1;

        r0 := @parameter0: java.io.InputStream;

        l0 := @parameter1: long;

        l1 = virtualinvoke r0.<java.io.InputStream: long skip(long)>(l0);

        goto label1;

     label1:
        return l1;
    }

    public androidx.test.espresso.remote.internal.deps.protobuf.ByteString readBytes() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r1, $r2, r4;
        byte[] r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int readRawVarint32()>();

        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i4 = $i3 - $i2;

        if i0 > $i4 goto label1;

        if i0 <= 0 goto label1;

        r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString copyFrom(byte[],int,int)>(r3, i1, i0);

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i6 = $i5 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = $i6;

        return r4;

     label1:
        if i0 != 0 goto label2;

        $r2 = <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString EMPTY>;

        return $r2;

     label2:
        $r1 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: androidx.test.espresso.remote.internal.deps.protobuf.ByteString readBytesSlowPath(int)>(i0);

        return $r1;
    }

    private androidx.test.espresso.remote.internal.deps.protobuf.ByteString readBytesSlowPath(int) throws java.io.IOException
    {
        java.util.List r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        byte[] $r1, r6, r7, r9;
        boolean $z0;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r2, $r4;
        java.lang.Object $r3;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r5;
        java.util.Iterator r8;

        r5 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i8 := @parameter0: int;

        r6 = specialinvoke r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] readRawBytesSlowPathOneChunk(int)>(i8);

        if r6 == null goto label1;

        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString copyFrom(byte[])>(r6);

        return $r4;

     label1:
        i9 = r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i1 = r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i0 = r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        i10 = $i1 - $i0;

        $i3 = r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i2 = r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i4 = $i3 + $i2;

        r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired> = $i4;

        r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = 0;

        r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize> = 0;

        $i5 = i8 - i10;

        r0 = specialinvoke r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: java.util.List readRawBytesSlowPathRemainingChunks(int)>($i5);

        r7 = newarray (byte)[i8];

        $r1 = r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, i9, r7, 0, i10);

        r8 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        i11 = i10;

     label2:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (byte[]) $r3;

        $i6 = lengthof r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r9, 0, r7, i11, $i6);

        $i7 = lengthof r9;

        i11 = i11 + $i7;

        goto label2;

     label3:
        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString wrap(byte[])>(r7);

        return $r2;
    }

    public java.lang.String readString() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        byte[] $r1, $r4, $r6;
        java.nio.charset.Charset $r2, $r3, $r5;
        java.lang.String r7, r8, r9;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int readRawVarint32()>();

        if i0 <= 0 goto label1;

        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i7 = $i6 - $i5;

        if i0 > $i7 goto label1;

        r7 = new java.lang.String;

        $r6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $r5 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        specialinvoke r7.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r6, $i8, i0, $r5);

        $i9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i10 = $i9 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = $i10;

        return r7;

     label1:
        if i0 != 0 goto label2;

        return "";

     label2:
        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        if i0 > $i1 goto label3;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void refillBuffer(int)>(i0);

        r8 = new java.lang.String;

        $r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $r3 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        specialinvoke r8.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r4, $i2, i0, $r3);

        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i4 = $i3 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = $i4;

        return r8;

     label3:
        r9 = new java.lang.String;

        $r1 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] readRawBytesSlowPath(int,boolean)>(i0, 0);

        $r2 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        specialinvoke r9.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r1, $r2);

        return r9;
    }

    public java.lang.String readStringRequireUtf8() throws java.io.IOException
    {
        int i0, $i1, $i2, $i3, $i4, i5;
        byte[] r0, r2, r4;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r1;
        java.lang.String $r3;

        r1 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i0 = virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int readRawVarint32()>();

        i5 = r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i1 = r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i2 = $i1 - i5;

        if i0 > $i2 goto label2;

        if i0 <= 0 goto label2;

        r0 = r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        $i4 = i5 + i0;

        r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = $i4;

        r2 = r0;

     label1:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: java.lang.String decodeUtf8(byte[],int,int)>(r2, i5, i0);

        return $r3;

     label2:
        if i0 != 0 goto label3;

        return "";

     label3:
        $i3 = r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        if i0 > $i3 goto label4;

        specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void refillBuffer(int)>(i0);

        r4 = r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = i0;

        r2 = r4;

        i5 = 0;

        goto label1;

     label4:
        r2 = specialinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] readRawBytesSlowPath(int,boolean)>(i0, 0);

        i5 = 0;

        goto label1;
    }

    private java.util.List readRawBytesSlowPathRemainingChunks(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        java.util.ArrayList r1, r5;
        byte[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        java.io.InputStream $r3;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r4;
        java.lang.Throwable r6;
        java.util.List r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i8 := @parameter0: int;

        r5 = new java.util.ArrayList;

        r1 = r5;

        specialinvoke r5.<java.util.ArrayList: void <init>()>();

     label1:
        if i8 <= 0 goto label5;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i8, 4096);

        r2 = newarray (byte)[$i1];

        i9 = 0;

     label2:
        $i2 = lengthof r2;

        if i9 >= $i2 goto label4;

        $r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: java.io.InputStream input>;

        $i4 = lengthof r2;

        $i5 = $i4 - i9;

        i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>(r2, i9, $i5);

        if i0 != -1 goto label3;

        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r6 = (java.lang.Throwable) $r4;

        throw r6;

     label3:
        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i7 = $i6 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired> = $i7;

        i9 = i9 + i0;

        goto label2;

     label4:
        $i3 = lengthof r2;

        i8 = i8 - $i3;

        r7 = (java.util.List) r1;

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r2);

        goto label1;

     label5:
        r8 = (java.util.List) r1;

        return r8;
    }

    private void <init>(java.io.InputStream, int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        java.io.InputStream r1;
        int i0;
        byte[] $r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: void <init>(androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream-IA)>(null);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int currentLimit> = 2147483647;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder$RefillCallback refillCallback> = null;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "input");

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: java.io.InputStream input> = r1;

        $r3 = newarray (byte)[i0];

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer> = $r3;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize> = 0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = 0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired> = 0;

        return;
    }

    void <init>(java.io.InputStream, int, androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder-IA)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        java.io.InputStream r1;
        int i0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder-IA r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder-IA;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void <init>(java.io.InputStream,int)>(r1, i0);

        return;
    }

    public void checkLastTagWas(int) throws androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int i0, $i1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int lastTag>;

        if $i1 == i0 goto label1;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException invalidEndTag()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label1:
        return;
    }

    public void popLimit(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i0 := @parameter0: int;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int currentLimit> = i0;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void recomputeBufferSizeAfterLimit()>();

        return;
    }

    private void recomputeBufferSizeAfterLimit()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSizeAfterLimit>;

        $i3 = $i2 + $i1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize> = $i3;

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        i0 = $i5 + $i4;

        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int currentLimit>;

        if i0 <= $i6 goto label1;

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int currentLimit>;

        $i8 = i0 - $i7;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSizeAfterLimit> = $i8;

        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSizeAfterLimit>;

        $i11 = $i10 - $i9;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize> = $i11;

        return;

     label1:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSizeAfterLimit> = 0;

        return;
    }

    private void refillBuffer(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1, $r2;
        java.lang.Throwable r3, r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: boolean tryRefillBuffer(int)>(i0);

        if $z0 != 0 goto label2;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int sizeLimit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i4 = $i2 - $i1;

        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i5 = $i4 - $i3;

        if i0 <= $i5 goto label1;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException sizeLimitExceeded()>();

        r3 = (java.lang.Throwable) $r2;

        throw r3;

     label1:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r4 = (java.lang.Throwable) $r1;

        throw r4;

     label2:
        return;
    }

    public void skipMessage() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int i0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

     label1:
        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int readTag()>();

        if i0 == 0 goto label2;

        $z0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: boolean skipField(int)>(i0);

        if $z0 != 0 goto label1;

     label2:
        return;
    }

    public void skipRawBytes(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i3 = $i2 - $i1;

        if i0 > $i3 goto label1;

        if i0 < 0 goto label1;

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i5 = $i4 + i0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = $i5;

        return;

     label1:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void skipRawBytesSlowPath(int)>(i0);

        return;
    }

    private void skipRawBytesSlowPath(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        long l0, $l21, $l23;
        java.lang.StringBuilder r1, $r4, $r5, $r6, $r7, r17;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, i34, i35, i36, i37;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder$RefillCallback $r2;
        java.io.InputStream $r3, r13;
        byte $b22, $b24, $b25;
        java.lang.String $r8, r15;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r9, $r10;
        java.lang.Throwable $r11, r16, r19, r20;
        java.lang.IllegalStateException r12, r18;
        java.lang.Class r14;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i34 := @parameter0: int;

        if i34 >= 0 goto label01;

        $r10 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()>();

        r19 = (java.lang.Throwable) $r10;

        throw r19;

     label01:
        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i3 = $i2 + $i1;

        $i5 = $i3 + i34;

        $i4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int currentLimit>;

        if $i5 <= $i4 goto label02;

        $i28 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int currentLimit>;

        $i27 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i30 = $i28 - $i27;

        $i29 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i31 = $i30 - $i29;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void skipRawBytes(int)>($i31);

        $r9 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r20 = (java.lang.Throwable) $r9;

        throw r20;

     label02:
        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder$RefillCallback refillCallback>;

        if $r2 != null goto label15;

        $i15 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i14 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i16 = $i15 + $i14;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired> = $i16;

        $i18 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i17 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        i35 = $i18 - $i17;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize> = 0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = 0;

     label03:
        if i35 >= i34 goto label08;

        i36 = i34 - i35;

     label04:
        $r3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: java.io.InputStream input>;

        $l21 = (long) i36;

        l0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: long skip(java.io.InputStream,long)>($r3, $l21);

     label05:
        $b22 = l0 cmp 0L;

        if $b22 < 0 goto label06;

        $l23 = (long) i36;

        $b24 = l0 cmp $l23;

        if $b24 <= 0 goto label07;

     label06:
        r18 = new java.lang.IllegalStateException;

        r12 = r18;

        r13 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: java.io.InputStream input>;

        r14 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>();

        r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r14);

        r17 = new java.lang.StringBuilder;

        r1 = r17;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#skip returned invalid result: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nThe InputStream implementation is buggy.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw r12;

     label07:
        $b25 = l0 cmp 0L;

        if $b25 != 0 goto label13;

     label08:
        $i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i20 = $i19 + i35;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired> = $i20;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void recomputeBufferSizeAfterLimit()>();

     label09:
        if i35 >= i34 goto label12;

        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        i37 = $i7 - $i6;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = $i8;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void refillBuffer(int)>(1);

     label10:
        $i10 = i34 - i37;

        $i9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        if $i10 <= $i9 goto label11;

        $i12 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        i37 = i37 + $i12;

        $i13 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = $i13;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void refillBuffer(int)>(1);

        goto label10;

     label11:
        $i11 = i34 - i37;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = $i11;

        return;

     label12:
        return;

     label13:
        $i26 = (int) l0;

        i35 = i35 + $i26;

        goto label03;

     label14:
        $r11 := @caughtexception;

        r16 = $r11;

        $i32 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i33 = $i32 + i35;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired> = $i33;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void recomputeBufferSizeAfterLimit()>();

        throw r16;

     label15:
        i35 = 0;

        goto label09;

        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
    }

    private void skipRawVarint() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i2 = $i1 - $i0;

        if $i2 < 10 goto label1;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void skipRawVarintFastPath()>();

        return;

     label1:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void skipRawVarintSlowPath()>();

        return;
    }

    private void skipRawVarintFastPath() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        byte[] r1;
        int i0, $i1, i3;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r2;
        byte $b2;
        java.lang.Throwable r3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i3 = 0;

     label1:
        if i3 >= 10 goto label2;

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i1 = i0 + 1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = $i1;

        $b2 = r1[i0];

        if $b2 < 0 goto label3;

        return;

     label2:
        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r3 = (java.lang.Throwable) $r2;

        throw r3;

     label3:
        i3 = i3 + 1;

        goto label1;
    }

    private void skipRawVarintSlowPath() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        byte $b0;
        int i1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i1 = 0;

     label1:
        if i1 >= 10 goto label2;

        $b0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte readRawByte()>();

        if $b0 < 0 goto label3;

        return;

     label2:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label3:
        i1 = i1 + 1;

        goto label1;
    }

    public boolean isAtEnd() throws java.io.IOException
    {
        int $i0, $i1;
        boolean $z0, z1;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        if $i1 != $i0 goto label2;

        $z0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: boolean tryRefillBuffer(int)>(1);

        if $z0 != 0 goto label2;

        z1 = 1;

     label1:
        return z1;

     label2:
        z1 = 0;

        goto label1;
    }

    public boolean readBool() throws java.io.IOException
    {
        long $l0;
        byte $b1;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        boolean z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: long readRawVarint64()>();

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    public boolean skipField(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int i0, $i1, $i2, $i3, $i4;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>(i0);

        tableswitch($i1)
        {
            case 0: goto label7;
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label3;
            case 5: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label2:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void skipRawBytes(int)>(4);

        return 1;

     label3:
        return 0;

     label4:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void skipMessage()>();

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagFieldNumber(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int makeTag(int,int)>($i2, 4);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void checkLastTagWas(int)>($i3);

        return 1;

     label5:
        $i4 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int readRawVarint32()>();

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void skipRawBytes(int)>($i4);

        return 1;

     label6:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void skipRawBytes(int)>(8);

        return 1;

     label7:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void skipRawVarint()>();

        return 1;
    }

    private boolean tryRefillBuffer(int) throws java.io.IOException
    {
        java.lang.StringBuilder r0, $r6, $r7, $r8, r12, $r20, $r21, $r22, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, i36;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder$RefillCallback $r1, $r5;
        byte[] $r2, $r3, $r4, $r14, $r15;
        java.lang.String $r9, r19, $r24;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r10;
        java.lang.IllegalStateException r11, r16;
        java.io.InputStream $r13, r17;
        java.lang.Class r18;
        boolean z0;

        r10 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i24 := @parameter0: int;

        $i0 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i2 = $i0 + i24;

        $i1 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        if $i2 > $i1 goto label01;

        r11 = new java.lang.IllegalStateException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("refillBuffer() called when ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes were already available in buffer");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw r11;

     label01:
        $i4 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int sizeLimit>;

        $i3 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i6 = $i4 - $i3;

        $i5 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i7 = $i6 - $i5;

        if i24 <= $i7 goto label02;

        return 0;

     label02:
        $i9 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i8 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i10 = $i9 + $i8;

        $i12 = $i10 + i24;

        $i11 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int currentLimit>;

        if $i12 <= $i11 goto label03;

        return 0;

     label03:
        $r1 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder$RefillCallback refillCallback>;

        if $r1 == null goto label04;

        $r5 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder$RefillCallback refillCallback>;

        interfaceinvoke $r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder$RefillCallback: void onRefill()>();

     label04:
        i25 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        if i25 <= 0 goto label06;

        $i17 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        if $i17 <= i25 goto label05;

        $r4 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        $r3 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        $i22 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i23 = $i22 - i25;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, i25, $r3, 0, $i23);

     label05:
        $i18 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i19 = $i18 + i25;

        r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired> = $i19;

        $i20 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i21 = $i20 - i25;

        r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize> = $i21;

        r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = 0;

     label06:
        $r13 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: java.io.InputStream input>;

        $r14 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        $i26 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $r15 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        $i27 = lengthof $r15;

        $i28 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i29 = $i27 - $i28;

        $i30 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int sizeLimit>;

        $i31 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i32 = $i30 - $i31;

        $i33 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i34 = $i32 - $i33;

        $i35 = staticinvoke <java.lang.Math: int min(int,int)>($i29, $i34);

        i36 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int read(java.io.InputStream,byte[],int,int)>($r13, $r14, $i26, $i35);

        if i36 == 0 goto label07;

        if i36 < -1 goto label07;

        $r2 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        $i13 = lengthof $r2;

        if i36 <= $i13 goto label08;

     label07:
        r16 = new java.lang.IllegalStateException;

        r17 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: java.io.InputStream input>;

        r18 = virtualinvoke r17.<java.lang.Object: java.lang.Class getClass()>();

        r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r18);

        r0 = new java.lang.StringBuilder;

        specialinvoke r0.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#read(byte[]) returned invalid result: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i36);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nThe InputStream implementation is buggy.");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw r16;

     label08:
        if i36 <= 0 goto label11;

        $i14 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i15 = $i14 + i36;

        r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize> = $i15;

        specialinvoke r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void recomputeBufferSizeAfterLimit()>();

        $i16 = r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        if $i16 < i24 goto label10;

        z0 = 1;

     label09:
        return z0;

     label10:
        z0 = specialinvoke r10.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: boolean tryRefillBuffer(int)>(i24);

        goto label09;

     label11:
        return 0;
    }

    private byte[] readRawBytesSlowPath(int, boolean) throws java.io.IOException
    {
        java.util.List r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        byte[] $r1, $r4, r6, r7, r9;
        boolean $z0, z1;
        java.lang.Object $r2, $r3;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r5;
        java.util.Iterator r8;

        r5 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i8 := @parameter0: int;

        z1 := @parameter1: boolean;

        r6 = specialinvoke r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] readRawBytesSlowPathOneChunk(int)>(i8);

        if r6 == null goto label2;

        if z1 == 0 goto label1;

        $r3 = virtualinvoke r6.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (byte[]) $r3;

        return $r4;

     label1:
        return r6;

     label2:
        i9 = r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i1 = r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i0 = r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        i10 = $i1 - $i0;

        $i3 = r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i2 = r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i4 = $i3 + $i2;

        r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired> = $i4;

        r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = 0;

        r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize> = 0;

        $i5 = i8 - i10;

        r0 = specialinvoke r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: java.util.List readRawBytesSlowPathRemainingChunks(int)>($i5);

        r7 = newarray (byte)[i8];

        $r1 = r5.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, i9, r7, 0, i10);

        r8 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        i11 = i10;

     label3:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (byte[]) $r2;

        $i6 = lengthof r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r9, 0, r7, i11, $i6);

        $i7 = lengthof r9;

        i11 = i11 + $i7;

        goto label3;

     label4:
        return r7;
    }

    private byte[] readRawBytesSlowPathOneChunk(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, $i26;
        byte[] $r1, $r8, r9;
        java.io.InputStream $r2, $r4;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r3, $r5, $r6, $r7;
        java.lang.Throwable r10, r11, r12, r13;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r8 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        return $r8;

     label1:
        if i0 >= 0 goto label2;

        $r7 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()>();

        r10 = (java.lang.Throwable) $r7;

        throw r10;

     label2:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i4 = $i3 + $i2;

        i23 = $i4 + i0;

        $i5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int sizeLimit>;

        $i6 = i23 - $i5;

        if $i6 <= 0 goto label3;

        $r6 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException sizeLimitExceeded()>();

        r11 = (java.lang.Throwable) $r6;

        throw r11;

     label3:
        $i7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int currentLimit>;

        if i23 <= $i7 goto label4;

        $i19 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int currentLimit>;

        $i18 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i21 = $i19 - $i18;

        $i20 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        $i22 = $i21 - $i20;

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: void skipRawBytes(int)>($i22);

        $r5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r12 = (java.lang.Throwable) $r5;

        throw r12;

     label4:
        $i9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        i24 = $i9 - $i8;

        i25 = i0 - i24;

        if i25 < 4096 goto label5;

        $r4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: java.io.InputStream input>;

        $i17 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int available(java.io.InputStream)>($r4);

        if i25 > $i17 goto label9;

     label5:
        r9 = newarray (byte)[i0];

        $r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: byte[] buffer>;

        $i10 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i10, r9, 0, i24);

        $i12 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize>;

        $i13 = $i12 + $i11;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired> = $i13;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int pos> = 0;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int bufferSize> = 0;

     label6:
        $i26 = lengthof r9;

        if i24 >= $i26 goto label8;

        $r2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: java.io.InputStream input>;

        $i14 = i0 - i24;

        i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int read(java.io.InputStream,byte[],int,int)>($r2, r9, i24, $i14);

        if i1 != -1 goto label7;

        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r13 = (java.lang.Throwable) $r3;

        throw r13;

     label7:
        $i15 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired>;

        $i16 = $i15 + i1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$StreamDecoder: int totalBytesRetired> = $i16;

        i24 = i24 + i1;

        goto label6;

     label8:
        return r9;

     label9:
        return null;
    }

androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder-IA
androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: java.nio.ByteBuffer buffer>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean immutable>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long address>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long startPos>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int bufferSizeAfterLimit>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int lastTag>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean enableAliasing>
<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int currentLimit>
    public byte readRawByte() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long l0, $l1, $l2, $l4;
        byte $b3, $b5;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $l2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit>;

        $b3 = $l2 cmp $l1;

        if $b3 != 0 goto label1;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label1:
        l0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l4 = l0 + 1L;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = $l4;

        $b5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l0);

        return $b5;
    }

    public double readDouble() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long $l0;
        double $d0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readRawLittleEndian64()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public float readFloat() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int $i0;
        float $f0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawLittleEndian32()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    private int bufferPos(long)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long l0, $l1, $l2;
        int $i3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        l0 := @parameter0: long;

        $l1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long address>;

        $l2 = l0 - $l1;

        $i3 = (int) $l2;

        return $i3;
    }

    public int getTotalBytesRead()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long $l0, $l1, $l2;
        int $i3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $l1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long startPos>;

        $l2 = $l1 - $l0;

        $i3 = (int) $l2;

        return $i3;
    }

    public int pushLimit(int) throws androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int i0, $i1, i2, i3;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1, $r2;
        java.lang.Throwable r3, r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        i2 := @parameter0: int;

        if i2 >= 0 goto label1;

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()>();

        r3 = (java.lang.Throwable) $r2;

        throw r3;

     label1:
        $i1 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int getTotalBytesRead()>();

        i3 = i2 + $i1;

        i0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int currentLimit>;

        if i3 <= i0 goto label2;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r4 = (java.lang.Throwable) $r1;

        throw r4;

     label2:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int currentLimit> = i3;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void recomputeBufferSizeAfterLimit()>();

        return i0;
    }

    public int readEnum() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawVarint32()>();

        return $i0;
    }

    public int readFixed32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawLittleEndian32()>();

        return $i0;
    }

    public int readInt32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawVarint32()>();

        return $i0;
    }

    public int readRawLittleEndian32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long l0, $l1, $l2, $l4, $l6, $l11, $l16;
        byte $b3, $b5, $b8, $b13, $b18;
        short $s7, $s9, $s14, $s19;
        int $i10, $i12, $i15, $i17, $i20, $i21;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        l0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit>;

        $l2 = $l1 - l0;

        $b3 = $l2 cmp 4L;

        if $b3 >= 0 goto label1;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label1:
        $l4 = l0 + 4L;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = $l4;

        $b5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l0);

        $s7 = $b5 & 255;

        $l6 = l0 + 1L;

        $b8 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>($l6);

        $s9 = $b8 & 255;

        $i10 = $s9 << 8;

        $i12 = $s7 | $i10;

        $l11 = l0 + 2L;

        $b13 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>($l11);

        $s14 = $b13 & 255;

        $i15 = $s14 << 16;

        $i17 = $i12 | $i15;

        $l16 = l0 + 3L;

        $b18 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>($l16);

        $s19 = $b18 & 255;

        $i20 = $s19 << 24;

        $i21 = $i17 | $i20;

        return $i21;
    }

    public int readRawVarint32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long l0, l1, l3, l4, $l5, $l7, $l8, l23, $l24, l27, l30, l32, l37, l39, l40, l41;
        int i2, $i11, $i13, $i15, $i16, $i17, $i25, i28, i29, i31, i33, i34, i35, i36;
        byte $b6, $b9, $b10, $b12, $b14, $b18, $b19, $b20, $b21, $b22, b26, b38;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        l23 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit>;

        $b6 = $l5 cmp l23;

        if $b6 != 0 goto label02;

     label01:
        $l24 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readRawVarint64SlowPath()>();

        $i25 = (int) $l24;

        return $i25;

     label02:
        l0 = l23 + 1L;

        b26 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l23);

        if b26 < 0 goto label03;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = l0;

        return b26;

     label03:
        $l7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit>;

        $l8 = $l7 - l0;

        $b9 = $l8 cmp 9L;

        if $b9 < 0 goto label01;

        l27 = l0 + 1L;

        $b10 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l0);

        $i11 = $b10 << 7;

        i28 = b26 ^ $i11;

        if i28 >= 0 goto label05;

        i29 = i28 ^ -128;

        l30 = l27;

        i31 = i29;

     label04:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = l30;

        return i31;

     label05:
        l32 = l27 + 1L;

        $b12 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l27);

        $i13 = $b12 << 14;

        i33 = i28 ^ $i13;

        if i33 < 0 goto label06;

        i34 = i33 ^ 16256;

        l30 = l32;

        i31 = i34;

        goto label04;

     label06:
        l1 = l32 + 1L;

        $b14 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l32);

        $i15 = $b14 << 21;

        i35 = i33 ^ $i15;

        if i35 >= 0 goto label07;

        i36 = i35 ^ -2080896;

        l30 = l1;

        i31 = i36;

        goto label04;

     label07:
        l37 = l1 + 1L;

        b38 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l1);

        $i16 = b38 << 28;

        $i17 = i35 ^ $i16;

        i2 = $i17 ^ 266354560;

        if b38 >= 0 goto label12;

        l39 = l37 + 1L;

        $b18 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l37);

        if $b18 >= 0 goto label11;

        l3 = l39 + 1L;

        $b19 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l39);

        if $b19 >= 0 goto label10;

        l40 = l3 + 1L;

        $b20 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l3);

        if $b20 >= 0 goto label09;

        l41 = l40 + 1L;

        $b21 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l40);

        if $b21 >= 0 goto label08;

        l4 = l41 + 1L;

        $b22 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l41);

        if $b22 < 0 goto label01;

        l30 = l4;

        i31 = i2;

        goto label04;

     label08:
        l30 = l41;

        i31 = i2;

        goto label04;

     label09:
        l30 = l40;

        i31 = i2;

        goto label04;

     label10:
        l30 = l3;

        i31 = i2;

        goto label04;

     label11:
        l30 = l39;

        i31 = i2;

        goto label04;

     label12:
        l30 = l37;

        i31 = i2;

        goto label04;
    }

    public int readSFixed32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawLittleEndian32()>();

        return $i0;
    }

    public int readSInt32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int $i0, $i1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawVarint32()>();

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int decodeZigZag32(int)>($i0);

        return $i1;
    }

    public int readTag() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $z0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean isAtEnd()>();

        if $z0 == 0 goto label1;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int lastTag> = 0;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawVarint32()>();

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int lastTag> = $i0;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int lastTag>;

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagFieldNumber(int)>($i1);

        if $i2 != 0 goto label2;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException invalidTag()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label2:
        $i3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int lastTag>;

        return $i3;
    }

    public int readUInt32() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawVarint32()>();

        return $i0;
    }

    private int remaining()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long $l0, $l1, $l2;
        int $i3;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $l1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit>;

        $l0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l2 = $l1 - $l0;

        $i3 = (int) $l2;

        return $i3;
    }

    public long readFixed64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readRawLittleEndian64()>();

        return $l0;
    }

    public long readInt64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readRawVarint64()>();

        return $l0;
    }

    public long readRawLittleEndian64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long l0, $l1, $l2, $l4, $l6, $l7, $l8, $l10, $l11, $l12, $l13, $l14, $l16, $l17, $l18, $l19, $l20, $l22, $l23, $l24, $l25, $l26, $l28, $l29, $l30, $l31, $l32, $l34, $l35, $l36, $l37, $l38, $l40, $l41, $l42, $l43, $l44, $l46, $l47, $l48, $l49;
        byte $b3, $b5, $b9, $b15, $b21, $b27, $b33, $b39, $b45;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        l0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit>;

        $l2 = $l1 - l0;

        $b3 = $l2 cmp 8L;

        if $b3 >= 0 goto label1;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label1:
        $l4 = l0 + 8L;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = $l4;

        $b5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l0);

        $l6 = (long) $b5;

        $l8 = $l6 & 255L;

        $l7 = l0 + 1L;

        $b9 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>($l7);

        $l10 = (long) $b9;

        $l11 = $l10 & 255L;

        $l12 = $l11 << 8;

        $l14 = $l8 | $l12;

        $l13 = l0 + 2L;

        $b15 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>($l13);

        $l16 = (long) $b15;

        $l17 = $l16 & 255L;

        $l18 = $l17 << 16;

        $l20 = $l14 | $l18;

        $l19 = l0 + 3L;

        $b21 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>($l19);

        $l22 = (long) $b21;

        $l23 = $l22 & 255L;

        $l24 = $l23 << 24;

        $l26 = $l20 | $l24;

        $l25 = l0 + 4L;

        $b27 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>($l25);

        $l28 = (long) $b27;

        $l29 = $l28 & 255L;

        $l30 = $l29 << 32;

        $l32 = $l26 | $l30;

        $l31 = l0 + 5L;

        $b33 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>($l31);

        $l34 = (long) $b33;

        $l35 = $l34 & 255L;

        $l36 = $l35 << 40;

        $l38 = $l32 | $l36;

        $l37 = l0 + 6L;

        $b39 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>($l37);

        $l40 = (long) $b39;

        $l41 = $l40 & 255L;

        $l42 = $l41 << 48;

        $l44 = $l38 | $l42;

        $l43 = l0 + 7L;

        $b45 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>($l43);

        $l46 = (long) $b45;

        $l47 = $l46 & 255L;

        $l48 = $l47 << 56;

        $l49 = $l44 | $l48;

        return $l49;
    }

    public long readRawVarint64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long l0, l1, l2, l3, l4, $l5, $l7, $l8, $l16, $l18, $l19, $l22, $l23, $l26, $l27, $l30, $l31, $l34, $l35, $l36, $l39, $l44, l45, $l46, l49, l50, l51, l53, l54, l56, l57, l58, l59, l60, l61, l62, l63, l64, l65, l66, l67, l68, l69;
        byte $b6, $b9, $b10, $b12, $b14, $b17, $b20, $b21, $b24, $b25, $b28, $b29, $b32, $b33, $b37, $b38, $b40, b47;
        int $i11, $i13, $i15, $i41, $i42, $i43, i48, i52, i55;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        l45 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit>;

        $b6 = $l5 cmp l45;

        if $b6 != 0 goto label02;

     label01:
        $l46 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readRawVarint64SlowPath()>();

        return $l46;

     label02:
        l0 = l45 + 1L;

        b47 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l45);

        if b47 < 0 goto label03;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = l0;

        $l44 = (long) b47;

        return $l44;

     label03:
        $l7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit>;

        $l8 = $l7 - l0;

        $b9 = $l8 cmp 9L;

        if $b9 < 0 goto label01;

        l1 = l0 + 1L;

        $b10 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l0);

        $i11 = $b10 << 7;

        i48 = b47 ^ $i11;

        if i48 >= 0 goto label05;

        $i43 = i48 ^ -128;

        l49 = (long) $i43;

        l50 = l1;

        l51 = l49;

     label04:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = l50;

        return l51;

     label05:
        l2 = l1 + 1L;

        $b12 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l1);

        $i13 = $b12 << 14;

        i52 = i48 ^ $i13;

        if i52 < 0 goto label06;

        $i42 = i52 ^ 16256;

        l53 = (long) $i42;

        l50 = l2;

        l51 = l53;

        goto label04;

     label06:
        l54 = l2 + 1L;

        $b14 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l2);

        $i15 = $b14 << 21;

        i55 = i52 ^ $i15;

        if i55 >= 0 goto label07;

        $i41 = i55 ^ -2080896;

        l56 = (long) $i41;

        l50 = l54;

        l51 = l56;

        goto label04;

     label07:
        l57 = l54 + 1L;

        $l16 = (long) i55;

        $b17 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l54);

        $l18 = (long) $b17;

        $l19 = $l18 << 28;

        l3 = $l16 ^ $l19;

        $b20 = l3 cmp 0L;

        if $b20 < 0 goto label08;

        l58 = l3 ^ 266354560L;

        l50 = l57;

        l51 = l58;

        goto label04;

     label08:
        l4 = l57 + 1L;

        $b21 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l57);

        $l22 = (long) $b21;

        $l23 = $l22 << 35;

        l59 = l3 ^ $l23;

        $b24 = l59 cmp 0L;

        if $b24 >= 0 goto label09;

        l60 = l59 ^ -34093383808L;

        l50 = l4;

        l51 = l60;

        goto label04;

     label09:
        l61 = l4 + 1L;

        $b25 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l4);

        $l26 = (long) $b25;

        $l27 = $l26 << 42;

        l62 = l59 ^ $l27;

        $b28 = l62 cmp 0L;

        if $b28 < 0 goto label10;

        l63 = l62 ^ 4363953127296L;

        l50 = l61;

        l51 = l63;

        goto label04;

     label10:
        l64 = l61 + 1L;

        $b29 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l61);

        $l30 = (long) $b29;

        $l31 = $l30 << 49;

        l65 = l62 ^ $l31;

        $b32 = l65 cmp 0L;

        if $b32 >= 0 goto label11;

        l66 = l65 ^ -558586000294016L;

        l50 = l64;

        l51 = l66;

        goto label04;

     label11:
        l67 = l64 + 1L;

        $b33 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l64);

        $l34 = (long) $b33;

        $l35 = $l34 << 56;

        $l36 = l65 ^ $l35;

        l68 = $l36 ^ 71499008037633920L;

        $b37 = l68 cmp 0L;

        if $b37 >= 0 goto label12;

        l69 = l67 + 1L;

        $b38 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l67);

        $l39 = (long) $b38;

        $b40 = $l39 cmp 0L;

        if $b40 < 0 goto label01;

        l50 = l69;

        l51 = l68;

        goto label04;

     label12:
        l50 = l67;

        l51 = l68;

        goto label04;
    }

    long readRawVarint64SlowPath() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        byte b0, $b2;
        long l1, $l3, $l4, l6;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        short $s5;
        int i7;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        l6 = 0L;

        i7 = 0;

     label1:
        if i7 >= 64 goto label2;

        b0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: byte readRawByte()>();

        $b2 = b0 & 127;

        $l3 = (long) $b2;

        $l4 = $l3 << i7;

        l1 = l6 | $l4;

        $s5 = b0 & 128;

        if $s5 != 0 goto label3;

        return l1;

     label2:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label3:
        i7 = i7 + 7;

        l6 = l1;

        goto label1;
    }

    public long readSFixed64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readRawLittleEndian64()>();

        return $l0;
    }

    public long readSInt64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long $l0, $l1;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readRawVarint64()>();

        $l1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long decodeZigZag64(long)>($l0);

        return $l1;
    }

    public long readUInt64() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long $l0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readRawVarint64()>();

        return $l0;
    }

    public androidx.test.espresso.remote.internal.deps.protobuf.ByteString readBytes() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int i0, $i3;
        long l1, l2, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1, $r2;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r3, $r4, $r5;
        boolean $z0, $z1;
        java.nio.ByteBuffer r6;
        byte[] r7;
        java.lang.Throwable r8, r9;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawVarint32()>();

        if i0 <= 0 goto label2;

        $i3 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int remaining()>();

        if i0 > $i3 goto label2;

        $z0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean immutable>;

        if $z0 == 0 goto label1;

        $z1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean enableAliasing>;

        if $z1 == 0 goto label1;

        l1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        l2 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l9 = (long) i0;

        $l10 = l2 + $l9;

        r6 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: java.nio.ByteBuffer slice(long,long)>(l1, $l10);

        $l12 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l11 = (long) i0;

        $l13 = $l12 + $l11;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = $l13;

        $r5 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString wrap(java.nio.ByteBuffer)>(r6);

        return $r5;

     label1:
        r7 = newarray (byte)[i0];

        $l5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l4 = (long) i0;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void copyMemory(long,byte[],long,long)>($l5, r7, 0L, $l4);

        $l7 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l6 = (long) i0;

        $l8 = $l7 + $l6;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = $l8;

        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString wrap(byte[])>(r7);

        return $r4;

     label2:
        if i0 != 0 goto label5;

        $r3 = <androidx.test.espresso.remote.internal.deps.protobuf.ByteString: androidx.test.espresso.remote.internal.deps.protobuf.ByteString EMPTY>;

        return $r3;

     label3:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r8 = (java.lang.Throwable) $r1;

        throw r8;

     label4:
        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()>();

        r9 = (java.lang.Throwable) $r2;

        throw r9;

     label5:
        if i0 >= 0 goto label3;

        goto label4;
    }

    public java.lang.String readString() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int i0, $i1;
        byte[] r1;
        java.lang.String r2, r6;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r3, $r4;
        long $l2, $l3, $l4, $l5, $l6;
        java.nio.charset.Charset $r5;
        java.lang.Throwable r7, r8;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawVarint32()>();

        if i0 <= 0 goto label1;

        $i1 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int remaining()>();

        if i0 > $i1 goto label1;

        r1 = newarray (byte)[i0];

        $l3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l2 = (long) i0;

        staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: void copyMemory(long,byte[],long,long)>($l3, r1, 0L, $l2);

        r6 = new java.lang.String;

        r2 = r6;

        $r5 = <androidx.test.espresso.remote.internal.deps.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        specialinvoke r6.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r1, $r5);

        $l5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l4 = (long) i0;

        $l6 = $l5 + $l4;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = $l6;

        return r2;

     label1:
        if i0 != 0 goto label4;

        return "";

     label2:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r7 = (java.lang.Throwable) $r3;

        throw r7;

     label3:
        $r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()>();

        r8 = (java.lang.Throwable) $r4;

        throw r8;

     label4:
        if i0 >= 0 goto label2;

        goto label3;
    }

    public java.lang.String readStringRequireUtf8() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int i0, $i2, i6;
        long l1, $l3, $l4, $l5;
        java.nio.ByteBuffer r1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r2, $r3;
        java.lang.String r4;
        java.lang.Throwable r5, r6;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawVarint32()>();

        if i0 <= 0 goto label1;

        $i2 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int remaining()>();

        if i0 > $i2 goto label1;

        l1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        i6 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int bufferPos(long)>(l1);

        r1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: java.nio.ByteBuffer buffer>;

        r4 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.Utf8: java.lang.String decodeUtf8(java.nio.ByteBuffer,int,int)>(r1, i6, i0);

        $l4 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l3 = (long) i0;

        $l5 = $l4 + $l3;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = $l5;

        return r4;

     label1:
        if i0 != 0 goto label4;

        return "";

     label2:
        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r5 = (java.lang.Throwable) $r2;

        throw r5;

     label3:
        $r3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()>();

        r6 = (java.lang.Throwable) $r3;

        throw r6;

     label4:
        if i0 > 0 goto label2;

        goto label3;
    }

    private java.nio.ByteBuffer slice(long, long) throws java.io.IOException
    {
        long l0, l1;
        int i2, i3, $i4, $i5;
        java.nio.ByteBuffer r0, $r2, $r3, $r6, r15;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException r1;
        java.lang.Throwable $r9, $r12, r16, r17, r18;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r14;

        r14 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r2 = r14.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: java.nio.ByteBuffer buffer>;

        i2 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        $r3 = r14.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: java.nio.ByteBuffer buffer>;

        i3 = virtualinvoke $r3.<java.nio.ByteBuffer: int limit()>();

        r0 = r14.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: java.nio.ByteBuffer buffer>;

     label1:
        $i4 = specialinvoke r14.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int bufferPos(long)>(l0);

        virtualinvoke r0.<java.nio.Buffer: java.nio.Buffer position(int)>($i4);

        $i5 = specialinvoke r14.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int bufferPos(long)>(l1);

        virtualinvoke r0.<java.nio.Buffer: java.nio.Buffer limit(int)>($i5);

        $r6 = r14.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: java.nio.ByteBuffer buffer>;

        r15 = virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

     label2:
        virtualinvoke r0.<java.nio.Buffer: java.nio.Buffer position(int)>(i2);

        virtualinvoke r0.<java.nio.Buffer: java.nio.Buffer limit(int)>(i3);

        return r15;

     label3:
        $r9 := @caughtexception;

        r16 = $r9;

        virtualinvoke r0.<java.nio.Buffer: java.nio.Buffer position(int)>(i2);

        virtualinvoke r0.<java.nio.Buffer: java.nio.Buffer limit(int)>(i3);

        throw r16;

     label4:
        r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: java.lang.Throwable initCause(java.lang.Throwable)>(r17);

        r18 = (java.lang.Throwable) r1;

        throw r18;

     label5:
        $r12 := @caughtexception;

        r17 = $r12;

        goto label4;

        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void <init>(java.nio.ByteBuffer, boolean)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        java.nio.ByteBuffer r1;
        boolean z0;
        long $l0, $l1, $l3, $l4, $l5, $l7, $l8, $l9;
        int $i2, $i6;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        r1 := @parameter0: java.nio.ByteBuffer;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream: void <init>(androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream-IA)>(null);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int currentLimit> = 2147483647;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: java.nio.ByteBuffer buffer> = r1;

        $l0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: long addressOffset(java.nio.ByteBuffer)>(r1);

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long address> = $l0;

        $l1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long address>;

        $i2 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        $l3 = (long) $i2;

        $l4 = $l1 + $l3;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit> = $l4;

        $l5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long address>;

        $i6 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        $l7 = (long) $i6;

        $l8 = $l5 + $l7;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = $l8;

        $l9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long startPos> = $l9;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean immutable> = z0;

        return;
    }

    void <init>(java.nio.ByteBuffer, boolean, androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder-IA)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        java.nio.ByteBuffer r1;
        boolean z0;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder-IA r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        r1 := @parameter0: java.nio.ByteBuffer;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder-IA;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void <init>(java.nio.ByteBuffer,boolean)>(r1, z0);

        return;
    }

    public void checkLastTagWas(int) throws androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int i0, $i1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int lastTag>;

        if $i1 == i0 goto label1;

        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException invalidEndTag()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label1:
        return;
    }

    public void popLimit(int)
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        i0 := @parameter0: int;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int currentLimit> = i0;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void recomputeBufferSizeAfterLimit()>();

        return;
    }

    private void recomputeBufferSizeAfterLimit()
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int i0, $i1, $i8, $i9, $i10, $i11;
        long $l2, $l3, $l4, $l5, $l6, $l7, $l12, $l13, $l14;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $l3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit>;

        $i1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int bufferSizeAfterLimit>;

        $l2 = (long) $i1;

        $l4 = $l3 + $l2;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit> = $l4;

        $l6 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit>;

        $l5 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long startPos>;

        $l7 = $l6 - $l5;

        i0 = (int) $l7;

        $i8 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int currentLimit>;

        if i0 <= $i8 goto label1;

        $i9 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int currentLimit>;

        $i10 = i0 - $i9;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int bufferSizeAfterLimit> = $i10;

        $l13 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit>;

        $i11 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int bufferSizeAfterLimit>;

        $l12 = (long) $i11;

        $l14 = $l13 - $l12;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit> = $l14;

        return;

     label1:
        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int bufferSizeAfterLimit> = 0;

        return;
    }

    public void skipMessage() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int i0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

     label1:
        i0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readTag()>();

        if i0 == 0 goto label2;

        $z0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: boolean skipField(int)>(i0);

        if $z0 != 0 goto label1;

     label2:
        return;
    }

    public void skipRawBytes(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int i0, $i1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1, $r2;
        long $l2, $l3, $l4;
        java.lang.Throwable r3, r4;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        i0 := @parameter0: int;

        if i0 < 0 goto label3;

        $i1 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int remaining()>();

        if i0 > $i1 goto label3;

        $l3 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l2 = (long) i0;

        $l4 = $l3 + $l2;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = $l4;

        return;

     label1:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException truncatedMessage()>();

        r3 = (java.lang.Throwable) $r1;

        throw r3;

     label2:
        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException negativeSize()>();

        r4 = (java.lang.Throwable) $r2;

        throw r4;

     label3:
        if i0 >= 0 goto label1;

        goto label2;
    }

    private void skipRawVarint() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int $i0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $i0 = specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int remaining()>();

        if $i0 < 10 goto label1;

        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void skipRawVarintFastPath()>();

        return;

     label1:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void skipRawVarintSlowPath()>();

        return;
    }

    private void skipRawVarintFastPath() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        long l0, $l1;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        byte $b2;
        int i3;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        i3 = 0;

     label1:
        if i3 >= 10 goto label2;

        l0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l1 = l0 + 1L;

        r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos> = $l1;

        $b2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: byte getByte(long)>(l0);

        if $b2 < 0 goto label3;

        return;

     label2:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label3:
        i3 = i3 + 1;

        goto label1;
    }

    private void skipRawVarintSlowPath() throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException $r1;
        byte $b0;
        int i1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        i1 = 0;

     label1:
        if i1 >= 10 goto label2;

        $b0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: byte readRawByte()>();

        if $b0 < 0 goto label3;

        return;

     label2:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException malformedVarint()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label3:
        i1 = i1 + 1;

        goto label1;
    }

    public boolean isAtEnd() throws java.io.IOException
    {
        long $l0, $l1;
        byte $b2;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        boolean z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $l1 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long pos>;

        $l0 = r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long limit>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    static boolean isSupported()
    {
        boolean $z0;

        $z0 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.UnsafeUtil: boolean hasUnsafeByteBufferOperations()>();

        return $z0;
    }

    public boolean readBool() throws java.io.IOException
    {
        long $l0;
        byte $b1;
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        boolean z0;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        $l0 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: long readRawVarint64()>();

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

    public boolean skipField(int) throws java.io.IOException
    {
        androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder r0;
        int i0, $i1, $i2, $i3, $i4;
        androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException $r1;
        java.lang.Throwable r2;

        r0 := @this: androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagWireType(int)>(i0);

        tableswitch($i1)
        {
            case 0: goto label7;
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label3;
            case 5: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException: androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException$InvalidWireTypeException invalidWireType()>();

        r2 = (java.lang.Throwable) $r1;

        throw r2;

     label2:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void skipRawBytes(int)>(4);

        return 1;

     label3:
        return 0;

     label4:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void skipMessage()>();

        $i2 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int getTagFieldNumber(int)>(i0);

        $i3 = staticinvoke <androidx.test.espresso.remote.internal.deps.protobuf.WireFormat: int makeTag(int,int)>($i2, 4);

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void checkLastTagWas(int)>($i3);

        return 1;

     label5:
        $i4 = virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: int readRawVarint32()>();

        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void skipRawBytes(int)>($i4);

        return 1;

     label6:
        virtualinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void skipRawBytes(int)>(8);

        return 1;

     label7:
        specialinvoke r0.<androidx.test.espresso.remote.internal.deps.protobuf.CodedInputStream$UnsafeDirectNioDecoder: void skipRawVarint()>();

        return 1;
    }

