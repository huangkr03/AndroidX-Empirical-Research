androidx.media3.test.utils.DownloadBuilder
<androidx.media3.test.utils.DownloadBuilder: androidx.media3.exoplayer.offline.DownloadProgress progress>
<androidx.media3.test.utils.DownloadBuilder: java.lang.String id>
<androidx.media3.test.utils.DownloadBuilder: android.net.Uri uri>
<androidx.media3.test.utils.DownloadBuilder: java.lang.String mimeType>
<androidx.media3.test.utils.DownloadBuilder: java.util.List streamKeys>
<androidx.media3.test.utils.DownloadBuilder: byte[] keySetId>
<androidx.media3.test.utils.DownloadBuilder: java.lang.String cacheKey>
<androidx.media3.test.utils.DownloadBuilder: byte[] customMetadata>
<androidx.media3.test.utils.DownloadBuilder: int state>
<androidx.media3.test.utils.DownloadBuilder: long startTimeMs>
<androidx.media3.test.utils.DownloadBuilder: long updateTimeMs>
<androidx.media3.test.utils.DownloadBuilder: long contentLength>
<androidx.media3.test.utils.DownloadBuilder: int stopReason>
<androidx.media3.test.utils.DownloadBuilder: int failureReason>
    public void <init>(java.lang.String)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        java.lang.String r1;
        android.net.Uri $r2;
        java.util.List $r3;
        byte[] $r4;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("uri");

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r4 = newarray (byte)[0];

        specialinvoke r0.<androidx.media3.test.utils.DownloadBuilder: void <init>(java.lang.String,android.net.Uri,java.lang.String,java.util.List,byte[],java.lang.String,byte[])>(r1, $r2, null, $r3, null, null, $r4);

        return;
    }

    public void <init>(androidx.media3.exoplayer.offline.DownloadRequest)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        androidx.media3.exoplayer.offline.DownloadRequest r1;
        byte[] $r2, $r4;
        java.lang.String $r3, $r6, $r8;
        java.util.List $r5;
        android.net.Uri $r7;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        r1 := @parameter0: androidx.media3.exoplayer.offline.DownloadRequest;

        $r8 = r1.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String id>;

        $r7 = r1.<androidx.media3.exoplayer.offline.DownloadRequest: android.net.Uri uri>;

        $r6 = r1.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String mimeType>;

        $r5 = r1.<androidx.media3.exoplayer.offline.DownloadRequest: java.util.List streamKeys>;

        $r4 = r1.<androidx.media3.exoplayer.offline.DownloadRequest: byte[] keySetId>;

        $r3 = r1.<androidx.media3.exoplayer.offline.DownloadRequest: java.lang.String customCacheKey>;

        $r2 = r1.<androidx.media3.exoplayer.offline.DownloadRequest: byte[] data>;

        specialinvoke r0.<androidx.media3.test.utils.DownloadBuilder: void <init>(java.lang.String,android.net.Uri,java.lang.String,java.util.List,byte[],java.lang.String,byte[])>($r8, $r7, $r6, $r5, $r4, $r3, $r2);

        return;
    }

    private void <init>(java.lang.String, android.net.Uri, java.lang.String, java.util.List, byte[], java.lang.String, byte[])
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        java.lang.String r1, r3, r6;
        android.net.Uri r2;
        java.util.List r4;
        byte[] r5, r7;
        androidx.media3.exoplayer.offline.DownloadProgress $r8;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: byte[];

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.test.utils.DownloadBuilder: java.lang.String id> = r1;

        r0.<androidx.media3.test.utils.DownloadBuilder: android.net.Uri uri> = r2;

        r0.<androidx.media3.test.utils.DownloadBuilder: java.lang.String mimeType> = r3;

        r0.<androidx.media3.test.utils.DownloadBuilder: java.util.List streamKeys> = r4;

        r0.<androidx.media3.test.utils.DownloadBuilder: byte[] keySetId> = r5;

        r0.<androidx.media3.test.utils.DownloadBuilder: java.lang.String cacheKey> = r6;

        r0.<androidx.media3.test.utils.DownloadBuilder: byte[] customMetadata> = r7;

        r0.<androidx.media3.test.utils.DownloadBuilder: int state> = 0;

        r0.<androidx.media3.test.utils.DownloadBuilder: long contentLength> = -1L;

        r0.<androidx.media3.test.utils.DownloadBuilder: int failureReason> = 0;

        $r8 = new androidx.media3.exoplayer.offline.DownloadProgress;

        specialinvoke $r8.<androidx.media3.exoplayer.offline.DownloadProgress: void <init>()>();

        r0.<androidx.media3.test.utils.DownloadBuilder: androidx.media3.exoplayer.offline.DownloadProgress progress> = $r8;

        return;
    }

    public androidx.media3.test.utils.DownloadBuilder setUri(java.lang.String)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        java.lang.String r1;
        android.net.Uri $r2;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r1);

        r0.<androidx.media3.test.utils.DownloadBuilder: android.net.Uri uri> = $r2;

        return r0;
    }

    public androidx.media3.test.utils.DownloadBuilder setUri(android.net.Uri)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        android.net.Uri r1;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        r1 := @parameter0: android.net.Uri;

        r0.<androidx.media3.test.utils.DownloadBuilder: android.net.Uri uri> = r1;

        return r0;
    }

    public androidx.media3.test.utils.DownloadBuilder setMimeType(java.lang.String)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.media3.test.utils.DownloadBuilder: java.lang.String mimeType> = r1;

        return r0;
    }

    public androidx.media3.test.utils.DownloadBuilder setKeySetId(byte[])
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        byte[] r1;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        r1 := @parameter0: byte[];

        r0.<androidx.media3.test.utils.DownloadBuilder: byte[] keySetId> = r1;

        return r0;
    }

    public androidx.media3.test.utils.DownloadBuilder setCacheKey(java.lang.String)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.media3.test.utils.DownloadBuilder: java.lang.String cacheKey> = r1;

        return r0;
    }

    public androidx.media3.test.utils.DownloadBuilder setState(int)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        int i0;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        i0 := @parameter0: int;

        r0.<androidx.media3.test.utils.DownloadBuilder: int state> = i0;

        return r0;
    }

    public androidx.media3.test.utils.DownloadBuilder setPercentDownloaded(float)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        float f0;
        androidx.media3.exoplayer.offline.DownloadProgress $r1;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.media3.test.utils.DownloadBuilder: androidx.media3.exoplayer.offline.DownloadProgress progress>;

        $r1.<androidx.media3.exoplayer.offline.DownloadProgress: float percentDownloaded> = f0;

        return r0;
    }

    public androidx.media3.test.utils.DownloadBuilder setBytesDownloaded(long)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        long l0;
        androidx.media3.exoplayer.offline.DownloadProgress $r1;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.test.utils.DownloadBuilder: androidx.media3.exoplayer.offline.DownloadProgress progress>;

        $r1.<androidx.media3.exoplayer.offline.DownloadProgress: long bytesDownloaded> = l0;

        return r0;
    }

    public androidx.media3.test.utils.DownloadBuilder setContentLength(long)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        long l0;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        l0 := @parameter0: long;

        r0.<androidx.media3.test.utils.DownloadBuilder: long contentLength> = l0;

        return r0;
    }

    public androidx.media3.test.utils.DownloadBuilder setFailureReason(int)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        int i0;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        i0 := @parameter0: int;

        r0.<androidx.media3.test.utils.DownloadBuilder: int failureReason> = i0;

        return r0;
    }

    public androidx.media3.test.utils.DownloadBuilder setStopReason(int)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        int i0;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        i0 := @parameter0: int;

        r0.<androidx.media3.test.utils.DownloadBuilder: int stopReason> = i0;

        return r0;
    }

    public androidx.media3.test.utils.DownloadBuilder setStartTimeMs(long)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        long l0;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        l0 := @parameter0: long;

        r0.<androidx.media3.test.utils.DownloadBuilder: long startTimeMs> = l0;

        return r0;
    }

    public androidx.media3.test.utils.DownloadBuilder setUpdateTimeMs(long)
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        long l0;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        l0 := @parameter0: long;

        r0.<androidx.media3.test.utils.DownloadBuilder: long updateTimeMs> = l0;

        return r0;
    }

    public transient androidx.media3.test.utils.DownloadBuilder setStreamKeys(androidx.media3.common.StreamKey[])
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        androidx.media3.common.StreamKey[] r1;
        java.util.List $r2;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        r1 := @parameter0: androidx.media3.common.StreamKey[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        r0.<androidx.media3.test.utils.DownloadBuilder: java.util.List streamKeys> = $r2;

        return r0;
    }

    public androidx.media3.test.utils.DownloadBuilder setCustomMetadata(byte[])
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        byte[] r1;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        r1 := @parameter0: byte[];

        r0.<androidx.media3.test.utils.DownloadBuilder: byte[] customMetadata> = r1;

        return r0;
    }

    public androidx.media3.exoplayer.offline.Download build()
    {
        androidx.media3.test.utils.DownloadBuilder r0;
        androidx.media3.exoplayer.offline.DownloadRequest r1;
        androidx.media3.exoplayer.offline.DownloadRequest$Builder $r2, $r6, $r8, $r10, $r12, $r14;
        android.net.Uri $r3;
        java.lang.String $r4, $r5, $r11;
        java.util.List $r7;
        byte[] $r9, $r13;
        androidx.media3.exoplayer.offline.Download $r15;
        androidx.media3.exoplayer.offline.DownloadProgress $r16;
        int $i0, $i1, $i5;
        long $l2, $l3, $l4;

        r0 := @this: androidx.media3.test.utils.DownloadBuilder;

        $r2 = new androidx.media3.exoplayer.offline.DownloadRequest$Builder;

        $r4 = r0.<androidx.media3.test.utils.DownloadBuilder: java.lang.String id>;

        $r3 = r0.<androidx.media3.test.utils.DownloadBuilder: android.net.Uri uri>;

        specialinvoke $r2.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: void <init>(java.lang.String,android.net.Uri)>($r4, $r3);

        $r5 = r0.<androidx.media3.test.utils.DownloadBuilder: java.lang.String mimeType>;

        $r6 = virtualinvoke $r2.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setMimeType(java.lang.String)>($r5);

        $r7 = r0.<androidx.media3.test.utils.DownloadBuilder: java.util.List streamKeys>;

        $r8 = virtualinvoke $r6.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setStreamKeys(java.util.List)>($r7);

        $r9 = r0.<androidx.media3.test.utils.DownloadBuilder: byte[] keySetId>;

        $r10 = virtualinvoke $r8.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setKeySetId(byte[])>($r9);

        $r11 = r0.<androidx.media3.test.utils.DownloadBuilder: java.lang.String cacheKey>;

        $r12 = virtualinvoke $r10.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setCustomCacheKey(java.lang.String)>($r11);

        $r13 = r0.<androidx.media3.test.utils.DownloadBuilder: byte[] customMetadata>;

        $r14 = virtualinvoke $r12.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest$Builder setData(byte[])>($r13);

        r1 = virtualinvoke $r14.<androidx.media3.exoplayer.offline.DownloadRequest$Builder: androidx.media3.exoplayer.offline.DownloadRequest build()>();

        $r15 = new androidx.media3.exoplayer.offline.Download;

        $i5 = r0.<androidx.media3.test.utils.DownloadBuilder: int state>;

        $l4 = r0.<androidx.media3.test.utils.DownloadBuilder: long startTimeMs>;

        $l3 = r0.<androidx.media3.test.utils.DownloadBuilder: long updateTimeMs>;

        $l2 = r0.<androidx.media3.test.utils.DownloadBuilder: long contentLength>;

        $i1 = r0.<androidx.media3.test.utils.DownloadBuilder: int stopReason>;

        $i0 = r0.<androidx.media3.test.utils.DownloadBuilder: int failureReason>;

        $r16 = r0.<androidx.media3.test.utils.DownloadBuilder: androidx.media3.exoplayer.offline.DownloadProgress progress>;

        specialinvoke $r15.<androidx.media3.exoplayer.offline.Download: void <init>(androidx.media3.exoplayer.offline.DownloadRequest,int,long,long,long,int,int,androidx.media3.exoplayer.offline.DownloadProgress)>(r1, $i5, $l4, $l3, $l2, $i1, $i0, $r16);

        return $r15;
    }

