androidx.appsearch.localstorage.AppSearchImpl
<androidx.appsearch.localstorage.AppSearchImpl: java.lang.String TAG>
<androidx.appsearch.localstorage.AppSearchImpl: long EMPTY_PAGE_TOKEN>
<androidx.appsearch.localstorage.AppSearchImpl: int CHECK_OPTIMIZE_INTERVAL>
<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.GetResultSpecProto GET_RESULT_SPEC_NO_PROPERTIES>
<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>
<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.OptimizeStrategy mOptimizeStrategy>
<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.LimitConfig mLimitConfig>
<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>
<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>
<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>
<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mDocumentCountMapLocked>
<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>
<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>
<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>
<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityChecker mVisibilityCheckerLocked>
<androidx.appsearch.localstorage.AppSearchImpl: int mOptimizeIntervalCountLocked>
<androidx.appsearch.localstorage.AppSearchImpl: boolean mClosedLocked>
    public static androidx.appsearch.localstorage.AppSearchImpl create(java.io.File, androidx.appsearch.localstorage.LimitConfig, androidx.appsearch.localstorage.stats.InitializeStats$Builder, androidx.appsearch.localstorage.OptimizeStrategy, androidx.appsearch.localstorage.visibilitystore.VisibilityChecker) throws androidx.appsearch.exceptions.AppSearchException
    {
        java.io.File r0;
        androidx.appsearch.localstorage.LimitConfig r1;
        androidx.appsearch.localstorage.stats.InitializeStats$Builder r2;
        androidx.appsearch.localstorage.OptimizeStrategy r3;
        androidx.appsearch.localstorage.visibilitystore.VisibilityChecker r4;
        androidx.appsearch.localstorage.AppSearchImpl $r5;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: androidx.appsearch.localstorage.LimitConfig;

        r2 := @parameter2: androidx.appsearch.localstorage.stats.InitializeStats$Builder;

        r3 := @parameter3: androidx.appsearch.localstorage.OptimizeStrategy;

        r4 := @parameter4: androidx.appsearch.localstorage.visibilitystore.VisibilityChecker;

        $r5 = new androidx.appsearch.localstorage.AppSearchImpl;

        specialinvoke $r5.<androidx.appsearch.localstorage.AppSearchImpl: void <init>(java.io.File,androidx.appsearch.localstorage.LimitConfig,androidx.appsearch.localstorage.stats.InitializeStats$Builder,androidx.appsearch.localstorage.OptimizeStrategy,androidx.appsearch.localstorage.visibilitystore.VisibilityChecker)>(r0, r1, r2, r3, r4);

        return $r5;
    }

    private void <init>(java.io.File, androidx.appsearch.localstorage.LimitConfig, androidx.appsearch.localstorage.stats.InitializeStats$Builder, androidx.appsearch.localstorage.OptimizeStrategy, androidx.appsearch.localstorage.visibilitystore.VisibilityChecker) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.io.File r1;
        androidx.appsearch.localstorage.LimitConfig r2, $r20;
        androidx.appsearch.localstorage.stats.InitializeStats$Builder r3, $r49, $r52;
        androidx.appsearch.localstorage.OptimizeStrategy r4, $r22;
        androidx.appsearch.localstorage.visibilitystore.VisibilityChecker r5;
        com.google.android.icing.proto.IcingSearchEngineOptions r6;
        long l0, l1, $l5, $l7, $l8, $l11, $l12, l20;
        com.google.android.icing.proto.SchemaProto r7;
        com.google.android.icing.proto.GetAllNamespacesResultProto r8;
        com.google.android.icing.proto.StorageInfoProto r9;
        java.util.List r10, r63;
        java.lang.Throwable r11, $r55, $r58, r65;
        java.util.concurrent.locks.ReentrantReadWriteLock $r12;
        androidx.collection.ArrayMap $r13, $r15, $r16;
        java.util.HashMap $r14;
        androidx.appsearch.localstorage.ObserverManager $r17;
        java.lang.Object $r19, $r21, $r42, $r45;
        java.util.concurrent.locks.ReadWriteLock $r23, $r38, $r56;
        java.util.concurrent.locks.Lock $r24, $r39, $r57;
        com.google.android.icing.proto.IcingSearchEngineOptions$Builder $r25, $r27;
        java.lang.String $r26, $r44, $r47, r62, r64;
        com.google.android.icing.protobuf.GeneratedMessageLite $r28;
        com.google.android.icing.IcingSearchEngine $r29, $r30, $r32, $r35;
        int $i2, $i3, $i4, $i6, $i9, $i10, $i13, $i14, $i16, i17, $i18, i19;
        java.lang.Integer $r31, $r36;
        com.google.android.icing.proto.StatusProto $r33, $r34, $r37, $r48, $r51;
        java.util.Map $r43, $r46;
        com.google.android.icing.proto.InitializeStatsProto $r54;
        com.google.android.icing.proto.InitializeResultProto r60;
        com.google.android.icing.proto.SchemaTypeConfigProto r61;
        androidx.appsearch.localstorage.visibilitystore.VisibilityStore $r66;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: androidx.appsearch.localstorage.LimitConfig;

        r3 := @parameter2: androidx.appsearch.localstorage.stats.InitializeStats$Builder;

        r4 := @parameter3: androidx.appsearch.localstorage.OptimizeStrategy;

        r5 := @parameter4: androidx.appsearch.localstorage.visibilitystore.VisibilityChecker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r12 = new java.util.concurrent.locks.ReentrantReadWriteLock;

        specialinvoke $r12.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();

        r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock> = $r12;

        $r13 = new androidx.collection.ArrayMap;

        specialinvoke $r13.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked> = $r13;

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked> = $r14;

        $r15 = new androidx.collection.ArrayMap;

        specialinvoke $r15.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mDocumentCountMapLocked> = $r15;

        $r16 = new androidx.collection.ArrayMap;

        specialinvoke $r16.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked> = $r16;

        $r17 = new androidx.appsearch.localstorage.ObserverManager;

        specialinvoke $r17.<androidx.appsearch.localstorage.ObserverManager: void <init>()>();

        r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager> = $r17;

        r0.<androidx.appsearch.localstorage.AppSearchImpl: int mOptimizeIntervalCountLocked> = 0;

        r0.<androidx.appsearch.localstorage.AppSearchImpl: boolean mClosedLocked> = 0;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r19 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r20 = (androidx.appsearch.localstorage.LimitConfig) $r19;

        r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.LimitConfig mLimitConfig> = $r20;

        $r21 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r22 = (androidx.appsearch.localstorage.OptimizeStrategy) $r21;

        r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.OptimizeStrategy mOptimizeStrategy> = $r22;

        r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityChecker mVisibilityCheckerLocked> = r5;

        $r23 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r24 = interfaceinvoke $r23.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r24.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        $r25 = staticinvoke <com.google.android.icing.proto.IcingSearchEngineOptions: com.google.android.icing.proto.IcingSearchEngineOptions$Builder newBuilder()>();

        $r26 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r27 = virtualinvoke $r25.<com.google.android.icing.proto.IcingSearchEngineOptions$Builder: com.google.android.icing.proto.IcingSearchEngineOptions$Builder setBaseDir(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<com.google.android.icing.proto.IcingSearchEngineOptions$Builder: com.google.android.icing.protobuf.GeneratedMessageLite build()>();

        r6 = (com.google.android.icing.proto.IcingSearchEngineOptions) $r28;

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object)>("AppSearchImpl", "Constructing IcingSearchEngine, request", r6);

        $r29 = new com.google.android.icing.IcingSearchEngine;

        specialinvoke $r29.<com.google.android.icing.IcingSearchEngine: void <init>(com.google.android.icing.proto.IcingSearchEngineOptions)>(r6);

        r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked> = $r29;

        $r30 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        $i2 = staticinvoke <androidx.core.util.ObjectsCompat: int hashCode(java.lang.Object)>($r30);

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object)>("AppSearchImpl", "Constructing IcingSearchEngine, response", $r31);

     label02:
        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String)>("AppSearchImpl", "icingSearchEngine.initialize, request");

        $r32 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r60 = virtualinvoke $r32.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.InitializeResultProto initialize()>();

        $r33 = virtualinvoke r60.<com.google.android.icing.proto.InitializeResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "icingSearchEngine.initialize, response", $r33, r60);

        if r3 == null goto label03;

        $r51 = virtualinvoke r60.<com.google.android.icing.proto.InitializeResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        $i14 = staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: int statusProtoToResultCode(com.google.android.icing.proto.StatusProto)>($r51);

        $r52 = virtualinvoke r3.<androidx.appsearch.localstorage.stats.InitializeStats$Builder: androidx.appsearch.localstorage.stats.InitializeStats$Builder setStatusCode(int)>($i14);

        virtualinvoke $r52.<androidx.appsearch.localstorage.stats.InitializeStats$Builder: androidx.appsearch.localstorage.stats.InitializeStats$Builder setHasDeSync(boolean)>(0);

        $r54 = virtualinvoke r60.<com.google.android.icing.proto.InitializeResultProto: com.google.android.icing.proto.InitializeStatsProto getInitializeStats()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchLoggerHelper: void copyNativeStats(com.google.android.icing.proto.InitializeStatsProto,androidx.appsearch.localstorage.stats.InitializeStats$Builder)>($r54, r3);

     label03:
        $r34 = virtualinvoke r60.<com.google.android.icing.proto.InitializeResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r34);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r7 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.SchemaProto getSchemaProtoLocked()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String)>("AppSearchImpl", "init:getAllNamespaces, request");

        $r35 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r8 = virtualinvoke $r35.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.GetAllNamespacesResultProto getAllNamespaces()>();

        $i3 = virtualinvoke r8.<com.google.android.icing.proto.GetAllNamespacesResultProto: int getNamespacesCount()>();

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "init:getAllNamespaces, response", $r36, r8);

        r9 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.StorageInfoProto getRawStorageInfoProto()>();

        if r3 == null goto label04;

        $r48 = virtualinvoke r8.<com.google.android.icing.proto.GetAllNamespacesResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        $i10 = staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: int statusProtoToResultCode(com.google.android.icing.proto.StatusProto)>($r48);

        $r49 = virtualinvoke r3.<androidx.appsearch.localstorage.stats.InitializeStats$Builder: androidx.appsearch.localstorage.stats.InitializeStats$Builder setStatusCode(int)>($i10);

        $l11 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l12 = $l11 - l0;

        $i13 = (int) $l12;

        virtualinvoke $r49.<androidx.appsearch.localstorage.stats.InitializeStats$Builder: androidx.appsearch.localstorage.stats.InitializeStats$Builder setPrepareSchemaAndNamespacesLatencyMillis(int)>($i13);

     label04:
        $r37 = virtualinvoke r8.<com.google.android.icing.proto.GetAllNamespacesResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r37);

        r10 = virtualinvoke r7.<com.google.android.icing.proto.SchemaProto: java.util.List getTypesList()>();

        i17 = 0;

     label05:
        $i18 = interfaceinvoke r10.<java.util.List: int size()>();

        if i17 >= $i18 goto label06;

        $r45 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i17);

        r61 = (com.google.android.icing.proto.SchemaTypeConfigProto) $r45;

        r62 = virtualinvoke r61.<com.google.android.icing.proto.SchemaTypeConfigProto: java.lang.String getSchemaType()>();

        $r46 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        $r47 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String getPrefix(java.lang.String)>(r62);

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void addToMap(java.util.Map,java.lang.String,com.google.android.icing.proto.SchemaTypeConfigProto)>($r46, $r47, r61);

        i17 = i17 + 1;

        goto label05;

     label06:
        r63 = virtualinvoke r8.<com.google.android.icing.proto.GetAllNamespacesResultProto: java.util.List getNamespacesList()>();

        i19 = 0;

     label07:
        $i4 = interfaceinvoke r63.<java.util.List: int size()>();

        if i19 >= $i4 goto label08;

        $r42 = interfaceinvoke r63.<java.util.List: java.lang.Object get(int)>(i19);

        r64 = (java.lang.String) $r42;

        $r43 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        $r44 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String getPrefix(java.lang.String)>(r64);

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void addToMap(java.util.Map,java.lang.String,java.lang.String)>($r43, $r44, r64);

        i19 = i19 + 1;

        goto label07;

     label08:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void rebuildDocumentCountMapLocked(com.google.android.icing.proto.StorageInfoProto)>(r9);

        if r3 == null goto label09;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l8 = $l7 - l0;

        $i9 = (int) $l8;

        virtualinvoke r3.<androidx.appsearch.localstorage.stats.InitializeStats$Builder: androidx.appsearch.localstorage.stats.InitializeStats$Builder setPrepareSchemaAndNamespacesLatencyMillis(int)>($i9);

     label09:
        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String)>("AppSearchImpl", "Init completed successfully");

     label10:
        goto label13;

     label11:
        $r58 := @caughtexception;

        r65 = $r58;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AppSearchImpl", "Error initializing, resetting IcingSearchEngine.", r65);

        if r3 == null goto label12;

        $i16 = virtualinvoke r65.<androidx.appsearch.exceptions.AppSearchException: int getResultCode()>();

        virtualinvoke r3.<androidx.appsearch.localstorage.stats.InitializeStats$Builder: androidx.appsearch.localstorage.stats.InitializeStats$Builder setStatusCode(int)>($i16);

     label12:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void resetLocked(androidx.appsearch.localstorage.stats.InitializeStats$Builder)>(r3);

     label13:
        l20 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r66 = new androidx.appsearch.localstorage.visibilitystore.VisibilityStore;

        specialinvoke $r66.<androidx.appsearch.localstorage.visibilitystore.VisibilityStore: void <init>(androidx.appsearch.localstorage.AppSearchImpl)>(r0);

        r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked> = $r66;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        if r3 == null goto label14;

        $l5 = l1 - l20;

        $i6 = (int) $l5;

        virtualinvoke r3.<androidx.appsearch.localstorage.stats.InitializeStats$Builder: androidx.appsearch.localstorage.stats.InitializeStats$Builder setPrepareVisibilityStoreLatencyMillis(int)>($i6);

     label14:
        $r38 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r39 = interfaceinvoke $r38.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r39.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label17;

     label15:
        $r55 := @caughtexception;

        r11 = $r55;

     label16:
        $r56 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r57 = interfaceinvoke $r56.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r57.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r11;

     label17:
        return;

        catch androidx.appsearch.exceptions.AppSearchException from label02 to label10 with label11;
        catch java.lang.Throwable from label01 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private void throwIfClosedLocked()
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        $z0 = r0.<androidx.appsearch.localstorage.AppSearchImpl: boolean mClosedLocked>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to use a closed AppSearchImpl instance.");

        throw $r1;

     label1:
        return;
    }

    public void close()
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.Throwable r1, r2, $r11, $r14;
        java.util.concurrent.locks.ReadWriteLock $r3, $r7, $r9, $r12, $r15;
        java.util.concurrent.locks.Lock $r4, $r8, $r10, $r13, $r16;
        boolean $z0;
        com.google.android.icing.proto.PersistType$Code $r5;
        com.google.android.icing.IcingSearchEngine $r6;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        $r3 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $z0 = r0.<androidx.appsearch.localstorage.AppSearchImpl: boolean mClosedLocked>;

        if $z0 == 0 goto label3;

     label2:
        $r9 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r10 = interfaceinvoke $r9.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label3:
        $r5 = <com.google.android.icing.proto.PersistType$Code: com.google.android.icing.proto.PersistType$Code FULL>;

        virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void persistToDisk(com.google.android.icing.proto.PersistType$Code)>($r5);

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String)>("AppSearchImpl", "icingSearchEngine.close, request");

        $r6 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        virtualinvoke $r6.<com.google.android.icing.IcingSearchEngine: void close()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String)>("AppSearchImpl", "icingSearchEngine.close, response");

        r0.<androidx.appsearch.localstorage.AppSearchImpl: boolean mClosedLocked> = 1;

     label4:
        $r7 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r8 = interfaceinvoke $r7.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label8;

     label5:
        $r14 := @caughtexception;

        r1 = $r14;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppSearchImpl", "Error when closing AppSearchImpl.", r1);

     label6:
        $r15 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r16 = interfaceinvoke $r15.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r16.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label8;

     label7:
        $r11 := @caughtexception;

        r2 = $r11;

        $r12 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r13 = interfaceinvoke $r12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r2;

     label8:
        return;

        catch androidx.appsearch.exceptions.AppSearchException from label1 to label2 with label5;
        catch androidx.appsearch.exceptions.AppSearchException from label3 to label4 with label5;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public androidx.appsearch.app.InternalSetSchemaResponse setSchema(java.lang.String, java.lang.String, java.util.List, java.util.List, boolean, int, androidx.appsearch.localstorage.stats.SetSchemaStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2;
        java.util.List r3, r4;
        boolean z0, $z1;
        int i0;
        androidx.appsearch.localstorage.stats.SetSchemaStats$Builder r5;
        java.lang.Throwable r6, $r14;
        java.util.concurrent.locks.ReadWriteLock $r7, $r10, $r12, $r15;
        java.util.concurrent.locks.Lock $r8, $r11, $r13, $r16;
        androidx.appsearch.localstorage.ObserverManager $r9;
        androidx.appsearch.app.InternalSetSchemaResponse r17, r18;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        z0 := @parameter4: boolean;

        i0 := @parameter5: int;

        r5 := @parameter6: androidx.appsearch.localstorage.stats.SetSchemaStats$Builder;

        $r7 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r8 = interfaceinvoke $r7.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        $r9 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>;

        $z1 = virtualinvoke $r9.<androidx.appsearch.localstorage.ObserverManager: boolean isPackageObserved(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        r17 = specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.InternalSetSchemaResponse doSetSchemaWithChangeNotificationLocked(java.lang.String,java.lang.String,java.util.List,java.util.List,boolean,int,androidx.appsearch.localstorage.stats.SetSchemaStats$Builder)>(r1, r2, r3, r4, z0, i0, r5);

     label2:
        $r12 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r13 = interfaceinvoke $r12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void unlock()>();

        return r17;

     label3:
        r18 = specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.InternalSetSchemaResponse doSetSchemaNoChangeNotificationLocked(java.lang.String,java.lang.String,java.util.List,java.util.List,boolean,int,androidx.appsearch.localstorage.stats.SetSchemaStats$Builder)>(r1, r2, r3, r4, z0, i0, r5);

     label4:
        $r10 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r11 = interfaceinvoke $r10.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void unlock()>();

        return r18;

     label5:
        $r14 := @caughtexception;

        r6 = $r14;

     label6:
        $r15 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r16 = interfaceinvoke $r15.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r16.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private androidx.appsearch.app.InternalSetSchemaResponse doSetSchemaWithChangeNotificationLocked(java.lang.String, java.lang.String, java.util.List, java.util.List, boolean, int, androidx.appsearch.localstorage.stats.SetSchemaStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, r16, r46, r52, r55;
        java.util.List r3, r4;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z9, $z10, $z12, $z13, $z14, $z15, z16, $z17, $z18, $z19, z20;
        int i0, $i1, $i2, $i3, $i4;
        androidx.appsearch.localstorage.stats.SetSchemaStats$Builder r5;
        androidx.appsearch.app.GetSchemaResponse r6;
        java.util.Set r7, r12, r13, $r23, $r24, $r35, $r42;
        androidx.collection.ArrayMap r8, r9, $r18, $r19, $r20, $r21, r48, r49;
        androidx.appsearch.app.AppSearchSchema r10, r11, r45, r51;
        androidx.collection.ArraySet r14, $r22, r53, $r58;
        java.util.Iterator r15, r44, r50, r54;
        androidx.appsearch.localstorage.visibilitystore.CallerAccess $r17;
        java.lang.Object $r25, $r26, $r27, $r28, $r30, $r37, $r56, $r57;
        androidx.appsearch.localstorage.ObserverManager $r29, $r34, $r41;
        androidx.appsearch.localstorage.visibilitystore.VisibilityChecker $r32, $r39;
        androidx.appsearch.localstorage.visibilitystore.VisibilityStore $r33, $r40;
        androidx.appsearch.app.InternalSetSchemaResponse r47;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        z0 := @parameter4: boolean;

        i0 := @parameter5: int;

        r5 := @parameter6: androidx.appsearch.localstorage.stats.SetSchemaStats$Builder;

        $r17 = new androidx.appsearch.localstorage.visibilitystore.CallerAccess;

        specialinvoke $r17.<androidx.appsearch.localstorage.visibilitystore.CallerAccess: void <init>(java.lang.String)>(r1);

        r6 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.GetSchemaResponse getSchema(java.lang.String,java.lang.String,androidx.appsearch.localstorage.visibilitystore.CallerAccess)>(r1, r2, $r17);

        r7 = virtualinvoke r6.<androidx.appsearch.app.GetSchemaResponse: java.util.Set getSchemas()>();

        $r18 = new androidx.collection.ArrayMap;

        $i1 = interfaceinvoke r7.<java.util.Set: int size()>();

        specialinvoke $r18.<androidx.collection.ArrayMap: void <init>(int)>($i1);

        r8 = $r18;

        $r19 = new androidx.collection.ArrayMap;

        $i2 = interfaceinvoke r7.<java.util.Set: int size()>();

        specialinvoke $r19.<androidx.collection.ArrayMap: void <init>(int)>($i2);

        r9 = $r19;

        r44 = interfaceinvoke r7.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z5 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label02;

        $r37 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (androidx.appsearch.app.AppSearchSchema) $r37;

        r46 = virtualinvoke r45.<androidx.appsearch.app.AppSearchSchema: java.lang.String getSchemaType()>();

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r46, r45);

        $r41 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>;

        $r40 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        $r39 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityChecker mVisibilityCheckerLocked>;

        $r42 = virtualinvoke $r41.<androidx.appsearch.localstorage.ObserverManager: java.util.Set getObserversForSchemaType(java.lang.String,java.lang.String,java.lang.String,androidx.appsearch.localstorage.visibilitystore.VisibilityStore,androidx.appsearch.localstorage.visibilitystore.VisibilityChecker)>(r1, r2, r46, $r40, $r39);

        interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r46, $r42);

        goto label01;

     label02:
        r47 = specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.InternalSetSchemaResponse doSetSchemaNoChangeNotificationLocked(java.lang.String,java.lang.String,java.util.List,java.util.List,boolean,int,androidx.appsearch.localstorage.stats.SetSchemaStats$Builder)>(r1, r2, r3, r4, z0, i0, r5);

        $z6 = virtualinvoke r47.<androidx.appsearch.app.InternalSetSchemaResponse: boolean isSuccess()>();

        if $z6 != 0 goto label03;

        return r47;

     label03:
        $r20 = new androidx.collection.ArrayMap;

        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        specialinvoke $r20.<androidx.collection.ArrayMap: void <init>(int)>($i3);

        r48 = $r20;

        $r21 = new androidx.collection.ArrayMap;

        $i4 = interfaceinvoke r3.<java.util.List: int size()>();

        specialinvoke $r21.<androidx.collection.ArrayMap: void <init>(int)>($i4);

        r49 = $r21;

        r50 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z7 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label05;

        $r30 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        r51 = (androidx.appsearch.app.AppSearchSchema) $r30;

        r52 = virtualinvoke r51.<androidx.appsearch.app.AppSearchSchema: java.lang.String getSchemaType()>();

        interfaceinvoke r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r52, r51);

        $r34 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>;

        $r33 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        $r32 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityChecker mVisibilityCheckerLocked>;

        $r35 = virtualinvoke $r34.<androidx.appsearch.localstorage.ObserverManager: java.util.Set getObserversForSchemaType(java.lang.String,java.lang.String,java.lang.String,androidx.appsearch.localstorage.visibilitystore.VisibilityStore,androidx.appsearch.localstorage.visibilitystore.VisibilityChecker)>(r1, r2, r52, $r33, $r32);

        interfaceinvoke r49.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r52, $r35);

        goto label04;

     label05:
        $r22 = new androidx.collection.ArraySet;

        $r23 = interfaceinvoke r8.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r22.<androidx.collection.ArraySet: void <init>(java.util.Collection)>($r23);

        r53 = $r22;

        $r24 = interfaceinvoke r48.<java.util.Map: java.util.Set keySet()>();

        interfaceinvoke r53.<java.util.Set: boolean addAll(java.util.Collection)>($r24);

        r54 = interfaceinvoke r53.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z13 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label24;

        $r25 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        r55 = (java.lang.String) $r25;

        $r26 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r55);

        r10 = (androidx.appsearch.app.AppSearchSchema) $r26;

        $r27 = interfaceinvoke r48.<java.util.Map: java.lang.Object get(java.lang.Object)>(r55);

        r11 = (androidx.appsearch.app.AppSearchSchema) $r27;

        if r10 == null goto label07;

        $z14 = 1;

        goto label08;

     label07:
        $z14 = 0;

     label08:
        z1 = $z14;

        if r11 == null goto label09;

        $z15 = 1;

        goto label10;

     label09:
        $z15 = 0;

     label10:
        z2 = $z15;

        if z1 != 0 goto label11;

        if z2 != 0 goto label11;

        goto label06;

     label11:
        z16 = 1;

        if r10 == null goto label12;

        $z12 = virtualinvoke r10.<androidx.appsearch.app.AppSearchSchema: boolean equals(java.lang.Object)>(r11);

        if $z12 == 0 goto label12;

        z16 = 0;

     label12:
        $r56 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r55);

        r12 = (java.util.Set) $r56;

        $r57 = interfaceinvoke r49.<java.util.Map: java.lang.Object get(java.lang.Object)>(r55);

        r13 = (java.util.Set) $r57;

        $r58 = new androidx.collection.ArraySet;

        specialinvoke $r58.<androidx.collection.ArraySet: void <init>(java.util.Collection)>(r12);

        r14 = $r58;

        if r13 == null goto label13;

        interfaceinvoke r14.<java.util.Set: boolean addAll(java.util.Collection)>(r13);

     label13:
        r15 = interfaceinvoke r14.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z17 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label23;

        $r28 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r28;

        if z1 == 0 goto label15;

        if r12 == null goto label15;

        $z10 = interfaceinvoke r12.<java.util.Set: boolean contains(java.lang.Object)>(r16);

        if $z10 == 0 goto label15;

        $z18 = 1;

        goto label16;

     label15:
        $z18 = 0;

     label16:
        z3 = $z18;

        if z2 == 0 goto label17;

        if r13 == null goto label17;

        $z9 = interfaceinvoke r13.<java.util.Set: boolean contains(java.lang.Object)>(r16);

        if $z9 == 0 goto label17;

        $z19 = 1;

        goto label18;

     label17:
        $z19 = 0;

     label18:
        z4 = $z19;

        z20 = 0;

        if z3 == 0 goto label19;

        if z4 == 0 goto label19;

        if z16 == 0 goto label19;

        z20 = 1;

        goto label21;

     label19:
        if z3 != 0 goto label20;

        if z4 == 0 goto label20;

        z20 = 1;

        goto label21;

     label20:
        if z3 == 0 goto label21;

        if z4 != 0 goto label21;

        z20 = 1;

     label21:
        if z20 == 0 goto label22;

        $r29 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>;

        virtualinvoke $r29.<androidx.appsearch.localstorage.ObserverManager: void onSchemaChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r16, r1, r2, r55);

     label22:
        goto label14;

     label23:
        goto label06;

     label24:
        return r47;
    }

    private androidx.appsearch.app.InternalSetSchemaResponse doSetSchemaNoChangeNotificationLocked(java.lang.String, java.lang.String, java.util.List, java.util.List, boolean, int, androidx.appsearch.localstorage.stats.SetSchemaStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, r9, $r38, r63, r71, r75;
        java.util.List r3, r4;
        boolean z0, z1, $z2, $z3, $z7, $z8, z9;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        androidx.appsearch.localstorage.stats.SetSchemaStats$Builder r5;
        com.google.android.icing.proto.SchemaProto$Builder r6, r7;
        com.google.android.icing.proto.SetSchemaResultProto r8;
        com.google.android.icing.proto.SchemaProto $r10, $r13, r65;
        com.google.android.icing.protobuf.GeneratedMessageLite$Builder $r11;
        com.google.android.icing.protobuf.GeneratedMessageLite $r12, $r14;
        java.lang.Integer $r15;
        com.google.android.icing.IcingSearchEngine $r16;
        com.google.android.icing.proto.StatusProto $r17, $r18, $r21, $r48;
        com.google.android.icing.proto.StatusProto$Code $r19, $r20;
        java.util.Map $r22, $r30, $r45, $r47;
        java.util.Collection $r23;
        java.util.Set $r24, $r31, $r32, $r55, $r58;
        androidx.appsearch.localstorage.visibilitystore.VisibilityStore $r25, $r33, $r34;
        androidx.appsearch.app.SetSchemaResponse $r26, r67;
        androidx.appsearch.app.InternalSetSchemaResponse $r27, $r60;
        java.util.ArrayList $r28, r72;
        androidx.collection.ArraySet $r29, r73;
        java.lang.Object $r35, $r44, $r46, $r50;
        java.lang.StringBuilder $r36, $r37, $r39, $r53, $r54, $r56, $r57, $r59;
        androidx.appsearch.app.VisibilityDocument $r40, r74;
        androidx.appsearch.app.GenericDocument$Builder $r41, $r42;
        androidx.appsearch.app.GenericDocument $r43;
        java.lang.Throwable $r52, r66;
        androidx.appsearch.app.AppSearchSchema r61;
        com.google.android.icing.proto.SchemaTypeConfigProto r62, r69;
        androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults r64;
        java.util.Iterator r68, r70;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        z0 := @parameter4: boolean;

        i0 := @parameter5: int;

        r5 := @parameter6: androidx.appsearch.localstorage.stats.SetSchemaStats$Builder;

        $r10 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.SchemaProto getSchemaProtoLocked()>();

        $r11 = virtualinvoke $r10.<com.google.android.icing.proto.SchemaProto: com.google.android.icing.protobuf.GeneratedMessageLite$Builder toBuilder()>();

        r6 = (com.google.android.icing.proto.SchemaProto$Builder) $r11;

        r7 = staticinvoke <com.google.android.icing.proto.SchemaProto: com.google.android.icing.proto.SchemaProto$Builder newBuilder()>();

        i6 = 0;

     label01:
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if i6 >= $i1 goto label02;

        $r50 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i6);

        r61 = (androidx.appsearch.app.AppSearchSchema) $r50;

        r62 = staticinvoke <androidx.appsearch.localstorage.converter.SchemaToProtoConverter: com.google.android.icing.proto.SchemaTypeConfigProto toSchemaTypeConfigProto(androidx.appsearch.app.AppSearchSchema,int)>(r61, i0);

        virtualinvoke r7.<com.google.android.icing.proto.SchemaProto$Builder: com.google.android.icing.proto.SchemaProto$Builder addTypes(com.google.android.icing.proto.SchemaTypeConfigProto)>(r62);

        i6 = i6 + 1;

        goto label01;

     label02:
        r63 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        $r12 = virtualinvoke r7.<com.google.android.icing.proto.SchemaProto$Builder: com.google.android.icing.protobuf.GeneratedMessageLite build()>();

        $r13 = (com.google.android.icing.proto.SchemaProto) $r12;

        r64 = staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults rewriteSchema(java.lang.String,com.google.android.icing.proto.SchemaProto$Builder,com.google.android.icing.proto.SchemaProto)>(r63, r6, $r13);

        $r14 = virtualinvoke r6.<com.google.android.icing.proto.SchemaProto$Builder: com.google.android.icing.protobuf.GeneratedMessageLite build()>();

        r65 = (com.google.android.icing.proto.SchemaProto) $r14;

        $i2 = virtualinvoke r65.<com.google.android.icing.proto.SchemaProto: int getTypesCount()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "setSchema, request", $r15, r65);

        $r16 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r8 = virtualinvoke $r16.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.SetSchemaResultProto setSchema(com.google.android.icing.proto.SchemaProto,boolean)>(r65, z0);

        $r17 = virtualinvoke r8.<com.google.android.icing.proto.SetSchemaResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "setSchema, response", $r17, r8);

        if r5 == null goto label03;

        $r48 = virtualinvoke r8.<com.google.android.icing.proto.SetSchemaResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        $i5 = staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: int statusProtoToResultCode(com.google.android.icing.proto.StatusProto)>($r48);

        virtualinvoke r5.<androidx.appsearch.localstorage.stats.SetSchemaStats$Builder: androidx.appsearch.localstorage.stats.SetSchemaStats$Builder setStatusCode(int)>($i5);

        staticinvoke <androidx.appsearch.localstorage.AppSearchLoggerHelper: void copyNativeStats(com.google.android.icing.proto.SetSchemaResultProto,androidx.appsearch.localstorage.stats.SetSchemaStats$Builder)>(r8, r5);

     label03:
        $r18 = virtualinvoke r8.<com.google.android.icing.proto.SetSchemaResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        $r19 = virtualinvoke $r18.<com.google.android.icing.proto.StatusProto: com.google.android.icing.proto.StatusProto$Code getCode()>();

        $r20 = <com.google.android.icing.proto.StatusProto$Code: com.google.android.icing.proto.StatusProto$Code FAILED_PRECONDITION>;

        if $r19 != $r20 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        z1 = $z7;

     label06:
        $r21 = virtualinvoke r8.<com.google.android.icing.proto.SetSchemaResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r21);

     label07:
        goto label13;

     label08:
        $r52 := @caughtexception;

        r66 = $r52;

        i7 = virtualinvoke r8.<com.google.android.icing.proto.SetSchemaResultProto: int getDeletedSchemaTypesCount()>();

        i8 = virtualinvoke r8.<com.google.android.icing.proto.SetSchemaResultProto: int getIncompatibleSchemaTypesCount()>();

        if i7 > 0 goto label09;

        if i8 <= 0 goto label10;

     label09:
        $z8 = 1;

        goto label11;

     label10:
        $z8 = 0;

     label11:
        z9 = $z8;

        if z1 == 0 goto label12;

        if z0 != 0 goto label12;

        if z9 == 0 goto label12;

        r67 = staticinvoke <androidx.appsearch.localstorage.converter.SetSchemaResponseToProtoConverter: androidx.appsearch.app.SetSchemaResponse toSetSchemaResponse(com.google.android.icing.proto.SetSchemaResultProto,java.lang.String)>(r8, r63);

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Schema is incompatible.\n  Deleted types: ");

        $r55 = virtualinvoke r67.<androidx.appsearch.app.SetSchemaResponse: java.util.Set getDeletedTypes()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Incompatible types: ");

        $r58 = virtualinvoke r67.<androidx.appsearch.app.SetSchemaResponse: java.util.Set getIncompatibleTypes()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        r9 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        $r60 = staticinvoke <androidx.appsearch.app.InternalSetSchemaResponse: androidx.appsearch.app.InternalSetSchemaResponse newFailedSetSchemaResponse(androidx.appsearch.app.SetSchemaResponse,java.lang.String)>(r67, r9);

        return $r60;

     label12:
        throw r66;

     label13:
        $r22 = r64.<androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults: java.util.Map mRewrittenPrefixedTypes>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.util.Collection values()>();

        r68 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>();

     label14:
        $z2 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        $r46 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>();

        r69 = (com.google.android.icing.proto.SchemaTypeConfigProto) $r46;

        $r47 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void addToMap(java.util.Map,java.lang.String,com.google.android.icing.proto.SchemaTypeConfigProto)>($r47, r63, r69);

        goto label14;

     label15:
        $r24 = r64.<androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults: java.util.Set mDeletedPrefixedTypes>;

        r70 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>();

     label16:
        $z3 = interfaceinvoke r70.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label17;

        $r44 = interfaceinvoke r70.<java.util.Iterator: java.lang.Object next()>();

        r71 = (java.lang.String) $r44;

        $r45 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void removeFromMap(java.util.Map,java.lang.String,java.lang.String)>($r45, r63, r71);

        goto label16;

     label17:
        $r25 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        if $r25 == null goto label20;

        $r28 = new java.util.ArrayList;

        $i3 = interfaceinvoke r4.<java.util.List: int size()>();

        specialinvoke $r28.<java.util.ArrayList: void <init>(int)>($i3);

        r72 = $r28;

        $r29 = new androidx.collection.ArraySet;

        $r30 = r64.<androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults: java.util.Map mRewrittenPrefixedTypes>;

        $r31 = interfaceinvoke $r30.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r29.<androidx.collection.ArraySet: void <init>(java.util.Collection)>($r31);

        r73 = $r29;

        i9 = 0;

     label18:
        $i4 = interfaceinvoke r4.<java.util.List: int size()>();

        if i9 >= $i4 goto label19;

        $r35 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i9);

        r74 = (androidx.appsearch.app.VisibilityDocument) $r35;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r63);

        $r38 = virtualinvoke r74.<androidx.appsearch.app.VisibilityDocument: java.lang.String getId()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        r75 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = new androidx.appsearch.app.VisibilityDocument;

        $r41 = virtualinvoke r74.<androidx.appsearch.app.VisibilityDocument: androidx.appsearch.app.GenericDocument$Builder toBuilder()>();

        $r42 = virtualinvoke $r41.<androidx.appsearch.app.GenericDocument$Builder: androidx.appsearch.app.GenericDocument$Builder setId(java.lang.String)>(r75);

        $r43 = virtualinvoke $r42.<androidx.appsearch.app.GenericDocument$Builder: androidx.appsearch.app.GenericDocument build()>();

        specialinvoke $r40.<androidx.appsearch.app.VisibilityDocument: void <init>(androidx.appsearch.app.GenericDocument)>($r43);

        interfaceinvoke r72.<java.util.List: boolean add(java.lang.Object)>($r40);

        interfaceinvoke r73.<java.util.Set: boolean remove(java.lang.Object)>(r75);

        i9 = i9 + 1;

        goto label18;

     label19:
        $r32 = r64.<androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults: java.util.Set mDeletedPrefixedTypes>;

        interfaceinvoke r73.<java.util.Set: boolean addAll(java.util.Collection)>($r32);

        $r33 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        virtualinvoke $r33.<androidx.appsearch.localstorage.visibilitystore.VisibilityStore: void removeVisibility(java.util.Set)>(r73);

        $r34 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        virtualinvoke $r34.<androidx.appsearch.localstorage.visibilitystore.VisibilityStore: void setVisibility(java.util.List)>(r72);

     label20:
        $r26 = staticinvoke <androidx.appsearch.localstorage.converter.SetSchemaResponseToProtoConverter: androidx.appsearch.app.SetSchemaResponse toSetSchemaResponse(com.google.android.icing.proto.SetSchemaResultProto,java.lang.String)>(r8, r63);

        $r27 = staticinvoke <androidx.appsearch.app.InternalSetSchemaResponse: androidx.appsearch.app.InternalSetSchemaResponse newSuccessfulSetSchemaResponse(androidx.appsearch.app.SetSchemaResponse)>($r26);

        return $r27;

        catch androidx.appsearch.exceptions.AppSearchException from label06 to label07 with label08;
    }

    public androidx.appsearch.app.GetSchemaResponse getSchema(java.lang.String, java.lang.String, androidx.appsearch.localstorage.visibilitystore.CallerAccess) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, r5, r8, r9, r12, $r29, $r36;
        androidx.appsearch.localstorage.visibilitystore.CallerAccess r3;
        com.google.android.icing.proto.SchemaProto r4;
        androidx.appsearch.app.GetSchemaResponse$Builder r6, $r19;
        com.google.android.icing.proto.SchemaTypeConfigProto r7;
        com.google.android.icing.proto.SchemaTypeConfigProto$Builder r10;
        androidx.appsearch.app.AppSearchSchema r11;
        androidx.appsearch.app.VisibilityDocument r13;
        java.lang.String[] r14;
        byte[][] r15;
        java.lang.Throwable r16, $r39;
        java.util.concurrent.locks.ReadWriteLock $r17, $r20, $r40;
        java.util.concurrent.locks.Lock $r18, $r21, $r41;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        boolean $z0, $z1, $z2;
        androidx.appsearch.localstorage.visibilitystore.VisibilityChecker $r22;
        androidx.appsearch.localstorage.visibilitystore.VisibilityStore $r23, $r28, $r30;
        com.google.android.icing.protobuf.GeneratedMessageLite$Builder $r24;
        androidx.collection.ArraySet $r32, r42;
        androidx.appsearch.app.PackageIdentifier $r34;
        byte[] $r35;
        androidx.appsearch.exceptions.AppSearchException $r37;
        java.util.Set r43;
        androidx.appsearch.app.GetSchemaResponse r44;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.appsearch.localstorage.visibilitystore.CallerAccess;

        $r17 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r18 = interfaceinvoke $r17.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r18.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        r4 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.SchemaProto getSchemaProtoLocked()>();

        r5 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        $r19 = new androidx.appsearch.app.GetSchemaResponse$Builder;

        specialinvoke $r19.<androidx.appsearch.app.GetSchemaResponse$Builder: void <init>()>();

        r6 = $r19;

        i7 = 0;

     label02:
        $i0 = virtualinvoke r4.<com.google.android.icing.proto.SchemaProto: int getTypesCount()>();

        if i7 >= $i0 goto label11;

        r7 = virtualinvoke r4.<com.google.android.icing.proto.SchemaProto: com.google.android.icing.proto.SchemaTypeConfigProto getTypes(int)>(i7);

        r8 = virtualinvoke r7.<com.google.android.icing.proto.SchemaTypeConfigProto: java.lang.String getSchemaType()>();

        r9 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String getPrefix(java.lang.String)>(r8);

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z0 != 0 goto label03;

        goto label10;

     label03:
        $r23 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        $r22 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityChecker mVisibilityCheckerLocked>;

        $z1 = staticinvoke <androidx.appsearch.localstorage.visibilitystore.VisibilityUtil: boolean isSchemaSearchableByCaller(androidx.appsearch.localstorage.visibilitystore.CallerAccess,java.lang.String,java.lang.String,androidx.appsearch.localstorage.visibilitystore.VisibilityStore,androidx.appsearch.localstorage.visibilitystore.VisibilityChecker)>(r3, r1, r8, $r23, $r22);

        if $z1 != 0 goto label04;

        goto label10;

     label04:
        $r24 = virtualinvoke r7.<com.google.android.icing.proto.SchemaTypeConfigProto: com.google.android.icing.protobuf.GeneratedMessageLite$Builder toBuilder()>();

        r10 = (com.google.android.icing.proto.SchemaTypeConfigProto$Builder) $r24;

        staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String removePrefixesFromSchemaType(com.google.android.icing.proto.SchemaTypeConfigProto$Builder)>(r10);

        r11 = staticinvoke <androidx.appsearch.localstorage.converter.SchemaToProtoConverter: androidx.appsearch.app.AppSearchSchema toAppSearchSchema(com.google.android.icing.proto.SchemaTypeConfigProtoOrBuilder)>(r10);

        $i1 = virtualinvoke r7.<com.google.android.icing.proto.SchemaTypeConfigProto: int getVersion()>();

        virtualinvoke r6.<androidx.appsearch.app.GetSchemaResponse$Builder: androidx.appsearch.app.GetSchemaResponse$Builder setVersion(int)>($i1);

        virtualinvoke r6.<androidx.appsearch.app.GetSchemaResponse$Builder: androidx.appsearch.app.GetSchemaResponse$Builder addSchema(androidx.appsearch.app.AppSearchSchema)>(r11);

        $r28 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        if $r28 == null goto label10;

        $r29 = virtualinvoke r7.<com.google.android.icing.proto.SchemaTypeConfigProto: java.lang.String getSchemaType()>();

        $i2 = virtualinvoke r9.<java.lang.String: int length()>();

        r12 = virtualinvoke $r29.<java.lang.String: java.lang.String substring(int)>($i2);

        $r30 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        r13 = virtualinvoke $r30.<androidx.appsearch.localstorage.visibilitystore.VisibilityStore: androidx.appsearch.app.VisibilityDocument getVisibility(java.lang.String)>(r8);

        if r13 == null goto label10;

        $z2 = virtualinvoke r13.<androidx.appsearch.app.VisibilityDocument: boolean isNotDisplayedBySystem()>();

        if $z2 == 0 goto label05;

        virtualinvoke r6.<androidx.appsearch.app.GetSchemaResponse$Builder: androidx.appsearch.app.GetSchemaResponse$Builder addSchemaTypeNotDisplayedBySystem(java.lang.String)>(r12);

     label05:
        r14 = virtualinvoke r13.<androidx.appsearch.app.VisibilityDocument: java.lang.String[] getPackageNames()>();

        r15 = virtualinvoke r13.<androidx.appsearch.app.VisibilityDocument: byte[][] getSha256Certs()>();

        $i4 = lengthof r14;

        $i3 = lengthof r15;

        if $i4 == $i3 goto label06;

        $r37 = new androidx.appsearch.exceptions.AppSearchException;

        specialinvoke $r37.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>(2, "The length of package names and sha256Crets are different!");

        throw $r37;

     label06:
        $i5 = lengthof r14;

        if $i5 == 0 goto label09;

        $r32 = new androidx.collection.ArraySet;

        specialinvoke $r32.<androidx.collection.ArraySet: void <init>()>();

        r42 = $r32;

        i8 = 0;

     label07:
        $i6 = lengthof r14;

        if i8 >= $i6 goto label08;

        $r34 = new androidx.appsearch.app.PackageIdentifier;

        $r36 = r14[i8];

        $r35 = r15[i8];

        specialinvoke $r34.<androidx.appsearch.app.PackageIdentifier: void <init>(java.lang.String,byte[])>($r36, $r35);

        interfaceinvoke r42.<java.util.Set: boolean add(java.lang.Object)>($r34);

        i8 = i8 + 1;

        goto label07;

     label08:
        virtualinvoke r6.<androidx.appsearch.app.GetSchemaResponse$Builder: androidx.appsearch.app.GetSchemaResponse$Builder setSchemaTypeVisibleToPackages(java.lang.String,java.util.Set)>(r12, r42);

     label09:
        r43 = virtualinvoke r13.<androidx.appsearch.app.VisibilityDocument: java.util.Set getVisibleToPermissions()>();

        if r43 == null goto label10;

        virtualinvoke r6.<androidx.appsearch.app.GetSchemaResponse$Builder: androidx.appsearch.app.GetSchemaResponse$Builder setRequiredPermissionsForSchemaTypeVisibility(java.lang.String,java.util.Set)>(r12, r43);

     label10:
        i7 = i7 + 1;

        goto label02;

     label11:
        r44 = virtualinvoke r6.<androidx.appsearch.app.GetSchemaResponse$Builder: androidx.appsearch.app.GetSchemaResponse build()>();

     label12:
        $r20 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r21 = interfaceinvoke $r20.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r21.<java.util.concurrent.locks.Lock: void unlock()>();

        return r44;

     label13:
        $r39 := @caughtexception;

        r16 = $r39;

     label14:
        $r40 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r41 = interfaceinvoke $r40.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r41.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r16;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public java.util.List getNamespaces(java.lang.String, java.lang.String) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, r4, r6, $r16;
        com.google.android.icing.proto.GetAllNamespacesResultProto r3;
        java.util.ArrayList r5, $r13, r20;
        java.lang.Throwable r7, $r17;
        java.util.concurrent.locks.ReadWriteLock $r8, $r14, $r18;
        java.util.concurrent.locks.Lock $r9, $r15, $r19;
        com.google.android.icing.IcingSearchEngine $r10;
        int $i0, $i1, $i2, i3;
        java.lang.Integer $r11;
        com.google.android.icing.proto.StatusProto $r12;
        boolean $z0;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r8 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r9 = interfaceinvoke $r8.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String)>("AppSearchImpl", "getAllNamespaces, request");

        $r10 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r3 = virtualinvoke $r10.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.GetAllNamespacesResultProto getAllNamespaces()>();

        $i0 = virtualinvoke r3.<com.google.android.icing.proto.GetAllNamespacesResultProto: int getNamespacesCount()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "getAllNamespaces, response", $r11, r3);

        $r12 = virtualinvoke r3.<com.google.android.icing.proto.GetAllNamespacesResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r12);

        r4 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r5 = $r13;

        i3 = 0;

     label2:
        $i1 = virtualinvoke r3.<com.google.android.icing.proto.GetAllNamespacesResultProto: int getNamespacesCount()>();

        if i3 >= $i1 goto label4;

        r6 = virtualinvoke r3.<com.google.android.icing.proto.GetAllNamespacesResultProto: java.lang.String getNamespaces(int)>(i3);

        $z0 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>(r4);

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        $r16 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i2);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r16);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        r20 = r5;

     label5:
        $r14 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r15 = interfaceinvoke $r14.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r15.<java.util.concurrent.locks.Lock: void unlock()>();

        return r20;

     label6:
        $r17 := @caughtexception;

        r7 = $r17;

     label7:
        $r18 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r19 = interfaceinvoke $r18.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r19.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r7;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void putDocument(java.lang.String, java.lang.String, androidx.appsearch.app.GenericDocument, boolean, androidx.appsearch.localstorage.AppSearchLogger) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, r6, $r15, $r16, $r20, $r30, $r31, $r32;
        androidx.appsearch.app.GenericDocument r3;
        boolean z0;
        androidx.appsearch.localstorage.AppSearchLogger r4;
        long l0, l1, l2, l3, l5, $l7, $l10, $l12, $l14, l16, l17;
        com.google.android.icing.proto.DocumentProto$Builder r5;
        com.google.android.icing.proto.DocumentProto r7, $r12;
        int i4, $i6, $i8, $i9, $i11, $i13, $i15;
        com.google.android.icing.proto.PutResultProto r8;
        java.lang.Throwable r9, $r41;
        java.util.concurrent.locks.ReadWriteLock $r10, $r25, $r42;
        java.util.concurrent.locks.Lock $r11, $r26, $r43;
        com.google.android.icing.protobuf.GeneratedMessageLite$Builder $r13;
        com.google.android.icing.protobuf.GeneratedMessageLite $r14;
        com.google.android.icing.IcingSearchEngine $r17;
        com.google.android.icing.proto.StatusProto $r18, $r24, $r35;
        java.util.Map $r19, $r21;
        java.lang.Integer $r22;
        androidx.appsearch.localstorage.stats.PutDocumentStats $r28, $r45;
        androidx.appsearch.localstorage.ObserverManager $r29;
        androidx.appsearch.localstorage.visibilitystore.VisibilityChecker $r33;
        androidx.appsearch.localstorage.visibilitystore.VisibilityStore $r34;
        androidx.appsearch.localstorage.stats.PutDocumentStats$Builder $r36, $r37, $r40, r46;
        com.google.android.icing.proto.PutDocumentStatsProto $r39;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.appsearch.app.GenericDocument;

        z0 := @parameter3: boolean;

        r4 := @parameter4: androidx.appsearch.localstorage.AppSearchLogger;

        r46 = null;

        if r4 == null goto label1;

        $r40 = new androidx.appsearch.localstorage.stats.PutDocumentStats$Builder;

        specialinvoke $r40.<androidx.appsearch.localstorage.stats.PutDocumentStats$Builder: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r46 = $r40;

     label1:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r10 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r11 = interfaceinvoke $r10.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        l16 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r12 = staticinvoke <androidx.appsearch.localstorage.converter.GenericDocumentToProtoConverter: com.google.android.icing.proto.DocumentProto toDocumentProto(androidx.appsearch.app.GenericDocument)>(r3);

        $r13 = virtualinvoke $r12.<com.google.android.icing.proto.DocumentProto: com.google.android.icing.protobuf.GeneratedMessageLite$Builder toBuilder()>();

        r5 = (com.google.android.icing.proto.DocumentProto$Builder) $r13;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r6 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: void addPrefixToDocument(com.google.android.icing.proto.DocumentProto$Builder,java.lang.String)>(r5, r6);

        l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r14 = virtualinvoke r5.<com.google.android.icing.proto.DocumentProto$Builder: com.google.android.icing.protobuf.GeneratedMessageLite build()>();

        r7 = (com.google.android.icing.proto.DocumentProto) $r14;

        $r15 = virtualinvoke r7.<com.google.android.icing.proto.DocumentProto: java.lang.String getUri()>();

        $i6 = virtualinvoke r7.<com.google.android.icing.proto.DocumentProto: int getSerializedSize()>();

        i4 = specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: int enforceLimitConfigLocked(java.lang.String,java.lang.String,int)>(r1, $r15, $i6);

        $r16 = virtualinvoke r7.<com.google.android.icing.proto.DocumentProto: java.lang.String getUri()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "putDocument, request", $r16, r7);

        $r17 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r8 = virtualinvoke $r17.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.PutResultProto put(com.google.android.icing.proto.DocumentProto)>(r7);

        $r18 = virtualinvoke r8.<com.google.android.icing.proto.PutResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "putDocument, response", $r18, r8);

        $r19 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        $r20 = virtualinvoke r7.<com.google.android.icing.proto.DocumentProto: java.lang.String getNamespace()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void addToMap(java.util.Map,java.lang.String,java.lang.String)>($r19, r6, $r20);

        $r21 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mDocumentCountMapLocked>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r22);

        if r46 == null goto label3;

        $r35 = virtualinvoke r8.<com.google.android.icing.proto.PutResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        $i9 = staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: int statusProtoToResultCode(com.google.android.icing.proto.StatusProto)>($r35);

        $r36 = virtualinvoke r46.<androidx.appsearch.localstorage.stats.PutDocumentStats$Builder: androidx.appsearch.localstorage.stats.PutDocumentStats$Builder setStatusCode(int)>($i9);

        $l10 = l1 - l16;

        $i11 = (int) $l10;

        $r37 = virtualinvoke $r36.<androidx.appsearch.localstorage.stats.PutDocumentStats$Builder: androidx.appsearch.localstorage.stats.PutDocumentStats$Builder setGenerateDocumentProtoLatencyMillis(int)>($i11);

        $l12 = l3 - l2;

        $i13 = (int) $l12;

        virtualinvoke $r37.<androidx.appsearch.localstorage.stats.PutDocumentStats$Builder: androidx.appsearch.localstorage.stats.PutDocumentStats$Builder setRewriteDocumentTypesLatencyMillis(int)>($i13);

        $r39 = virtualinvoke r8.<com.google.android.icing.proto.PutResultProto: com.google.android.icing.proto.PutDocumentStatsProto getPutDocumentStats()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchLoggerHelper: void copyNativeStats(com.google.android.icing.proto.PutDocumentStatsProto,androidx.appsearch.localstorage.stats.PutDocumentStats$Builder)>($r39, r46);

     label3:
        $r24 = virtualinvoke r8.<com.google.android.icing.proto.PutResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r24);

        if z0 == 0 goto label4;

        $r29 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>;

        $r30 = virtualinvoke r3.<androidx.appsearch.app.GenericDocument: java.lang.String getNamespace()>();

        $r31 = virtualinvoke r3.<androidx.appsearch.app.GenericDocument: java.lang.String getSchemaType()>();

        $r32 = virtualinvoke r3.<androidx.appsearch.app.GenericDocument: java.lang.String getId()>();

        $r34 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        $r33 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityChecker mVisibilityCheckerLocked>;

        virtualinvoke $r29.<androidx.appsearch.localstorage.ObserverManager: void onDocumentChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,androidx.appsearch.localstorage.visibilitystore.VisibilityStore,androidx.appsearch.localstorage.visibilitystore.VisibilityChecker)>(r1, r2, $r30, $r31, $r32, $r34, $r33);

     label4:
        $r25 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r26 = interfaceinvoke $r25.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r26.<java.util.concurrent.locks.Lock: void unlock()>();

        if r46 == null goto label8;

        if r4 == null goto label8;

        l17 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l7 = l17 - l0;

        $i8 = (int) $l7;

        virtualinvoke r46.<androidx.appsearch.localstorage.stats.PutDocumentStats$Builder: androidx.appsearch.localstorage.stats.PutDocumentStats$Builder setTotalLatencyMillis(int)>($i8);

        $r28 = virtualinvoke r46.<androidx.appsearch.localstorage.stats.PutDocumentStats$Builder: androidx.appsearch.localstorage.stats.PutDocumentStats build()>();

        interfaceinvoke r4.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.PutDocumentStats)>($r28);

        goto label8;

     label5:
        $r41 := @caughtexception;

        r9 = $r41;

     label6:
        $r42 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r43 = interfaceinvoke $r42.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r43.<java.util.concurrent.locks.Lock: void unlock()>();

        if r46 == null goto label7;

        if r4 == null goto label7;

        l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l14 = l5 - l0;

        $i15 = (int) $l14;

        virtualinvoke r46.<androidx.appsearch.localstorage.stats.PutDocumentStats$Builder: androidx.appsearch.localstorage.stats.PutDocumentStats$Builder setTotalLatencyMillis(int)>($i15);

        $r45 = virtualinvoke r46.<androidx.appsearch.localstorage.stats.PutDocumentStats$Builder: androidx.appsearch.localstorage.stats.PutDocumentStats build()>();

        interfaceinvoke r4.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.PutDocumentStats)>($r45);

     label7:
        throw r9;

     label8:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private int enforceLimitConfigLocked(java.lang.String, java.lang.String, int) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, $r15, $r31;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8;
        androidx.appsearch.localstorage.LimitConfig $r3, $r6, $r12, $r28, $r34;
        java.util.Map $r4, $r17;
        java.lang.Object $r5, $r18;
        androidx.appsearch.exceptions.AppSearchException $r7, $r19;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13, $r14, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r29, $r30;
        com.google.android.icing.proto.StorageInfoProto $r16;
        java.lang.Integer r32, r33;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.LimitConfig mLimitConfig>;

        $i1 = interfaceinvoke $r3.<androidx.appsearch.localstorage.LimitConfig: int getMaxDocumentSizeBytes()>();

        if i0 <= $i1 goto label1;

        $r19 = new androidx.appsearch.exceptions.AppSearchException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document \"");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" for package \"");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" serialized to ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes, which exceeds limit of ");

        $r28 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.LimitConfig mLimitConfig>;

        $i6 = interfaceinvoke $r28.<androidx.appsearch.localstorage.LimitConfig: int getMaxDocumentSizeBytes()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>(5, $r31);

        throw $r19;

     label1:
        $r4 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mDocumentCountMapLocked>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r32 = (java.lang.Integer) $r5;

        if r32 != null goto label2;

        i7 = 1;

        goto label3;

     label2:
        $i2 = virtualinvoke r32.<java.lang.Integer: int intValue()>();

        i7 = $i2 + 1;

     label3:
        $r6 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.LimitConfig mLimitConfig>;

        $i3 = interfaceinvoke $r6.<androidx.appsearch.localstorage.LimitConfig: int getMaxDocumentCount()>();

        if i7 <= $i3 goto label5;

        $r16 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.StorageInfoProto getRawStorageInfoProto()>();

        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void rebuildDocumentCountMapLocked(com.google.android.icing.proto.StorageInfoProto)>($r16);

        $r17 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mDocumentCountMapLocked>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r33 = (java.lang.Integer) $r18;

        if r33 != null goto label4;

        i7 = 1;

        goto label5;

     label4:
        $i5 = virtualinvoke r33.<java.lang.Integer: int intValue()>();

        i7 = $i5 + 1;

     label5:
        $r34 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.LimitConfig mLimitConfig>;

        $i8 = interfaceinvoke $r34.<androidx.appsearch.localstorage.LimitConfig: int getMaxDocumentCount()>();

        if i7 <= $i8 goto label6;

        $r7 = new androidx.appsearch.exceptions.AppSearchException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package \"");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" exceeded limit of ");

        $r12 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.LimitConfig mLimitConfig>;

        $i4 = interfaceinvoke $r12.<androidx.appsearch.localstorage.LimitConfig: int getMaxDocumentCount()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" documents. Some documents must be removed to index additional ones.");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>(5, $r15);

        throw $r7;

     label6:
        return i7;
    }

    public androidx.appsearch.app.GenericDocument globalGetDocument(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.Map, androidx.appsearch.localstorage.visibilitystore.CallerAccess) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, r3, r4, r8, $r14, $r39;
        java.util.Map r5, r9, $r19, $r21;
        androidx.appsearch.localstorage.visibilitystore.CallerAccess r6;
        com.google.android.icing.proto.DocumentProto r7;
        androidx.appsearch.app.GenericDocument r10;
        java.lang.Throwable r11, $r28, $r31, r40;
        java.util.concurrent.locks.ReadWriteLock $r12, $r25, $r29;
        java.util.concurrent.locks.Lock $r13, $r26, $r30;
        androidx.appsearch.localstorage.visibilitystore.VisibilityChecker $r15;
        androidx.appsearch.localstorage.visibilitystore.VisibilityStore $r16;
        boolean $z0;
        com.google.android.icing.protobuf.GeneratedMessageLite$Builder $r17;
        java.lang.Object $r20, $r22;
        com.google.android.icing.protobuf.GeneratedMessageLite $r23;
        com.google.android.icing.proto.DocumentProtoOrBuilder $r24;
        androidx.appsearch.exceptions.AppSearchException $r27, $r32;
        java.lang.StringBuilder $r33, $r34, $r35, $r36, $r37, $r38;
        com.google.android.icing.proto.DocumentProto$Builder r41;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.util.Map;

        r6 := @parameter5: androidx.appsearch.localstorage.visibilitystore.CallerAccess;

        $r12 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r13 = interfaceinvoke $r12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

     label2:
        r7 = specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.DocumentProto getDocumentProtoByIdLocked(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r1, r2, r3, r4, r5);

        $r14 = virtualinvoke r7.<com.google.android.icing.proto.DocumentProto: java.lang.String getSchema()>();

        $r16 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        $r15 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityChecker mVisibilityCheckerLocked>;

        $z0 = staticinvoke <androidx.appsearch.localstorage.visibilitystore.VisibilityUtil: boolean isSchemaSearchableByCaller(androidx.appsearch.localstorage.visibilitystore.CallerAccess,java.lang.String,java.lang.String,androidx.appsearch.localstorage.visibilitystore.VisibilityStore,androidx.appsearch.localstorage.visibilitystore.VisibilityChecker)>(r6, r1, $r14, $r16, $r15);

        if $z0 != 0 goto label3;

        $r27 = new androidx.appsearch.exceptions.AppSearchException;

        specialinvoke $r27.<androidx.appsearch.exceptions.AppSearchException: void <init>(int)>(6);

        throw $r27;

     label3:
        goto label5;

     label4:
        $r31 := @caughtexception;

        r40 = $r31;

        $r32 = new androidx.appsearch.exceptions.AppSearchException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Document (");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not found.");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>(6, $r39);

        throw $r32;

     label5:
        $r17 = virtualinvoke r7.<com.google.android.icing.proto.DocumentProto: com.google.android.icing.protobuf.GeneratedMessageLite$Builder toBuilder()>();

        r41 = (com.google.android.icing.proto.DocumentProto$Builder) $r17;

        staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String removePrefixesFromDocument(com.google.android.icing.proto.DocumentProto$Builder)>(r41);

        r8 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        $r19 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        $r21 = (java.util.Map) $r20;

        $r22 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r21);

        r9 = (java.util.Map) $r22;

        $r23 = virtualinvoke r41.<com.google.android.icing.proto.DocumentProto$Builder: com.google.android.icing.protobuf.GeneratedMessageLite build()>();

        $r24 = (com.google.android.icing.proto.DocumentProtoOrBuilder) $r23;

        r10 = staticinvoke <androidx.appsearch.localstorage.converter.GenericDocumentToProtoConverter: androidx.appsearch.app.GenericDocument toGenericDocument(com.google.android.icing.proto.DocumentProtoOrBuilder,java.lang.String,java.util.Map)>($r24, r8, r9);

     label6:
        $r25 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r26 = interfaceinvoke $r25.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r26.<java.util.concurrent.locks.Lock: void unlock()>();

        return r10;

     label7:
        $r28 := @caughtexception;

        r11 = $r28;

     label8:
        $r29 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r30 = interfaceinvoke $r29.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r30.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r11;

        catch androidx.appsearch.exceptions.AppSearchException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public androidx.appsearch.app.GenericDocument getDocument(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.Map) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, r3, r4, r8;
        java.util.Map r5, r9, $r16, $r18;
        com.google.android.icing.proto.DocumentProto r6;
        com.google.android.icing.proto.DocumentProto$Builder r7;
        androidx.appsearch.app.GenericDocument r10;
        java.lang.Throwable r11, $r24;
        java.util.concurrent.locks.ReadWriteLock $r12, $r22, $r25;
        java.util.concurrent.locks.Lock $r13, $r23, $r26;
        com.google.android.icing.protobuf.GeneratedMessageLite$Builder $r14;
        java.lang.Object $r17, $r19;
        com.google.android.icing.protobuf.GeneratedMessageLite $r20;
        com.google.android.icing.proto.DocumentProtoOrBuilder $r21;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.util.Map;

        $r12 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r13 = interfaceinvoke $r12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        r6 = specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.DocumentProto getDocumentProtoByIdLocked(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r1, r2, r3, r4, r5);

        $r14 = virtualinvoke r6.<com.google.android.icing.proto.DocumentProto: com.google.android.icing.protobuf.GeneratedMessageLite$Builder toBuilder()>();

        r7 = (com.google.android.icing.proto.DocumentProto$Builder) $r14;

        staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String removePrefixesFromDocument(com.google.android.icing.proto.DocumentProto$Builder)>(r7);

        r8 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        $r16 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        $r18 = (java.util.Map) $r17;

        $r19 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r18);

        r9 = (java.util.Map) $r19;

        $r20 = virtualinvoke r7.<com.google.android.icing.proto.DocumentProto$Builder: com.google.android.icing.protobuf.GeneratedMessageLite build()>();

        $r21 = (com.google.android.icing.proto.DocumentProtoOrBuilder) $r20;

        r10 = staticinvoke <androidx.appsearch.localstorage.converter.GenericDocumentToProtoConverter: androidx.appsearch.app.GenericDocument toGenericDocument(com.google.android.icing.proto.DocumentProtoOrBuilder,java.lang.String,java.util.Map)>($r21, r8, r9);

     label2:
        $r22 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r23 = interfaceinvoke $r22.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r23.<java.util.concurrent.locks.Lock: void unlock()>();

        return r10;

     label3:
        $r24 := @caughtexception;

        r11 = $r24;

     label4:
        $r25 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r26 = interfaceinvoke $r25.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r26.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r11;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private com.google.android.icing.proto.DocumentProto getDocumentProtoByIdLocked(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.Map) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, r3, r4, r6, $r14, $r27, r38, $r39, r40, r42;
        java.util.Map r5;
        java.util.List r7;
        java.util.ArrayList r8, $r9;
        int $i0, $i1, i2;
        com.google.android.icing.proto.GetResultSpecProto$Builder $r10, $r11;
        com.google.android.icing.protobuf.GeneratedMessageLite $r12, $r36;
        java.lang.StringBuilder $r13, $r15, $r16, $r21, $r22, $r23, $r24, $r25, $r26, $r30, $r31, $r32;
        boolean $z0, $z1;
        com.google.android.icing.IcingSearchEngine $r17;
        com.google.android.icing.proto.StatusProto $r18, $r19;
        com.google.android.icing.proto.DocumentProto $r20;
        java.lang.Object $r28, $r33;
        com.google.android.icing.proto.TypePropertyMask$Builder $r29, $r34, $r35;
        com.google.android.icing.proto.TypePropertyMask $r37;
        com.google.android.icing.proto.GetResultSpecProto r41;
        com.google.android.icing.proto.GetResultProto r43;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.util.Map;

        r6 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        r7 = staticinvoke <androidx.appsearch.localstorage.converter.TypePropertyPathToProtoConverter: java.util.List toTypePropertyMaskBuilderList(java.util.Map)>(r5);

        $r9 = new java.util.ArrayList;

        $i0 = interfaceinvoke r7.<java.util.List: int size()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0);

        r8 = $r9;

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r7.<java.util.List: int size()>();

        if i2 >= $i1 goto label4;

        $r28 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i2);

        $r29 = (com.google.android.icing.proto.TypePropertyMask$Builder) $r28;

        r38 = virtualinvoke $r29.<com.google.android.icing.proto.TypePropertyMask$Builder: java.lang.String getSchemaType()>();

        $z1 = virtualinvoke r38.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z1 == 0 goto label2;

        $r39 = r38;

        goto label3;

     label2:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        $r39 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        r40 = $r39;

        $r33 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i2);

        $r34 = (com.google.android.icing.proto.TypePropertyMask$Builder) $r33;

        $r35 = virtualinvoke $r34.<com.google.android.icing.proto.TypePropertyMask$Builder: com.google.android.icing.proto.TypePropertyMask$Builder setSchemaType(java.lang.String)>(r40);

        $r36 = virtualinvoke $r35.<com.google.android.icing.proto.TypePropertyMask$Builder: com.google.android.icing.protobuf.GeneratedMessageLite build()>();

        $r37 = (com.google.android.icing.proto.TypePropertyMask) $r36;

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r37);

        i2 = i2 + 1;

        goto label1;

     label4:
        $r10 = staticinvoke <com.google.android.icing.proto.GetResultSpecProto: com.google.android.icing.proto.GetResultSpecProto$Builder newBuilder()>();

        $r11 = virtualinvoke $r10.<com.google.android.icing.proto.GetResultSpecProto$Builder: com.google.android.icing.proto.GetResultSpecProto$Builder addAllTypePropertyMasks(java.lang.Iterable)>(r8);

        $r12 = virtualinvoke $r11.<com.google.android.icing.proto.GetResultSpecProto$Builder: com.google.android.icing.protobuf.GeneratedMessageLite build()>();

        r41 = (com.google.android.icing.proto.GetResultSpecProto) $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r42 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = staticinvoke <androidx.appsearch.util.LogUtil: boolean isPiiTraceEnabled()>();

        if $z0 == 0 goto label5;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r41);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object)>("AppSearchImpl", "getDocument, request", $r27);

     label5:
        $r17 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r43 = virtualinvoke $r17.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.GetResultProto get(java.lang.String,java.lang.String,com.google.android.icing.proto.GetResultSpecProto)>(r42, r4, r41);

        $r18 = virtualinvoke r43.<com.google.android.icing.proto.GetResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "getDocument, response", $r18, r43);

        $r19 = virtualinvoke r43.<com.google.android.icing.proto.GetResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r19);

        $r20 = virtualinvoke r43.<com.google.android.icing.proto.GetResultProto: com.google.android.icing.proto.DocumentProto getDocument()>();

        return $r20;
    }

    public androidx.appsearch.app.SearchResultPage query(java.lang.String, java.lang.String, java.lang.String, androidx.appsearch.app.SearchSpec, androidx.appsearch.localstorage.AppSearchLogger) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, r3, r41;
        androidx.appsearch.app.SearchSpec r4;
        androidx.appsearch.localstorage.AppSearchLogger r5;
        long l0, $l1, $l2, $l3, $l5, $l6, $l8, $l9, $l11, $l12;
        java.util.List r6;
        androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter r7, $r12;
        androidx.appsearch.app.SearchResultPage r8, $r20, $r36, r38, r42, r43;
        java.lang.Throwable r9, $r30;
        java.util.concurrent.locks.ReadWriteLock $r10, $r16, $r22, $r31, $r39;
        java.util.concurrent.locks.Lock $r11, $r17, $r23, $r32, $r40;
        boolean $z0, $z1, $z2;
        java.util.Set $r13;
        java.util.Map $r14, $r15;
        int $i4, $i7, $i10, $i13;
        androidx.appsearch.localstorage.stats.SearchStats $r19, $r25, $r27, $r34;
        android.os.Bundle $r21, $r37;
        androidx.appsearch.localstorage.stats.SearchStats$Builder $r29, r35;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: androidx.appsearch.app.SearchSpec;

        r5 := @parameter4: androidx.appsearch.localstorage.AppSearchLogger;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r35 = null;

        if r5 == null goto label01;

        $r29 = new androidx.appsearch.localstorage.stats.SearchStats$Builder;

        specialinvoke $r29.<androidx.appsearch.localstorage.stats.SearchStats$Builder: void <init>(int,java.lang.String)>(1, r1);

        r35 = virtualinvoke $r29.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setDatabase(java.lang.String)>(r2);

     label01:
        $r10 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r11 = interfaceinvoke $r10.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        r6 = virtualinvoke r4.<androidx.appsearch.app.SearchSpec: java.util.List getFilterPackageNames()>();

        $z0 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label06;

        $z2 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z2 != 0 goto label06;

        if r35 == null goto label03;

        if r5 == null goto label03;

        virtualinvoke r35.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setStatusCode(int)>(8);

     label03:
        $r36 = new androidx.appsearch.app.SearchResultPage;

        $r37 = <android.os.Bundle: android.os.Bundle EMPTY>;

        specialinvoke $r36.<androidx.appsearch.app.SearchResultPage: void <init>(android.os.Bundle)>($r37);

        r38 = $r36;

     label04:
        $r39 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r40 = interfaceinvoke $r39.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r40.<java.util.concurrent.locks.Lock: void unlock()>();

        if r35 == null goto label05;

        if r5 == null goto label05;

        $l8 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l9 = $l8 - l0;

        $i10 = (int) $l9;

        virtualinvoke r35.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setTotalLatencyMillis(int)>($i10);

        $r27 = virtualinvoke r35.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats build()>();

        interfaceinvoke r5.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.SearchStats)>($r27);

     label05:
        return r38;

     label06:
        r41 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        $r12 = new androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter;

        $r13 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r41);

        $r15 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        $r14 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        specialinvoke $r12.<androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter: void <init>(java.lang.String,androidx.appsearch.app.SearchSpec,java.util.Set,java.util.Map,java.util.Map)>(r3, r4, $r13, $r15, $r14);

        r7 = $r12;

        $z1 = virtualinvoke r7.<androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter: boolean hasNothingToSearch()>();

        if $z1 == 0 goto label09;

        $r20 = new androidx.appsearch.app.SearchResultPage;

        $r21 = <android.os.Bundle: android.os.Bundle EMPTY>;

        specialinvoke $r20.<androidx.appsearch.app.SearchResultPage: void <init>(android.os.Bundle)>($r21);

        r42 = $r20;

     label07:
        $r22 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r23 = interfaceinvoke $r22.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r23.<java.util.concurrent.locks.Lock: void unlock()>();

        if r35 == null goto label08;

        if r5 == null goto label08;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = $l5 - l0;

        $i7 = (int) $l6;

        virtualinvoke r35.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setTotalLatencyMillis(int)>($i7);

        $r25 = virtualinvoke r35.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats build()>();

        interfaceinvoke r5.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.SearchStats)>($r25);

     label08:
        return r42;

     label09:
        r43 = specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.SearchResultPage doQueryLocked(androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter,androidx.appsearch.localstorage.stats.SearchStats$Builder)>(r7, r35);

        $l1 = virtualinvoke r43.<androidx.appsearch.app.SearchResultPage: long getNextPageToken()>();

        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void addNextPageToken(java.lang.String,long)>(r1, $l1);

        r8 = r43;

     label10:
        $r16 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r17 = interfaceinvoke $r16.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r17.<java.util.concurrent.locks.Lock: void unlock()>();

        if r35 == null goto label11;

        if r5 == null goto label11;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = $l2 - l0;

        $i4 = (int) $l3;

        virtualinvoke r35.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setTotalLatencyMillis(int)>($i4);

        $r19 = virtualinvoke r35.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats build()>();

        interfaceinvoke r5.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.SearchStats)>($r19);

     label11:
        return r8;

     label12:
        $r30 := @caughtexception;

        r9 = $r30;

     label13:
        $r31 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r32 = interfaceinvoke $r31.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r32.<java.util.concurrent.locks.Lock: void unlock()>();

        if r35 == null goto label14;

        if r5 == null goto label14;

        $l11 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l12 = $l11 - l0;

        $i13 = (int) $l12;

        virtualinvoke r35.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setTotalLatencyMillis(int)>($i13);

        $r34 = virtualinvoke r35.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats build()>();

        interfaceinvoke r5.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.SearchStats)>($r34);

     label14:
        throw r9;

        catch java.lang.Throwable from label02 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public androidx.appsearch.app.SearchResultPage globalQuery(java.lang.String, androidx.appsearch.app.SearchSpec, androidx.appsearch.localstorage.visibilitystore.CallerAccess, androidx.appsearch.localstorage.AppSearchLogger) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, $r19, $r33, r42, r43;
        androidx.appsearch.app.SearchSpec r2;
        androidx.appsearch.localstorage.visibilitystore.CallerAccess r3;
        androidx.appsearch.localstorage.AppSearchLogger r4;
        long l0, $l1, $l2, $l3, $l5, $l6, $l8, $l9;
        androidx.collection.ArraySet r5, r49, r50;
        java.lang.Throwable r6, $r34;
        java.util.concurrent.locks.ReadWriteLock $r7, $r20, $r26, $r35;
        java.util.concurrent.locks.Lock $r8, $r21, $r27, $r36;
        java.util.List $r10;
        boolean $z0, $z1, $z2, $z3;
        java.util.Map $r12, $r15, $r16, $r31;
        java.util.Set $r13, r53, r54;
        androidx.appsearch.localstorage.visibilitystore.VisibilityChecker $r17;
        androidx.appsearch.localstorage.visibilitystore.VisibilityStore $r18;
        int $i4, $i7, $i10;
        androidx.appsearch.localstorage.stats.SearchStats $r23, $r29, $r38;
        android.os.Bundle $r25;
        java.lang.Object $r30, r40;
        androidx.appsearch.localstorage.stats.SearchStats$Builder r39, r48;
        java.util.Iterator r41;
        androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter r44, r51;
        androidx.appsearch.app.SearchResultPage r45, r46, r47, r52;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.app.SearchSpec;

        r3 := @parameter2: androidx.appsearch.localstorage.visibilitystore.CallerAccess;

        r4 := @parameter3: androidx.appsearch.localstorage.AppSearchLogger;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r39 = null;

        if r4 == null goto label01;

        r48 = new androidx.appsearch.localstorage.stats.SearchStats$Builder;

        $r33 = virtualinvoke r3.<androidx.appsearch.localstorage.visibilitystore.CallerAccess: java.lang.String getCallingPackageName()>();

        specialinvoke r48.<androidx.appsearch.localstorage.stats.SearchStats$Builder: void <init>(int,java.lang.String)>(2, $r33);

        r39 = r48;

     label01:
        $r7 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r8 = interfaceinvoke $r7.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        r49 = new androidx.collection.ArraySet;

        $r10 = virtualinvoke r2.<androidx.appsearch.app.SearchSpec: java.util.List getFilterPackageNames()>();

        specialinvoke r49.<androidx.collection.ArraySet: void <init>(java.util.Collection)>($r10);

        r5 = r49;

        r50 = new androidx.collection.ArraySet;

        specialinvoke r50.<androidx.collection.ArraySet: void <init>()>();

        r40 = r50;

        $z0 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        $r31 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        r40 = interfaceinvoke $r31.<java.util.Map: java.util.Set keySet()>();

        goto label06;

     label03:
        $r12 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set keySet()>();

        r41 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r30 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r42 = (java.lang.String) $r30;

        r43 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String getPackageName(java.lang.String)>(r42);

        $z3 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>(r43);

        if $z3 == 0 goto label05;

        r53 = (java.util.Set) r40;

        interfaceinvoke r53.<java.util.Set: boolean add(java.lang.Object)>(r42);

     label05:
        goto label04;

     label06:
        r51 = new androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter;

        $r16 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        $r15 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        r54 = (java.util.Set) r40;

        specialinvoke r51.<androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter: void <init>(java.lang.String,androidx.appsearch.app.SearchSpec,java.util.Set,java.util.Map,java.util.Map)>(r1, r2, r54, $r16, $r15);

        r44 = r51;

        $r18 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        $r17 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityChecker mVisibilityCheckerLocked>;

        virtualinvoke r44.<androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter: void removeInaccessibleSchemaFilter(androidx.appsearch.localstorage.visibilitystore.CallerAccess,androidx.appsearch.localstorage.visibilitystore.VisibilityStore,androidx.appsearch.localstorage.visibilitystore.VisibilityChecker)>(r3, $r18, $r17);

        $z2 = virtualinvoke r44.<androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter: boolean hasNothingToSearch()>();

        if $z2 == 0 goto label09;

        r52 = new androidx.appsearch.app.SearchResultPage;

        $r25 = <android.os.Bundle: android.os.Bundle EMPTY>;

        specialinvoke r52.<androidx.appsearch.app.SearchResultPage: void <init>(android.os.Bundle)>($r25);

        r45 = r52;

     label07:
        $r26 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r27 = interfaceinvoke $r26.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r27.<java.util.concurrent.locks.Lock: void unlock()>();

        if r39 == null goto label08;

        if r4 == null goto label08;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = $l5 - l0;

        $i7 = (int) $l6;

        virtualinvoke r39.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setTotalLatencyMillis(int)>($i7);

        $r29 = virtualinvoke r39.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats build()>();

        interfaceinvoke r4.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.SearchStats)>($r29);

     label08:
        return r45;

     label09:
        r46 = specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.SearchResultPage doQueryLocked(androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter,androidx.appsearch.localstorage.stats.SearchStats$Builder)>(r44, r39);

        $r19 = virtualinvoke r3.<androidx.appsearch.localstorage.visibilitystore.CallerAccess: java.lang.String getCallingPackageName()>();

        $l1 = virtualinvoke r46.<androidx.appsearch.app.SearchResultPage: long getNextPageToken()>();

        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void addNextPageToken(java.lang.String,long)>($r19, $l1);

        r47 = r46;

     label10:
        $r20 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r21 = interfaceinvoke $r20.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r21.<java.util.concurrent.locks.Lock: void unlock()>();

        if r39 == null goto label11;

        if r4 == null goto label11;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = $l2 - l0;

        $i4 = (int) $l3;

        virtualinvoke r39.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setTotalLatencyMillis(int)>($i4);

        $r23 = virtualinvoke r39.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats build()>();

        interfaceinvoke r4.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.SearchStats)>($r23);

     label11:
        return r47;

     label12:
        $r34 := @caughtexception;

        r6 = $r34;

     label13:
        $r35 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r36 = interfaceinvoke $r35.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r36.<java.util.concurrent.locks.Lock: void unlock()>();

        if r39 == null goto label14;

        if r4 == null goto label14;

        $l8 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l9 = $l8 - l0;

        $i10 = (int) $l9;

        virtualinvoke r39.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setTotalLatencyMillis(int)>($i10);

        $r38 = virtualinvoke r39.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats build()>();

        interfaceinvoke r4.<androidx.appsearch.localstorage.AppSearchLogger: void logStats(androidx.appsearch.localstorage.stats.SearchStats)>($r38);

     label14:
        throw r6;

        catch java.lang.Throwable from label02 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private androidx.appsearch.app.SearchResultPage doQueryLocked(androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter, androidx.appsearch.localstorage.stats.SearchStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter r1;
        androidx.appsearch.localstorage.stats.SearchStats$Builder r2;
        long l0, l1, $l2, $l3, $l5, $l6;
        com.google.android.icing.proto.SearchSpecProto r3;
        com.google.android.icing.proto.ResultSpecProto r4;
        com.google.android.icing.proto.ScoringSpecProto r5;
        com.google.android.icing.proto.SearchResultProto r6;
        androidx.appsearch.app.SearchResultPage r7;
        java.util.Map $r8, $r9;
        int $i4, $i7;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter;

        r2 := @parameter1: androidx.appsearch.localstorage.stats.SearchStats$Builder;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r3 = virtualinvoke r1.<androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter: com.google.android.icing.proto.SearchSpecProto toSearchSpecProto()>();

        $r8 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        r4 = virtualinvoke r1.<androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter: com.google.android.icing.proto.ResultSpecProto toResultSpecProto(java.util.Map)>($r8);

        r5 = virtualinvoke r1.<androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter: com.google.android.icing.proto.ScoringSpecProto toScoringSpecProto()>();

        if r2 == null goto label1;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = $l5 - l0;

        $i7 = (int) $l6;

        virtualinvoke r2.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setRewriteSearchSpecLatencyMillis(int)>($i7);

     label1:
        r6 = specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.SearchResultProto searchInIcingLocked(com.google.android.icing.proto.SearchSpecProto,com.google.android.icing.proto.ResultSpecProto,com.google.android.icing.proto.ScoringSpecProto,androidx.appsearch.localstorage.stats.SearchStats$Builder)>(r3, r4, r5, r2);

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r9 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        r7 = staticinvoke <androidx.appsearch.localstorage.converter.SearchResultToProtoConverter: androidx.appsearch.app.SearchResultPage toSearchResultPage(com.google.android.icing.proto.SearchResultProto,java.util.Map)>(r6, $r9);

        if r2 == null goto label2;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = $l2 - l1;

        $i4 = (int) $l3;

        virtualinvoke r2.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setRewriteSearchResultLatencyMillis(int)>($i4);

     label2:
        return r7;
    }

    private com.google.android.icing.proto.SearchResultProto searchInIcingLocked(com.google.android.icing.proto.SearchSpecProto, com.google.android.icing.proto.ResultSpecProto, com.google.android.icing.proto.ScoringSpecProto, androidx.appsearch.localstorage.stats.SearchStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        com.google.android.icing.proto.SearchSpecProto r1;
        com.google.android.icing.proto.ResultSpecProto r2;
        com.google.android.icing.proto.ScoringSpecProto r3;
        androidx.appsearch.localstorage.stats.SearchStats$Builder r4;
        com.google.android.icing.proto.SearchResultProto r5;
        boolean $z0;
        com.google.android.icing.IcingSearchEngine $r6;
        int $i0, $i1;
        java.lang.Integer $r7;
        com.google.android.icing.proto.StatusProto $r8, $r9;
        com.google.android.icing.proto.QueryStatsProto $r11;
        java.lang.String $r12, $r19;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: com.google.android.icing.proto.SearchSpecProto;

        r2 := @parameter1: com.google.android.icing.proto.ResultSpecProto;

        r3 := @parameter2: com.google.android.icing.proto.ScoringSpecProto;

        r4 := @parameter3: androidx.appsearch.localstorage.stats.SearchStats$Builder;

        $z0 = staticinvoke <androidx.appsearch.util.LogUtil: boolean isPiiTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r12 = virtualinvoke r1.<com.google.android.icing.proto.SearchSpecProto: java.lang.String getQuery()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "search, request", $r12, $r19);

     label1:
        $r6 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r5 = virtualinvoke $r6.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.SearchResultProto search(com.google.android.icing.proto.SearchSpecProto,com.google.android.icing.proto.ScoringSpecProto,com.google.android.icing.proto.ResultSpecProto)>(r1, r3, r2);

        $i0 = virtualinvoke r5.<com.google.android.icing.proto.SearchResultProto: int getResultsCount()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "search, response", $r7, r5);

        if r4 == null goto label2;

        $r9 = virtualinvoke r5.<com.google.android.icing.proto.SearchResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        $i1 = staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: int statusProtoToResultCode(com.google.android.icing.proto.StatusProto)>($r9);

        virtualinvoke r4.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setStatusCode(int)>($i1);

        $r11 = virtualinvoke r5.<com.google.android.icing.proto.SearchResultProto: com.google.android.icing.proto.QueryStatsProto getQueryStats()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchLoggerHelper: void copyNativeStats(com.google.android.icing.proto.QueryStatsProto,androidx.appsearch.localstorage.stats.SearchStats$Builder)>($r11, r4);

     label2:
        $r8 = virtualinvoke r5.<com.google.android.icing.proto.SearchResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r8);

        return r5;
    }

    public java.util.List searchSuggestion(java.lang.String, java.lang.String, java.lang.String, androidx.appsearch.app.SearchSuggestionSpec) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, r3, r5, $r23, $r36;
        androidx.appsearch.app.SearchSuggestionSpec r4;
        androidx.appsearch.localstorage.converter.SearchSuggestionSpecToProtoConverter r6, $r12;
        java.util.ArrayList r7, $r18, $r26, r41, r43;
        java.lang.Throwable r8, $r38;
        java.util.concurrent.locks.ReadWriteLock $r9, $r19, $r27, $r39;
        java.util.concurrent.locks.Lock $r10, $r20, $r28, $r40;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        androidx.appsearch.localstorage.LimitConfig $r11, $r34;
        java.util.Set $r13;
        java.util.Map $r14;
        com.google.android.icing.IcingSearchEngine $r15;
        com.google.android.icing.proto.SuggestionSpecProto $r16;
        com.google.android.icing.proto.StatusProto $r17;
        androidx.appsearch.app.SearchSuggestionResult$Builder $r21, $r24;
        com.google.android.icing.proto.SuggestionResponse$Suggestion $r22;
        androidx.appsearch.app.SearchSuggestionResult $r25;
        androidx.appsearch.exceptions.AppSearchException $r29, $r37;
        java.lang.StringBuilder $r30, $r31, $r32, $r33, $r35;
        com.google.android.icing.proto.SuggestionResponse r42;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: androidx.appsearch.app.SearchSuggestionSpec;

        $r9 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r10 = interfaceinvoke $r9.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label02;

        $r37 = new androidx.appsearch.exceptions.AppSearchException;

        specialinvoke $r37.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>(3, "suggestionQueryExpression cannot be empty.");

        throw $r37;

     label02:
        $i0 = virtualinvoke r4.<androidx.appsearch.app.SearchSuggestionSpec: int getMaximumResultCount()>();

        $r11 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.LimitConfig mLimitConfig>;

        $i1 = interfaceinvoke $r11.<androidx.appsearch.localstorage.LimitConfig: int getMaxSuggestionCount()>();

        if $i0 <= $i1 goto label03;

        $r29 = new androidx.appsearch.exceptions.AppSearchException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to get ");

        $i4 = virtualinvoke r4.<androidx.appsearch.app.SearchSuggestionSpec: int getMaximumResultCount()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" suggestion results, which exceeds limit of ");

        $r34 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.LimitConfig mLimitConfig>;

        $i5 = interfaceinvoke $r34.<androidx.appsearch.localstorage.LimitConfig: int getMaxSuggestionCount()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>(3, $r36);

        throw $r29;

     label03:
        r5 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        $r12 = new androidx.appsearch.localstorage.converter.SearchSuggestionSpecToProtoConverter;

        $r13 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5);

        $r14 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        specialinvoke $r12.<androidx.appsearch.localstorage.converter.SearchSuggestionSpecToProtoConverter: void <init>(java.lang.String,androidx.appsearch.app.SearchSuggestionSpec,java.util.Set,java.util.Map)>(r3, r4, $r13, $r14);

        r6 = $r12;

        $z1 = virtualinvoke r6.<androidx.appsearch.localstorage.converter.SearchSuggestionSpecToProtoConverter: boolean hasNothingToSearch()>();

        if $z1 == 0 goto label05;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        r41 = $r26;

     label04:
        $r27 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r28 = interfaceinvoke $r27.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r28.<java.util.concurrent.locks.Lock: void unlock()>();

        return r41;

     label05:
        $r15 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        $r16 = virtualinvoke r6.<androidx.appsearch.localstorage.converter.SearchSuggestionSpecToProtoConverter: com.google.android.icing.proto.SuggestionSpecProto toSearchSuggestionSpecProto()>();

        r42 = virtualinvoke $r15.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.SuggestionResponse searchSuggestions(com.google.android.icing.proto.SuggestionSpecProto)>($r16);

        $r17 = virtualinvoke r42.<com.google.android.icing.proto.SuggestionResponse: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r17);

        $r18 = new java.util.ArrayList;

        $i2 = virtualinvoke r42.<com.google.android.icing.proto.SuggestionResponse: int getSuggestionsCount()>();

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>($i2);

        r7 = $r18;

        i6 = 0;

     label06:
        $i3 = virtualinvoke r42.<com.google.android.icing.proto.SuggestionResponse: int getSuggestionsCount()>();

        if i6 >= $i3 goto label07;

        $r21 = new androidx.appsearch.app.SearchSuggestionResult$Builder;

        specialinvoke $r21.<androidx.appsearch.app.SearchSuggestionResult$Builder: void <init>()>();

        $r22 = virtualinvoke r42.<com.google.android.icing.proto.SuggestionResponse: com.google.android.icing.proto.SuggestionResponse$Suggestion getSuggestions(int)>(i6);

        $r23 = virtualinvoke $r22.<com.google.android.icing.proto.SuggestionResponse$Suggestion: java.lang.String getQuery()>();

        $r24 = virtualinvoke $r21.<androidx.appsearch.app.SearchSuggestionResult$Builder: androidx.appsearch.app.SearchSuggestionResult$Builder setSuggestedResult(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<androidx.appsearch.app.SearchSuggestionResult$Builder: androidx.appsearch.app.SearchSuggestionResult build()>();

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r25);

        i6 = i6 + 1;

        goto label06;

     label07:
        r43 = r7;

     label08:
        $r19 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r20 = interfaceinvoke $r19.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r20.<java.util.concurrent.locks.Lock: void unlock()>();

        return r43;

     label09:
        $r38 := @caughtexception;

        r8 = $r38;

     label10:
        $r39 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r40 = interfaceinvoke $r39.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r40.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r8;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.util.Map getPackageToDatabases()
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        androidx.collection.ArrayMap r1, r22, r23;
        java.lang.String r2, r3, r4;
        java.lang.Throwable r5, $r17;
        java.util.concurrent.locks.ReadWriteLock $r6, $r11, $r18;
        java.util.concurrent.locks.Lock $r7, $r12, $r19;
        java.util.Map $r9;
        java.util.Set $r10, r25;
        boolean $z0;
        java.lang.Object $r13, $r14, r21;
        java.util.Iterator r20;
        androidx.collection.ArraySet r24;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        $r6 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r7 = interfaceinvoke $r6.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        r23 = new androidx.collection.ArrayMap;

        specialinvoke r23.<androidx.collection.ArrayMap: void <init>()>();

        r1 = r23;

        $r9 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set keySet()>();

        r20 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r13;

        r3 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String getPackageName(java.lang.String)>(r2);

        $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r21 = (java.util.Set) $r14;

        if r21 != null goto label3;

        r24 = new androidx.collection.ArraySet;

        specialinvoke r24.<androidx.collection.ArraySet: void <init>()>();

        r21 = r24;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r21);

     label3:
        r4 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String getDatabaseName(java.lang.String)>(r2);

        r25 = (java.util.Set) r21;

        interfaceinvoke r25.<java.util.Set: boolean add(java.lang.Object)>(r4);

        goto label2;

     label4:
        r22 = r1;

     label5:
        $r11 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r12 = interfaceinvoke $r11.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();

        return r22;

     label6:
        $r17 := @caughtexception;

        r5 = $r17;

     label7:
        $r18 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r19 = interfaceinvoke $r18.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r19.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r5;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public androidx.appsearch.app.SearchResultPage getNextPage(java.lang.String, long, androidx.appsearch.localstorage.stats.SearchStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1;
        long l0, l1, $l4, $l5, $l7, $l8, $l10, $l13, $l14, l16;
        androidx.appsearch.localstorage.stats.SearchStats$Builder r2;
        com.google.android.icing.proto.SearchResultProto r3;
        java.util.Set r4, $r20;
        androidx.appsearch.app.SearchResultPage r5, r34;
        java.lang.Throwable r6, $r26, $r30, r32;
        java.util.concurrent.locks.ReadWriteLock $r7, $r13, $r27;
        java.util.concurrent.locks.Lock $r8, $r14, $r28;
        java.lang.Long $r9, $r22;
        com.google.android.icing.IcingSearchEngine $r10;
        int $i2, $i6, $i9, $i12, $i15;
        java.lang.Integer $r11;
        com.google.android.icing.proto.StatusProto $r12, $r23;
        byte $b3, $b11;
        java.util.Map $r17, $r18, r31, $r33;
        java.lang.Object $r19, $r21;
        com.google.android.icing.proto.QueryStatsProto $r25;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r2 := @parameter2: androidx.appsearch.localstorage.stats.SearchStats$Builder;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r7 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r8 = interfaceinvoke $r7.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object)>("AppSearchImpl", "getNextPage, request", $r9);

        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void checkNextPageToken(java.lang.String,long)>(r1, l0);

        $r10 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r3 = virtualinvoke $r10.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.SearchResultProto getNextPage(long)>(l0);

        if r2 == null goto label02;

        $r23 = virtualinvoke r3.<com.google.android.icing.proto.SearchResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        $i12 = staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: int statusProtoToResultCode(com.google.android.icing.proto.StatusProto)>($r23);

        virtualinvoke r2.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setStatusCode(int)>($i12);

        $r25 = virtualinvoke r3.<com.google.android.icing.proto.SearchResultProto: com.google.android.icing.proto.QueryStatsProto getQueryStats()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchLoggerHelper: void copyNativeStats(com.google.android.icing.proto.QueryStatsProto,androidx.appsearch.localstorage.stats.SearchStats$Builder)>($r25, r2);

     label02:
        $i2 = virtualinvoke r3.<com.google.android.icing.proto.SearchResultProto: int getResultsCount()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "getNextPage, response", $r11, r3);

        $r12 = virtualinvoke r3.<com.google.android.icing.proto.SearchResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r12);

        $b3 = l0 cmp 0L;

        if $b3 == 0 goto label07;

        $l10 = virtualinvoke r3.<com.google.android.icing.proto.SearchResultProto: long getNextPageToken()>();

        $b11 = $l10 cmp 0L;

        if $b11 != 0 goto label07;

        $r17 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>;

        r31 = $r17;

        entermonitor $r17;

     label03:
        $r18 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r20 = (java.util.Set) $r19;

        $r21 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r20);

        r4 = (java.util.Set) $r21;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke r4.<java.util.Set: boolean remove(java.lang.Object)>($r22);

        exitmonitor r31;

     label04:
        goto label07;

     label05:
        $r30 := @caughtexception;

        r32 = $r30;

        exitmonitor r31;

     label06:
        throw r32;

     label07:
        l16 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r33 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        r34 = staticinvoke <androidx.appsearch.localstorage.converter.SearchResultToProtoConverter: androidx.appsearch.app.SearchResultPage toSearchResultPage(com.google.android.icing.proto.SearchResultProto,java.util.Map)>(r3, $r33);

        if r2 == null goto label08;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l8 = $l7 - l16;

        $i9 = (int) $l8;

        virtualinvoke r2.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setRewriteSearchResultLatencyMillis(int)>($i9);

     label08:
        r5 = r34;

     label09:
        $r13 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r14 = interfaceinvoke $r13.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r14.<java.util.concurrent.locks.Lock: void unlock()>();

        if r2 == null goto label10;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l5 = $l4 - l1;

        $i6 = (int) $l5;

        virtualinvoke r2.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setTotalLatencyMillis(int)>($i6);

     label10:
        return r5;

     label11:
        $r26 := @caughtexception;

        r6 = $r26;

     label12:
        $r27 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r28 = interfaceinvoke $r27.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r28.<java.util.concurrent.locks.Lock: void unlock()>();

        if r2 == null goto label13;

        $l13 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l14 = $l13 - l1;

        $i15 = (int) $l14;

        virtualinvoke r2.<androidx.appsearch.localstorage.stats.SearchStats$Builder: androidx.appsearch.localstorage.stats.SearchStats$Builder setTotalLatencyMillis(int)>($i15);

     label13:
        throw r6;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label09 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void invalidateNextPageToken(java.lang.String, long) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, $r17;
        long l0;
        java.util.Map r2, $r10, $r11;
        java.util.Set r3;
        java.lang.Throwable r4, r5, $r21, $r22;
        byte $b1;
        java.util.concurrent.locks.ReadWriteLock $r6, $r18, $r23;
        java.util.concurrent.locks.Lock $r7, $r19, $r24;
        java.lang.Long $r8, $r20;
        com.google.android.icing.IcingSearchEngine $r9;
        java.lang.Object $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r16;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label01;

        return;

     label01:
        $r6 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r7 = interfaceinvoke $r6.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object)>("AppSearchImpl", "invalidateNextPageToken, request", $r8);

        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void checkNextPageToken(java.lang.String,long)>(r1, l0);

        $r9 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        virtualinvoke $r9.<com.google.android.icing.IcingSearchEngine: void invalidateNextPageToken(long)>(l0);

        $r10 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>;

        r2 = $r10;

        entermonitor $r10;

     label03:
        $r11 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.Set) $r12;

        if r3 == null goto label04;

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke r3.<java.util.Set: boolean remove(java.lang.Object)>($r20);

        goto label05;

     label04:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to invalidate token ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": tokens are not cached.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AppSearchImpl", $r17);

     label05:
        exitmonitor r2;

     label06:
        goto label09;

     label07:
        $r21 := @caughtexception;

        r4 = $r21;

        exitmonitor r2;

     label08:
        throw r4;

     label09:
        $r18 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r19 = interfaceinvoke $r18.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r19.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label12;

     label10:
        $r22 := @caughtexception;

        r5 = $r22;

     label11:
        $r23 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r24 = interfaceinvoke $r23.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r24.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r5;

     label12:
        return;

        catch java.lang.Throwable from label03 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void reportUsage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, long, boolean) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, r3, r4, r5, $r13, $r22;
        long l0;
        boolean z0;
        com.google.android.icing.proto.UsageReport$UsageType r6, $r31;
        com.google.android.icing.proto.UsageReport r7;
        com.google.android.icing.proto.ReportUsageResultProto r8;
        java.lang.Throwable r9, $r28;
        java.util.concurrent.locks.ReadWriteLock $r10, $r26, $r29;
        java.util.concurrent.locks.Lock $r11, $r27, $r30;
        java.lang.StringBuilder $r12, $r14, $r15;
        com.google.android.icing.proto.UsageReport$Builder $r16, $r17, $r18, $r19, $r20;
        com.google.android.icing.protobuf.GeneratedMessageLite $r21;
        com.google.android.icing.IcingSearchEngine $r23;
        com.google.android.icing.proto.StatusProto $r24, $r25;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        l0 := @parameter4: long;

        z0 := @parameter5: boolean;

        $r10 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r11 = interfaceinvoke $r10.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r5 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        if z0 == 0 goto label2;

        $r31 = <com.google.android.icing.proto.UsageReport$UsageType: com.google.android.icing.proto.UsageReport$UsageType USAGE_TYPE2>;

        goto label3;

     label2:
        $r31 = <com.google.android.icing.proto.UsageReport$UsageType: com.google.android.icing.proto.UsageReport$UsageType USAGE_TYPE1>;

     label3:
        r6 = $r31;

        $r16 = staticinvoke <com.google.android.icing.proto.UsageReport: com.google.android.icing.proto.UsageReport$Builder newBuilder()>();

        $r17 = virtualinvoke $r16.<com.google.android.icing.proto.UsageReport$Builder: com.google.android.icing.proto.UsageReport$Builder setDocumentNamespace(java.lang.String)>(r5);

        $r18 = virtualinvoke $r17.<com.google.android.icing.proto.UsageReport$Builder: com.google.android.icing.proto.UsageReport$Builder setDocumentUri(java.lang.String)>(r4);

        $r19 = virtualinvoke $r18.<com.google.android.icing.proto.UsageReport$Builder: com.google.android.icing.proto.UsageReport$Builder setUsageTimestampMs(long)>(l0);

        $r20 = virtualinvoke $r19.<com.google.android.icing.proto.UsageReport$Builder: com.google.android.icing.proto.UsageReport$Builder setUsageType(com.google.android.icing.proto.UsageReport$UsageType)>(r6);

        $r21 = virtualinvoke $r20.<com.google.android.icing.proto.UsageReport$Builder: com.google.android.icing.protobuf.GeneratedMessageLite build()>();

        r7 = (com.google.android.icing.proto.UsageReport) $r21;

        $r22 = virtualinvoke r7.<com.google.android.icing.proto.UsageReport: java.lang.String getDocumentUri()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "reportUsage, request", $r22, r7);

        $r23 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r8 = virtualinvoke $r23.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.ReportUsageResultProto reportUsage(com.google.android.icing.proto.UsageReport)>(r7);

        $r24 = virtualinvoke r8.<com.google.android.icing.proto.ReportUsageResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "reportUsage, response", $r24, r8);

        $r25 = virtualinvoke r8.<com.google.android.icing.proto.ReportUsageResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r25);

     label4:
        $r26 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r27 = interfaceinvoke $r26.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r27.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label7;

     label5:
        $r28 := @caughtexception;

        r9 = $r28;

     label6:
        $r29 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r30 = interfaceinvoke $r29.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r30.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r9;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void remove(java.lang.String, java.lang.String, java.lang.String, java.lang.String, androidx.appsearch.localstorage.stats.RemoveStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, r3, r4, r6, $r11, $r31, $r37, $r42, r47;
        androidx.appsearch.localstorage.stats.RemoveStats$Builder r5;
        long l0, $l1, $l2, $l5, $l6;
        java.lang.Throwable r7, $r43;
        java.util.concurrent.locks.ReadWriteLock $r8, $r18, $r44;
        java.util.concurrent.locks.Lock $r9, $r19, $r45;
        java.lang.StringBuilder $r10, $r12, $r13, $r27, $r28, $r29, $r30, $r38, $r39, $r40, $r41;
        androidx.appsearch.localstorage.ObserverManager $r14, $r23;
        boolean $z0, $z1, $z2;
        com.google.android.icing.IcingSearchEngine $r15, $r33;
        com.google.android.icing.proto.StatusProto $r16, $r17, $r24, $r34, $r35;
        int $i3, $i4, $i7;
        androidx.appsearch.localstorage.visibilitystore.VisibilityChecker $r21;
        androidx.appsearch.localstorage.visibilitystore.VisibilityStore $r22;
        com.google.android.icing.proto.DeleteStatsProto $r26;
        com.google.android.icing.proto.GetResultSpecProto $r32;
        com.google.android.icing.proto.DocumentProto $r36;
        com.google.android.icing.proto.GetResultProto r48;
        com.google.android.icing.proto.DeleteResultProto r49;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: androidx.appsearch.localstorage.stats.RemoveStats$Builder;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r8 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r9 = interfaceinvoke $r8.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r47 = null;

        $r14 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>;

        $z0 = virtualinvoke $r14.<androidx.appsearch.localstorage.ObserverManager: boolean isPackageObserved(java.lang.String)>(r1);

        if $z0 == 0 goto label03;

        $z1 = staticinvoke <androidx.appsearch.util.LogUtil: boolean isPiiTraceEnabled()>();

        if $z1 == 0 goto label02;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object)>("AppSearchImpl", "removeById, getRequest", $r42);

     label02:
        $r33 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        $r32 = <androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.GetResultSpecProto GET_RESULT_SPEC_NO_PROPERTIES>;

        r48 = virtualinvoke $r33.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.GetResultProto get(java.lang.String,java.lang.String,com.google.android.icing.proto.GetResultSpecProto)>(r6, r4, $r32);

        $r34 = virtualinvoke r48.<com.google.android.icing.proto.GetResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "removeById, getResponse", $r34, r48);

        $r35 = virtualinvoke r48.<com.google.android.icing.proto.GetResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r35);

        $r36 = virtualinvoke r48.<com.google.android.icing.proto.GetResultProto: com.google.android.icing.proto.DocumentProto getDocument()>();

        $r37 = virtualinvoke $r36.<com.google.android.icing.proto.DocumentProto: java.lang.String getSchema()>();

        r47 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String removePrefix(java.lang.String)>($r37);

     label03:
        $z2 = staticinvoke <androidx.appsearch.util.LogUtil: boolean isPiiTraceEnabled()>();

        if $z2 == 0 goto label04;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object)>("AppSearchImpl", "removeById, request", $r31);

     label04:
        $r15 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r49 = virtualinvoke $r15.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.DeleteResultProto delete(java.lang.String,java.lang.String)>(r6, r4);

        $r16 = virtualinvoke r49.<com.google.android.icing.proto.DeleteResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "removeById, response", $r16, r49);

        if r5 == null goto label05;

        $r24 = virtualinvoke r49.<com.google.android.icing.proto.DeleteResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        $i4 = staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: int statusProtoToResultCode(com.google.android.icing.proto.StatusProto)>($r24);

        virtualinvoke r5.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: androidx.appsearch.localstorage.stats.RemoveStats$Builder setStatusCode(int)>($i4);

        $r26 = virtualinvoke r49.<com.google.android.icing.proto.DeleteResultProto: com.google.android.icing.proto.DeleteStatsProto getDeleteStats()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchLoggerHelper: void copyNativeStats(com.google.android.icing.proto.DeleteStatsProto,androidx.appsearch.localstorage.stats.RemoveStats$Builder)>($r26, r5);

     label05:
        $r17 = virtualinvoke r49.<com.google.android.icing.proto.DeleteResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r17);

        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void updateDocumentCountAfterRemovalLocked(java.lang.String,int)>(r1, 1);

        if r47 == null goto label06;

        $r23 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>;

        $r22 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        $r21 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityChecker mVisibilityCheckerLocked>;

        virtualinvoke $r23.<androidx.appsearch.localstorage.ObserverManager: void onDocumentChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,androidx.appsearch.localstorage.visibilitystore.VisibilityStore,androidx.appsearch.localstorage.visibilitystore.VisibilityChecker)>(r1, r2, r3, r47, r4, $r22, $r21);

     label06:
        $r18 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r19 = interfaceinvoke $r18.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r19.<java.util.concurrent.locks.Lock: void unlock()>();

        if r5 == null goto label10;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l1 - l0;

        $i3 = (int) $l2;

        virtualinvoke r5.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: androidx.appsearch.localstorage.stats.RemoveStats$Builder setTotalLatencyMillis(int)>($i3);

        goto label10;

     label07:
        $r43 := @caughtexception;

        r7 = $r43;

     label08:
        $r44 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r45 = interfaceinvoke $r44.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r45.<java.util.concurrent.locks.Lock: void unlock()>();

        if r5 == null goto label09;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = $l5 - l0;

        $i7 = (int) $l6;

        virtualinvoke r5.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: androidx.appsearch.localstorage.stats.RemoveStats$Builder setTotalLatencyMillis(int)>($i7);

     label09:
        throw r7;

     label10:
        return;

        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public void removeByQuery(java.lang.String, java.lang.String, java.lang.String, androidx.appsearch.app.SearchSpec, androidx.appsearch.localstorage.stats.RemoveStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, r3, r7, r11, r12;
        androidx.appsearch.app.SearchSpec r4;
        androidx.appsearch.localstorage.stats.RemoveStats$Builder r5;
        long l0, $l1, $l2, $l5, $l6, $l8, $l9, $l11, $l12, $l14, $l15;
        java.util.List r6, r10;
        androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter r8, $r17;
        com.google.android.icing.proto.SearchSpecProto r9;
        java.lang.Throwable r13, $r37;
        java.util.concurrent.locks.ReadWriteLock $r14, $r22, $r28, $r31, $r34, $r38;
        java.util.concurrent.locks.Lock $r15, $r23, $r29, $r32, $r35, $r39;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        java.util.Map $r16, $r19, $r20;
        java.util.Set $r18;
        androidx.appsearch.localstorage.ObserverManager $r21, $r27;
        int $i3, $i4, $i7, $i10, $i13, $i16, i17;
        androidx.collection.ArraySet $r25, r41;
        java.lang.Object $r26;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: androidx.appsearch.app.SearchSpec;

        r5 := @parameter4: androidx.appsearch.localstorage.stats.RemoveStats$Builder;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r14 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r15 = interfaceinvoke $r14.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r15.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        r6 = virtualinvoke r4.<androidx.appsearch.app.SearchSpec: java.util.List getFilterPackageNames()>();

        $z0 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label04;

        $z6 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z6 != 0 goto label04;

     label02:
        $r34 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r35 = interfaceinvoke $r34.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r35.<java.util.concurrent.locks.Lock: void unlock()>();

        if r5 == null goto label03;

        $l11 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l12 = $l11 - l0;

        $i13 = (int) $l12;

        virtualinvoke r5.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: androidx.appsearch.localstorage.stats.RemoveStats$Builder setTotalLatencyMillis(int)>($i13);

     label03:
        return;

     label04:
        r7 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        $r16 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        $z1 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>(r7);

        if $z1 != 0 goto label07;

     label05:
        $r31 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r32 = interfaceinvoke $r31.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r32.<java.util.concurrent.locks.Lock: void unlock()>();

        if r5 == null goto label06;

        $l8 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l9 = $l8 - l0;

        $i10 = (int) $l9;

        virtualinvoke r5.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: androidx.appsearch.localstorage.stats.RemoveStats$Builder setTotalLatencyMillis(int)>($i10);

     label06:
        return;

     label07:
        $r17 = new androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter;

        $r18 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r7);

        $r20 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        $r19 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        specialinvoke $r17.<androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter: void <init>(java.lang.String,androidx.appsearch.app.SearchSpec,java.util.Set,java.util.Map,java.util.Map)>(r3, r4, $r18, $r20, $r19);

        r8 = $r17;

        $z2 = virtualinvoke r8.<androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter: boolean hasNothingToSearch()>();

        if $z2 == 0 goto label10;

     label08:
        $r28 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r29 = interfaceinvoke $r28.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r29.<java.util.concurrent.locks.Lock: void unlock()>();

        if r5 == null goto label09;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = $l5 - l0;

        $i7 = (int) $l6;

        virtualinvoke r5.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: androidx.appsearch.localstorage.stats.RemoveStats$Builder setTotalLatencyMillis(int)>($i7);

     label09:
        return;

     label10:
        r9 = virtualinvoke r8.<androidx.appsearch.localstorage.converter.SearchSpecToProtoConverter: com.google.android.icing.proto.SearchSpecProto toSearchSpecProto()>();

        r41 = null;

        $r21 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>;

        $z3 = virtualinvoke $r21.<androidx.appsearch.localstorage.ObserverManager: boolean isPackageObserved(java.lang.String)>(r1);

        if $z3 == 0 goto label13;

        $r25 = new androidx.collection.ArraySet;

        specialinvoke $r25.<androidx.collection.ArraySet: void <init>()>();

        r41 = $r25;

        r10 = virtualinvoke r9.<com.google.android.icing.proto.SearchSpecProto: java.util.List getSchemaTypeFiltersList()>();

        i17 = 0;

     label11:
        $i4 = interfaceinvoke r10.<java.util.List: int size()>();

        if i17 >= $i4 goto label13;

        $r26 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i17);

        r11 = (java.lang.String) $r26;

        r12 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String removePrefix(java.lang.String)>(r11);

        $r27 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>;

        $z4 = virtualinvoke $r27.<androidx.appsearch.localstorage.ObserverManager: boolean isSchemaTypeObserved(java.lang.String,java.lang.String)>(r1, r12);

        if $z4 == 0 goto label12;

        interfaceinvoke r41.<java.util.Set: boolean add(java.lang.Object)>(r11);

     label12:
        i17 = i17 + 1;

        goto label11;

     label13:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void doRemoveByQueryLocked(java.lang.String,com.google.android.icing.proto.SearchSpecProto,java.util.Set,androidx.appsearch.localstorage.stats.RemoveStats$Builder)>(r1, r9, r41, r5);

     label14:
        $r22 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r23 = interfaceinvoke $r22.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r23.<java.util.concurrent.locks.Lock: void unlock()>();

        if r5 == null goto label18;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l1 - l0;

        $i3 = (int) $l2;

        virtualinvoke r5.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: androidx.appsearch.localstorage.stats.RemoveStats$Builder setTotalLatencyMillis(int)>($i3);

        goto label18;

     label15:
        $r37 := @caughtexception;

        r13 = $r37;

     label16:
        $r38 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r39 = interfaceinvoke $r38.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r39.<java.util.concurrent.locks.Lock: void unlock()>();

        if r5 == null goto label17;

        $l14 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l15 = $l14 - l0;

        $i16 = (int) $l15;

        virtualinvoke r5.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: androidx.appsearch.localstorage.stats.RemoveStats$Builder setTotalLatencyMillis(int)>($i16);

     label17:
        throw r13;

     label18:
        return;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label10 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private void doRemoveByQueryLocked(java.lang.String, com.google.android.icing.proto.SearchSpecProto, java.util.Set, androidx.appsearch.localstorage.stats.RemoveStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1;
        com.google.android.icing.proto.SearchSpecProto r2;
        java.util.Set r3;
        androidx.appsearch.localstorage.stats.RemoveStats$Builder r4;
        boolean z0, $z1, $z2, $z3;
        com.google.android.icing.proto.DeleteByQueryResultProto r5;
        int i0, $i1;
        com.google.android.icing.proto.StatusProto $r6, $r11, $r15;
        com.google.android.icing.proto.StatusProto$Code[] $r7;
        com.google.android.icing.proto.StatusProto$Code $r8, $r9;
        com.google.android.icing.proto.DeleteByQueryStatsProto $r10, $r13;
        com.google.android.icing.IcingSearchEngine $r14;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.google.android.icing.proto.SearchSpecProto;

        r3 := @parameter2: java.util.Set;

        r4 := @parameter3: androidx.appsearch.localstorage.stats.RemoveStats$Builder;

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object)>("AppSearchImpl", "removeByQuery, request", r2);

        if r3 == null goto label1;

        $z2 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>();

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        $r14 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r5 = virtualinvoke $r14.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.DeleteByQueryResultProto deleteByQuery(com.google.android.icing.proto.SearchSpecProto,boolean)>(r2, z0);

        $r15 = virtualinvoke r5.<com.google.android.icing.proto.DeleteByQueryResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "removeByQuery, response", $r15, r5);

        if r4 == null goto label3;

        $r11 = virtualinvoke r5.<com.google.android.icing.proto.DeleteByQueryResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        $i1 = staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: int statusProtoToResultCode(com.google.android.icing.proto.StatusProto)>($r11);

        virtualinvoke r4.<androidx.appsearch.localstorage.stats.RemoveStats$Builder: androidx.appsearch.localstorage.stats.RemoveStats$Builder setStatusCode(int)>($i1);

        $r13 = virtualinvoke r5.<com.google.android.icing.proto.DeleteByQueryResultProto: com.google.android.icing.proto.DeleteByQueryStatsProto getDeleteByQueryStats()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchLoggerHelper: void copyNativeStats(com.google.android.icing.proto.DeleteByQueryStatsProto,androidx.appsearch.localstorage.stats.RemoveStats$Builder)>($r13, r4);

     label3:
        $r6 = virtualinvoke r5.<com.google.android.icing.proto.DeleteByQueryResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        $r7 = newarray (com.google.android.icing.proto.StatusProto$Code)[2];

        $r8 = <com.google.android.icing.proto.StatusProto$Code: com.google.android.icing.proto.StatusProto$Code OK>;

        $r7[0] = $r8;

        $r9 = <com.google.android.icing.proto.StatusProto$Code: com.google.android.icing.proto.StatusProto$Code NOT_FOUND>;

        $r7[1] = $r9;

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkCodeOneOf(com.google.android.icing.proto.StatusProto,com.google.android.icing.proto.StatusProto$Code[])>($r6, $r7);

        $r10 = virtualinvoke r5.<com.google.android.icing.proto.DeleteByQueryResultProto: com.google.android.icing.proto.DeleteByQueryStatsProto getDeleteByQueryStats()>();

        i0 = virtualinvoke $r10.<com.google.android.icing.proto.DeleteByQueryStatsProto: int getNumDocumentsDeleted()>();

        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void updateDocumentCountAfterRemovalLocked(java.lang.String,int)>(r1, i0);

        if r3 == null goto label4;

        $z1 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void dispatchChangeNotificationsAfterRemoveByQueryLocked(java.lang.String,com.google.android.icing.proto.DeleteByQueryResultProto,java.util.Set)>(r1, r5, r3);

     label4:
        return;
    }

    private void updateDocumentCountAfterRemovalLocked(java.lang.String, int)
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3;
        java.lang.Integer r2, $r6;
        java.util.Map $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 <= 0 goto label1;

        $r3 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mDocumentCountMapLocked>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r4;

        if r2 == null goto label1;

        $i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i3 = $i2 - i0;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 0);

        $r5 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mDocumentCountMapLocked>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

     label1:
        return;
    }

    private void dispatchChangeNotificationsAfterRemoveByQueryLocked(java.lang.String, com.google.android.icing.proto.DeleteByQueryResultProto, java.util.Set) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r5, r6, r7, r8, $r9, $r10, $r11, $r12;
        com.google.android.icing.proto.DeleteByQueryResultProto r2;
        java.util.Set r3;
        com.google.android.icing.proto.DeleteByQueryResultProto$DocumentGroupInfo r4;
        int $i0, $i1, i2, i3;
        boolean $z0;
        androidx.appsearch.localstorage.visibilitystore.VisibilityChecker $r13;
        androidx.appsearch.localstorage.visibilitystore.VisibilityStore $r14;
        androidx.appsearch.localstorage.ObserverManager $r15;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.google.android.icing.proto.DeleteByQueryResultProto;

        r3 := @parameter2: java.util.Set;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r2.<com.google.android.icing.proto.DeleteByQueryResultProto: int getDeletedDocumentsCount()>();

        if i2 >= $i0 goto label5;

        r4 = virtualinvoke r2.<com.google.android.icing.proto.DeleteByQueryResultProto: com.google.android.icing.proto.DeleteByQueryResultProto$DocumentGroupInfo getDeletedDocuments(int)>(i2);

        $r9 = virtualinvoke r4.<com.google.android.icing.proto.DeleteByQueryResultProto$DocumentGroupInfo: java.lang.String getSchema()>();

        $z0 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z0 != 0 goto label2;

        goto label4;

     label2:
        $r10 = virtualinvoke r4.<com.google.android.icing.proto.DeleteByQueryResultProto$DocumentGroupInfo: java.lang.String getNamespace()>();

        r5 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String getDatabaseName(java.lang.String)>($r10);

        $r11 = virtualinvoke r4.<com.google.android.icing.proto.DeleteByQueryResultProto$DocumentGroupInfo: java.lang.String getNamespace()>();

        r6 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String removePrefix(java.lang.String)>($r11);

        $r12 = virtualinvoke r4.<com.google.android.icing.proto.DeleteByQueryResultProto$DocumentGroupInfo: java.lang.String getSchema()>();

        r7 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String removePrefix(java.lang.String)>($r12);

        i3 = 0;

     label3:
        $i1 = virtualinvoke r4.<com.google.android.icing.proto.DeleteByQueryResultProto$DocumentGroupInfo: int getUrisCount()>();

        if i3 >= $i1 goto label4;

        r8 = virtualinvoke r4.<com.google.android.icing.proto.DeleteByQueryResultProto$DocumentGroupInfo: java.lang.String getUris(int)>(i3);

        $r15 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>;

        $r14 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        $r13 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityChecker mVisibilityCheckerLocked>;

        virtualinvoke $r15.<androidx.appsearch.localstorage.ObserverManager: void onDocumentChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,androidx.appsearch.localstorage.visibilitystore.VisibilityStore,androidx.appsearch.localstorage.visibilitystore.VisibilityChecker)>(r1, r5, r6, r7, r8, $r14, $r13);

        i3 = i3 + 1;

        goto label3;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return;
    }

    public androidx.appsearch.app.StorageInfo getStorageInfoForPackage(java.lang.String) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r4, $r19;
        java.util.Map r2, $r18;
        java.util.Set r3, r5;
        java.lang.Throwable r6, $r24;
        java.util.concurrent.locks.ReadWriteLock $r7, $r12, $r15, $r22, $r25;
        java.util.concurrent.locks.Lock $r8, $r13, $r16, $r23, $r26;
        java.lang.Object $r9, $r17, $r20;
        androidx.collection.ArraySet $r10, r28;
        boolean $z0, $z1;
        com.google.android.icing.proto.StorageInfoProto $r11;
        androidx.appsearch.app.StorageInfo$Builder $r14, $r21;
        androidx.appsearch.app.StorageInfo r27, r30, r31;
        java.util.Iterator r29;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        $r7 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r8 = interfaceinvoke $r7.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        r2 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map getPackageToDatabases()>();

        $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.Set) $r9;

        if r3 != null goto label03;

        $r21 = new androidx.appsearch.app.StorageInfo$Builder;

        specialinvoke $r21.<androidx.appsearch.app.StorageInfo$Builder: void <init>()>();

        r27 = virtualinvoke $r21.<androidx.appsearch.app.StorageInfo$Builder: androidx.appsearch.app.StorageInfo build()>();

     label02:
        $r22 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r23 = interfaceinvoke $r22.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r23.<java.util.concurrent.locks.Lock: void unlock()>();

        return r27;

     label03:
        $r10 = new androidx.collection.ArraySet;

        specialinvoke $r10.<androidx.collection.ArraySet: void <init>()>();

        r28 = $r10;

        r29 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r17 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r17;

        $r18 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        $r19 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r4);

        $r20 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        r5 = (java.util.Set) $r20;

        if r5 == null goto label05;

        interfaceinvoke r28.<java.util.Set: boolean addAll(java.util.Collection)>(r5);

     label05:
        goto label04;

     label06:
        $z1 = interfaceinvoke r28.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label08;

        $r14 = new androidx.appsearch.app.StorageInfo$Builder;

        specialinvoke $r14.<androidx.appsearch.app.StorageInfo$Builder: void <init>()>();

        r30 = virtualinvoke $r14.<androidx.appsearch.app.StorageInfo$Builder: androidx.appsearch.app.StorageInfo build()>();

     label07:
        $r15 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r16 = interfaceinvoke $r15.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r16.<java.util.concurrent.locks.Lock: void unlock()>();

        return r30;

     label08:
        $r11 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.StorageInfoProto getRawStorageInfoProto()>();

        r31 = staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.StorageInfo getStorageInfoForNamespaces(com.google.android.icing.proto.StorageInfoProto,java.util.Set)>($r11, r28);

     label09:
        $r12 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r13 = interfaceinvoke $r12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void unlock()>();

        return r31;

     label10:
        $r24 := @caughtexception;

        r6 = $r24;

     label11:
        $r25 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r26 = interfaceinvoke $r25.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r26.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public androidx.appsearch.app.StorageInfo getStorageInfoForDatabase(java.lang.String, java.lang.String) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, r2, $r10;
        java.util.Map r3, $r9;
        java.util.Set r4, r29;
        java.lang.Throwable r5, $r24;
        java.util.concurrent.locks.ReadWriteLock $r6, $r13, $r16, $r19, $r22, $r25;
        java.util.concurrent.locks.Lock $r7, $r14, $r17, $r20, $r23, $r26;
        java.lang.Object $r8, $r11;
        boolean $z0, $z1;
        androidx.appsearch.app.StorageInfo$Builder $r12, $r18, $r21;
        com.google.android.icing.proto.StorageInfoProto $r15;
        androidx.appsearch.app.StorageInfo r27, r28, r30, r31;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r7 = interfaceinvoke $r6.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        r3 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map getPackageToDatabases()>();

        $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Set) $r8;

        if r4 != null goto label03;

        $r21 = new androidx.appsearch.app.StorageInfo$Builder;

        specialinvoke $r21.<androidx.appsearch.app.StorageInfo$Builder: void <init>()>();

        r27 = virtualinvoke $r21.<androidx.appsearch.app.StorageInfo$Builder: androidx.appsearch.app.StorageInfo build()>();

     label02:
        $r22 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r23 = interfaceinvoke $r22.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r23.<java.util.concurrent.locks.Lock: void unlock()>();

        return r27;

     label03:
        $z0 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 != 0 goto label05;

        $r18 = new androidx.appsearch.app.StorageInfo$Builder;

        specialinvoke $r18.<androidx.appsearch.app.StorageInfo$Builder: void <init>()>();

        r28 = virtualinvoke $r18.<androidx.appsearch.app.StorageInfo$Builder: androidx.appsearch.app.StorageInfo build()>();

     label04:
        $r19 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r20 = interfaceinvoke $r19.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r20.<java.util.concurrent.locks.Lock: void unlock()>();

        return r28;

     label05:
        $r9 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        $r10 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r1, r2);

        $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        r29 = (java.util.Set) $r11;

        if r29 == null goto label06;

        $z1 = interfaceinvoke r29.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label08;

     label06:
        $r12 = new androidx.appsearch.app.StorageInfo$Builder;

        specialinvoke $r12.<androidx.appsearch.app.StorageInfo$Builder: void <init>()>();

        r30 = virtualinvoke $r12.<androidx.appsearch.app.StorageInfo$Builder: androidx.appsearch.app.StorageInfo build()>();

     label07:
        $r13 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r14 = interfaceinvoke $r13.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r14.<java.util.concurrent.locks.Lock: void unlock()>();

        return r30;

     label08:
        $r15 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.StorageInfoProto getRawStorageInfoProto()>();

        r31 = staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.app.StorageInfo getStorageInfoForNamespaces(com.google.android.icing.proto.StorageInfoProto,java.util.Set)>($r15, r29);

     label09:
        $r16 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r17 = interfaceinvoke $r16.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r17.<java.util.concurrent.locks.Lock: void unlock()>();

        return r31;

     label10:
        $r24 := @caughtexception;

        r5 = $r24;

     label11:
        $r25 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r26 = interfaceinvoke $r25.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r26.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r5;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public com.google.android.icing.proto.StorageInfoProto getRawStorageInfoProto() throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        com.google.android.icing.proto.StorageInfoResultProto r1;
        com.google.android.icing.proto.StorageInfoProto r2;
        java.lang.Throwable r3, $r11;
        java.util.concurrent.locks.ReadWriteLock $r4, $r9, $r12;
        java.util.concurrent.locks.Lock $r5, $r10, $r13;
        com.google.android.icing.IcingSearchEngine $r6;
        com.google.android.icing.proto.StatusProto $r7, $r8;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        $r4 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String)>("AppSearchImpl", "getStorageInfo, request");

        $r6 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r1 = virtualinvoke $r6.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.StorageInfoResultProto getStorageInfo()>();

        $r7 = virtualinvoke r1.<com.google.android.icing.proto.StorageInfoResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "getStorageInfo, response", $r7, r1);

        $r8 = virtualinvoke r1.<com.google.android.icing.proto.StorageInfoResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r8);

        r2 = virtualinvoke r1.<com.google.android.icing.proto.StorageInfoResultProto: com.google.android.icing.proto.StorageInfoProto getStorageInfo()>();

     label2:
        $r9 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r10 = interfaceinvoke $r9.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        return r2;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        $r12 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r13 = interfaceinvoke $r12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static androidx.appsearch.app.StorageInfo getStorageInfoForNamespaces(com.google.android.icing.proto.StorageInfoProto, java.util.Set)
    {
        com.google.android.icing.proto.StorageInfoProto r0;
        java.util.Set r1;
        long l0, $l6;
        com.google.android.icing.proto.DocumentStorageInfoProto r2;
        int i1, $i2, $i3, $i5, $i7, $i8, $i9, i10, i11, i12, i13, i14;
        java.util.List r3;
        com.google.android.icing.proto.NamespaceStorageInfoProto r4;
        boolean $z0, $z1;
        byte $b4;
        androidx.appsearch.app.StorageInfo$Builder $r5, $r7, $r8, $r9, $r10, $r14;
        androidx.appsearch.app.StorageInfo $r6, $r11, $r15;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.Object $r12;
        java.lang.String $r13;

        r0 := @parameter0: com.google.android.icing.proto.StorageInfoProto;

        r1 := @parameter1: java.util.Set;

        $z0 = virtualinvoke r0.<com.google.android.icing.proto.StorageInfoProto: boolean hasDocumentStorageInfo()>();

        if $z0 != 0 goto label1;

        $r14 = new androidx.appsearch.app.StorageInfo$Builder;

        specialinvoke $r14.<androidx.appsearch.app.StorageInfo$Builder: void <init>()>();

        $r15 = virtualinvoke $r14.<androidx.appsearch.app.StorageInfo$Builder: androidx.appsearch.app.StorageInfo build()>();

        return $r15;

     label1:
        l0 = virtualinvoke r0.<com.google.android.icing.proto.StorageInfoProto: long getTotalStorageSize()>();

        r2 = virtualinvoke r0.<com.google.android.icing.proto.StorageInfoProto: com.google.android.icing.proto.DocumentStorageInfoProto getDocumentStorageInfo()>();

        $i2 = virtualinvoke r2.<com.google.android.icing.proto.DocumentStorageInfoProto: int getNumAliveDocuments()>();

        $i3 = virtualinvoke r2.<com.google.android.icing.proto.DocumentStorageInfoProto: int getNumExpiredDocuments()>();

        i1 = $i2 + $i3;

        $b4 = l0 cmp 0L;

        if $b4 == 0 goto label2;

        if i1 != 0 goto label3;

     label2:
        $r5 = new androidx.appsearch.app.StorageInfo$Builder;

        specialinvoke $r5.<androidx.appsearch.app.StorageInfo$Builder: void <init>()>();

        $r6 = virtualinvoke $r5.<androidx.appsearch.app.StorageInfo$Builder: androidx.appsearch.app.StorageInfo build()>();

        return $r6;

     label3:
        i10 = 0;

        i11 = 0;

        i12 = 0;

        r3 = virtualinvoke r2.<com.google.android.icing.proto.DocumentStorageInfoProto: java.util.List getNamespaceStorageInfoList()>();

        i13 = 0;

     label4:
        $i5 = interfaceinvoke r3.<java.util.List: int size()>();

        if i13 >= $i5 goto label7;

        $r12 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i13);

        r4 = (com.google.android.icing.proto.NamespaceStorageInfoProto) $r12;

        $r13 = virtualinvoke r4.<com.google.android.icing.proto.NamespaceStorageInfoProto: java.lang.String getNamespace()>();

        $z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r13);

        if $z1 == 0 goto label6;

        $i7 = virtualinvoke r4.<com.google.android.icing.proto.NamespaceStorageInfoProto: int getNumAliveDocuments()>();

        if $i7 <= 0 goto label5;

        i12 = i12 + 1;

        $i9 = virtualinvoke r4.<com.google.android.icing.proto.NamespaceStorageInfoProto: int getNumAliveDocuments()>();

        i10 = i10 + $i9;

     label5:
        $i8 = virtualinvoke r4.<com.google.android.icing.proto.NamespaceStorageInfoProto: int getNumExpiredDocuments()>();

        i11 = i11 + $i8;

     label6:
        i13 = i13 + 1;

        goto label4;

     label7:
        i14 = i10 + i11;

        $r7 = new androidx.appsearch.app.StorageInfo$Builder;

        specialinvoke $r7.<androidx.appsearch.app.StorageInfo$Builder: void <init>()>();

        $d0 = (double) i14;

        $d2 = $d0 * 1.0;

        $d1 = (double) i1;

        $d4 = $d2 / $d1;

        $d3 = (double) l0;

        $d5 = $d4 * $d3;

        $l6 = (long) $d5;

        $r8 = virtualinvoke $r7.<androidx.appsearch.app.StorageInfo$Builder: androidx.appsearch.app.StorageInfo$Builder setSizeBytes(long)>($l6);

        $r9 = virtualinvoke $r8.<androidx.appsearch.app.StorageInfo$Builder: androidx.appsearch.app.StorageInfo$Builder setAliveDocumentsCount(int)>(i10);

        $r10 = virtualinvoke $r9.<androidx.appsearch.app.StorageInfo$Builder: androidx.appsearch.app.StorageInfo$Builder setAliveNamespacesCount(int)>(i12);

        $r11 = virtualinvoke $r10.<androidx.appsearch.app.StorageInfo$Builder: androidx.appsearch.app.StorageInfo build()>();

        return $r11;
    }

    public com.google.android.icing.proto.DebugInfoProto getRawDebugInfoProto(com.google.android.icing.proto.DebugInfoVerbosity$Code) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        com.google.android.icing.proto.DebugInfoVerbosity$Code r1;
        com.google.android.icing.proto.DebugInfoResultProto r2;
        com.google.android.icing.proto.DebugInfoProto r3;
        java.lang.Throwable r4, $r12;
        java.util.concurrent.locks.ReadWriteLock $r5, $r10, $r13;
        java.util.concurrent.locks.Lock $r6, $r11, $r14;
        com.google.android.icing.IcingSearchEngine $r7;
        com.google.android.icing.proto.StatusProto $r8, $r9;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: com.google.android.icing.proto.DebugInfoVerbosity$Code;

        $r5 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r6 = interfaceinvoke $r5.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String)>("AppSearchImpl", "getDebugInfo, request");

        $r7 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r2 = virtualinvoke $r7.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.DebugInfoResultProto getDebugInfo(com.google.android.icing.proto.DebugInfoVerbosity$Code)>(r1);

        $r8 = virtualinvoke r2.<com.google.android.icing.proto.DebugInfoResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "getDebugInfo, response", $r8, r2);

        $r9 = virtualinvoke r2.<com.google.android.icing.proto.DebugInfoResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r9);

        r3 = virtualinvoke r2.<com.google.android.icing.proto.DebugInfoResultProto: com.google.android.icing.proto.DebugInfoProto getDebugInfo()>();

     label2:
        $r10 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r11 = interfaceinvoke $r10.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void unlock()>();

        return r3;

     label3:
        $r12 := @caughtexception;

        r4 = $r12;

     label4:
        $r13 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r14 = interfaceinvoke $r13.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r14.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void persistToDisk(com.google.android.icing.proto.PersistType$Code) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        com.google.android.icing.proto.PersistType$Code r1;
        com.google.android.icing.proto.PersistToDiskResultProto r2;
        java.lang.Throwable r3, $r11;
        java.util.concurrent.locks.ReadWriteLock $r4, $r9, $r12;
        java.util.concurrent.locks.Lock $r5, $r10, $r13;
        com.google.android.icing.IcingSearchEngine $r6;
        com.google.android.icing.proto.StatusProto $r7, $r8;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: com.google.android.icing.proto.PersistType$Code;

        $r4 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object)>("AppSearchImpl", "persistToDisk, request", r1);

        $r6 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r2 = virtualinvoke $r6.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.PersistToDiskResultProto persistToDisk(com.google.android.icing.proto.PersistType$Code)>(r1);

        $r7 = virtualinvoke r2.<com.google.android.icing.proto.PersistToDiskResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "persistToDisk, response", $r7, r2);

        $r8 = virtualinvoke r2.<com.google.android.icing.proto.PersistToDiskResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r8);

     label2:
        $r9 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r10 = interfaceinvoke $r9.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label4;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        $r12 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r13 = interfaceinvoke $r12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r3;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void clearPackageData(java.lang.String) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1;
        java.util.Set r2;
        java.lang.Throwable r3, $r9;
        java.util.concurrent.locks.ReadWriteLock $r4, $r7, $r10;
        java.util.concurrent.locks.Lock $r5, $r8, $r11;
        java.util.Map $r6;
        boolean $z0;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        $r6 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map getPackageToDatabases()>();

        r2 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        interfaceinvoke r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void prunePackageData(java.util.Set)>(r2);

     label2:
        $r7 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r8 = interfaceinvoke $r7.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label4;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        $r10 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r11 = interfaceinvoke $r10.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r3;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void prunePackageData(java.util.Set) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.util.Set r1, r8, $r14, $r20, $r40;
        java.util.Map r2, r10, $r26, $r28, $r29, $r32, $r34, $r37, r54;
        com.google.android.icing.proto.SchemaProto r3, r52;
        com.google.android.icing.proto.SchemaProto$Builder r4;
        java.util.Iterator r5, r56;
        java.util.Map$Entry r6;
        java.lang.String r7, r9, $r42, r51, r57;
        java.lang.Throwable r11, $r47, $r50, r55;
        java.util.concurrent.locks.ReadWriteLock $r12, $r21, $r45, $r48;
        java.util.concurrent.locks.Lock $r13, $r22, $r46, $r49;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, i2;
        com.google.android.icing.protobuf.GeneratedMessageLite $r15;
        java.lang.Integer $r16;
        com.google.android.icing.IcingSearchEngine $r17;
        com.google.android.icing.proto.StatusProto $r18, $r19;
        java.lang.Object $r23, $r24, $r25, $r31, $r33, $r35;
        androidx.appsearch.localstorage.visibilitystore.VisibilityStore $r36, $r39;
        com.google.android.icing.proto.SchemaTypeConfigProto $r41, $r43;
        com.google.android.icing.proto.SetSchemaResultProto r53;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.util.Set;

        $r12 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r13 = interfaceinvoke $r12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        specialinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void throwIfClosedLocked()>();

        r2 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map getPackageToDatabases()>();

        $r14 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();

        $z0 = interfaceinvoke r1.<java.util.Set: boolean containsAll(java.util.Collection)>($r14);

        if $z0 == 0 goto label03;

     label02:
        $r45 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r46 = interfaceinvoke $r45.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r46.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label03:
        r3 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.SchemaProto getSchemaProtoLocked()>();

        r4 = staticinvoke <com.google.android.icing.proto.SchemaProto: com.google.android.icing.proto.SchemaProto$Builder newBuilder()>();

        i2 = 0;

     label04:
        $i0 = virtualinvoke r3.<com.google.android.icing.proto.SchemaProto: int getTypesCount()>();

        if i2 >= $i0 goto label06;

        $r41 = virtualinvoke r3.<com.google.android.icing.proto.SchemaProto: com.google.android.icing.proto.SchemaTypeConfigProto getTypes(int)>(i2);

        $r42 = virtualinvoke $r41.<com.google.android.icing.proto.SchemaTypeConfigProto: java.lang.String getSchemaType()>();

        r51 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String getPackageName(java.lang.String)>($r42);

        $z4 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r51);

        if $z4 == 0 goto label05;

        $r43 = virtualinvoke r3.<com.google.android.icing.proto.SchemaProto: com.google.android.icing.proto.SchemaTypeConfigProto getTypes(int)>(i2);

        virtualinvoke r4.<com.google.android.icing.proto.SchemaProto$Builder: com.google.android.icing.proto.SchemaProto$Builder addTypes(com.google.android.icing.proto.SchemaTypeConfigProto)>($r43);

     label05:
        i2 = i2 + 1;

        goto label04;

     label06:
        $r15 = virtualinvoke r4.<com.google.android.icing.proto.SchemaProto$Builder: com.google.android.icing.protobuf.GeneratedMessageLite build()>();

        r52 = (com.google.android.icing.proto.SchemaProto) $r15;

        $i1 = virtualinvoke r52.<com.google.android.icing.proto.SchemaProto: int getTypesCount()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "clearPackageData.setSchema, request", $r16, r52);

        $r17 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r53 = virtualinvoke $r17.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.SetSchemaResultProto setSchema(com.google.android.icing.proto.SchemaProto,boolean)>(r52, 1);

        $r18 = virtualinvoke r53.<com.google.android.icing.proto.SetSchemaResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "clearPackageData.setSchema, response", $r18, r53);

        $r19 = virtualinvoke r53.<com.google.android.icing.proto.SetSchemaResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r19);

        $r20 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r23 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r23;

        $r24 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (java.lang.String) $r24;

        $r25 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (java.util.Set) $r25;

        $z2 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r7);

        if $z2 != 0 goto label15;

        if r8 == null goto label15;

        $r26 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mDocumentCountMapLocked>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r7);

        $r28 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>;

        r54 = $r28;

        entermonitor $r28;

     label08:
        $r29 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>;

        interfaceinvoke $r29.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r7);

        exitmonitor r54;

     label09:
        goto label12;

     label10:
        $r50 := @caughtexception;

        r55 = $r50;

        exitmonitor r54;

     label11:
        throw r55;

     label12:
        r56 = interfaceinvoke r8.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z3 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label15;

        $r31 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>();

        r57 = (java.lang.String) $r31;

        r9 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String createPrefix(java.lang.String,java.lang.String)>(r7, r57);

        $r32 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        $r33 = interfaceinvoke $r32.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r9);

        $r34 = (java.util.Map) $r33;

        $r35 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r34);

        r10 = (java.util.Map) $r35;

        $r36 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        if $r36 == null goto label14;

        $r39 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.visibilitystore.VisibilityStore mVisibilityStoreLocked>;

        $r40 = interfaceinvoke r10.<java.util.Map: java.util.Set keySet()>();

        virtualinvoke $r39.<androidx.appsearch.localstorage.visibilitystore.VisibilityStore: void removeVisibility(java.util.Set)>($r40);

     label14:
        $r37 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        interfaceinvoke $r37.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r9);

        goto label13;

     label15:
        goto label07;

     label16:
        $r21 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r22 = interfaceinvoke $r21.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r22.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label19;

     label17:
        $r47 := @caughtexception;

        r11 = $r47;

     label18:
        $r48 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r49 = interfaceinvoke $r48.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r49.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r11;

     label19:
        return;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private void resetLocked(androidx.appsearch.localstorage.stats.InitializeStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        androidx.appsearch.localstorage.stats.InitializeStats$Builder r1, $r13;
        com.google.android.icing.proto.ResetResultProto r2;
        java.util.Map r3, $r7, $r8, $r9, $r10, $r11;
        java.lang.Throwable r4, $r16;
        com.google.android.icing.IcingSearchEngine $r5;
        com.google.android.icing.proto.StatusProto $r6, $r12, $r14;
        int $i0;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: androidx.appsearch.localstorage.stats.InitializeStats$Builder;

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String)>("AppSearchImpl", "icingSearchEngine.reset, request");

        $r5 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r2 = virtualinvoke $r5.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.ResetResultProto reset()>();

        $r6 = virtualinvoke r2.<com.google.android.icing.proto.ResetResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "icingSearchEngine.reset, response", $r6, r2);

        r0.<androidx.appsearch.localstorage.AppSearchImpl: int mOptimizeIntervalCountLocked> = 0;

        $r7 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        interfaceinvoke $r7.<java.util.Map: void clear()>();

        $r8 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNamespaceMapLocked>;

        interfaceinvoke $r8.<java.util.Map: void clear()>();

        $r9 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mDocumentCountMapLocked>;

        interfaceinvoke $r9.<java.util.Map: void clear()>();

        $r10 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>;

        r3 = $r10;

        entermonitor $r10;

     label1:
        $r11 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>;

        interfaceinvoke $r11.<java.util.Map: void clear()>();

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r16 := @caughtexception;

        r4 = $r16;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        if r1 == null goto label6;

        $r13 = virtualinvoke r1.<androidx.appsearch.localstorage.stats.InitializeStats$Builder: androidx.appsearch.localstorage.stats.InitializeStats$Builder setHasReset(boolean)>(1);

        $r14 = virtualinvoke r2.<com.google.android.icing.proto.ResetResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        $i0 = staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: int statusProtoToResultCode(com.google.android.icing.proto.StatusProto)>($r14);

        virtualinvoke $r13.<androidx.appsearch.localstorage.stats.InitializeStats$Builder: androidx.appsearch.localstorage.stats.InitializeStats$Builder setResetStatusCode(int)>($i0);

     label6:
        $r12 = virtualinvoke r2.<com.google.android.icing.proto.ResetResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r12);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void rebuildDocumentCountMapLocked(com.google.android.icing.proto.StorageInfoProto)
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        com.google.android.icing.proto.StorageInfoProto r1;
        java.util.List r2;
        com.google.android.icing.proto.NamespaceStorageInfoProto r3;
        java.lang.String r4, $r9;
        java.lang.Integer r5, $r13;
        java.util.Map $r6, $r10, $r12;
        com.google.android.icing.proto.DocumentStorageInfoProto $r7;
        int $i0, $i1, $i2, i3, i4;
        java.lang.Object $r8, $r11;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: com.google.android.icing.proto.StorageInfoProto;

        $r6 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mDocumentCountMapLocked>;

        interfaceinvoke $r6.<java.util.Map: void clear()>();

        $r7 = virtualinvoke r1.<com.google.android.icing.proto.StorageInfoProto: com.google.android.icing.proto.DocumentStorageInfoProto getDocumentStorageInfo()>();

        r2 = virtualinvoke $r7.<com.google.android.icing.proto.DocumentStorageInfoProto: java.util.List getNamespaceStorageInfoList()>();

        i3 = 0;

     label1:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i3 >= $i0 goto label4;

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i3);

        r3 = (com.google.android.icing.proto.NamespaceStorageInfoProto) $r8;

        $r9 = virtualinvoke r3.<com.google.android.icing.proto.NamespaceStorageInfoProto: java.lang.String getNamespace()>();

        r4 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String getPackageName(java.lang.String)>($r9);

        $r10 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mDocumentCountMapLocked>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (java.lang.Integer) $r11;

        if r5 != null goto label2;

        i4 = virtualinvoke r3.<com.google.android.icing.proto.NamespaceStorageInfoProto: int getNumAliveDocuments()>();

        goto label3;

     label2:
        $i1 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        $i2 = virtualinvoke r3.<com.google.android.icing.proto.NamespaceStorageInfoProto: int getNumAliveDocuments()>();

        i4 = $i1 + $i2;

     label3:
        $r12 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mDocumentCountMapLocked>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r13);

        i3 = i3 + 1;

        goto label1;

     label4:
        return;
    }

    static androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults rewriteSchema(java.lang.String, com.google.android.icing.proto.SchemaProto$Builder, com.google.android.icing.proto.SchemaProto) throws androidx.appsearch.exceptions.AppSearchException
    {
        java.lang.String r0, r5, $r13, $r21, $r29, $r32, r37, r39;
        com.google.android.icing.proto.SchemaProto$Builder r1;
        com.google.android.icing.proto.SchemaProto r2;
        java.util.HashMap r3, $r6;
        com.google.android.icing.proto.PropertyConfigProto$Builder r4;
        int $i0, $i1, $i2, i3, i4, i5;
        androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults $r7, r38;
        java.util.Map $r8;
        java.util.Collection $r9;
        com.google.android.icing.proto.SchemaTypeConfigProto $r11, $r17, $r25, r40;
        java.lang.Object $r12;
        boolean $z0, $z2;
        java.util.Set $r15;
        com.google.android.icing.protobuf.GeneratedMessageLite$Builder $r18, $r28;
        java.lang.StringBuilder $r19, $r20, $r22, $r30, $r31, $r33;
        com.google.android.icing.protobuf.GeneratedMessageLite $r24;
        com.google.android.icing.proto.PropertyConfigProto $r27;
        com.google.android.icing.proto.SchemaTypeConfigProto$Builder r36;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.google.android.icing.proto.SchemaProto$Builder;

        r2 := @parameter2: com.google.android.icing.proto.SchemaProto;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r3 = $r6;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r2.<com.google.android.icing.proto.SchemaProto: int getTypesCount()>();

        if i3 >= $i0 goto label5;

        $r17 = virtualinvoke r2.<com.google.android.icing.proto.SchemaProto: com.google.android.icing.proto.SchemaTypeConfigProto getTypes(int)>(i3);

        $r18 = virtualinvoke $r17.<com.google.android.icing.proto.SchemaTypeConfigProto: com.google.android.icing.protobuf.GeneratedMessageLite$Builder toBuilder()>();

        r36 = (com.google.android.icing.proto.SchemaTypeConfigProto$Builder) $r18;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r21 = virtualinvoke r36.<com.google.android.icing.proto.SchemaTypeConfigProto$Builder: java.lang.String getSchemaType()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        r37 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r36.<com.google.android.icing.proto.SchemaTypeConfigProto$Builder: com.google.android.icing.proto.SchemaTypeConfigProto$Builder setSchemaType(java.lang.String)>(r37);

        i4 = 0;

     label2:
        $i2 = virtualinvoke r36.<com.google.android.icing.proto.SchemaTypeConfigProto$Builder: int getPropertiesCount()>();

        if i4 >= $i2 goto label4;

        $r27 = virtualinvoke r36.<com.google.android.icing.proto.SchemaTypeConfigProto$Builder: com.google.android.icing.proto.PropertyConfigProto getProperties(int)>(i4);

        $r28 = virtualinvoke $r27.<com.google.android.icing.proto.PropertyConfigProto: com.google.android.icing.protobuf.GeneratedMessageLite$Builder toBuilder()>();

        r4 = (com.google.android.icing.proto.PropertyConfigProto$Builder) $r28;

        $r29 = virtualinvoke r4.<com.google.android.icing.proto.PropertyConfigProto$Builder: java.lang.String getSchemaType()>();

        $z2 = virtualinvoke $r29.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label3;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r32 = virtualinvoke r4.<com.google.android.icing.proto.PropertyConfigProto$Builder: java.lang.String getSchemaType()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        r5 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.google.android.icing.proto.PropertyConfigProto$Builder: com.google.android.icing.proto.PropertyConfigProto$Builder setSchemaType(java.lang.String)>(r5);

        virtualinvoke r36.<com.google.android.icing.proto.SchemaTypeConfigProto$Builder: com.google.android.icing.proto.SchemaTypeConfigProto$Builder setProperties(int,com.google.android.icing.proto.PropertyConfigProto$Builder)>(i4, r4);

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        $r24 = virtualinvoke r36.<com.google.android.icing.proto.SchemaTypeConfigProto$Builder: com.google.android.icing.protobuf.GeneratedMessageLite build()>();

        $r25 = (com.google.android.icing.proto.SchemaTypeConfigProto) $r24;

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r37, $r25);

        i3 = i3 + 1;

        goto label1;

     label5:
        $r7 = new androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults;

        specialinvoke $r7.<androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults: void <init>()>();

        r38 = $r7;

        $r8 = r38.<androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults: java.util.Map mRewrittenPrefixedTypes>;

        interfaceinvoke $r8.<java.util.Map: void putAll(java.util.Map)>(r3);

        i5 = 0;

     label6:
        $i1 = virtualinvoke r1.<com.google.android.icing.proto.SchemaProto$Builder: int getTypesCount()>();

        if i5 >= $i1 goto label9;

        $r11 = virtualinvoke r1.<com.google.android.icing.proto.SchemaProto$Builder: com.google.android.icing.proto.SchemaTypeConfigProto getTypes(int)>(i5);

        r39 = virtualinvoke $r11.<com.google.android.icing.proto.SchemaTypeConfigProto: java.lang.String getSchemaType()>();

        $r12 = virtualinvoke r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r39);

        r40 = (com.google.android.icing.proto.SchemaTypeConfigProto) $r12;

        if r40 == null goto label7;

        virtualinvoke r1.<com.google.android.icing.proto.SchemaProto$Builder: com.google.android.icing.proto.SchemaProto$Builder setTypes(int,com.google.android.icing.proto.SchemaTypeConfigProto)>(i5, r40);

        goto label8;

     label7:
        $r13 = staticinvoke <androidx.appsearch.localstorage.util.PrefixUtil: java.lang.String getPrefix(java.lang.String)>(r39);

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label8;

        virtualinvoke r1.<com.google.android.icing.proto.SchemaProto$Builder: com.google.android.icing.proto.SchemaProto$Builder removeTypes(int)>(i5);

        i5 = i5 + -1;

        $r15 = r38.<androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults: java.util.Set mDeletedPrefixedTypes>;

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>(r39);

     label8:
        i5 = i5 + 1;

        goto label6;

     label9:
        $r9 = virtualinvoke r3.<java.util.HashMap: java.util.Collection values()>();

        virtualinvoke r1.<com.google.android.icing.proto.SchemaProto$Builder: com.google.android.icing.proto.SchemaProto$Builder addAllTypes(java.lang.Iterable)>($r9);

        return r38;
    }

    com.google.android.icing.proto.SchemaProto getSchemaProtoLocked() throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        com.google.android.icing.proto.GetSchemaResultProto r1;
        com.google.android.icing.IcingSearchEngine $r2;
        com.google.android.icing.proto.StatusProto $r3, $r4;
        com.google.android.icing.proto.StatusProto$Code[] $r5;
        com.google.android.icing.proto.StatusProto$Code $r6, $r7;
        com.google.android.icing.proto.SchemaProto $r8;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String)>("AppSearchImpl", "getSchema, request");

        $r2 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r1 = virtualinvoke $r2.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.GetSchemaResultProto getSchema()>();

        $r3 = virtualinvoke r1.<com.google.android.icing.proto.GetSchemaResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "getSchema, response", $r3, r1);

        $r4 = virtualinvoke r1.<com.google.android.icing.proto.GetSchemaResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        $r5 = newarray (com.google.android.icing.proto.StatusProto$Code)[2];

        $r6 = <com.google.android.icing.proto.StatusProto$Code: com.google.android.icing.proto.StatusProto$Code OK>;

        $r5[0] = $r6;

        $r7 = <com.google.android.icing.proto.StatusProto$Code: com.google.android.icing.proto.StatusProto$Code NOT_FOUND>;

        $r5[1] = $r7;

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkCodeOneOf(com.google.android.icing.proto.StatusProto,com.google.android.icing.proto.StatusProto$Code[])>($r4, $r5);

        $r8 = virtualinvoke r1.<com.google.android.icing.proto.GetSchemaResultProto: com.google.android.icing.proto.SchemaProto getSchema()>();

        return $r8;
    }

    private void addNextPageToken(java.lang.String, long)
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1;
        long l0;
        java.util.Map r2, $r4, $r5, $r9;
        java.lang.Throwable r3, $r11;
        byte $b1;
        java.lang.Object $r6, r12;
        java.lang.Long $r7;
        androidx.collection.ArraySet r13;
        java.util.Set r14;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r12 = (java.util.Set) $r6;

        if r12 != null goto label3;

        r13 = new androidx.collection.ArraySet;

        specialinvoke r13.<androidx.collection.ArraySet: void <init>()>();

        r12 = r13;

        $r9 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r12);

     label3:
        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r14 = (java.util.Set) r12;

        interfaceinvoke r14.<java.util.Set: boolean add(java.lang.Object)>($r7);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void checkNextPageToken(java.lang.String, long) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1, $r14;
        long l0;
        java.util.Map r2, $r5, $r6;
        java.util.Set r3;
        java.lang.Throwable r4, $r16;
        byte $b1;
        java.lang.Object $r7;
        androidx.appsearch.exceptions.AppSearchException $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13;
        java.lang.Long $r15;
        boolean $z0;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $r5 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mNextPageTokensLocked>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.Set) $r7;

        if r3 == null goto label3;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $z0 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r15);

        if $z0 != 0 goto label4;

     label3:
        $r8 = new androidx.appsearch.exceptions.AppSearchException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package \"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" cannot use nextPageToken: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>(8, $r14);

        throw $r8;

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r16 := @caughtexception;

        r4 = $r16;

        exitmonitor r2;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void registerObserverCallback(androidx.appsearch.localstorage.visibilitystore.CallerAccess, java.lang.String, androidx.appsearch.observer.ObserverSpec, java.util.concurrent.Executor, androidx.appsearch.observer.ObserverCallback)
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        androidx.appsearch.localstorage.visibilitystore.CallerAccess r1;
        java.lang.String r2;
        androidx.appsearch.observer.ObserverSpec r3;
        java.util.concurrent.Executor r4;
        androidx.appsearch.observer.ObserverCallback r5;
        androidx.appsearch.localstorage.ObserverManager $r6;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: androidx.appsearch.localstorage.visibilitystore.CallerAccess;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.appsearch.observer.ObserverSpec;

        r4 := @parameter3: java.util.concurrent.Executor;

        r5 := @parameter4: androidx.appsearch.observer.ObserverCallback;

        $r6 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>;

        virtualinvoke $r6.<androidx.appsearch.localstorage.ObserverManager: void registerObserverCallback(androidx.appsearch.localstorage.visibilitystore.CallerAccess,java.lang.String,androidx.appsearch.observer.ObserverSpec,java.util.concurrent.Executor,androidx.appsearch.observer.ObserverCallback)>(r1, r2, r3, r4, r5);

        return;
    }

    public void unregisterObserverCallback(java.lang.String, androidx.appsearch.observer.ObserverCallback)
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.lang.String r1;
        androidx.appsearch.observer.ObserverCallback r2;
        androidx.appsearch.localstorage.ObserverManager $r3;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appsearch.observer.ObserverCallback;

        $r3 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>;

        virtualinvoke $r3.<androidx.appsearch.localstorage.ObserverManager: void unregisterObserverCallback(java.lang.String,androidx.appsearch.observer.ObserverCallback)>(r1, r2);

        return;
    }

    public void dispatchAndClearChangeNotifications()
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        androidx.appsearch.localstorage.ObserverManager $r1;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        $r1 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.ObserverManager mObserverManager>;

        virtualinvoke $r1.<androidx.appsearch.localstorage.ObserverManager: void dispatchAndClearPendingNotifications()>();

        return;
    }

    private static void addToMap(java.util.Map, java.lang.String, java.lang.String)
    {
        java.util.Map r0;
        java.lang.String r1, r2;
        java.lang.Object $r3, r6;
        androidx.collection.ArraySet r7;
        java.util.Set r8;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (java.util.Set) $r3;

        if r6 != null goto label1;

        r7 = new androidx.collection.ArraySet;

        specialinvoke r7.<androidx.collection.ArraySet: void <init>()>();

        r6 = r7;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r6);

     label1:
        r8 = (java.util.Set) r6;

        interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>(r2);

        return;
    }

    private static void addToMap(java.util.Map, java.lang.String, com.google.android.icing.proto.SchemaTypeConfigProto)
    {
        java.util.Map r0, r10;
        java.lang.String r1, $r4;
        com.google.android.icing.proto.SchemaTypeConfigProto r2;
        java.lang.Object $r3, r8;
        androidx.collection.ArrayMap r9;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.google.android.icing.proto.SchemaTypeConfigProto;

        $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (java.util.Map) $r3;

        if r8 != null goto label1;

        r9 = new androidx.collection.ArrayMap;

        specialinvoke r9.<androidx.collection.ArrayMap: void <init>()>();

        r8 = r9;

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r8);

     label1:
        $r4 = virtualinvoke r2.<com.google.android.icing.proto.SchemaTypeConfigProto: java.lang.String getSchemaType()>();

        r10 = (java.util.Map) r8;

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r2);

        return;
    }

    private static void removeFromMap(java.util.Map, java.lang.String, java.lang.String)
    {
        java.util.Map r0, r3;
        java.lang.String r1, r2;
        java.lang.Object $r4;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.Map) $r4;

        if r3 == null goto label1;

        interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

     label1:
        return;
    }

    private static void checkSuccess(com.google.android.icing.proto.StatusProto) throws androidx.appsearch.exceptions.AppSearchException
    {
        com.google.android.icing.proto.StatusProto r0;
        com.google.android.icing.proto.StatusProto$Code[] $r1;
        com.google.android.icing.proto.StatusProto$Code $r2;

        r0 := @parameter0: com.google.android.icing.proto.StatusProto;

        $r1 = newarray (com.google.android.icing.proto.StatusProto$Code)[1];

        $r2 = <com.google.android.icing.proto.StatusProto$Code: com.google.android.icing.proto.StatusProto$Code OK>;

        $r1[0] = $r2;

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkCodeOneOf(com.google.android.icing.proto.StatusProto,com.google.android.icing.proto.StatusProto$Code[])>(r0, $r1);

        return;
    }

    private static transient void checkCodeOneOf(com.google.android.icing.proto.StatusProto, com.google.android.icing.proto.StatusProto$Code[]) throws androidx.appsearch.exceptions.AppSearchException
    {
        com.google.android.icing.proto.StatusProto r0;
        com.google.android.icing.proto.StatusProto$Code[] r1;
        int $i0, $i1, i3;
        com.google.android.icing.proto.StatusProto$Code $r2, $r3, $r5, $r12, $r13;
        androidx.appsearch.exceptions.AppSearchException $r4;
        java.lang.String $r6, $r9, $r11;
        java.lang.StringBuilder $r7, $r8, $r10;

        r0 := @parameter0: com.google.android.icing.proto.StatusProto;

        r1 := @parameter1: com.google.android.icing.proto.StatusProto$Code[];

        i3 = 0;

     label1:
        $i0 = lengthof r1;

        if i3 >= $i0 goto label3;

        $r12 = r1[i3];

        $r13 = virtualinvoke r0.<com.google.android.icing.proto.StatusProto: com.google.android.icing.proto.StatusProto$Code getCode()>();

        if $r12 != $r13 goto label2;

        return;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke r0.<com.google.android.icing.proto.StatusProto: com.google.android.icing.proto.StatusProto$Code getCode()>();

        $r3 = <com.google.android.icing.proto.StatusProto$Code: com.google.android.icing.proto.StatusProto$Code WARNING_DATA_LOSS>;

        if $r2 != $r3 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encountered WARNING_DATA_LOSS: ");

        $r9 = virtualinvoke r0.<com.google.android.icing.proto.StatusProto: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AppSearchImpl", $r11);

        return;

     label4:
        $r4 = new androidx.appsearch.exceptions.AppSearchException;

        $r5 = virtualinvoke r0.<com.google.android.icing.proto.StatusProto: com.google.android.icing.proto.StatusProto$Code getCode()>();

        $i1 = staticinvoke <androidx.appsearch.localstorage.converter.ResultCodeToProtoConverter: int toResultCode(com.google.android.icing.proto.StatusProto$Code)>($r5);

        $r6 = virtualinvoke r0.<com.google.android.icing.proto.StatusProto: java.lang.String getMessage()>();

        specialinvoke $r4.<androidx.appsearch.exceptions.AppSearchException: void <init>(int,java.lang.String)>($i1, $r6);

        throw $r4;
    }

    public void checkForOptimize(int, androidx.appsearch.localstorage.stats.OptimizeStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        int i0, $i1, $i2, $i3;
        androidx.appsearch.localstorage.stats.OptimizeStats$Builder r1;
        java.lang.Throwable r2, $r7;
        java.util.concurrent.locks.ReadWriteLock $r3, $r5, $r8;
        java.util.concurrent.locks.Lock $r4, $r6, $r9;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.appsearch.localstorage.stats.OptimizeStats$Builder;

        $r3 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $i1 = r0.<androidx.appsearch.localstorage.AppSearchImpl: int mOptimizeIntervalCountLocked>;

        $i2 = $i1 + i0;

        r0.<androidx.appsearch.localstorage.AppSearchImpl: int mOptimizeIntervalCountLocked> = $i2;

        $i3 = r0.<androidx.appsearch.localstorage.AppSearchImpl: int mOptimizeIntervalCountLocked>;

        if $i3 < 100 goto label2;

        virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void checkForOptimize(androidx.appsearch.localstorage.stats.OptimizeStats$Builder)>(r1);

     label2:
        $r5 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r6 = interfaceinvoke $r5.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label4;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r9 = interfaceinvoke $r8.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void checkForOptimize(androidx.appsearch.localstorage.stats.OptimizeStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        androidx.appsearch.localstorage.stats.OptimizeStats$Builder r1;
        com.google.android.icing.proto.GetOptimizeInfoResultProto r2;
        java.lang.Throwable r3, $r10;
        java.util.concurrent.locks.ReadWriteLock $r4, $r8, $r11;
        java.util.concurrent.locks.Lock $r5, $r9, $r12;
        com.google.android.icing.proto.StatusProto $r6;
        androidx.appsearch.localstorage.OptimizeStrategy $r7;
        boolean $z0;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: androidx.appsearch.localstorage.stats.OptimizeStats$Builder;

        $r4 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        r2 = virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.GetOptimizeInfoResultProto getOptimizeInfoResultLocked()>();

        $r6 = virtualinvoke r2.<com.google.android.icing.proto.GetOptimizeInfoResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r6);

        r0.<androidx.appsearch.localstorage.AppSearchImpl: int mOptimizeIntervalCountLocked> = 0;

        $r7 = r0.<androidx.appsearch.localstorage.AppSearchImpl: androidx.appsearch.localstorage.OptimizeStrategy mOptimizeStrategy>;

        $z0 = interfaceinvoke $r7.<androidx.appsearch.localstorage.OptimizeStrategy: boolean shouldOptimize(com.google.android.icing.proto.GetOptimizeInfoResultProto)>(r2);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<androidx.appsearch.localstorage.AppSearchImpl: void optimize(androidx.appsearch.localstorage.stats.OptimizeStats$Builder)>(r1);

     label2:
        $r8 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r9 = interfaceinvoke $r8.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label4;

     label3:
        $r10 := @caughtexception;

        r3 = $r10;

        $r11 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r12 = interfaceinvoke $r11.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r3;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void optimize(androidx.appsearch.localstorage.stats.OptimizeStats$Builder) throws androidx.appsearch.exceptions.AppSearchException
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        androidx.appsearch.localstorage.stats.OptimizeStats$Builder r1;
        com.google.android.icing.proto.OptimizeResultProto r2;
        java.lang.Throwable r3, $r14;
        java.util.concurrent.locks.ReadWriteLock $r4, $r9, $r15;
        java.util.concurrent.locks.Lock $r5, $r10, $r16;
        com.google.android.icing.IcingSearchEngine $r6;
        com.google.android.icing.proto.StatusProto $r7, $r8, $r11;
        int $i0;
        com.google.android.icing.proto.OptimizeStatsProto $r13;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        r1 := @parameter0: androidx.appsearch.localstorage.stats.OptimizeStats$Builder;

        $r4 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String)>("AppSearchImpl", "optimize, request");

        $r6 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r2 = virtualinvoke $r6.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.OptimizeResultProto optimize()>();

        $r7 = virtualinvoke r2.<com.google.android.icing.proto.OptimizeResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "optimize, response", $r7, r2);

        if r1 == null goto label2;

        $r11 = virtualinvoke r2.<com.google.android.icing.proto.OptimizeResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        $i0 = staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: int statusProtoToResultCode(com.google.android.icing.proto.StatusProto)>($r11);

        virtualinvoke r1.<androidx.appsearch.localstorage.stats.OptimizeStats$Builder: androidx.appsearch.localstorage.stats.OptimizeStats$Builder setStatusCode(int)>($i0);

        $r13 = virtualinvoke r2.<com.google.android.icing.proto.OptimizeResultProto: com.google.android.icing.proto.OptimizeStatsProto getOptimizeStats()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchLoggerHelper: void copyNativeStats(com.google.android.icing.proto.OptimizeStatsProto,androidx.appsearch.localstorage.stats.OptimizeStats$Builder)>($r13, r1);

     label2:
        $r8 = virtualinvoke r2.<com.google.android.icing.proto.OptimizeResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.localstorage.AppSearchImpl: void checkSuccess(com.google.android.icing.proto.StatusProto)>($r8);

     label3:
        $r9 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r10 = interfaceinvoke $r9.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label5;

     label4:
        $r14 := @caughtexception;

        r3 = $r14;

        $r15 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r16 = interfaceinvoke $r15.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>();

        interfaceinvoke $r16.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static void syncLoggingLevelToIcing()
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2;
        com.google.android.icing.proto.LogSeverity$Code $r1, $r2, $r3, $r4;

        r0 = staticinvoke <com.google.android.icing.IcingSearchEngine: java.lang.String getLoggingTag()>();

        if r0 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AppSearchImpl", "Received null logging tag from Icing");

        return;

     label1:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>(r0, 4);

        if $z0 == 0 goto label2;

        $r4 = <com.google.android.icing.proto.LogSeverity$Code: com.google.android.icing.proto.LogSeverity$Code INFO>;

        staticinvoke <com.google.android.icing.IcingSearchEngine: boolean setLoggingLevel(com.google.android.icing.proto.LogSeverity$Code)>($r4);

        goto label5;

     label2:
        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>(r0, 5);

        if $z1 == 0 goto label3;

        $r3 = <com.google.android.icing.proto.LogSeverity$Code: com.google.android.icing.proto.LogSeverity$Code WARNING>;

        staticinvoke <com.google.android.icing.IcingSearchEngine: boolean setLoggingLevel(com.google.android.icing.proto.LogSeverity$Code)>($r3);

        goto label5;

     label3:
        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>(r0, 6);

        if $z2 == 0 goto label4;

        $r2 = <com.google.android.icing.proto.LogSeverity$Code: com.google.android.icing.proto.LogSeverity$Code ERROR>;

        staticinvoke <com.google.android.icing.IcingSearchEngine: boolean setLoggingLevel(com.google.android.icing.proto.LogSeverity$Code)>($r2);

        goto label5;

     label4:
        $r1 = <com.google.android.icing.proto.LogSeverity$Code: com.google.android.icing.proto.LogSeverity$Code FATAL>;

        staticinvoke <com.google.android.icing.IcingSearchEngine: boolean setLoggingLevel(com.google.android.icing.proto.LogSeverity$Code)>($r1);

     label5:
        return;
    }

    com.google.android.icing.proto.GetOptimizeInfoResultProto getOptimizeInfoResultLocked()
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        com.google.android.icing.proto.GetOptimizeInfoResultProto r1;
        com.google.android.icing.IcingSearchEngine $r2;
        com.google.android.icing.proto.StatusProto $r3;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String)>("AppSearchImpl", "getOptimizeInfo, request");

        $r2 = r0.<androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.IcingSearchEngine mIcingSearchEngineLocked>;

        r1 = virtualinvoke $r2.<com.google.android.icing.IcingSearchEngine: com.google.android.icing.proto.GetOptimizeInfoResultProto getOptimizeInfo()>();

        $r3 = virtualinvoke r1.<com.google.android.icing.proto.GetOptimizeInfoResultProto: com.google.android.icing.proto.StatusProto getStatus()>();

        staticinvoke <androidx.appsearch.util.LogUtil: void piiTrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>("AppSearchImpl", "getOptimizeInfo, response", $r3, r1);

        return r1;
    }

    public java.util.List getAllPrefixedSchemaTypes()
    {
        androidx.appsearch.localstorage.AppSearchImpl r0;
        java.util.ArrayList r1, $r6, r17;
        java.util.Map r2, $r7;
        java.lang.Throwable r3, $r13;
        java.util.concurrent.locks.ReadWriteLock $r4, $r9, $r14;
        java.util.concurrent.locks.Lock $r5, $r10, $r15;
        java.util.Collection $r8;
        boolean $z0;
        java.lang.Object $r11;
        java.util.Set $r12;
        java.util.Iterator r16;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl;

        $r4 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r1 = $r6;

        $r7 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.Map mSchemaMapLocked>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>();

        r16 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map) $r11;

        $r12 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r12);

        goto label2;

     label3:
        r17 = r1;

     label4:
        $r9 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r10 = interfaceinvoke $r9.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        return r17;

     label5:
        $r13 := @caughtexception;

        r3 = $r13;

     label6:
        $r14 = r0.<androidx.appsearch.localstorage.AppSearchImpl: java.util.concurrent.locks.ReadWriteLock mReadWriteLock>;

        $r15 = interfaceinvoke $r14.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>();

        interfaceinvoke $r15.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static int statusProtoToResultCode(com.google.android.icing.proto.StatusProto)
    {
        com.google.android.icing.proto.StatusProto r0;
        com.google.android.icing.proto.StatusProto$Code $r1;
        int $i0;

        r0 := @parameter0: com.google.android.icing.proto.StatusProto;

        $r1 = virtualinvoke r0.<com.google.android.icing.proto.StatusProto: com.google.android.icing.proto.StatusProto$Code getCode()>();

        $i0 = staticinvoke <androidx.appsearch.localstorage.converter.ResultCodeToProtoConverter: int toResultCode(com.google.android.icing.proto.StatusProto$Code)>($r1);

        return $i0;
    }

    static void <clinit>()
    {
        com.google.android.icing.proto.GetResultSpecProto$Builder $r0, $r3;
        com.google.android.icing.proto.TypePropertyMask$Builder $r1, $r2;
        com.google.android.icing.protobuf.GeneratedMessageLite $r4;
        com.google.android.icing.proto.GetResultSpecProto $r5;

        $r0 = staticinvoke <com.google.android.icing.proto.GetResultSpecProto: com.google.android.icing.proto.GetResultSpecProto$Builder newBuilder()>();

        $r1 = staticinvoke <com.google.android.icing.proto.TypePropertyMask: com.google.android.icing.proto.TypePropertyMask$Builder newBuilder()>();

        $r2 = virtualinvoke $r1.<com.google.android.icing.proto.TypePropertyMask$Builder: com.google.android.icing.proto.TypePropertyMask$Builder setSchemaType(java.lang.String)>("*");

        $r3 = virtualinvoke $r0.<com.google.android.icing.proto.GetResultSpecProto$Builder: com.google.android.icing.proto.GetResultSpecProto$Builder addTypePropertyMasks(com.google.android.icing.proto.TypePropertyMask$Builder)>($r2);

        $r4 = virtualinvoke $r3.<com.google.android.icing.proto.GetResultSpecProto$Builder: com.google.android.icing.protobuf.GeneratedMessageLite build()>();

        $r5 = (com.google.android.icing.proto.GetResultSpecProto) $r4;

        <androidx.appsearch.localstorage.AppSearchImpl: com.google.android.icing.proto.GetResultSpecProto GET_RESULT_SPEC_NO_PROPERTIES> = $r5;

        return;
    }

androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults
<androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults: java.util.Set mDeletedPrefixedTypes>
<androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults: java.util.Map mRewrittenPrefixedTypes>
    void <init>()
    {
        androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults r0;
        androidx.collection.ArraySet $r1;
        androidx.collection.ArrayMap $r2;

        r0 := @this: androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.collection.ArraySet;

        specialinvoke $r1.<androidx.collection.ArraySet: void <init>()>();

        r0.<androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults: java.util.Set mDeletedPrefixedTypes> = $r1;

        $r2 = new androidx.collection.ArrayMap;

        specialinvoke $r2.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.appsearch.localstorage.AppSearchImpl$RewrittenSchemaResults: java.util.Map mRewrittenPrefixedTypes> = $r2;

        return;
    }

