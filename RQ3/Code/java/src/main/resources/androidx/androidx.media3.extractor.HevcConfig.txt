androidx.media3.extractor.HevcConfig
<androidx.media3.extractor.HevcConfig: int SPS_NAL_UNIT_TYPE>
<androidx.media3.extractor.HevcConfig: java.util.List initializationData>
<androidx.media3.extractor.HevcConfig: int nalUnitLengthFieldLength>
<androidx.media3.extractor.HevcConfig: int width>
<androidx.media3.extractor.HevcConfig: int height>
<androidx.media3.extractor.HevcConfig: float pixelWidthHeightRatio>
<androidx.media3.extractor.HevcConfig: java.lang.String codecs>
    public static androidx.media3.extractor.HevcConfig parse(androidx.media3.common.util.ParsableByteArray) throws androidx.media3.common.ParserException
    {
        androidx.media3.common.util.ParsableByteArray r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28;
        androidx.media3.extractor.NalUnitUtil$H265SpsData r1;
        byte[] $r3, $r4, $r5, $r6, r10;
        int[] $r7;
        boolean $z0;
        java.lang.Throwable $r8, r14, r16;
        androidx.media3.common.ParserException $r9;
        float f0;
        java.lang.String r11;
        java.util.List $r12, r13;
        androidx.media3.extractor.HevcConfig r15;

        r0 := @parameter0: androidx.media3.common.util.ParsableByteArray;

     label01:
        virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(21);

        $i5 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readUnsignedByte()>();

        i17 = $i5 & 3;

        i0 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readUnsignedByte()>();

        i18 = 0;

        i1 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int getPosition()>();

        i19 = 0;

     label02:
        if i19 >= i0 goto label05;

        virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(1);

        i20 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readUnsignedShort()>();

        i21 = 0;

     label03:
        if i21 >= i20 goto label04;

        i22 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readUnsignedShort()>();

        $i16 = 4 + i22;

        i18 = i18 + $i16;

        virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(i22);

        i21 = i21 + 1;

        goto label03;

     label04:
        i19 = i19 + 1;

        goto label02;

     label05:
        virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(i1);

        r10 = newarray (byte)[i18];

        i23 = 0;

        i24 = -1;

        i25 = -1;

        f0 = 1.0F;

        r11 = null;

        i26 = 0;

     label06:
        if i26 >= i0 goto label10;

        $i7 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readUnsignedByte()>();

        i2 = $i7 & 63;

        i3 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readUnsignedShort()>();

        i27 = 0;

     label07:
        if i27 >= i3 goto label09;

        i4 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readUnsignedShort()>();

        $r4 = <androidx.media3.extractor.NalUnitUtil: byte[] NAL_START_CODE>;

        $r3 = <androidx.media3.extractor.NalUnitUtil: byte[] NAL_START_CODE>;

        $i8 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r10, i23, $i8);

        $r5 = <androidx.media3.extractor.NalUnitUtil: byte[] NAL_START_CODE>;

        $i9 = lengthof $r5;

        i28 = i23 + $i9;

        $r6 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $i10 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int getPosition()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i10, r10, i28, i4);

        if i2 != 33 goto label08;

        if i27 != 0 goto label08;

        $i11 = i28 + i4;

        r1 = staticinvoke <androidx.media3.extractor.NalUnitUtil: androidx.media3.extractor.NalUnitUtil$H265SpsData parseH265SpsNalUnit(byte[],int,int)>(r10, i28, $i11);

        i24 = r1.<androidx.media3.extractor.NalUnitUtil$H265SpsData: int width>;

        i25 = r1.<androidx.media3.extractor.NalUnitUtil$H265SpsData: int height>;

        f0 = r1.<androidx.media3.extractor.NalUnitUtil$H265SpsData: float pixelWidthHeightRatio>;

        $i15 = r1.<androidx.media3.extractor.NalUnitUtil$H265SpsData: int generalProfileSpace>;

        $z0 = r1.<androidx.media3.extractor.NalUnitUtil$H265SpsData: boolean generalTierFlag>;

        $i14 = r1.<androidx.media3.extractor.NalUnitUtil$H265SpsData: int generalProfileIdc>;

        $i13 = r1.<androidx.media3.extractor.NalUnitUtil$H265SpsData: int generalProfileCompatibilityFlags>;

        $r7 = r1.<androidx.media3.extractor.NalUnitUtil$H265SpsData: int[] constraintBytes>;

        $i12 = r1.<androidx.media3.extractor.NalUnitUtil$H265SpsData: int generalLevelIdc>;

        r11 = staticinvoke <androidx.media3.common.util.CodecSpecificDataUtil: java.lang.String buildHevcCodecString(int,boolean,int,int,int[],int)>($i15, $z0, $i14, $i13, $r7, $i12);

     label08:
        i23 = i28 + i4;

        virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(i4);

        i27 = i27 + 1;

        goto label07;

     label09:
        i26 = i26 + 1;

        goto label06;

     label10:
        if i18 != 0 goto label11;

        $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label12;

     label11:
        $r12 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r10);

     label12:
        r13 = $r12;

        r15 = new androidx.media3.extractor.HevcConfig;

        $i6 = i17 + 1;

        specialinvoke r15.<androidx.media3.extractor.HevcConfig: void <init>(java.util.List,int,int,int,float,java.lang.String)>(r13, $i6, i24, i25, f0, r11);

     label13:
        return r15;

     label14:
        $r8 := @caughtexception;

        r14 = $r8;

        $r9 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable)>("Error parsing HEVC config", r14);

        r16 = (java.lang.Throwable) $r9;

        throw r16;

        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label13 with label14;
    }

    private void <init>(java.util.List, int, int, int, float, java.lang.String)
    {
        androidx.media3.extractor.HevcConfig r0;
        java.util.List r1;
        int i0, i1, i2;
        float f0;
        java.lang.String r2;

        r0 := @this: androidx.media3.extractor.HevcConfig;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        f0 := @parameter4: float;

        r2 := @parameter5: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.HevcConfig: java.util.List initializationData> = r1;

        r0.<androidx.media3.extractor.HevcConfig: int nalUnitLengthFieldLength> = i0;

        r0.<androidx.media3.extractor.HevcConfig: int width> = i1;

        r0.<androidx.media3.extractor.HevcConfig: int height> = i2;

        r0.<androidx.media3.extractor.HevcConfig: float pixelWidthHeightRatio> = f0;

        r0.<androidx.media3.extractor.HevcConfig: java.lang.String codecs> = r2;

        return;
    }

