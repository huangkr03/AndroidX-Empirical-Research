androidx.work.multiprocess.RemoteCallback
<androidx.work.multiprocess.RemoteCallback: androidx.work.impl.utils.futures.SettableFuture mFuture>
<androidx.work.multiprocess.RemoteCallback: android.os.IBinder mBinder>
<androidx.work.multiprocess.RemoteCallback: android.os.IBinder$DeathRecipient mRecipient>
    public com.google.common.util.concurrent.ListenableFuture getFuture()
    {
        androidx.work.multiprocess.RemoteCallback r0;
        androidx.work.impl.utils.futures.SettableFuture $r1;

        r0 := @this: androidx.work.multiprocess.RemoteCallback;

        $r1 = r0.<androidx.work.multiprocess.RemoteCallback: androidx.work.impl.utils.futures.SettableFuture mFuture>;

        return $r1;
    }

    public void <init>()
    {
        androidx.work.multiprocess.RemoteCallback r0;
        androidx.work.impl.utils.futures.SettableFuture $r1;
        androidx.work.multiprocess.RemoteCallback$DeathRecipient $r2;

        r0 := @this: androidx.work.multiprocess.RemoteCallback;

        specialinvoke r0.<androidx.work.multiprocess.IWorkManagerImplCallback$Stub: void <init>()>();

        r0.<androidx.work.multiprocess.RemoteCallback: android.os.IBinder mBinder> = null;

        $r1 = staticinvoke <androidx.work.impl.utils.futures.SettableFuture: androidx.work.impl.utils.futures.SettableFuture create()>();

        r0.<androidx.work.multiprocess.RemoteCallback: androidx.work.impl.utils.futures.SettableFuture mFuture> = $r1;

        $r2 = new androidx.work.multiprocess.RemoteCallback$DeathRecipient;

        specialinvoke $r2.<androidx.work.multiprocess.RemoteCallback$DeathRecipient: void <init>(androidx.work.multiprocess.RemoteCallback)>(r0);

        r0.<androidx.work.multiprocess.RemoteCallback: android.os.IBinder$DeathRecipient mRecipient> = $r2;

        return;
    }

    public void setBinder(android.os.IBinder)
    {
        androidx.work.multiprocess.RemoteCallback r0;
        android.os.IBinder r1, $r4;
        java.lang.Throwable r2, $r5;
        android.os.IBinder$DeathRecipient $r3;

        r0 := @this: androidx.work.multiprocess.RemoteCallback;

        r1 := @parameter0: android.os.IBinder;

        r0.<androidx.work.multiprocess.RemoteCallback: android.os.IBinder mBinder> = r1;

     label1:
        $r4 = r0.<androidx.work.multiprocess.RemoteCallback: android.os.IBinder mBinder>;

        $r3 = r0.<androidx.work.multiprocess.RemoteCallback: android.os.IBinder$DeathRecipient mRecipient>;

        interfaceinvoke $r4.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        specialinvoke r0.<androidx.work.multiprocess.RemoteCallback: void onFailure(java.lang.Throwable)>(r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onSuccess(byte[]) throws android.os.RemoteException
    {
        androidx.work.multiprocess.RemoteCallback r0;
        byte[] r1;
        androidx.work.impl.utils.futures.SettableFuture $r2;

        r0 := @this: androidx.work.multiprocess.RemoteCallback;

        r1 := @parameter0: byte[];

        $r2 = r0.<androidx.work.multiprocess.RemoteCallback: androidx.work.impl.utils.futures.SettableFuture mFuture>;

        virtualinvoke $r2.<androidx.work.impl.utils.futures.SettableFuture: boolean set(java.lang.Object)>(r1);

        specialinvoke r0.<androidx.work.multiprocess.RemoteCallback: void unlinkToDeath()>();

        virtualinvoke r0.<androidx.work.multiprocess.RemoteCallback: void onRequestCompleted()>();

        return;
    }

    public void onFailure(java.lang.String)
    {
        androidx.work.multiprocess.RemoteCallback r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: androidx.work.multiprocess.RemoteCallback;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<androidx.work.multiprocess.RemoteCallback: void onFailure(java.lang.Throwable)>($r2);

        return;
    }

    protected void onRequestCompleted()
    {
        androidx.work.multiprocess.RemoteCallback r0;

        r0 := @this: androidx.work.multiprocess.RemoteCallback;

        return;
    }

    private void onFailure(java.lang.Throwable)
    {
        androidx.work.multiprocess.RemoteCallback r0;
        java.lang.Throwable r1;
        androidx.work.impl.utils.futures.SettableFuture $r2;

        r0 := @this: androidx.work.multiprocess.RemoteCallback;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.work.multiprocess.RemoteCallback: androidx.work.impl.utils.futures.SettableFuture mFuture>;

        virtualinvoke $r2.<androidx.work.impl.utils.futures.SettableFuture: boolean setException(java.lang.Throwable)>(r1);

        specialinvoke r0.<androidx.work.multiprocess.RemoteCallback: void unlinkToDeath()>();

        virtualinvoke r0.<androidx.work.multiprocess.RemoteCallback: void onRequestCompleted()>();

        return;
    }

    private void unlinkToDeath()
    {
        androidx.work.multiprocess.RemoteCallback r0;
        java.lang.Throwable r1, $r5;
        android.os.IBinder $r2, $r4;
        android.os.IBinder$DeathRecipient $r3;

        r0 := @this: androidx.work.multiprocess.RemoteCallback;

        $r2 = r0.<androidx.work.multiprocess.RemoteCallback: android.os.IBinder mBinder>;

        if $r2 == null goto label4;

     label1:
        $r4 = r0.<androidx.work.multiprocess.RemoteCallback: android.os.IBinder mBinder>;

        $r3 = r0.<androidx.work.multiprocess.RemoteCallback: android.os.IBinder$DeathRecipient mRecipient>;

        interfaceinvoke $r4.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

     label4:
        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

androidx.work.multiprocess.RemoteCallback$DeathRecipient
<androidx.work.multiprocess.RemoteCallback$DeathRecipient: androidx.work.multiprocess.RemoteCallback mCallback>
    public void <init>(androidx.work.multiprocess.RemoteCallback)
    {
        androidx.work.multiprocess.RemoteCallback$DeathRecipient r0;
        androidx.work.multiprocess.RemoteCallback r1;

        r0 := @this: androidx.work.multiprocess.RemoteCallback$DeathRecipient;

        r1 := @parameter0: androidx.work.multiprocess.RemoteCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.multiprocess.RemoteCallback$DeathRecipient: androidx.work.multiprocess.RemoteCallback mCallback> = r1;

        return;
    }

    public void binderDied()
    {
        androidx.work.multiprocess.RemoteCallback$DeathRecipient r0;
        androidx.work.multiprocess.RemoteCallback $r1;

        r0 := @this: androidx.work.multiprocess.RemoteCallback$DeathRecipient;

        $r1 = r0.<androidx.work.multiprocess.RemoteCallback$DeathRecipient: androidx.work.multiprocess.RemoteCallback mCallback>;

        virtualinvoke $r1.<androidx.work.multiprocess.RemoteCallback: void onFailure(java.lang.String)>("Binder died");

        return;
    }

