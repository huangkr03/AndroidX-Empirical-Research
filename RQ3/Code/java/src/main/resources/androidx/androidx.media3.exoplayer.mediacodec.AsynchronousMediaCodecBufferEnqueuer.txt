androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: int MSG_QUEUE_INPUT_BUFFER>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: int MSG_QUEUE_SECURE_INPUT_BUFFER>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: int MSG_OPEN_CV>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.ArrayDeque MESSAGE_PARAMS_INSTANCE_POOL>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.lang.Object QUEUE_SECURE_LOCK>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.media.MediaCodec codec>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.os.HandlerThread handlerThread>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.os.Handler handler>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.concurrent.atomic.AtomicReference pendingRuntimeException>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: androidx.media3.common.util.ConditionVariable conditionVariable>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: boolean started>
    public void <init>(android.media.MediaCodec, android.os.HandlerThread)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        android.media.MediaCodec r1;
        android.os.HandlerThread r2;
        androidx.media3.common.util.ConditionVariable $r3;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        r1 := @parameter0: android.media.MediaCodec;

        r2 := @parameter1: android.os.HandlerThread;

        $r3 = new androidx.media3.common.util.ConditionVariable;

        specialinvoke $r3.<androidx.media3.common.util.ConditionVariable: void <init>()>();

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void <init>(android.media.MediaCodec,android.os.HandlerThread,androidx.media3.common.util.ConditionVariable)>(r1, r2, $r3);

        return;
    }

    void <init>(android.media.MediaCodec, android.os.HandlerThread, androidx.media3.common.util.ConditionVariable)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        android.media.MediaCodec r1;
        android.os.HandlerThread r2;
        androidx.media3.common.util.ConditionVariable r3;
        java.util.concurrent.atomic.AtomicReference $r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        r1 := @parameter0: android.media.MediaCodec;

        r2 := @parameter1: android.os.HandlerThread;

        r3 := @parameter2: androidx.media3.common.util.ConditionVariable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.media.MediaCodec codec> = r1;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.os.HandlerThread handlerThread> = r2;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: androidx.media3.common.util.ConditionVariable conditionVariable> = r3;

        $r4 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.concurrent.atomic.AtomicReference pendingRuntimeException> = $r4;

        return;
    }

    public void start()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        boolean $z0;
        android.os.HandlerThread $r1, $r3;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$1 $r2;
        android.os.Looper $r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        $z0 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: boolean started>;

        if $z0 != 0 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.os.HandlerThread handlerThread>;

        virtualinvoke $r1.<android.os.HandlerThread: void start()>();

        $r2 = new androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$1;

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.os.HandlerThread handlerThread>;

        $r4 = virtualinvoke $r3.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r2.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$1: void <init>(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer,android.os.Looper)>(r0, $r4);

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.os.Handler handler> = $r2;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: boolean started> = 1;

     label1:
        return;
    }

    public void queueInputBuffer(int, int, int, long, int)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        int i0, i1, i2, i4;
        long l3;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams r1;
        android.os.Message r2;
        android.os.Handler $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        i4 := @parameter4: int;

        virtualinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void maybeThrowException()>();

        r1 = staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams getMessageParams()>();

        virtualinvoke r1.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: void setQueueParams(int,int,int,long,int)>(i0, i1, i2, l3, i4);

        $r3 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.os.Handler handler>;

        $r4 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r3);

        $r5 = (android.os.Handler) $r4;

        r2 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(0, r1);

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void queueSecureInputBuffer(int, int, androidx.media3.decoder.CryptoInfo, long, int)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        int i0, i1, i3;
        androidx.media3.decoder.CryptoInfo r1;
        long l2;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams r2;
        android.os.Message r3;
        android.media.MediaCodec$CryptoInfo $r4;
        android.os.Handler $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.media3.decoder.CryptoInfo;

        l2 := @parameter3: long;

        i3 := @parameter4: int;

        virtualinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void maybeThrowException()>();

        r2 = staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams getMessageParams()>();

        virtualinvoke r2.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: void setQueueParams(int,int,int,long,int)>(i0, i1, 0, l2, i3);

        $r4 = r2.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: android.media.MediaCodec$CryptoInfo cryptoInfo>;

        staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void copy(androidx.media3.decoder.CryptoInfo,android.media.MediaCodec$CryptoInfo)>(r1, $r4);

        $r5 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.os.Handler handler>;

        $r6 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r5);

        $r7 = (android.os.Handler) $r6;

        r3 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r2);

        virtualinvoke r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void flush()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        java.lang.Throwable r1, $r2;
        boolean $z0;
        java.lang.Thread $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        $z0 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: boolean started>;

        if $z0 == 0 goto label4;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void flushHandlerThread()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r3.<java.lang.Thread: void interrupt()>();

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r1);

        throw $r4;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void shutdown()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        boolean $z0;
        android.os.HandlerThread $r1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        $z0 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: boolean started>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void flush()>();

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.os.HandlerThread handlerThread>;

        virtualinvoke $r1.<android.os.HandlerThread: boolean quit()>();

     label1:
        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: boolean started> = 0;

        return;
    }

    public void waitUntilQueueingComplete() throws java.lang.InterruptedException
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void blockUntilHandlerThreadIsIdle()>();

        return;
    }

    public void maybeThrowException()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        java.lang.RuntimeException r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.Throwable r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.concurrent.atomic.AtomicReference pendingRuntimeException>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>(null);

        r1 = (java.lang.RuntimeException) $r3;

        if r1 == null goto label1;

        r4 = (java.lang.Throwable) r1;

        throw r4;

     label1:
        return;
    }

    private void flushHandlerThread() throws java.lang.InterruptedException
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        android.os.Handler $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.os.Handler handler>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = (android.os.Handler) $r2;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void blockUntilHandlerThreadIsIdle()>();

        return;
    }

    private void blockUntilHandlerThreadIsIdle() throws java.lang.InterruptedException
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        androidx.media3.common.util.ConditionVariable $r1, $r6;
        android.os.Handler $r2, $r4;
        java.lang.Object $r3;
        android.os.Message $r5;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        $r1 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: androidx.media3.common.util.ConditionVariable conditionVariable>;

        virtualinvoke $r1.<androidx.media3.common.util.ConditionVariable: boolean close()>();

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.os.Handler handler>;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r4 = (android.os.Handler) $r3;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        $r6 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: androidx.media3.common.util.ConditionVariable conditionVariable>;

        virtualinvoke $r6.<androidx.media3.common.util.ConditionVariable: void block()>();

        return;
    }

    void setPendingRuntimeException(java.lang.RuntimeException)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        java.lang.RuntimeException r1;
        java.util.concurrent.atomic.AtomicReference $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        r1 := @parameter0: java.lang.RuntimeException;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.concurrent.atomic.AtomicReference pendingRuntimeException>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r1);

        return;
    }

    private void doHandleMessage(android.os.Message)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        android.os.Message r1;
        int $i0, $i1, $i3, $i4, $i5, $i7, $i8, $i9, $i10;
        androidx.media3.common.util.ConditionVariable $r2;
        java.lang.Object $r3, $r5;
        long $l2, $l6;
        android.media.MediaCodec$CryptoInfo $r4;
        java.lang.IllegalStateException $r6;
        java.util.concurrent.atomic.AtomicReference $r7;
        java.lang.String $r8;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams r9;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        r1 := @parameter0: android.os.Message;

        r9 = null;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r5 = r1.<android.os.Message: java.lang.Object obj>;

        r9 = (androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams) $r5;

        $i9 = r9.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int index>;

        $i8 = r9.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int offset>;

        $i7 = r9.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int size>;

        $l6 = r9.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: long presentationTimeUs>;

        $i5 = r9.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int flags>;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void doQueueInputBuffer(int,int,int,long,int)>($i9, $i8, $i7, $l6, $i5);

        goto label5;

     label2:
        $r3 = r1.<android.os.Message: java.lang.Object obj>;

        r9 = (androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams) $r3;

        $i4 = r9.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int index>;

        $i3 = r9.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int offset>;

        $r4 = r9.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: android.media.MediaCodec$CryptoInfo cryptoInfo>;

        $l2 = r9.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: long presentationTimeUs>;

        $i1 = r9.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int flags>;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void doQueueSecureInputBuffer(int,int,android.media.MediaCodec$CryptoInfo,long,int)>($i4, $i3, $r4, $l2, $i1);

        goto label5;

     label3:
        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: androidx.media3.common.util.ConditionVariable conditionVariable>;

        virtualinvoke $r2.<androidx.media3.common.util.ConditionVariable: boolean open()>();

        goto label5;

     label4:
        $r7 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.concurrent.atomic.AtomicReference pendingRuntimeException>;

        $r6 = new java.lang.IllegalStateException;

        $i10 = r1.<android.os.Message: int what>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i10);

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        virtualinvoke $r7.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, $r6);

     label5:
        if r9 == null goto label6;

        staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void recycleMessageParams(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams)>(r9);

     label6:
        return;
    }

    private void doQueueInputBuffer(int, int, int, long, int)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        int i0, i1, i2, i4;
        long l3;
        java.lang.Throwable r1, $r3;
        android.media.MediaCodec $r2;
        java.util.concurrent.atomic.AtomicReference $r4;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        i4 := @parameter4: int;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.media.MediaCodec codec>;

        virtualinvoke $r2.<android.media.MediaCodec: void queueInputBuffer(int,int,int,long,int)>(i0, i1, i2, l3, i4);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.concurrent.atomic.AtomicReference pendingRuntimeException>;

        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, r1);

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private void doQueueSecureInputBuffer(int, int, android.media.MediaCodec$CryptoInfo, long, int)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        int i0, i1, i3;
        android.media.MediaCodec$CryptoInfo r1;
        long l2;
        java.lang.Throwable r2, $r5, $r7, r9;
        java.lang.Object $r3, r8;
        android.media.MediaCodec $r4;
        java.util.concurrent.atomic.AtomicReference $r6;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.media.MediaCodec$CryptoInfo;

        l2 := @parameter3: long;

        i3 := @parameter4: int;

     label1:
        $r3 = <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.lang.Object QUEUE_SECURE_LOCK>;

        r8 = $r3;

        entermonitor $r3;

     label2:
        $r4 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: android.media.MediaCodec codec>;

        virtualinvoke $r4.<android.media.MediaCodec: void queueSecureInputBuffer(int,int,android.media.MediaCodec$CryptoInfo,long,int)>(i0, i1, r1, l2, i3);

        exitmonitor r8;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r8;

     label5:
        throw r2;

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;

        r9 = $r5;

        $r6 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.concurrent.atomic.AtomicReference pendingRuntimeException>;

        virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, r9);

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.RuntimeException from label1 to label6 with label7;
    }

    private static androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams getMessageParams()
    {
        java.util.ArrayDeque r0, $r2, $r3, $r4;
        java.lang.Throwable r1, $r8;
        boolean $z0;
        java.lang.Object $r5;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams $r6, $r7;

        $r2 = <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.ArrayDeque MESSAGE_PARAMS_INSTANCE_POOL>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $r3 = <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.ArrayDeque MESSAGE_PARAMS_INSTANCE_POOL>;

        $z0 = virtualinvoke $r3.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r7 = new androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams;

        specialinvoke $r7.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: void <init>()>();

        exitmonitor r0;

     label2:
        return $r7;

     label3:
        $r4 = <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.ArrayDeque MESSAGE_PARAMS_INSTANCE_POOL>;

        $r5 = virtualinvoke $r4.<java.util.ArrayDeque: java.lang.Object removeFirst()>();

        $r6 = (androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams) $r5;

        exitmonitor r0;

     label4:
        return $r6;

     label5:
        $r8 := @caughtexception;

        r1 = $r8;

        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static void recycleMessageParams(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams r0;
        java.util.ArrayDeque r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @parameter0: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams;

        $r3 = <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.ArrayDeque MESSAGE_PARAMS_INSTANCE_POOL>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.ArrayDeque MESSAGE_PARAMS_INSTANCE_POOL>;

        virtualinvoke $r4.<java.util.ArrayDeque: boolean add(java.lang.Object)>(r0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static void copy(androidx.media3.decoder.CryptoInfo, android.media.MediaCodec$CryptoInfo)
    {
        androidx.media3.decoder.CryptoInfo r0;
        android.media.MediaCodec$CryptoInfo r1;
        android.media.MediaCodec$CryptoInfo$Pattern r2, $r19;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r3, $r4, $r5, $r6, $r7, $r8;
        byte[] $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r18;
        java.lang.Object $r12, $r17;

        r0 := @parameter0: androidx.media3.decoder.CryptoInfo;

        r1 := @parameter1: android.media.MediaCodec$CryptoInfo;

        $i0 = r0.<androidx.media3.decoder.CryptoInfo: int numSubSamples>;

        r1.<android.media.MediaCodec$CryptoInfo: int numSubSamples> = $i0;

        $r4 = r0.<androidx.media3.decoder.CryptoInfo: int[] numBytesOfClearData>;

        $r3 = r1.<android.media.MediaCodec$CryptoInfo: int[] numBytesOfClearData>;

        $r5 = staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: int[] copy(int[],int[])>($r4, $r3);

        r1.<android.media.MediaCodec$CryptoInfo: int[] numBytesOfClearData> = $r5;

        $r7 = r0.<androidx.media3.decoder.CryptoInfo: int[] numBytesOfEncryptedData>;

        $r6 = r1.<android.media.MediaCodec$CryptoInfo: int[] numBytesOfEncryptedData>;

        $r8 = staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: int[] copy(int[],int[])>($r7, $r6);

        r1.<android.media.MediaCodec$CryptoInfo: int[] numBytesOfEncryptedData> = $r8;

        $r10 = r0.<androidx.media3.decoder.CryptoInfo: byte[] key>;

        $r9 = r1.<android.media.MediaCodec$CryptoInfo: byte[] key>;

        $r11 = staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: byte[] copy(byte[],byte[])>($r10, $r9);

        $r12 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r11);

        $r13 = (byte[]) $r12;

        r1.<android.media.MediaCodec$CryptoInfo: byte[] key> = $r13;

        $r15 = r0.<androidx.media3.decoder.CryptoInfo: byte[] iv>;

        $r14 = r1.<android.media.MediaCodec$CryptoInfo: byte[] iv>;

        $r16 = staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: byte[] copy(byte[],byte[])>($r15, $r14);

        $r17 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r16);

        $r18 = (byte[]) $r17;

        r1.<android.media.MediaCodec$CryptoInfo: byte[] iv> = $r18;

        $i1 = r0.<androidx.media3.decoder.CryptoInfo: int mode>;

        r1.<android.media.MediaCodec$CryptoInfo: int mode> = $i1;

        $i2 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i2 < 24 goto label1;

        $r19 = new android.media.MediaCodec$CryptoInfo$Pattern;

        $i4 = r0.<androidx.media3.decoder.CryptoInfo: int encryptedBlocks>;

        $i3 = r0.<androidx.media3.decoder.CryptoInfo: int clearBlocks>;

        specialinvoke $r19.<android.media.MediaCodec$CryptoInfo$Pattern: void <init>(int,int)>($i4, $i3);

        r2 = $r19;

        virtualinvoke r1.<android.media.MediaCodec$CryptoInfo: void setPattern(android.media.MediaCodec$CryptoInfo$Pattern)>(r2);

     label1:
        return;
    }

    private static int[] copy(int[], int[])
    {
        int[] r0, r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        if r0 != null goto label1;

        return r1;

     label1:
        if r1 == null goto label2;

        $i2 = lengthof r1;

        $i1 = lengthof r0;

        if $i2 >= $i1 goto label3;

     label2:
        $i0 = lengthof r0;

        $r2 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r0, $i0);

        return $r2;

     label3:
        $i3 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i3);

        return r1;
    }

    private static byte[] copy(byte[], byte[])
    {
        byte[] r0, r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        if r0 != null goto label1;

        return r1;

     label1:
        if r1 == null goto label2;

        $i2 = lengthof r1;

        $i1 = lengthof r0;

        if $i2 >= $i1 goto label3;

     label2:
        $i0 = lengthof r0;

        $r2 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r0, $i0);

        return $r2;

     label3:
        $i3 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i3);

        return r1;
    }

    static void access$000(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer, android.os.Message)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r0;
        android.os.Message r1;

        r0 := @parameter0: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void doHandleMessage(android.os.Message)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.util.ArrayDeque $r0;
        java.lang.Object $r1;

        $r0 = new java.util.ArrayDeque;

        specialinvoke $r0.<java.util.ArrayDeque: void <init>()>();

        <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.util.ArrayDeque MESSAGE_PARAMS_INSTANCE_POOL> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: java.lang.Object QUEUE_SECURE_LOCK> = $r1;

        return;
    }

androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$1
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$1: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer this$0>
    void <init>(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer, android.os.Looper)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$1 r0;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer r1;
        android.os.Looper r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$1;

        r1 := @parameter0: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer;

        r2 := @parameter1: android.os.Looper;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$1: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$1 r0;
        android.os.Message r1;
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer $r2;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$1;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$1: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer this$0>;

        staticinvoke <androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer: void access$000(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer,android.os.Message)>($r2, r1);

        return;
    }

androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int index>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int offset>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int size>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: android.media.MediaCodec$CryptoInfo cryptoInfo>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: long presentationTimeUs>
<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int flags>
    void <init>()
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams r0;
        android.media.MediaCodec$CryptoInfo $r1;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.media.MediaCodec$CryptoInfo;

        specialinvoke $r1.<android.media.MediaCodec$CryptoInfo: void <init>()>();

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: android.media.MediaCodec$CryptoInfo cryptoInfo> = $r1;

        return;
    }

    public void setQueueParams(int, int, int, long, int)
    {
        androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams r0;
        int i0, i1, i2, i4;
        long l3;

        r0 := @this: androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        i4 := @parameter4: int;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int index> = i0;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int offset> = i1;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int size> = i2;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: long presentationTimeUs> = l3;

        r0.<androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams: int flags> = i4;

        return;
    }

