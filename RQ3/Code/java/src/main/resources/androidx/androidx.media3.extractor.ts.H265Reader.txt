androidx.media3.extractor.ts.H265Reader
<androidx.media3.extractor.ts.H265Reader: java.lang.String TAG>
<androidx.media3.extractor.ts.H265Reader: int RASL_R>
<androidx.media3.extractor.ts.H265Reader: int BLA_W_LP>
<androidx.media3.extractor.ts.H265Reader: int CRA_NUT>
<androidx.media3.extractor.ts.H265Reader: int VPS_NUT>
<androidx.media3.extractor.ts.H265Reader: int SPS_NUT>
<androidx.media3.extractor.ts.H265Reader: int PPS_NUT>
<androidx.media3.extractor.ts.H265Reader: int AUD_NUT>
<androidx.media3.extractor.ts.H265Reader: int PREFIX_SEI_NUT>
<androidx.media3.extractor.ts.H265Reader: int SUFFIX_SEI_NUT>
<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.SeiReader seiReader>
<androidx.media3.extractor.ts.H265Reader: java.lang.String formatId>
<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.TrackOutput output>
<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.H265Reader$SampleReader sampleReader>
<androidx.media3.extractor.ts.H265Reader: boolean hasOutputFormat>
<androidx.media3.extractor.ts.H265Reader: boolean[] prefixFlags>
<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer vps>
<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>
<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>
<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer prefixSei>
<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer suffixSei>
<androidx.media3.extractor.ts.H265Reader: long totalBytesWritten>
<androidx.media3.extractor.ts.H265Reader: long pesTimeUs>
<androidx.media3.extractor.ts.H265Reader: androidx.media3.common.util.ParsableByteArray seiWrapper>
    public void <init>(androidx.media3.extractor.ts.SeiReader)
    {
        androidx.media3.extractor.ts.H265Reader r0;
        androidx.media3.extractor.ts.SeiReader r1;
        boolean[] $r2;
        androidx.media3.extractor.ts.NalUnitTargetBuffer $r3, $r4, $r5, $r6, $r7;
        androidx.media3.common.util.ParsableByteArray $r8;

        r0 := @this: androidx.media3.extractor.ts.H265Reader;

        r1 := @parameter0: androidx.media3.extractor.ts.SeiReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.SeiReader seiReader> = r1;

        $r2 = newarray (boolean)[3];

        r0.<androidx.media3.extractor.ts.H265Reader: boolean[] prefixFlags> = $r2;

        $r3 = new androidx.media3.extractor.ts.NalUnitTargetBuffer;

        specialinvoke $r3.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void <init>(int,int)>(32, 128);

        r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer vps> = $r3;

        $r4 = new androidx.media3.extractor.ts.NalUnitTargetBuffer;

        specialinvoke $r4.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void <init>(int,int)>(33, 128);

        r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps> = $r4;

        $r5 = new androidx.media3.extractor.ts.NalUnitTargetBuffer;

        specialinvoke $r5.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void <init>(int,int)>(34, 128);

        r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps> = $r5;

        $r6 = new androidx.media3.extractor.ts.NalUnitTargetBuffer;

        specialinvoke $r6.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void <init>(int,int)>(39, 128);

        r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer prefixSei> = $r6;

        $r7 = new androidx.media3.extractor.ts.NalUnitTargetBuffer;

        specialinvoke $r7.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void <init>(int,int)>(40, 128);

        r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer suffixSei> = $r7;

        r0.<androidx.media3.extractor.ts.H265Reader: long pesTimeUs> = -9223372036854775807L;

        $r8 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r8.<androidx.media3.common.util.ParsableByteArray: void <init>()>();

        r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.common.util.ParsableByteArray seiWrapper> = $r8;

        return;
    }

    public void seek()
    {
        androidx.media3.extractor.ts.H265Reader r0;
        boolean[] $r1;
        androidx.media3.extractor.ts.NalUnitTargetBuffer $r2, $r3, $r4, $r5, $r6;
        androidx.media3.extractor.ts.H265Reader$SampleReader $r7, $r8;

        r0 := @this: androidx.media3.extractor.ts.H265Reader;

        r0.<androidx.media3.extractor.ts.H265Reader: long totalBytesWritten> = 0L;

        r0.<androidx.media3.extractor.ts.H265Reader: long pesTimeUs> = -9223372036854775807L;

        $r1 = r0.<androidx.media3.extractor.ts.H265Reader: boolean[] prefixFlags>;

        staticinvoke <androidx.media3.extractor.NalUnitUtil: void clearPrefixFlags(boolean[])>($r1);

        $r2 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer vps>;

        virtualinvoke $r2.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void reset()>();

        $r3 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        virtualinvoke $r3.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void reset()>();

        $r4 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        virtualinvoke $r4.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void reset()>();

        $r5 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer prefixSei>;

        virtualinvoke $r5.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void reset()>();

        $r6 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer suffixSei>;

        virtualinvoke $r6.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void reset()>();

        $r7 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.H265Reader$SampleReader sampleReader>;

        if $r7 == null goto label1;

        $r8 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.H265Reader$SampleReader sampleReader>;

        virtualinvoke $r8.<androidx.media3.extractor.ts.H265Reader$SampleReader: void reset()>();

     label1:
        return;
    }

    public void createTracks(androidx.media3.extractor.ExtractorOutput, androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator)
    {
        androidx.media3.extractor.ts.H265Reader r0;
        androidx.media3.extractor.ExtractorOutput r1;
        androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator r2;
        java.lang.String $r3;
        int $i0;
        androidx.media3.extractor.TrackOutput $r4, $r6;
        androidx.media3.extractor.ts.H265Reader$SampleReader $r5;
        androidx.media3.extractor.ts.SeiReader $r7;

        r0 := @this: androidx.media3.extractor.ts.H265Reader;

        r1 := @parameter0: androidx.media3.extractor.ExtractorOutput;

        r2 := @parameter1: androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator;

        virtualinvoke r2.<androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator: void generateNewId()>();

        $r3 = virtualinvoke r2.<androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator: java.lang.String getFormatId()>();

        r0.<androidx.media3.extractor.ts.H265Reader: java.lang.String formatId> = $r3;

        $i0 = virtualinvoke r2.<androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator: int getTrackId()>();

        $r4 = interfaceinvoke r1.<androidx.media3.extractor.ExtractorOutput: androidx.media3.extractor.TrackOutput track(int,int)>($i0, 2);

        r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.TrackOutput output> = $r4;

        $r5 = new androidx.media3.extractor.ts.H265Reader$SampleReader;

        $r6 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.TrackOutput output>;

        specialinvoke $r5.<androidx.media3.extractor.ts.H265Reader$SampleReader: void <init>(androidx.media3.extractor.TrackOutput)>($r6);

        r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.H265Reader$SampleReader sampleReader> = $r5;

        $r7 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.SeiReader seiReader>;

        virtualinvoke $r7.<androidx.media3.extractor.ts.SeiReader: void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator)>(r1, r2);

        return;
    }

    public void packetStarted(long, int)
    {
        androidx.media3.extractor.ts.H265Reader r0;
        long l0;
        int i1;
        byte $b2;

        r0 := @this: androidx.media3.extractor.ts.H265Reader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $b2 = l0 cmp -9223372036854775807L;

        if $b2 == 0 goto label1;

        r0.<androidx.media3.extractor.ts.H265Reader: long pesTimeUs> = l0;

     label1:
        return;
    }

    public void consume(androidx.media3.common.util.ParsableByteArray)
    {
        androidx.media3.extractor.ts.H265Reader r0;
        androidx.media3.common.util.ParsableByteArray r1;
        int i0, i1, i2, i3, i4, $i6, $i8, $i11, i18, $i19;
        byte[] r2;
        long l5, $l7, $l9, $l10, $l12, $l13, $l14, $l15;
        androidx.media3.extractor.TrackOutput $r3;
        boolean[] $r4;

        r0 := @this: androidx.media3.extractor.ts.H265Reader;

        r1 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        specialinvoke r0.<androidx.media3.extractor.ts.H265Reader: void assertTracksCreated()>();

     label1:
        $i6 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        if $i6 <= 0 goto label8;

        i18 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int getPosition()>();

        i0 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int limit()>();

        r2 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $l7 = r0.<androidx.media3.extractor.ts.H265Reader: long totalBytesWritten>;

        $i8 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        $l9 = (long) $i8;

        $l10 = $l7 + $l9;

        r0.<androidx.media3.extractor.ts.H265Reader: long totalBytesWritten> = $l10;

        $r3 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.TrackOutput output>;

        $i11 = virtualinvoke r1.<androidx.media3.common.util.ParsableByteArray: int bytesLeft()>();

        interfaceinvoke $r3.<androidx.media3.extractor.TrackOutput: void sampleData(androidx.media3.common.util.ParsableByteArray,int)>(r1, $i11);

     label2:
        if i18 >= i0 goto label7;

        $r4 = r0.<androidx.media3.extractor.ts.H265Reader: boolean[] prefixFlags>;

        i1 = staticinvoke <androidx.media3.extractor.NalUnitUtil: int findNalUnit(byte[],int,int,boolean[])>(r2, i18, i0, $r4);

        if i1 != i0 goto label3;

        specialinvoke r0.<androidx.media3.extractor.ts.H265Reader: void nalUnitData(byte[],int,int)>(r2, i18, i0);

        return;

     label3:
        i2 = staticinvoke <androidx.media3.extractor.NalUnitUtil: int getH265NalUnitType(byte[],int)>(r2, i1);

        i3 = i1 - i18;

        if i3 <= 0 goto label4;

        specialinvoke r0.<androidx.media3.extractor.ts.H265Reader: void nalUnitData(byte[],int,int)>(r2, i18, i1);

     label4:
        i4 = i0 - i1;

        $l13 = r0.<androidx.media3.extractor.ts.H265Reader: long totalBytesWritten>;

        $l12 = (long) i4;

        l5 = $l13 - $l12;

        if i3 >= 0 goto label5;

        $i19 = neg i3;

        goto label6;

     label5:
        $i19 = 0;

     label6:
        $l14 = r0.<androidx.media3.extractor.ts.H265Reader: long pesTimeUs>;

        specialinvoke r0.<androidx.media3.extractor.ts.H265Reader: void endNalUnit(long,int,int,long)>(l5, i4, $i19, $l14);

        $l15 = r0.<androidx.media3.extractor.ts.H265Reader: long pesTimeUs>;

        specialinvoke r0.<androidx.media3.extractor.ts.H265Reader: void startNalUnit(long,int,int,long)>(l5, i4, i2, $l15);

        i18 = i1 + 3;

        goto label2;

     label7:
        goto label1;

     label8:
        return;
    }

    public void packetFinished()
    {
        androidx.media3.extractor.ts.H265Reader r0;

        r0 := @this: androidx.media3.extractor.ts.H265Reader;

        return;
    }

    private void startNalUnit(long, int, int, long)
    {
        androidx.media3.extractor.ts.H265Reader r0;
        long l0, l3;
        int i1, i2;
        boolean $z0, $z1;
        androidx.media3.extractor.ts.H265Reader$SampleReader $r1;
        androidx.media3.extractor.ts.NalUnitTargetBuffer $r2, $r3, $r4, $r5, $r6;

        r0 := @this: androidx.media3.extractor.ts.H265Reader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        $r1 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.H265Reader$SampleReader sampleReader>;

        $z0 = r0.<androidx.media3.extractor.ts.H265Reader: boolean hasOutputFormat>;

        virtualinvoke $r1.<androidx.media3.extractor.ts.H265Reader$SampleReader: void startNalUnit(long,int,int,long,boolean)>(l0, i1, i2, l3, $z0);

        $z1 = r0.<androidx.media3.extractor.ts.H265Reader: boolean hasOutputFormat>;

        if $z1 != 0 goto label1;

        $r4 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer vps>;

        virtualinvoke $r4.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void startNalUnit(int)>(i2);

        $r5 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        virtualinvoke $r5.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void startNalUnit(int)>(i2);

        $r6 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        virtualinvoke $r6.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void startNalUnit(int)>(i2);

     label1:
        $r2 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer prefixSei>;

        virtualinvoke $r2.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void startNalUnit(int)>(i2);

        $r3 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer suffixSei>;

        virtualinvoke $r3.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void startNalUnit(int)>(i2);

        return;
    }

    private void nalUnitData(byte[], int, int)
    {
        androidx.media3.extractor.ts.H265Reader r0;
        byte[] r1;
        int i0, i1;
        androidx.media3.extractor.ts.H265Reader$SampleReader $r2;
        boolean $z0;
        androidx.media3.extractor.ts.NalUnitTargetBuffer $r3, $r4, $r5, $r6, $r7;

        r0 := @this: androidx.media3.extractor.ts.H265Reader;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.H265Reader$SampleReader sampleReader>;

        virtualinvoke $r2.<androidx.media3.extractor.ts.H265Reader$SampleReader: void readNalUnitData(byte[],int,int)>(r1, i0, i1);

        $z0 = r0.<androidx.media3.extractor.ts.H265Reader: boolean hasOutputFormat>;

        if $z0 != 0 goto label1;

        $r5 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer vps>;

        virtualinvoke $r5.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void appendToNalUnit(byte[],int,int)>(r1, i0, i1);

        $r6 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        virtualinvoke $r6.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void appendToNalUnit(byte[],int,int)>(r1, i0, i1);

        $r7 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        virtualinvoke $r7.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void appendToNalUnit(byte[],int,int)>(r1, i0, i1);

     label1:
        $r3 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer prefixSei>;

        virtualinvoke $r3.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void appendToNalUnit(byte[],int,int)>(r1, i0, i1);

        $r4 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer suffixSei>;

        virtualinvoke $r4.<androidx.media3.extractor.ts.NalUnitTargetBuffer: void appendToNalUnit(byte[],int,int)>(r1, i0, i1);

        return;
    }

    private void endNalUnit(long, int, int, long)
    {
        androidx.media3.extractor.ts.H265Reader r0;
        long l0, l3;
        int i1, i2, $i4, $i5, i6, i7;
        boolean $z0, $z1, $z2, $z6, $z7, $z8, $z9;
        androidx.media3.extractor.ts.H265Reader$SampleReader $r1;
        androidx.media3.extractor.ts.NalUnitTargetBuffer $r2, $r3, $r4, $r6, $r12, $r13, $r15, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r33;
        byte[] $r5, $r7, $r14, $r16;
        androidx.media3.common.util.ParsableByteArray $r8, $r9, $r10, $r17, $r18, $r19;
        androidx.media3.extractor.ts.SeiReader $r11, $r20;
        java.lang.String $r30;
        androidx.media3.extractor.TrackOutput $r31;
        androidx.media3.common.Format $r32;

        r0 := @this: androidx.media3.extractor.ts.H265Reader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        $r1 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.H265Reader$SampleReader sampleReader>;

        $z0 = r0.<androidx.media3.extractor.ts.H265Reader: boolean hasOutputFormat>;

        virtualinvoke $r1.<androidx.media3.extractor.ts.H265Reader$SampleReader: void endNalUnit(long,int,boolean)>(l0, i1, $z0);

        $z1 = r0.<androidx.media3.extractor.ts.H265Reader: boolean hasOutputFormat>;

        if $z1 != 0 goto label1;

        $r21 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer vps>;

        virtualinvoke $r21.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean endNalUnit(int)>(i2);

        $r22 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        virtualinvoke $r22.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean endNalUnit(int)>(i2);

        $r23 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        virtualinvoke $r23.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean endNalUnit(int)>(i2);

        $r24 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer vps>;

        $z6 = virtualinvoke $r24.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean isCompleted()>();

        if $z6 == 0 goto label1;

        $r25 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        $z7 = virtualinvoke $r25.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean isCompleted()>();

        if $z7 == 0 goto label1;

        $r26 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        $z8 = virtualinvoke $r26.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean isCompleted()>();

        if $z8 == 0 goto label1;

        $r31 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.TrackOutput output>;

        $r30 = r0.<androidx.media3.extractor.ts.H265Reader: java.lang.String formatId>;

        $r29 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer vps>;

        $r28 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer sps>;

        $r27 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer pps>;

        $r32 = staticinvoke <androidx.media3.extractor.ts.H265Reader: androidx.media3.common.Format parseMediaFormat(java.lang.String,androidx.media3.extractor.ts.NalUnitTargetBuffer,androidx.media3.extractor.ts.NalUnitTargetBuffer,androidx.media3.extractor.ts.NalUnitTargetBuffer)>($r30, $r29, $r28, $r27);

        interfaceinvoke $r31.<androidx.media3.extractor.TrackOutput: void format(androidx.media3.common.Format)>($r32);

        r0.<androidx.media3.extractor.ts.H265Reader: boolean hasOutputFormat> = 1;

     label1:
        $r33 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer prefixSei>;

        $z9 = virtualinvoke $r33.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean endNalUnit(int)>(i2);

        if $z9 == 0 goto label2;

        $r12 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer prefixSei>;

        $r14 = $r12.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        $r13 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer prefixSei>;

        $i5 = $r13.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        i6 = staticinvoke <androidx.media3.extractor.NalUnitUtil: int unescapeStream(byte[],int)>($r14, $i5);

        $r17 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.common.util.ParsableByteArray seiWrapper>;

        $r15 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer prefixSei>;

        $r16 = $r15.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        virtualinvoke $r17.<androidx.media3.common.util.ParsableByteArray: void reset(byte[],int)>($r16, i6);

        $r18 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.common.util.ParsableByteArray seiWrapper>;

        virtualinvoke $r18.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(5);

        $r20 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.SeiReader seiReader>;

        $r19 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.common.util.ParsableByteArray seiWrapper>;

        virtualinvoke $r20.<androidx.media3.extractor.ts.SeiReader: void consume(long,androidx.media3.common.util.ParsableByteArray)>(l3, $r19);

     label2:
        $r2 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer suffixSei>;

        $z2 = virtualinvoke $r2.<androidx.media3.extractor.ts.NalUnitTargetBuffer: boolean endNalUnit(int)>(i2);

        if $z2 == 0 goto label3;

        $r3 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer suffixSei>;

        $r5 = $r3.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        $r4 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer suffixSei>;

        $i4 = $r4.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        i7 = staticinvoke <androidx.media3.extractor.NalUnitUtil: int unescapeStream(byte[],int)>($r5, $i4);

        $r8 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.common.util.ParsableByteArray seiWrapper>;

        $r6 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.NalUnitTargetBuffer suffixSei>;

        $r7 = $r6.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        virtualinvoke $r8.<androidx.media3.common.util.ParsableByteArray: void reset(byte[],int)>($r7, i7);

        $r9 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.common.util.ParsableByteArray seiWrapper>;

        virtualinvoke $r9.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(5);

        $r11 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.SeiReader seiReader>;

        $r10 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.common.util.ParsableByteArray seiWrapper>;

        virtualinvoke $r11.<androidx.media3.extractor.ts.SeiReader: void consume(long,androidx.media3.common.util.ParsableByteArray)>(l3, $r10);

     label3:
        return;
    }

    private static androidx.media3.common.Format parseMediaFormat(java.lang.String, androidx.media3.extractor.ts.NalUnitTargetBuffer, androidx.media3.extractor.ts.NalUnitTargetBuffer, androidx.media3.extractor.ts.NalUnitTargetBuffer)
    {
        java.lang.String r0, $r15, r18;
        androidx.media3.extractor.ts.NalUnitTargetBuffer r1, r2, r3;
        byte[] r4, $r6, $r7, $r8, $r10;
        androidx.media3.extractor.ParsableNalUnitBitArray r5, $r9;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i28, $i29, $i30, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, i44, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i61, $i62, i63, i64, i65, i66, i67, i68;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, $z14, $z15, $z16;
        float[] $r11, $r16;
        java.lang.StringBuilder $r12, $r13, $r14;
        float $f0, $f1, f2;
        int[] r17;
        byte $b57, b58, $b59, b60;
        androidx.media3.common.Format$Builder $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27;
        java.util.List $r26;
        androidx.media3.common.Format $r28;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.media3.extractor.ts.NalUnitTargetBuffer;

        r2 := @parameter2: androidx.media3.extractor.ts.NalUnitTargetBuffer;

        r3 := @parameter3: androidx.media3.extractor.ts.NalUnitTargetBuffer;

        $i4 = r1.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        $i3 = r2.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        $i6 = $i4 + $i3;

        $i5 = r3.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        $i7 = $i6 + $i5;

        r4 = newarray (byte)[$i7];

        $r6 = r1.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        $i8 = r1.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r4, 0, $i8);

        $r7 = r2.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        $i10 = r1.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        $i9 = r2.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r4, $i10, $i9);

        $r8 = r3.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        $i12 = r1.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        $i11 = r2.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        $i14 = $i12 + $i11;

        $i13 = r3.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r4, $i14, $i13);

        $r9 = new androidx.media3.extractor.ParsableNalUnitBitArray;

        $r10 = r2.<androidx.media3.extractor.ts.NalUnitTargetBuffer: byte[] nalData>;

        $i15 = r2.<androidx.media3.extractor.ts.NalUnitTargetBuffer: int nalLength>;

        specialinvoke $r9.<androidx.media3.extractor.ParsableNalUnitBitArray: void <init>(byte[],int,int)>($r10, 0, $i15);

        r5 = $r9;

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBits(int)>(44);

        i0 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readBits(int)>(3);

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBit()>();

        i1 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readBits(int)>(2);

        z0 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        i2 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readBits(int)>(5);

        i44 = 0;

        i45 = 0;

     label01:
        if i45 >= 32 goto label03;

        $z11 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z11 == 0 goto label02;

        $i43 = 1 << i45;

        i44 = i44 | $i43;

     label02:
        i45 = i45 + 1;

        goto label01;

     label03:
        r17 = newarray (int)[6];

        i46 = 0;

     label04:
        $i16 = lengthof r17;

        if i46 >= $i16 goto label05;

        $i42 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readBits(int)>(8);

        r17[i46] = $i42;

        i46 = i46 + 1;

        goto label04;

     label05:
        i47 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readBits(int)>(8);

        i48 = 0;

        i49 = 0;

     label06:
        if i49 >= i0 goto label09;

        $z9 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z9 == 0 goto label07;

        i48 = i48 + 89;

     label07:
        $z10 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z10 == 0 goto label08;

        i48 = i48 + 8;

     label08:
        i49 = i49 + 1;

        goto label06;

     label09:
        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBits(int)>(i48);

        if i0 <= 0 goto label10;

        $i40 = 8 - i0;

        $i41 = 2 * $i40;

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBits(int)>($i41);

     label10:
        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        i50 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        if i50 != 3 goto label11;

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBit()>();

     label11:
        i51 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        i52 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        $z1 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z1 == 0 goto label17;

        i53 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        i54 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        i55 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        i56 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        if i50 == 1 goto label12;

        if i50 != 2 goto label13;

     label12:
        $b57 = 2;

        goto label14;

     label13:
        $b57 = 1;

     label14:
        b58 = $b57;

        if i50 != 1 goto label15;

        $b59 = 2;

        goto label16;

     label15:
        $b59 = 1;

     label16:
        b60 = $b59;

        $i36 = i53 + i54;

        $i37 = b58 * $i36;

        i51 = i51 - $i37;

        $i38 = i55 + i56;

        $i39 = b60 * $i38;

        i52 = i52 - $i39;

     label17:
        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        i61 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        $z12 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z12 == 0 goto label18;

        $i62 = 0;

        goto label19;

     label18:
        $i62 = i0;

     label19:
        i63 = $i62;

     label20:
        if i63 > i0 goto label21;

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        i63 = i63 + 1;

        goto label20;

     label21:
        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        z13 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if z13 == 0 goto label22;

        $z8 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z8 == 0 goto label22;

        staticinvoke <androidx.media3.extractor.ts.H265Reader: void skipScalingList(androidx.media3.extractor.ParsableNalUnitBitArray)>(r5);

     label22:
        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBits(int)>(2);

        $z14 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z14 == 0 goto label23;

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBits(int)>(8);

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBit()>();

     label23:
        staticinvoke <androidx.media3.extractor.ts.H265Reader: void skipShortTermRefPicSets(androidx.media3.extractor.ParsableNalUnitBitArray)>(r5);

        $z2 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z2 == 0 goto label25;

        i64 = 0;

     label24:
        $i29 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        if i64 >= $i29 goto label25;

        i65 = i61 + 4;

        $i30 = i65 + 1;

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBits(int)>($i30);

        i64 = i64 + 1;

        goto label24;

     label25:
        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBits(int)>(2);

        f2 = 1.0F;

        $z3 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z3 == 0 goto label33;

        $z4 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z4 == 0 goto label29;

        i66 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readBits(int)>(8);

        if i66 != 255 goto label27;

        i67 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readBits(int)>(16);

        i68 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readBits(int)>(16);

        if i67 == 0 goto label26;

        if i68 == 0 goto label26;

        $f1 = (float) i67;

        $f0 = (float) i68;

        f2 = $f1 / $f0;

     label26:
        goto label29;

     label27:
        $r11 = <androidx.media3.extractor.NalUnitUtil: float[] ASPECT_RATIO_IDC_VALUES>;

        $i28 = lengthof $r11;

        if i66 >= $i28 goto label28;

        $r16 = <androidx.media3.extractor.NalUnitUtil: float[] ASPECT_RATIO_IDC_VALUES>;

        f2 = $r16[i66];

        goto label29;

     label28:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected aspect_ratio_idc value: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i66);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("H265Reader", $r15);

     label29:
        $z15 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z15 == 0 goto label30;

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBit()>();

     label30:
        $z5 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z5 == 0 goto label31;

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBits(int)>(4);

        $z7 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z7 == 0 goto label31;

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBits(int)>(24);

     label31:
        $z16 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z16 == 0 goto label32;

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

     label32:
        virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBit()>();

        $z6 = virtualinvoke r5.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z6 == 0 goto label33;

        i52 = i52 * 2;

     label33:
        r18 = staticinvoke <androidx.media3.common.util.CodecSpecificDataUtil: java.lang.String buildHevcCodecString(int,boolean,int,int,int[],int)>(i1, z0, i2, i44, r17, i47);

        $r19 = new androidx.media3.common.Format$Builder;

        specialinvoke $r19.<androidx.media3.common.Format$Builder: void <init>()>();

        $r20 = virtualinvoke $r19.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setId(java.lang.String)>(r0);

        $r21 = virtualinvoke $r20.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String)>("video/hevc");

        $r22 = virtualinvoke $r21.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setCodecs(java.lang.String)>(r18);

        $r23 = virtualinvoke $r22.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setWidth(int)>(i51);

        $r24 = virtualinvoke $r23.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setHeight(int)>(i52);

        $r25 = virtualinvoke $r24.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setPixelWidthHeightRatio(float)>(f2);

        $r26 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r4);

        $r27 = virtualinvoke $r25.<androidx.media3.common.Format$Builder: androidx.media3.common.Format$Builder setInitializationData(java.util.List)>($r26);

        $r28 = virtualinvoke $r27.<androidx.media3.common.Format$Builder: androidx.media3.common.Format build()>();

        return $r28;
    }

    private static void skipScalingList(androidx.media3.extractor.ParsableNalUnitBitArray)
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        int i0, $i1, $i2, $i3, $i4, i8, i9, i10;
        boolean $z0;
        byte $b11;

        r0 := @parameter0: androidx.media3.extractor.ParsableNalUnitBitArray;

        i8 = 0;

     label01:
        if i8 >= 4 goto label10;

        i9 = 0;

     label02:
        if i9 >= 6 goto label09;

        $z0 = virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z0 != 0 goto label03;

        virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        goto label06;

     label03:
        $i1 = i8 << 1;

        $i2 = 4 + $i1;

        $i3 = 1 << $i2;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>(64, $i3);

        if i8 <= 1 goto label04;

        virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int readSignedExpGolombCodedInt()>();

     label04:
        i10 = 0;

     label05:
        if i10 >= i0 goto label06;

        virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int readSignedExpGolombCodedInt()>();

        i10 = i10 + 1;

        goto label05;

     label06:
        $i4 = i9;

        if i8 != 3 goto label07;

        $b11 = 3;

        goto label08;

     label07:
        $b11 = 1;

     label08:
        i9 = $i4 + $b11;

        goto label02;

     label09:
        i8 = i8 + 1;

        goto label01;

     label10:
        return;
    }

    private static void skipShortTermRefPicSets(androidx.media3.extractor.ParsableNalUnitBitArray)
    {
        androidx.media3.extractor.ParsableNalUnitBitArray r0;
        int i0, i1, i2, i6, i7, i8, i9, i10;
        boolean $z0, z1;

        r0 := @parameter0: androidx.media3.extractor.ParsableNalUnitBitArray;

        i0 = virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        z1 = 0;

        i6 = 0;

        i7 = 0;

     label01:
        if i7 >= i0 goto label11;

        if i7 == 0 goto label02;

        z1 = virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

     label02:
        if z1 == 0 goto label06;

        virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBit()>();

        virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        i8 = 0;

     label03:
        if i8 > i6 goto label05;

        $z0 = virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: boolean readBit()>();

        if $z0 == 0 goto label04;

        virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBit()>();

     label04:
        i8 = i8 + 1;

        goto label03;

     label05:
        goto label10;

     label06:
        i1 = virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        i2 = virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        i6 = i1 + i2;

        i9 = 0;

     label07:
        if i9 >= i1 goto label08;

        virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBit()>();

        i9 = i9 + 1;

        goto label07;

     label08:
        i10 = 0;

     label09:
        if i10 >= i2 goto label10;

        virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()>();

        virtualinvoke r0.<androidx.media3.extractor.ParsableNalUnitBitArray: void skipBit()>();

        i10 = i10 + 1;

        goto label09;

     label10:
        i7 = i7 + 1;

        goto label01;

     label11:
        return;
    }

    private void assertTracksCreated()
    {
        androidx.media3.extractor.ts.H265Reader r0;
        androidx.media3.extractor.TrackOutput $r1;
        androidx.media3.extractor.ts.H265Reader$SampleReader $r3;

        r0 := @this: androidx.media3.extractor.ts.H265Reader;

        $r1 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.TrackOutput output>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r1);

        $r3 = r0.<androidx.media3.extractor.ts.H265Reader: androidx.media3.extractor.ts.H265Reader$SampleReader sampleReader>;

        staticinvoke <androidx.media3.common.util.Util: java.lang.Object castNonNull(java.lang.Object)>($r3);

        return;
    }

androidx.media3.extractor.ts.H265Reader$SampleReader
<androidx.media3.extractor.ts.H265Reader$SampleReader: int FIRST_SLICE_FLAG_OFFSET>
<androidx.media3.extractor.ts.H265Reader$SampleReader: androidx.media3.extractor.TrackOutput output>
<androidx.media3.extractor.ts.H265Reader$SampleReader: long nalUnitPosition>
<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean nalUnitHasKeyframeData>
<androidx.media3.extractor.ts.H265Reader$SampleReader: int nalUnitBytesRead>
<androidx.media3.extractor.ts.H265Reader$SampleReader: long nalUnitTimeUs>
<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean lookingForFirstSliceFlag>
<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean isFirstSlice>
<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean isFirstPrefixNalUnit>
<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean readingSample>
<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean readingPrefix>
<androidx.media3.extractor.ts.H265Reader$SampleReader: long samplePosition>
<androidx.media3.extractor.ts.H265Reader$SampleReader: long sampleTimeUs>
<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean sampleIsKeyframe>
    public void <init>(androidx.media3.extractor.TrackOutput)
    {
        androidx.media3.extractor.ts.H265Reader$SampleReader r0;
        androidx.media3.extractor.TrackOutput r1;

        r0 := @this: androidx.media3.extractor.ts.H265Reader$SampleReader;

        r1 := @parameter0: androidx.media3.extractor.TrackOutput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: androidx.media3.extractor.TrackOutput output> = r1;

        return;
    }

    public void reset()
    {
        androidx.media3.extractor.ts.H265Reader$SampleReader r0;

        r0 := @this: androidx.media3.extractor.ts.H265Reader$SampleReader;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean lookingForFirstSliceFlag> = 0;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean isFirstSlice> = 0;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean isFirstPrefixNalUnit> = 0;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean readingSample> = 0;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean readingPrefix> = 0;

        return;
    }

    public void startNalUnit(long, int, int, long, boolean)
    {
        androidx.media3.extractor.ts.H265Reader$SampleReader r0;
        long l0, l3;
        int i1, i2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: androidx.media3.extractor.ts.H265Reader$SampleReader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        z0 := @parameter4: boolean;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean isFirstSlice> = 0;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean isFirstPrefixNalUnit> = 0;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: long nalUnitTimeUs> = l3;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: int nalUnitBytesRead> = 0;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: long nalUnitPosition> = l0;

        $z1 = staticinvoke <androidx.media3.extractor.ts.H265Reader$SampleReader: boolean isVclBodyNalUnit(int)>(i2);

        if $z1 != 0 goto label05;

        $z2 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean readingSample>;

        if $z2 == 0 goto label02;

        $z4 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean readingPrefix>;

        if $z4 != 0 goto label02;

        if z0 == 0 goto label01;

        specialinvoke r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: void outputSample(int)>(i1);

     label01:
        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean readingSample> = 0;

     label02:
        $z5 = staticinvoke <androidx.media3.extractor.ts.H265Reader$SampleReader: boolean isPrefixNalUnit(int)>(i2);

        if $z5 == 0 goto label05;

        $z3 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean readingPrefix>;

        if $z3 != 0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean isFirstPrefixNalUnit> = $z6;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean readingPrefix> = 1;

     label05:
        if i2 < 16 goto label06;

        if i2 > 21 goto label06;

        $z7 = 1;

        goto label07;

     label06:
        $z7 = 0;

     label07:
        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean nalUnitHasKeyframeData> = $z7;

        $z8 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean nalUnitHasKeyframeData>;

        if $z8 != 0 goto label08;

        if i2 > 9 goto label09;

     label08:
        $z9 = 1;

        goto label10;

     label09:
        $z9 = 0;

     label10:
        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean lookingForFirstSliceFlag> = $z9;

        return;
    }

    public void readNalUnitData(byte[], int, int)
    {
        androidx.media3.extractor.ts.H265Reader$SampleReader r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1;
        byte $b8;
        short $s9;

        r0 := @this: androidx.media3.extractor.ts.H265Reader$SampleReader;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean lookingForFirstSliceFlag>;

        if $z0 == 0 goto label4;

        $i4 = i0 + 2;

        $i3 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: int nalUnitBytesRead>;

        i2 = $i4 - $i3;

        if i2 >= i1 goto label3;

        $b8 = r1[i2];

        $s9 = $b8 & 128;

        if $s9 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean isFirstSlice> = $z1;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean lookingForFirstSliceFlag> = 0;

        goto label4;

     label3:
        $i6 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: int nalUnitBytesRead>;

        $i5 = i1 - i0;

        $i7 = $i6 + $i5;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: int nalUnitBytesRead> = $i7;

     label4:
        return;
    }

    public void endNalUnit(long, int, boolean)
    {
        androidx.media3.extractor.ts.H265Reader$SampleReader r0;
        long l0, $l3, $l4, $l6, $l7;
        int i1, i2, $i5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: androidx.media3.extractor.ts.H265Reader$SampleReader;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $z1 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean readingPrefix>;

        if $z1 == 0 goto label1;

        $z5 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean isFirstSlice>;

        if $z5 == 0 goto label1;

        $z6 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean nalUnitHasKeyframeData>;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean sampleIsKeyframe> = $z6;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean readingPrefix> = 0;

        goto label4;

     label1:
        $z2 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean isFirstPrefixNalUnit>;

        if $z2 != 0 goto label2;

        $z4 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean isFirstSlice>;

        if $z4 == 0 goto label4;

     label2:
        if z0 == 0 goto label3;

        $z3 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean readingSample>;

        if $z3 == 0 goto label3;

        $l3 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: long nalUnitPosition>;

        $l4 = l0 - $l3;

        i2 = (int) $l4;

        $i5 = i1 + i2;

        specialinvoke r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: void outputSample(int)>($i5);

     label3:
        $l6 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: long nalUnitPosition>;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: long samplePosition> = $l6;

        $l7 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: long nalUnitTimeUs>;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: long sampleTimeUs> = $l7;

        $z7 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean nalUnitHasKeyframeData>;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean sampleIsKeyframe> = $z7;

        r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean readingSample> = 1;

     label4:
        return;
    }

    private void outputSample(int)
    {
        androidx.media3.extractor.ts.H265Reader$SampleReader r0;
        int i0, i2;
        byte b1, $b4, $b9;
        long $l3, $l5, $l6, $l7, $l8;
        boolean $z0;
        androidx.media3.extractor.TrackOutput $r1;

        r0 := @this: androidx.media3.extractor.ts.H265Reader$SampleReader;

        i0 := @parameter0: int;

        $l3 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: long sampleTimeUs>;

        $b4 = $l3 cmp -9223372036854775807L;

        if $b4 != 0 goto label1;

        return;

     label1:
        $z0 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: boolean sampleIsKeyframe>;

        if $z0 == 0 goto label2;

        $b9 = 1;

        goto label3;

     label2:
        $b9 = 0;

     label3:
        b1 = $b9;

        $l6 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: long nalUnitPosition>;

        $l5 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: long samplePosition>;

        $l7 = $l6 - $l5;

        i2 = (int) $l7;

        $r1 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: androidx.media3.extractor.TrackOutput output>;

        $l8 = r0.<androidx.media3.extractor.ts.H265Reader$SampleReader: long sampleTimeUs>;

        interfaceinvoke $r1.<androidx.media3.extractor.TrackOutput: void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData)>($l8, b1, i2, i0, null);

        return;
    }

    private static boolean isPrefixNalUnit(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if 32 > i0 goto label1;

        if i0 <= 35 goto label2;

     label1:
        if i0 != 39 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private static boolean isVclBodyNalUnit(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 32 goto label1;

        if i0 != 40 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

