com.google.common.base.CharMatcher
    protected void <init>()
    {
        com.google.common.base.CharMatcher $r0;

        $r0 := @this: com.google.common.base.CharMatcher;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String access$100(char)
    {
        java.lang.String $r0;
        char $c0;

        $c0 := @parameter0: char;

        $r0 = staticinvoke <com.google.common.base.CharMatcher: java.lang.String showCharacter(char)>($c0);

        return $r0;
    }

    public static com.google.common.base.CharMatcher is(char)
    {
        char $c0;
        com.google.common.base.CharMatcher$Is $r0;

        $c0 := @parameter0: char;

        $r0 = new com.google.common.base.CharMatcher$Is;

        specialinvoke $r0.<com.google.common.base.CharMatcher$Is: void <init>(char)>($c0);

        return $r0;
    }

    public static com.google.common.base.CharMatcher none()
    {
        com.google.common.base.CharMatcher$None r0;

        r0 = <com.google.common.base.CharMatcher$None: com.google.common.base.CharMatcher$None INSTANCE>;

        return r0;
    }

    private static java.lang.String showCharacter(char)
    {
        int $i0, $i2;
        java.lang.String $r0;
        char $c1, $c3;
        char[] $r1;

        $c1 := @parameter0: char;

        $r1 = newarray (char)[6];

        $r1[0] = 92;

        $r1[1] = 117;

        $r1[2] = 0;

        $r1[3] = 0;

        $r1[4] = 0;

        $r1[5] = 0;

        $i2 = 0;

     label1:
        if $i2 >= 4 goto label2;

        $i0 = 5 - $i2;

        $c3 = $c1 & 15;

        $r0 = "0123456789ABCDEF";

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($c3);

        $r1[$i0] = $c3;

        $c1 = $c1 >> 4;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r0 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[])>($r1);

        return $r0;
    }

    public static com.google.common.base.CharMatcher whitespace()
    {
        com.google.common.base.CharMatcher$Whitespace r0;

        r0 = <com.google.common.base.CharMatcher$Whitespace: com.google.common.base.CharMatcher$Whitespace INSTANCE>;

        return r0;
    }

    public java.lang.String toString()
    {
        com.google.common.base.CharMatcher $r0;
        java.lang.String $r1;

        $r0 := @this: com.google.common.base.CharMatcher;

        $r1 = specialinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

com.google.common.base.CharMatcher$Any
<com.google.common.base.CharMatcher$Any: com.google.common.base.CharMatcher$Any INSTANCE>
    static void <clinit>()
    {
        com.google.common.base.CharMatcher$Any $r0;

        $r0 = new com.google.common.base.CharMatcher$Any;

        specialinvoke $r0.<com.google.common.base.CharMatcher$Any: void <init>()>();

        <com.google.common.base.CharMatcher$Any: com.google.common.base.CharMatcher$Any INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.common.base.CharMatcher$Any $r0;

        $r0 := @this: com.google.common.base.CharMatcher$Any;

        specialinvoke $r0.<com.google.common.base.CharMatcher$NamedFastMatcher: void <init>(java.lang.String)>("CharMatcher.any()");

        return;
    }

    public int indexIn(java.lang.CharSequence, int)
    {
        com.google.common.base.CharMatcher$Any $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;

        $r0 := @this: com.google.common.base.CharMatcher$Any;

        $r1 := @parameter0: java.lang.CharSequence;

        $i1 := @parameter1: int;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        staticinvoke <com.google.common.base.Preconditions: int checkPositionIndex(int,int)>($i1, $i0);

        if $i1 != $i0 goto label1;

        return -1;

     label1:
        return $i1;
    }

    public boolean matches(char)
    {
        com.google.common.base.CharMatcher$Any $r0;
        char $c0;

        $r0 := @this: com.google.common.base.CharMatcher$Any;

        $c0 := @parameter0: char;

        return 1;
    }

com.google.common.base.CharMatcher$Ascii
<com.google.common.base.CharMatcher$Ascii: com.google.common.base.CharMatcher$Ascii INSTANCE>
    static void <clinit>()
    {
        com.google.common.base.CharMatcher$Ascii $r0;

        $r0 = new com.google.common.base.CharMatcher$Ascii;

        specialinvoke $r0.<com.google.common.base.CharMatcher$Ascii: void <init>()>();

        <com.google.common.base.CharMatcher$Ascii: com.google.common.base.CharMatcher$Ascii INSTANCE> = $r0;

        return;
    }

    void <init>()
    {
        com.google.common.base.CharMatcher$Ascii $r0;

        $r0 := @this: com.google.common.base.CharMatcher$Ascii;

        specialinvoke $r0.<com.google.common.base.CharMatcher$NamedFastMatcher: void <init>(java.lang.String)>("CharMatcher.ascii()");

        return;
    }

    public boolean matches(char)
    {
        com.google.common.base.CharMatcher$Ascii $r0;
        char $c0;

        $r0 := @this: com.google.common.base.CharMatcher$Ascii;

        $c0 := @parameter0: char;

        if $c0 > 127 goto label1;

        return 1;

     label1:
        return 0;
    }

com.google.common.base.CharMatcher$BreakingWhitespace
<com.google.common.base.CharMatcher$BreakingWhitespace: com.google.common.base.CharMatcher INSTANCE>
    static void <clinit>()
    {
        com.google.common.base.CharMatcher$BreakingWhitespace $r0;

        $r0 = new com.google.common.base.CharMatcher$BreakingWhitespace;

        specialinvoke $r0.<com.google.common.base.CharMatcher$BreakingWhitespace: void <init>()>();

        <com.google.common.base.CharMatcher$BreakingWhitespace: com.google.common.base.CharMatcher INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.common.base.CharMatcher$BreakingWhitespace $r0;

        $r0 := @this: com.google.common.base.CharMatcher$BreakingWhitespace;

        specialinvoke $r0.<com.google.common.base.CharMatcher: void <init>()>();

        return;
    }

    public boolean matches(char)
    {
        com.google.common.base.CharMatcher$BreakingWhitespace $r0;
        char $c0;

        $r0 := @this: com.google.common.base.CharMatcher$BreakingWhitespace;

        $c0 := @parameter0: char;

        lookupswitch($c0)
        {
            case 9: goto label2;
            case 10: goto label2;
            case 11: goto label2;
            case 12: goto label2;
            case 13: goto label2;
            case 32: goto label2;
            case 133: goto label2;
            case 5760: goto label2;
            case 8199: goto label3;
            case 8232: goto label2;
            case 8233: goto label2;
            case 8287: goto label2;
            case 12288: goto label2;
            default: goto label1;
        };

     label1:
        if $c0 < 8192 goto label3;

        if $c0 > 8202 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public java.lang.String toString()
    {
        com.google.common.base.CharMatcher$BreakingWhitespace $r0;

        $r0 := @this: com.google.common.base.CharMatcher$BreakingWhitespace;

        return "CharMatcher.breakingWhitespace()";
    }

com.google.common.base.CharMatcher$Digit
<com.google.common.base.CharMatcher$Digit: com.google.common.base.CharMatcher$Digit INSTANCE>
    static void <clinit>()
    {
        com.google.common.base.CharMatcher$Digit $r0;

        $r0 = new com.google.common.base.CharMatcher$Digit;

        specialinvoke $r0.<com.google.common.base.CharMatcher$Digit: void <init>()>();

        <com.google.common.base.CharMatcher$Digit: com.google.common.base.CharMatcher$Digit INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.common.base.CharMatcher$Digit $r0;
        char[] $r1, $r2;

        $r0 := @this: com.google.common.base.CharMatcher$Digit;

        $r1 = staticinvoke <com.google.common.base.CharMatcher$Digit: char[] zeroes()>();

        $r2 = staticinvoke <com.google.common.base.CharMatcher$Digit: char[] nines()>();

        specialinvoke $r0.<com.google.common.base.CharMatcher$RangesMatcher: void <init>(java.lang.String,char[],char[])>("CharMatcher.digit()", $r1, $r2);

        return;
    }

    private static char[] nines()
    {
        char[] $r0;
        java.lang.String $r1;
        int $i0, $i1;
        char $c2;

        $r1 = "0\u0660\u06f0\u07c0\u0966\u09e6\u0a66\u0ae6\u0b66\u0be6\u0c66\u0ce6\u0d66\u0de6\u0e50\u0ed0\u0f20\u1040\u1090\u17e0\u1810\u1946\u19d0\u1a80\u1a90\u1b50\u1bb0\u1c40\u1c50\ua620\ua8d0\ua900\ua9d0\ua9f0\uaa50\uabf0\uff10";

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r0 = newarray (char)[$i0];

        $i0 = 0;

     label1:
        $r1 = "0\u0660\u06f0\u07c0\u0966\u09e6\u0a66\u0ae6\u0b66\u0be6\u0c66\u0ce6\u0d66\u0de6\u0e50\u0ed0\u0f20\u1040\u1090\u17e0\u1810\u1946\u19d0\u1a80\u1a90\u1b50\u1bb0\u1c40\u1c50\ua620\ua8d0\ua900\ua9d0\ua9f0\uaa50\uabf0\uff10";

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label2;

        $r1 = "0\u0660\u06f0\u07c0\u0966\u09e6\u0a66\u0ae6\u0b66\u0be6\u0c66\u0ce6\u0d66\u0de6\u0e50\u0ed0\u0f20\u1040\u1090\u17e0\u1810\u1946\u19d0\u1a80\u1a90\u1b50\u1bb0\u1c40\u1c50\ua620\ua8d0\ua900\ua9d0\ua9f0\uaa50\uabf0\uff10";

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $i1 = $c2 + 9;

        $c2 = (char) $i1;

        $r0[$i0] = $c2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private static char[] zeroes()
    {
        char[] $r0;
        java.lang.String $r1;

        $r1 = "0\u0660\u06f0\u07c0\u0966\u09e6\u0a66\u0ae6\u0b66\u0be6\u0c66\u0ce6\u0d66\u0de6\u0e50\u0ed0\u0f20\u1040\u1090\u17e0\u1810\u1946\u19d0\u1a80\u1a90\u1b50\u1bb0\u1c40\u1c50\ua620\ua8d0\ua900\ua9d0\ua9f0\uaa50\uabf0\uff10";

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        return $r0;
    }

com.google.common.base.CharMatcher$FastMatcher
    void <init>()
    {
        com.google.common.base.CharMatcher$FastMatcher $r0;

        $r0 := @this: com.google.common.base.CharMatcher$FastMatcher;

        specialinvoke $r0.<com.google.common.base.CharMatcher: void <init>()>();

        return;
    }

com.google.common.base.CharMatcher$Invisible
<com.google.common.base.CharMatcher$Invisible: com.google.common.base.CharMatcher$Invisible INSTANCE>
    static void <clinit>()
    {
        com.google.common.base.CharMatcher$Invisible $r0;

        $r0 = new com.google.common.base.CharMatcher$Invisible;

        specialinvoke $r0.<com.google.common.base.CharMatcher$Invisible: void <init>()>();

        <com.google.common.base.CharMatcher$Invisible: com.google.common.base.CharMatcher$Invisible INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.common.base.CharMatcher$Invisible $r0;
        java.lang.String $r1;
        char[] $r2, $r3;

        $r0 := @this: com.google.common.base.CharMatcher$Invisible;

        $r1 = "\u0000\u007f\u00ad\u0600\u061c\u06dd\u070f\u08e2\u1680\u180e\u2000\u2028\u205f\u2066\u3000\ud800\ufeff\ufff9";

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $r1 = " \u00a0\u00ad\u0605\u061c\u06dd\u070f\u08e2\u1680\u180e\u200f\u202f\u2064\u206f\u3000\uf8ff\ufeff\ufffb";

        $r3 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r0.<com.google.common.base.CharMatcher$RangesMatcher: void <init>(java.lang.String,char[],char[])>("CharMatcher.invisible()", $r2, $r3);

        return;
    }

com.google.common.base.CharMatcher$Is
<com.google.common.base.CharMatcher$Is: char match>
    void <init>(char)
    {
        com.google.common.base.CharMatcher$Is $r0;
        char $c0;

        $r0 := @this: com.google.common.base.CharMatcher$Is;

        $c0 := @parameter0: char;

        specialinvoke $r0.<com.google.common.base.CharMatcher$FastMatcher: void <init>()>();

        $r0.<com.google.common.base.CharMatcher$Is: char match> = $c0;

        return;
    }

    public java.lang.String toString()
    {
        com.google.common.base.CharMatcher$Is $r0;
        java.lang.StringBuilder $r1;
        char $c0;
        java.lang.String $r2;

        $r0 := @this: com.google.common.base.CharMatcher$Is;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CharMatcher.is(\'");

        $c0 = $r0.<com.google.common.base.CharMatcher$Is: char match>;

        $r2 = staticinvoke <com.google.common.base.CharMatcher: java.lang.String access$100(char)>($c0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

com.google.common.base.CharMatcher$JavaDigit
<com.google.common.base.CharMatcher$JavaDigit: com.google.common.base.CharMatcher$JavaDigit INSTANCE>
    static void <clinit>()
    {
        com.google.common.base.CharMatcher$JavaDigit $r0;

        $r0 = new com.google.common.base.CharMatcher$JavaDigit;

        specialinvoke $r0.<com.google.common.base.CharMatcher$JavaDigit: void <init>()>();

        <com.google.common.base.CharMatcher$JavaDigit: com.google.common.base.CharMatcher$JavaDigit INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.common.base.CharMatcher$JavaDigit $r0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaDigit;

        specialinvoke $r0.<com.google.common.base.CharMatcher: void <init>()>();

        return;
    }

    public boolean matches(char)
    {
        com.google.common.base.CharMatcher$JavaDigit $r0;
        char $c0;
        boolean $z0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaDigit;

        $c0 := @parameter0: char;

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c0);

        return $z0;
    }

    public java.lang.String toString()
    {
        com.google.common.base.CharMatcher$JavaDigit $r0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaDigit;

        return "CharMatcher.javaDigit()";
    }

com.google.common.base.CharMatcher$JavaIsoControl
<com.google.common.base.CharMatcher$JavaIsoControl: com.google.common.base.CharMatcher$JavaIsoControl INSTANCE>
    static void <clinit>()
    {
        com.google.common.base.CharMatcher$JavaIsoControl $r0;

        $r0 = new com.google.common.base.CharMatcher$JavaIsoControl;

        specialinvoke $r0.<com.google.common.base.CharMatcher$JavaIsoControl: void <init>()>();

        <com.google.common.base.CharMatcher$JavaIsoControl: com.google.common.base.CharMatcher$JavaIsoControl INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.common.base.CharMatcher$JavaIsoControl $r0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaIsoControl;

        specialinvoke $r0.<com.google.common.base.CharMatcher$NamedFastMatcher: void <init>(java.lang.String)>("CharMatcher.javaIsoControl()");

        return;
    }

    public boolean matches(char)
    {
        com.google.common.base.CharMatcher$JavaIsoControl $r0;
        char $c0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaIsoControl;

        $c0 := @parameter0: char;

        if $c0 <= 31 goto label1;

        if $c0 < 127 goto label2;

        if $c0 > 159 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

com.google.common.base.CharMatcher$JavaLetter
<com.google.common.base.CharMatcher$JavaLetter: com.google.common.base.CharMatcher$JavaLetter INSTANCE>
    static void <clinit>()
    {
        com.google.common.base.CharMatcher$JavaLetter $r0;

        $r0 = new com.google.common.base.CharMatcher$JavaLetter;

        specialinvoke $r0.<com.google.common.base.CharMatcher$JavaLetter: void <init>()>();

        <com.google.common.base.CharMatcher$JavaLetter: com.google.common.base.CharMatcher$JavaLetter INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.common.base.CharMatcher$JavaLetter $r0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaLetter;

        specialinvoke $r0.<com.google.common.base.CharMatcher: void <init>()>();

        return;
    }

    public boolean matches(char)
    {
        com.google.common.base.CharMatcher$JavaLetter $r0;
        char $c0;
        boolean $z0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaLetter;

        $c0 := @parameter0: char;

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c0);

        return $z0;
    }

    public java.lang.String toString()
    {
        com.google.common.base.CharMatcher$JavaLetter $r0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaLetter;

        return "CharMatcher.javaLetter()";
    }

com.google.common.base.CharMatcher$JavaLetterOrDigit
<com.google.common.base.CharMatcher$JavaLetterOrDigit: com.google.common.base.CharMatcher$JavaLetterOrDigit INSTANCE>
    static void <clinit>()
    {
        com.google.common.base.CharMatcher$JavaLetterOrDigit $r0;

        $r0 = new com.google.common.base.CharMatcher$JavaLetterOrDigit;

        specialinvoke $r0.<com.google.common.base.CharMatcher$JavaLetterOrDigit: void <init>()>();

        <com.google.common.base.CharMatcher$JavaLetterOrDigit: com.google.common.base.CharMatcher$JavaLetterOrDigit INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.common.base.CharMatcher$JavaLetterOrDigit $r0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaLetterOrDigit;

        specialinvoke $r0.<com.google.common.base.CharMatcher: void <init>()>();

        return;
    }

    public boolean matches(char)
    {
        com.google.common.base.CharMatcher$JavaLetterOrDigit $r0;
        char $c0;
        boolean $z0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaLetterOrDigit;

        $c0 := @parameter0: char;

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c0);

        return $z0;
    }

    public java.lang.String toString()
    {
        com.google.common.base.CharMatcher$JavaLetterOrDigit $r0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaLetterOrDigit;

        return "CharMatcher.javaLetterOrDigit()";
    }

com.google.common.base.CharMatcher$JavaLowerCase
<com.google.common.base.CharMatcher$JavaLowerCase: com.google.common.base.CharMatcher$JavaLowerCase INSTANCE>
    static void <clinit>()
    {
        com.google.common.base.CharMatcher$JavaLowerCase $r0;

        $r0 = new com.google.common.base.CharMatcher$JavaLowerCase;

        specialinvoke $r0.<com.google.common.base.CharMatcher$JavaLowerCase: void <init>()>();

        <com.google.common.base.CharMatcher$JavaLowerCase: com.google.common.base.CharMatcher$JavaLowerCase INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.common.base.CharMatcher$JavaLowerCase $r0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaLowerCase;

        specialinvoke $r0.<com.google.common.base.CharMatcher: void <init>()>();

        return;
    }

    public boolean matches(char)
    {
        com.google.common.base.CharMatcher$JavaLowerCase $r0;
        char $c0;
        boolean $z0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaLowerCase;

        $c0 := @parameter0: char;

        $z0 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>($c0);

        return $z0;
    }

    public java.lang.String toString()
    {
        com.google.common.base.CharMatcher$JavaLowerCase $r0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaLowerCase;

        return "CharMatcher.javaLowerCase()";
    }

com.google.common.base.CharMatcher$JavaUpperCase
<com.google.common.base.CharMatcher$JavaUpperCase: com.google.common.base.CharMatcher$JavaUpperCase INSTANCE>
    static void <clinit>()
    {
        com.google.common.base.CharMatcher$JavaUpperCase $r0;

        $r0 = new com.google.common.base.CharMatcher$JavaUpperCase;

        specialinvoke $r0.<com.google.common.base.CharMatcher$JavaUpperCase: void <init>()>();

        <com.google.common.base.CharMatcher$JavaUpperCase: com.google.common.base.CharMatcher$JavaUpperCase INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.common.base.CharMatcher$JavaUpperCase $r0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaUpperCase;

        specialinvoke $r0.<com.google.common.base.CharMatcher: void <init>()>();

        return;
    }

    public boolean matches(char)
    {
        com.google.common.base.CharMatcher$JavaUpperCase $r0;
        char $c0;
        boolean $z0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaUpperCase;

        $c0 := @parameter0: char;

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c0);

        return $z0;
    }

    public java.lang.String toString()
    {
        com.google.common.base.CharMatcher$JavaUpperCase $r0;

        $r0 := @this: com.google.common.base.CharMatcher$JavaUpperCase;

        return "CharMatcher.javaUpperCase()";
    }

com.google.common.base.CharMatcher$NamedFastMatcher
<com.google.common.base.CharMatcher$NamedFastMatcher: java.lang.String description>
    void <init>(java.lang.String)
    {
        com.google.common.base.CharMatcher$NamedFastMatcher $r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        $r0 := @this: com.google.common.base.CharMatcher$NamedFastMatcher;

        $r2 := @parameter0: java.lang.String;

        specialinvoke $r0.<com.google.common.base.CharMatcher$FastMatcher: void <init>()>();

        $r1 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r1;

        $r0.<com.google.common.base.CharMatcher$NamedFastMatcher: java.lang.String description> = $r2;

        return;
    }

    public final java.lang.String toString()
    {
        com.google.common.base.CharMatcher$NamedFastMatcher $r0;
        java.lang.String r1;

        $r0 := @this: com.google.common.base.CharMatcher$NamedFastMatcher;

        r1 = $r0.<com.google.common.base.CharMatcher$NamedFastMatcher: java.lang.String description>;

        return r1;
    }

com.google.common.base.CharMatcher$None
<com.google.common.base.CharMatcher$None: com.google.common.base.CharMatcher$None INSTANCE>
    static void <clinit>()
    {
        com.google.common.base.CharMatcher$None $r0;

        $r0 = new com.google.common.base.CharMatcher$None;

        specialinvoke $r0.<com.google.common.base.CharMatcher$None: void <init>()>();

        <com.google.common.base.CharMatcher$None: com.google.common.base.CharMatcher$None INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.common.base.CharMatcher$None $r0;

        $r0 := @this: com.google.common.base.CharMatcher$None;

        specialinvoke $r0.<com.google.common.base.CharMatcher$NamedFastMatcher: void <init>(java.lang.String)>("CharMatcher.none()");

        return;
    }

com.google.common.base.CharMatcher$RangesMatcher
<com.google.common.base.CharMatcher$RangesMatcher: java.lang.String description>
<com.google.common.base.CharMatcher$RangesMatcher: char[] rangeEnds>
<com.google.common.base.CharMatcher$RangesMatcher: char[] rangeStarts>
    void <init>(java.lang.String, char[], char[])
    {
        com.google.common.base.CharMatcher$RangesMatcher $r0;
        java.lang.String $r1;
        char[] $r2, $r3;
        int $i0, $i1, $i4;
        boolean $z0;
        char $c2, $c3;

        $r0 := @this: com.google.common.base.CharMatcher$RangesMatcher;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: char[];

        $r3 := @parameter2: char[];

        specialinvoke $r0.<com.google.common.base.CharMatcher: void <init>()>();

        $r0.<com.google.common.base.CharMatcher$RangesMatcher: java.lang.String description> = $r1;

        $r0.<com.google.common.base.CharMatcher$RangesMatcher: char[] rangeStarts> = $r2;

        $r0.<com.google.common.base.CharMatcher$RangesMatcher: char[] rangeEnds> = $r3;

        $i0 = lengthof $r2;

        $i1 = lengthof $r3;

        if $i0 != $i1 goto label6;

        $z0 = 1;

     label1:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $i0 = 0;

     label2:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label9;

        $c2 = $r2[$i0];

        $c3 = $r3[$i0];

        if $c2 > $c3 goto label7;

        $z0 = 1;

     label3:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $i1 = $i0 + 1;

        $i4 = lengthof $r2;

        if $i1 >= $i4 goto label5;

        $c2 = $r3[$i0];

        $i1 = $i0 + 1;

        $c3 = $r2[$i1];

        if $c2 >= $c3 goto label8;

        $z0 = 1;

     label4:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

     label5:
        $i0 = $i0 + 1;

        goto label2;

     label6:
        $z0 = 0;

        goto label1;

     label7:
        $z0 = 0;

        goto label3;

     label8:
        $z0 = 0;

        goto label4;

     label9:
        return;
    }

    public boolean matches(char)
    {
        com.google.common.base.CharMatcher$RangesMatcher $r0;
        char $c0, $c2;
        char[] $r1;
        int $i1;

        $r0 := @this: com.google.common.base.CharMatcher$RangesMatcher;

        $c0 := @parameter0: char;

        $r1 = $r0.<com.google.common.base.CharMatcher$RangesMatcher: char[] rangeStarts>;

        $i1 = staticinvoke <java.util.Arrays: int binarySearch(char[],char)>($r1, $c0);

        if $i1 < 0 goto label1;

        return 1;

     label1:
        $i1 = $i1 ^ -1;

        $i1 = $i1 + -1;

        if $i1 < 0 goto label2;

        $r1 = $r0.<com.google.common.base.CharMatcher$RangesMatcher: char[] rangeEnds>;

        $c2 = $r1[$i1];

        if $c0 <= $c2 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    public java.lang.String toString()
    {
        com.google.common.base.CharMatcher$RangesMatcher $r0;
        java.lang.String r1;

        $r0 := @this: com.google.common.base.CharMatcher$RangesMatcher;

        r1 = $r0.<com.google.common.base.CharMatcher$RangesMatcher: java.lang.String description>;

        return r1;
    }

com.google.common.base.CharMatcher$SingleWidth
<com.google.common.base.CharMatcher$SingleWidth: com.google.common.base.CharMatcher$SingleWidth INSTANCE>
    static void <clinit>()
    {
        com.google.common.base.CharMatcher$SingleWidth $r0;

        $r0 = new com.google.common.base.CharMatcher$SingleWidth;

        specialinvoke $r0.<com.google.common.base.CharMatcher$SingleWidth: void <init>()>();

        <com.google.common.base.CharMatcher$SingleWidth: com.google.common.base.CharMatcher$SingleWidth INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        com.google.common.base.CharMatcher$SingleWidth $r0;
        java.lang.String $r1;
        char[] $r2, $r3;

        $r0 := @this: com.google.common.base.CharMatcher$SingleWidth;

        $r1 = "\u0000\u05be\u05d0\u05f3\u0600\u0750\u0e00\u1e00\u2100\ufb50\ufe70\uff61";

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $r1 = "\u04f9\u05be\u05ea\u05f4\u06ff\u077f\u0e7f\u20af\u213a\ufdff\ufeff\uffdc";

        $r3 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r0.<com.google.common.base.CharMatcher$RangesMatcher: void <init>(java.lang.String,char[],char[])>("CharMatcher.singleWidth()", $r2, $r3);

        return;
    }

com.google.common.base.CharMatcher$Whitespace
<com.google.common.base.CharMatcher$Whitespace: com.google.common.base.CharMatcher$Whitespace INSTANCE>
<com.google.common.base.CharMatcher$Whitespace: int SHIFT>
    static void <clinit>()
    {
        java.lang.String $r0;
        int $i0;
        com.google.common.base.CharMatcher$Whitespace $r1;

        $r0 = "\u2002\u3000\r\u0085\u200a\u2005\u2000\u3000\u2029\u000b\u3000\u2008\u2003\u205f\u3000\u1680\t \u2006\u2001\u202f\u00a0\f\u2009\u3000\u2004\u3000\u3000\u2028\n\u2007\u3000";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $i0 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>($i0);

        <com.google.common.base.CharMatcher$Whitespace: int SHIFT> = $i0;

        $r1 = new com.google.common.base.CharMatcher$Whitespace;

        specialinvoke $r1.<com.google.common.base.CharMatcher$Whitespace: void <init>()>();

        <com.google.common.base.CharMatcher$Whitespace: com.google.common.base.CharMatcher$Whitespace INSTANCE> = $r1;

        return;
    }

    void <init>()
    {
        com.google.common.base.CharMatcher$Whitespace $r0;

        $r0 := @this: com.google.common.base.CharMatcher$Whitespace;

        specialinvoke $r0.<com.google.common.base.CharMatcher$NamedFastMatcher: void <init>(java.lang.String)>("CharMatcher.whitespace()");

        return;
    }

