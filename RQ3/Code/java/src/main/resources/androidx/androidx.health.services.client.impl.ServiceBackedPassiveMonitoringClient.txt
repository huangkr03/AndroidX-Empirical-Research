androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient
<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient$Companion Companion>
<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: android.content.Context applicationContext>
<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: androidx.health.services.client.impl.ipc.internal.ConnectionManager connectionManager>
<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: java.lang.String packageName>
<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: java.lang.String CLIENT>
<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: androidx.health.services.client.impl.ipc.ClientConfiguration CLIENT_CONFIGURATION>
    public void <init>(android.content.Context, androidx.health.services.client.impl.ipc.internal.ConnectionManager)
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r0;
        android.content.Context r1, $r6;
        androidx.health.services.client.impl.ipc.internal.ConnectionManager r2;
        androidx.health.services.client.impl.ipc.ClientConfiguration $r3;
        androidx.health.services.client.impl.ipc.Client$ServiceGetter $r4;
        androidx.health.services.client.impl.ipc.RemoteOperation $r5;
        java.lang.String $r7;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.health.services.client.impl.ipc.internal.ConnectionManager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "applicationContext");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "connectionManager");

        $r3 = <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: androidx.health.services.client.impl.ipc.ClientConfiguration CLIENT_CONFIGURATION>;

        $r4 = dynamicinvoke "getService" <androidx.health.services.client.impl.ipc.Client$ServiceGetter ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(android.os.IBinder), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: androidx.health.services.client.impl.IPassiveMonitoringApiService _init_$lambda$0(android.os.IBinder)>, methodtype: androidx.health.services.client.impl.IPassiveMonitoringApiService __METHODTYPE__(android.os.IBinder));

        $r5 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteOperation ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: java.lang.Integer _init_$lambda$1(androidx.health.services.client.impl.IPassiveMonitoringApiService)>, methodtype: java.lang.Integer __METHODTYPE__(androidx.health.services.client.impl.IPassiveMonitoringApiService));

        specialinvoke r0.<androidx.health.services.client.impl.ipc.Client: void <init>(androidx.health.services.client.impl.ipc.ClientConfiguration,androidx.health.services.client.impl.ipc.internal.ConnectionManager,androidx.health.services.client.impl.ipc.Client$ServiceGetter,androidx.health.services.client.impl.ipc.RemoteOperation)>($r3, r2, $r4, $r5);

        r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: android.content.Context applicationContext> = r1;

        r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: androidx.health.services.client.impl.ipc.internal.ConnectionManager connectionManager> = r2;

        $r6 = r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: android.content.Context applicationContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: java.lang.String packageName> = $r7;

        return;
    }

    public void <init>(android.content.Context, androidx.health.services.client.impl.ipc.internal.ConnectionManager, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r0;
        android.content.Context r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        androidx.health.services.client.impl.ipc.internal.ConnectionManager r3;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        r1 := @parameter0: android.content.Context;

        r3 := @parameter1: androidx.health.services.client.impl.ipc.internal.ConnectionManager;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <androidx.health.services.client.impl.internal.HsConnectionManager: androidx.health.services.client.impl.ipc.internal.ConnectionManager getInstance(android.content.Context)>(r1);

     label1:
        specialinvoke r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: void <init>(android.content.Context,androidx.health.services.client.impl.ipc.internal.ConnectionManager)>(r1, r3);

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture setPassiveListenerServiceAsync(java.lang.Class, androidx.health.services.client.data.PassiveListenerConfig)
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r0;
        java.lang.Class r1;
        androidx.health.services.client.data.PassiveListenerConfig r2;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: androidx.health.services.client.data.PassiveListenerConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "service");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "config");

        $r3 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.data.PassiveListenerConfig,androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient,java.lang.Class)>(r2, r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: void setPassiveListenerServiceAsync$lambda$2(androidx.health.services.client.data.PassiveListenerConfig,androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient,java.lang.Class,androidx.health.services.client.impl.IPassiveMonitoringApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IPassiveMonitoringApiService,com.google.common.util.concurrent.SettableFuture));

        $r4 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(androidx.health.services.client.impl.ipc.RemoteFutureOperation,int)>($r3, 4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "executeWithVersionCheck(\u2026piVersion= */ 4\n        )");

        return $r4;
    }

    public void setPassiveListenerCallback(androidx.health.services.client.data.PassiveListenerConfig, androidx.health.services.client.PassiveListenerCallback)
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r0;
        androidx.health.services.client.data.PassiveListenerConfig r1;
        androidx.health.services.client.PassiveListenerCallback r2;
        android.content.Context $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        r1 := @parameter0: androidx.health.services.client.data.PassiveListenerConfig;

        r2 := @parameter1: androidx.health.services.client.PassiveListenerCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "callback");

        $r3 = r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: android.content.Context applicationContext>;

        $r4 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "getMainExecutor(applicationContext)");

        virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: void setPassiveListenerCallback(androidx.health.services.client.data.PassiveListenerConfig,java.util.concurrent.Executor,androidx.health.services.client.PassiveListenerCallback)>(r1, $r4, r2);

        return;
    }

    public void setPassiveListenerCallback(androidx.health.services.client.data.PassiveListenerConfig, java.util.concurrent.Executor, androidx.health.services.client.PassiveListenerCallback)
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r0;
        androidx.health.services.client.data.PassiveListenerConfig r1;
        java.util.concurrent.Executor r2;
        androidx.health.services.client.PassiveListenerCallback r3;
        androidx.health.services.client.impl.PassiveListenerCallbackStub r4;
        com.google.common.util.concurrent.ListenableFuture r5;
        java.lang.String $r6;
        androidx.health.services.client.impl.PassiveListenerCallbackStub$PassiveListenerCallbackCache $r7;
        androidx.health.services.client.impl.ipc.internal.ListenerKey $r8;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r9;
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient$setPassiveListenerCallback$1 $r10;
        com.google.common.util.concurrent.FutureCallback $r11;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        r1 := @parameter0: androidx.health.services.client.data.PassiveListenerConfig;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.health.services.client.PassiveListenerCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "callback");

        $r7 = <androidx.health.services.client.impl.PassiveListenerCallbackStub$PassiveListenerCallbackCache: androidx.health.services.client.impl.PassiveListenerCallbackStub$PassiveListenerCallbackCache INSTANCE>;

        $r6 = r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "packageName");

        r4 = virtualinvoke $r7.<androidx.health.services.client.impl.PassiveListenerCallbackStub$PassiveListenerCallbackCache: androidx.health.services.client.impl.PassiveListenerCallbackStub getOrCreate(java.lang.String,java.util.concurrent.Executor,androidx.health.services.client.PassiveListenerCallback)>($r6, r2, r3);

        $r8 = virtualinvoke r4.<androidx.health.services.client.impl.PassiveListenerCallbackStub: androidx.health.services.client.impl.ipc.internal.ListenerKey getListenerKey()>();

        $r9 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.data.PassiveListenerConfig,androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient,androidx.health.services.client.impl.PassiveListenerCallbackStub)>(r1, r0, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: void setPassiveListenerCallback$lambda$3(androidx.health.services.client.data.PassiveListenerConfig,androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient,androidx.health.services.client.impl.PassiveListenerCallbackStub,androidx.health.services.client.impl.IPassiveMonitoringApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IPassiveMonitoringApiService,com.google.common.util.concurrent.SettableFuture));

        r5 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: com.google.common.util.concurrent.ListenableFuture registerListener(androidx.health.services.client.impl.ipc.internal.ListenerKey,androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r8, $r9);

        $r10 = new androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient$setPassiveListenerCallback$1;

        specialinvoke $r10.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient$setPassiveListenerCallback$1: void <init>(androidx.health.services.client.PassiveListenerCallback)>(r3);

        $r11 = (com.google.common.util.concurrent.FutureCallback) $r10;

        staticinvoke <com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)>(r5, $r11, r2);

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture clearPassiveListenerServiceAsync()
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r0;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        $r1 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: void clearPassiveListenerServiceAsync$lambda$4(androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient,androidx.health.services.client.impl.IPassiveMonitoringApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IPassiveMonitoringApiService,com.google.common.util.concurrent.SettableFuture));

        $r2 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(androidx.health.services.client.impl.ipc.RemoteFutureOperation,int)>($r1, 4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "executeWithVersionCheck(\u2026piVersion= */ 4\n        )");

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture clearPassiveListenerCallbackAsync()
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r0;
        androidx.health.services.client.impl.PassiveListenerCallbackStub r1;
        java.lang.String $r2;
        androidx.health.services.client.impl.PassiveListenerCallbackStub$PassiveListenerCallbackCache $r3;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r4, $r7;
        com.google.common.util.concurrent.ListenableFuture $r5, $r8;
        androidx.health.services.client.impl.ipc.internal.ListenerKey $r6;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        $r3 = <androidx.health.services.client.impl.PassiveListenerCallbackStub$PassiveListenerCallbackCache: androidx.health.services.client.impl.PassiveListenerCallbackStub$PassiveListenerCallbackCache INSTANCE>;

        $r2 = r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "packageName");

        r1 = virtualinvoke $r3.<androidx.health.services.client.impl.PassiveListenerCallbackStub$PassiveListenerCallbackCache: androidx.health.services.client.impl.PassiveListenerCallbackStub remove(java.lang.String)>($r2);

        if r1 == null goto label1;

        $r6 = virtualinvoke r1.<androidx.health.services.client.impl.PassiveListenerCallbackStub: androidx.health.services.client.impl.ipc.internal.ListenerKey getListenerKey()>();

        $r7 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: void clearPassiveListenerCallbackAsync$lambda$5(androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient,androidx.health.services.client.impl.IPassiveMonitoringApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IPassiveMonitoringApiService,com.google.common.util.concurrent.SettableFuture));

        $r8 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: com.google.common.util.concurrent.ListenableFuture unregisterListener(androidx.health.services.client.impl.ipc.internal.ListenerKey,androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r6, $r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "unregisterListener(callb\u2026ultFuture))\n            }");

        return $r8;

     label1:
        $r4 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: void clearPassiveListenerCallbackAsync$lambda$6(androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient,androidx.health.services.client.impl.IPassiveMonitoringApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IPassiveMonitoringApiService,com.google.common.util.concurrent.SettableFuture));

        $r5 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: com.google.common.util.concurrent.ListenableFuture executeWithVersionCheck(androidx.health.services.client.impl.ipc.RemoteFutureOperation,int)>($r4, 4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "executeWithVersionCheck(\u2026piVersion= */ 4\n        )");

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture flushAsync()
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r0;
        androidx.health.services.client.impl.request.FlushRequest r1, $r2;
        java.lang.String $r3;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        $r2 = new androidx.health.services.client.impl.request.FlushRequest;

        $r3 = r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "packageName");

        specialinvoke $r2.<androidx.health.services.client.impl.request.FlushRequest: void <init>(java.lang.String)>($r3);

        r1 = $r2;

        $r4 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.request.FlushRequest)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: void flushAsync$lambda$7(androidx.health.services.client.impl.request.FlushRequest,androidx.health.services.client.impl.IPassiveMonitoringApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IPassiveMonitoringApiService,com.google.common.util.concurrent.SettableFuture));

        $r5 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "execute { service, resul\u2026(resultFuture))\n        }");

        return $r5;
    }

    public com.google.common.util.concurrent.ListenableFuture getCapabilitiesAsync()
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r0;
        com.google.common.util.concurrent.ListenableFuture r1, $r3;
        androidx.health.services.client.impl.ipc.RemoteOperation $r2;
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient$getCapabilitiesAsync$2 $r4;
        kotlin.jvm.functions.Function1 $r5;
        com.google.common.base.Function $r6;
        android.content.Context $r7;
        java.util.concurrent.Executor $r8;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        $r2 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteOperation (androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: androidx.health.services.client.impl.response.PassiveMonitoringCapabilitiesResponse getCapabilitiesAsync$lambda$8(androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient,androidx.health.services.client.impl.IPassiveMonitoringApiService)>, methodtype: androidx.health.services.client.impl.response.PassiveMonitoringCapabilitiesResponse __METHODTYPE__(androidx.health.services.client.impl.IPassiveMonitoringApiService));

        $r3 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteOperation)>($r2);

        $r4 = <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient$getCapabilitiesAsync$2: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient$getCapabilitiesAsync$2 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = dynamicinvoke "apply" <com.google.common.base.Function (kotlin.jvm.functions.Function1)>($r5) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: androidx.health.services.client.data.PassiveMonitoringCapabilities getCapabilitiesAsync$lambda$9(kotlin.jvm.functions.Function1,java.lang.Object)>, methodtype: androidx.health.services.client.data.PassiveMonitoringCapabilities __METHODTYPE__(java.lang.Object));

        $r7 = r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: android.content.Context applicationContext>;

        $r8 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r7);

        r1 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor)>($r3, $r6, $r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "transform(\n            e\u2026icationContext)\n        )");

        return r1;
    }

    private static final androidx.health.services.client.impl.IPassiveMonitoringApiService _init_$lambda$0(android.os.IBinder)
    {
        android.os.IBinder r0;
        androidx.health.services.client.impl.IPassiveMonitoringApiService $r1;

        r0 := @parameter0: android.os.IBinder;

        $r1 = staticinvoke <androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: androidx.health.services.client.impl.IPassiveMonitoringApiService asInterface(android.os.IBinder)>(r0);

        return $r1;
    }

    private static final java.lang.Integer _init_$lambda$1(androidx.health.services.client.impl.IPassiveMonitoringApiService)
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @parameter0: androidx.health.services.client.impl.IPassiveMonitoringApiService;

        $i0 = interfaceinvoke r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService: int getApiVersion()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    private static final void setPassiveListenerServiceAsync$lambda$2(androidx.health.services.client.data.PassiveListenerConfig, androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient, java.lang.Class, androidx.health.services.client.impl.IPassiveMonitoringApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.data.PassiveListenerConfig $r0;
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r1;
        java.lang.Class $r2;
        androidx.health.services.client.impl.IPassiveMonitoringApiService r3;
        com.google.common.util.concurrent.SettableFuture r4;
        boolean $z0;
        androidx.health.services.client.HealthServicesException $r5;
        java.lang.Throwable $r6;
        androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest $r7;
        java.lang.String $r8, $r9;
        androidx.health.services.client.impl.internal.StatusCallback $r10;
        androidx.health.services.client.impl.internal.IStatusCallback $r11;

        $r0 := @parameter0: androidx.health.services.client.data.PassiveListenerConfig;

        r1 := @parameter1: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        $r2 := @parameter2: java.lang.Class;

        r3 := @parameter3: androidx.health.services.client.impl.IPassiveMonitoringApiService;

        r4 := @parameter4: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "$service");

        $z0 = virtualinvoke $r0.<androidx.health.services.client.data.PassiveListenerConfig: boolean isValidPassiveGoal$health_services_client_release()>();

        if $z0 == 0 goto label1;

        $r7 = new androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest;

        $r8 = r1.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "packageName");

        $r9 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "service.name");

        specialinvoke $r7.<androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest: void <init>(java.lang.String,java.lang.String,androidx.health.services.client.data.PassiveListenerConfig)>($r8, $r9, $r0);

        $r10 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r4, "resultFuture");

        specialinvoke $r10.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r4);

        $r11 = (androidx.health.services.client.impl.internal.IStatusCallback) $r10;

        interfaceinvoke r3.<androidx.health.services.client.impl.IPassiveMonitoringApiService: void registerPassiveListenerService(androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest,androidx.health.services.client.impl.internal.IStatusCallback)>($r7, $r11);

        goto label2;

     label1:
        $r5 = new androidx.health.services.client.HealthServicesException;

        specialinvoke $r5.<androidx.health.services.client.HealthServicesException: void <init>(java.lang.String)>("DataType for the requested passive goal is not tracked");

        $r6 = (java.lang.Throwable) $r5;

        virtualinvoke r4.<com.google.common.util.concurrent.SettableFuture: boolean setException(java.lang.Throwable)>($r6);

     label2:
        return;
    }

    private static final void setPassiveListenerCallback$lambda$3(androidx.health.services.client.data.PassiveListenerConfig, androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient, androidx.health.services.client.impl.PassiveListenerCallbackStub, androidx.health.services.client.impl.IPassiveMonitoringApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.data.PassiveListenerConfig $r0;
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r1;
        androidx.health.services.client.impl.PassiveListenerCallbackStub $r2;
        androidx.health.services.client.impl.IPassiveMonitoringApiService r3;
        com.google.common.util.concurrent.SettableFuture r4;
        boolean $z0;
        androidx.health.services.client.HealthServicesException $r5;
        java.lang.Throwable $r6;
        androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest $r7;
        java.lang.String $r8;
        androidx.health.services.client.impl.internal.StatusCallback $r9;
        androidx.health.services.client.impl.IPassiveListenerCallback $r10;
        androidx.health.services.client.impl.internal.IStatusCallback $r11;

        $r0 := @parameter0: androidx.health.services.client.data.PassiveListenerConfig;

        r1 := @parameter1: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        $r2 := @parameter2: androidx.health.services.client.impl.PassiveListenerCallbackStub;

        r3 := @parameter3: androidx.health.services.client.impl.IPassiveMonitoringApiService;

        r4 := @parameter4: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$config");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "$callbackStub");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "result");

        $z0 = virtualinvoke $r0.<androidx.health.services.client.data.PassiveListenerConfig: boolean isValidPassiveGoal$health_services_client_release()>();

        if $z0 == 0 goto label1;

        $r7 = new androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest;

        $r8 = r1.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "packageName");

        specialinvoke $r7.<androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest: void <init>(java.lang.String,androidx.health.services.client.data.PassiveListenerConfig)>($r8, $r0);

        $r10 = (androidx.health.services.client.impl.IPassiveListenerCallback) $r2;

        $r9 = new androidx.health.services.client.impl.internal.StatusCallback;

        specialinvoke $r9.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r4);

        $r11 = (androidx.health.services.client.impl.internal.IStatusCallback) $r9;

        interfaceinvoke r3.<androidx.health.services.client.impl.IPassiveMonitoringApiService: void registerPassiveListenerCallback(androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest,androidx.health.services.client.impl.IPassiveListenerCallback,androidx.health.services.client.impl.internal.IStatusCallback)>($r7, $r10, $r11);

        goto label2;

     label1:
        $r5 = new androidx.health.services.client.HealthServicesException;

        specialinvoke $r5.<androidx.health.services.client.HealthServicesException: void <init>(java.lang.String)>("DataType for the requested passive goal is not tracked");

        $r6 = (java.lang.Throwable) $r5;

        virtualinvoke r4.<com.google.common.util.concurrent.SettableFuture: boolean setException(java.lang.Throwable)>($r6);

     label2:
        return;
    }

    private static final void clearPassiveListenerServiceAsync$lambda$4(androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient, androidx.health.services.client.impl.IPassiveMonitoringApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r0;
        androidx.health.services.client.impl.IPassiveMonitoringApiService r1;
        com.google.common.util.concurrent.SettableFuture r2;
        androidx.health.services.client.impl.internal.StatusCallback $r3;
        java.lang.String $r4;
        androidx.health.services.client.impl.internal.IStatusCallback $r5;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        r1 := @parameter1: androidx.health.services.client.impl.IPassiveMonitoringApiService;

        r2 := @parameter2: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r4 = r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: java.lang.String packageName>;

        $r3 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "resultFuture");

        specialinvoke $r3.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r2);

        $r5 = (androidx.health.services.client.impl.internal.IStatusCallback) $r3;

        interfaceinvoke r1.<androidx.health.services.client.impl.IPassiveMonitoringApiService: void unregisterPassiveListenerService(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>($r4, $r5);

        return;
    }

    private static final void clearPassiveListenerCallbackAsync$lambda$5(androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient, androidx.health.services.client.impl.IPassiveMonitoringApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r0;
        androidx.health.services.client.impl.IPassiveMonitoringApiService r1;
        com.google.common.util.concurrent.SettableFuture r2;
        androidx.health.services.client.impl.internal.StatusCallback $r3;
        java.lang.String $r4;
        androidx.health.services.client.impl.internal.IStatusCallback $r5;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        r1 := @parameter1: androidx.health.services.client.impl.IPassiveMonitoringApiService;

        r2 := @parameter2: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r4 = r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: java.lang.String packageName>;

        $r3 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "resultFuture");

        specialinvoke $r3.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r2);

        $r5 = (androidx.health.services.client.impl.internal.IStatusCallback) $r3;

        interfaceinvoke r1.<androidx.health.services.client.impl.IPassiveMonitoringApiService: void unregisterPassiveListenerCallback(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>($r4, $r5);

        return;
    }

    private static final void clearPassiveListenerCallbackAsync$lambda$6(androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient, androidx.health.services.client.impl.IPassiveMonitoringApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r0;
        androidx.health.services.client.impl.IPassiveMonitoringApiService r1;
        com.google.common.util.concurrent.SettableFuture r2;
        androidx.health.services.client.impl.internal.StatusCallback $r3;
        java.lang.String $r4;
        androidx.health.services.client.impl.internal.IStatusCallback $r5;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        r1 := @parameter1: androidx.health.services.client.impl.IPassiveMonitoringApiService;

        r2 := @parameter2: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r4 = r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: java.lang.String packageName>;

        $r3 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "resultFuture");

        specialinvoke $r3.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r2);

        $r5 = (androidx.health.services.client.impl.internal.IStatusCallback) $r3;

        interfaceinvoke r1.<androidx.health.services.client.impl.IPassiveMonitoringApiService: void unregisterPassiveListenerCallback(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>($r4, $r5);

        return;
    }

    private static final void flushAsync$lambda$7(androidx.health.services.client.impl.request.FlushRequest, androidx.health.services.client.impl.IPassiveMonitoringApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.request.FlushRequest $r0;
        androidx.health.services.client.impl.IPassiveMonitoringApiService r1;
        com.google.common.util.concurrent.SettableFuture r2;
        androidx.health.services.client.impl.internal.StatusCallback $r3;
        androidx.health.services.client.impl.internal.IStatusCallback $r4;

        $r0 := @parameter0: androidx.health.services.client.impl.request.FlushRequest;

        r1 := @parameter1: androidx.health.services.client.impl.IPassiveMonitoringApiService;

        r2 := @parameter2: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$request");

        $r3 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "resultFuture");

        specialinvoke $r3.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r2);

        $r4 = (androidx.health.services.client.impl.internal.IStatusCallback) $r3;

        interfaceinvoke r1.<androidx.health.services.client.impl.IPassiveMonitoringApiService: void flush(androidx.health.services.client.impl.request.FlushRequest,androidx.health.services.client.impl.internal.IStatusCallback)>($r0, $r4);

        return;
    }

    private static final androidx.health.services.client.impl.response.PassiveMonitoringCapabilitiesResponse getCapabilitiesAsync$lambda$8(androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient, androidx.health.services.client.impl.IPassiveMonitoringApiService)
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient r0;
        androidx.health.services.client.impl.IPassiveMonitoringApiService r1;
        androidx.health.services.client.impl.request.CapabilitiesRequest $r2;
        java.lang.String $r3;
        androidx.health.services.client.impl.response.PassiveMonitoringCapabilitiesResponse $r4;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient;

        r1 := @parameter1: androidx.health.services.client.impl.IPassiveMonitoringApiService;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r2 = new androidx.health.services.client.impl.request.CapabilitiesRequest;

        $r3 = r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: java.lang.String packageName>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "packageName");

        specialinvoke $r2.<androidx.health.services.client.impl.request.CapabilitiesRequest: void <init>(java.lang.String)>($r3);

        $r4 = interfaceinvoke r1.<androidx.health.services.client.impl.IPassiveMonitoringApiService: androidx.health.services.client.impl.response.PassiveMonitoringCapabilitiesResponse getCapabilities(androidx.health.services.client.impl.request.CapabilitiesRequest)>($r2);

        return $r4;
    }

    private static final androidx.health.services.client.data.PassiveMonitoringCapabilities getCapabilitiesAsync$lambda$9(kotlin.jvm.functions.Function1, java.lang.Object)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object r1, $r2;
        androidx.health.services.client.data.PassiveMonitoringCapabilities $r3;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$tmp0");

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r3 = (androidx.health.services.client.data.PassiveMonitoringCapabilities) $r2;

        return $r3;
    }

    public static final androidx.health.services.client.impl.ipc.ClientConfiguration access$getCLIENT_CONFIGURATION$cp()
    {
        androidx.health.services.client.impl.ipc.ClientConfiguration $r0;

        $r0 = <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: androidx.health.services.client.impl.ipc.ClientConfiguration CLIENT_CONFIGURATION>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient$Companion $r0;
        androidx.health.services.client.impl.ipc.ClientConfiguration $r1;

        $r0 = new androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient$Companion;

        specialinvoke $r0.<androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient$Companion Companion> = $r0;

        $r1 = new androidx.health.services.client.impl.ipc.ClientConfiguration;

        specialinvoke $r1.<androidx.health.services.client.impl.ipc.ClientConfiguration: void <init>(java.lang.String,java.lang.String,java.lang.String)>("HealthServicesPassiveMonitoringClient", "com.google.android.wearable.healthservices", "hs.passiveclient.BIND");

        <androidx.health.services.client.impl.ServiceBackedPassiveMonitoringClient: androidx.health.services.client.impl.ipc.ClientConfiguration CLIENT_CONFIGURATION> = $r1;

        return;
    }

