androidx.room.compiler.processing.javac.JavacConstructorElement
<androidx.room.compiler.processing.javac.JavacConstructorElement: kotlin.Lazy typeParameters$delegate>
<androidx.room.compiler.processing.javac.JavacConstructorElement: kotlin.Lazy parameters$delegate>
<androidx.room.compiler.processing.javac.JavacConstructorElement: kotlin.Lazy executableType$delegate>
<androidx.room.compiler.processing.javac.JavacConstructorElement: kotlin.Lazy kotlinMetadata$delegate>
    public void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, javax.lang.model.element.ExecutableElement)
    {
        androidx.room.compiler.processing.javac.JavacConstructorElement r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        javax.lang.model.element.ExecutableElement r2;
        javax.lang.model.element.ElementKind $r3, $r4;
        androidx.room.compiler.processing.javac.JavacConstructorElement$typeParameters$2 $r5;
        kotlin.jvm.functions.Function0 $r6, $r9, $r12, $r15;
        kotlin.Lazy $r7, $r10, $r13, $r16;
        androidx.room.compiler.processing.javac.JavacConstructorElement$parameters$2 $r8;
        androidx.room.compiler.processing.javac.JavacConstructorElement$executableType$2 $r11;
        androidx.room.compiler.processing.javac.JavacConstructorElement$kotlinMetadata$2 $r14;
        java.lang.StringBuilder $r17, $r18, $r19;
        java.lang.IllegalStateException $r20;
        java.lang.String $r21, $r22;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorElement;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: javax.lang.model.element.ExecutableElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "element");

        specialinvoke r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.element.ExecutableElement)>(r1, r2);

        $r3 = interfaceinvoke r2.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.ElementKind getKind()>();

        $r4 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind CONSTRUCTOR>;

        if $r3 != $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constructor element is constructed with invalid type: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = new java.lang.IllegalStateException;

        $r21 = virtualinvoke $r22.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r20;

     label3:
        $r5 = new androidx.room.compiler.processing.javac.JavacConstructorElement$typeParameters$2;

        specialinvoke $r5.<androidx.room.compiler.processing.javac.JavacConstructorElement$typeParameters$2: void <init>(javax.lang.model.element.ExecutableElement,androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacConstructorElement)>(r2, r1, r0);

        $r6 = (kotlin.jvm.functions.Function0) $r5;

        $r7 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r6);

        r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: kotlin.Lazy typeParameters$delegate> = $r7;

        $r8 = new androidx.room.compiler.processing.javac.JavacConstructorElement$parameters$2;

        specialinvoke $r8.<androidx.room.compiler.processing.javac.JavacConstructorElement$parameters$2: void <init>(javax.lang.model.element.ExecutableElement,androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacConstructorElement)>(r2, r1, r0);

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        $r10 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r9);

        r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: kotlin.Lazy parameters$delegate> = $r10;

        $r11 = new androidx.room.compiler.processing.javac.JavacConstructorElement$executableType$2;

        specialinvoke $r11.<androidx.room.compiler.processing.javac.JavacConstructorElement$executableType$2: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacConstructorElement,javax.lang.model.element.ExecutableElement)>(r1, r0, r2);

        $r12 = (kotlin.jvm.functions.Function0) $r11;

        $r13 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r12);

        r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: kotlin.Lazy executableType$delegate> = $r13;

        $r14 = new androidx.room.compiler.processing.javac.JavacConstructorElement$kotlinMetadata$2;

        specialinvoke $r14.<androidx.room.compiler.processing.javac.JavacConstructorElement$kotlinMetadata$2: void <init>(androidx.room.compiler.processing.javac.JavacConstructorElement,javax.lang.model.element.ExecutableElement)>(r0, r2);

        $r15 = (kotlin.jvm.functions.Function0) $r14;

        $r16 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r15);

        r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: kotlin.Lazy kotlinMetadata$delegate> = $r16;

        return;
    }

    public java.lang.String getName()
    {
        androidx.room.compiler.processing.javac.JavacConstructorElement r0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorElement;

        return "<init>";
    }

    public java.util.List getTypeParameters()
    {
        androidx.room.compiler.processing.javac.JavacConstructorElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: kotlin.Lazy typeParameters$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public java.util.List getParameters()
    {
        androidx.room.compiler.processing.javac.JavacConstructorElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: kotlin.Lazy parameters$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.XConstructorType getExecutableType()
    {
        androidx.room.compiler.processing.javac.JavacConstructorElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.XConstructorType $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: kotlin.Lazy executableType$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.XConstructorType) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.XConstructorType asMemberOf(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.javac.JavacConstructorElement r0;
        androidx.room.compiler.processing.XType r1;
        javax.lang.model.type.TypeMirror r2;
        boolean $z0, $z1;
        androidx.room.compiler.processing.javac.JavacTypeElement $r3;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r4, $r7;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r5, $r12;
        javax.lang.model.util.Types $r6;
        javax.lang.model.type.DeclaredType $r8;
        javax.lang.model.element.ExecutableElement $r9;
        javax.lang.model.element.Element $r10;
        androidx.room.compiler.processing.javac.JavacConstructorType $r11;
        javax.lang.model.type.ExecutableType $r13;
        androidx.room.compiler.processing.XConstructorType $r14;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorElement;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacDeclaredType;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: androidx.room.compiler.processing.javac.JavacTypeElement getEnclosingElement()>();

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacDeclaredType getType()>();

        $z1 = virtualinvoke $r4.<androidx.room.compiler.processing.javac.JavacDeclaredType: boolean isSameType(androidx.room.compiler.processing.XType)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $r14 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: androidx.room.compiler.processing.XConstructorType getExecutableType()>();

        goto label3;

     label2:
        $r5 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r6 = virtualinvoke $r5.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types getTypeUtils()>();

        $r7 = (androidx.room.compiler.processing.javac.JavacDeclaredType) r1;

        $r8 = virtualinvoke $r7.<androidx.room.compiler.processing.javac.JavacDeclaredType: javax.lang.model.type.DeclaredType getTypeMirror()>();

        $r9 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: javax.lang.model.element.ExecutableElement getElement()>();

        $r10 = (javax.lang.model.element.Element) $r9;

        r2 = interfaceinvoke $r6.<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror asMemberOf(javax.lang.model.type.DeclaredType,javax.lang.model.element.Element)>($r8, $r10);

        $r11 = new androidx.room.compiler.processing.javac.JavacConstructorType;

        $r12 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r13 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ExecutableType asExecutable(javax.lang.model.type.TypeMirror)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "asExecutable(asMemberOf)");

        specialinvoke $r11.<androidx.room.compiler.processing.javac.JavacConstructorType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacConstructorElement,javax.lang.model.type.ExecutableType)>($r12, r0, $r13);

        $r14 = (androidx.room.compiler.processing.XConstructorType) $r11;

     label3:
        return $r14;
    }

    public androidx.room.compiler.processing.javac.kotlin.KmConstructor getKotlinMetadata()
    {
        androidx.room.compiler.processing.javac.JavacConstructorElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.javac.kotlin.KmConstructor $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: kotlin.Lazy kotlinMetadata$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.javac.kotlin.KmConstructor) $r2;

        return $r3;
    }

    public volatile androidx.room.compiler.processing.XExecutableType getExecutableType()
    {
        androidx.room.compiler.processing.javac.JavacConstructorElement r0;
        androidx.room.compiler.processing.XConstructorType $r1;
        androidx.room.compiler.processing.XExecutableType $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: androidx.room.compiler.processing.XConstructorType getExecutableType()>();

        $r2 = (androidx.room.compiler.processing.XExecutableType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XExecutableType asMemberOf(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.javac.JavacConstructorElement r0;
        androidx.room.compiler.processing.XType r1;
        androidx.room.compiler.processing.XConstructorType $r2;
        androidx.room.compiler.processing.XExecutableType $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorElement;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: androidx.room.compiler.processing.XConstructorType asMemberOf(androidx.room.compiler.processing.XType)>(r1);

        $r3 = (androidx.room.compiler.processing.XExecutableType) $r2;

        return $r3;
    }

    public volatile androidx.room.compiler.processing.javac.kotlin.KmExecutable getKotlinMetadata()
    {
        androidx.room.compiler.processing.javac.JavacConstructorElement r0;
        androidx.room.compiler.processing.javac.kotlin.KmConstructor $r1;
        androidx.room.compiler.processing.javac.kotlin.KmExecutable $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: androidx.room.compiler.processing.javac.kotlin.KmConstructor getKotlinMetadata()>();

        $r2 = (androidx.room.compiler.processing.javac.kotlin.KmExecutable) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XTypeElement getEnclosingElement()
    {
        androidx.room.compiler.processing.javac.JavacConstructorElement r0;
        androidx.room.compiler.processing.javac.JavacTypeElement $r1;
        androidx.room.compiler.processing.XTypeElement $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacConstructorElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacConstructorElement: androidx.room.compiler.processing.javac.JavacTypeElement getEnclosingElement()>();

        $r2 = (androidx.room.compiler.processing.XTypeElement) $r1;

        return $r2;
    }

