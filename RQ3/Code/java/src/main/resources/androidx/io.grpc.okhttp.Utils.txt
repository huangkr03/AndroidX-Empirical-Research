io.grpc.okhttp.Utils
<io.grpc.okhttp.Utils: java.util.logging.Logger log>
    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lio/grpc/okhttp/Utils;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <io.grpc.okhttp.Utils: java.util.logging.Logger log> = $r2;

        return;
    }

    private void <init>()
    {
        io.grpc.okhttp.Utils $r0;

        $r0 := @this: io.grpc.okhttp.Utils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static io.grpc.Metadata convertHeaders(java.util.List)
    {
        java.util.List $r0;
        byte[][] $r1;
        io.grpc.Metadata $r2;

        $r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <io.grpc.okhttp.Utils: byte[][] convertHeadersToArray(java.util.List)>($r0);

        $r2 = staticinvoke <io.grpc.InternalMetadata: io.grpc.Metadata newMetadata(byte[][])>($r1);

        return $r2;
    }

    private static byte[][] convertHeadersToArray(java.util.List)
    {
        int $i0, $i1;
        java.util.List $r0;
        byte[][] $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        io.grpc.okhttp.internal.framed.Header $r4;
        okio.ByteString $r5;
        byte[] $r6;

        $r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i0 = $i0 + $i0;

        $r1 = newarray (byte[])[$i0];

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

        $i1 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (io.grpc.okhttp.internal.framed.Header) $r3;

        $i0 = $i1 + 1;

        $r5 = $r4.<io.grpc.okhttp.internal.framed.Header: okio.ByteString name>;

        $r6 = virtualinvoke $r5.<okio.ByteString: byte[] toByteArray()>();

        $r1[$i1] = $r6;

        $i1 = $i0 + 1;

        $r5 = $r4.<io.grpc.okhttp.internal.framed.Header: okio.ByteString value>;

        $r6 = virtualinvoke $r5.<okio.ByteString: byte[] toByteArray()>();

        $r1[$i0] = $r6;

        goto label1;

     label2:
        $r1 = staticinvoke <io.grpc.internal.TransportFrameUtil: byte[][] toRawSerializedHeaders(byte[][])>($r1);

        return $r1;
    }

    public static io.grpc.Metadata convertTrailers(java.util.List)
    {
        java.util.List $r0;
        byte[][] $r1;
        io.grpc.Metadata $r2;

        $r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <io.grpc.okhttp.Utils: byte[][] convertHeadersToArray(java.util.List)>($r0);

        $r2 = staticinvoke <io.grpc.InternalMetadata: io.grpc.Metadata newMetadata(byte[][])>($r1);

        return $r2;
    }

