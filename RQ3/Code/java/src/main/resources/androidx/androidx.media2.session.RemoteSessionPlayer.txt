androidx.media2.session.RemoteSessionPlayer
<androidx.media2.session.RemoteSessionPlayer: int VOLUME_CONTROL_FIXED>
<androidx.media2.session.RemoteSessionPlayer: int VOLUME_CONTROL_RELATIVE>
<androidx.media2.session.RemoteSessionPlayer: int VOLUME_CONTROL_ABSOLUTE>
    public void <init>()
    {
        androidx.media2.session.RemoteSessionPlayer r0;

        r0 := @this: androidx.media2.session.RemoteSessionPlayer;

        specialinvoke r0.<androidx.media2.common.SessionPlayer: void <init>()>();

        return;
    }

<androidx.media2.session.RemoteSessionPlayer: java.util.concurrent.Future adjustVolume(int)>
<androidx.media2.session.RemoteSessionPlayer: java.util.concurrent.Future setVolume(int)>
<androidx.media2.session.RemoteSessionPlayer: int getVolume()>
<androidx.media2.session.RemoteSessionPlayer: int getMaxVolume()>
<androidx.media2.session.RemoteSessionPlayer: int getVolumeControlType()>
androidx.media2.session.RemoteSessionPlayer$Callback
    public void <init>()
    {
        androidx.media2.session.RemoteSessionPlayer$Callback r0;

        r0 := @this: androidx.media2.session.RemoteSessionPlayer$Callback;

        specialinvoke r0.<androidx.media2.common.SessionPlayer$PlayerCallback: void <init>()>();

        return;
    }

    public void onVolumeChanged(androidx.media2.session.RemoteSessionPlayer, int)
    {
        androidx.media2.session.RemoteSessionPlayer$Callback r0;
        androidx.media2.session.RemoteSessionPlayer r1;
        int i0;

        r0 := @this: androidx.media2.session.RemoteSessionPlayer$Callback;

        r1 := @parameter0: androidx.media2.session.RemoteSessionPlayer;

        i0 := @parameter1: int;

        return;
    }

androidx.media2.session.RemoteSessionPlayer$VolumeControlType
