androidx.slice.SliceViewManagerWrapper
<androidx.slice.SliceViewManagerWrapper: android.support.v4.util.ArrayMap mCachedSuspendFlags>
<androidx.slice.SliceViewManagerWrapper: android.support.v4.util.ArrayMap mCachedAuthorities>
<androidx.slice.SliceViewManagerWrapper: android.app.slice.SliceManager mManager>
<androidx.slice.SliceViewManagerWrapper: java.util.Set mSpecs>
    void <init>(android.content.Context)
    {
        androidx.slice.SliceViewManagerWrapper r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.app.slice.SliceManager $r3;

        r0 := @this: androidx.slice.SliceViewManagerWrapper;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/app/slice/SliceManager;");

        $r3 = (android.app.slice.SliceManager) $r2;

        specialinvoke r0.<androidx.slice.SliceViewManagerWrapper: void <init>(android.content.Context,android.app.slice.SliceManager)>(r1, $r3);

        return;
    }

    void <init>(android.content.Context, android.app.slice.SliceManager)
    {
        androidx.slice.SliceViewManagerWrapper r0;
        android.content.Context r1;
        android.app.slice.SliceManager r2;
        android.support.v4.util.ArrayMap $r3, $r4;
        java.util.Set $r5, $r6;

        r0 := @this: androidx.slice.SliceViewManagerWrapper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.app.slice.SliceManager;

        specialinvoke r0.<androidx.slice.SliceViewManagerBase: void <init>(android.content.Context)>(r1);

        $r3 = new android.support.v4.util.ArrayMap;

        specialinvoke $r3.<android.support.v4.util.ArrayMap: void <init>()>();

        r0.<androidx.slice.SliceViewManagerWrapper: android.support.v4.util.ArrayMap mCachedSuspendFlags> = $r3;

        $r4 = new android.support.v4.util.ArrayMap;

        specialinvoke $r4.<android.support.v4.util.ArrayMap: void <init>()>();

        r0.<androidx.slice.SliceViewManagerWrapper: android.support.v4.util.ArrayMap mCachedAuthorities> = $r4;

        r0.<androidx.slice.SliceViewManagerWrapper: android.app.slice.SliceManager mManager> = r2;

        $r5 = <androidx.slice.widget.SliceLiveData: java.util.Set SUPPORTED_SPECS>;

        $r6 = staticinvoke <androidx.slice.SliceConvert: java.util.Set unwrap(java.util.Set)>($r5);

        r0.<androidx.slice.SliceViewManagerWrapper: java.util.Set mSpecs> = $r6;

        return;
    }

    public void pinSlice(android.net.Uri)
    {
        androidx.slice.SliceViewManagerWrapper r0;
        android.net.Uri r1;
        java.util.Set $r2;
        android.app.slice.SliceManager $r3;

        r0 := @this: androidx.slice.SliceViewManagerWrapper;

        r1 := @parameter0: android.net.Uri;

        $r3 = r0.<androidx.slice.SliceViewManagerWrapper: android.app.slice.SliceManager mManager>;

        $r2 = r0.<androidx.slice.SliceViewManagerWrapper: java.util.Set mSpecs>;

        virtualinvoke $r3.<android.app.slice.SliceManager: void pinSlice(android.net.Uri,java.util.Set)>(r1, $r2);

        return;
    }

    public void unpinSlice(android.net.Uri)
    {
        androidx.slice.SliceViewManagerWrapper r0;
        android.net.Uri r1;
        android.app.slice.SliceManager $r2, $r4;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: androidx.slice.SliceViewManagerWrapper;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.slice.SliceViewManagerWrapper: android.app.slice.SliceManager mManager>;

        $r3 = virtualinvoke $r2.<android.app.slice.SliceManager: java.util.List getPinnedSlices()>();

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.slice.SliceViewManagerWrapper: android.app.slice.SliceManager mManager>;

        virtualinvoke $r4.<android.app.slice.SliceManager: void unpinSlice(android.net.Uri)>(r1);

     label1:
        return;
    }

    public androidx.slice.Slice bindSlice(android.net.Uri)
    {
        androidx.slice.SliceViewManagerWrapper r0;
        android.net.Uri r1;
        java.lang.String $r2;
        boolean $z0;
        java.util.Set $r3;
        android.app.slice.SliceManager $r4;
        android.app.slice.Slice $r5;
        android.content.Context $r6;
        androidx.slice.Slice $r7;

        r0 := @this: androidx.slice.SliceViewManagerWrapper;

        r1 := @parameter0: android.net.Uri;

        $r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = specialinvoke r0.<androidx.slice.SliceViewManagerWrapper: boolean isAuthoritySuspended(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = r0.<androidx.slice.SliceViewManagerWrapper: android.app.slice.SliceManager mManager>;

        $r3 = r0.<androidx.slice.SliceViewManagerWrapper: java.util.Set mSpecs>;

        $r5 = virtualinvoke $r4.<android.app.slice.SliceManager: android.app.slice.Slice bindSlice(android.net.Uri,java.util.Set)>(r1, $r3);

        $r6 = r0.<androidx.slice.SliceViewManagerWrapper: android.content.Context mContext>;

        $r7 = staticinvoke <androidx.slice.SliceConvert: androidx.slice.Slice wrap(android.app.slice.Slice,android.content.Context)>($r5, $r6);

        return $r7;
    }

    public androidx.slice.Slice bindSlice(android.content.Intent)
    {
        androidx.slice.SliceViewManagerWrapper r0;
        android.content.Intent r1;
        boolean $z0;
        java.util.Set $r2;
        android.app.slice.SliceManager $r3;
        android.app.slice.Slice $r4;
        android.content.Context $r5;
        androidx.slice.Slice $r6;

        r0 := @this: androidx.slice.SliceViewManagerWrapper;

        r1 := @parameter0: android.content.Intent;

        $z0 = specialinvoke r0.<androidx.slice.SliceViewManagerWrapper: boolean isPackageSuspended(android.content.Intent)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = r0.<androidx.slice.SliceViewManagerWrapper: android.app.slice.SliceManager mManager>;

        $r2 = r0.<androidx.slice.SliceViewManagerWrapper: java.util.Set mSpecs>;

        $r4 = virtualinvoke $r3.<android.app.slice.SliceManager: android.app.slice.Slice bindSlice(android.content.Intent,java.util.Set)>(r1, $r2);

        $r5 = r0.<androidx.slice.SliceViewManagerWrapper: android.content.Context mContext>;

        $r6 = staticinvoke <androidx.slice.SliceConvert: androidx.slice.Slice wrap(android.app.slice.Slice,android.content.Context)>($r4, $r5);

        return $r6;
    }

    private boolean isPackageSuspended(android.content.Intent)
    {
        androidx.slice.SliceViewManagerWrapper r0;
        android.content.Intent r1;
        android.content.ComponentName $r2, $r8;
        java.lang.String $r3, $r6, $r7, $r9;
        android.net.Uri $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.slice.SliceViewManagerWrapper;

        r1 := @parameter0: android.content.Intent;

        $r2 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r2 == null goto label1;

        $r8 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r9 = virtualinvoke $r8.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z2 = specialinvoke r0.<androidx.slice.SliceViewManagerWrapper: boolean isPackageSuspended(java.lang.String)>($r9);

        return $z2;

     label1:
        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getPackage()>();

        if $r3 == null goto label2;

        $r7 = virtualinvoke r1.<android.content.Intent: java.lang.String getPackage()>();

        $z1 = specialinvoke r0.<androidx.slice.SliceViewManagerWrapper: boolean isPackageSuspended(java.lang.String)>($r7);

        return $z1;

     label2:
        $r4 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        if $r4 == null goto label3;

        $r5 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        $r6 = virtualinvoke $r5.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = specialinvoke r0.<androidx.slice.SliceViewManagerWrapper: boolean isAuthoritySuspended(java.lang.String)>($r6);

        return $z0;

     label3:
        return 0;
    }

    private boolean isAuthoritySuspended(java.lang.String)
    {
        androidx.slice.SliceViewManagerWrapper r0;
        java.lang.String r1, r9;
        android.content.pm.ProviderInfo r2;
        android.support.v4.util.ArrayMap $r3, $r7;
        java.lang.Object $r4;
        boolean $z0;
        android.content.Context $r5;
        android.content.pm.PackageManager $r6;

        r0 := @this: androidx.slice.SliceViewManagerWrapper;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.slice.SliceViewManagerWrapper: android.support.v4.util.ArrayMap mCachedAuthorities>;

        $r4 = virtualinvoke $r3.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (java.lang.String) $r4;

        if r9 != null goto label2;

        $r5 = r0.<androidx.slice.SliceViewManagerWrapper: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>(r1, 0);

        if r2 != null goto label1;

        return 0;

     label1:
        r9 = r2.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r7 = r0.<androidx.slice.SliceViewManagerWrapper: android.support.v4.util.ArrayMap mCachedAuthorities>;

        virtualinvoke $r7.<android.support.v4.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r9);

     label2:
        $z0 = specialinvoke r0.<androidx.slice.SliceViewManagerWrapper: boolean isPackageSuspended(java.lang.String)>(r9);

        return $z0;
    }

    private boolean isPackageSuspended(java.lang.String)
    {
        androidx.slice.SliceViewManagerWrapper r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r10;
        android.support.v4.util.ArrayMap $r3, $r8;
        java.lang.Object $r4;
        boolean $z0, $z1;
        android.content.Context $r5;
        android.content.pm.PackageManager $r6;
        android.content.pm.ApplicationInfo $r7;
        int $i0, $i1;
        java.lang.Boolean r11;

        r0 := @this: androidx.slice.SliceViewManagerWrapper;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.slice.SliceViewManagerWrapper: android.support.v4.util.ArrayMap mCachedSuspendFlags>;

        $r4 = virtualinvoke $r3.<android.support.v4.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r11 = (java.lang.Boolean) $r4;

        if r11 != null goto label6;

     label1:
        $r5 = r0.<androidx.slice.SliceViewManagerWrapper: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

        $i0 = $r7.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 1073741824;

        if $i1 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r8 = r0.<androidx.slice.SliceViewManagerWrapper: android.support.v4.util.ArrayMap mCachedSuspendFlags>;

        virtualinvoke $r8.<android.support.v4.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r11);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        r2 = $r10;

        return 0;

     label6:
        $z0 = virtualinvoke r11.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label4 with label5;
    }

    public java.util.Collection getSliceDescendants(android.net.Uri)
    {
        androidx.slice.SliceViewManagerWrapper r0;
        android.net.Uri r1;
        java.lang.Throwable r2, $r7;
        android.content.ContentResolver r3;
        android.content.ContentProviderClient r4;
        android.app.slice.SliceManager $r5;
        java.util.Collection $r6;
        android.content.Context $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: androidx.slice.SliceViewManagerWrapper;

        r1 := @parameter0: android.net.Uri;

     label1:
        $r5 = r0.<androidx.slice.SliceViewManagerWrapper: android.app.slice.SliceManager mManager>;

        $r6 = virtualinvoke $r5.<android.app.slice.SliceManager: java.util.Collection getSliceDescendants(android.net.Uri)>(r1);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = r0.<androidx.slice.SliceViewManagerWrapper: android.content.Context mContext>;

        r3 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r4 = virtualinvoke r3.<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>(r1);

        if r4 != null goto label4;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No provider found for ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label4:
        virtualinvoke r4.<android.content.ContentProviderClient: void close()>();

        throw r2;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public android.net.Uri mapIntentToUri(android.content.Intent)
    {
        androidx.slice.SliceViewManagerWrapper r0;
        android.content.Intent r1;
        android.app.slice.SliceManager $r2;
        android.net.Uri $r3;

        r0 := @this: androidx.slice.SliceViewManagerWrapper;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<androidx.slice.SliceViewManagerWrapper: android.app.slice.SliceManager mManager>;

        $r3 = virtualinvoke $r2.<android.app.slice.SliceManager: android.net.Uri mapIntentToUri(android.content.Intent)>(r1);

        return $r3;
    }

