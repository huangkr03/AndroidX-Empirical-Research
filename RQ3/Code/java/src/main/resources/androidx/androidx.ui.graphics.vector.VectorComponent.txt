androidx.ui.graphics.vector.VectorComponent
<androidx.ui.graphics.vector.VectorComponent: float viewportWidth>
<androidx.ui.graphics.vector.VectorComponent: float viewportHeight>
<androidx.ui.graphics.vector.VectorComponent: float defaultWidth>
<androidx.ui.graphics.vector.VectorComponent: float defaultHeight>
<androidx.ui.graphics.vector.VectorComponent: java.lang.String name>
<androidx.ui.graphics.vector.VectorComponent: androidx.ui.graphics.vector.GroupComponent root>
<androidx.ui.graphics.vector.VectorComponent: boolean isDirty>
<androidx.ui.graphics.vector.VectorComponent: androidx.ui.graphics.Paint vectorPaint>
<androidx.ui.graphics.vector.VectorComponent: androidx.ui.graphics.ImageAsset cachedImage>
    public void <init>(float, float, float, float, java.lang.String)
    {
        androidx.ui.graphics.vector.VectorComponent r0, r4;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9;
        java.lang.String r1, $r7;
        androidx.ui.graphics.vector.GroupComponent r2, r5, $r6;
        boolean z0, z1;
        androidx.ui.graphics.vector.VectorComponent$root$1$1 $r8;
        kotlin.jvm.functions.Function0 $r9;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "name");

        specialinvoke r0.<androidx.ui.graphics.vector.VNode: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        r0.<androidx.ui.graphics.vector.VectorComponent: float viewportWidth> = f0;

        r0.<androidx.ui.graphics.vector.VectorComponent: float viewportHeight> = f1;

        r0.<androidx.ui.graphics.vector.VectorComponent: float defaultWidth> = f2;

        r0.<androidx.ui.graphics.vector.VectorComponent: float defaultHeight> = f3;

        r0.<androidx.ui.graphics.vector.VectorComponent: java.lang.String name> = r1;

        $r6 = new androidx.ui.graphics.vector.GroupComponent;

        $r7 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: java.lang.String getName()>();

        specialinvoke $r6.<androidx.ui.graphics.vector.GroupComponent: void <init>(java.lang.String)>($r7);

        r2 = $r6;

        r4 = r0;

        z0 = 0;

        z1 = 0;

        virtualinvoke r2.<androidx.ui.graphics.vector.GroupComponent: void setPivotX(float)>(0.0F);

        virtualinvoke r2.<androidx.ui.graphics.vector.GroupComponent: void setPivotY(float)>(0.0F);

        $f4 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: float getDefaultWidth()>();

        $f5 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: float getViewportWidth()>();

        $f6 = $f4 / $f5;

        virtualinvoke r2.<androidx.ui.graphics.vector.GroupComponent: void setScaleX(float)>($f6);

        $f7 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: float getDefaultHeight()>();

        $f8 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: float getViewportHeight()>();

        $f9 = $f7 / $f8;

        virtualinvoke r2.<androidx.ui.graphics.vector.GroupComponent: void setScaleY(float)>($f9);

        $r8 = new androidx.ui.graphics.vector.VectorComponent$root$1$1;

        specialinvoke $r8.<androidx.ui.graphics.vector.VectorComponent$root$1$1: void <init>(androidx.ui.graphics.vector.VectorComponent)>(r0);

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        virtualinvoke r2.<androidx.ui.graphics.vector.GroupComponent: void setInvalidateListener(kotlin.jvm.functions.Function0)>($r9);

        r5 = r2;

        r4.<androidx.ui.graphics.vector.VectorComponent: androidx.ui.graphics.vector.GroupComponent root> = r5;

        r0.<androidx.ui.graphics.vector.VectorComponent: boolean isDirty> = 1;

        return;
    }

    public void <init>(float, float, float, float, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        float f0, f1, f2, f3;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        java.lang.String r2;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r2 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        r1 := @parameter6: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 16;

        if $i1 == 0 goto label1;

        r2 = "";

     label1:
        specialinvoke r0.<androidx.ui.graphics.vector.VectorComponent: void <init>(float,float,float,float,java.lang.String)>(f0, f1, f2, f3, r2);

        return;
    }

    public final float getViewportWidth()
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        float $f0;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        $f0 = r0.<androidx.ui.graphics.vector.VectorComponent: float viewportWidth>;

        return $f0;
    }

    public final void setViewportWidth(float)
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        float f0;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        f0 := @parameter0: float;

        r0.<androidx.ui.graphics.vector.VectorComponent: float viewportWidth> = f0;

        return;
    }

    public final float getViewportHeight()
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        float $f0;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        $f0 = r0.<androidx.ui.graphics.vector.VectorComponent: float viewportHeight>;

        return $f0;
    }

    public final void setViewportHeight(float)
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        float f0;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        f0 := @parameter0: float;

        r0.<androidx.ui.graphics.vector.VectorComponent: float viewportHeight> = f0;

        return;
    }

    public final float getDefaultWidth()
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        float $f0;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        $f0 = r0.<androidx.ui.graphics.vector.VectorComponent: float defaultWidth>;

        return $f0;
    }

    public final void setDefaultWidth(float)
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        float f0;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        f0 := @parameter0: float;

        r0.<androidx.ui.graphics.vector.VectorComponent: float defaultWidth> = f0;

        return;
    }

    public final float getDefaultHeight()
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        float $f0;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        $f0 = r0.<androidx.ui.graphics.vector.VectorComponent: float defaultHeight>;

        return $f0;
    }

    public final void setDefaultHeight(float)
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        float f0;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        f0 := @parameter0: float;

        r0.<androidx.ui.graphics.vector.VectorComponent: float defaultHeight> = f0;

        return;
    }

    public final java.lang.String getName()
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        java.lang.String $r1;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        $r1 = r0.<androidx.ui.graphics.vector.VectorComponent: java.lang.String name>;

        return $r1;
    }

    public final androidx.ui.graphics.vector.GroupComponent getRoot()
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        androidx.ui.graphics.vector.GroupComponent $r1;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        $r1 = r0.<androidx.ui.graphics.vector.VectorComponent: androidx.ui.graphics.vector.GroupComponent root>;

        return $r1;
    }

    public final int getSize()
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        androidx.ui.graphics.vector.GroupComponent $r1;
        int $i0;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: androidx.ui.graphics.vector.GroupComponent getRoot()>();

        $i0 = virtualinvoke $r1.<androidx.ui.graphics.vector.GroupComponent: int getSize()>();

        return $i0;
    }

    public final void draw(androidx.ui.graphics.Canvas, float, androidx.ui.graphics.ColorFilter)
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        androidx.ui.graphics.Canvas r1, $r6;
        float f0, f1, $f2, f3, f4;
        androidx.ui.graphics.ColorFilter r2;
        int i0, $i2;
        boolean $z0, z1, z2;
        androidx.ui.geometry.Offset$Companion $r3;
        long $l1;
        androidx.ui.graphics.Paint $r4;
        androidx.ui.graphics.vector.GroupComponent $r5;
        double $d0, $d1, $d2, $d3;
        androidx.ui.graphics.ImageAsset r7;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        f0 := @parameter1: float;

        r2 := @parameter2: androidx.ui.graphics.ColorFilter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        r7 = r0.<androidx.ui.graphics.vector.VectorComponent: androidx.ui.graphics.ImageAsset cachedImage>;

        if r7 != null goto label1;

        f3 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: float getDefaultWidth()>();

        z1 = 0;

        $d0 = (double) f3;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f2 = (float) $d1;

        f4 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: float getDefaultHeight()>();

        i0 = (int) $f2;

        z2 = 0;

        $d2 = (double) f4;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        f1 = (float) $d3;

        $i2 = (int) f1;

        r7 = staticinvoke <androidx.ui.graphics.AndroidImageAssetKt: androidx.ui.graphics.ImageAsset ImageAsset$default(int,int,androidx.ui.graphics.ImageAssetConfig,boolean,androidx.ui.graphics.colorspace.ColorSpace,int,java.lang.Object)>(i0, $i2, null, 0, null, 28, null);

        r0.<androidx.ui.graphics.vector.VectorComponent: androidx.ui.graphics.ImageAsset cachedImage> = r7;

     label1:
        $z0 = r0.<androidx.ui.graphics.vector.VectorComponent: boolean isDirty>;

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: androidx.ui.graphics.vector.GroupComponent getRoot()>();

        $r6 = staticinvoke <androidx.ui.graphics.AndroidCanvasKt: androidx.ui.graphics.Canvas Canvas(androidx.ui.graphics.ImageAsset)>(r7);

        virtualinvoke $r5.<androidx.ui.graphics.vector.GroupComponent: void draw(androidx.ui.graphics.Canvas)>($r6);

        r0.<androidx.ui.graphics.vector.VectorComponent: boolean isDirty> = 0;

     label2:
        $r3 = <androidx.ui.geometry.Offset: androidx.ui.geometry.Offset$Companion Companion>;

        $l1 = virtualinvoke $r3.<androidx.ui.geometry.Offset$Companion: long getZero()>();

        $r4 = specialinvoke r0.<androidx.ui.graphics.vector.VectorComponent: androidx.ui.graphics.Paint obtainVectorPaint(float,androidx.ui.graphics.ColorFilter)>(f0, r2);

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void drawImage--AHD2Ng(androidx.ui.graphics.ImageAsset,long,androidx.ui.graphics.Paint)>(r7, $l1, $r4);

        return;
    }

    public void draw(androidx.ui.graphics.Canvas)
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.graphics.ColorFilter $r2;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        $r2 = (androidx.ui.graphics.ColorFilter) null;

        virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: void draw(androidx.ui.graphics.Canvas,float,androidx.ui.graphics.ColorFilter)>(r1, 1.0F, $r2);

        return;
    }

    public java.lang.String toString()
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        boolean z0, z1, z2;
        java.lang.StringBuilder r1, $r3, $r5, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19;
        java.lang.String $r6, $r21;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        z0 = 0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        z1 = 0;

        z2 = 0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Params: ");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tname: ");

        $r6 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\twidth: ");

        $f0 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: float getDefaultWidth()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\theight: ");

        $f1 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: float getDefaultHeight()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tviewportWidth: ");

        $f2 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: float getViewportWidth()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tviewportHeight: ");

        $f3 = virtualinvoke r0.<androidx.ui.graphics.vector.VectorComponent: float getViewportHeight()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r21 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r21, "StringBuilder().apply(builderAction).toString()");

        return $r21;
    }

    private final androidx.ui.graphics.Paint obtainVectorPaint(float, androidx.ui.graphics.ColorFilter)
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        float f0, $f1;
        androidx.ui.graphics.ColorFilter r1, r9;
        androidx.ui.graphics.Paint r2, r3, r4, $r5, $r6, r7, $r8;
        boolean z0, z1, $z3, $z4, $z5;
        byte $b0, $b1;

        r0 := @this: androidx.ui.graphics.vector.VectorComponent;

        f0 := @parameter0: float;

        r1 := @parameter1: androidx.ui.graphics.ColorFilter;

        if r1 != null goto label03;

        $b1 = f0 cmpg 1.0F;

        if $b1 != 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        if $z4 == 0 goto label03;

        $r6 = staticinvoke <androidx.ui.graphics.vector.VectorKt: androidx.ui.graphics.Paint getEmptyPaint()>();

        goto label10;

     label03:
        r7 = r0.<androidx.ui.graphics.vector.VectorComponent: androidx.ui.graphics.Paint vectorPaint>;

        if r7 != null goto label04;

        $r5 = new androidx.ui.graphics.Paint;

        specialinvoke $r5.<androidx.ui.graphics.Paint: void <init>()>();

        r3 = $r5;

        z0 = 0;

        z1 = 0;

        r4 = r3;

        r0.<androidx.ui.graphics.vector.VectorComponent: androidx.ui.graphics.Paint vectorPaint> = r4;

        $r8 = r3;

        goto label05;

     label04:
        $r8 = r7;

     label05:
        r2 = $r8;

        r9 = virtualinvoke r2.<androidx.ui.graphics.Paint: androidx.ui.graphics.ColorFilter getColorFilter()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r9, r1);

        if $z3 != 0 goto label06;

        virtualinvoke r2.<androidx.ui.graphics.Paint: void setColorFilter(androidx.ui.graphics.ColorFilter)>(r1);

     label06:
        $f1 = virtualinvoke r2.<androidx.ui.graphics.Paint: float getAlpha()>();

        $b0 = $f1 cmpg f0;

        if $b0 != 0 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        if $z5 != 0 goto label09;

        virtualinvoke r2.<androidx.ui.graphics.Paint: void setAlpha(float)>(f0);

     label09:
        $r6 = r2;

     label10:
        return $r6;
    }

    public static final void access$setDirty$p(androidx.ui.graphics.vector.VectorComponent, boolean)
    {
        androidx.ui.graphics.vector.VectorComponent r0;
        boolean z0;

        r0 := @parameter0: androidx.ui.graphics.vector.VectorComponent;

        z0 := @parameter1: boolean;

        r0.<androidx.ui.graphics.vector.VectorComponent: boolean isDirty> = z0;

        return;
    }

