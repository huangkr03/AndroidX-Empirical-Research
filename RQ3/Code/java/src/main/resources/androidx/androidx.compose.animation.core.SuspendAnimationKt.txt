androidx.compose.animation.core.SuspendAnimationKt
    public static final java.lang.Object animate(float, float, float, androidx.compose.animation.core.AnimationSpec, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        float f0, f1, f2;
        androidx.compose.animation.core.AnimationSpec r0;
        kotlin.jvm.functions.Function2 r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.jvm.internal.FloatCompanionObject $r3;
        androidx.compose.animation.core.TwoWayConverter $r4;
        java.lang.Float $r5, $r6, $r7;
        java.lang.Object $r8, $r9;
        kotlin.Unit $r10;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        r0 := @parameter3: androidx.compose.animation.core.AnimationSpec;

        r1 := @parameter4: kotlin.jvm.functions.Function2;

        $r2 := @parameter5: kotlin.coroutines.Continuation;

        $r3 = <kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE>;

        $r4 = staticinvoke <androidx.compose.animation.core.VectorConvertersKt: androidx.compose.animation.core.TwoWayConverter getVectorConverter(kotlin.jvm.internal.FloatCompanionObject)>($r3);

        $r5 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(f0);

        $r6 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(f1);

        $r7 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(f2);

        $r8 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animate(androidx.compose.animation.core.TwoWayConverter,java.lang.Object,java.lang.Object,java.lang.Object,androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r4, $r5, $r6, $r7, r0, r1, $r2);

        $r9 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r8 != $r9 goto label1;

        return $r8;

     label1:
        $r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r10;
    }

    public static java.lang.Object animate$default(float, float, float, androidx.compose.animation.core.AnimationSpec, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        float f0, f1, f2;
        kotlin.jvm.functions.Function2 r0;
        kotlin.coroutines.Continuation r1;
        int i0, $i1, $i2;
        java.lang.Object r2, $r3;
        androidx.compose.animation.core.SpringSpec $r4;
        androidx.compose.animation.core.AnimationSpec r5;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        r5 := @parameter3: androidx.compose.animation.core.AnimationSpec;

        r0 := @parameter4: kotlin.jvm.functions.Function2;

        r1 := @parameter5: kotlin.coroutines.Continuation;

        i0 := @parameter6: int;

        r2 := @parameter7: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        f2 = 0.0F;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        $r4 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.SpringSpec spring$default(float,float,java.lang.Object,int,java.lang.Object)>(0.0F, 0.0F, null, 7, null);

        r5 = (androidx.compose.animation.core.AnimationSpec) $r4;

     label2:
        $r3 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animate(float,float,float,androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>(f0, f1, f2, r5, r0, r1);

        return $r3;
    }

    public static final java.lang.Object animateDecay(float, float, androidx.compose.animation.core.FloatDecayAnimationSpec, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        float f0, f1;
        androidx.compose.animation.core.FloatDecayAnimationSpec r0;
        kotlin.jvm.functions.Function2 r1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.animation.core.DecayAnimation r3;
        androidx.compose.animation.core.AnimationState $r4;
        androidx.compose.animation.core.SuspendAnimationKt$animateDecay$2 $r5;
        androidx.compose.animation.core.Animation $r6;
        kotlin.jvm.functions.Function1 $r7;
        java.lang.Object $r8, $r9;
        kotlin.Unit $r10;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0 := @parameter2: androidx.compose.animation.core.FloatDecayAnimationSpec;

        r1 := @parameter3: kotlin.jvm.functions.Function2;

        $r2 := @parameter4: kotlin.coroutines.Continuation;

        r3 = staticinvoke <androidx.compose.animation.core.AnimationKt: androidx.compose.animation.core.DecayAnimation DecayAnimation(androidx.compose.animation.core.FloatDecayAnimationSpec,float,float)>(r0, f0, f1);

        $r4 = staticinvoke <androidx.compose.animation.core.AnimationStateKt: androidx.compose.animation.core.AnimationState AnimationState$default(float,float,long,long,boolean,int,java.lang.Object)>(f0, f1, 0L, 0L, 0, 28, null);

        $r6 = (androidx.compose.animation.core.Animation) r3;

        $r5 = new androidx.compose.animation.core.SuspendAnimationKt$animateDecay$2;

        specialinvoke $r5.<androidx.compose.animation.core.SuspendAnimationKt$animateDecay$2: void <init>(kotlin.jvm.functions.Function2)>(r1);

        $r7 = (kotlin.jvm.functions.Function1) $r5;

        $r8 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animate$default(androidx.compose.animation.core.AnimationState,androidx.compose.animation.core.Animation,long,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r4, $r6, 0L, $r7, $r2, 2, null);

        $r9 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r8 != $r9 goto label1;

        return $r8;

     label1:
        $r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r10;
    }

    public static final java.lang.Object animate(androidx.compose.animation.core.TwoWayConverter, java.lang.Object, java.lang.Object, java.lang.Object, androidx.compose.animation.core.AnimationSpec, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.TwoWayConverter r0;
        java.lang.Object r1, r2, r3, r9, $r11, $r15, $r22, $r23;
        androidx.compose.animation.core.AnimationSpec r4;
        kotlin.jvm.functions.Function2 r5;
        kotlin.coroutines.Continuation $r6;
        androidx.compose.animation.core.AnimationVector r7, $r12, $r16;
        androidx.compose.animation.core.TargetBasedAnimation r8, $r17;
        kotlin.jvm.functions.Function1 $r10, $r14, $r21;
        kotlin.Unit $r13;
        androidx.compose.animation.core.AnimationState $r18;
        androidx.compose.animation.core.Animation $r19;
        androidx.compose.animation.core.SuspendAnimationKt$animate$3 $r20;

        r0 := @parameter0: androidx.compose.animation.core.TwoWayConverter;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: androidx.compose.animation.core.AnimationSpec;

        r5 := @parameter5: kotlin.jvm.functions.Function2;

        $r6 := @parameter6: kotlin.coroutines.Continuation;

        if r3 == null goto label1;

        r9 = r3;

        $r14 = interfaceinvoke r0.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r15 = interfaceinvoke $r14.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r9);

        $r16 = (androidx.compose.animation.core.AnimationVector) $r15;

        if $r16 != null goto label2;

     label1:
        $r10 = interfaceinvoke r0.<androidx.compose.animation.core.TwoWayConverter: kotlin.jvm.functions.Function1 getConvertToVector()>();

        $r11 = interfaceinvoke $r10.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r12 = (androidx.compose.animation.core.AnimationVector) $r11;

        $r16 = staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: androidx.compose.animation.core.AnimationVector newInstance(androidx.compose.animation.core.AnimationVector)>($r12);

     label2:
        r7 = $r16;

        $r17 = new androidx.compose.animation.core.TargetBasedAnimation;

        specialinvoke $r17.<androidx.compose.animation.core.TargetBasedAnimation: void <init>(androidx.compose.animation.core.AnimationSpec,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,java.lang.Object,androidx.compose.animation.core.AnimationVector)>(r4, r0, r1, r2, r7);

        r8 = $r17;

        $r18 = new androidx.compose.animation.core.AnimationState;

        specialinvoke $r18.<androidx.compose.animation.core.AnimationState: void <init>(androidx.compose.animation.core.TwoWayConverter,java.lang.Object,androidx.compose.animation.core.AnimationVector,long,long,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r0, r1, r7, 0L, 0L, 0, 56, null);

        $r19 = (androidx.compose.animation.core.Animation) r8;

        $r20 = new androidx.compose.animation.core.SuspendAnimationKt$animate$3;

        specialinvoke $r20.<androidx.compose.animation.core.SuspendAnimationKt$animate$3: void <init>(kotlin.jvm.functions.Function2,androidx.compose.animation.core.TwoWayConverter)>(r5, r0);

        $r21 = (kotlin.jvm.functions.Function1) $r20;

        $r22 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animate$default(androidx.compose.animation.core.AnimationState,androidx.compose.animation.core.Animation,long,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r18, $r19, 0L, $r21, $r6, 2, null);

        $r23 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r22 != $r23 goto label3;

        return $r22;

     label3:
        $r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r13;
    }

    public static java.lang.Object animate$default(androidx.compose.animation.core.TwoWayConverter, java.lang.Object, java.lang.Object, java.lang.Object, androidx.compose.animation.core.AnimationSpec, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        androidx.compose.animation.core.TwoWayConverter r0;
        java.lang.Object r1, r2, r5, $r6, r8;
        kotlin.jvm.functions.Function2 r3;
        kotlin.coroutines.Continuation r4;
        int i0, $i1, $i2;
        androidx.compose.animation.core.SpringSpec $r7;
        androidx.compose.animation.core.AnimationSpec r9;

        r0 := @parameter0: androidx.compose.animation.core.TwoWayConverter;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r8 := @parameter3: java.lang.Object;

        r9 := @parameter4: androidx.compose.animation.core.AnimationSpec;

        r3 := @parameter5: kotlin.jvm.functions.Function2;

        r4 := @parameter6: kotlin.coroutines.Continuation;

        i0 := @parameter7: int;

        r5 := @parameter8: java.lang.Object;

        $i1 = i0 & 8;

        if $i1 == 0 goto label1;

        r8 = null;

     label1:
        $i2 = i0 & 16;

        if $i2 == 0 goto label2;

        $r7 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.SpringSpec spring$default(float,float,java.lang.Object,int,java.lang.Object)>(0.0F, 0.0F, null, 7, null);

        r9 = (androidx.compose.animation.core.AnimationSpec) $r7;

     label2:
        $r6 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animate(androidx.compose.animation.core.TwoWayConverter,java.lang.Object,java.lang.Object,java.lang.Object,androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>(r0, r1, r2, r8, r9, r3, r4);

        return $r6;
    }

    public static final java.lang.Object animateTo(androidx.compose.animation.core.AnimationState, java.lang.Object, androidx.compose.animation.core.AnimationSpec, boolean, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.AnimationState $r0;
        java.lang.Object r1, r6, $r11, $r12;
        androidx.compose.animation.core.AnimationSpec r2;
        boolean z0;
        kotlin.jvm.functions.Function1 r3;
        kotlin.coroutines.Continuation $r4;
        androidx.compose.animation.core.TargetBasedAnimation r5, $r9;
        androidx.compose.animation.core.TwoWayConverter r7;
        androidx.compose.animation.core.AnimationVector r8;
        androidx.compose.animation.core.Animation $r10;
        kotlin.Unit $r13;
        long $l0;

        $r0 := @parameter0: androidx.compose.animation.core.AnimationState;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: androidx.compose.animation.core.AnimationSpec;

        z0 := @parameter3: boolean;

        r3 := @parameter4: kotlin.jvm.functions.Function1;

        $r4 := @parameter5: kotlin.coroutines.Continuation;

        r6 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationState: java.lang.Object getValue()>();

        r7 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.TwoWayConverter getTypeConverter()>();

        r8 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.AnimationVector getVelocityVector()>();

        $r9 = new androidx.compose.animation.core.TargetBasedAnimation;

        specialinvoke $r9.<androidx.compose.animation.core.TargetBasedAnimation: void <init>(androidx.compose.animation.core.AnimationSpec,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,java.lang.Object,androidx.compose.animation.core.AnimationVector)>(r2, r7, r6, r1, r8);

        r5 = $r9;

        $r10 = (androidx.compose.animation.core.Animation) r5;

        if z0 == 0 goto label1;

        $l0 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationState: long getLastFrameTimeNanos()>();

        goto label2;

     label1:
        $l0 = -9223372036854775808L;

     label2:
        $r11 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animate(androidx.compose.animation.core.AnimationState,androidx.compose.animation.core.Animation,long,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r0, $r10, $l0, r3, $r4);

        $r12 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r11 != $r12 goto label3;

        return $r11;

     label3:
        $r13 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r13;
    }

    public static java.lang.Object animateTo$default(androidx.compose.animation.core.AnimationState, java.lang.Object, androidx.compose.animation.core.AnimationSpec, boolean, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        androidx.compose.animation.core.AnimationState r0;
        java.lang.Object r1, r3, $r4;
        kotlin.coroutines.Continuation r2;
        int i0, $i1, $i2, $i3;
        androidx.compose.animation.core.SuspendAnimationKt$animateTo$2 $r5;
        androidx.compose.animation.core.SpringSpec $r6;
        androidx.compose.animation.core.AnimationSpec r7;
        boolean z0;
        kotlin.jvm.functions.Function1 r8;

        r0 := @parameter0: androidx.compose.animation.core.AnimationState;

        r1 := @parameter1: java.lang.Object;

        r7 := @parameter2: androidx.compose.animation.core.AnimationSpec;

        z0 := @parameter3: boolean;

        r8 := @parameter4: kotlin.jvm.functions.Function1;

        r2 := @parameter5: kotlin.coroutines.Continuation;

        i0 := @parameter6: int;

        r3 := @parameter7: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r6 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.SpringSpec spring$default(float,float,java.lang.Object,int,java.lang.Object)>(0.0F, 0.0F, null, 7, null);

        r7 = (androidx.compose.animation.core.AnimationSpec) $r6;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        z0 = 0;

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        $r5 = <androidx.compose.animation.core.SuspendAnimationKt$animateTo$2: androidx.compose.animation.core.SuspendAnimationKt$animateTo$2 INSTANCE>;

        r8 = (kotlin.jvm.functions.Function1) $r5;

     label3:
        $r4 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animateTo(androidx.compose.animation.core.AnimationState,java.lang.Object,androidx.compose.animation.core.AnimationSpec,boolean,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r0, r1, r7, z0, r8, r2);

        return $r4;
    }

    public static final java.lang.Object animateDecay(androidx.compose.animation.core.AnimationState, androidx.compose.animation.core.DecayAnimationSpec, boolean, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.AnimationState $r0;
        androidx.compose.animation.core.DecayAnimationSpec r1;
        boolean z0;
        kotlin.jvm.functions.Function1 r2;
        kotlin.coroutines.Continuation $r3;
        androidx.compose.animation.core.DecayAnimation r4, $r8;
        java.lang.Object r5, $r10, $r11;
        androidx.compose.animation.core.AnimationVector r6;
        androidx.compose.animation.core.TwoWayConverter r7;
        androidx.compose.animation.core.Animation $r9;
        kotlin.Unit $r12;
        long $l0;

        $r0 := @parameter0: androidx.compose.animation.core.AnimationState;

        r1 := @parameter1: androidx.compose.animation.core.DecayAnimationSpec;

        z0 := @parameter2: boolean;

        r2 := @parameter3: kotlin.jvm.functions.Function1;

        $r3 := @parameter4: kotlin.coroutines.Continuation;

        r5 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationState: java.lang.Object getValue()>();

        r6 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.AnimationVector getVelocityVector()>();

        r7 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.TwoWayConverter getTypeConverter()>();

        $r8 = new androidx.compose.animation.core.DecayAnimation;

        specialinvoke $r8.<androidx.compose.animation.core.DecayAnimation: void <init>(androidx.compose.animation.core.DecayAnimationSpec,androidx.compose.animation.core.TwoWayConverter,java.lang.Object,androidx.compose.animation.core.AnimationVector)>(r1, r7, r5, r6);

        r4 = $r8;

        $r9 = (androidx.compose.animation.core.Animation) r4;

        if z0 == 0 goto label1;

        $l0 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationState: long getLastFrameTimeNanos()>();

        goto label2;

     label1:
        $l0 = -9223372036854775808L;

     label2:
        $r10 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animate(androidx.compose.animation.core.AnimationState,androidx.compose.animation.core.Animation,long,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r0, $r9, $l0, r2, $r3);

        $r11 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r10 != $r11 goto label3;

        return $r10;

     label3:
        $r12 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r12;
    }

    public static java.lang.Object animateDecay$default(androidx.compose.animation.core.AnimationState, androidx.compose.animation.core.DecayAnimationSpec, boolean, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        androidx.compose.animation.core.AnimationState r0;
        androidx.compose.animation.core.DecayAnimationSpec r1;
        kotlin.coroutines.Continuation r2;
        int i0, $i1, $i2;
        java.lang.Object r3, $r4;
        androidx.compose.animation.core.SuspendAnimationKt$animateDecay$4 $r5;
        boolean z0;
        kotlin.jvm.functions.Function1 r6;

        r0 := @parameter0: androidx.compose.animation.core.AnimationState;

        r1 := @parameter1: androidx.compose.animation.core.DecayAnimationSpec;

        z0 := @parameter2: boolean;

        r6 := @parameter3: kotlin.jvm.functions.Function1;

        r2 := @parameter4: kotlin.coroutines.Continuation;

        i0 := @parameter5: int;

        r3 := @parameter6: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        z0 = 0;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        $r5 = <androidx.compose.animation.core.SuspendAnimationKt$animateDecay$4: androidx.compose.animation.core.SuspendAnimationKt$animateDecay$4 INSTANCE>;

        r6 = (kotlin.jvm.functions.Function1) $r5;

     label2:
        $r4 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animateDecay(androidx.compose.animation.core.AnimationState,androidx.compose.animation.core.DecayAnimationSpec,boolean,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r0, r1, z0, r6, r2);

        return $r4;
    }

    public static final java.lang.Object animate(androidx.compose.animation.core.AnimationState, androidx.compose.animation.core.Animation, long, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        long l0, $l6, $l7;
        kotlin.coroutines.Continuation r0, r53, r54, r55, r56, r57;
        java.lang.Object r1, $r4, r5, $r7, $r8, $r9, $r10, $r15, $r16, $r17, $r18, $r19, $r23, $r30, $r33, $r35, $r43;
        androidx.compose.animation.core.AnimationVector r2;
        kotlin.jvm.internal.Ref$ObjectRef r3, r41, r47;
        boolean $z1, $z2, $z3;
        kotlin.Unit $r11;
        kotlin.coroutines.CoroutineContext $r12, $r26, $r27;
        kotlin.jvm.functions.Function1 $r14, $r29, r39;
        byte $b1, $b8;
        androidx.compose.animation.core.TwoWayConverter $r22;
        kotlin.jvm.functions.Function0 $r25;
        float $f0, f1, f2;
        int $i2, $i3, $i4, $i5, $i9;
        java.lang.Throwable $r32, r45;
        androidx.compose.animation.core.AnimationScope $r34, $r36, r42, $r44, r50;
        androidx.compose.animation.core.AnimationState $r37;
        androidx.compose.animation.core.Animation r38;
        androidx.compose.animation.core.SuspendAnimationKt$animate$4 $r40, r46;
        androidx.compose.animation.core.SuspendAnimationKt$animate$6 r48;
        androidx.compose.animation.core.SuspendAnimationKt$animate$7 r49;
        androidx.compose.animation.core.SuspendAnimationKt$animate$9 r51;
        java.lang.IllegalStateException r52;

        $r37 := @parameter0: androidx.compose.animation.core.AnimationState;

        r38 := @parameter1: androidx.compose.animation.core.Animation;

        l0 := @parameter2: long;

        r39 := @parameter3: kotlin.jvm.functions.Function1;

        r0 := @parameter4: kotlin.coroutines.Continuation;

        $z1 = r0 instanceof androidx.compose.animation.core.SuspendAnimationKt$animate$4;

        if $z1 == 0 goto label01;

        $r40 = (androidx.compose.animation.core.SuspendAnimationKt$animate$4) r0;

        $i2 = $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: int label>;

        $i3 = $i2 & -2147483648;

        if $i3 == 0 goto label01;

        $i4 = $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: int label>;

        $i5 = $i4 - -2147483648;

        $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: int label> = $i5;

        goto label02;

     label01:
        r46 = new androidx.compose.animation.core.SuspendAnimationKt$animate$4;

        specialinvoke r46.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: void <init>(kotlin.coroutines.Continuation)>(r0);

        $r40 = r46;

     label02:
        $r4 = $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object result>;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i9 = $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: int label>;

        tableswitch($i9)
        {
            case 0: goto label03;
            case 1: goto label06;
            case 2: goto label12;
            default: goto label23;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

        r1 = interfaceinvoke r38.<androidx.compose.animation.core.Animation: java.lang.Object getValueFromNanos(long)>(0L);

        r2 = interfaceinvoke r38.<androidx.compose.animation.core.Animation: androidx.compose.animation.core.AnimationVector getVelocityVectorFromNanos(long)>(0L);

        r47 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r47.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r41 = r47;

     label04:
        $b1 = l0 cmp -9223372036854775808L;

        if $b1 != 0 goto label09;

        r53 = (kotlin.coroutines.Continuation) $r40;

        $r27 = interfaceinvoke r53.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        f1 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: float getDurationScale(kotlin.coroutines.CoroutineContext)>($r27);

        r48 = new androidx.compose.animation.core.SuspendAnimationKt$animate$6;

        specialinvoke r48.<androidx.compose.animation.core.SuspendAnimationKt$animate$6: void <init>(kotlin.jvm.internal.Ref$ObjectRef,java.lang.Object,androidx.compose.animation.core.Animation,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationState,float,kotlin.jvm.functions.Function1)>(r41, r1, r38, r2, $r37, f1, r39);

        $r29 = (kotlin.jvm.functions.Function1) r48;

        $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$0> = $r37;

        $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$1> = r38;

        $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$2> = r39;

        $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$3> = r41;

        $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: int label> = 1;

        r54 = (kotlin.coroutines.Continuation) $r40;

        $r30 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object callWithFrameNanos(androidx.compose.animation.core.Animation,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r38, $r29, r54);

     label05:
        if $r30 != r5 goto label08;

        return r5;

     label06:
        $r16 = $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$3>;

        r41 = (kotlin.jvm.internal.Ref$ObjectRef) $r16;

        $r17 = $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$2>;

        r39 = (kotlin.jvm.functions.Function1) $r17;

        $r18 = $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$1>;

        r38 = (androidx.compose.animation.core.Animation) $r18;

        $r19 = $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$0>;

        $r37 = (androidx.compose.animation.core.AnimationState) $r19;

     label07:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label08:
        goto label10;

     label09:
        r50 = new androidx.compose.animation.core.AnimationScope;

        $r22 = interfaceinvoke r38.<androidx.compose.animation.core.Animation: androidx.compose.animation.core.TwoWayConverter getTypeConverter()>();

        $r23 = interfaceinvoke r38.<androidx.compose.animation.core.Animation: java.lang.Object getTargetValue()>();

        r49 = new androidx.compose.animation.core.SuspendAnimationKt$animate$7;

        specialinvoke r49.<androidx.compose.animation.core.SuspendAnimationKt$animate$7: void <init>(androidx.compose.animation.core.AnimationState)>($r37);

        $r25 = (kotlin.jvm.functions.Function0) r49;

        specialinvoke r50.<androidx.compose.animation.core.AnimationScope: void <init>(java.lang.Object,androidx.compose.animation.core.TwoWayConverter,androidx.compose.animation.core.AnimationVector,long,java.lang.Object,long,boolean,kotlin.jvm.functions.Function0)>(r1, $r22, r2, l0, $r23, l0, 1, $r25);

        r42 = r50;

        r3 = r41;

        r55 = (kotlin.coroutines.Continuation) $r40;

        $r26 = interfaceinvoke r55.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        $f0 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: float getDurationScale(kotlin.coroutines.CoroutineContext)>($r26);

        staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: void doAnimationFrameWithScale(androidx.compose.animation.core.AnimationScope,long,float,androidx.compose.animation.core.Animation,androidx.compose.animation.core.AnimationState,kotlin.jvm.functions.Function1)>(r42, l0, $f0, r38, $r37, r39);

        r3.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = r42;

     label10:
        $r43 = r41.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r43);

        $r44 = (androidx.compose.animation.core.AnimationScope) $r43;

        $z2 = virtualinvoke $r44.<androidx.compose.animation.core.AnimationScope: boolean isRunning()>();

        if $z2 == 0 goto label22;

        r56 = (kotlin.coroutines.Continuation) $r40;

        $r12 = interfaceinvoke r56.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        f2 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: float getDurationScale(kotlin.coroutines.CoroutineContext)>($r12);

        r51 = new androidx.compose.animation.core.SuspendAnimationKt$animate$9;

        specialinvoke r51.<androidx.compose.animation.core.SuspendAnimationKt$animate$9: void <init>(kotlin.jvm.internal.Ref$ObjectRef,float,androidx.compose.animation.core.Animation,androidx.compose.animation.core.AnimationState,kotlin.jvm.functions.Function1)>(r41, f2, r38, $r37, r39);

        $r14 = (kotlin.jvm.functions.Function1) r51;

        $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$0> = $r37;

        $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$1> = r38;

        $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$2> = r39;

        $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$3> = r41;

        $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: int label> = 2;

        r57 = (kotlin.coroutines.Continuation) $r40;

        $r15 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object callWithFrameNanos(androidx.compose.animation.core.Animation,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r38, $r14, r57);

     label11:
        if $r15 != r5 goto label14;

        return r5;

     label12:
        $r7 = $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$3>;

        r41 = (kotlin.jvm.internal.Ref$ObjectRef) $r7;

        $r8 = $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$2>;

        r39 = (kotlin.jvm.functions.Function1) $r8;

        $r9 = $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$1>;

        r38 = (androidx.compose.animation.core.Animation) $r9;

        $r10 = $r40.<androidx.compose.animation.core.SuspendAnimationKt$animate$4: java.lang.Object L$0>;

        $r37 = (androidx.compose.animation.core.AnimationState) $r10;

     label13:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r4);

     label14:
        goto label10;

     label15:
        $r32 := @caughtexception;

        r45 = $r32;

        $r33 = r41.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r34 = (androidx.compose.animation.core.AnimationScope) $r33;

        if $r34 != null goto label16;

        goto label17;

     label16:
        virtualinvoke $r34.<androidx.compose.animation.core.AnimationScope: void setRunning$animation_core_release(boolean)>(0);

     label17:
        $r35 = r41.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r36 = (androidx.compose.animation.core.AnimationScope) $r35;

        if $r36 == null goto label19;

        $l6 = virtualinvoke $r36.<androidx.compose.animation.core.AnimationScope: long getLastFrameTimeNanos()>();

        $l7 = virtualinvoke $r37.<androidx.compose.animation.core.AnimationState: long getLastFrameTimeNanos()>();

        $b8 = $l6 cmp $l7;

        if $b8 != 0 goto label18;

        $z3 = 1;

        goto label20;

     label18:
        $z3 = 0;

        goto label20;

     label19:
        $z3 = 0;

     label20:
        if $z3 == 0 goto label21;

        virtualinvoke $r37.<androidx.compose.animation.core.AnimationState: void setRunning$animation_core_release(boolean)>(0);

     label21:
        throw r45;

     label22:
        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r11;

     label23:
        r52 = new java.lang.IllegalStateException;

        specialinvoke r52.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r52;

        catch java.util.concurrent.CancellationException from label04 to label05 with label15;
        catch java.util.concurrent.CancellationException from label07 to label11 with label15;
        catch java.util.concurrent.CancellationException from label13 to label15 with label15;
    }

    public static java.lang.Object animate$default(androidx.compose.animation.core.AnimationState, androidx.compose.animation.core.Animation, long, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        androidx.compose.animation.core.AnimationState r0;
        androidx.compose.animation.core.Animation r1;
        kotlin.coroutines.Continuation r2;
        int i0, $i1, $i2;
        java.lang.Object r3, $r4;
        androidx.compose.animation.core.SuspendAnimationKt$animate$5 $r5;
        long l3;
        kotlin.jvm.functions.Function1 r6;

        r0 := @parameter0: androidx.compose.animation.core.AnimationState;

        r1 := @parameter1: androidx.compose.animation.core.Animation;

        l3 := @parameter2: long;

        r6 := @parameter3: kotlin.jvm.functions.Function1;

        r2 := @parameter4: kotlin.coroutines.Continuation;

        i0 := @parameter5: int;

        r3 := @parameter6: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        l3 = -9223372036854775808L;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        $r5 = <androidx.compose.animation.core.SuspendAnimationKt$animate$5: androidx.compose.animation.core.SuspendAnimationKt$animate$5 INSTANCE>;

        r6 = (kotlin.jvm.functions.Function1) $r5;

     label2:
        $r4 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object animate(androidx.compose.animation.core.AnimationState,androidx.compose.animation.core.Animation,long,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r0, r1, l3, r6, r2);

        return $r4;
    }

    private static final java.lang.Object callWithFrameNanos(androidx.compose.animation.core.Animation, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animation $r0;
        kotlin.jvm.functions.Function1 r1, $r4;
        kotlin.coroutines.Continuation $r2;
        boolean $z0;
        androidx.compose.animation.core.SuspendAnimationKt$callWithFrameNanos$2 $r3;
        java.lang.Object $r5, $r6;

        $r0 := @parameter0: androidx.compose.animation.core.Animation;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $z0 = interfaceinvoke $r0.<androidx.compose.animation.core.Animation: boolean isInfinite()>();

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <androidx.compose.animation.core.InfiniteAnimationPolicyKt: java.lang.Object withInfiniteAnimationFrameNanos(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>(r1, $r2);

        return $r6;

     label1:
        $r3 = new androidx.compose.animation.core.SuspendAnimationKt$callWithFrameNanos$2;

        specialinvoke $r3.<androidx.compose.animation.core.SuspendAnimationKt$callWithFrameNanos$2: void <init>(kotlin.jvm.functions.Function1)>(r1);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        $r5 = staticinvoke <androidx.compose.runtime.MonotonicFrameClockKt: java.lang.Object withFrameNanos(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r4, $r2);

        return $r5;
    }

    public static final float getDurationScale(kotlin.coroutines.CoroutineContext)
    {
        kotlin.coroutines.CoroutineContext $r0;
        float f0, $f1;
        java.lang.String r1, $r7;
        androidx.compose.ui.MotionDurationScale$Key $r2;
        kotlin.coroutines.CoroutineContext$Key $r3;
        kotlin.coroutines.CoroutineContext$Element $r4;
        androidx.compose.ui.MotionDurationScale $r5;
        byte $b0;
        java.lang.IllegalStateException $r6;
        boolean $z0;

        $r0 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = <androidx.compose.ui.MotionDurationScale: androidx.compose.ui.MotionDurationScale$Key Key>;

        $r3 = (kotlin.coroutines.CoroutineContext$Key) $r2;

        $r4 = interfaceinvoke $r0.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r3);

        $r5 = (androidx.compose.ui.MotionDurationScale) $r4;

        if $r5 == null goto label1;

        $f1 = interfaceinvoke $r5.<androidx.compose.ui.MotionDurationScale: float getScaleFactor()>();

        goto label2;

     label1:
        $f1 = 1.0F;

     label2:
        f0 = $f1;

        $b0 = f0 cmpl 0.0F;

        if $b0 < 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        if $z0 != 0 goto label5;

        r1 = "Check failed.";

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label5:
        return f0;
    }

    public static final void updateState(androidx.compose.animation.core.AnimationScope, androidx.compose.animation.core.AnimationState)
    {
        androidx.compose.animation.core.AnimationScope $r0;
        androidx.compose.animation.core.AnimationState r1;
        java.lang.Object $r2;
        androidx.compose.animation.core.AnimationVector $r3, $r4;
        long $l0, $l1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.animation.core.AnimationScope;

        r1 := @parameter1: androidx.compose.animation.core.AnimationState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        $r2 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationScope: java.lang.Object getValue()>();

        virtualinvoke r1.<androidx.compose.animation.core.AnimationState: void setValue$animation_core_release(java.lang.Object)>($r2);

        $r3 = virtualinvoke r1.<androidx.compose.animation.core.AnimationState: androidx.compose.animation.core.AnimationVector getVelocityVector()>();

        $r4 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationScope: androidx.compose.animation.core.AnimationVector getVelocityVector()>();

        staticinvoke <androidx.compose.animation.core.AnimationVectorsKt: void copyFrom(androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>($r3, $r4);

        $l0 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationScope: long getFinishedTimeNanos()>();

        virtualinvoke r1.<androidx.compose.animation.core.AnimationState: void setFinishedTimeNanos$animation_core_release(long)>($l0);

        $l1 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationScope: long getLastFrameTimeNanos()>();

        virtualinvoke r1.<androidx.compose.animation.core.AnimationState: void setLastFrameTimeNanos$animation_core_release(long)>($l1);

        $z0 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationScope: boolean isRunning()>();

        virtualinvoke r1.<androidx.compose.animation.core.AnimationState: void setRunning$animation_core_release(boolean)>($z0);

        return;
    }

    private static final void doAnimationFrameWithScale(androidx.compose.animation.core.AnimationScope, long, float, androidx.compose.animation.core.Animation, androidx.compose.animation.core.AnimationState, kotlin.jvm.functions.Function1)
    {
        androidx.compose.animation.core.AnimationScope $r0;
        long l0, l1, $l3, $l4, $l5;
        float f0, $f1, $f2;
        androidx.compose.animation.core.Animation r1;
        androidx.compose.animation.core.AnimationState r2;
        kotlin.jvm.functions.Function1 r3;
        byte $b2;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.animation.core.AnimationScope;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        r1 := @parameter3: androidx.compose.animation.core.Animation;

        r2 := @parameter4: androidx.compose.animation.core.AnimationState;

        r3 := @parameter5: kotlin.jvm.functions.Function1;

        $b2 = f0 cmpg 0.0F;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $l5 = interfaceinvoke r1.<androidx.compose.animation.core.Animation: long getDurationNanos()>();

        goto label4;

     label3:
        $l3 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationScope: long getStartTimeNanos()>();

        $l4 = l0 - $l3;

        $f1 = (float) $l4;

        $f2 = $f1 / f0;

        $l5 = (long) $f2;

     label4:
        l1 = $l5;

        staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: void doAnimationFrame(androidx.compose.animation.core.AnimationScope,long,long,androidx.compose.animation.core.Animation,androidx.compose.animation.core.AnimationState,kotlin.jvm.functions.Function1)>($r0, l0, l1, r1, r2, r3);

        return;
    }

    private static final void doAnimationFrame(androidx.compose.animation.core.AnimationScope, long, long, androidx.compose.animation.core.Animation, androidx.compose.animation.core.AnimationState, kotlin.jvm.functions.Function1)
    {
        androidx.compose.animation.core.AnimationScope $r0;
        long l0, l1, $l2;
        androidx.compose.animation.core.Animation r1;
        androidx.compose.animation.core.AnimationState r2;
        kotlin.jvm.functions.Function1 r3;
        boolean z0;
        java.lang.Object $r4;
        androidx.compose.animation.core.AnimationVector $r5;

        $r0 := @parameter0: androidx.compose.animation.core.AnimationScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: androidx.compose.animation.core.Animation;

        r2 := @parameter4: androidx.compose.animation.core.AnimationState;

        r3 := @parameter5: kotlin.jvm.functions.Function1;

        virtualinvoke $r0.<androidx.compose.animation.core.AnimationScope: void setLastFrameTimeNanos$animation_core_release(long)>(l0);

        $r4 = interfaceinvoke r1.<androidx.compose.animation.core.Animation: java.lang.Object getValueFromNanos(long)>(l1);

        virtualinvoke $r0.<androidx.compose.animation.core.AnimationScope: void setValue$animation_core_release(java.lang.Object)>($r4);

        $r5 = interfaceinvoke r1.<androidx.compose.animation.core.Animation: androidx.compose.animation.core.AnimationVector getVelocityVectorFromNanos(long)>(l1);

        virtualinvoke $r0.<androidx.compose.animation.core.AnimationScope: void setVelocityVector$animation_core_release(androidx.compose.animation.core.AnimationVector)>($r5);

        z0 = interfaceinvoke r1.<androidx.compose.animation.core.Animation: boolean isFinishedFromNanos(long)>(l1);

        if z0 == 0 goto label1;

        $l2 = virtualinvoke $r0.<androidx.compose.animation.core.AnimationScope: long getLastFrameTimeNanos()>();

        virtualinvoke $r0.<androidx.compose.animation.core.AnimationScope: void setFinishedTimeNanos$animation_core_release(long)>($l2);

        virtualinvoke $r0.<androidx.compose.animation.core.AnimationScope: void setRunning$animation_core_release(boolean)>(0);

     label1:
        staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: void updateState(androidx.compose.animation.core.AnimationScope,androidx.compose.animation.core.AnimationState)>($r0, r2);

        interfaceinvoke r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        return;
    }

    public static final void access$doAnimationFrameWithScale(androidx.compose.animation.core.AnimationScope, long, float, androidx.compose.animation.core.Animation, androidx.compose.animation.core.AnimationState, kotlin.jvm.functions.Function1)
    {
        androidx.compose.animation.core.AnimationScope $r0;
        long l0;
        float f0;
        androidx.compose.animation.core.Animation r1;
        androidx.compose.animation.core.AnimationState r2;
        kotlin.jvm.functions.Function1 r3;

        $r0 := @parameter0: androidx.compose.animation.core.AnimationScope;

        l0 := @parameter1: long;

        f0 := @parameter2: float;

        r1 := @parameter3: androidx.compose.animation.core.Animation;

        r2 := @parameter4: androidx.compose.animation.core.AnimationState;

        r3 := @parameter5: kotlin.jvm.functions.Function1;

        staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: void doAnimationFrameWithScale(androidx.compose.animation.core.AnimationScope,long,float,androidx.compose.animation.core.Animation,androidx.compose.animation.core.AnimationState,kotlin.jvm.functions.Function1)>($r0, l0, f0, r1, r2, r3);

        return;
    }

    public static final java.lang.Object access$callWithFrameNanos(androidx.compose.animation.core.Animation, kotlin.jvm.functions.Function1, kotlin.coroutines.Continuation)
    {
        androidx.compose.animation.core.Animation $r0;
        kotlin.jvm.functions.Function1 r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: androidx.compose.animation.core.Animation;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r3 = staticinvoke <androidx.compose.animation.core.SuspendAnimationKt: java.lang.Object callWithFrameNanos(androidx.compose.animation.core.Animation,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)>($r0, r1, $r2);

        return $r3;
    }

