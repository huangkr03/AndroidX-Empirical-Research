androidx.compose.material.ripple.RippleAnimation
<androidx.compose.material.ripple.RippleAnimation: androidx.compose.ui.geometry.Offset origin>
<androidx.compose.material.ripple.RippleAnimation: float radius>
<androidx.compose.material.ripple.RippleAnimation: boolean bounded>
<androidx.compose.material.ripple.RippleAnimation: java.lang.Float startRadius>
<androidx.compose.material.ripple.RippleAnimation: java.lang.Float targetRadius>
<androidx.compose.material.ripple.RippleAnimation: androidx.compose.ui.geometry.Offset targetCenter>
<androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable animatedAlpha>
<androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable animatedRadiusPercent>
<androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable animatedCenterPercent>
<androidx.compose.material.ripple.RippleAnimation: kotlinx.coroutines.CompletableDeferred finishSignalDeferred>
<androidx.compose.material.ripple.RippleAnimation: androidx.compose.runtime.MutableState finishedFadingIn$delegate>
<androidx.compose.material.ripple.RippleAnimation: androidx.compose.runtime.MutableState finishRequested$delegate>
    private void <init>(androidx.compose.ui.geometry.Offset, float, boolean)
    {
        androidx.compose.material.ripple.RippleAnimation r0;
        androidx.compose.ui.geometry.Offset r1;
        float f0;
        boolean z0;
        androidx.compose.animation.core.Animatable $r2, $r3, $r4;
        kotlinx.coroutines.CompletableDeferred $r5;
        java.lang.Boolean $r6, $r8;
        androidx.compose.runtime.MutableState $r7, $r9;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation;

        r1 := @parameter0: androidx.compose.ui.geometry.Offset;

        f0 := @parameter1: float;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.ui.geometry.Offset origin> = r1;

        r0.<androidx.compose.material.ripple.RippleAnimation: float radius> = f0;

        r0.<androidx.compose.material.ripple.RippleAnimation: boolean bounded> = z0;

        $r2 = staticinvoke <androidx.compose.animation.core.AnimatableKt: androidx.compose.animation.core.Animatable Animatable$default(float,float,int,java.lang.Object)>(0.0F, 0.0F, 2, null);

        r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable animatedAlpha> = $r2;

        $r3 = staticinvoke <androidx.compose.animation.core.AnimatableKt: androidx.compose.animation.core.Animatable Animatable$default(float,float,int,java.lang.Object)>(0.0F, 0.0F, 2, null);

        r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable animatedRadiusPercent> = $r3;

        $r4 = staticinvoke <androidx.compose.animation.core.AnimatableKt: androidx.compose.animation.core.Animatable Animatable$default(float,float,int,java.lang.Object)>(0.0F, 0.0F, 2, null);

        r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable animatedCenterPercent> = $r4;

        $r5 = staticinvoke <kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred(kotlinx.coroutines.Job)>(null);

        r0.<androidx.compose.material.ripple.RippleAnimation: kotlinx.coroutines.CompletableDeferred finishSignalDeferred> = $r5;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r7 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r6, null, 2, null);

        r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.runtime.MutableState finishedFadingIn$delegate> = $r7;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r9 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r8, null, 2, null);

        r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.runtime.MutableState finishRequested$delegate> = $r9;

        return;
    }

    private final boolean getFinishedFadingIn()
    {
        androidx.compose.material.ripple.RippleAnimation r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation;

        $r2 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.runtime.MutableState finishedFadingIn$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private final void setFinishedFadingIn(boolean)
    {
        androidx.compose.material.ripple.RippleAnimation r0;
        boolean z0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Boolean r2;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.runtime.MutableState finishedFadingIn$delegate>;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    private final boolean getFinishRequested()
    {
        androidx.compose.material.ripple.RippleAnimation r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation;

        $r2 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.runtime.MutableState finishRequested$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private final void setFinishRequested(boolean)
    {
        androidx.compose.material.ripple.RippleAnimation r0;
        boolean z0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Boolean r2;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.runtime.MutableState finishRequested$delegate>;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public final java.lang.Object animate(kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r16, r17, r18;
        java.lang.Object $r1, r2, $r5, $r6, $r7, $r9, $r10;
        boolean $z0;
        kotlin.Unit $r4;
        kotlinx.coroutines.CompletableDeferred $r8;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.compose.material.ripple.RippleAnimation r12;
        androidx.compose.material.ripple.RippleAnimation$animate$1 $r13, r14;
        java.lang.IllegalStateException r15;

        r12 := @this: androidx.compose.material.ripple.RippleAnimation;

        r0 := @parameter0: kotlin.coroutines.Continuation;

        $z0 = r0 instanceof androidx.compose.material.ripple.RippleAnimation$animate$1;

        if $z0 == 0 goto label01;

        $r13 = (androidx.compose.material.ripple.RippleAnimation$animate$1) r0;

        $i0 = $r13.<androidx.compose.material.ripple.RippleAnimation$animate$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r13.<androidx.compose.material.ripple.RippleAnimation$animate$1: int label>;

        $i3 = $i2 - -2147483648;

        $r13.<androidx.compose.material.ripple.RippleAnimation$animate$1: int label> = $i3;

        goto label02;

     label01:
        r14 = new androidx.compose.material.ripple.RippleAnimation$animate$1;

        specialinvoke r14.<androidx.compose.material.ripple.RippleAnimation$animate$1: void <init>(androidx.compose.material.ripple.RippleAnimation,kotlin.coroutines.Continuation)>(r12, r0);

        $r13 = r14;

     label02:
        $r1 = $r13.<androidx.compose.material.ripple.RippleAnimation$animate$1: java.lang.Object result>;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r13.<androidx.compose.material.ripple.RippleAnimation$animate$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label06;
            case 3: goto label08;
            default: goto label10;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r13.<androidx.compose.material.ripple.RippleAnimation$animate$1: java.lang.Object L$0> = r12;

        $r13.<androidx.compose.material.ripple.RippleAnimation$animate$1: int label> = 1;

        r16 = (kotlin.coroutines.Continuation) $r13;

        $r10 = specialinvoke r12.<androidx.compose.material.ripple.RippleAnimation: java.lang.Object fadeIn(kotlin.coroutines.Continuation)>(r16);

        if $r10 != r2 goto label05;

        return r2;

     label04:
        $r7 = $r13.<androidx.compose.material.ripple.RippleAnimation$animate$1: java.lang.Object L$0>;

        r12 = (androidx.compose.material.ripple.RippleAnimation) $r7;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label05:
        specialinvoke r12.<androidx.compose.material.ripple.RippleAnimation: void setFinishedFadingIn(boolean)>(1);

        $r8 = r12.<androidx.compose.material.ripple.RippleAnimation: kotlinx.coroutines.CompletableDeferred finishSignalDeferred>;

        $r13.<androidx.compose.material.ripple.RippleAnimation$animate$1: java.lang.Object L$0> = r12;

        $r13.<androidx.compose.material.ripple.RippleAnimation$animate$1: int label> = 2;

        r17 = (kotlin.coroutines.Continuation) $r13;

        $r9 = interfaceinvoke $r8.<kotlinx.coroutines.CompletableDeferred: java.lang.Object await(kotlin.coroutines.Continuation)>(r17);

        if $r9 != r2 goto label07;

        return r2;

     label06:
        $r5 = $r13.<androidx.compose.material.ripple.RippleAnimation$animate$1: java.lang.Object L$0>;

        r12 = (androidx.compose.material.ripple.RippleAnimation) $r5;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label07:
        $r13.<androidx.compose.material.ripple.RippleAnimation$animate$1: java.lang.Object L$0> = null;

        $r13.<androidx.compose.material.ripple.RippleAnimation$animate$1: int label> = 3;

        r18 = (kotlin.coroutines.Continuation) $r13;

        $r6 = specialinvoke r12.<androidx.compose.material.ripple.RippleAnimation: java.lang.Object fadeOut(kotlin.coroutines.Continuation)>(r18);

        if $r6 != r2 goto label09;

        return r2;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label09:
        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label10:
        r15 = new java.lang.IllegalStateException;

        specialinvoke r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r15;
    }

    private final java.lang.Object fadeIn(kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation r0;
        kotlin.coroutines.Continuation $r1;
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2 $r2;
        kotlin.jvm.functions.Function2 $r3;
        java.lang.Object $r4, $r5;
        kotlin.Unit $r6;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = new androidx.compose.material.ripple.RippleAnimation$fadeIn$2;

        specialinvoke $r2.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: void <init>(androidx.compose.material.ripple.RippleAnimation,kotlin.coroutines.Continuation)>(r0, null);

        $r3 = (kotlin.jvm.functions.Function2) $r2;

        $r4 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r3, $r1);

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label1;

        return $r4;

     label1:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;
    }

    private final java.lang.Object fadeOut(kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation r0;
        kotlin.coroutines.Continuation $r1;
        androidx.compose.material.ripple.RippleAnimation$fadeOut$2 $r2;
        kotlin.jvm.functions.Function2 $r3;
        java.lang.Object $r4, $r5;
        kotlin.Unit $r6;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = new androidx.compose.material.ripple.RippleAnimation$fadeOut$2;

        specialinvoke $r2.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: void <init>(androidx.compose.material.ripple.RippleAnimation,kotlin.coroutines.Continuation)>(r0, null);

        $r3 = (kotlin.jvm.functions.Function2) $r2;

        $r4 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r3, $r1);

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label1;

        return $r4;

     label1:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;
    }

    public final void finish()
    {
        androidx.compose.material.ripple.RippleAnimation r0;
        kotlin.Unit $r1;
        kotlinx.coroutines.CompletableDeferred $r2;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation;

        specialinvoke r0.<androidx.compose.material.ripple.RippleAnimation: void setFinishRequested(boolean)>(1);

        $r2 = r0.<androidx.compose.material.ripple.RippleAnimation: kotlinx.coroutines.CompletableDeferred finishSignalDeferred>;

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke $r2.<kotlinx.coroutines.CompletableDeferred: boolean complete(java.lang.Object)>($r1);

        return;
    }

    public final void draw-4WTKRHQ(androidx.compose.ui.graphics.drawscope.DrawScope, long)
    {
        androidx.compose.material.ripple.RippleAnimation r0;
        androidx.compose.ui.graphics.drawscope.DrawScope $r1;
        long l0, l1, l2, l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27;
        int i3;
        androidx.compose.ui.graphics.drawscope.DrawContext $r4;
        androidx.compose.ui.graphics.drawscope.DrawTransform $r5;
        java.lang.Float $r6, $r7, $r19, $r20, $r22, $r23;
        androidx.compose.ui.geometry.Offset $r8, $r15, $r16, $r21, $r27, $r28, $r32, $r33;
        boolean $z5, $z6, $z7, $z8, $z10;
        androidx.compose.animation.core.Animatable $r9, $r24, $r29, $r34;
        java.lang.Object $r10, $r25, $r30, $r35;
        java.lang.Number $r11, $r26, $r31, $r36;
        androidx.compose.ui.graphics.ClipOp$Companion $r12;
        androidx.compose.ui.graphics.Canvas $r13, $r14;
        androidx.compose.ui.unit.Density $r17;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation;

        $r1 := @parameter0: androidx.compose.ui.graphics.drawscope.DrawScope;

        l0 := @parameter1: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$draw");

        $r6 = r0.<androidx.compose.material.ripple.RippleAnimation: java.lang.Float startRadius>;

        if $r6 != null goto label01;

        $l12 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        $f11 = staticinvoke <androidx.compose.material.ripple.RippleAnimationKt: float getRippleStartRadius-uvyYCjk(long)>($l12);

        $r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f11);

        r0.<androidx.compose.material.ripple.RippleAnimation: java.lang.Float startRadius> = $r19;

     label01:
        $r7 = r0.<androidx.compose.material.ripple.RippleAnimation: java.lang.Float targetRadius>;

        if $r7 != null goto label04;

        $f12 = r0.<androidx.compose.material.ripple.RippleAnimation: float radius>;

        $z7 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f12);

        if $z7 == 0 goto label02;

        $r17 = (androidx.compose.ui.unit.Density) $r1;

        $z8 = r0.<androidx.compose.material.ripple.RippleAnimation: boolean bounded>;

        $l11 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        $f10 = staticinvoke <androidx.compose.material.ripple.RippleAnimationKt: float getRippleEndRadius-cSwnlzA(androidx.compose.ui.unit.Density,boolean,long)>($r17, $z8, $l11);

        $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f10);

        goto label03;

     label02:
        $f8 = r0.<androidx.compose.material.ripple.RippleAnimation: float radius>;

        $f9 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: float toPx-0680j_4(float)>($f8);

        $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f9);

     label03:
        r0.<androidx.compose.material.ripple.RippleAnimation: java.lang.Float targetRadius> = $r20;

     label04:
        $r21 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.ui.geometry.Offset origin>;

        if $r21 != null goto label05;

        $l10 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getCenter-F1C5BW0()>();

        $r16 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l10);

        r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.ui.geometry.Offset origin> = $r16;

     label05:
        $r8 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.ui.geometry.Offset targetCenter>;

        if $r8 != null goto label06;

        $l7 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        $f4 = staticinvoke <androidx.compose.ui.geometry.Size: float getWidth-impl(long)>($l7);

        $f5 = $f4 / 2.0F;

        $l8 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        $f6 = staticinvoke <androidx.compose.ui.geometry.Size: float getHeight-impl(long)>($l8);

        $f7 = $f6 / 2.0F;

        $l9 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f5, $f7);

        $r15 = staticinvoke <androidx.compose.ui.geometry.Offset: androidx.compose.ui.geometry.Offset box-impl(long)>($l9);

        r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.ui.geometry.Offset targetCenter> = $r15;

     label06:
        $z5 = specialinvoke r0.<androidx.compose.material.ripple.RippleAnimation: boolean getFinishRequested()>();

        if $z5 == 0 goto label07;

        $z6 = specialinvoke r0.<androidx.compose.material.ripple.RippleAnimation: boolean getFinishedFadingIn()>();

        if $z6 != 0 goto label07;

        $f13 = 1.0F;

        goto label08;

     label07:
        $r9 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable animatedAlpha>;

        $r10 = virtualinvoke $r9.<androidx.compose.animation.core.Animatable: java.lang.Object getValue()>();

        $r11 = (java.lang.Number) $r10;

        $f13 = virtualinvoke $r11.<java.lang.Number: float floatValue()>();

     label08:
        $r22 = r0.<androidx.compose.material.ripple.RippleAnimation: java.lang.Float startRadius>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r22);

        $f14 = virtualinvoke $r22.<java.lang.Float: float floatValue()>();

        $r23 = r0.<androidx.compose.material.ripple.RippleAnimation: java.lang.Float targetRadius>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r23);

        $f15 = virtualinvoke $r23.<java.lang.Float: float floatValue()>();

        $r24 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable animatedRadiusPercent>;

        $r25 = virtualinvoke $r24.<androidx.compose.animation.core.Animatable: java.lang.Object getValue()>();

        $r26 = (java.lang.Number) $r25;

        $f16 = virtualinvoke $r26.<java.lang.Number: float floatValue()>();

        $f17 = staticinvoke <androidx.compose.ui.util.MathHelpersKt: float lerp(float,float,float)>($f14, $f15, $f16);

        $r27 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.ui.geometry.Offset origin>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r27);

        $l13 = virtualinvoke $r27.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $f18 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>($l13);

        $r28 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.ui.geometry.Offset targetCenter>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r28);

        $l14 = virtualinvoke $r28.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $f19 = staticinvoke <androidx.compose.ui.geometry.Offset: float getX-impl(long)>($l14);

        $r29 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable animatedCenterPercent>;

        $r30 = virtualinvoke $r29.<androidx.compose.animation.core.Animatable: java.lang.Object getValue()>();

        $r31 = (java.lang.Number) $r30;

        $f20 = virtualinvoke $r31.<java.lang.Number: float floatValue()>();

        $f21 = staticinvoke <androidx.compose.ui.util.MathHelpersKt: float lerp(float,float,float)>($f18, $f19, $f20);

        $r32 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.ui.geometry.Offset origin>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r32);

        $l15 = virtualinvoke $r32.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $f22 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>($l15);

        $r33 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.ui.geometry.Offset targetCenter>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r33);

        $l16 = virtualinvoke $r33.<androidx.compose.ui.geometry.Offset: long unbox-impl()>();

        $f23 = staticinvoke <androidx.compose.ui.geometry.Offset: float getY-impl(long)>($l16);

        $r34 = r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable animatedCenterPercent>;

        $r35 = virtualinvoke $r34.<androidx.compose.animation.core.Animatable: java.lang.Object getValue()>();

        $r36 = (java.lang.Number) $r35;

        $f24 = virtualinvoke $r36.<java.lang.Number: float floatValue()>();

        $f25 = staticinvoke <androidx.compose.ui.util.MathHelpersKt: float lerp(float,float,float)>($f22, $f23, $f24);

        l1 = staticinvoke <androidx.compose.ui.geometry.OffsetKt: long Offset(float,float)>($f21, $f25);

        $f26 = staticinvoke <androidx.compose.ui.graphics.Color: float getAlpha-impl(long)>(l0);

        $f27 = $f26 * $f13;

        l2 = staticinvoke <androidx.compose.ui.graphics.Color: long copy-wmQWz5c$default(long,float,float,float,float,int,java.lang.Object)>(l0, $f27, 0.0F, 0.0F, 0.0F, 14, null);

        $z10 = r0.<androidx.compose.material.ripple.RippleAnimation: boolean bounded>;

        if $z10 == 0 goto label09;

        f0 = 0.0F;

        f1 = 0.0F;

        $l5 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        f2 = staticinvoke <androidx.compose.ui.geometry.Size: float getWidth-impl(long)>($l5);

        $l6 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: long getSize-NH-jbRc()>();

        f3 = staticinvoke <androidx.compose.ui.geometry.Size: float getHeight-impl(long)>($l6);

        $r12 = <androidx.compose.ui.graphics.ClipOp: androidx.compose.ui.graphics.ClipOp$Companion Companion>;

        i3 = virtualinvoke $r12.<androidx.compose.ui.graphics.ClipOp$Companion: int getIntersect-rtfAjoo()>();

        $r4 = interfaceinvoke $r1.<androidx.compose.ui.graphics.drawscope.DrawScope: androidx.compose.ui.graphics.drawscope.DrawContext getDrawContext()>();

        l4 = interfaceinvoke $r4.<androidx.compose.ui.graphics.drawscope.DrawContext: long getSize-NH-jbRc()>();

        $r13 = interfaceinvoke $r4.<androidx.compose.ui.graphics.drawscope.DrawContext: androidx.compose.ui.graphics.Canvas getCanvas()>();

        interfaceinvoke $r13.<androidx.compose.ui.graphics.Canvas: void save()>();

        $r5 = interfaceinvoke $r4.<androidx.compose.ui.graphics.drawscope.DrawContext: androidx.compose.ui.graphics.drawscope.DrawTransform getTransform()>();

        interfaceinvoke $r5.<androidx.compose.ui.graphics.drawscope.DrawTransform: void clipRect-N_I0leg(float,float,float,float,int)>(f0, f1, f2, f3, i3);

        staticinvoke <androidx.compose.ui.graphics.drawscope.DrawScope$DefaultImpls: void drawCircle-VaOC9Bg$default(androidx.compose.ui.graphics.drawscope.DrawScope,long,float,long,float,androidx.compose.ui.graphics.drawscope.DrawStyle,androidx.compose.ui.graphics.ColorFilter,int,int,java.lang.Object)>($r1, l2, $f17, l1, 0.0F, null, null, 0, 120, null);

        $r14 = interfaceinvoke $r4.<androidx.compose.ui.graphics.drawscope.DrawContext: androidx.compose.ui.graphics.Canvas getCanvas()>();

        interfaceinvoke $r14.<androidx.compose.ui.graphics.Canvas: void restore()>();

        interfaceinvoke $r4.<androidx.compose.ui.graphics.drawscope.DrawContext: void setSize-uvyYCjk(long)>(l4);

        goto label10;

     label09:
        staticinvoke <androidx.compose.ui.graphics.drawscope.DrawScope$DefaultImpls: void drawCircle-VaOC9Bg$default(androidx.compose.ui.graphics.drawscope.DrawScope,long,float,long,float,androidx.compose.ui.graphics.drawscope.DrawStyle,androidx.compose.ui.graphics.ColorFilter,int,int,java.lang.Object)>($r1, l2, $f17, l1, 0.0F, null, null, 0, 120, null);

     label10:
        return;
    }

    public void <init>(androidx.compose.ui.geometry.Offset, float, boolean, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.material.ripple.RippleAnimation r0;
        androidx.compose.ui.geometry.Offset r1;
        float f0;
        boolean z0;
        kotlin.jvm.internal.DefaultConstructorMarker $r2;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation;

        r1 := @parameter0: androidx.compose.ui.geometry.Offset;

        f0 := @parameter1: float;

        z0 := @parameter2: boolean;

        $r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.material.ripple.RippleAnimation: void <init>(androidx.compose.ui.geometry.Offset,float,boolean)>(r1, f0, z0);

        return;
    }

    public static final java.lang.Object access$fadeIn(androidx.compose.material.ripple.RippleAnimation, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation $r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.compose.material.ripple.RippleAnimation;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = specialinvoke $r0.<androidx.compose.material.ripple.RippleAnimation: java.lang.Object fadeIn(kotlin.coroutines.Continuation)>($r1);

        return $r2;
    }

    public static final androidx.compose.animation.core.Animatable access$getAnimatedAlpha$p(androidx.compose.material.ripple.RippleAnimation)
    {
        androidx.compose.material.ripple.RippleAnimation $r0;
        androidx.compose.animation.core.Animatable $r1;

        $r0 := @parameter0: androidx.compose.material.ripple.RippleAnimation;

        $r1 = $r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable animatedAlpha>;

        return $r1;
    }

    public static final androidx.compose.animation.core.Animatable access$getAnimatedRadiusPercent$p(androidx.compose.material.ripple.RippleAnimation)
    {
        androidx.compose.material.ripple.RippleAnimation $r0;
        androidx.compose.animation.core.Animatable $r1;

        $r0 := @parameter0: androidx.compose.material.ripple.RippleAnimation;

        $r1 = $r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable animatedRadiusPercent>;

        return $r1;
    }

    public static final androidx.compose.animation.core.Animatable access$getAnimatedCenterPercent$p(androidx.compose.material.ripple.RippleAnimation)
    {
        androidx.compose.material.ripple.RippleAnimation $r0;
        androidx.compose.animation.core.Animatable $r1;

        $r0 := @parameter0: androidx.compose.material.ripple.RippleAnimation;

        $r1 = $r0.<androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable animatedCenterPercent>;

        return $r1;
    }

    public static final java.lang.Object access$fadeOut(androidx.compose.material.ripple.RippleAnimation, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation $r0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.compose.material.ripple.RippleAnimation;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r2 = specialinvoke $r0.<androidx.compose.material.ripple.RippleAnimation: java.lang.Object fadeOut(kotlin.coroutines.Continuation)>($r1);

        return $r2;
    }

androidx.compose.material.ripple.RippleAnimation$animate$1
<androidx.compose.material.ripple.RippleAnimation$animate$1: java.lang.Object L$0>
<androidx.compose.material.ripple.RippleAnimation$animate$1: java.lang.Object result>
<androidx.compose.material.ripple.RippleAnimation$animate$1: androidx.compose.material.ripple.RippleAnimation this$0>
<androidx.compose.material.ripple.RippleAnimation$animate$1: int label>
    void <init>(androidx.compose.material.ripple.RippleAnimation, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$animate$1 r0;
        androidx.compose.material.ripple.RippleAnimation r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$animate$1;

        r1 := @parameter0: androidx.compose.material.ripple.RippleAnimation;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.material.ripple.RippleAnimation$animate$1: androidx.compose.material.ripple.RippleAnimation this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.material.ripple.RippleAnimation$animate$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.compose.material.ripple.RippleAnimation $r3;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$animate$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.compose.material.ripple.RippleAnimation$animate$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.compose.material.ripple.RippleAnimation$animate$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.compose.material.ripple.RippleAnimation$animate$1: int label> = $i1;

        $r3 = r0.<androidx.compose.material.ripple.RippleAnimation$animate$1: androidx.compose.material.ripple.RippleAnimation this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.compose.material.ripple.RippleAnimation: java.lang.Object animate(kotlin.coroutines.Continuation)>($r2);

        return $r4;
    }

androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1
<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1: int label>
<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1: androidx.compose.material.ripple.RippleAnimation this$0>
    void <init>(androidx.compose.material.ripple.RippleAnimation, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1 r0;
        androidx.compose.material.ripple.RippleAnimation $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1;

        $r1 := @parameter0: androidx.compose.material.ripple.RippleAnimation;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1: androidx.compose.material.ripple.RippleAnimation this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1 r0;
        java.lang.Object $r1, r2, $r11;
        int $i0;
        kotlin.Unit $r3;
        androidx.compose.material.ripple.RippleAnimation $r4;
        androidx.compose.animation.core.Animatable $r5;
        java.lang.Float $r6;
        androidx.compose.animation.core.Easing $r7;
        androidx.compose.animation.core.TweenSpec $r8;
        androidx.compose.animation.core.AnimationSpec $r9;
        kotlin.coroutines.Continuation $r10;
        java.lang.IllegalStateException $r12;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1: androidx.compose.material.ripple.RippleAnimation this$0>;

        $r5 = staticinvoke <androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable access$getAnimatedAlpha$p(androidx.compose.material.ripple.RippleAnimation)>($r4);

        $r6 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(1.0F);

        $r7 = staticinvoke <androidx.compose.animation.core.EasingKt: androidx.compose.animation.core.Easing getLinearEasing()>();

        $r8 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.TweenSpec tween$default(int,int,androidx.compose.animation.core.Easing,int,java.lang.Object)>(75, 0, $r7, 2, null);

        $r9 = (androidx.compose.animation.core.AnimationSpec) $r8;

        $r10 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1: int label> = 1;

        $r11 = staticinvoke <androidx.compose.animation.core.Animatable: java.lang.Object animateTo$default(androidx.compose.animation.core.Animatable,java.lang.Object,androidx.compose.animation.core.AnimationSpec,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r5, $r6, $r9, null, null, $r10, 12, null);

        if $r11 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r12;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.compose.material.ripple.RippleAnimation $r4;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1;

        $r4 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1: androidx.compose.material.ripple.RippleAnimation this$0>;

        specialinvoke $r3.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1: void <init>(androidx.compose.material.ripple.RippleAnimation,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2
<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2: int label>
<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2: androidx.compose.material.ripple.RippleAnimation this$0>
    void <init>(androidx.compose.material.ripple.RippleAnimation, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2 r0;
        androidx.compose.material.ripple.RippleAnimation $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2;

        $r1 := @parameter0: androidx.compose.material.ripple.RippleAnimation;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2: androidx.compose.material.ripple.RippleAnimation this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2 r0;
        java.lang.Object $r1, r2, $r11;
        int $i0;
        kotlin.Unit $r3;
        androidx.compose.material.ripple.RippleAnimation $r4;
        androidx.compose.animation.core.Animatable $r5;
        java.lang.Float $r6;
        androidx.compose.animation.core.Easing $r7;
        androidx.compose.animation.core.TweenSpec $r8;
        androidx.compose.animation.core.AnimationSpec $r9;
        kotlin.coroutines.Continuation $r10;
        java.lang.IllegalStateException $r12;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2: androidx.compose.material.ripple.RippleAnimation this$0>;

        $r5 = staticinvoke <androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable access$getAnimatedRadiusPercent$p(androidx.compose.material.ripple.RippleAnimation)>($r4);

        $r6 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(1.0F);

        $r7 = staticinvoke <androidx.compose.animation.core.EasingKt: androidx.compose.animation.core.Easing getFastOutSlowInEasing()>();

        $r8 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.TweenSpec tween$default(int,int,androidx.compose.animation.core.Easing,int,java.lang.Object)>(225, 0, $r7, 2, null);

        $r9 = (androidx.compose.animation.core.AnimationSpec) $r8;

        $r10 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2: int label> = 1;

        $r11 = staticinvoke <androidx.compose.animation.core.Animatable: java.lang.Object animateTo$default(androidx.compose.animation.core.Animatable,java.lang.Object,androidx.compose.animation.core.AnimationSpec,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r5, $r6, $r9, null, null, $r10, 12, null);

        if $r11 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r12;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.compose.material.ripple.RippleAnimation $r4;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2;

        $r4 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2: androidx.compose.material.ripple.RippleAnimation this$0>;

        specialinvoke $r3.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2: void <init>(androidx.compose.material.ripple.RippleAnimation,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3
<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3: int label>
<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3: androidx.compose.material.ripple.RippleAnimation this$0>
    void <init>(androidx.compose.material.ripple.RippleAnimation, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3 r0;
        androidx.compose.material.ripple.RippleAnimation $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3;

        $r1 := @parameter0: androidx.compose.material.ripple.RippleAnimation;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3: androidx.compose.material.ripple.RippleAnimation this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3 r0;
        java.lang.Object $r1, r2, $r11;
        int $i0;
        kotlin.Unit $r3;
        androidx.compose.material.ripple.RippleAnimation $r4;
        androidx.compose.animation.core.Animatable $r5;
        java.lang.Float $r6;
        androidx.compose.animation.core.Easing $r7;
        androidx.compose.animation.core.TweenSpec $r8;
        androidx.compose.animation.core.AnimationSpec $r9;
        kotlin.coroutines.Continuation $r10;
        java.lang.IllegalStateException $r12;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3: androidx.compose.material.ripple.RippleAnimation this$0>;

        $r5 = staticinvoke <androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable access$getAnimatedCenterPercent$p(androidx.compose.material.ripple.RippleAnimation)>($r4);

        $r6 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(1.0F);

        $r7 = staticinvoke <androidx.compose.animation.core.EasingKt: androidx.compose.animation.core.Easing getLinearEasing()>();

        $r8 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.TweenSpec tween$default(int,int,androidx.compose.animation.core.Easing,int,java.lang.Object)>(225, 0, $r7, 2, null);

        $r9 = (androidx.compose.animation.core.AnimationSpec) $r8;

        $r10 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3: int label> = 1;

        $r11 = staticinvoke <androidx.compose.animation.core.Animatable: java.lang.Object animateTo$default(androidx.compose.animation.core.Animatable,java.lang.Object,androidx.compose.animation.core.AnimationSpec,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r5, $r6, $r9, null, null, $r10, 12, null);

        if $r11 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r12;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.compose.material.ripple.RippleAnimation $r4;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3;

        $r4 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3: androidx.compose.material.ripple.RippleAnimation this$0>;

        specialinvoke $r3.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3: void <init>(androidx.compose.material.ripple.RippleAnimation,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.compose.material.ripple.RippleAnimation$fadeIn$2
<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: int label>
<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: java.lang.Object L$0>
<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: androidx.compose.material.ripple.RippleAnimation this$0>
    void <init>(androidx.compose.material.ripple.RippleAnimation, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2 r0;
        androidx.compose.material.ripple.RippleAnimation $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2;

        $r1 := @parameter0: androidx.compose.material.ripple.RippleAnimation;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: androidx.compose.material.ripple.RippleAnimation this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2 r0;
        java.lang.Object $r1, $r4;
        kotlinx.coroutines.CoroutineScope $r2;
        int $i0;
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1 $r5;
        androidx.compose.material.ripple.RippleAnimation $r6, $r10, $r14;
        kotlin.jvm.functions.Function2 $r7, $r11, $r15;
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2 $r9;
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3 $r13;
        kotlinx.coroutines.Job $r16;
        java.lang.IllegalStateException $r17;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: java.lang.Object L$0>;

        $r2 = (kotlinx.coroutines.CoroutineScope) $r4;

        $r5 = new androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1;

        $r6 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: androidx.compose.material.ripple.RippleAnimation this$0>;

        specialinvoke $r5.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$1: void <init>(androidx.compose.material.ripple.RippleAnimation,kotlin.coroutines.Continuation)>($r6, null);

        $r7 = (kotlin.jvm.functions.Function2) $r5;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, null, null, $r7, 3, null);

        $r9 = new androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2;

        $r10 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: androidx.compose.material.ripple.RippleAnimation this$0>;

        specialinvoke $r9.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$2: void <init>(androidx.compose.material.ripple.RippleAnimation,kotlin.coroutines.Continuation)>($r10, null);

        $r11 = (kotlin.jvm.functions.Function2) $r9;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, null, null, $r11, 3, null);

        $r13 = new androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3;

        $r14 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: androidx.compose.material.ripple.RippleAnimation this$0>;

        specialinvoke $r13.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2$3: void <init>(androidx.compose.material.ripple.RippleAnimation,kotlin.coroutines.Continuation)>($r14, null);

        $r15 = (kotlin.jvm.functions.Function2) $r13;

        $r16 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, null, null, $r15, 3, null);

        return $r16;

     label2:
        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r17;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.compose.material.ripple.RippleAnimation $r5;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.compose.material.ripple.RippleAnimation$fadeIn$2;

        $r5 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: androidx.compose.material.ripple.RippleAnimation this$0>;

        specialinvoke $r4.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: void <init>(androidx.compose.material.ripple.RippleAnimation,kotlin.coroutines.Continuation)>($r5, $r2);

        r3 = $r4;

        r3.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.material.ripple.RippleAnimation$fadeIn$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeIn$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeIn$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.material.ripple.RippleAnimation$fadeIn$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1
<androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1: int label>
<androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1: androidx.compose.material.ripple.RippleAnimation this$0>
    void <init>(androidx.compose.material.ripple.RippleAnimation, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1 r0;
        androidx.compose.material.ripple.RippleAnimation $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1;

        $r1 := @parameter0: androidx.compose.material.ripple.RippleAnimation;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1: androidx.compose.material.ripple.RippleAnimation this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1 r0;
        java.lang.Object $r1, r2, $r11;
        int $i0;
        kotlin.Unit $r3;
        androidx.compose.material.ripple.RippleAnimation $r4;
        androidx.compose.animation.core.Animatable $r5;
        java.lang.Float $r6;
        androidx.compose.animation.core.Easing $r7;
        androidx.compose.animation.core.TweenSpec $r8;
        androidx.compose.animation.core.AnimationSpec $r9;
        kotlin.coroutines.Continuation $r10;
        java.lang.IllegalStateException $r12;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1: androidx.compose.material.ripple.RippleAnimation this$0>;

        $r5 = staticinvoke <androidx.compose.material.ripple.RippleAnimation: androidx.compose.animation.core.Animatable access$getAnimatedAlpha$p(androidx.compose.material.ripple.RippleAnimation)>($r4);

        $r6 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(0.0F);

        $r7 = staticinvoke <androidx.compose.animation.core.EasingKt: androidx.compose.animation.core.Easing getLinearEasing()>();

        $r8 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.TweenSpec tween$default(int,int,androidx.compose.animation.core.Easing,int,java.lang.Object)>(150, 0, $r7, 2, null);

        $r9 = (androidx.compose.animation.core.AnimationSpec) $r8;

        $r10 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1: int label> = 1;

        $r11 = staticinvoke <androidx.compose.animation.core.Animatable: java.lang.Object animateTo$default(androidx.compose.animation.core.Animatable,java.lang.Object,androidx.compose.animation.core.AnimationSpec,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r5, $r6, $r9, null, null, $r10, 12, null);

        if $r11 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r12;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.compose.material.ripple.RippleAnimation $r4;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1;

        $r4 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1: androidx.compose.material.ripple.RippleAnimation this$0>;

        specialinvoke $r3.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1: void <init>(androidx.compose.material.ripple.RippleAnimation,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.compose.material.ripple.RippleAnimation$fadeOut$2
<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: int label>
<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: java.lang.Object L$0>
<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: androidx.compose.material.ripple.RippleAnimation this$0>
    void <init>(androidx.compose.material.ripple.RippleAnimation, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeOut$2 r0;
        androidx.compose.material.ripple.RippleAnimation $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeOut$2;

        $r1 := @parameter0: androidx.compose.material.ripple.RippleAnimation;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: androidx.compose.material.ripple.RippleAnimation this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeOut$2 r0;
        java.lang.Object $r1, $r4;
        kotlinx.coroutines.CoroutineScope $r2;
        int $i0;
        androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1 $r5;
        androidx.compose.material.ripple.RippleAnimation $r6;
        kotlin.jvm.functions.Function2 $r7;
        kotlinx.coroutines.Job $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeOut$2;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: java.lang.Object L$0>;

        $r2 = (kotlinx.coroutines.CoroutineScope) $r4;

        $r5 = new androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1;

        $r6 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: androidx.compose.material.ripple.RippleAnimation this$0>;

        specialinvoke $r5.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2$1: void <init>(androidx.compose.material.ripple.RippleAnimation,kotlin.coroutines.Continuation)>($r6, null);

        $r7 = (kotlin.jvm.functions.Function2) $r5;

        $r8 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r2, null, null, $r7, 3, null);

        return $r8;

     label2:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r9;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeOut$2 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.compose.material.ripple.RippleAnimation $r5;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeOut$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.compose.material.ripple.RippleAnimation$fadeOut$2;

        $r5 = r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: androidx.compose.material.ripple.RippleAnimation this$0>;

        specialinvoke $r4.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: void <init>(androidx.compose.material.ripple.RippleAnimation,kotlin.coroutines.Continuation)>($r5, $r2);

        r3 = $r4;

        r3.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeOut$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeOut$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.compose.material.ripple.RippleAnimation$fadeOut$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.compose.material.ripple.RippleAnimation$fadeOut$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.compose.material.ripple.RippleAnimation$fadeOut$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.compose.material.ripple.RippleAnimation$fadeOut$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

