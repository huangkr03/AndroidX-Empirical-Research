androidx.compose.animation.AnimatedContentScope
<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.core.Transition transition>
<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.Alignment contentAlignment>
<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.unit.LayoutDirection layoutDirection>
<androidx.compose.animation.AnimatedContentScope: androidx.compose.runtime.MutableState measuredSize$delegate>
<androidx.compose.animation.AnimatedContentScope: java.util.Map targetSizeMap>
<androidx.compose.animation.AnimatedContentScope: androidx.compose.runtime.State animatedSize>
<androidx.compose.animation.AnimatedContentScope: int $stable>
    public void <init>(androidx.compose.animation.core.Transition, androidx.compose.ui.Alignment, androidx.compose.ui.unit.LayoutDirection)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.animation.core.Transition r1;
        androidx.compose.ui.Alignment r2;
        androidx.compose.ui.unit.LayoutDirection r3;
        androidx.compose.ui.unit.IntSize$Companion $r4;
        long $l0;
        androidx.compose.ui.unit.IntSize $r5;
        androidx.compose.runtime.MutableState $r6;
        java.util.LinkedHashMap $r7;
        java.util.Map $r8;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        r1 := @parameter0: androidx.compose.animation.core.Transition;

        r2 := @parameter1: androidx.compose.ui.Alignment;

        r3 := @parameter2: androidx.compose.ui.unit.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transition");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "contentAlignment");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.core.Transition transition> = r1;

        r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.Alignment contentAlignment> = r2;

        r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.unit.LayoutDirection layoutDirection> = r3;

        $r4 = <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize$Companion Companion>;

        $l0 = virtualinvoke $r4.<androidx.compose.ui.unit.IntSize$Companion: long getZero-YbymL2g()>();

        $r5 = staticinvoke <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize box-impl(long)>($l0);

        $r6 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r5, null, 2, null);

        r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.runtime.MutableState measuredSize$delegate> = $r6;

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        $r8 = (java.util.Map) $r7;

        r0.<androidx.compose.animation.AnimatedContentScope: java.util.Map targetSizeMap> = $r8;

        return;
    }

    public final androidx.compose.animation.core.Transition getTransition$animation_release()
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.animation.core.Transition $r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.core.Transition transition>;

        return $r1;
    }

    public final androidx.compose.ui.Alignment getContentAlignment$animation_release()
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.ui.Alignment $r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.Alignment contentAlignment>;

        return $r1;
    }

    public final void setContentAlignment$animation_release(androidx.compose.ui.Alignment)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.ui.Alignment r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        r1 := @parameter0: androidx.compose.ui.Alignment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.Alignment contentAlignment> = r1;

        return;
    }

    public final androidx.compose.ui.unit.LayoutDirection getLayoutDirection$animation_release()
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.ui.unit.LayoutDirection $r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.unit.LayoutDirection layoutDirection>;

        return $r1;
    }

    public final void setLayoutDirection$animation_release(androidx.compose.ui.unit.LayoutDirection)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.ui.unit.LayoutDirection r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        r1 := @parameter0: androidx.compose.ui.unit.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.unit.LayoutDirection layoutDirection> = r1;

        return;
    }

    public java.lang.Object getInitialState()
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.animation.core.Transition $r1;
        androidx.compose.animation.core.Transition$Segment $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.core.Transition transition>;

        $r2 = virtualinvoke $r1.<androidx.compose.animation.core.Transition: androidx.compose.animation.core.Transition$Segment getSegment()>();

        $r3 = interfaceinvoke $r2.<androidx.compose.animation.core.Transition$Segment: java.lang.Object getInitialState()>();

        return $r3;
    }

    public java.lang.Object getTargetState()
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.animation.core.Transition $r1;
        androidx.compose.animation.core.Transition$Segment $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.core.Transition transition>;

        $r2 = virtualinvoke $r1.<androidx.compose.animation.core.Transition: androidx.compose.animation.core.Transition$Segment getSegment()>();

        $r3 = interfaceinvoke $r2.<androidx.compose.animation.core.Transition$Segment: java.lang.Object getTargetState()>();

        return $r3;
    }

    public final androidx.compose.animation.ContentTransform using(androidx.compose.animation.ContentTransform, androidx.compose.animation.SizeTransform)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.animation.ContentTransform $r1, r3;
        androidx.compose.animation.SizeTransform r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        $r1 := @parameter0: androidx.compose.animation.ContentTransform;

        r2 := @parameter1: androidx.compose.animation.SizeTransform;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        r3 = $r1;

        virtualinvoke r3.<androidx.compose.animation.ContentTransform: void setSizeTransform$animation_release(androidx.compose.animation.SizeTransform)>(r2);

        return r3;
    }

    public final androidx.compose.animation.EnterTransition slideIntoContainer-HTTW7Ok(int, androidx.compose.animation.core.FiniteAnimationSpec, kotlin.jvm.functions.Function1)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        int i0, $i1, $i2;
        androidx.compose.animation.core.FiniteAnimationSpec r1;
        kotlin.jvm.functions.Function1 r2, $r7, $r9, $r11, $r13;
        boolean $z0, $z1, $z2, $z3;
        androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion $r3, $r4;
        androidx.compose.animation.EnterTransition$Companion $r5;
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5 $r6;
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4 $r8;
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3 $r10;
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2 $r12;
        androidx.compose.animation.EnterTransition $r14;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.animation.core.FiniteAnimationSpec;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animationSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "initialOffset");

        $z0 = specialinvoke r0.<androidx.compose.animation.AnimatedContentScope: boolean isLeft-9jb1Dl8(int)>(i0);

        if $z0 == 0 goto label1;

        $r12 = new androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2;

        specialinvoke $r12.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2: void <init>(kotlin.jvm.functions.Function1,androidx.compose.animation.AnimatedContentScope)>(r2, r0);

        $r13 = (kotlin.jvm.functions.Function1) $r12;

        $r14 = staticinvoke <androidx.compose.animation.EnterExitTransitionKt: androidx.compose.animation.EnterTransition slideInHorizontally(androidx.compose.animation.core.FiniteAnimationSpec,kotlin.jvm.functions.Function1)>(r1, $r13);

        goto label5;

     label1:
        $z1 = specialinvoke r0.<androidx.compose.animation.AnimatedContentScope: boolean isRight-9jb1Dl8(int)>(i0);

        if $z1 == 0 goto label2;

        $r10 = new androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3;

        specialinvoke $r10.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3: void <init>(kotlin.jvm.functions.Function1,androidx.compose.animation.AnimatedContentScope)>(r2, r0);

        $r11 = (kotlin.jvm.functions.Function1) $r10;

        $r14 = staticinvoke <androidx.compose.animation.EnterExitTransitionKt: androidx.compose.animation.EnterTransition slideInHorizontally(androidx.compose.animation.core.FiniteAnimationSpec,kotlin.jvm.functions.Function1)>(r1, $r11);

        goto label5;

     label2:
        $r3 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion Companion>;

        $i1 = virtualinvoke $r3.<androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion: int getUp-aUPqQNE()>();

        $z2 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>(i0, $i1);

        if $z2 == 0 goto label3;

        $r8 = new androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4;

        specialinvoke $r8.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4: void <init>(kotlin.jvm.functions.Function1,androidx.compose.animation.AnimatedContentScope)>(r2, r0);

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        $r14 = staticinvoke <androidx.compose.animation.EnterExitTransitionKt: androidx.compose.animation.EnterTransition slideInVertically(androidx.compose.animation.core.FiniteAnimationSpec,kotlin.jvm.functions.Function1)>(r1, $r9);

        goto label5;

     label3:
        $r4 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion Companion>;

        $i2 = virtualinvoke $r4.<androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion: int getDown-aUPqQNE()>();

        $z3 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>(i0, $i2);

        if $z3 == 0 goto label4;

        $r6 = new androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5;

        specialinvoke $r6.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5: void <init>(kotlin.jvm.functions.Function1,androidx.compose.animation.AnimatedContentScope)>(r2, r0);

        $r7 = (kotlin.jvm.functions.Function1) $r6;

        $r14 = staticinvoke <androidx.compose.animation.EnterExitTransitionKt: androidx.compose.animation.EnterTransition slideInVertically(androidx.compose.animation.core.FiniteAnimationSpec,kotlin.jvm.functions.Function1)>(r1, $r7);

        goto label5;

     label4:
        $r5 = <androidx.compose.animation.EnterTransition: androidx.compose.animation.EnterTransition$Companion Companion>;

        $r14 = virtualinvoke $r5.<androidx.compose.animation.EnterTransition$Companion: androidx.compose.animation.EnterTransition getNone()>();

     label5:
        return $r14;
    }

    public static androidx.compose.animation.EnterTransition slideIntoContainer-HTTW7Ok$default(androidx.compose.animation.AnimatedContentScope, int, androidx.compose.animation.core.FiniteAnimationSpec, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        int i0, i1, $i2, $i3;
        java.lang.Object r1;
        androidx.compose.animation.EnterTransition $r2;
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1 $r3;
        androidx.compose.ui.unit.IntOffset$Companion $r4;
        long $l4;
        androidx.compose.ui.unit.IntOffset $r5;
        androidx.compose.animation.core.SpringSpec $r6;
        androidx.compose.animation.core.FiniteAnimationSpec r7;
        kotlin.jvm.functions.Function1 r8;

        r0 := @parameter0: androidx.compose.animation.AnimatedContentScope;

        i0 := @parameter1: int;

        r7 := @parameter2: androidx.compose.animation.core.FiniteAnimationSpec;

        r8 := @parameter3: kotlin.jvm.functions.Function1;

        i1 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        $r4 = <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset$Companion Companion>;

        $l4 = staticinvoke <androidx.compose.animation.core.VisibilityThresholdsKt: long getVisibilityThreshold(androidx.compose.ui.unit.IntOffset$Companion)>($r4);

        $r5 = staticinvoke <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset box-impl(long)>($l4);

        $r6 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.SpringSpec spring$default(float,float,java.lang.Object,int,java.lang.Object)>(0.0F, 0.0F, $r5, 3, null);

        r7 = (androidx.compose.animation.core.FiniteAnimationSpec) $r6;

     label1:
        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        $r3 = <androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1 INSTANCE>;

        r8 = (kotlin.jvm.functions.Function1) $r3;

     label2:
        $r2 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.EnterTransition slideIntoContainer-HTTW7Ok(int,androidx.compose.animation.core.FiniteAnimationSpec,kotlin.jvm.functions.Function1)>(i0, r7, r8);

        return $r2;
    }

    private final boolean isLeft-9jb1Dl8(int)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        int $i0, $i1, $i2, $i3;
        androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        androidx.compose.ui.unit.LayoutDirection $r4, $r5, $r6, $r7;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        $i0 := @parameter0: int;

        $r1 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion Companion>;

        $i1 = virtualinvoke $r1.<androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion: int getLeft-aUPqQNE()>();

        $z0 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>($i0, $i1);

        if $z0 != 0 goto label2;

        $r2 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion Companion>;

        $i2 = virtualinvoke $r2.<androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion: int getStart-aUPqQNE()>();

        $z1 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>($i0, $i2);

        if $z1 == 0 goto label1;

        $r7 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.unit.LayoutDirection layoutDirection>;

        $r6 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Ltr>;

        if $r7 == $r6 goto label2;

     label1:
        $r3 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion Companion>;

        $i3 = virtualinvoke $r3.<androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion: int getEnd-aUPqQNE()>();

        $z2 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>($i0, $i3);

        if $z2 == 0 goto label3;

        $r5 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.unit.LayoutDirection layoutDirection>;

        $r4 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Rtl>;

        if $r5 != $r4 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    private final boolean isRight-9jb1Dl8(int)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        int $i0, $i1, $i2, $i3;
        androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3;
        androidx.compose.ui.unit.LayoutDirection $r4, $r5, $r6, $r7;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        $i0 := @parameter0: int;

        $r1 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion Companion>;

        $i1 = virtualinvoke $r1.<androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion: int getRight-aUPqQNE()>();

        $z0 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>($i0, $i1);

        if $z0 != 0 goto label2;

        $r2 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion Companion>;

        $i2 = virtualinvoke $r2.<androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion: int getStart-aUPqQNE()>();

        $z1 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>($i0, $i2);

        if $z1 == 0 goto label1;

        $r7 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.unit.LayoutDirection layoutDirection>;

        $r6 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Rtl>;

        if $r7 == $r6 goto label2;

     label1:
        $r3 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion Companion>;

        $i3 = virtualinvoke $r3.<androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion: int getEnd-aUPqQNE()>();

        $z2 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>($i0, $i3);

        if $z2 == 0 goto label3;

        $r5 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.unit.LayoutDirection layoutDirection>;

        $r4 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Ltr>;

        if $r5 != $r4 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    private final long calculateOffset-emnUabE(long, long)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        long l0, l1, $l2;
        androidx.compose.ui.unit.LayoutDirection $r1;
        androidx.compose.ui.Alignment $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r2 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.Alignment contentAlignment>;

        $r1 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Ltr>;

        $l2 = interfaceinvoke $r2.<androidx.compose.ui.Alignment: long align-KFBX0sM(long,long,androidx.compose.ui.unit.LayoutDirection)>(l0, l1, $r1);

        return $l2;
    }

    public final androidx.compose.animation.ExitTransition slideOutOfContainer-HTTW7Ok(int, androidx.compose.animation.core.FiniteAnimationSpec, kotlin.jvm.functions.Function1)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        int i0, $i1, $i2;
        androidx.compose.animation.core.FiniteAnimationSpec r1;
        kotlin.jvm.functions.Function1 r2, $r7, $r9, $r11, $r13;
        boolean $z0, $z1, $z2, $z3;
        androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion $r3, $r4;
        androidx.compose.animation.ExitTransition$Companion $r5;
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5 $r6;
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4 $r8;
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3 $r10;
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2 $r12;
        androidx.compose.animation.ExitTransition $r14;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.compose.animation.core.FiniteAnimationSpec;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animationSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetOffset");

        $z0 = specialinvoke r0.<androidx.compose.animation.AnimatedContentScope: boolean isLeft-9jb1Dl8(int)>(i0);

        if $z0 == 0 goto label1;

        $r12 = new androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2;

        specialinvoke $r12.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2: void <init>(androidx.compose.animation.AnimatedContentScope,kotlin.jvm.functions.Function1)>(r0, r2);

        $r13 = (kotlin.jvm.functions.Function1) $r12;

        $r14 = staticinvoke <androidx.compose.animation.EnterExitTransitionKt: androidx.compose.animation.ExitTransition slideOutHorizontally(androidx.compose.animation.core.FiniteAnimationSpec,kotlin.jvm.functions.Function1)>(r1, $r13);

        goto label5;

     label1:
        $z1 = specialinvoke r0.<androidx.compose.animation.AnimatedContentScope: boolean isRight-9jb1Dl8(int)>(i0);

        if $z1 == 0 goto label2;

        $r10 = new androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3;

        specialinvoke $r10.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3: void <init>(androidx.compose.animation.AnimatedContentScope,kotlin.jvm.functions.Function1)>(r0, r2);

        $r11 = (kotlin.jvm.functions.Function1) $r10;

        $r14 = staticinvoke <androidx.compose.animation.EnterExitTransitionKt: androidx.compose.animation.ExitTransition slideOutHorizontally(androidx.compose.animation.core.FiniteAnimationSpec,kotlin.jvm.functions.Function1)>(r1, $r11);

        goto label5;

     label2:
        $r3 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion Companion>;

        $i1 = virtualinvoke $r3.<androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion: int getUp-aUPqQNE()>();

        $z2 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>(i0, $i1);

        if $z2 == 0 goto label3;

        $r8 = new androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4;

        specialinvoke $r8.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4: void <init>(androidx.compose.animation.AnimatedContentScope,kotlin.jvm.functions.Function1)>(r0, r2);

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        $r14 = staticinvoke <androidx.compose.animation.EnterExitTransitionKt: androidx.compose.animation.ExitTransition slideOutVertically(androidx.compose.animation.core.FiniteAnimationSpec,kotlin.jvm.functions.Function1)>(r1, $r9);

        goto label5;

     label3:
        $r4 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion Companion>;

        $i2 = virtualinvoke $r4.<androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion: int getDown-aUPqQNE()>();

        $z3 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>(i0, $i2);

        if $z3 == 0 goto label4;

        $r6 = new androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5;

        specialinvoke $r6.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5: void <init>(androidx.compose.animation.AnimatedContentScope,kotlin.jvm.functions.Function1)>(r0, r2);

        $r7 = (kotlin.jvm.functions.Function1) $r6;

        $r14 = staticinvoke <androidx.compose.animation.EnterExitTransitionKt: androidx.compose.animation.ExitTransition slideOutVertically(androidx.compose.animation.core.FiniteAnimationSpec,kotlin.jvm.functions.Function1)>(r1, $r7);

        goto label5;

     label4:
        $r5 = <androidx.compose.animation.ExitTransition: androidx.compose.animation.ExitTransition$Companion Companion>;

        $r14 = virtualinvoke $r5.<androidx.compose.animation.ExitTransition$Companion: androidx.compose.animation.ExitTransition getNone()>();

     label5:
        return $r14;
    }

    public static androidx.compose.animation.ExitTransition slideOutOfContainer-HTTW7Ok$default(androidx.compose.animation.AnimatedContentScope, int, androidx.compose.animation.core.FiniteAnimationSpec, kotlin.jvm.functions.Function1, int, java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        int i0, i1, $i2, $i3;
        java.lang.Object r1;
        androidx.compose.animation.ExitTransition $r2;
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1 $r3;
        androidx.compose.ui.unit.IntOffset$Companion $r4;
        long $l4;
        androidx.compose.ui.unit.IntOffset $r5;
        androidx.compose.animation.core.SpringSpec $r6;
        androidx.compose.animation.core.FiniteAnimationSpec r7;
        kotlin.jvm.functions.Function1 r8;

        r0 := @parameter0: androidx.compose.animation.AnimatedContentScope;

        i0 := @parameter1: int;

        r7 := @parameter2: androidx.compose.animation.core.FiniteAnimationSpec;

        r8 := @parameter3: kotlin.jvm.functions.Function1;

        i1 := @parameter4: int;

        r1 := @parameter5: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        $r4 = <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset$Companion Companion>;

        $l4 = staticinvoke <androidx.compose.animation.core.VisibilityThresholdsKt: long getVisibilityThreshold(androidx.compose.ui.unit.IntOffset$Companion)>($r4);

        $r5 = staticinvoke <androidx.compose.ui.unit.IntOffset: androidx.compose.ui.unit.IntOffset box-impl(long)>($l4);

        $r6 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.SpringSpec spring$default(float,float,java.lang.Object,int,java.lang.Object)>(0.0F, 0.0F, $r5, 3, null);

        r7 = (androidx.compose.animation.core.FiniteAnimationSpec) $r6;

     label1:
        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        $r3 = <androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1 INSTANCE>;

        r8 = (kotlin.jvm.functions.Function1) $r3;

     label2:
        $r2 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.ExitTransition slideOutOfContainer-HTTW7Ok(int,androidx.compose.animation.core.FiniteAnimationSpec,kotlin.jvm.functions.Function1)>(i0, r7, r8);

        return $r2;
    }

    public final long getMeasuredSize-YbymL2g$animation_release()
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        androidx.compose.ui.unit.IntSize $r4;
        long $l0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        $r2 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.runtime.MutableState measuredSize$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.compose.ui.unit.IntSize) $r3;

        $l0 = virtualinvoke $r4.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        return $l0;
    }

    public final void setMeasuredSize-ozmzZPI$animation_release(long)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        long l0;
        androidx.compose.runtime.MutableState $r1;
        androidx.compose.ui.unit.IntSize r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.runtime.MutableState measuredSize$delegate>;

        r2 = staticinvoke <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize box-impl(long)>(l0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public final java.util.Map getTargetSizeMap$animation_release()
    {
        androidx.compose.animation.AnimatedContentScope r0;
        java.util.Map $r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope: java.util.Map targetSizeMap>;

        return $r1;
    }

    public final androidx.compose.runtime.State getAnimatedSize$animation_release()
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.runtime.State $r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.runtime.State animatedSize>;

        return $r1;
    }

    public final void setAnimatedSize$animation_release(androidx.compose.runtime.State)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.runtime.State r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        r1 := @parameter0: androidx.compose.runtime.State;

        r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.runtime.State animatedSize> = r1;

        return;
    }

    private final long getCurrentSize-YbymL2g()
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.runtime.State $r1;
        java.lang.Object $r2;
        androidx.compose.ui.unit.IntSize $r3;
        long $l0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.runtime.State animatedSize>;

        if $r1 == null goto label1;

        $r2 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r3 = (androidx.compose.ui.unit.IntSize) $r2;

        $l0 = virtualinvoke $r3.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        goto label2;

     label1:
        $l0 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope: long getMeasuredSize-YbymL2g$animation_release()>();

     label2:
        return $l0;
    }

    public final androidx.compose.ui.Modifier createSizeAnimationModifier$animation_release(androidx.compose.animation.ContentTransform, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.animation.AnimatedContentScope r0;
        androidx.compose.animation.ContentTransform r1;
        androidx.compose.runtime.Composer $r2;
        int $i0;
        androidx.compose.runtime.MutableState r3, $r31;
        java.lang.Object r5, r7, $r11, $r13, $r14, $r19, $r27, $r29, r30, $r32, $r37;
        androidx.compose.ui.Modifier r6, $r22, $r24, $r36, $r38, $r39;
        boolean $z2, $z3, $z4, $z5, z7, $z11, z12, $z13, $z15;
        java.lang.Boolean $r8;
        androidx.compose.animation.SizeTransform $r9, $r20;
        androidx.compose.animation.core.Transition $r10, $r12, $r17;
        androidx.compose.ui.Modifier$Companion $r15, $r21, $r25;
        androidx.compose.ui.unit.IntSize$Companion $r16;
        androidx.compose.animation.core.TwoWayConverter $r18;
        androidx.compose.animation.AnimatedContentScope$SizeModifier $r23;
        androidx.compose.runtime.Composer$Companion $r26, $r28;
        androidx.compose.runtime.State $r33;
        androidx.compose.animation.core.Transition$DeferredAnimation r34;

        r0 := @this: androidx.compose.animation.AnimatedContentScope;

        r1 := @parameter0: androidx.compose.animation.ContentTransform;

        $r2 := @parameter1: androidx.compose.runtime.Composer;

        $i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "contentTransform");

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-1349251863);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(createSizeAnimationModifier)461@21539L40,462@21608L52,472@22077L48,473@22138L205:AnimatedContent.kt#xbi5r1");

        $z2 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z2 == 0 goto label01;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-1349251863, $i0, -1, "androidx.compose.animation.AnimatedContentScope.createSizeAnimationModifier (AnimatedContent.kt:458)");

     label01:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1157296644);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(remember)P(1):Composables.kt#9igjgp");

        z7 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r0);

        r30 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z7 != 0 goto label02;

        $r28 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r29 = virtualinvoke $r28.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r30 != $r29 goto label03;

     label02:
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r31 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r8, null, 2, null);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>($r31);

        $r32 = $r31;

        goto label04;

     label03:
        $r32 = r30;

     label04:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        r3 = (androidx.compose.runtime.MutableState) $r32;

        $r9 = virtualinvoke r1.<androidx.compose.animation.ContentTransform: androidx.compose.animation.SizeTransform getSizeTransform()>();

        $r33 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.State rememberUpdatedState(java.lang.Object,androidx.compose.runtime.Composer,int)>($r9, $r2, 0);

        $r10 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.core.Transition transition>;

        $r11 = virtualinvoke $r10.<androidx.compose.animation.core.Transition: java.lang.Object getCurrentState()>();

        $r12 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.core.Transition transition>;

        $r13 = virtualinvoke $r12.<androidx.compose.animation.core.Transition: java.lang.Object getTargetState()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r11, $r13);

        if $z3 == 0 goto label05;

        staticinvoke <androidx.compose.animation.AnimatedContentScope: void createSizeAnimationModifier$lambda-3(androidx.compose.runtime.MutableState,boolean)>(r3, 0);

        goto label06;

     label05:
        $r14 = interfaceinvoke $r33.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        if $r14 == null goto label06;

        staticinvoke <androidx.compose.animation.AnimatedContentScope: void createSizeAnimationModifier$lambda-3(androidx.compose.runtime.MutableState,boolean)>(r3, 1);

     label06:
        $z11 = staticinvoke <androidx.compose.animation.AnimatedContentScope: boolean createSizeAnimationModifier$lambda-2(androidx.compose.runtime.MutableState)>(r3);

        if $z11 == 0 goto label15;

        $r17 = r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.core.Transition transition>;

        $r16 = <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize$Companion Companion>;

        $r18 = staticinvoke <androidx.compose.animation.core.VectorConvertersKt: androidx.compose.animation.core.TwoWayConverter getVectorConverter(androidx.compose.ui.unit.IntSize$Companion)>($r16);

        r34 = staticinvoke <androidx.compose.animation.core.TransitionKt: androidx.compose.animation.core.Transition$DeferredAnimation createDeferredAnimation(androidx.compose.animation.core.Transition,androidx.compose.animation.core.TwoWayConverter,java.lang.String,androidx.compose.runtime.Composer,int,int)>($r17, $r18, null, $r2, 64, 2);

        z12 = 0;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1157296644);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(remember)P(1):Composables.kt#9igjgp");

        $z13 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r34);

        r5 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if $z13 != 0 goto label07;

        $r26 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r27 = virtualinvoke $r26.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r5 != $r27 goto label13;

     label07:
        $r19 = interfaceinvoke $r33.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r20 = (androidx.compose.animation.SizeTransform) $r19;

        if $r20 == null goto label09;

        $z5 = interfaceinvoke $r20.<androidx.compose.animation.SizeTransform: boolean getClip()>();

        if $z5 != 0 goto label08;

        $z15 = 1;

        goto label10;

     label08:
        $z15 = 0;

        goto label10;

     label09:
        $z15 = 0;

     label10:
        if $z15 == 0 goto label11;

        $r25 = <androidx.compose.ui.Modifier: androidx.compose.ui.Modifier$Companion Companion>;

        $r36 = (androidx.compose.ui.Modifier) $r25;

        goto label12;

     label11:
        $r21 = <androidx.compose.ui.Modifier: androidx.compose.ui.Modifier$Companion Companion>;

        $r22 = (androidx.compose.ui.Modifier) $r21;

        $r36 = staticinvoke <androidx.compose.ui.draw.ClipKt: androidx.compose.ui.Modifier clipToBounds(androidx.compose.ui.Modifier)>($r22);

     label12:
        $r23 = new androidx.compose.animation.AnimatedContentScope$SizeModifier;

        specialinvoke $r23.<androidx.compose.animation.AnimatedContentScope$SizeModifier: void <init>(androidx.compose.animation.AnimatedContentScope,androidx.compose.animation.core.Transition$DeferredAnimation,androidx.compose.runtime.State)>(r0, r34, $r33);

        $r24 = (androidx.compose.ui.Modifier) $r23;

        r6 = interfaceinvoke $r36.<androidx.compose.ui.Modifier: androidx.compose.ui.Modifier then(androidx.compose.ui.Modifier)>($r24);

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r6);

        $r37 = r6;

        goto label14;

     label13:
        $r37 = r5;

     label14:
        r7 = $r37;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r38 = (androidx.compose.ui.Modifier) r7;

        goto label16;

     label15:
        r0.<androidx.compose.animation.AnimatedContentScope: androidx.compose.runtime.State animatedSize> = null;

        $r15 = <androidx.compose.ui.Modifier: androidx.compose.ui.Modifier$Companion Companion>;

        $r38 = (androidx.compose.ui.Modifier) $r15;

     label16:
        $r39 = $r38;

        $z4 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z4 == 0 goto label17;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label17:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return $r39;
    }

    private static final boolean createSizeAnimationModifier$lambda-2(androidx.compose.runtime.MutableState)
    {
        androidx.compose.runtime.MutableState $r0;
        androidx.compose.runtime.State $r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.runtime.MutableState;

        $r1 = (androidx.compose.runtime.State) $r0;

        $r2 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private static final void createSizeAnimationModifier$lambda-3(androidx.compose.runtime.MutableState, boolean)
    {
        androidx.compose.runtime.MutableState $r0;
        boolean z0;
        java.lang.Boolean r1;

        $r0 := @parameter0: androidx.compose.runtime.MutableState;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r0.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public static final long access$getCurrentSize-YbymL2g(androidx.compose.animation.AnimatedContentScope)
    {
        androidx.compose.animation.AnimatedContentScope $r0;
        long $l0;

        $r0 := @parameter0: androidx.compose.animation.AnimatedContentScope;

        $l0 = specialinvoke $r0.<androidx.compose.animation.AnimatedContentScope: long getCurrentSize-YbymL2g()>();

        return $l0;
    }

    public static final long access$calculateOffset-emnUabE(androidx.compose.animation.AnimatedContentScope, long, long)
    {
        androidx.compose.animation.AnimatedContentScope $r0;
        long l0, l1, $l2;

        $r0 := @parameter0: androidx.compose.animation.AnimatedContentScope;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $l2 = specialinvoke $r0.<androidx.compose.animation.AnimatedContentScope: long calculateOffset-emnUabE(long,long)>(l0, l1);

        return $l2;
    }

    static void <clinit>()
    {
        <androidx.compose.animation.AnimatedContentScope: int $stable> = 8;

        return;
    }

androidx.compose.animation.AnimatedContentScope$ChildData
<androidx.compose.animation.AnimatedContentScope$ChildData: boolean isTarget>
    public void <init>(boolean)
    {
        androidx.compose.animation.AnimatedContentScope$ChildData r0;
        boolean z0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$ChildData;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.AnimatedContentScope$ChildData: boolean isTarget> = z0;

        return;
    }

    public final boolean isTarget()
    {
        androidx.compose.animation.AnimatedContentScope$ChildData r0;
        boolean $z0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$ChildData;

        $z0 = r0.<androidx.compose.animation.AnimatedContentScope$ChildData: boolean isTarget>;

        return $z0;
    }

    public final void setTarget(boolean)
    {
        androidx.compose.animation.AnimatedContentScope$ChildData r0;
        boolean z0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$ChildData;

        z0 := @parameter0: boolean;

        r0.<androidx.compose.animation.AnimatedContentScope$ChildData: boolean isTarget> = z0;

        return;
    }

    public java.lang.Object modifyParentData(androidx.compose.ui.unit.Density, java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$ChildData r0;
        androidx.compose.ui.unit.Density $r1;
        java.lang.Object r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$ChildData;

        $r1 := @parameter0: androidx.compose.ui.unit.Density;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        return r0;
    }

    public final boolean component1()
    {
        androidx.compose.animation.AnimatedContentScope$ChildData r0;
        boolean $z0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$ChildData;

        $z0 = r0.<androidx.compose.animation.AnimatedContentScope$ChildData: boolean isTarget>;

        return $z0;
    }

    public final androidx.compose.animation.AnimatedContentScope$ChildData copy(boolean)
    {
        androidx.compose.animation.AnimatedContentScope$ChildData r0, $r1;
        boolean z0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$ChildData;

        z0 := @parameter0: boolean;

        $r1 = new androidx.compose.animation.AnimatedContentScope$ChildData;

        specialinvoke $r1.<androidx.compose.animation.AnimatedContentScope$ChildData: void <init>(boolean)>(z0);

        return $r1;
    }

    public static androidx.compose.animation.AnimatedContentScope$ChildData copy$default(androidx.compose.animation.AnimatedContentScope$ChildData, boolean, int, java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$ChildData r0, $r2;
        int i0, $i1;
        java.lang.Object r1;
        boolean z0;

        r0 := @parameter0: androidx.compose.animation.AnimatedContentScope$ChildData;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = r0.<androidx.compose.animation.AnimatedContentScope$ChildData: boolean isTarget>;

     label1:
        $r2 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$ChildData: androidx.compose.animation.AnimatedContentScope$ChildData copy(boolean)>(z0);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.compose.animation.AnimatedContentScope$ChildData r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        boolean $z0;
        java.lang.String $r5;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$ChildData;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ChildData(isTarget=");

        $z0 = r0.<androidx.compose.animation.AnimatedContentScope$ChildData: boolean isTarget>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public int hashCode()
    {
        androidx.compose.animation.AnimatedContentScope$ChildData r0;
        boolean $z0;
        int i0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$ChildData;

        $z0 = r0.<androidx.compose.animation.AnimatedContentScope$ChildData: boolean isTarget>;

        if $z0 == 0 goto label1;

        $z0 = 1;

     label1:
        i0 = (int) $z0;

        return i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$ChildData r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$ChildData;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.compose.animation.AnimatedContentScope$ChildData;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.compose.animation.AnimatedContentScope$ChildData) r1;

        $z2 = r0.<androidx.compose.animation.AnimatedContentScope$ChildData: boolean isTarget>;

        $z1 = r2.<androidx.compose.animation.AnimatedContentScope$ChildData: boolean isTarget>;

        if $z2 == $z1 goto label3;

        return 0;

     label3:
        return 1;
    }

androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1
<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable>
<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1: long $offset>
    void <init>(androidx.compose.ui.layout.Placeable, long)
    {
        androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1 r0;
        androidx.compose.ui.layout.Placeable $r1;
        long $l0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1;

        $r1 := @parameter0: androidx.compose.ui.layout.Placeable;

        $l0 := @parameter1: long;

        r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable> = $r1;

        r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1: long $offset> = $l0;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)
    {
        androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1 r0;
        androidx.compose.ui.layout.Placeable$PlacementScope $r1;
        long $l0;
        androidx.compose.ui.layout.Placeable $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1;

        $r1 := @parameter0: androidx.compose.ui.layout.Placeable$PlacementScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$layout");

        $r2 = r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1: androidx.compose.ui.layout.Placeable $placeable>;

        $l0 = r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1: long $offset>;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void place-70tqf50$default(androidx.compose.ui.layout.Placeable$PlacementScope,androidx.compose.ui.layout.Placeable,long,float,int,java.lang.Object)>($r1, $r2, $l0, 0.0F, 2, null);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1 r0;
        java.lang.Object r1;
        androidx.compose.ui.layout.Placeable$PlacementScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.ui.layout.Placeable$PlacementScope) r1;

        virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1: void invoke(androidx.compose.ui.layout.Placeable$PlacementScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1
<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1: androidx.compose.animation.AnimatedContentScope this$0>
<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1: androidx.compose.animation.AnimatedContentScope$SizeModifier this$1>
    void <init>(androidx.compose.animation.AnimatedContentScope, androidx.compose.animation.AnimatedContentScope$SizeModifier)
    {
        androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1 r0;
        androidx.compose.animation.AnimatedContentScope $r1;
        androidx.compose.animation.AnimatedContentScope$SizeModifier $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1;

        $r1 := @parameter0: androidx.compose.animation.AnimatedContentScope;

        $r2 := @parameter1: androidx.compose.animation.AnimatedContentScope$SizeModifier;

        r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1: androidx.compose.animation.AnimatedContentScope this$0> = $r1;

        r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1: androidx.compose.animation.AnimatedContentScope$SizeModifier this$1> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.compose.animation.core.FiniteAnimationSpec invoke(androidx.compose.animation.core.Transition$Segment)
    {
        androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1 r0;
        androidx.compose.animation.core.Transition$Segment $r1;
        long l0, l1, $l2, $l3;
        androidx.compose.animation.AnimatedContentScope $r2, $r8;
        java.util.Map $r3, $r9;
        java.lang.Object $r4, $r5, $r10, $r11, $r16, $r19, $r21;
        androidx.compose.runtime.State $r6, $r12, $r15;
        androidx.compose.ui.unit.IntSize$Companion $r7, $r13;
        androidx.compose.animation.AnimatedContentScope$SizeModifier $r14;
        androidx.compose.animation.SizeTransform $r17;
        androidx.compose.animation.core.SpringSpec $r18;
        androidx.compose.ui.unit.IntSize $r20, $r22;
        androidx.compose.animation.core.FiniteAnimationSpec $r23;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1;

        $r1 := @parameter0: androidx.compose.animation.core.Transition$Segment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$animate");

        $r2 = r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1: androidx.compose.animation.AnimatedContentScope this$0>;

        $r3 = virtualinvoke $r2.<androidx.compose.animation.AnimatedContentScope: java.util.Map getTargetSizeMap$animation_release()>();

        $r4 = interfaceinvoke $r1.<androidx.compose.animation.core.Transition$Segment: java.lang.Object getInitialState()>();

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (androidx.compose.runtime.State) $r5;

        if $r6 == null goto label1;

        $r21 = interfaceinvoke $r6.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r22 = (androidx.compose.ui.unit.IntSize) $r21;

        $l2 = virtualinvoke $r22.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        goto label2;

     label1:
        $r7 = <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize$Companion Companion>;

        $l2 = virtualinvoke $r7.<androidx.compose.ui.unit.IntSize$Companion: long getZero-YbymL2g()>();

     label2:
        l0 = $l2;

        $r8 = r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1: androidx.compose.animation.AnimatedContentScope this$0>;

        $r9 = virtualinvoke $r8.<androidx.compose.animation.AnimatedContentScope: java.util.Map getTargetSizeMap$animation_release()>();

        $r10 = interfaceinvoke $r1.<androidx.compose.animation.core.Transition$Segment: java.lang.Object getTargetState()>();

        $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r12 = (androidx.compose.runtime.State) $r11;

        if $r12 == null goto label3;

        $r19 = interfaceinvoke $r12.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r20 = (androidx.compose.ui.unit.IntSize) $r19;

        $l3 = virtualinvoke $r20.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        goto label4;

     label3:
        $r13 = <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize$Companion Companion>;

        $l3 = virtualinvoke $r13.<androidx.compose.ui.unit.IntSize$Companion: long getZero-YbymL2g()>();

     label4:
        l1 = $l3;

        $r14 = r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1: androidx.compose.animation.AnimatedContentScope$SizeModifier this$1>;

        $r15 = virtualinvoke $r14.<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.runtime.State getSizeTransform()>();

        $r16 = interfaceinvoke $r15.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r17 = (androidx.compose.animation.SizeTransform) $r16;

        if $r17 == null goto label5;

        $r23 = interfaceinvoke $r17.<androidx.compose.animation.SizeTransform: androidx.compose.animation.core.FiniteAnimationSpec createAnimationSpec-TemP2vQ(long,long)>(l0, l1);

        if $r23 != null goto label6;

     label5:
        $r18 = staticinvoke <androidx.compose.animation.core.AnimationSpecKt: androidx.compose.animation.core.SpringSpec spring$default(float,float,java.lang.Object,int,java.lang.Object)>(0.0F, 0.0F, null, 7, null);

        $r23 = (androidx.compose.animation.core.FiniteAnimationSpec) $r18;

     label6:
        return $r23;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1 r0;
        java.lang.Object r1;
        androidx.compose.animation.core.Transition$Segment $r2;
        androidx.compose.animation.core.FiniteAnimationSpec $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.animation.core.Transition$Segment) r1;

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1: androidx.compose.animation.core.FiniteAnimationSpec invoke(androidx.compose.animation.core.Transition$Segment)>($r2);

        return $r3;
    }

androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2
<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2: androidx.compose.animation.AnimatedContentScope this$0>
    void <init>(androidx.compose.animation.AnimatedContentScope)
    {
        androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2 r0;
        androidx.compose.animation.AnimatedContentScope $r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2;

        $r1 := @parameter0: androidx.compose.animation.AnimatedContentScope;

        r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2: androidx.compose.animation.AnimatedContentScope this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final long invoke-YEO4UFw(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2 r0;
        java.lang.Object r1, $r4, $r7;
        androidx.compose.animation.AnimatedContentScope $r2;
        java.util.Map $r3;
        androidx.compose.runtime.State $r5;
        androidx.compose.ui.unit.IntSize$Companion $r6;
        androidx.compose.ui.unit.IntSize $r8;
        long $l0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2: androidx.compose.animation.AnimatedContentScope this$0>;

        $r3 = virtualinvoke $r2.<androidx.compose.animation.AnimatedContentScope: java.util.Map getTargetSizeMap$animation_release()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (androidx.compose.runtime.State) $r4;

        if $r5 == null goto label1;

        $r7 = interfaceinvoke $r5.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r8 = (androidx.compose.ui.unit.IntSize) $r7;

        $l0 = virtualinvoke $r8.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        goto label2;

     label1:
        $r6 = <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize$Companion Companion>;

        $l0 = virtualinvoke $r6.<androidx.compose.ui.unit.IntSize$Companion: long getZero-YbymL2g()>();

     label2:
        return $l0;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2 r0;
        java.lang.Object r1;
        long $l0;
        androidx.compose.ui.unit.IntSize $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2;

        r1 := @parameter0: java.lang.Object;

        $l0 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2: long invoke-YEO4UFw(java.lang.Object)>(r1);

        $r2 = staticinvoke <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize box-impl(long)>($l0);

        return $r2;
    }

androidx.compose.animation.AnimatedContentScope$SizeModifier
<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.animation.core.Transition$DeferredAnimation sizeAnimation>
<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.runtime.State sizeTransform>
<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.animation.AnimatedContentScope this$0>
    public void <init>(androidx.compose.animation.AnimatedContentScope, androidx.compose.animation.core.Transition$DeferredAnimation, androidx.compose.runtime.State)
    {
        androidx.compose.animation.AnimatedContentScope$SizeModifier r0;
        androidx.compose.animation.AnimatedContentScope r1;
        androidx.compose.animation.core.Transition$DeferredAnimation r2;
        androidx.compose.runtime.State r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SizeModifier;

        r1 := @parameter0: androidx.compose.animation.AnimatedContentScope;

        r2 := @parameter1: androidx.compose.animation.core.Transition$DeferredAnimation;

        r3 := @parameter2: androidx.compose.runtime.State;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "sizeAnimation");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "sizeTransform");

        r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.animation.AnimatedContentScope this$0> = r1;

        specialinvoke r0.<androidx.compose.animation.LayoutModifierWithPassThroughIntrinsics: void <init>()>();

        r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.animation.core.Transition$DeferredAnimation sizeAnimation> = r2;

        r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.runtime.State sizeTransform> = r3;

        return;
    }

    public final androidx.compose.animation.core.Transition$DeferredAnimation getSizeAnimation()
    {
        androidx.compose.animation.AnimatedContentScope$SizeModifier r0;
        androidx.compose.animation.core.Transition$DeferredAnimation $r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SizeModifier;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.animation.core.Transition$DeferredAnimation sizeAnimation>;

        return $r1;
    }

    public final androidx.compose.runtime.State getSizeTransform()
    {
        androidx.compose.animation.AnimatedContentScope$SizeModifier r0;
        androidx.compose.runtime.State $r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SizeModifier;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.runtime.State sizeTransform>;

        return $r1;
    }

    public androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope, androidx.compose.ui.layout.Measurable, long)
    {
        androidx.compose.animation.AnimatedContentScope$SizeModifier r0;
        androidx.compose.ui.layout.MeasureScope $r1;
        androidx.compose.ui.layout.Measurable r2;
        long l0, l1, $l4, $l5, $l6, $l8;
        androidx.compose.ui.layout.Placeable r3;
        androidx.compose.runtime.State r4;
        androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1 $r5;
        androidx.compose.animation.AnimatedContentScope $r6, $r9, $r12, $r13;
        androidx.compose.animation.core.Transition$DeferredAnimation $r7;
        androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2 $r8;
        kotlin.jvm.functions.Function1 $r10, $r11, $r23;
        androidx.compose.ui.Alignment $r14;
        int $i2, $i3, $i7, $i9;
        java.lang.Object $r15, $r18, $r20;
        androidx.compose.ui.unit.IntSize $r16, $r19, $r21;
        androidx.compose.ui.unit.LayoutDirection $r17;
        androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1 $r22;
        androidx.compose.ui.layout.MeasureResult $r24;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SizeModifier;

        $r1 := @parameter0: androidx.compose.ui.layout.MeasureScope;

        r2 := @parameter1: androidx.compose.ui.layout.Measurable;

        l0 := @parameter2: long;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$measure");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        r3 = interfaceinvoke r2.<androidx.compose.ui.layout.Measurable: androidx.compose.ui.layout.Placeable measure-BRTryo0(long)>(l0);

        $r7 = r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.animation.core.Transition$DeferredAnimation sizeAnimation>;

        $r5 = new androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1;

        $r6 = r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.animation.AnimatedContentScope this$0>;

        specialinvoke $r5.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$1: void <init>(androidx.compose.animation.AnimatedContentScope,androidx.compose.animation.AnimatedContentScope$SizeModifier)>($r6, r0);

        $r10 = (kotlin.jvm.functions.Function1) $r5;

        $r8 = new androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2;

        $r9 = r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.animation.AnimatedContentScope this$0>;

        specialinvoke $r8.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$size$2: void <init>(androidx.compose.animation.AnimatedContentScope)>($r9);

        $r11 = (kotlin.jvm.functions.Function1) $r8;

        r4 = virtualinvoke $r7.<androidx.compose.animation.core.Transition$DeferredAnimation: androidx.compose.runtime.State animate(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>($r10, $r11);

        $r12 = r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.animation.AnimatedContentScope this$0>;

        virtualinvoke $r12.<androidx.compose.animation.AnimatedContentScope: void setAnimatedSize$animation_release(androidx.compose.runtime.State)>(r4);

        $r13 = r0.<androidx.compose.animation.AnimatedContentScope$SizeModifier: androidx.compose.animation.AnimatedContentScope this$0>;

        $r14 = virtualinvoke $r13.<androidx.compose.animation.AnimatedContentScope: androidx.compose.ui.Alignment getContentAlignment$animation_release()>();

        $i2 = virtualinvoke r3.<androidx.compose.ui.layout.Placeable: int getWidth()>();

        $i3 = virtualinvoke r3.<androidx.compose.ui.layout.Placeable: int getHeight()>();

        $l4 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>($i2, $i3);

        $r15 = interfaceinvoke r4.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r16 = (androidx.compose.ui.unit.IntSize) $r15;

        $l5 = virtualinvoke $r16.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        $r17 = <androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection Ltr>;

        l1 = interfaceinvoke $r14.<androidx.compose.ui.Alignment: long align-KFBX0sM(long,long,androidx.compose.ui.unit.LayoutDirection)>($l4, $l5, $r17);

        $r18 = interfaceinvoke r4.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r19 = (androidx.compose.ui.unit.IntSize) $r18;

        $l6 = virtualinvoke $r19.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        $i7 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>($l6);

        $r20 = interfaceinvoke r4.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r21 = (androidx.compose.ui.unit.IntSize) $r20;

        $l8 = virtualinvoke $r21.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        $i9 = staticinvoke <androidx.compose.ui.unit.IntSize: int getHeight-impl(long)>($l8);

        $r22 = new androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1;

        specialinvoke $r22.<androidx.compose.animation.AnimatedContentScope$SizeModifier$measure$1: void <init>(androidx.compose.ui.layout.Placeable,long)>(r3, l1);

        $r23 = (kotlin.jvm.functions.Function1) $r22;

        $r24 = staticinvoke <androidx.compose.ui.layout.MeasureScope: androidx.compose.ui.layout.MeasureResult layout$default(androidx.compose.ui.layout.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, $i7, $i9, null, $r23, 4, null);

        return $r24;
    }

androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion
    private void <init>()
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion r0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int getLeft-aUPqQNE()
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion;

        $i0 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: int access$getLeft$cp()>();

        return $i0;
    }

    public final int getRight-aUPqQNE()
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion;

        $i0 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: int access$getRight$cp()>();

        return $i0;
    }

    public final int getUp-aUPqQNE()
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion;

        $i0 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: int access$getUp$cp()>();

        return $i0;
    }

    public final int getDown-aUPqQNE()
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion;

        $i0 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: int access$getDown$cp()>();

        return $i0;
    }

    public final int getStart-aUPqQNE()
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion;

        $i0 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: int access$getStart$cp()>();

        return $i0;
    }

    public final int getEnd-aUPqQNE()
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion;

        $i0 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: int access$getEnd$cp()>();

        return $i0;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion: void <init>()>();

        return;
    }

androidx.compose.animation.AnimatedContentScope$SlideDirection
<androidx.compose.animation.AnimatedContentScope$SlideDirection: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion Companion>
<androidx.compose.animation.AnimatedContentScope$SlideDirection: int value>
<androidx.compose.animation.AnimatedContentScope$SlideDirection: int Left>
<androidx.compose.animation.AnimatedContentScope$SlideDirection: int Right>
<androidx.compose.animation.AnimatedContentScope$SlideDirection: int Up>
<androidx.compose.animation.AnimatedContentScope$SlideDirection: int Down>
<androidx.compose.animation.AnimatedContentScope$SlideDirection: int Start>
<androidx.compose.animation.AnimatedContentScope$SlideDirection: int End>
    public static java.lang.String toString-impl(int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r0;

        i0 := @parameter0: int;

        i1 = i0;

        $i2 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Left>;

        $z0 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>(i1, $i2);

        if $z0 == 0 goto label1;

        $r0 = "Left";

        goto label7;

     label1:
        $i3 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Right>;

        $z1 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>(i1, $i3);

        if $z1 == 0 goto label2;

        $r0 = "Right";

        goto label7;

     label2:
        $i4 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Up>;

        $z2 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>(i1, $i4);

        if $z2 == 0 goto label3;

        $r0 = "Up";

        goto label7;

     label3:
        $i5 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Down>;

        $z3 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>(i1, $i5);

        if $z3 == 0 goto label4;

        $r0 = "Down";

        goto label7;

     label4:
        $i6 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Start>;

        $z4 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>(i1, $i6);

        if $z4 == 0 goto label5;

        $r0 = "Start";

        goto label7;

     label5:
        $i7 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: int End>;

        $z5 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl0(int,int)>(i1, $i7);

        if $z5 == 0 goto label6;

        $r0 = "End";

        goto label7;

     label6:
        $r0 = "Invalid";

     label7:
        return $r0;
    }

    public java.lang.String toString()
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SlideDirection;

        $i0 = r0.<androidx.compose.animation.AnimatedContentScope$SlideDirection: int value>;

        $r1 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: java.lang.String toString-impl(int)>($i0);

        return $r1;
    }

    public static int hashCode-impl(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Integer: int hashCode(int)>(i0);

        return $i1;
    }

    public int hashCode()
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection r0;
        int $i0, $i1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SlideDirection;

        $i0 = r0.<androidx.compose.animation.AnimatedContentScope$SlideDirection: int value>;

        $i1 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: int hashCode-impl(int)>($i0);

        return $i1;
    }

    public static boolean equals-impl(int, java.lang.Object)
    {
        int i0, i1;
        java.lang.Object r0;
        boolean $z0;
        androidx.compose.animation.AnimatedContentScope$SlideDirection $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof androidx.compose.animation.AnimatedContentScope$SlideDirection;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = (androidx.compose.animation.AnimatedContentScope$SlideDirection) r0;

        i1 = virtualinvoke $r1.<androidx.compose.animation.AnimatedContentScope$SlideDirection: int unbox-impl()>();

        if i0 == i1 goto label2;

        return 0;

     label2:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection r0;
        java.lang.Object r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SlideDirection;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<androidx.compose.animation.AnimatedContentScope$SlideDirection: int value>;

        $z0 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: boolean equals-impl(int,java.lang.Object)>($i0, r1);

        return $z0;
    }

    private void <init>(int)
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection r0;
        int i0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SlideDirection;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.animation.AnimatedContentScope$SlideDirection: int value> = i0;

        return;
    }

    public static int constructor-impl(int)
    {
        int i0;

        i0 := @parameter0: int;

        return i0;
    }

    public static final androidx.compose.animation.AnimatedContentScope$SlideDirection box-impl(int)
    {
        int i0;
        androidx.compose.animation.AnimatedContentScope$SlideDirection $r0;

        i0 := @parameter0: int;

        $r0 = new androidx.compose.animation.AnimatedContentScope$SlideDirection;

        specialinvoke $r0.<androidx.compose.animation.AnimatedContentScope$SlideDirection: void <init>(int)>(i0);

        return $r0;
    }

    public final int unbox-impl()
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection r0;
        int $i0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$SlideDirection;

        $i0 = r0.<androidx.compose.animation.AnimatedContentScope$SlideDirection: int value>;

        return $i0;
    }

    public static final boolean equals-impl0(int, int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static final int access$getLeft$cp()
    {
        int $i0;

        $i0 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Left>;

        return $i0;
    }

    public static final int access$getRight$cp()
    {
        int $i0;

        $i0 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Right>;

        return $i0;
    }

    public static final int access$getUp$cp()
    {
        int $i0;

        $i0 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Up>;

        return $i0;
    }

    public static final int access$getDown$cp()
    {
        int $i0;

        $i0 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Down>;

        return $i0;
    }

    public static final int access$getStart$cp()
    {
        int $i0;

        $i0 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Start>;

        return $i0;
    }

    public static final int access$getEnd$cp()
    {
        int $i0;

        $i0 = <androidx.compose.animation.AnimatedContentScope$SlideDirection: int End>;

        return $i0;
    }

    static void <clinit>()
    {
        androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 = new androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion;

        specialinvoke $r0.<androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.animation.AnimatedContentScope$SlideDirection: androidx.compose.animation.AnimatedContentScope$SlideDirection$Companion Companion> = $r0;

        $i0 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: int constructor-impl(int)>(0);

        <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Left> = $i0;

        $i1 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: int constructor-impl(int)>(1);

        <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Right> = $i1;

        $i2 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: int constructor-impl(int)>(2);

        <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Up> = $i2;

        $i3 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: int constructor-impl(int)>(3);

        <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Down> = $i3;

        $i4 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: int constructor-impl(int)>(4);

        <androidx.compose.animation.AnimatedContentScope$SlideDirection: int Start> = $i4;

        $i5 = staticinvoke <androidx.compose.animation.AnimatedContentScope$SlideDirection: int constructor-impl(int)>(5);

        <androidx.compose.animation.AnimatedContentScope$SlideDirection: int End> = $i5;

        return;
    }

androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1
<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1 INSTANCE>
    void <init>()
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1 r0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(int)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1 r0;
        int i0;
        java.lang.Integer $r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1: java.lang.Integer invoke(int)>($i0);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1 $r0;

        $r0 = new androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1;

        specialinvoke $r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1: void <init>()>();

        <androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2
<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2: kotlin.jvm.functions.Function1 $initialOffset>
<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2: androidx.compose.animation.AnimatedContentScope this$0>
    void <init>(kotlin.jvm.functions.Function1, androidx.compose.animation.AnimatedContentScope)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2 r0;
        kotlin.jvm.functions.Function1 $r1;
        androidx.compose.animation.AnimatedContentScope $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 := @parameter1: androidx.compose.animation.AnimatedContentScope;

        r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2: kotlin.jvm.functions.Function1 $initialOffset> = $r1;

        r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2: androidx.compose.animation.AnimatedContentScope this$0> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(int)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2 r0;
        int i0, $i2, $i6, $i7;
        androidx.compose.animation.AnimatedContentScope $r1, $r3, $r4;
        kotlin.jvm.functions.Function1 $r2;
        long $l1, $l3, $l4, $l5;
        java.lang.Integer $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2: kotlin.jvm.functions.Function1 $initialOffset>;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2: androidx.compose.animation.AnimatedContentScope this$0>;

        $l1 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$getCurrentSize-YbymL2g(androidx.compose.animation.AnimatedContentScope)>($r1);

        $i2 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>($l1);

        $r3 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2: androidx.compose.animation.AnimatedContentScope this$0>;

        $l3 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>(i0, i0);

        $r4 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2: androidx.compose.animation.AnimatedContentScope this$0>;

        $l4 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$getCurrentSize-YbymL2g(androidx.compose.animation.AnimatedContentScope)>($r4);

        $l5 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$calculateOffset-emnUabE(androidx.compose.animation.AnimatedContentScope,long,long)>($r3, $l3, $l4);

        $i6 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l5);

        $i7 = $i2 - $i6;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = (java.lang.Integer) $r6;

        return $r7;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$2: java.lang.Integer invoke(int)>($i0);

        return $r3;
    }

androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3
<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3: kotlin.jvm.functions.Function1 $initialOffset>
<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3: androidx.compose.animation.AnimatedContentScope this$0>
    void <init>(kotlin.jvm.functions.Function1, androidx.compose.animation.AnimatedContentScope)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3 r0;
        kotlin.jvm.functions.Function1 $r1;
        androidx.compose.animation.AnimatedContentScope $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 := @parameter1: androidx.compose.animation.AnimatedContentScope;

        r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3: kotlin.jvm.functions.Function1 $initialOffset> = $r1;

        r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3: androidx.compose.animation.AnimatedContentScope this$0> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(int)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3 r0;
        int i0, $i4, $i5, $i6;
        kotlin.jvm.functions.Function1 $r1;
        androidx.compose.animation.AnimatedContentScope $r2, $r3;
        long $l1, $l2, $l3;
        java.lang.Integer $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3: kotlin.jvm.functions.Function1 $initialOffset>;

        $r2 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3: androidx.compose.animation.AnimatedContentScope this$0>;

        $l1 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>(i0, i0);

        $r3 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3: androidx.compose.animation.AnimatedContentScope this$0>;

        $l2 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$getCurrentSize-YbymL2g(androidx.compose.animation.AnimatedContentScope)>($r3);

        $l3 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$calculateOffset-emnUabE(androidx.compose.animation.AnimatedContentScope,long,long)>($r2, $l1, $l2);

        $i4 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l3);

        $i5 = neg $i4;

        $i6 = $i5 - i0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Integer) $r5;

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$3: java.lang.Integer invoke(int)>($i0);

        return $r3;
    }

androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4
<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4: kotlin.jvm.functions.Function1 $initialOffset>
<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4: androidx.compose.animation.AnimatedContentScope this$0>
    void <init>(kotlin.jvm.functions.Function1, androidx.compose.animation.AnimatedContentScope)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4 r0;
        kotlin.jvm.functions.Function1 $r1;
        androidx.compose.animation.AnimatedContentScope $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 := @parameter1: androidx.compose.animation.AnimatedContentScope;

        r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4: kotlin.jvm.functions.Function1 $initialOffset> = $r1;

        r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4: androidx.compose.animation.AnimatedContentScope this$0> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(int)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4 r0;
        int i0, $i2, $i6, $i7;
        androidx.compose.animation.AnimatedContentScope $r1, $r3, $r4;
        kotlin.jvm.functions.Function1 $r2;
        long $l1, $l3, $l4, $l5;
        java.lang.Integer $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4: kotlin.jvm.functions.Function1 $initialOffset>;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4: androidx.compose.animation.AnimatedContentScope this$0>;

        $l1 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$getCurrentSize-YbymL2g(androidx.compose.animation.AnimatedContentScope)>($r1);

        $i2 = staticinvoke <androidx.compose.ui.unit.IntSize: int getHeight-impl(long)>($l1);

        $r3 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4: androidx.compose.animation.AnimatedContentScope this$0>;

        $l3 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>(i0, i0);

        $r4 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4: androidx.compose.animation.AnimatedContentScope this$0>;

        $l4 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$getCurrentSize-YbymL2g(androidx.compose.animation.AnimatedContentScope)>($r4);

        $l5 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$calculateOffset-emnUabE(androidx.compose.animation.AnimatedContentScope,long,long)>($r3, $l3, $l4);

        $i6 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l5);

        $i7 = $i2 - $i6;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r6 = interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = (java.lang.Integer) $r6;

        return $r7;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$4: java.lang.Integer invoke(int)>($i0);

        return $r3;
    }

androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5
<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5: kotlin.jvm.functions.Function1 $initialOffset>
<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5: androidx.compose.animation.AnimatedContentScope this$0>
    void <init>(kotlin.jvm.functions.Function1, androidx.compose.animation.AnimatedContentScope)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5 r0;
        kotlin.jvm.functions.Function1 $r1;
        androidx.compose.animation.AnimatedContentScope $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5;

        $r1 := @parameter0: kotlin.jvm.functions.Function1;

        $r2 := @parameter1: androidx.compose.animation.AnimatedContentScope;

        r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5: kotlin.jvm.functions.Function1 $initialOffset> = $r1;

        r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5: androidx.compose.animation.AnimatedContentScope this$0> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(int)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5 r0;
        int i0, $i4, $i5, $i6;
        kotlin.jvm.functions.Function1 $r1;
        androidx.compose.animation.AnimatedContentScope $r2, $r3;
        long $l1, $l2, $l3;
        java.lang.Integer $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5: kotlin.jvm.functions.Function1 $initialOffset>;

        $r2 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5: androidx.compose.animation.AnimatedContentScope this$0>;

        $l1 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>(i0, i0);

        $r3 = r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5: androidx.compose.animation.AnimatedContentScope this$0>;

        $l2 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$getCurrentSize-YbymL2g(androidx.compose.animation.AnimatedContentScope)>($r3);

        $l3 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$calculateOffset-emnUabE(androidx.compose.animation.AnimatedContentScope,long,long)>($r2, $l1, $l2);

        $i4 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l3);

        $i5 = neg $i4;

        $i6 = $i5 - i0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r5 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r4);

        $r6 = (java.lang.Integer) $r5;

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$slideIntoContainer$5: java.lang.Integer invoke(int)>($i0);

        return $r3;
    }

androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1
<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1 INSTANCE>
    void <init>()
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1 r0;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(int)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1 r0;
        int i0;
        java.lang.Integer $r1;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1: java.lang.Integer invoke(int)>($i0);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1 $r0;

        $r0 = new androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1;

        specialinvoke $r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1: void <init>()>();

        <androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$1 INSTANCE> = $r0;

        return;
    }

androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2
<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2: androidx.compose.animation.AnimatedContentScope this$0>
<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2: kotlin.jvm.functions.Function1 $targetOffset>
    void <init>(androidx.compose.animation.AnimatedContentScope, kotlin.jvm.functions.Function1)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2 r0;
        androidx.compose.animation.AnimatedContentScope $r1;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2;

        $r1 := @parameter0: androidx.compose.animation.AnimatedContentScope;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2: androidx.compose.animation.AnimatedContentScope this$0> = $r1;

        r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2: kotlin.jvm.functions.Function1 $targetOffset> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(int)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2 r0;
        int i0, $i4, $i5, $i6;
        long l1, $l2, $l3, $l7;
        androidx.compose.animation.AnimatedContentScope $r1, $r3, $r10;
        java.util.Map $r2;
        androidx.compose.animation.core.Transition $r4;
        java.lang.Object $r5, $r6, $r12, $r14;
        androidx.compose.runtime.State $r7;
        androidx.compose.ui.unit.IntSize$Companion $r8;
        kotlin.jvm.functions.Function1 $r9;
        java.lang.Integer $r11, $r13;
        androidx.compose.ui.unit.IntSize $r15;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2: androidx.compose.animation.AnimatedContentScope this$0>;

        $r2 = virtualinvoke $r1.<androidx.compose.animation.AnimatedContentScope: java.util.Map getTargetSizeMap$animation_release()>();

        $r3 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2: androidx.compose.animation.AnimatedContentScope this$0>;

        $r4 = virtualinvoke $r3.<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.core.Transition getTransition$animation_release()>();

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.Transition: java.lang.Object getTargetState()>();

        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (androidx.compose.runtime.State) $r6;

        if $r7 == null goto label1;

        $r14 = interfaceinvoke $r7.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r15 = (androidx.compose.ui.unit.IntSize) $r14;

        $l7 = virtualinvoke $r15.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        goto label2;

     label1:
        $r8 = <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize$Companion Companion>;

        $l7 = virtualinvoke $r8.<androidx.compose.ui.unit.IntSize$Companion: long getZero-YbymL2g()>();

     label2:
        l1 = $l7;

        $r9 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2: kotlin.jvm.functions.Function1 $targetOffset>;

        $r10 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2: androidx.compose.animation.AnimatedContentScope this$0>;

        $l2 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>(i0, i0);

        $l3 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$calculateOffset-emnUabE(androidx.compose.animation.AnimatedContentScope,long,long)>($r10, $l2, l1);

        $i4 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l3);

        $i5 = neg $i4;

        $i6 = $i5 - i0;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r12 = interfaceinvoke $r9.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r11);

        $r13 = (java.lang.Integer) $r12;

        return $r13;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$2: java.lang.Integer invoke(int)>($i0);

        return $r3;
    }

androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3
<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3: androidx.compose.animation.AnimatedContentScope this$0>
<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3: kotlin.jvm.functions.Function1 $targetOffset>
    void <init>(androidx.compose.animation.AnimatedContentScope, kotlin.jvm.functions.Function1)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3 r0;
        androidx.compose.animation.AnimatedContentScope $r1;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3;

        $r1 := @parameter0: androidx.compose.animation.AnimatedContentScope;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3: androidx.compose.animation.AnimatedContentScope this$0> = $r1;

        r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3: kotlin.jvm.functions.Function1 $targetOffset> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(int)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3 r0;
        int i0, $i4, $i5, $i6, $i7;
        long l1, $l2, $l3, $l8;
        androidx.compose.animation.AnimatedContentScope $r1, $r3, $r10;
        java.util.Map $r2;
        androidx.compose.animation.core.Transition $r4;
        java.lang.Object $r5, $r6, $r12, $r14;
        androidx.compose.runtime.State $r7;
        androidx.compose.ui.unit.IntSize$Companion $r8;
        kotlin.jvm.functions.Function1 $r9;
        java.lang.Integer $r11, $r13;
        androidx.compose.ui.unit.IntSize $r15;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3: androidx.compose.animation.AnimatedContentScope this$0>;

        $r2 = virtualinvoke $r1.<androidx.compose.animation.AnimatedContentScope: java.util.Map getTargetSizeMap$animation_release()>();

        $r3 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3: androidx.compose.animation.AnimatedContentScope this$0>;

        $r4 = virtualinvoke $r3.<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.core.Transition getTransition$animation_release()>();

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.Transition: java.lang.Object getTargetState()>();

        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (androidx.compose.runtime.State) $r6;

        if $r7 == null goto label1;

        $r14 = interfaceinvoke $r7.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r15 = (androidx.compose.ui.unit.IntSize) $r14;

        $l8 = virtualinvoke $r15.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        goto label2;

     label1:
        $r8 = <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize$Companion Companion>;

        $l8 = virtualinvoke $r8.<androidx.compose.ui.unit.IntSize$Companion: long getZero-YbymL2g()>();

     label2:
        l1 = $l8;

        $r9 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3: kotlin.jvm.functions.Function1 $targetOffset>;

        $r10 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3: androidx.compose.animation.AnimatedContentScope this$0>;

        $l2 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>(i0, i0);

        $l3 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$calculateOffset-emnUabE(androidx.compose.animation.AnimatedContentScope,long,long)>($r10, $l2, l1);

        $i4 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getX-impl(long)>($l3);

        $i5 = neg $i4;

        $i6 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>(l1);

        $i7 = $i5 + $i6;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r12 = interfaceinvoke $r9.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r11);

        $r13 = (java.lang.Integer) $r12;

        return $r13;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$3: java.lang.Integer invoke(int)>($i0);

        return $r3;
    }

androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4
<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4: androidx.compose.animation.AnimatedContentScope this$0>
<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4: kotlin.jvm.functions.Function1 $targetOffset>
    void <init>(androidx.compose.animation.AnimatedContentScope, kotlin.jvm.functions.Function1)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4 r0;
        androidx.compose.animation.AnimatedContentScope $r1;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4;

        $r1 := @parameter0: androidx.compose.animation.AnimatedContentScope;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4: androidx.compose.animation.AnimatedContentScope this$0> = $r1;

        r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4: kotlin.jvm.functions.Function1 $targetOffset> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(int)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4 r0;
        int i0, $i4, $i5, $i6;
        long l1, $l2, $l3, $l7;
        androidx.compose.animation.AnimatedContentScope $r1, $r3, $r10;
        java.util.Map $r2;
        androidx.compose.animation.core.Transition $r4;
        java.lang.Object $r5, $r6, $r12, $r14;
        androidx.compose.runtime.State $r7;
        androidx.compose.ui.unit.IntSize$Companion $r8;
        kotlin.jvm.functions.Function1 $r9;
        java.lang.Integer $r11, $r13;
        androidx.compose.ui.unit.IntSize $r15;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4: androidx.compose.animation.AnimatedContentScope this$0>;

        $r2 = virtualinvoke $r1.<androidx.compose.animation.AnimatedContentScope: java.util.Map getTargetSizeMap$animation_release()>();

        $r3 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4: androidx.compose.animation.AnimatedContentScope this$0>;

        $r4 = virtualinvoke $r3.<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.core.Transition getTransition$animation_release()>();

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.Transition: java.lang.Object getTargetState()>();

        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (androidx.compose.runtime.State) $r6;

        if $r7 == null goto label1;

        $r14 = interfaceinvoke $r7.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r15 = (androidx.compose.ui.unit.IntSize) $r14;

        $l7 = virtualinvoke $r15.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        goto label2;

     label1:
        $r8 = <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize$Companion Companion>;

        $l7 = virtualinvoke $r8.<androidx.compose.ui.unit.IntSize$Companion: long getZero-YbymL2g()>();

     label2:
        l1 = $l7;

        $r9 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4: kotlin.jvm.functions.Function1 $targetOffset>;

        $r10 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4: androidx.compose.animation.AnimatedContentScope this$0>;

        $l2 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>(i0, i0);

        $l3 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$calculateOffset-emnUabE(androidx.compose.animation.AnimatedContentScope,long,long)>($r10, $l2, l1);

        $i4 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l3);

        $i5 = neg $i4;

        $i6 = $i5 - i0;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r12 = interfaceinvoke $r9.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r11);

        $r13 = (java.lang.Integer) $r12;

        return $r13;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$4: java.lang.Integer invoke(int)>($i0);

        return $r3;
    }

androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5
<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5: androidx.compose.animation.AnimatedContentScope this$0>
<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5: kotlin.jvm.functions.Function1 $targetOffset>
    void <init>(androidx.compose.animation.AnimatedContentScope, kotlin.jvm.functions.Function1)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5 r0;
        androidx.compose.animation.AnimatedContentScope $r1;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5;

        $r1 := @parameter0: androidx.compose.animation.AnimatedContentScope;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5: androidx.compose.animation.AnimatedContentScope this$0> = $r1;

        r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5: kotlin.jvm.functions.Function1 $targetOffset> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Integer invoke(int)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5 r0;
        int i0, $i4, $i5, $i6, $i7;
        long l1, $l2, $l3, $l8;
        androidx.compose.animation.AnimatedContentScope $r1, $r3, $r10;
        java.util.Map $r2;
        androidx.compose.animation.core.Transition $r4;
        java.lang.Object $r5, $r6, $r12, $r14;
        androidx.compose.runtime.State $r7;
        androidx.compose.ui.unit.IntSize$Companion $r8;
        kotlin.jvm.functions.Function1 $r9;
        java.lang.Integer $r11, $r13;
        androidx.compose.ui.unit.IntSize $r15;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5: androidx.compose.animation.AnimatedContentScope this$0>;

        $r2 = virtualinvoke $r1.<androidx.compose.animation.AnimatedContentScope: java.util.Map getTargetSizeMap$animation_release()>();

        $r3 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5: androidx.compose.animation.AnimatedContentScope this$0>;

        $r4 = virtualinvoke $r3.<androidx.compose.animation.AnimatedContentScope: androidx.compose.animation.core.Transition getTransition$animation_release()>();

        $r5 = virtualinvoke $r4.<androidx.compose.animation.core.Transition: java.lang.Object getTargetState()>();

        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (androidx.compose.runtime.State) $r6;

        if $r7 == null goto label1;

        $r14 = interfaceinvoke $r7.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r15 = (androidx.compose.ui.unit.IntSize) $r14;

        $l8 = virtualinvoke $r15.<androidx.compose.ui.unit.IntSize: long unbox-impl()>();

        goto label2;

     label1:
        $r8 = <androidx.compose.ui.unit.IntSize: androidx.compose.ui.unit.IntSize$Companion Companion>;

        $l8 = virtualinvoke $r8.<androidx.compose.ui.unit.IntSize$Companion: long getZero-YbymL2g()>();

     label2:
        l1 = $l8;

        $r9 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5: kotlin.jvm.functions.Function1 $targetOffset>;

        $r10 = r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5: androidx.compose.animation.AnimatedContentScope this$0>;

        $l2 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>(i0, i0);

        $l3 = staticinvoke <androidx.compose.animation.AnimatedContentScope: long access$calculateOffset-emnUabE(androidx.compose.animation.AnimatedContentScope,long,long)>($r10, $l2, l1);

        $i4 = staticinvoke <androidx.compose.ui.unit.IntOffset: int getY-impl(long)>($l3);

        $i5 = neg $i4;

        $i6 = staticinvoke <androidx.compose.ui.unit.IntSize: int getHeight-impl(long)>(l1);

        $i7 = $i5 + $i6;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r12 = interfaceinvoke $r9.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r11);

        $r13 = (java.lang.Integer) $r12;

        return $r13;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        $r3 = virtualinvoke r0.<androidx.compose.animation.AnimatedContentScope$slideOutOfContainer$5: java.lang.Integer invoke(int)>($i0);

        return $r3;
    }

