androidx.core.graphics.ColorUtils
<androidx.core.graphics.ColorUtils: double XYZ_WHITE_REFERENCE_X>
<androidx.core.graphics.ColorUtils: double XYZ_WHITE_REFERENCE_Y>
<androidx.core.graphics.ColorUtils: double XYZ_WHITE_REFERENCE_Z>
<androidx.core.graphics.ColorUtils: double XYZ_EPSILON>
<androidx.core.graphics.ColorUtils: double XYZ_KAPPA>
<androidx.core.graphics.ColorUtils: int MIN_ALPHA_SEARCH_MAX_ITERATIONS>
<androidx.core.graphics.ColorUtils: int MIN_ALPHA_SEARCH_PRECISION>
<androidx.core.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY>
    private void <init>()
    {
        androidx.core.graphics.ColorUtils r0;

        r0 := @this: androidx.core.graphics.ColorUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int compositeColors(int, int)
    {
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.graphics.Color: int alpha(int)>(i1);

        i3 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        i4 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeAlpha(int,int)>(i3, i2);

        $i8 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $i9 = staticinvoke <android.graphics.Color: int red(int)>(i1);

        i5 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i8, i3, $i9, i2, i4);

        $i10 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $i11 = staticinvoke <android.graphics.Color: int green(int)>(i1);

        i6 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i10, i3, $i11, i2, i4);

        $i12 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        $i13 = staticinvoke <android.graphics.Color: int blue(int)>(i1);

        i7 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i12, i3, $i13, i2, i4);

        $i14 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(i4, i5, i6, i7);

        return $i14;
    }

    public static android.graphics.Color compositeColors(android.graphics.Color, android.graphics.Color)
    {
        android.graphics.Color r0, r1, $r2;

        r0 := @parameter0: android.graphics.Color;

        r1 := @parameter1: android.graphics.Color;

        $r2 = staticinvoke <androidx.core.graphics.ColorUtils$Api26Impl: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>(r0, r1);

        return $r2;
    }

    private static int compositeAlpha(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = 255 - i1;

        $i2 = 255 - i0;

        $i4 = $i3 * $i2;

        $i5 = $i4 / 255;

        $i6 = 255 - $i5;

        return $i6;
    }

    private static int compositeComponent(int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        if i4 != 0 goto label1;

        return 0;

     label1:
        $i5 = 255 * i0;

        $i9 = $i5 * i1;

        $i7 = i2 * i3;

        $i6 = 255 - i1;

        $i8 = $i7 * $i6;

        $i11 = $i9 + $i8;

        $i10 = i4 * 255;

        $i12 = $i11 / $i10;

        return $i12;
    }

    public static double calculateLuminance(int)
    {
        int i0;
        double[] r0;
        double $d0, $d1;

        i0 := @parameter0: int;

        r0 = staticinvoke <androidx.core.graphics.ColorUtils: double[] getTempDouble3Array()>();

        staticinvoke <androidx.core.graphics.ColorUtils: void colorToXYZ(int,double[])>(i0, r0);

        $d0 = r0[1];

        $d1 = $d0 / 100.0;

        return $d1;
    }

    public static double calculateContrast(int, int)
    {
        int i0, $i1, $i2, i3;
        double d0, d1, $d2, $d3, $d4, $d5, $d6;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        if $i1 == 255 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("background can not be translucent: #");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r0;

     label1:
        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>(i3);

        if $i2 >= 255 goto label2;

        i3 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeColors(int,int)>(i3, i0);

     label2:
        $d2 = staticinvoke <androidx.core.graphics.ColorUtils: double calculateLuminance(int)>(i3);

        d0 = $d2 + 0.05;

        $d3 = staticinvoke <androidx.core.graphics.ColorUtils: double calculateLuminance(int)>(i0);

        d1 = $d3 + 0.05;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1);

        $d5 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1);

        $d6 = $d4 / $d5;

        return $d6;
    }

    public static int calculateMinimumAlpha(int, int, float)
    {
        int i0, i1, i2, $i3, $i5, $i6, i8, i9, i10, i11, i12;
        float f0;
        double $d0, $d1, d2, d3;
        byte $b4, $b7;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        $i3 = staticinvoke <android.graphics.Color: int alpha(int)>(i1);

        if $i3 == 255 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("background can not be translucent: #");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r0;

     label1:
        i8 = staticinvoke <androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)>(i0, 255);

        d2 = staticinvoke <androidx.core.graphics.ColorUtils: double calculateContrast(int,int)>(i8, i1);

        $d0 = (double) f0;

        $b4 = d2 cmpg $d0;

        if $b4 >= 0 goto label2;

        return -1;

     label2:
        i9 = 0;

        i10 = 0;

        i11 = 255;

     label3:
        if i9 > 10 goto label6;

        $i5 = i11 - i10;

        if $i5 <= 1 goto label6;

        $i6 = i10 + i11;

        i2 = $i6 / 2;

        i12 = staticinvoke <androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)>(i0, i2);

        d3 = staticinvoke <androidx.core.graphics.ColorUtils: double calculateContrast(int,int)>(i12, i1);

        $d1 = (double) f0;

        $b7 = d3 cmpg $d1;

        if $b7 >= 0 goto label4;

        i10 = i2;

        goto label5;

     label4:
        i11 = i2;

     label5:
        i9 = i9 + 1;

        goto label3;

     label6:
        return i11;
    }

    public static void RGBToHSL(int, int, int, float[])
    {
        int i0, i1, i2;
        float[] r0;
        float f0, f1, f2, f3, f4, f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, f22, f23, $f24, $f25, $f26, $f27, $f28, f29;
        byte $b3, $b4, $b5, $b6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: float[];

        $f7 = (float) i0;

        f0 = $f7 / 255.0F;

        $f8 = (float) i1;

        f1 = $f8 / 255.0F;

        $f9 = (float) i2;

        f2 = $f9 / 255.0F;

        $f10 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f2);

        f3 = staticinvoke <java.lang.Math: float max(float,float)>(f0, $f10);

        $f11 = staticinvoke <java.lang.Math: float min(float,float)>(f1, f2);

        f4 = staticinvoke <java.lang.Math: float min(float,float)>(f0, $f11);

        f5 = f3 - f4;

        $f12 = f3 + f4;

        f6 = $f12 / 2.0F;

        $b3 = f3 cmpl f4;

        if $b3 != 0 goto label1;

        f22 = 0.0F;

        f23 = 0.0F;

        goto label5;

     label1:
        $b4 = f3 cmpl f0;

        if $b4 != 0 goto label2;

        $f20 = f1 - f2;

        $f21 = $f20 / f5;

        f23 = $f21 % 6.0F;

        goto label4;

     label2:
        $b5 = f3 cmpl f1;

        if $b5 != 0 goto label3;

        $f18 = f2 - f0;

        $f19 = $f18 / f5;

        f23 = $f19 + 2.0F;

        goto label4;

     label3:
        $f13 = f0 - f1;

        $f14 = $f13 / f5;

        f23 = $f14 + 4.0F;

     label4:
        $f24 = 2.0F * f6;

        $f25 = $f24 - 1.0F;

        $f26 = staticinvoke <java.lang.Math: float abs(float)>($f25);

        $f27 = 1.0F - $f26;

        f22 = f5 / $f27;

     label5:
        $f28 = f23 * 60.0F;

        f29 = $f28 % 360.0F;

        $b6 = f29 cmpg 0.0F;

        if $b6 >= 0 goto label6;

        f29 = f29 + 360.0F;

     label6:
        $f15 = staticinvoke <androidx.core.graphics.ColorUtils: float constrain(float,float,float)>(f29, 0.0F, 360.0F);

        r0[0] = $f15;

        $f16 = staticinvoke <androidx.core.graphics.ColorUtils: float constrain(float,float,float)>(f22, 0.0F, 1.0F);

        r0[1] = $f16;

        $f17 = staticinvoke <androidx.core.graphics.ColorUtils: float constrain(float,float,float)>(f6, 0.0F, 1.0F);

        r0[2] = $f17;

        return;
    }

    public static void colorToHSL(int, float[])
    {
        int i0, $i1, $i2, $i3;
        float[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: float[];

        $i1 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $i2 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $i3 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        staticinvoke <androidx.core.graphics.ColorUtils: void RGBToHSL(int,int,int,float[])>($i1, $i2, $i3, r0);

        return;
    }

    public static int HSLToColor(float[])
    {
        float[] r0;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45;
        int i0, $i1, i2, i3, i4, i5, i6, i7, $i8;

        r0 := @parameter0: float[];

        f0 = r0[0];

        f1 = r0[1];

        f2 = r0[2];

        $f6 = 2.0F * f2;

        $f7 = $f6 - 1.0F;

        $f8 = staticinvoke <java.lang.Math: float abs(float)>($f7);

        $f9 = 1.0F - $f8;

        f3 = $f9 * f1;

        $f10 = 0.5F * f3;

        f4 = f2 - $f10;

        $f11 = f0 / 60.0F;

        $f12 = $f11 % 2.0F;

        $f13 = $f12 - 1.0F;

        $f14 = staticinvoke <java.lang.Math: float abs(float)>($f13);

        $f15 = 1.0F - $f14;

        f5 = f3 * $f15;

        $i1 = (int) f0;

        i0 = $i1 / 60;

        i2 = 0;

        i3 = 0;

        i4 = 0;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label6;
            default: goto label7;
        };

     label1:
        $f41 = f3 + f4;

        $f42 = 255.0F * $f41;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f42);

        $f43 = f5 + f4;

        $f44 = 255.0F * $f43;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f44);

        $f45 = 255.0F * f4;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f45);

        goto label7;

     label2:
        $f36 = f5 + f4;

        $f37 = 255.0F * $f36;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f37);

        $f38 = f3 + f4;

        $f39 = 255.0F * $f38;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f39);

        $f40 = 255.0F * f4;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f40);

        goto label7;

     label3:
        $f31 = 255.0F * f4;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f31);

        $f32 = f3 + f4;

        $f33 = 255.0F * $f32;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f33);

        $f34 = f5 + f4;

        $f35 = 255.0F * $f34;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f35);

        goto label7;

     label4:
        $f26 = 255.0F * f4;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f26);

        $f27 = f5 + f4;

        $f28 = 255.0F * $f27;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f28);

        $f29 = f3 + f4;

        $f30 = 255.0F * $f29;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f30);

        goto label7;

     label5:
        $f21 = f5 + f4;

        $f22 = 255.0F * $f21;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f22);

        $f23 = 255.0F * f4;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f23);

        $f24 = f3 + f4;

        $f25 = 255.0F * $f24;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f25);

        goto label7;

     label6:
        $f16 = f3 + f4;

        $f17 = 255.0F * $f16;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f17);

        $f18 = 255.0F * f4;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f18);

        $f19 = f5 + f4;

        $f20 = 255.0F * $f19;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f20);

     label7:
        i5 = staticinvoke <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>(i2, 0, 255);

        i6 = staticinvoke <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>(i3, 0, 255);

        i7 = staticinvoke <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>(i4, 0, 255);

        $i8 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(i5, i6, i7);

        return $i8;
    }

    public static int setAlphaComponent(int, int)
    {
        int i0, i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 < 0 goto label1;

        if i1 <= 255 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("alpha must be between 0 and 255.");

        throw $r0;

     label2:
        $i3 = i0 & 16777215;

        $i2 = i1 << 24;

        $i4 = $i3 | $i2;

        return $i4;
    }

    public static void colorToLAB(int, double[])
    {
        int i0, $i1, $i2, $i3;
        double[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: double[];

        $i1 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $i2 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $i3 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        staticinvoke <androidx.core.graphics.ColorUtils: void RGBToLAB(int,int,int,double[])>($i1, $i2, $i3, r0);

        return;
    }

    public static void RGBToLAB(int, int, int, double[])
    {
        int i0, i1, i2;
        double[] r0;
        double $d0, $d1, $d2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: double[];

        staticinvoke <androidx.core.graphics.ColorUtils: void RGBToXYZ(int,int,int,double[])>(i0, i1, i2, r0);

        $d2 = r0[0];

        $d1 = r0[1];

        $d0 = r0[2];

        staticinvoke <androidx.core.graphics.ColorUtils: void XYZToLAB(double,double,double,double[])>($d2, $d1, $d0, r0);

        return;
    }

    public static void colorToXYZ(int, double[])
    {
        int i0, $i1, $i2, $i3;
        double[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: double[];

        $i1 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $i2 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $i3 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        staticinvoke <androidx.core.graphics.ColorUtils: void RGBToXYZ(int,int,int,double[])>($i1, $i2, $i3, r0);

        return;
    }

    public static void RGBToXYZ(int, int, int, double[])
    {
        int i0, i1, i2, $i3;
        double[] r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, d27, $d28, d29, d30, $d31, d32, d33, $d34, d35;
        byte $b4, $b5, $b6;
        java.lang.IllegalArgumentException $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: double[];

        $i3 = lengthof r0;

        if $i3 == 3 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("outXyz must have a length of 3.");

        throw $r1;

     label1:
        $d0 = (double) i0;

        d27 = $d0 / 255.0;

        $b4 = d27 cmpg 0.04045;

        if $b4 >= 0 goto label2;

        $d28 = d27 / 12.92;

        goto label3;

     label2:
        $d1 = d27 + 0.055;

        $d2 = $d1 / 1.055;

        $d28 = staticinvoke <java.lang.Math: double pow(double,double)>($d2, 2.4);

     label3:
        d29 = $d28;

        $d3 = (double) i1;

        d30 = $d3 / 255.0;

        $b5 = d30 cmpg 0.04045;

        if $b5 >= 0 goto label4;

        $d31 = d30 / 12.92;

        goto label5;

     label4:
        $d4 = d30 + 0.055;

        $d5 = $d4 / 1.055;

        $d31 = staticinvoke <java.lang.Math: double pow(double,double)>($d5, 2.4);

     label5:
        d32 = $d31;

        $d6 = (double) i2;

        d33 = $d6 / 255.0;

        $b6 = d33 cmpg 0.04045;

        if $b6 >= 0 goto label6;

        $d34 = d33 / 12.92;

        goto label7;

     label6:
        $d7 = d33 + 0.055;

        $d8 = $d7 / 1.055;

        $d34 = staticinvoke <java.lang.Math: double pow(double,double)>($d8, 2.4);

     label7:
        d35 = $d34;

        $d10 = d29 * 0.4124;

        $d9 = d32 * 0.3576;

        $d12 = $d10 + $d9;

        $d11 = d35 * 0.1805;

        $d13 = $d12 + $d11;

        $d14 = 100.0 * $d13;

        r0[0] = $d14;

        $d16 = d29 * 0.2126;

        $d15 = d32 * 0.7152;

        $d18 = $d16 + $d15;

        $d17 = d35 * 0.0722;

        $d19 = $d18 + $d17;

        $d20 = 100.0 * $d19;

        r0[1] = $d20;

        $d22 = d29 * 0.0193;

        $d21 = d32 * 0.1192;

        $d24 = $d22 + $d21;

        $d23 = d35 * 0.9505;

        $d25 = $d24 + $d23;

        $d26 = 100.0 * $d25;

        r0[2] = $d26;

        return;
    }

    public static void XYZToLAB(double, double, double, double[])
    {
        double[] r0;
        int $i0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11, d12, d13, d14, d15;
        java.lang.IllegalArgumentException $r1;

        d10 := @parameter0: double;

        d11 := @parameter1: double;

        d12 := @parameter2: double;

        r0 := @parameter3: double[];

        $i0 = lengthof r0;

        if $i0 == 3 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("outLab must have a length of 3.");

        throw $r1;

     label1:
        $d0 = d10 / 95.047;

        d13 = staticinvoke <androidx.core.graphics.ColorUtils: double pivotXyzComponent(double)>($d0);

        $d1 = d11 / 100.0;

        d14 = staticinvoke <androidx.core.graphics.ColorUtils: double pivotXyzComponent(double)>($d1);

        $d2 = d12 / 108.883;

        d15 = staticinvoke <androidx.core.graphics.ColorUtils: double pivotXyzComponent(double)>($d2);

        $d3 = 116.0 * d14;

        $d4 = $d3 - 16.0;

        $d5 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d4);

        r0[0] = $d5;

        $d6 = d13 - d14;

        $d7 = 500.0 * $d6;

        r0[1] = $d7;

        $d8 = d14 - d15;

        $d9 = 200.0 * $d8;

        r0[2] = $d9;

        return;
    }

    public static void LABToXYZ(double, double, double, double[])
    {
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, d19, $d20, $d21, d22, $d23;
        double[] r0;
        byte $b0, $b1, $b2;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r0 := @parameter3: double[];

        $d9 = d0 + 16.0;

        d3 = $d9 / 116.0;

        $d10 = d1 / 500.0;

        d4 = $d10 + d3;

        $d11 = d2 / 200.0;

        d5 = d3 - $d11;

        d19 = staticinvoke <java.lang.Math: double pow(double,double)>(d4, 3.0);

        $b0 = d19 cmpl 0.008856;

        if $b0 <= 0 goto label1;

        $d20 = d19;

        goto label2;

     label1:
        $d12 = 116.0 * d4;

        $d13 = $d12 - 16.0;

        $d20 = $d13 / 903.3;

     label2:
        d6 = $d20;

        $b1 = d0 cmpl 7.9996247999999985;

        if $b1 <= 0 goto label3;

        $d21 = staticinvoke <java.lang.Math: double pow(double,double)>(d3, 3.0);

        goto label4;

     label3:
        $d21 = d0 / 903.3;

     label4:
        d7 = $d21;

        d22 = staticinvoke <java.lang.Math: double pow(double,double)>(d5, 3.0);

        $b2 = d22 cmpl 0.008856;

        if $b2 <= 0 goto label5;

        $d23 = d22;

        goto label6;

     label5:
        $d14 = 116.0 * d5;

        $d15 = $d14 - 16.0;

        $d23 = $d15 / 903.3;

     label6:
        d8 = $d23;

        $d16 = d6 * 95.047;

        r0[0] = $d16;

        $d17 = d7 * 100.0;

        r0[1] = $d17;

        $d18 = d8 * 108.883;

        r0[2] = $d18;

        return;
    }

    public static int XYZToColor(double, double, double)
    {
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, d27, d28, d29, $d30, d31, $d32, d33, $d34, d35;
        byte $b0, $b1, $b2;
        long $l3, $l6, $l9;
        int $i4, $i5, $i7, $i8, $i10, $i11, $i12;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $d4 = d0 * 3.2406;

        $d3 = d1 * -1.5372;

        $d6 = $d4 + $d3;

        $d5 = d2 * -0.4986;

        $d7 = $d6 + $d5;

        d27 = $d7 / 100.0;

        $d9 = d0 * -0.9689;

        $d8 = d1 * 1.8758;

        $d11 = $d9 + $d8;

        $d10 = d2 * 0.0415;

        $d12 = $d11 + $d10;

        d28 = $d12 / 100.0;

        $d14 = d0 * 0.0557;

        $d13 = d1 * -0.204;

        $d16 = $d14 + $d13;

        $d15 = d2 * 1.057;

        $d17 = $d16 + $d15;

        d29 = $d17 / 100.0;

        $b0 = d27 cmpl 0.0031308;

        if $b0 <= 0 goto label1;

        $d25 = staticinvoke <java.lang.Math: double pow(double,double)>(d27, 0.4166666666666667);

        $d26 = 1.055 * $d25;

        $d30 = $d26 - 0.055;

        goto label2;

     label1:
        $d30 = 12.92 * d27;

     label2:
        d31 = $d30;

        $b1 = d28 cmpl 0.0031308;

        if $b1 <= 0 goto label3;

        $d23 = staticinvoke <java.lang.Math: double pow(double,double)>(d28, 0.4166666666666667);

        $d24 = 1.055 * $d23;

        $d32 = $d24 - 0.055;

        goto label4;

     label3:
        $d32 = 12.92 * d28;

     label4:
        d33 = $d32;

        $b2 = d29 cmpl 0.0031308;

        if $b2 <= 0 goto label5;

        $d21 = staticinvoke <java.lang.Math: double pow(double,double)>(d29, 0.4166666666666667);

        $d22 = 1.055 * $d21;

        $d34 = $d22 - 0.055;

        goto label6;

     label5:
        $d34 = 12.92 * d29;

     label6:
        d35 = $d34;

        $d18 = d31 * 255.0;

        $l3 = staticinvoke <java.lang.Math: long round(double)>($d18);

        $i4 = (int) $l3;

        $i5 = staticinvoke <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>($i4, 0, 255);

        $d19 = d33 * 255.0;

        $l6 = staticinvoke <java.lang.Math: long round(double)>($d19);

        $i7 = (int) $l6;

        $i8 = staticinvoke <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>($i7, 0, 255);

        $d20 = d35 * 255.0;

        $l9 = staticinvoke <java.lang.Math: long round(double)>($d20);

        $i10 = (int) $l9;

        $i11 = staticinvoke <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>($i10, 0, 255);

        $i12 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i5, $i8, $i11);

        return $i12;
    }

    public static int LABToColor(double, double, double)
    {
        double d0, d1, d2, $d3, $d4, $d5;
        double[] r0;
        int $i0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r0 = staticinvoke <androidx.core.graphics.ColorUtils: double[] getTempDouble3Array()>();

        staticinvoke <androidx.core.graphics.ColorUtils: void LABToXYZ(double,double,double,double[])>(d0, d1, d2, r0);

        $d5 = r0[0];

        $d4 = r0[1];

        $d3 = r0[2];

        $i0 = staticinvoke <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)>($d5, $d4, $d3);

        return $i0;
    }

    public static double distanceEuclidean(double[], double[])
    {
        double[] r0, r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        $d1 = r0[0];

        $d0 = r1[0];

        $d2 = $d1 - $d0;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>($d2, 2.0);

        $d5 = r0[1];

        $d4 = r1[1];

        $d6 = $d5 - $d4;

        $d7 = staticinvoke <java.lang.Math: double pow(double,double)>($d6, 2.0);

        $d11 = $d3 + $d7;

        $d9 = r0[2];

        $d8 = r1[2];

        $d10 = $d9 - $d8;

        $d12 = staticinvoke <java.lang.Math: double pow(double,double)>($d10, 2.0);

        $d13 = $d11 + $d12;

        $d14 = staticinvoke <java.lang.Math: double sqrt(double)>($d13);

        return $d14;
    }

    private static float constrain(float, float, float)
    {
        float f0, f1, f2, $f3;
        byte $b0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $b0 = f0 cmpg f1;

        if $b0 >= 0 goto label1;

        $f3 = f1;

        goto label2;

     label1:
        $f3 = staticinvoke <java.lang.Math: float min(float,float)>(f0, f2);

     label2:
        return $f3;
    }

    private static int constrain(int, int, int)
    {
        int i0, i1, i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 >= i1 goto label1;

        $i3 = i1;

        goto label2;

     label1:
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i2);

     label2:
        return $i3;
    }

    private static double pivotXyzComponent(double)
    {
        double d0, $d1, $d2, $d3;
        byte $b0;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 0.008856;

        if $b0 <= 0 goto label1;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>(d0, 0.3333333333333333);

        goto label2;

     label1:
        $d1 = 903.3 * d0;

        $d2 = $d1 + 16.0;

        $d3 = $d2 / 116.0;

     label2:
        return $d3;
    }

    public static int blendARGB(int, int, float)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 = 1.0F - f0;

        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        $f6 = (float) $i2;

        $f7 = $f6 * f1;

        $i3 = staticinvoke <android.graphics.Color: int alpha(int)>(i1);

        $f8 = (float) $i3;

        $f9 = $f8 * f0;

        f2 = $f7 + $f9;

        $i4 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $f10 = (float) $i4;

        $f11 = $f10 * f1;

        $i5 = staticinvoke <android.graphics.Color: int red(int)>(i1);

        $f12 = (float) $i5;

        $f13 = $f12 * f0;

        f3 = $f11 + $f13;

        $i6 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $f14 = (float) $i6;

        $f15 = $f14 * f1;

        $i7 = staticinvoke <android.graphics.Color: int green(int)>(i1);

        $f16 = (float) $i7;

        $f17 = $f16 * f0;

        f4 = $f15 + $f17;

        $i8 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        $f18 = (float) $i8;

        $f19 = $f18 * f1;

        $i9 = staticinvoke <android.graphics.Color: int blue(int)>(i1);

        $f20 = (float) $i9;

        $f21 = $f20 * f0;

        f5 = $f19 + $f21;

        $i13 = (int) f2;

        $i12 = (int) f3;

        $i11 = (int) f4;

        $i10 = (int) f5;

        $i14 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>($i13, $i12, $i11, $i10);

        return $i14;
    }

    public static void blendHSL(float[], float[], float, float[])
    {
        float[] r0, r1, r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 := @parameter2: float;

        r2 := @parameter3: float[];

        $i0 = lengthof r2;

        if $i0 == 3 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("result must have a length of 3.");

        throw $r3;

     label1:
        f1 = 1.0F - f0;

        $f3 = r0[0];

        $f2 = r1[0];

        $f4 = staticinvoke <androidx.core.graphics.ColorUtils: float circularInterpolate(float,float,float)>($f3, $f2, f0);

        r2[0] = $f4;

        $f5 = r0[1];

        $f8 = $f5 * f1;

        $f6 = r1[1];

        $f7 = $f6 * f0;

        $f9 = $f8 + $f7;

        r2[1] = $f9;

        $f10 = r0[2];

        $f13 = $f10 * f1;

        $f11 = r1[2];

        $f12 = $f11 * f0;

        $f14 = $f13 + $f12;

        r2[2] = $f14;

        return;
    }

    public static void blendLAB(double[], double[], double, double[])
    {
        double[] r0, r1, r2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        d0 := @parameter2: double;

        r2 := @parameter3: double[];

        $i0 = lengthof r2;

        if $i0 == 3 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("outResult must have a length of 3.");

        throw $r3;

     label1:
        d1 = 1.0 - d0;

        $d2 = r0[0];

        $d5 = $d2 * d1;

        $d3 = r1[0];

        $d4 = $d3 * d0;

        $d6 = $d5 + $d4;

        r2[0] = $d6;

        $d7 = r0[1];

        $d10 = $d7 * d1;

        $d8 = r1[1];

        $d9 = $d8 * d0;

        $d11 = $d10 + $d9;

        r2[1] = $d11;

        $d12 = r0[2];

        $d15 = $d12 * d1;

        $d13 = r1[2];

        $d14 = $d13 * d0;

        $d16 = $d15 + $d14;

        r2[2] = $d16;

        return;
    }

    static float circularInterpolate(float, float, float)
    {
        float f0, $f1, $f2, f3, f4, $f5, $f6, $f7, $f8;
        byte $b0, $b1;

        f3 := @parameter0: float;

        f4 := @parameter1: float;

        f0 := @parameter2: float;

        $f1 = f4 - f3;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $b0 = $f2 cmpl 180.0F;

        if $b0 <= 0 goto label2;

        $b1 = f4 cmpl f3;

        if $b1 <= 0 goto label1;

        f3 = f3 + 360.0F;

        goto label2;

     label1:
        f4 = f4 + 360.0F;

     label2:
        $f5 = f4 - f3;

        $f6 = $f5 * f0;

        $f7 = f3 + $f6;

        $f8 = $f7 % 360.0F;

        return $f8;
    }

    private static double[] getTempDouble3Array()
    {
        java.lang.ThreadLocal $r0, $r2;
        java.lang.Object $r1;
        double[] r3;

        $r0 = <androidx.core.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (double[]) $r1;

        if r3 != null goto label1;

        r3 = newarray (double)[3];

        $r2 = <androidx.core.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY>;

        virtualinvoke $r2.<java.lang.ThreadLocal: void set(java.lang.Object)>(r3);

     label1:
        return r3;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <androidx.core.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY> = $r0;

        return;
    }

androidx.core.graphics.ColorUtils$Api26Impl
    private void <init>()
    {
        androidx.core.graphics.ColorUtils$Api26Impl r0;

        r0 := @this: androidx.core.graphics.ColorUtils$Api26Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.graphics.Color compositeColors(android.graphics.Color, android.graphics.Color)
    {
        android.graphics.Color r0, r1, r2, $r11, $r22;
        float[] r3, r4;
        int i0, $i1, i3;
        android.graphics.ColorSpace$Model $r5, $r6, $r15, $r18;
        boolean $z0, $z1;
        android.graphics.ColorSpace $r7, $r8, $r9, $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, f11, f12;
        byte $b2;
        java.lang.IllegalArgumentException $r12;
        java.lang.StringBuilder $r13, $r14, $r16, $r17, $r19, $r20;
        java.lang.String $r21;

        r0 := @parameter0: android.graphics.Color;

        r1 := @parameter1: android.graphics.Color;

        $r5 = virtualinvoke r0.<android.graphics.Color: android.graphics.ColorSpace$Model getModel()>();

        $r6 = virtualinvoke r1.<android.graphics.Color: android.graphics.ColorSpace$Model getModel()>();

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Color models must match (");

        $r15 = virtualinvoke r0.<android.graphics.Color: android.graphics.ColorSpace$Model getModel()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs. ");

        $r18 = virtualinvoke r1.<android.graphics.Color: android.graphics.ColorSpace$Model getModel()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r12;

     label1:
        $r7 = virtualinvoke r1.<android.graphics.Color: android.graphics.ColorSpace getColorSpace()>();

        $r8 = virtualinvoke r0.<android.graphics.Color: android.graphics.ColorSpace getColorSpace()>();

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z1 == 0 goto label2;

        $r22 = r0;

        goto label3;

     label2:
        $r9 = virtualinvoke r1.<android.graphics.Color: android.graphics.ColorSpace getColorSpace()>();

        $r22 = virtualinvoke r0.<android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)>($r9);

     label3:
        r2 = $r22;

        r3 = virtualinvoke r2.<android.graphics.Color: float[] getComponents()>();

        r4 = virtualinvoke r1.<android.graphics.Color: float[] getComponents()>();

        f11 = virtualinvoke r2.<android.graphics.Color: float alpha()>();

        $f0 = virtualinvoke r1.<android.graphics.Color: float alpha()>();

        $f1 = 1.0F - f11;

        f12 = $f0 * $f1;

        $i1 = virtualinvoke r1.<android.graphics.Color: int getComponentCount()>();

        i0 = $i1 - 1;

        $f2 = f11 + f12;

        r4[i0] = $f2;

        $f3 = r4[i0];

        $b2 = $f3 cmpl 0.0F;

        if $b2 <= 0 goto label4;

        $f9 = r4[i0];

        f11 = f11 / $f9;

        $f10 = r4[i0];

        f12 = f12 / $f10;

     label4:
        i3 = 0;

     label5:
        if i3 >= i0 goto label6;

        $f4 = r3[i3];

        $f7 = $f4 * f11;

        $f5 = r4[i3];

        $f6 = $f5 * f12;

        $f8 = $f7 + $f6;

        r4[i3] = $f8;

        i3 = i3 + 1;

        goto label5;

     label6:
        $r10 = virtualinvoke r1.<android.graphics.Color: android.graphics.ColorSpace getColorSpace()>();

        $r11 = staticinvoke <android.graphics.Color: android.graphics.Color valueOf(float[],android.graphics.ColorSpace)>(r4, $r10);

        return $r11;
    }

