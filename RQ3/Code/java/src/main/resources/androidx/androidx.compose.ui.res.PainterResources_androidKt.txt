androidx.compose.ui.res.PainterResources_androidKt
<androidx.compose.ui.res.PainterResources_androidKt: java.lang.String errorMessage>
    public static final androidx.compose.ui.graphics.painter.Painter painterResource(int, androidx.compose.runtime.Composer, int)
    {
        int i0, $i1, $i4, $i5, $i6, $i7;
        androidx.compose.runtime.Composer $r0;
        android.content.Context r1;
        boolean z0, $z4, $z5, $z6, $z7, $z8, $z9, z13, $z17, $z19;
        java.lang.Object r2, r4, $r7, $r10, $r16, r19, $r21, $r30;
        androidx.compose.ui.graphics.ImageBitmap r3, r31;
        androidx.compose.runtime.ProvidableCompositionLocal $r5;
        androidx.compose.runtime.Composer$Companion $r6, $r9;
        androidx.compose.ui.graphics.painter.BitmapPainter $r8;
        android.content.res.Resources$Theme $r11, r28;
        java.lang.CharSequence $r12, $r23;
        android.util.TypedValue $r13, $r22;
        androidx.compose.runtime.CompositionLocal r15;
        android.content.res.Resources r17;
        androidx.compose.ui.graphics.vector.ImageVector r24;
        androidx.compose.ui.graphics.vector.VectorPainter $r25;
        androidx.compose.ui.graphics.painter.Painter $r26, $r32;
        java.lang.Integer $r27;

        i0 := @parameter0: int;

        $r0 := @parameter1: androidx.compose.runtime.Composer;

        $i1 := @parameter2: int;

        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(473971343);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r0, "C(painterResource)57@2406L7,58@2428L11,59@2456L25:PainterResources.android.kt#ccshc7");

        $z4 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z4 == 0 goto label01;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(473971343, $i1, -1, "androidx.compose.ui.res.painterResource (PainterResources.android.kt:56)");

     label01:
        $r5 = staticinvoke <androidx.compose.ui.platform.AndroidCompositionLocals_androidKt: androidx.compose.runtime.ProvidableCompositionLocal getLocalContext()>();

        r15 = (androidx.compose.runtime.CompositionLocal) $r5;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String)>($r0, 2023513938, "C:CompositionLocal.kt#9igjgp");

        $r16 = interfaceinvoke $r0.<androidx.compose.runtime.Composer: java.lang.Object consume(androidx.compose.runtime.CompositionLocal)>(r15);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerEnd(androidx.compose.runtime.Composer)>($r0);

        r1 = (android.content.Context) $r16;

        r17 = staticinvoke <androidx.compose.ui.res.Resources_androidKt: android.content.res.Resources resources(androidx.compose.runtime.Composer,int)>($r0, 0);

        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-492369756);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r0, "C(remember):Composables.kt#9igjgp");

        z13 = 0;

        r19 = interfaceinvoke $r0.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        $r6 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r19 != $r7 goto label02;

        $r13 = new android.util.TypedValue;

        specialinvoke $r13.<android.util.TypedValue: void <init>()>();

        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>($r13);

        $r21 = $r13;

        goto label03;

     label02:
        $r21 = r19;

     label03:
        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r22 = (android.util.TypedValue) $r21;

        virtualinvoke r17.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, $r22, 1);

        $r23 = $r22.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r23 == null goto label05;

        $r12 = (java.lang.CharSequence) ".xml";

        $z9 = staticinvoke <kotlin.text.StringsKt: boolean endsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)>($r23, $r12, 0, 2, null);

        if $z9 != 1 goto label04;

        $z17 = 1;

        goto label06;

     label04:
        $z17 = 0;

        goto label06;

     label05:
        $z17 = 0;

     label06:
        if $z17 == 0 goto label07;

        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-738265327);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r0, "64@2687L72,65@2768L34");

        $r11 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "context.theme");

        $i7 = $r22.<android.util.TypedValue: int changingConfigurations>;

        $i4 = $i1 << 6;

        $i5 = 896 & $i4;

        $i6 = 72 | $i5;

        r24 = staticinvoke <androidx.compose.ui.res.PainterResources_androidKt: androidx.compose.ui.graphics.vector.ImageVector loadVectorResource(android.content.res.Resources$Theme,android.content.res.Resources,int,int,androidx.compose.runtime.Composer,int)>($r11, r17, i0, $i7, $r0, $i6);

        $r25 = staticinvoke <androidx.compose.ui.graphics.vector.VectorPainterKt: androidx.compose.ui.graphics.vector.VectorPainter rememberVectorPainter(androidx.compose.ui.graphics.vector.ImageVector,androidx.compose.runtime.Composer,int)>(r24, $r0, 0);

        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r26 = (androidx.compose.ui.graphics.painter.Painter) $r25;

        goto label11;

     label07:
        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-738265172);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r0, "68@2888L90");

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r28 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1618982084);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r0, "C(remember)P(1,2,3):Composables.kt#9igjgp");

        $z5 = interfaceinvoke $r0.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>($r23);

        $z6 = interfaceinvoke $r0.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>($r27);

        $z7 = $z5 | $z6;

        $z8 = interfaceinvoke $r0.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r28);

        z0 = $z7 | $z8;

        r2 = interfaceinvoke $r0.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z0 != 0 goto label08;

        $r9 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r10 = virtualinvoke $r9.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r2 != $r10 goto label09;

     label08:
        r3 = staticinvoke <androidx.compose.ui.res.PainterResources_androidKt: androidx.compose.ui.graphics.ImageBitmap access$loadImageBitmapResource(android.content.res.Resources,int)>(r17, i0);

        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r3);

        $r30 = r3;

        goto label10;

     label09:
        $r30 = r2;

     label10:
        r4 = $r30;

        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        r31 = (androidx.compose.ui.graphics.ImageBitmap) r4;

        $r8 = new androidx.compose.ui.graphics.painter.BitmapPainter;

        specialinvoke $r8.<androidx.compose.ui.graphics.painter.BitmapPainter: void <init>(androidx.compose.ui.graphics.ImageBitmap,long,long,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r31, 0L, 0L, 6, null);

        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r26 = (androidx.compose.ui.graphics.painter.Painter) $r8;

     label11:
        $r32 = $r26;

        $z19 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z19 == 0 goto label12;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label12:
        interfaceinvoke $r0.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return $r32;
    }

    private static final androidx.compose.ui.graphics.vector.ImageVector loadVectorResource(android.content.res.Resources$Theme, android.content.res.Resources, int, int, androidx.compose.runtime.Composer, int)
    {
        android.content.res.Resources$Theme r0;
        android.content.res.Resources r1;
        int i0, i1, $i2;
        androidx.compose.runtime.Composer $r2;
        androidx.compose.ui.res.ImageVectorCache r3;
        java.lang.Object r4;
        boolean $z0, $z1, $z2;
        androidx.compose.runtime.ProvidableCompositionLocal $r5;
        androidx.compose.ui.res.ImageVectorCache$Key $r6, r13;
        android.content.res.XmlResourceParser $r7;
        org.xmlpull.v1.XmlPullParser $r8, $r9;
        java.lang.String $r10;
        java.lang.IllegalArgumentException $r11;
        androidx.compose.runtime.CompositionLocal r12;
        androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry $r14;
        androidx.compose.ui.graphics.vector.ImageVector $r16;

        r0 := @parameter0: android.content.res.Resources$Theme;

        r1 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 := @parameter4: androidx.compose.runtime.Composer;

        $i2 := @parameter5: int;

        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(21855625);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r2, "C(loadVectorResource)P(3,2,1)87@3464L7:PainterResources.android.kt#ccshc7");

        $z0 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z0 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(21855625, $i2, -1, "androidx.compose.ui.res.loadVectorResource (PainterResources.android.kt:81)");

     label1:
        $r5 = staticinvoke <androidx.compose.ui.platform.AndroidCompositionLocals_androidKt: androidx.compose.runtime.ProvidableCompositionLocal getLocalImageVectorCache()>();

        r12 = (androidx.compose.runtime.CompositionLocal) $r5;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String)>($r2, 2023513938, "C:CompositionLocal.kt#9igjgp");

        r4 = interfaceinvoke $r2.<androidx.compose.runtime.Composer: java.lang.Object consume(androidx.compose.runtime.CompositionLocal)>(r12);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerEnd(androidx.compose.runtime.Composer)>($r2);

        r3 = (androidx.compose.ui.res.ImageVectorCache) r4;

        $r6 = new androidx.compose.ui.res.ImageVectorCache$Key;

        specialinvoke $r6.<androidx.compose.ui.res.ImageVectorCache$Key: void <init>(android.content.res.Resources$Theme,int)>(r0, i0);

        r13 = $r6;

        $r14 = virtualinvoke r3.<androidx.compose.ui.res.ImageVectorCache: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry get(androidx.compose.ui.res.ImageVectorCache$Key)>(r13);

        if $r14 != null goto label3;

        $r7 = virtualinvoke r1.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "res.getXml(id)");

        $r8 = (org.xmlpull.v1.XmlPullParser) $r7;

        $r9 = staticinvoke <androidx.compose.ui.graphics.vector.compat.XmlVectorParser_androidKt: org.xmlpull.v1.XmlPullParser seekToStartTag(org.xmlpull.v1.XmlPullParser)>($r8);

        $r10 = interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r10, "vector");

        if $z2 != 0 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only VectorDrawables and rasterized asset types are supported ex. PNG, JPG");

        throw $r11;

     label2:
        $r14 = staticinvoke <androidx.compose.ui.res.VectorResources_androidKt: androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry loadVectorResourceInner(android.content.res.Resources$Theme,android.content.res.Resources,android.content.res.XmlResourceParser,int)>(r0, r1, $r7, i1);

        virtualinvoke r3.<androidx.compose.ui.res.ImageVectorCache: void set(androidx.compose.ui.res.ImageVectorCache$Key,androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry)>(r13, $r14);

     label3:
        $r16 = virtualinvoke $r14.<androidx.compose.ui.res.ImageVectorCache$ImageVectorEntry: androidx.compose.ui.graphics.vector.ImageVector getImageVector()>();

        $z1 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z1 == 0 goto label4;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label4:
        interfaceinvoke $r2.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return $r16;
    }

    private static final androidx.compose.ui.graphics.ImageBitmap loadImageBitmapResource(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0;
        java.lang.Throwable r1, $r4;
        androidx.compose.ui.graphics.ImageBitmap$Companion $r2;
        androidx.compose.ui.graphics.ImageBitmap $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

     label1:
        $r2 = <androidx.compose.ui.graphics.ImageBitmap: androidx.compose.ui.graphics.ImageBitmap$Companion Companion>;

        $r3 = staticinvoke <androidx.compose.ui.res.ImageResources_androidKt: androidx.compose.ui.graphics.ImageBitmap imageResource(androidx.compose.ui.graphics.ImageBitmap$Companion,android.content.res.Resources,int)>($r2, r0, i0);

        return $r3;

     label2:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only VectorDrawables and rasterized asset types are supported ex. PNG, JPG");

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public static final androidx.compose.ui.graphics.ImageBitmap access$loadImageBitmapResource(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0;
        androidx.compose.ui.graphics.ImageBitmap $r1;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        $r1 = staticinvoke <androidx.compose.ui.res.PainterResources_androidKt: androidx.compose.ui.graphics.ImageBitmap loadImageBitmapResource(android.content.res.Resources,int)>(r0, i0);

        return $r1;
    }

