androidx.benchmark.junit4.BenchmarkRule
<androidx.benchmark.junit4.BenchmarkRule: androidx.benchmark.junit4.BenchmarkRule$Companion Companion>
<androidx.benchmark.junit4.BenchmarkRule: boolean enableReport>
<androidx.benchmark.junit4.BenchmarkRule: androidx.benchmark.BenchmarkState internalState>
<androidx.benchmark.junit4.BenchmarkRule: boolean applied>
<androidx.benchmark.junit4.BenchmarkRule: androidx.benchmark.junit4.BenchmarkRule$Scope scope>
<androidx.benchmark.junit4.BenchmarkRule: java.lang.String TAG>
    public void <init>(boolean)
    {
        androidx.benchmark.junit4.BenchmarkRule r0;
        boolean z0;
        androidx.benchmark.BenchmarkState $r1;
        androidx.benchmark.junit4.BenchmarkRule$Scope $r2;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.benchmark.junit4.BenchmarkRule: boolean enableReport> = z0;

        $r1 = new androidx.benchmark.BenchmarkState;

        specialinvoke $r1.<androidx.benchmark.BenchmarkState: void <init>()>();

        r0.<androidx.benchmark.junit4.BenchmarkRule: androidx.benchmark.BenchmarkState internalState> = $r1;

        $r2 = new androidx.benchmark.junit4.BenchmarkRule$Scope;

        specialinvoke $r2.<androidx.benchmark.junit4.BenchmarkRule$Scope: void <init>(androidx.benchmark.junit4.BenchmarkRule)>(r0);

        r0.<androidx.benchmark.junit4.BenchmarkRule: androidx.benchmark.junit4.BenchmarkRule$Scope scope> = $r2;

        return;
    }

    public void <init>()
    {
        androidx.benchmark.junit4.BenchmarkRule r0;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule;

        specialinvoke r0.<androidx.benchmark.junit4.BenchmarkRule: void <init>(boolean)>(1);

        return;
    }

    public final androidx.benchmark.BenchmarkState getInternalState$benchmark_junit4_release()
    {
        androidx.benchmark.junit4.BenchmarkRule r0;
        androidx.benchmark.BenchmarkState $r1;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule;

        $r1 = r0.<androidx.benchmark.junit4.BenchmarkRule: androidx.benchmark.BenchmarkState internalState>;

        return $r1;
    }

    public final androidx.benchmark.BenchmarkState getState()
    {
        androidx.benchmark.junit4.BenchmarkRule r0;
        boolean $z0;
        androidx.benchmark.BenchmarkState $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule;

        $z0 = r0.<androidx.benchmark.junit4.BenchmarkRule: boolean applied>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot get state before BenchmarkRule is applied to a test. Check that your BenchmarkRule is annotated correctly (@Rule in Java, @get:Rule in Kotlin).");

        throw $r2;

     label1:
        $r1 = r0.<androidx.benchmark.junit4.BenchmarkRule: androidx.benchmark.BenchmarkState internalState>;

        return $r1;
    }

    public final boolean getApplied$benchmark_junit4_release()
    {
        androidx.benchmark.junit4.BenchmarkRule r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule;

        $z0 = r0.<androidx.benchmark.junit4.BenchmarkRule: boolean applied>;

        return $z0;
    }

    public final void setApplied$benchmark_junit4_release(boolean)
    {
        androidx.benchmark.junit4.BenchmarkRule r0;
        boolean z0;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule;

        z0 := @parameter0: boolean;

        r0.<androidx.benchmark.junit4.BenchmarkRule: boolean applied> = z0;

        return;
    }

    public final androidx.benchmark.junit4.BenchmarkRule$Scope getScope()
    {
        androidx.benchmark.junit4.BenchmarkRule r0;
        androidx.benchmark.junit4.BenchmarkRule$Scope $r1;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule;

        $r1 = r0.<androidx.benchmark.junit4.BenchmarkRule: androidx.benchmark.junit4.BenchmarkRule$Scope scope>;

        return $r1;
    }

    public org.junit.runners.model.Statement apply(org.junit.runners.model.Statement, org.junit.runner.Description)
    {
        androidx.benchmark.junit4.BenchmarkRule r0;
        org.junit.runners.model.Statement r1, r3;
        org.junit.runner.Description r2;
        java.lang.String[] r4;
        androidx.test.rule.GrantPermissionRule $r5;
        org.junit.rules.TestRule $r6, $r8;
        org.junit.rules.RuleChain $r7, $r9;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: org.junit.runner.Description;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "base");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "description");

        r4 = newarray (java.lang.String)[1];

        r4[0] = "android.permission.WRITE_EXTERNAL_STORAGE";

        $r5 = staticinvoke <androidx.test.rule.GrantPermissionRule: androidx.test.rule.GrantPermissionRule grant(java.lang.String[])>(r4);

        $r6 = (org.junit.rules.TestRule) $r5;

        $r7 = staticinvoke <org.junit.rules.RuleChain: org.junit.rules.RuleChain outerRule(org.junit.rules.TestRule)>($r6);

        $r8 = dynamicinvoke "apply" <org.junit.rules.TestRule (androidx.benchmark.junit4.BenchmarkRule)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: org.junit.runners.model.Statement __METHODTYPE__(org.junit.runners.model.Statement,org.junit.runner.Description), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.benchmark.junit4.BenchmarkRule: org.junit.runners.model.Statement applyInternal(org.junit.runners.model.Statement,org.junit.runner.Description)>, methodtype: org.junit.runners.model.Statement __METHODTYPE__(org.junit.runners.model.Statement,org.junit.runner.Description));

        $r9 = virtualinvoke $r7.<org.junit.rules.RuleChain: org.junit.rules.RuleChain around(org.junit.rules.TestRule)>($r8);

        r3 = virtualinvoke $r9.<org.junit.rules.RuleChain: org.junit.runners.model.Statement apply(org.junit.runners.model.Statement,org.junit.runner.Description)>(r1, r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "outerRule(GrantPermissio\u2026.apply(base, description)");

        return r3;
    }

    private final org.junit.runners.model.Statement applyInternal(org.junit.runners.model.Statement, org.junit.runner.Description)
    {
        androidx.benchmark.junit4.BenchmarkRule r0;
        org.junit.runners.model.Statement r1, $r4;
        org.junit.runner.Description r2;
        androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1 $r3;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: org.junit.runner.Description;

        $r3 = new androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1;

        specialinvoke $r3.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: void <init>(androidx.benchmark.junit4.BenchmarkRule,org.junit.runner.Description,org.junit.runners.model.Statement)>(r0, r2, r1);

        $r4 = (org.junit.runners.model.Statement) $r3;

        return $r4;
    }

    public static final boolean access$getEnableReport$p(androidx.benchmark.junit4.BenchmarkRule)
    {
        androidx.benchmark.junit4.BenchmarkRule $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.benchmark.junit4.BenchmarkRule;

        $z0 = $r0.<androidx.benchmark.junit4.BenchmarkRule: boolean enableReport>;

        return $z0;
    }

    static void <clinit>()
    {
        androidx.benchmark.junit4.BenchmarkRule$Companion $r0;

        $r0 = new androidx.benchmark.junit4.BenchmarkRule$Companion;

        specialinvoke $r0.<androidx.benchmark.junit4.BenchmarkRule$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.benchmark.junit4.BenchmarkRule: androidx.benchmark.junit4.BenchmarkRule$Companion Companion> = $r0;

        return;
    }

androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1
<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: androidx.benchmark.junit4.BenchmarkRule this$0>
<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: org.junit.runner.Description $description$inlined>
<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: org.junit.runners.model.Statement $base$inlined>
    public void <init>(androidx.benchmark.junit4.BenchmarkRule, org.junit.runner.Description, org.junit.runners.model.Statement)
    {
        androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1 r0;
        androidx.benchmark.junit4.BenchmarkRule r1;
        org.junit.runner.Description r2;
        org.junit.runners.model.Statement r3;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1;

        r1 := @parameter0: androidx.benchmark.junit4.BenchmarkRule;

        r2 := @parameter1: org.junit.runner.Description;

        r3 := @parameter2: org.junit.runners.model.Statement;

        r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: androidx.benchmark.junit4.BenchmarkRule this$0> = r1;

        r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: org.junit.runner.Description $description$inlined> = r2;

        r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: org.junit.runners.model.Statement $base$inlined> = r3;

        specialinvoke r0.<org.junit.runners.model.Statement: void <init>()>();

        return;
    }

    public void evaluate()
    {
        androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1 r0;
        java.lang.String r1, $r11, $r16, $r23, $r34, $r37, r38, r39, r40, r41, r42, r43, r44, $r48, r52, r63, $r64, r67, r69, r70, r71;
        androidx.benchmark.junit4.BenchmarkRule $r3, $r25, $r53, $r68;
        androidx.benchmark.Arguments $r4;
        java.util.Set $r5;
        androidx.benchmark.Arguments$RuleType $r6;
        boolean $z2, $z3, $z4, $z5;
        org.junit.runner.Description $r7, $r10, $r27, $r28, $r46, $r60;
        java.lang.StringBuilder $r8, $r9, $r12, $r13, $r14, $r15, $r30, $r31, $r32, $r33, $r45, $r49, $r50, $r51;
        java.io.File $r17, r65;
        java.lang.Object $r18;
        perfetto.protos.Trace $r19;
        byte[] $r20;
        android.app.Instrumentation $r21;
        android.content.Context $r22;
        perfetto.protos.UiState $r24;
        androidx.benchmark.BenchmarkState $r26, $r54;
        java.lang.Class $r29, $r47;
        int $i1;
        java.util.Locale $r35;
        java.lang.Throwable $r36, r66;
        kotlin.jvm.internal.Ref$ObjectRef $r55, r56;
        androidx.benchmark.perfetto.PerfettoCaptureWrapper $r57;
        java.util.List $r58;
        androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1 $r59;
        org.junit.runners.model.Statement $r61;
        kotlin.jvm.functions.Function0 $r62;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1;

        $r3 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: androidx.benchmark.junit4.BenchmarkRule this$0>;

        virtualinvoke $r3.<androidx.benchmark.junit4.BenchmarkRule: void setApplied$benchmark_junit4_release(boolean)>(1);

        $r4 = <androidx.benchmark.Arguments: androidx.benchmark.Arguments INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.benchmark.Arguments: java.util.Set getEnabledRules()>();

        $r6 = <androidx.benchmark.Arguments$RuleType: androidx.benchmark.Arguments$RuleType Microbenchmark>;

        $z2 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        staticinvoke <org.junit.Assume: void assumeTrue(boolean)>($z2);

        $r7 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: org.junit.runner.Description $description$inlined>;

        r38 = virtualinvoke $r7.<org.junit.runner.Description: java.lang.String getMethodName()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-- Running ");

        $r10 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: org.junit.runner.Description $description$inlined>;

        $r11 = virtualinvoke $r10.<org.junit.runner.Description: java.lang.String getClassName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Benchmark", $r16);

        r39 = r38;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r39, "invokeMethodName");

        $z3 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>(r39, "test", 0, 2, null);

        if $z3 == 0 goto label03;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The test name ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is too short");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke r38.<java.lang.String: int length()>();

        if $i1 <= 5 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r34, $z4);

        r40 = r38;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r40, "invokeMethodName");

        r41 = virtualinvoke r40.<java.lang.String: java.lang.String substring(int,int)>(4, 5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r41, "this as java.lang.String\u2026ing(startIndex, endIndex)");

        $r35 = <java.util.Locale: java.util.Locale ROOT>;

        r42 = virtualinvoke r41.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r35);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r42, "this as java.lang.String).toLowerCase(Locale.ROOT)");

        r43 = r38;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r43, "invokeMethodName");

        r44 = virtualinvoke r43.<java.lang.String: java.lang.String substring(int)>(5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r44, "this as java.lang.String).substring(startIndex)");

        r38 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>(r42, r44);

     label03:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: org.junit.runner.Description $description$inlined>;

        $r47 = virtualinvoke $r46.<org.junit.runner.Description: java.lang.Class getTestClass()>();

        $r48 = virtualinvoke $r47.<java.lang.Class: java.lang.String getSimpleName()>();

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        $r53 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: androidx.benchmark.junit4.BenchmarkRule this$0>;

        $r54 = virtualinvoke $r53.<androidx.benchmark.junit4.BenchmarkRule: androidx.benchmark.BenchmarkState getInternalState$benchmark_junit4_release()>();

        virtualinvoke $r54.<androidx.benchmark.BenchmarkState: void setTraceUniqueName(java.lang.String)>(r52);

        $r55 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r55.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r56 = $r55;

        $r57 = new androidx.benchmark.perfetto.PerfettoCaptureWrapper;

        specialinvoke $r57.<androidx.benchmark.perfetto.PerfettoCaptureWrapper: void <init>()>();

        $r58 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        $r59 = new androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1;

        $r60 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: org.junit.runner.Description $description$inlined>;

        $r61 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: org.junit.runners.model.Statement $base$inlined>;

        specialinvoke $r59.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1: void <init>(org.junit.runner.Description,kotlin.jvm.internal.Ref$ObjectRef,org.junit.runners.model.Statement)>($r60, r56, $r61);

        $r62 = (kotlin.jvm.functions.Function0) $r59;

        r63 = staticinvoke <androidx.benchmark.perfetto.PerfettoCaptureWrapper: java.lang.String record$default(androidx.benchmark.perfetto.PerfettoCaptureWrapper,java.lang.String,java.util.List,java.lang.Integer,kotlin.jvm.functions.Function0,int,java.lang.Object)>($r57, r52, $r58, null, $r62, 4, null);

        if r63 != null goto label04;

        $r64 = null;

        goto label09;

     label04:
        r1 = r63;

     label05:
        $r17 = new java.io.File;

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>(r1);

        r65 = $r17;

        $r18 = r56.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r18);

        $r19 = (perfetto.protos.Trace) $r18;

        $r20 = virtualinvoke $r19.<perfetto.protos.Trace: byte[] encode()>();

        staticinvoke <kotlin.io.FilesKt: void appendBytes(java.io.File,byte[])>(r65, $r20);

        $r21 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        $r22 = virtualinvoke $r21.<android.app.Instrumentation: android.content.Context getContext()>();

        $r23 = virtualinvoke $r22.<android.content.Context: java.lang.String getPackageName()>();

        $r24 = staticinvoke <androidx.benchmark.perfetto.UiStateKt: perfetto.protos.UiState UiState(java.lang.Long,java.lang.Long,java.lang.String)>(null, null, $r23);

        staticinvoke <androidx.benchmark.perfetto.UiStateKt: void appendUiState(java.io.File,perfetto.protos.UiState)>(r65, $r24);

     label06:
        goto label08;

     label07:
        $r36 := @caughtexception;

        r66 = $r36;

        $r37 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Unable to add additional detail to captured trace ", r1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Benchmark", $r37);

     label08:
        $r64 = r1;

     label09:
        r67 = $r64;

        $r68 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: androidx.benchmark.junit4.BenchmarkRule this$0>;

        $z5 = staticinvoke <androidx.benchmark.junit4.BenchmarkRule: boolean access$getEnableReport$p(androidx.benchmark.junit4.BenchmarkRule)>($r68);

        if $z5 == 0 goto label10;

        $r25 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: androidx.benchmark.junit4.BenchmarkRule this$0>;

        $r26 = virtualinvoke $r25.<androidx.benchmark.junit4.BenchmarkRule: androidx.benchmark.BenchmarkState getInternalState$benchmark_junit4_release()>();

        $r27 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: org.junit.runner.Description $description$inlined>;

        r69 = virtualinvoke $r27.<org.junit.runner.Description: java.lang.String getClassName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r69, "description.className");

        $r28 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$$inlined$Statement$1: org.junit.runner.Description $description$inlined>;

        $r29 = virtualinvoke $r28.<org.junit.runner.Description: java.lang.Class getTestClass()>();

        r70 = virtualinvoke $r29.<java.lang.Class: java.lang.String getSimpleName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r70, "description.testClass.simpleName");

        r71 = r38;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r71, "invokeMethodName");

        virtualinvoke $r26.<androidx.benchmark.BenchmarkState: void report(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r69, r70, r71, r67);

     label10:
        return;

        catch java.io.FileNotFoundException from label05 to label06 with label07;
    }

androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1
<androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1: org.junit.runner.Description $description>
<androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1: kotlin.jvm.internal.Ref$ObjectRef $userspaceTrace>
<androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1: org.junit.runners.model.Statement $base>
    void <init>(org.junit.runner.Description, kotlin.jvm.internal.Ref$ObjectRef, org.junit.runners.model.Statement)
    {
        androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1 r0;
        org.junit.runner.Description $r1;
        kotlin.jvm.internal.Ref$ObjectRef $r2;
        org.junit.runners.model.Statement $r3;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1;

        $r1 := @parameter0: org.junit.runner.Description;

        $r2 := @parameter1: kotlin.jvm.internal.Ref$ObjectRef;

        $r3 := @parameter2: org.junit.runners.model.Statement;

        r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1: org.junit.runner.Description $description> = $r1;

        r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1: kotlin.jvm.internal.Ref$ObjectRef $userspaceTrace> = $r2;

        r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1: org.junit.runners.model.Statement $base> = $r3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1 r0;
        org.junit.runners.model.Statement r1;
        androidx.benchmark.UserspaceTracing $r2, $r5;
        org.junit.runner.Description $r4;
        kotlin.jvm.internal.Ref$ObjectRef $r6;
        perfetto.protos.Trace $r7;
        java.lang.Throwable $r8, r12;
        java.lang.String r9, r10;
        kotlin.Unit r11;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1;

        $r2 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        virtualinvoke $r2.<androidx.benchmark.UserspaceTracing: perfetto.protos.Trace commitToTrace()>();

        $r4 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1: org.junit.runner.Description $description>;

        r9 = virtualinvoke $r4.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r9, "description.displayName");

        r10 = r9;

        r1 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1: org.junit.runners.model.Statement $base>;

     label1:
        staticinvoke <androidx.tracing.Trace: void beginSection(java.lang.String)>(r10);

        virtualinvoke r1.<org.junit.runners.model.Statement: void evaluate()>();

        r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        staticinvoke <androidx.tracing.Trace: void endSection()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r12 = $r8;

     label4:
        staticinvoke <androidx.tracing.Trace: void endSection()>();

        throw r12;

     label5:
        $r6 = r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1: kotlin.jvm.internal.Ref$ObjectRef $userspaceTrace>;

        $r5 = <androidx.benchmark.UserspaceTracing: androidx.benchmark.UserspaceTracing INSTANCE>;

        $r7 = virtualinvoke $r5.<androidx.benchmark.UserspaceTracing: perfetto.protos.Trace commitToTrace()>();

        $r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r7;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1;

        virtualinvoke r0.<androidx.benchmark.junit4.BenchmarkRule$applyInternal$1$tracePath$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.benchmark.junit4.BenchmarkRule$Companion
    private void <init>()
    {
        androidx.benchmark.junit4.BenchmarkRule$Companion r0;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.benchmark.junit4.BenchmarkRule$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.benchmark.junit4.BenchmarkRule$Companion: void <init>()>();

        return;
    }

androidx.benchmark.junit4.BenchmarkRule$Scope
<androidx.benchmark.junit4.BenchmarkRule$Scope: androidx.benchmark.junit4.BenchmarkRule this$0>
    public void <init>(androidx.benchmark.junit4.BenchmarkRule)
    {
        androidx.benchmark.junit4.BenchmarkRule$Scope r0;
        androidx.benchmark.junit4.BenchmarkRule r1;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule$Scope;

        r1 := @parameter0: androidx.benchmark.junit4.BenchmarkRule;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        r0.<androidx.benchmark.junit4.BenchmarkRule$Scope: androidx.benchmark.junit4.BenchmarkRule this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object runWithTimingDisabled(kotlin.jvm.functions.Function0)
    {
        androidx.benchmark.junit4.BenchmarkRule$Scope r0;
        kotlin.jvm.functions.Function0 r1;
        java.lang.Object r2, r3;
        java.lang.Throwable r4, $r7;
        androidx.benchmark.BenchmarkState $r5, $r6;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule$Scope;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r5 = virtualinvoke r0.<androidx.benchmark.junit4.BenchmarkRule$Scope: androidx.benchmark.BenchmarkState getOuterState()>();

        virtualinvoke $r5.<androidx.benchmark.BenchmarkState: void pauseTiming()>();

     label1:
        staticinvoke <androidx.tracing.Trace: void beginSection(java.lang.String)>("runWithTimingDisabled");

        r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <androidx.tracing.Trace: void endSection()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        staticinvoke <androidx.tracing.Trace: void endSection()>();

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r4;

     label5:
        r2 = r3;

        $r6 = virtualinvoke r0.<androidx.benchmark.junit4.BenchmarkRule$Scope: androidx.benchmark.BenchmarkState getOuterState()>();

        virtualinvoke $r6.<androidx.benchmark.BenchmarkState: void resumeTiming()>();

        return r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final androidx.benchmark.BenchmarkState getOuterState()
    {
        androidx.benchmark.junit4.BenchmarkRule$Scope r0;
        androidx.benchmark.junit4.BenchmarkRule $r1;
        androidx.benchmark.BenchmarkState $r2;

        r0 := @this: androidx.benchmark.junit4.BenchmarkRule$Scope;

        $r1 = r0.<androidx.benchmark.junit4.BenchmarkRule$Scope: androidx.benchmark.junit4.BenchmarkRule this$0>;

        $r2 = virtualinvoke $r1.<androidx.benchmark.junit4.BenchmarkRule: androidx.benchmark.BenchmarkState getState()>();

        return $r2;
    }

