androidx.room.compiler.processing.javac.JavacMethodElement
<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy name$delegate>
<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy typeParameters$delegate>
<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy parameters$delegate>
<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy kotlinMetadata$delegate>
<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy executableType$delegate>
<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy returnType$delegate>
<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy kotlinDefaultImplClass$delegate>
    public void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, javax.lang.model.element.ExecutableElement)
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        javax.lang.model.element.ExecutableElement r2;
        javax.lang.model.element.ElementKind $r3, $r4;
        androidx.room.compiler.processing.javac.JavacMethodElement$name$2 $r5;
        kotlin.jvm.functions.Function0 $r6, $r9, $r12, $r15, $r18, $r21, $r24;
        kotlin.Lazy $r7, $r10, $r13, $r16, $r19, $r22, $r25;
        androidx.room.compiler.processing.javac.JavacMethodElement$typeParameters$2 $r8;
        androidx.room.compiler.processing.javac.JavacMethodElement$parameters$2 $r11;
        androidx.room.compiler.processing.javac.JavacMethodElement$kotlinMetadata$2 $r14;
        androidx.room.compiler.processing.javac.JavacMethodElement$executableType$2 $r17;
        androidx.room.compiler.processing.javac.JavacMethodElement$returnType$2 $r20;
        androidx.room.compiler.processing.javac.JavacMethodElement$kotlinDefaultImplClass$2 $r23;
        java.lang.StringBuilder $r26, $r27, $r28;
        java.lang.IllegalStateException $r29;
        java.lang.String $r30, $r31;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: javax.lang.model.element.ExecutableElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "element");

        specialinvoke r0.<androidx.room.compiler.processing.javac.JavacExecutableElement: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.element.ExecutableElement)>(r1, r2);

        $r3 = interfaceinvoke r2.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.ElementKind getKind()>();

        $r4 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind METHOD>;

        if $r3 != $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method element is constructed with invalid type: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = new java.lang.IllegalStateException;

        $r30 = virtualinvoke $r31.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r30);

        throw $r29;

     label3:
        $r5 = new androidx.room.compiler.processing.javac.JavacMethodElement$name$2;

        specialinvoke $r5.<androidx.room.compiler.processing.javac.JavacMethodElement$name$2: void <init>(androidx.room.compiler.processing.javac.JavacMethodElement)>(r0);

        $r6 = (kotlin.jvm.functions.Function0) $r5;

        $r7 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r6);

        r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy name$delegate> = $r7;

        $r8 = new androidx.room.compiler.processing.javac.JavacMethodElement$typeParameters$2;

        specialinvoke $r8.<androidx.room.compiler.processing.javac.JavacMethodElement$typeParameters$2: void <init>(javax.lang.model.element.ExecutableElement,androidx.room.compiler.processing.javac.JavacMethodElement,androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r2, r0, r1);

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        $r10 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r9);

        r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy typeParameters$delegate> = $r10;

        $r11 = new androidx.room.compiler.processing.javac.JavacMethodElement$parameters$2;

        specialinvoke $r11.<androidx.room.compiler.processing.javac.JavacMethodElement$parameters$2: void <init>(javax.lang.model.element.ExecutableElement,androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacMethodElement)>(r2, r1, r0);

        $r12 = (kotlin.jvm.functions.Function0) $r11;

        $r13 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r12);

        r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy parameters$delegate> = $r13;

        $r14 = new androidx.room.compiler.processing.javac.JavacMethodElement$kotlinMetadata$2;

        specialinvoke $r14.<androidx.room.compiler.processing.javac.JavacMethodElement$kotlinMetadata$2: void <init>(androidx.room.compiler.processing.javac.JavacMethodElement,javax.lang.model.element.ExecutableElement)>(r0, r2);

        $r15 = (kotlin.jvm.functions.Function0) $r14;

        $r16 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r15);

        r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy kotlinMetadata$delegate> = $r16;

        $r17 = new androidx.room.compiler.processing.javac.JavacMethodElement$executableType$2;

        specialinvoke $r17.<androidx.room.compiler.processing.javac.JavacMethodElement$executableType$2: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacMethodElement,javax.lang.model.element.ExecutableElement)>(r1, r0, r2);

        $r18 = (kotlin.jvm.functions.Function0) $r17;

        $r19 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r18);

        r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy executableType$delegate> = $r19;

        $r20 = new androidx.room.compiler.processing.javac.JavacMethodElement$returnType$2;

        specialinvoke $r20.<androidx.room.compiler.processing.javac.JavacMethodElement$returnType$2: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.element.ExecutableElement,androidx.room.compiler.processing.javac.JavacMethodElement)>(r1, r2, r0);

        $r21 = (kotlin.jvm.functions.Function0) $r20;

        $r22 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r21);

        r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy returnType$delegate> = $r22;

        $r23 = new androidx.room.compiler.processing.javac.JavacMethodElement$kotlinDefaultImplClass$2;

        specialinvoke $r23.<androidx.room.compiler.processing.javac.JavacMethodElement$kotlinDefaultImplClass$2: void <init>(javax.lang.model.element.ExecutableElement,androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r2, r1);

        $r24 = (kotlin.jvm.functions.Function0) $r23;

        $r25 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r24);

        r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy kotlinDefaultImplClass$delegate> = $r25;

        return;
    }

    public java.lang.String getName()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy name$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public java.lang.String getJvmName()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        javax.lang.model.element.ExecutableElement $r1;
        javax.lang.model.element.Name $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: javax.lang.model.element.ExecutableElement getElement()>();

        $r2 = interfaceinvoke $r1.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.Name getSimpleName()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public java.util.List getTypeParameters()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy typeParameters$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public java.util.List getParameters()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy parameters$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.javac.kotlin.KmFunction getKotlinMetadata()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.javac.kotlin.KmFunction $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy kotlinMetadata$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.javac.kotlin.KmFunction) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.javac.JavacMethodType getExecutableType()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.javac.JavacMethodType $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy executableType$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.javac.JavacMethodType) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.javac.JavacType getReturnType()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.javac.JavacType $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy returnType$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.javac.JavacType) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.XMethodType asMemberOf(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        androidx.room.compiler.processing.XType r1;
        javax.lang.model.type.TypeMirror r2;
        boolean $z0, $z1;
        androidx.room.compiler.processing.javac.JavacMethodType $r3, $r15;
        androidx.room.compiler.processing.javac.JavacTypeElement $r4;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r5, $r8;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r6, $r13;
        javax.lang.model.util.Types $r7;
        javax.lang.model.type.DeclaredType $r9;
        javax.lang.model.element.ExecutableElement $r10;
        javax.lang.model.element.Element $r11;
        androidx.room.compiler.processing.javac.JavacMethodType$Companion $r12;
        javax.lang.model.type.ExecutableType $r14;
        androidx.room.compiler.processing.XMethodType $r16;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacDeclaredType;

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.JavacTypeElement getEnclosingElement()>();

        $r5 = virtualinvoke $r4.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacDeclaredType getType()>();

        $z1 = virtualinvoke $r5.<androidx.room.compiler.processing.javac.JavacDeclaredType: boolean isSameType(androidx.room.compiler.processing.XType)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.JavacMethodType getExecutableType()>();

        $r16 = (androidx.room.compiler.processing.XMethodType) $r3;

        goto label3;

     label2:
        $r6 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r7 = virtualinvoke $r6.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types getTypeUtils()>();

        $r8 = (androidx.room.compiler.processing.javac.JavacDeclaredType) r1;

        $r9 = virtualinvoke $r8.<androidx.room.compiler.processing.javac.JavacDeclaredType: javax.lang.model.type.DeclaredType getTypeMirror()>();

        $r10 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: javax.lang.model.element.ExecutableElement getElement()>();

        $r11 = (javax.lang.model.element.Element) $r10;

        r2 = interfaceinvoke $r7.<javax.lang.model.util.Types: javax.lang.model.type.TypeMirror asMemberOf(javax.lang.model.type.DeclaredType,javax.lang.model.element.Element)>($r9, $r11);

        $r12 = <androidx.room.compiler.processing.javac.JavacMethodType: androidx.room.compiler.processing.javac.JavacMethodType$Companion Companion>;

        $r13 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r14 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ExecutableType asExecutable(javax.lang.model.type.TypeMirror)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "asExecutable(asMemberOf)");

        $r15 = virtualinvoke $r12.<androidx.room.compiler.processing.javac.JavacMethodType$Companion: androidx.room.compiler.processing.javac.JavacMethodType create(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacMethodElement,javax.lang.model.type.ExecutableType)>($r13, r0, $r14);

        $r16 = (androidx.room.compiler.processing.XMethodType) $r15;

     label3:
        return $r16;
    }

    public boolean isJavaDefault()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        javax.lang.model.element.ExecutableElement $r1;
        java.util.Set $r2;
        javax.lang.model.element.Modifier $r3;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: javax.lang.model.element.ExecutableElement getElement()>();

        $r2 = interfaceinvoke $r1.<javax.lang.model.element.ExecutableElement: java.util.Set getModifiers()>();

        $r3 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier DEFAULT>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean isSuspendFunction()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        androidx.room.compiler.processing.javac.kotlin.KmFunction $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.kotlin.KmFunction getKotlinMetadata()>();

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.kotlin.KmFunction: boolean isSuspend()>();

        if $z0 != 1 goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isExtensionFunction()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        androidx.room.compiler.processing.javac.kotlin.KmFunction $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.kotlin.KmFunction getKotlinMetadata()>();

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<androidx.room.compiler.processing.javac.kotlin.KmFunction: boolean isExtension()>();

        if $z0 != 1 goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean overrides(androidx.room.compiler.processing.XMethodElement, androidx.room.compiler.processing.XTypeElement)
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0, $r7, $r20;
        androidx.room.compiler.processing.XMethodElement r1;
        androidx.room.compiler.processing.XTypeElement r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r3, $r11, $r24;
        androidx.room.compiler.processing.XProcessingEnv$Backend $r4, $r5;
        javax.lang.model.element.ExecutableElement $r6, $r8, $r19, $r21;
        androidx.room.compiler.processing.javac.JavacTypeElement $r9, $r22;
        javax.lang.model.element.TypeElement $r10, $r23;
        javax.lang.model.util.Types $r12, $r25;
        java.lang.IllegalStateException $r13, $r15;
        java.lang.String $r14, $r16, r17, r18;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        r1 := @parameter0: androidx.room.compiler.processing.XMethodElement;

        r2 := @parameter1: androidx.room.compiler.processing.XTypeElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "owner");

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacMethodElement;

        if $z0 != 0 goto label1;

        r17 = "Check failed.";

        $r15 = new java.lang.IllegalStateException;

        $r16 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label1:
        $z1 = r2 instanceof androidx.room.compiler.processing.javac.JavacTypeElement;

        if $z1 != 0 goto label2;

        r18 = "Check failed.";

        $r13 = new java.lang.IllegalStateException;

        $r14 = virtualinvoke r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label2:
        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.XProcessingEnv$Backend getBackend()>();

        $r5 = <androidx.room.compiler.processing.XProcessingEnv$Backend: androidx.room.compiler.processing.XProcessingEnv$Backend JAVAC>;

        if $r4 != $r5 goto label3;

        $z2 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: boolean isSuspendFunction()>();

        if $z2 == 0 goto label3;

        $z3 = interfaceinvoke r1.<androidx.room.compiler.processing.XMethodElement: boolean isSuspendFunction()>();

        if $z3 == 0 goto label3;

        $r6 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: javax.lang.model.element.ExecutableElement getElement()>();

        $r7 = (androidx.room.compiler.processing.javac.JavacMethodElement) r1;

        $r8 = virtualinvoke $r7.<androidx.room.compiler.processing.javac.JavacMethodElement: javax.lang.model.element.ExecutableElement getElement()>();

        $r9 = (androidx.room.compiler.processing.javac.JavacTypeElement) r2;

        $r10 = virtualinvoke $r9.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $r11 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r12 = virtualinvoke $r11.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types getTypeUtils()>();

        $z4 = staticinvoke <androidx.room.compiler.processing.javac.ElementExtKt: boolean suspendOverrides(javax.lang.model.element.ExecutableElement,javax.lang.model.element.ExecutableElement,javax.lang.model.element.TypeElement,javax.lang.model.util.Types)>($r6, $r8, $r10, $r12);

        return $z4;

     label3:
        $r19 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: javax.lang.model.element.ExecutableElement getElement()>();

        $r20 = (androidx.room.compiler.processing.javac.JavacMethodElement) r1;

        $r21 = virtualinvoke $r20.<androidx.room.compiler.processing.javac.JavacMethodElement: javax.lang.model.element.ExecutableElement getElement()>();

        $r22 = (androidx.room.compiler.processing.javac.JavacTypeElement) r2;

        $r23 = virtualinvoke $r22.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $r24 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r25 = virtualinvoke $r24.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types getTypeUtils()>();

        $z5 = staticinvoke <com.google.auto.common.MoreElements: boolean overrides(javax.lang.model.element.ExecutableElement,javax.lang.model.element.ExecutableElement,javax.lang.model.element.TypeElement,javax.lang.model.util.Types)>($r19, $r21, $r23, $r25);

        return $z5;
    }

    public boolean hasKotlinDefaultImpl()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0, r4;
        java.lang.Iterable $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        androidx.room.compiler.processing.javac.JavacTypeElement $r5;
        java.util.List $r6, $r9, $r10;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String $r7, $r8;
        java.util.Collection $r11;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        $r5 = specialinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.JavacTypeElement getKotlinDefaultImplClass()>();

        if $r5 == null goto label7;

        $r6 = virtualinvoke $r5.<androidx.room.compiler.processing.javac.JavacTypeElement: java.util.List getDeclaredMethods()>();

        if $r6 == null goto label7;

        $r1 = (java.lang.Iterable) $r6;

        $z2 = $r1 instanceof java.util.Collection;

        if $z2 == 0 goto label1;

        $r11 = (java.util.Collection) $r1;

        $z5 = interfaceinvoke $r11.<java.util.Collection: boolean isEmpty()>();

        if $z5 == 0 goto label1;

        $z6 = 0;

        goto label6;

     label1:
        r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z7 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label5;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.room.compiler.processing.javac.JavacMethodElement) r3;

        $r7 = virtualinvoke r4.<androidx.room.compiler.processing.javac.JavacMethodElement: java.lang.String getJvmName()>();

        $r8 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: java.lang.String getJvmName()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z3 == 0 goto label3;

        $r9 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: java.util.List getParameters()>();

        $r10 = virtualinvoke r4.<androidx.room.compiler.processing.javac.JavacMethodElement: java.util.List getParameters()>();

        $z4 = staticinvoke <androidx.room.compiler.processing.javac.JavacMethodElement: boolean hasKotlinDefaultImpl$paramsMatch(androidx.room.compiler.processing.javac.JavacMethodElement,java.util.List,java.util.List)>(r0, $r9, $r10);

        if $z4 == 0 goto label3;

        $z8 = 1;

        goto label4;

     label3:
        $z8 = 0;

     label4:
        if $z8 == 0 goto label2;

        $z6 = 1;

        goto label6;

     label5:
        $z6 = 0;

     label6:
        goto label8;

     label7:
        $z6 = 0;

     label8:
        return $z6;
    }

    private final androidx.room.compiler.processing.javac.JavacTypeElement getKotlinDefaultImplClass()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.javac.JavacTypeElement $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacMethodElement: kotlin.Lazy kotlinDefaultImplClass$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.javac.JavacTypeElement) $r2;

        return $r3;
    }

    private static void getKotlinDefaultImplClass$annotations()
    {
        return;
    }

    private static final boolean hasKotlinDefaultImpl$paramsMatch(androidx.room.compiler.processing.javac.JavacMethodElement, java.util.List, java.util.List)
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        java.util.List r1, r2;
        java.lang.Iterable $r3;
        java.util.Iterator r4;
        int i0, i1, $i2, $i3, $i4, $i5;
        javax.lang.model.type.TypeMirror r5, r6, $r22, $r23;
        javax.lang.model.type.TypeVariable r7, r8, $r25, $r26;
        java.util.Collection $r9, $r24;
        kotlin.ranges.IntRange $r10;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        kotlin.collections.IntIterator $r11;
        java.lang.Object $r12, $r15;
        androidx.room.compiler.processing.javac.JavacMethodParameter $r13, $r16;
        javax.lang.model.element.VariableElement $r14, $r17;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r18, $r20;
        javax.lang.model.util.Types $r19, $r21;

        r0 := @parameter0: androidx.room.compiler.processing.javac.JavacMethodElement;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        if $i2 == $i4 goto label01;

        return 0;

     label01:
        $r9 = (java.util.Collection) r1;

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: kotlin.ranges.IntRange getIndices(java.util.Collection)>($r9);

        $r3 = (java.lang.Iterable) $r10;

        $z2 = $r3 instanceof java.util.Collection;

        if $z2 == 0 goto label02;

        $r24 = (java.util.Collection) $r3;

        $z7 = interfaceinvoke $r24.<java.util.Collection: boolean isEmpty()>();

        if $z7 == 0 goto label02;

        $z8 = 1;

        goto label12;

     label02:
        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z9 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label11;

        $r11 = (kotlin.collections.IntIterator) r4;

        i0 = virtualinvoke $r11.<kotlin.collections.IntIterator: int nextInt()>();

        i1 = i0;

        $i5 = i1 + 1;

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i5);

        $r13 = (androidx.room.compiler.processing.javac.JavacMethodParameter) $r12;

        $r14 = virtualinvoke $r13.<androidx.room.compiler.processing.javac.JavacMethodParameter: javax.lang.model.element.VariableElement getElement()>();

        r5 = interfaceinvoke $r14.<javax.lang.model.element.VariableElement: javax.lang.model.type.TypeMirror asType()>();

        $r15 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r16 = (androidx.room.compiler.processing.javac.JavacMethodParameter) $r15;

        $r17 = virtualinvoke $r16.<androidx.room.compiler.processing.javac.JavacMethodParameter: javax.lang.model.element.VariableElement getElement()>();

        r6 = interfaceinvoke $r17.<javax.lang.model.element.VariableElement: javax.lang.model.type.TypeMirror asType()>();

        $r18 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r19 = virtualinvoke $r18.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types getTypeUtils()>();

        $z3 = interfaceinvoke $r19.<javax.lang.model.util.Types: boolean isSameType(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>(r6, r5);

        if $z3 == 0 goto label04;

        $z10 = 1;

        goto label10;

     label04:
        $z4 = r6 instanceof javax.lang.model.type.TypeVariable;

        if $z4 == 0 goto label05;

        $r25 = (javax.lang.model.type.TypeVariable) r6;

        goto label06;

     label05:
        $r25 = null;

     label06:
        r7 = $r25;

        $z5 = r5 instanceof javax.lang.model.type.TypeVariable;

        if $z5 == 0 goto label07;

        $r26 = (javax.lang.model.type.TypeVariable) r5;

        goto label08;

     label07:
        $r26 = null;

     label08:
        r8 = $r26;

        if r7 == null goto label09;

        if r8 == null goto label09;

        $r20 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv$room_compiler_processing()>();

        $r21 = virtualinvoke $r20.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types getTypeUtils()>();

        $r22 = interfaceinvoke r7.<javax.lang.model.type.TypeVariable: javax.lang.model.type.TypeMirror getLowerBound()>();

        $r23 = interfaceinvoke r8.<javax.lang.model.type.TypeVariable: javax.lang.model.type.TypeMirror getLowerBound()>();

        $z6 = interfaceinvoke $r21.<javax.lang.model.util.Types: boolean isSameType(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)>($r22, $r23);

        if $z6 == 0 goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        if $z10 != 0 goto label03;

        $z8 = 0;

        goto label12;

     label11:
        $z8 = 1;

     label12:
        return $z8;
    }

    public volatile androidx.room.compiler.processing.javac.kotlin.KmExecutable getKotlinMetadata()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        androidx.room.compiler.processing.javac.kotlin.KmFunction $r1;
        androidx.room.compiler.processing.javac.kotlin.KmExecutable $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.kotlin.KmFunction getKotlinMetadata()>();

        $r2 = (androidx.room.compiler.processing.javac.kotlin.KmExecutable) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XExecutableType getExecutableType()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        androidx.room.compiler.processing.javac.JavacMethodType $r1;
        androidx.room.compiler.processing.XExecutableType $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.JavacMethodType getExecutableType()>();

        $r2 = (androidx.room.compiler.processing.XExecutableType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XMethodType getExecutableType()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        androidx.room.compiler.processing.javac.JavacMethodType $r1;
        androidx.room.compiler.processing.XMethodType $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.JavacMethodType getExecutableType()>();

        $r2 = (androidx.room.compiler.processing.XMethodType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XType getReturnType()
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        androidx.room.compiler.processing.javac.JavacType $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.JavacType getReturnType()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XExecutableType asMemberOf(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.javac.JavacMethodElement r0;
        androidx.room.compiler.processing.XType r1;
        androidx.room.compiler.processing.XMethodType $r2;
        androidx.room.compiler.processing.XExecutableType $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodElement;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.XMethodType asMemberOf(androidx.room.compiler.processing.XType)>(r1);

        $r3 = (androidx.room.compiler.processing.XExecutableType) $r2;

        return $r3;
    }

