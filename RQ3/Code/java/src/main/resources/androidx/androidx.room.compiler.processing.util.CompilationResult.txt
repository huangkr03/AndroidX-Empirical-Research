androidx.room.compiler.processing.util.CompilationResult
<androidx.room.compiler.processing.util.CompilationResult: androidx.room.compiler.processing.util.CompilationResult$Companion Companion>
<androidx.room.compiler.processing.util.CompilationResult: java.lang.String testRunnerName>
<androidx.room.compiler.processing.util.CompilationResult: androidx.room.compiler.processing.SyntheticProcessor processor>
<androidx.room.compiler.processing.util.CompilationResult: boolean successfulCompilation>
<androidx.room.compiler.processing.util.CompilationResult: java.util.Map diagnostics>
<androidx.room.compiler.processing.util.CompilationResult: java.util.List FILTERED_MESSAGE_PREFIXES>
    public void <init>(java.lang.String, androidx.room.compiler.processing.SyntheticProcessor, boolean, java.util.Map)
    {
        androidx.room.compiler.processing.util.CompilationResult r0, r17;
        java.lang.String r1;
        androidx.room.compiler.processing.SyntheticProcessor r2;
        boolean z0, $z9, $z10, $z12;
        java.util.Map r3, r5, r10, r18;
        java.lang.Iterable $r6, $r12;
        java.util.Iterator r7, r14;
        java.lang.Object r8, r15, r19, $r23;
        java.util.Map$Entry r9, r11;
        java.util.Collection r13;
        androidx.room.compiler.processing.util.DiagnosticMessage r16;
        java.util.List r20;
        java.util.LinkedHashMap $r21;
        int $i0, $i1;
        java.util.Set $r22;
        java.util.ArrayList $r24;
        androidx.room.compiler.processing.util.CompilationResult$Companion $r26;

        r0 := @this: androidx.room.compiler.processing.util.CompilationResult;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.room.compiler.processing.SyntheticProcessor;

        z0 := @parameter2: boolean;

        r3 := @parameter3: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "testRunnerName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "processor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "diagnostics");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.util.CompilationResult: java.lang.String testRunnerName> = r1;

        r0.<androidx.room.compiler.processing.util.CompilationResult: androidx.room.compiler.processing.SyntheticProcessor processor> = r2;

        r0.<androidx.room.compiler.processing.util.CompilationResult: boolean successfulCompilation> = z0;

        r17 = r0;

        $r21 = new java.util.LinkedHashMap;

        $i0 = interfaceinvoke r3.<java.util.Map: int size()>();

        $i1 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        specialinvoke $r21.<java.util.LinkedHashMap: void <init>(int)>($i1);

        r5 = (java.util.Map) $r21;

        $r22 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        $r6 = (java.lang.Iterable) $r22;

        r7 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label4;

        r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) r8;

        r10 = r5;

        r11 = (java.util.Map$Entry) r8;

        r19 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        r18 = r10;

        $r23 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.lang.Iterable) $r23;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r13 = (java.util.Collection) $r24;

        r14 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z12 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label3;

        r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (androidx.room.compiler.processing.util.DiagnosticMessage) r15;

        $r26 = <androidx.room.compiler.processing.util.CompilationResult: androidx.room.compiler.processing.util.CompilationResult$Companion Companion>;

        $z10 = virtualinvoke $r26.<androidx.room.compiler.processing.util.CompilationResult$Companion: boolean isIgnored(androidx.room.compiler.processing.util.DiagnosticMessage)>(r16);

        if $z10 != 0 goto label2;

        interfaceinvoke r13.<java.util.Collection: boolean add(java.lang.Object)>(r15);

        goto label2;

     label3:
        r20 = (java.util.List) r13;

        interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r19, r20);

        goto label1;

     label4:
        r17.<androidx.room.compiler.processing.util.CompilationResult: java.util.Map diagnostics> = r5;

        return;
    }

    public final java.lang.String getTestRunnerName$room_compiler_processing_testing()
    {
        androidx.room.compiler.processing.util.CompilationResult r0;
        java.lang.String $r1;

        r0 := @this: androidx.room.compiler.processing.util.CompilationResult;

        $r1 = r0.<androidx.room.compiler.processing.util.CompilationResult: java.lang.String testRunnerName>;

        return $r1;
    }

    public final androidx.room.compiler.processing.SyntheticProcessor getProcessor$room_compiler_processing_testing()
    {
        androidx.room.compiler.processing.util.CompilationResult r0;
        androidx.room.compiler.processing.SyntheticProcessor $r1;

        r0 := @this: androidx.room.compiler.processing.util.CompilationResult;

        $r1 = r0.<androidx.room.compiler.processing.util.CompilationResult: androidx.room.compiler.processing.SyntheticProcessor processor>;

        return $r1;
    }

    public final boolean getSuccessfulCompilation$room_compiler_processing_testing()
    {
        androidx.room.compiler.processing.util.CompilationResult r0;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.util.CompilationResult;

        $z0 = r0.<androidx.room.compiler.processing.util.CompilationResult: boolean successfulCompilation>;

        return $z0;
    }

<androidx.room.compiler.processing.util.CompilationResult: java.util.List getGeneratedSources$room_compiler_processing_testing()>
    public final java.util.Map getDiagnostics()
    {
        androidx.room.compiler.processing.util.CompilationResult r0;
        java.util.Map $r1;

        r0 := @this: androidx.room.compiler.processing.util.CompilationResult;

        $r1 = r0.<androidx.room.compiler.processing.util.CompilationResult: java.util.Map diagnostics>;

        return $r1;
    }

    public final java.util.List diagnosticsOfKind(javax.tools.Diagnostic$Kind)
    {
        androidx.room.compiler.processing.util.CompilationResult r0;
        javax.tools.Diagnostic$Kind r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.util.List $r4;

        r0 := @this: androidx.room.compiler.processing.util.CompilationResult;

        r1 := @parameter0: javax.tools.Diagnostic$Kind;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "kind");

        $r2 = r0.<androidx.room.compiler.processing.util.CompilationResult: java.util.Map diagnostics>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.List) $r3;

        if $r4 != null goto label1;

        $r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label1:
        return $r4;
    }

<androidx.room.compiler.processing.util.CompilationResult: java.lang.String rawOutput()>
    public java.lang.String toString()
    {
        androidx.room.compiler.processing.util.CompilationResult r0;
        java.lang.StringBuilder r1, $r8, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r29, $r30, $r31, $r32, $r33, $r35, $r36, $r37, $r39, $r40, $r41, $r42, $r43;
        java.util.List r3, $r17, $r20;
        java.lang.Iterable $r4, $r47;
        java.util.Iterator r5, r48;
        java.lang.Object r6, r49;
        androidx.room.compiler.processing.util.DiagnosticMessage r7;
        java.lang.String $r11, $r14, $r24, $r27, $r28, $r34, $r38;
        boolean $z4, $z5, $z6, z9;
        int $i0, i1, i2;
        javax.tools.Diagnostic$Kind[] $r44;
        javax.tools.Diagnostic$Kind r45, r46;
        androidx.room.compiler.processing.util.Source r50;

        r0 := @this: androidx.room.compiler.processing.util.CompilationResult;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r1 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CompilationResult (with ");

        $r11 = r0.<androidx.room.compiler.processing.util.CompilationResult: java.lang.String testRunnerName>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "append(value)");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "append(\'\\n\')");

        $r44 = staticinvoke <javax.tools.Diagnostic$Kind: javax.tools.Diagnostic$Kind[] values()>();

        i1 = 0;

        i2 = lengthof $r44;

     label1:
        if i1 >= i2 goto label4;

        r45 = $r44[i1];

        r46 = r45;

        r3 = virtualinvoke r0.<androidx.room.compiler.processing.util.CompilationResult: java.util.List diagnosticsOfKind(javax.tools.Diagnostic$Kind)>(r46);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke r46.<javax.tools.Diagnostic$Kind: java.lang.String name()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r39, "append(value)");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r40, "append(\'\\n\')");

        $r4 = (java.lang.Iterable) r3;

        r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label3;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.room.compiler.processing.util.DiagnosticMessage) r6;

        $r42 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r42, "append(value)");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r43, "append(\'\\n\')");

        goto label2;

     label3:
        $r41 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r41, "append(\'\\n\')");

        i1 = i1 + 1;

        goto label1;

     label4:
        $r17 = virtualinvoke r0.<androidx.room.compiler.processing.util.CompilationResult: java.util.List getGeneratedSources$room_compiler_processing_testing()>();

        $z4 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label5;

        $r31 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Generated files: NONE");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r31, "append(value)");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r32, "append(\'\\n\')");

        goto label7;

     label5:
        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Generated files:");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "append(value)");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r19, "append(\'\\n\')");

        $r20 = virtualinvoke r0.<androidx.room.compiler.processing.util.CompilationResult: java.util.List getGeneratedSources$room_compiler_processing_testing()>();

        $r47 = (java.lang.Iterable) $r20;

        r48 = interfaceinvoke $r47.<java.lang.Iterable: java.util.Iterator iterator()>();

     label6:
        $z5 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label7;

        r49 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>();

        r50 = (androidx.room.compiler.processing.util.Source) r49;

        z9 = 0;

        $r28 = virtualinvoke r50.<androidx.room.compiler.processing.util.Source: java.lang.String getRelativePath()>();

        $r29 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r29, "append(value)");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r30, "append(\'\\n\')");

        goto label6;

     label7:
        $r21 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r21, "append(\'\\n\')");

        $r22 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RAW OUTPUT:");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r22, "append(value)");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "append(\'\\n\')");

        $r24 = virtualinvoke r0.<androidx.room.compiler.processing.util.CompilationResult: java.lang.String rawOutput()>();

        $r25 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r25, "append(value)");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r26, "append(\'\\n\')");

        $r27 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r27, "StringBuilder().apply(builderAction).toString()");

        return $r27;
    }

    public static final java.util.List access$getFILTERED_MESSAGE_PREFIXES$cp()
    {
        java.util.List $r0;

        $r0 = <androidx.room.compiler.processing.util.CompilationResult: java.util.List FILTERED_MESSAGE_PREFIXES>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] r0;
        androidx.room.compiler.processing.util.CompilationResult$Companion $r1;
        java.util.List $r2;

        $r1 = new androidx.room.compiler.processing.util.CompilationResult$Companion;

        specialinvoke $r1.<androidx.room.compiler.processing.util.CompilationResult$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.util.CompilationResult: androidx.room.compiler.processing.util.CompilationResult$Companion Companion> = $r1;

        r0 = newarray (java.lang.String)[7];

        r0[0] = "No processor claimed any of these annotations:";

        r0[1] = "The following options were not recognized by any processor:";

        r0[2] = "Using Kotlin home directory";

        r0[3] = "Scripting plugin will not be loaded: not";

        r0[4] = "Using JVM IR backend";

        r0[5] = "Configuring the compilation environment";

        r0[6] = "Loading modules:";

        $r2 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r0);

        <androidx.room.compiler.processing.util.CompilationResult: java.util.List FILTERED_MESSAGE_PREFIXES> = $r2;

        return;
    }

