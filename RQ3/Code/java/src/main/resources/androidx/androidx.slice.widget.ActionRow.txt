androidx.slice.widget.ActionRow
<androidx.slice.widget.ActionRow: int MAX_ACTIONS>
<androidx.slice.widget.ActionRow: java.lang.String TAG>
<androidx.slice.widget.ActionRow: int mSize>
<androidx.slice.widget.ActionRow: int mIconPadding>
<androidx.slice.widget.ActionRow: android.widget.LinearLayout mActionsGroup>
<androidx.slice.widget.ActionRow: boolean mFullActions>
<androidx.slice.widget.ActionRow: int mColor>
    public void <init>(android.content.Context, boolean)
    {
        androidx.slice.widget.ActionRow r0;
        android.content.Context r1;
        boolean z0;
        android.content.res.Resources $r2, $r4;
        android.util.DisplayMetrics $r3, $r5;
        float $f0, $f1;
        int $i0, $i1;
        android.widget.LinearLayout $r7, $r9, $r10, r11;
        android.widget.FrameLayout$LayoutParams r12;
        android.view.View r13;

        r0 := @this: androidx.slice.widget.ActionRow;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context)>(r1);

        r0.<androidx.slice.widget.ActionRow: int mColor> = -16777216;

        r0.<androidx.slice.widget.ActionRow: boolean mFullActions> = z0;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 48.0F, $r3);

        $i0 = (int) $f0;

        r0.<androidx.slice.widget.ActionRow: int mSize> = $i0;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 12.0F, $r5);

        $i1 = (int) $f1;

        r0.<androidx.slice.widget.ActionRow: int mIconPadding> = $i1;

        r11 = new android.widget.LinearLayout;

        specialinvoke r11.<android.widget.LinearLayout: void <init>(android.content.Context)>(r1);

        r0.<androidx.slice.widget.ActionRow: android.widget.LinearLayout mActionsGroup> = r11;

        $r7 = r0.<androidx.slice.widget.ActionRow: android.widget.LinearLayout mActionsGroup>;

        virtualinvoke $r7.<android.widget.LinearLayout: void setOrientation(int)>(0);

        $r9 = r0.<androidx.slice.widget.ActionRow: android.widget.LinearLayout mActionsGroup>;

        r12 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke r12.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -2);

        virtualinvoke $r9.<android.widget.LinearLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r12);

        $r10 = r0.<androidx.slice.widget.ActionRow: android.widget.LinearLayout mActionsGroup>;

        r13 = (android.view.View) $r10;

        virtualinvoke r0.<androidx.slice.widget.ActionRow: void addView(android.view.View)>(r13);

        return;
    }

    private void setColor(int)
    {
        androidx.slice.widget.ActionRow r0;
        int i0, i1, $i2, $i3, i4;
        android.view.View r1;
        boolean z0, $z1;
        android.widget.LinearLayout $r2, $r3;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        android.widget.ImageView $r6;
        android.content.res.ColorStateList $r7;

        r0 := @this: androidx.slice.widget.ActionRow;

        i0 := @parameter0: int;

        r0.<androidx.slice.widget.ActionRow: int mColor> = i0;

        i4 = 0;

     label1:
        $r2 = r0.<androidx.slice.widget.ActionRow: android.widget.LinearLayout mActionsGroup>;

        $i2 = virtualinvoke $r2.<android.widget.LinearLayout: int getChildCount()>();

        if i4 >= $i2 goto label5;

        $r3 = r0.<androidx.slice.widget.ActionRow: android.widget.LinearLayout mActionsGroup>;

        r1 = virtualinvoke $r3.<android.widget.LinearLayout: android.view.View getChildAt(int)>(i4);

        $r4 = virtualinvoke r1.<android.view.View: java.lang.Object getTag()>();

        $r5 = (java.lang.Integer) $r4;

        i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if i1 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        if z0 == 0 goto label4;

        $r6 = (android.widget.ImageView) r1;

        $i3 = r0.<androidx.slice.widget.ActionRow: int mColor>;

        $r7 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i3);

        staticinvoke <android.support.v4.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>($r6, $r7);

     label4:
        i4 = i4 + 1;

        goto label1;

     label5:
        return;
    }

    private android.widget.ImageView addAction(android.support.v4.graphics.drawable.IconCompat, boolean)
    {
        androidx.slice.widget.ActionRow r0;
        android.support.v4.graphics.drawable.IconCompat r1;
        boolean z0;
        android.widget.ImageView r2, r12;
        android.content.Context $r4, $r6, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        android.widget.ImageView$ScaleType $r5;
        android.graphics.drawable.Drawable $r7, $r9;
        java.lang.Boolean $r10;
        android.content.res.ColorStateList $r11;
        android.view.View r13;

        r0 := @this: androidx.slice.widget.ActionRow;

        r1 := @parameter0: android.support.v4.graphics.drawable.IconCompat;

        z0 := @parameter1: boolean;

        r12 = new android.widget.ImageView;

        $r4 = virtualinvoke r0.<androidx.slice.widget.ActionRow: android.content.Context getContext()>();

        specialinvoke r12.<android.widget.ImageView: void <init>(android.content.Context)>($r4);

        r2 = r12;

        $i3 = r0.<androidx.slice.widget.ActionRow: int mIconPadding>;

        $i2 = r0.<androidx.slice.widget.ActionRow: int mIconPadding>;

        $i1 = r0.<androidx.slice.widget.ActionRow: int mIconPadding>;

        $i0 = r0.<androidx.slice.widget.ActionRow: int mIconPadding>;

        virtualinvoke r2.<android.widget.ImageView: void setPadding(int,int,int,int)>($i3, $i2, $i1, $i0);

        $r5 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_CENTER>;

        virtualinvoke r2.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r5);

        $r6 = virtualinvoke r0.<androidx.slice.widget.ActionRow: android.content.Context getContext()>();

        $r7 = virtualinvoke r1.<android.support.v4.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>($r6);

        virtualinvoke r2.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r7);

        if z0 == 0 goto label1;

        $i4 = r0.<androidx.slice.widget.ActionRow: int mColor>;

        $r11 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i4);

        staticinvoke <android.support.v4.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>(r2, $r11);

     label1:
        $r8 = virtualinvoke r0.<androidx.slice.widget.ActionRow: android.content.Context getContext()>();

        $r9 = staticinvoke <androidx.slice.widget.SliceViewUtil: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r8, 16843534);

        virtualinvoke r2.<android.widget.ImageView: void setBackground(android.graphics.drawable.Drawable)>($r9);

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke r2.<android.widget.ImageView: void setTag(java.lang.Object)>($r10);

        r13 = (android.view.View) r2;

        specialinvoke r0.<androidx.slice.widget.ActionRow: void addAction(android.view.View)>(r13);

        return r2;
    }

    public void setActions(java.util.List, int)
    {
        androidx.slice.widget.ActionRow r0;
        java.util.List r1;
        int i0, $i1, $i2, $i3, $i4;
        java.util.Iterator r2;
        androidx.slice.core.SliceAction r3;
        androidx.slice.SliceItem r4, r5, r6, r7;
        android.support.v4.graphics.drawable.IconCompat r8, $r16;
        boolean z0, $z1, $z2;
        android.widget.LinearLayout $r9, $r10, $r13;
        java.lang.Object $r12;
        androidx.slice.core.SliceActionImpl $r14, $r15;
        android.widget.ImageView $r17;
        java.lang.StringBuilder $r20, $r21, r23;
        java.lang.String $r22;
        byte $b6;
        androidx.slice.widget.ActionRow$1 r24;
        android.view.View r25;

        r0 := @this: androidx.slice.widget.ActionRow;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        virtualinvoke r0.<androidx.slice.widget.ActionRow: void removeAllViews()>();

        $r9 = r0.<androidx.slice.widget.ActionRow: android.widget.LinearLayout mActionsGroup>;

        virtualinvoke $r9.<android.widget.LinearLayout: void removeAllViews()>();

        $r10 = r0.<androidx.slice.widget.ActionRow: android.widget.LinearLayout mActionsGroup>;

        r25 = (android.view.View) $r10;

        virtualinvoke r0.<androidx.slice.widget.ActionRow: void addView(android.view.View)>(r25);

        if i0 == -1 goto label01;

        specialinvoke r0.<androidx.slice.widget.ActionRow: void setColor(int)>(i0);

     label01:
        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.slice.core.SliceAction) $r12;

        $r13 = r0.<androidx.slice.widget.ActionRow: android.widget.LinearLayout mActionsGroup>;

        $i2 = virtualinvoke $r13.<android.widget.LinearLayout: int getChildCount()>();

        if $i2 < 5 goto label03;

        return;

     label03:
        $r14 = (androidx.slice.core.SliceActionImpl) r3;

        r4 = virtualinvoke $r14.<androidx.slice.core.SliceActionImpl: androidx.slice.SliceItem getSliceItem()>();

        $r15 = (androidx.slice.core.SliceActionImpl) r3;

        r5 = virtualinvoke $r15.<androidx.slice.core.SliceActionImpl: androidx.slice.SliceItem getActionItem()>();

        r6 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem find(androidx.slice.SliceItem,java.lang.String)>(r4, "input");

        r7 = staticinvoke <androidx.slice.core.SliceQuery: androidx.slice.SliceItem find(androidx.slice.SliceItem,java.lang.String)>(r4, "image");

        if r6 == null goto label05;

        if r7 == null goto label05;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 21 goto label04;

        specialinvoke r0.<androidx.slice.widget.ActionRow: void handleSetRemoteInputActions(androidx.slice.SliceItem,androidx.slice.SliceItem,androidx.slice.SliceItem)>(r6, r7, r5);

        goto label08;

     label04:
        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received RemoteInput on API <20 ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActionRow", $r22);

        goto label08;

     label05:
        $r16 = interfaceinvoke r3.<androidx.slice.core.SliceAction: android.support.v4.graphics.drawable.IconCompat getIcon()>();

        if $r16 == null goto label08;

        r8 = interfaceinvoke r3.<androidx.slice.core.SliceAction: android.support.v4.graphics.drawable.IconCompat getIcon()>();

        if r8 == null goto label08;

        if r5 == null goto label08;

        $i3 = interfaceinvoke r3.<androidx.slice.core.SliceAction: int getImageMode()>();

        if $i3 != 0 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        z0 = $z2;

        $r17 = specialinvoke r0.<androidx.slice.widget.ActionRow: android.widget.ImageView addAction(android.support.v4.graphics.drawable.IconCompat,boolean)>(r8, z0);

        r24 = new androidx.slice.widget.ActionRow$1;

        specialinvoke r24.<androidx.slice.widget.ActionRow$1: void <init>(androidx.slice.widget.ActionRow,androidx.slice.SliceItem)>(r0, r5);

        virtualinvoke $r17.<android.widget.ImageView: void setOnClickListener(android.view.View$OnClickListener)>(r24);

     label08:
        goto label02;

     label09:
        $i1 = virtualinvoke r0.<androidx.slice.widget.ActionRow: int getChildCount()>();

        if $i1 == 0 goto label10;

        $b6 = 0;

        goto label11;

     label10:
        $b6 = 8;

     label11:
        virtualinvoke r0.<androidx.slice.widget.ActionRow: void setVisibility(int)>($b6);

        return;
    }

    private void addAction(android.view.View)
    {
        androidx.slice.widget.ActionRow r0;
        android.view.View r1;
        android.widget.LinearLayout$LayoutParams $r2;
        int $i0, $i1;
        android.widget.LinearLayout $r3;

        r0 := @this: androidx.slice.widget.ActionRow;

        r1 := @parameter0: android.view.View;

        $r3 = r0.<androidx.slice.widget.ActionRow: android.widget.LinearLayout mActionsGroup>;

        $r2 = new android.widget.LinearLayout$LayoutParams;

        $i1 = r0.<androidx.slice.widget.ActionRow: int mSize>;

        $i0 = r0.<androidx.slice.widget.ActionRow: int mSize>;

        specialinvoke $r2.<android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>($i1, $i0, 1.0F);

        virtualinvoke $r3.<android.widget.LinearLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r2);

        return;
    }

    private void handleSetRemoteInputActions(androidx.slice.SliceItem, androidx.slice.SliceItem, androidx.slice.SliceItem)
    {
        androidx.slice.widget.ActionRow r0;
        androidx.slice.SliceItem r1, r2, r3;
        boolean z0, $z1, $z2, $z3;
        android.app.RemoteInput $r4;
        android.support.v4.graphics.drawable.IconCompat $r5;
        android.widget.ImageView $r6;
        androidx.slice.widget.ActionRow$2 $r7;
        int $i0;
        android.content.Context $r8;

        r0 := @this: androidx.slice.widget.ActionRow;

        r1 := @parameter0: androidx.slice.SliceItem;

        r2 := @parameter1: androidx.slice.SliceItem;

        r3 := @parameter2: androidx.slice.SliceItem;

        $r4 = virtualinvoke r1.<androidx.slice.SliceItem: android.app.RemoteInput getRemoteInput()>();

        $z1 = virtualinvoke $r4.<android.app.RemoteInput: boolean getAllowFreeFormInput()>();

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r2.<androidx.slice.SliceItem: boolean hasHint(java.lang.String)>("no_tint");

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        $r5 = virtualinvoke r2.<androidx.slice.SliceItem: android.support.v4.graphics.drawable.IconCompat getIcon()>();

        $r6 = specialinvoke r0.<androidx.slice.widget.ActionRow: android.widget.ImageView addAction(android.support.v4.graphics.drawable.IconCompat,boolean)>($r5, z0);

        $r7 = new androidx.slice.widget.ActionRow$2;

        specialinvoke $r7.<androidx.slice.widget.ActionRow$2: void <init>(androidx.slice.widget.ActionRow,androidx.slice.SliceItem,androidx.slice.SliceItem)>(r0, r3, r1);

        virtualinvoke $r6.<android.widget.ImageView: void setOnClickListener(android.view.View$OnClickListener)>($r7);

        $i0 = r0.<androidx.slice.widget.ActionRow: int mColor>;

        $r8 = virtualinvoke r0.<androidx.slice.widget.ActionRow: android.content.Context getContext()>();

        specialinvoke r0.<androidx.slice.widget.ActionRow: void createRemoteInputView(int,android.content.Context)>($i0, $r8);

     label3:
        return;
    }

    private void createRemoteInputView(int, android.content.Context)
    {
        androidx.slice.widget.ActionRow r0;
        int i0;
        android.content.Context r1;
        androidx.slice.widget.RemoteInputView r2;
        android.widget.FrameLayout$LayoutParams r4;
        android.view.ViewGroup r5;
        android.view.View r6, r7, r8;

        r0 := @this: androidx.slice.widget.ActionRow;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Context;

        r5 = (android.view.ViewGroup) r0;

        r2 = staticinvoke <androidx.slice.widget.RemoteInputView: androidx.slice.widget.RemoteInputView inflate(android.content.Context,android.view.ViewGroup)>(r1, r5);

        r6 = (android.view.View) r2;

        virtualinvoke r6.<android.view.View: void setVisibility(int)>(4);

        r4 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke r4.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        r7 = (android.view.View) r2;

        virtualinvoke r0.<androidx.slice.widget.ActionRow: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r7, r4);

        r8 = (android.view.View) r2;

        virtualinvoke r8.<android.view.View: void setBackgroundColor(int)>(i0);

        return;
    }

    boolean handleRemoteInputClick(android.view.View, androidx.slice.SliceItem, android.app.RemoteInput)
    {
        androidx.slice.widget.ActionRow r0;
        android.view.View r1, r9;
        androidx.slice.SliceItem r2;
        android.app.RemoteInput r3;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7, i8, $i9, $i10, i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        android.view.ViewParent $r4, r7;
        boolean $z0, $z1;
        android.text.Layout $r5, $r6;
        float $f0;
        androidx.slice.widget.RemoteInputView r8;
        android.widget.TextView r10;
        android.app.RemoteInput[] $r11;

        r0 := @this: androidx.slice.widget.ActionRow;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.slice.SliceItem;

        r3 := @parameter2: android.app.RemoteInput;

        if r3 != null goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        r7 = interfaceinvoke $r4.<android.view.ViewParent: android.view.ViewParent getParent()>();

        r8 = null;

     label2:
        if r7 == null goto label4;

        $z1 = r7 instanceof android.view.View;

        if $z1 == 0 goto label3;

        r9 = (android.view.View) r7;

        r8 = specialinvoke r0.<androidx.slice.widget.ActionRow: androidx.slice.widget.RemoteInputView findRemoteInputView(android.view.View)>(r9);

        if r8 == null goto label3;

        goto label4;

     label3:
        r7 = interfaceinvoke r7.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label2;

     label4:
        if r8 != null goto label5;

        return 0;

     label5:
        i6 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $z0 = r1 instanceof android.widget.TextView;

        if $z0 == 0 goto label6;

        r10 = (android.widget.TextView) r1;

        $r5 = virtualinvoke r10.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r5 == null goto label6;

        $r6 = virtualinvoke r10.<android.widget.TextView: android.text.Layout getLayout()>();

        $f0 = virtualinvoke $r6.<android.text.Layout: float getLineWidth(int)>(0);

        i7 = (int) $f0;

        $i3 = virtualinvoke r10.<android.widget.TextView: int getCompoundPaddingLeft()>();

        $i4 = virtualinvoke r10.<android.widget.TextView: int getCompoundPaddingRight()>();

        $i5 = $i3 + $i4;

        i8 = i7 + $i5;

        i6 = staticinvoke <java.lang.Math: int min(int,int)>(i6, i8);

     label6:
        $i9 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i10 = i6 / 2;

        i11 = $i9 + $i10;

        $i12 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i13 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i14 = $i13 / 2;

        i15 = $i12 + $i14;

        i0 = virtualinvoke r8.<androidx.slice.widget.RemoteInputView: int getWidth()>();

        i1 = virtualinvoke r8.<androidx.slice.widget.RemoteInputView: int getHeight()>();

        $i16 = i11 + i15;

        $i17 = i1 - i15;

        $i18 = i11 + $i17;

        $i19 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i18);

        $i20 = i0 - i11;

        $i21 = $i20 + i15;

        $i22 = i0 - i11;

        $i23 = i1 - i15;

        $i24 = $i22 + $i23;

        $i25 = staticinvoke <java.lang.Math: int max(int,int)>($i21, $i24);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i19, $i25);

        virtualinvoke r8.<androidx.slice.widget.RemoteInputView: void setRevealParameters(int,int,int)>(i11, i15, i2);

        virtualinvoke r8.<androidx.slice.widget.RemoteInputView: void setAction(androidx.slice.SliceItem)>(r2);

        $r11 = newarray (android.app.RemoteInput)[1];

        $r11[0] = r3;

        virtualinvoke r8.<androidx.slice.widget.RemoteInputView: void setRemoteInput(android.app.RemoteInput[],android.app.RemoteInput)>($r11, r3);

        virtualinvoke r8.<androidx.slice.widget.RemoteInputView: void focusAnimated()>();

        return 1;
    }

    private androidx.slice.widget.RemoteInputView findRemoteInputView(android.view.View)
    {
        androidx.slice.widget.ActionRow r0;
        android.view.View r1, $r3;
        java.lang.Object $r2;
        androidx.slice.widget.RemoteInputView $r4;

        r0 := @this: androidx.slice.widget.ActionRow;

        r1 := @parameter0: android.view.View;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = <androidx.slice.widget.RemoteInputView: java.lang.Object VIEW_TAG>;

        $r3 = virtualinvoke r1.<android.view.View: android.view.View findViewWithTag(java.lang.Object)>($r2);

        $r4 = (androidx.slice.widget.RemoteInputView) $r3;

        return $r4;
    }

androidx.slice.widget.ActionRow$1
<androidx.slice.widget.ActionRow$1: androidx.slice.SliceItem val$actionItem>
<androidx.slice.widget.ActionRow$1: androidx.slice.widget.ActionRow this$0>
    void <init>(androidx.slice.widget.ActionRow, androidx.slice.SliceItem)
    {
        androidx.slice.widget.ActionRow$1 r0;
        androidx.slice.widget.ActionRow r1;
        androidx.slice.SliceItem r2;

        r0 := @this: androidx.slice.widget.ActionRow$1;

        r1 := @parameter0: androidx.slice.widget.ActionRow;

        r2 := @parameter1: androidx.slice.SliceItem;

        r0.<androidx.slice.widget.ActionRow$1: androidx.slice.widget.ActionRow this$0> = r1;

        r0.<androidx.slice.widget.ActionRow$1: androidx.slice.SliceItem val$actionItem> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        androidx.slice.widget.ActionRow$1 r0;
        android.view.View r1;
        java.lang.Throwable r2, $r4;
        androidx.slice.SliceItem $r3;

        r0 := @this: androidx.slice.widget.ActionRow$1;

        r1 := @parameter0: android.view.View;

     label1:
        $r3 = r0.<androidx.slice.widget.ActionRow$1: androidx.slice.SliceItem val$actionItem>;

        virtualinvoke $r3.<androidx.slice.SliceItem: void fireAction(android.content.Context,android.content.Intent)>(null, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r2.<android.app.PendingIntent$CanceledException: void printStackTrace()>();

     label4:
        return;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

androidx.slice.widget.ActionRow$2
<androidx.slice.widget.ActionRow$2: androidx.slice.SliceItem val$action>
<androidx.slice.widget.ActionRow$2: androidx.slice.SliceItem val$input>
<androidx.slice.widget.ActionRow$2: androidx.slice.widget.ActionRow this$0>
    void <init>(androidx.slice.widget.ActionRow, androidx.slice.SliceItem, androidx.slice.SliceItem)
    {
        androidx.slice.widget.ActionRow$2 r0;
        androidx.slice.widget.ActionRow r1;
        androidx.slice.SliceItem r2, r3;

        r0 := @this: androidx.slice.widget.ActionRow$2;

        r1 := @parameter0: androidx.slice.widget.ActionRow;

        r2 := @parameter1: androidx.slice.SliceItem;

        r3 := @parameter2: androidx.slice.SliceItem;

        r0.<androidx.slice.widget.ActionRow$2: androidx.slice.widget.ActionRow this$0> = r1;

        r0.<androidx.slice.widget.ActionRow$2: androidx.slice.SliceItem val$action> = r2;

        r0.<androidx.slice.widget.ActionRow$2: androidx.slice.SliceItem val$input> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onClick(android.view.View)
    {
        androidx.slice.widget.ActionRow$2 r0;
        android.view.View r1;
        androidx.slice.SliceItem $r2, $r4;
        androidx.slice.widget.ActionRow $r3;
        android.app.RemoteInput $r5;

        r0 := @this: androidx.slice.widget.ActionRow$2;

        r1 := @parameter0: android.view.View;

        $r3 = r0.<androidx.slice.widget.ActionRow$2: androidx.slice.widget.ActionRow this$0>;

        $r4 = r0.<androidx.slice.widget.ActionRow$2: androidx.slice.SliceItem val$action>;

        $r2 = r0.<androidx.slice.widget.ActionRow$2: androidx.slice.SliceItem val$input>;

        $r5 = virtualinvoke $r2.<androidx.slice.SliceItem: android.app.RemoteInput getRemoteInput()>();

        virtualinvoke $r3.<androidx.slice.widget.ActionRow: boolean handleRemoteInputClick(android.view.View,androidx.slice.SliceItem,android.app.RemoteInput)>(r1, $r4, $r5);

        return;
    }

