androidx.wear.widget.drawer.WearableDrawerLayout
<androidx.wear.widget.drawer.WearableDrawerLayout: java.lang.String TAG>
<androidx.wear.widget.drawer.WearableDrawerLayout: int GRAVITY_UNDEFINED>
<androidx.wear.widget.drawer.WearableDrawerLayout: int PEEK_FADE_DURATION_MS>
<androidx.wear.widget.drawer.WearableDrawerLayout: int PEEK_AUTO_CLOSE_DELAY_MS>
<androidx.wear.widget.drawer.WearableDrawerLayout: int DOWN>
<androidx.wear.widget.drawer.WearableDrawerLayout: int UP>
<androidx.wear.widget.drawer.WearableDrawerLayout: float OPENED_PERCENT_THRESHOLD>
<androidx.wear.widget.drawer.WearableDrawerLayout: int NESTED_SCROLL_SLOP_DP>
<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper$Callback mTopDrawerDraggerCallback>
<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper$Callback mBottomDrawerDraggerCallback>
<androidx.wear.widget.drawer.WearableDrawerLayout: int mNestedScrollSlopPx>
<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper>
<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mTopDrawerDragger>
<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mBottomDrawerDragger>
<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mIsAccessibilityEnabled>
<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.FlingWatcherFactory mFlingWatcher>
<androidx.wear.widget.drawer.WearableDrawerLayout: android.os.Handler mMainThreadHandler>
<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable mCloseTopPeekRunnable>
<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable mCloseBottomPeekRunnable>
<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>
<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>
<androidx.wear.widget.drawer.WearableDrawerLayout: android.view.View mScrollingContentView>
<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerLayout$DrawerStateCallback mDrawerStateCallback>
<androidx.wear.widget.drawer.WearableDrawerLayout: int mSystemWindowInsetBottom>
<androidx.wear.widget.drawer.WearableDrawerLayout: int mCurrentNestedScrollSlopTracker>
<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldOpenTopDrawerAfterLayout>
<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldOpenBottomDrawerAfterLayout>
<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldPeekTopDrawerAfterLayout>
<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldPeekBottomDrawerAfterLayout>
<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mCanTopDrawerBeClosed>
<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mCanBottomDrawerBeClosed>
<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mLastScrollWasFling>
<androidx.wear.widget.drawer.WearableDrawerLayout: android.view.MotionEvent mDrawerOpenLastInterceptedTouchEvent>
    public void <init>(android.content.Context)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.content.Context r1;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2;
        android.view.WindowManager r3;
        android.util.DisplayMetrics r4, r31;
        android.view.accessibility.AccessibilityManager r5;
        android.os.Looper $r8;
        androidx.customview.widget.ViewDragHelper$Callback $r13, $r17;
        androidx.customview.widget.ViewDragHelper $r14, $r15, $r18, $r19;
        java.lang.Object $r20, $r23;
        android.view.Display $r22;
        float $f0, $f1;
        boolean $z0;
        androidx.core.view.NestedScrollingParentHelper r24;
        android.os.Handler r25;
        androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable r26, r27;
        androidx.wear.widget.drawer.FlingWatcherFactory r28;
        androidx.wear.widget.drawer.WearableDrawerLayout$TopDrawerDraggerCallback r29;
        androidx.wear.widget.drawer.WearableDrawerLayout$BottomDrawerDraggerCallback r30;
        android.view.ViewGroup r32, r33, r34;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r24 = new androidx.core.view.NestedScrollingParentHelper;

        r32 = (android.view.ViewGroup) r0;

        specialinvoke r24.<androidx.core.view.NestedScrollingParentHelper: void <init>(android.view.ViewGroup)>(r32);

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper> = r24;

        r25 = new android.os.Handler;

        $r8 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke r25.<android.os.Handler: void <init>(android.os.Looper)>($r8);

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.os.Handler mMainThreadHandler> = r25;

        r26 = new androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable;

        specialinvoke r26.<androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable: void <init>(androidx.wear.widget.drawer.WearableDrawerLayout,int)>(r0, 48);

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable mCloseTopPeekRunnable> = r26;

        r27 = new androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable;

        specialinvoke r27.<androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable: void <init>(androidx.wear.widget.drawer.WearableDrawerLayout,int)>(r0, 80);

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable mCloseBottomPeekRunnable> = r27;

        r28 = new androidx.wear.widget.drawer.FlingWatcherFactory;

        specialinvoke r28.<androidx.wear.widget.drawer.FlingWatcherFactory: void <init>(androidx.wear.widget.drawer.FlingWatcherFactory$FlingListener)>(r0);

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.FlingWatcherFactory mFlingWatcher> = r28;

        r29 = new androidx.wear.widget.drawer.WearableDrawerLayout$TopDrawerDraggerCallback;

        specialinvoke r29.<androidx.wear.widget.drawer.WearableDrawerLayout$TopDrawerDraggerCallback: void <init>(androidx.wear.widget.drawer.WearableDrawerLayout)>(r0);

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper$Callback mTopDrawerDraggerCallback> = r29;

        $r13 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper$Callback mTopDrawerDraggerCallback>;

        r33 = (android.view.ViewGroup) r0;

        $r14 = staticinvoke <androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)>(r33, 1.0F, $r13);

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mTopDrawerDragger> = $r14;

        $r15 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mTopDrawerDragger>;

        virtualinvoke $r15.<androidx.customview.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(4);

        r30 = new androidx.wear.widget.drawer.WearableDrawerLayout$BottomDrawerDraggerCallback;

        specialinvoke r30.<androidx.wear.widget.drawer.WearableDrawerLayout$BottomDrawerDraggerCallback: void <init>(androidx.wear.widget.drawer.WearableDrawerLayout)>(r0);

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper$Callback mBottomDrawerDraggerCallback> = r30;

        $r17 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper$Callback mBottomDrawerDraggerCallback>;

        r34 = (android.view.ViewGroup) r0;

        $r18 = staticinvoke <androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)>(r34, 1.0F, $r17);

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mBottomDrawerDragger> = $r18;

        $r19 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mBottomDrawerDragger>;

        virtualinvoke $r19.<androidx.customview.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(8);

        $r20 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r3 = (android.view.WindowManager) $r20;

        r31 = new android.util.DisplayMetrics;

        specialinvoke r31.<android.util.DisplayMetrics: void <init>()>();

        r4 = r31;

        $r22 = interfaceinvoke r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r22.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r4);

        $f0 = r4.<android.util.DisplayMetrics: float density>;

        $f1 = $f0 * 5.0F;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f1);

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int mNestedScrollSlopPx> = $i2;

        $r23 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        r5 = (android.view.accessibility.AccessibilityManager) $r23;

        $z0 = virtualinvoke r5.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mIsAccessibilityEnabled> = $z0;

        return;
    }

    static void animatePeekVisibleAfterBeingClosed(androidx.wear.widget.drawer.WearableDrawerView)
    {
        androidx.wear.widget.drawer.WearableDrawerView r0;
        android.view.View r1;
        android.view.ViewGroup r2;
        android.view.ViewPropertyAnimator $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13;
        androidx.wear.widget.drawer.WearableDrawerLayout$1 $r12;

        r0 := @parameter0: androidx.wear.widget.drawer.WearableDrawerView;

        r1 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerView: android.view.View getDrawerContent()>();

        if r1 == null goto label1;

        $r9 = virtualinvoke r1.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r10 = virtualinvoke $r9.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(150L);

        $r11 = virtualinvoke $r10.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        $r12 = new androidx.wear.widget.drawer.WearableDrawerLayout$1;

        specialinvoke $r12.<androidx.wear.widget.drawer.WearableDrawerLayout$1: void <init>(android.view.View)>(r1);

        $r13 = virtualinvoke $r11.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>($r12);

        virtualinvoke $r13.<android.view.ViewPropertyAnimator: void start()>();

     label1:
        r2 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerView: android.view.ViewGroup getPeekContainer()>();

        virtualinvoke r2.<android.view.ViewGroup: void setVisibility(int)>(0);

        $r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.ViewPropertyAnimator animate()>();

        $r4 = virtualinvoke $r3.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)>(150L);

        $r5 = virtualinvoke $r4.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(150L);

        $r6 = virtualinvoke $r5.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

        $r7 = virtualinvoke $r6.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>(1.0F);

        $r8 = virtualinvoke $r7.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>(1.0F);

        virtualinvoke $r8.<android.view.ViewPropertyAnimator: void start()>();

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerView: void setIsPeeking(boolean)>(1);

        return;
    }

    static void showDrawerContentMaybeAnimate(androidx.wear.widget.drawer.WearableDrawerView)
    {
        androidx.wear.widget.drawer.WearableDrawerView r0;
        android.view.View r1;
        android.view.ViewGroup r2, $r3;
        boolean $z0;
        android.view.ViewPropertyAnimator $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @parameter0: androidx.wear.widget.drawer.WearableDrawerView;

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerView: void bringToFront()>();

        r1 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerView: android.view.View getDrawerContent()>();

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

     label1:
        $z0 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerView: boolean isPeeking()>();

        if $z0 == 0 goto label3;

        r2 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerView: android.view.ViewGroup getPeekContainer()>();

        $r4 = virtualinvoke r2.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r5 = virtualinvoke $r4.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        $r6 = virtualinvoke $r5.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>(0.0F);

        $r7 = virtualinvoke $r6.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>(0.0F);

        $r8 = virtualinvoke $r7.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(150L);

        virtualinvoke $r8.<android.view.ViewPropertyAnimator: void start()>();

        if r1 == null goto label2;

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(0.0F);

        $r9 = virtualinvoke r1.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r10 = virtualinvoke $r9.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)>(150L);

        $r11 = virtualinvoke $r10.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

        $r12 = virtualinvoke $r11.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(150L);

        virtualinvoke $r12.<android.view.ViewPropertyAnimator: void start()>();

     label2:
        goto label4;

     label3:
        $r3 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerView: android.view.ViewGroup getPeekContainer()>();

        virtualinvoke $r3.<android.view.ViewGroup: void setAlpha(float)>(0.0F);

        if r1 == null goto label4;

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(1.0F);

     label4:
        return;
    }

    public android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.WindowInsets r1, $r3;
        android.view.ViewGroup$MarginLayoutParams r2;
        int $i0, $i1, $i2;
        android.view.ViewGroup$LayoutParams $r4, r5;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.WindowInsets;

        $i0 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int mSystemWindowInsetBottom> = $i0;

        $i1 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int mSystemWindowInsetBottom>;

        if $i1 == 0 goto label1;

        $r4 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.view.ViewGroup$MarginLayoutParams) $r4;

        $i2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int mSystemWindowInsetBottom>;

        r2.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin> = $i2;

        r5 = (android.view.ViewGroup$LayoutParams) r2;

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

     label1:
        $r3 = specialinvoke r0.<android.widget.FrameLayout: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>(r1);

        return $r3;
    }

    void closeDrawerDelayed(int, long)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        int i0;
        long l1;
        androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable $r1, $r3, $r5, $r7;
        android.os.Handler $r2, $r4, $r6, $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        lookupswitch(i0)
        {
            case 48: goto label1;
            case 80: goto label2;
            default: goto label3;
        };

     label1:
        $r6 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.os.Handler mMainThreadHandler>;

        $r5 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable mCloseTopPeekRunnable>;

        virtualinvoke $r6.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r5);

        $r8 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.os.Handler mMainThreadHandler>;

        $r7 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable mCloseTopPeekRunnable>;

        virtualinvoke $r8.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r7, l1);

        goto label4;

     label2:
        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.os.Handler mMainThreadHandler>;

        $r1 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable mCloseBottomPeekRunnable>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $r4 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.os.Handler mMainThreadHandler>;

        $r3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerLayout$ClosePeekRunnable mCloseBottomPeekRunnable>;

        virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, l1);

        goto label4;

     label3:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invoked a delayed drawer close with an invalid gravity: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WearableDrawerLayout", $r12);

     label4:
        return;
    }

    void closeDrawer(int)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        int i0;
        androidx.wear.widget.drawer.WearableDrawerView $r1;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView findDrawerWithGravity(int)>(i0);

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void closeDrawer(androidx.wear.widget.drawer.WearableDrawerView)>($r1);

        return;
    }

    void closeDrawer(androidx.wear.widget.drawer.WearableDrawerView)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        androidx.wear.widget.drawer.WearableDrawerView r1, $r2, $r3, $r5, $r6, $r8;
        androidx.customview.widget.ViewDragHelper $r4, $r7;
        int $i1, $i2, $i3;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: androidx.wear.widget.drawer.WearableDrawerView;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        if r1 != $r2 goto label2;

        $r7 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mTopDrawerDragger>;

        $r8 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        $r6 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        $i2 = virtualinvoke $r6.<androidx.wear.widget.drawer.WearableDrawerView: int getHeight()>();

        $i3 = neg $i2;

        virtualinvoke $r7.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($r8, 0, $i3);

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void invalidate()>();

        goto label4;

     label2:
        $r3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        if r1 != $r3 goto label3;

        $r4 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mBottomDrawerDragger>;

        $r5 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        $i1 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int getHeight()>();

        virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($r5, 0, $i1);

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void invalidate()>();

        goto label4;

     label3:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WearableDrawerLayout", "closeDrawer(View) should be passed in the top or bottom drawer");

     label4:
        return;
    }

    void openDrawer(int)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        int i0;
        boolean $z0;
        androidx.wear.widget.drawer.WearableDrawerView $r1;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean isLaidOut()>();

        if $z0 != 0 goto label4;

        lookupswitch(i0)
        {
            case 48: goto label1;
            case 80: goto label2;
            default: goto label3;
        };

     label1:
        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldOpenTopDrawerAfterLayout> = 1;

        goto label3;

     label2:
        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldOpenBottomDrawerAfterLayout> = 1;

        goto label3;

     label3:
        return;

     label4:
        $r1 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView findDrawerWithGravity(int)>(i0);

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void openDrawer(androidx.wear.widget.drawer.WearableDrawerView)>($r1);

        return;
    }

    void openDrawer(androidx.wear.widget.drawer.WearableDrawerView)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        androidx.wear.widget.drawer.WearableDrawerView r1, $r2, $r3, $r5, $r6, $r7, $r8, $r10, $r11, $r12;
        boolean $z0;
        androidx.customview.widget.ViewDragHelper $r4, $r9;
        int $i1, $i2, $i3;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: androidx.wear.widget.drawer.WearableDrawerView;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean isLaidOut()>();

        if $z0 != 0 goto label4;

        $r11 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        if r1 != $r11 goto label2;

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldOpenTopDrawerAfterLayout> = 1;

        goto label3;

     label2:
        $r12 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        if r1 != $r12 goto label3;

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldOpenBottomDrawerAfterLayout> = 1;

     label3:
        return;

     label4:
        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        if r1 != $r2 goto label5;

        $r9 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mTopDrawerDragger>;

        $r8 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        virtualinvoke $r9.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($r8, 0, 0);

        $r10 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        staticinvoke <androidx.wear.widget.drawer.WearableDrawerLayout: void showDrawerContentMaybeAnimate(androidx.wear.widget.drawer.WearableDrawerView)>($r10);

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void invalidate()>();

        goto label7;

     label5:
        $r3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        if r1 != $r3 goto label6;

        $r4 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mBottomDrawerDragger>;

        $r5 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        $i1 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int getHeight()>();

        $r6 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        $i2 = virtualinvoke $r6.<androidx.wear.widget.drawer.WearableDrawerView: int getHeight()>();

        $i3 = $i1 - $i2;

        virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($r5, 0, $i3);

        $r7 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        staticinvoke <androidx.wear.widget.drawer.WearableDrawerLayout: void showDrawerContentMaybeAnimate(androidx.wear.widget.drawer.WearableDrawerView)>($r7);

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void invalidate()>();

        goto label7;

     label6:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WearableDrawerLayout", "openDrawer(View) should be passed in the top or bottom drawer");

     label7:
        return;
    }

    void peekDrawer(int)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        int i0;
        androidx.wear.widget.drawer.WearableDrawerView r1;
        boolean $z0, $z1;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean isLaidOut()>();

        if $z0 != 0 goto label5;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("WearableDrawerLayout", 3);

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WearableDrawerLayout", "WearableDrawerLayout not laid out yet. Postponing peek.");

     label1:
        lookupswitch(i0)
        {
            case 48: goto label2;
            case 80: goto label3;
            default: goto label4;
        };

     label2:
        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldPeekTopDrawerAfterLayout> = 1;

        goto label4;

     label3:
        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldPeekBottomDrawerAfterLayout> = 1;

        goto label4;

     label4:
        return;

     label5:
        r1 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView findDrawerWithGravity(int)>(i0);

        specialinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void maybePeekDrawer(androidx.wear.widget.drawer.WearableDrawerView)>(r1);

        return;
    }

    void peekDrawer(androidx.wear.widget.drawer.WearableDrawerView)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        androidx.wear.widget.drawer.WearableDrawerView r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r6, $r7;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: androidx.wear.widget.drawer.WearableDrawerView;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("peekDrawer(WearableDrawerView) received a null drawer.");

        throw $r7;

     label1:
        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        if r1 == $r2 goto label2;

        $r5 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        if r1 == $r5 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("peekDrawer(WearableDrawerView) received a drawer that isn\'t a child.");

        throw $r6;

     label2:
        $z0 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean isLaidOut()>();

        if $z0 != 0 goto label6;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("WearableDrawerLayout", 3);

        if $z1 == 0 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WearableDrawerLayout", "WearableDrawerLayout not laid out yet. Postponing peek.");

     label3:
        $r3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        if r1 != $r3 goto label4;

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldPeekTopDrawerAfterLayout> = 1;

        goto label5;

     label4:
        $r4 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        if r1 != $r4 goto label5;

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldPeekBottomDrawerAfterLayout> = 1;

     label5:
        return;

     label6:
        specialinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void maybePeekDrawer(androidx.wear.widget.drawer.WearableDrawerView)>(r1);

        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.MotionEvent r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        androidx.wear.widget.drawer.WearableDrawerView $r2, $r3, $r4, $r5;
        androidx.customview.widget.ViewDragHelper $r6, $r7;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        if $r2 == null goto label1;

        $r4 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        $z4 = virtualinvoke $r4.<androidx.wear.widget.drawer.WearableDrawerView: boolean isOpened()>();

        if $z4 == 0 goto label1;

        $z5 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mCanBottomDrawerBeClosed>;

        if $z5 == 0 goto label2;

     label1:
        $r5 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        if $r5 == null goto label3;

        $r3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        $z2 = virtualinvoke $r3.<androidx.wear.widget.drawer.WearableDrawerView: boolean isOpened()>();

        if $z2 == 0 goto label3;

        $z3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mCanTopDrawerBeClosed>;

        if $z3 != 0 goto label3;

     label2:
        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.view.MotionEvent mDrawerOpenLastInterceptedTouchEvent> = r1;

        return 0;

     label3:
        $r6 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mTopDrawerDragger>;

        z0 = virtualinvoke $r6.<androidx.customview.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>(r1);

        $r7 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mBottomDrawerDragger>;

        z1 = virtualinvoke $r7.<androidx.customview.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>(r1);

        if z0 != 0 goto label4;

        if z1 == 0 goto label5;

     label4:
        $z6 = 1;

        goto label6;

     label5:
        $z6 = 0;

     label6:
        return $z6;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.MotionEvent r1;
        androidx.customview.widget.ViewDragHelper $r2, $r3;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.MotionEvent;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WearableDrawerLayout", "null MotionEvent passed to onTouchEvent");

        return 0;

     label1:
        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mTopDrawerDragger>;

        virtualinvoke $r2.<androidx.customview.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>(r1);

        $r3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mBottomDrawerDragger>;

        virtualinvoke $r3.<androidx.customview.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>(r1);

        return 1;
    }

    public void computeScroll()
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        boolean z0, z1;
        androidx.customview.widget.ViewDragHelper $r1, $r2;
        android.view.View r3;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        $r1 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mTopDrawerDragger>;

        z0 = virtualinvoke $r1.<androidx.customview.widget.ViewDragHelper: boolean continueSettling(boolean)>(1);

        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mBottomDrawerDragger>;

        z1 = virtualinvoke $r2.<androidx.customview.widget.ViewDragHelper: boolean continueSettling(boolean)>(1);

        if z0 != 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        r3 = (android.view.View) r0;

        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r3);

     label2:
        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.View r1;
        int i0, $i1, i2;
        android.view.ViewGroup$LayoutParams r2;
        androidx.wear.widget.drawer.WearableDrawerView r3, r7;
        boolean $z0;
        androidx.wear.widget.drawer.WearableDrawerController $r4;
        android.widget.FrameLayout$LayoutParams $r5, $r6;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        $z0 = r1 instanceof androidx.wear.widget.drawer.WearableDrawerView;

        if $z0 != 0 goto label1;

        return;

     label1:
        r3 = (androidx.wear.widget.drawer.WearableDrawerView) r1;

        $r4 = new androidx.wear.widget.drawer.WearableDrawerController;

        specialinvoke $r4.<androidx.wear.widget.drawer.WearableDrawerController: void <init>(androidx.wear.widget.drawer.WearableDrawerLayout,androidx.wear.widget.drawer.WearableDrawerView)>(r0, r3);

        virtualinvoke r3.<androidx.wear.widget.drawer.WearableDrawerView: void setDrawerController(androidx.wear.widget.drawer.WearableDrawerController)>($r4);

        $r5 = (android.widget.FrameLayout$LayoutParams) r2;

        i2 = $r5.<android.widget.FrameLayout$LayoutParams: int gravity>;

        if i2 == 0 goto label2;

        if i2 != -1 goto label3;

     label2:
        $r6 = (android.widget.FrameLayout$LayoutParams) r2;

        $i1 = virtualinvoke r3.<androidx.wear.widget.drawer.WearableDrawerView: int preferGravity()>();

        $r6.<android.widget.FrameLayout$LayoutParams: int gravity> = $i1;

        i2 = virtualinvoke r3.<androidx.wear.widget.drawer.WearableDrawerView: int preferGravity()>();

        virtualinvoke r3.<androidx.wear.widget.drawer.WearableDrawerView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

     label3:
        if i2 != 48 goto label4;

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView> = r3;

        r7 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        goto label6;

     label4:
        if i2 != 80 goto label5;

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView> = r3;

        r7 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        goto label6;

     label5:
        r7 = null;

     label6:
        if r7 == null goto label7;

        virtualinvoke r7.<androidx.wear.widget.drawer.WearableDrawerView: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>(r0);

     label7:
        return;
    }

    public void onLayoutChange(android.view.View, int, int, int, int, int, int, int, int)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20;
        androidx.wear.widget.drawer.WearableDrawerView $r2, $r3, $r4, $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, f7;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        if r1 != $r2 goto label1;

        $r5 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        f6 = virtualinvoke $r5.<androidx.wear.widget.drawer.WearableDrawerView: float getOpenedPercent()>();

        i17 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i13 = neg i17;

        $f4 = (float) i17;

        $f5 = $f4 * f6;

        $i12 = (int) $f5;

        i18 = $i13 + $i12;

        $i14 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i15 = virtualinvoke r1.<android.view.View: int getRight()>();

        $i16 = i18 + i17;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i14, i18, $i15, $i16);

        goto label2;

     label1:
        $r3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        if r1 != $r3 goto label2;

        $r4 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        f7 = virtualinvoke $r4.<androidx.wear.widget.drawer.WearableDrawerView: float getOpenedPercent()>();

        i19 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i8 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int getHeight()>();

        $f2 = (float) $i8;

        $f0 = (float) i19;

        $f1 = $f0 * f7;

        $f3 = $f2 - $f1;

        i20 = (int) $f3;

        $i9 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i10 = virtualinvoke r1.<android.view.View: int getRight()>();

        $i11 = i20 + i19;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i9, i20, $i10, $i11);

     label2:
        return;
    }

    public void setDrawerStateCallback(androidx.wear.widget.drawer.WearableDrawerLayout$DrawerStateCallback)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        androidx.wear.widget.drawer.WearableDrawerLayout$DrawerStateCallback r1;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: androidx.wear.widget.drawer.WearableDrawerLayout$DrawerStateCallback;

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerLayout$DrawerStateCallback mDrawerStateCallback> = r1;

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, i1, i2, i3;
        android.view.ViewTreeObserver $r1;
        androidx.wear.widget.drawer.WearableDrawerLayout$2 $r2;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $z1 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldPeekBottomDrawerAfterLayout>;

        if $z1 != 0 goto label1;

        $z2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldPeekTopDrawerAfterLayout>;

        if $z2 != 0 goto label1;

        $z3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldOpenTopDrawerAfterLayout>;

        if $z3 != 0 goto label1;

        $z4 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mShouldOpenBottomDrawerAfterLayout>;

        if $z4 == 0 goto label2;

     label1:
        $r1 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r2 = new androidx.wear.widget.drawer.WearableDrawerLayout$2;

        specialinvoke $r2.<androidx.wear.widget.drawer.WearableDrawerLayout$2: void <init>(androidx.wear.widget.drawer.WearableDrawerLayout)>(r0);

        virtualinvoke $r1.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>($r2);

     label2:
        return;
    }

    public void onFlingComplete(android.view.View)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.View r1;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9;
        androidx.wear.widget.drawer.WearableDrawerView $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        if $r2 == null goto label1;

        $r6 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        $z7 = virtualinvoke $r6.<androidx.wear.widget.drawer.WearableDrawerView: boolean isAutoPeekEnabled()>();

        if $z7 == 0 goto label1;

        $z8 = 1;

        goto label2;

     label1:
        $z8 = 0;

     label2:
        z0 = $z8;

        $r7 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        if $r7 == null goto label3;

        $r5 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        $z6 = virtualinvoke $r5.<androidx.wear.widget.drawer.WearableDrawerView: boolean isAutoPeekEnabled()>();

        if $z6 == 0 goto label3;

        $z9 = 1;

        goto label4;

     label3:
        $z9 = 0;

     label4:
        z1 = $z9;

        z2 = virtualinvoke r1.<android.view.View: boolean canScrollVertically(int)>(-1);

        z3 = virtualinvoke r1.<android.view.View: boolean canScrollVertically(int)>(1);

        if z2 != 0 goto label5;

        if z3 != 0 goto label5;

        return;

     label5:
        if z0 == 0 goto label6;

        if z2 != 0 goto label6;

        $r4 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        $z5 = virtualinvoke $r4.<androidx.wear.widget.drawer.WearableDrawerView: boolean isPeeking()>();

        if $z5 != 0 goto label6;

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void peekDrawer(int)>(48);

     label6:
        if z1 == 0 goto label8;

        if z2 == 0 goto label7;

        if z3 != 0 goto label8;

     label7:
        $r3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        $z4 = virtualinvoke $r3.<androidx.wear.widget.drawer.WearableDrawerView: boolean isPeeking()>();

        if $z4 != 0 goto label8;

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void peekDrawer(int)>(80);

     label8:
        return;
    }

    public int getNestedScrollAxes()
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        androidx.core.view.NestedScrollingParentHelper $r1;
        int $i0;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        $r1 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        $i0 = virtualinvoke $r1.<androidx.core.view.NestedScrollingParentHelper: int getNestedScrollAxes()>();

        return $i0;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.View r1;
        float f0, f1;
        boolean z0;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        return 0;
    }

    public boolean onNestedPreFling(android.view.View, float, float)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.View r1, $r3, $r4;
        float f0, f1;
        androidx.wear.widget.drawer.FlingWatcherFactory$FlingWatcher r2;
        androidx.wear.widget.drawer.FlingWatcherFactory $r5;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        specialinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void maybeUpdateScrollingContentView(android.view.View)>(r1);

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mLastScrollWasFling> = 1;

        $r3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.view.View mScrollingContentView>;

        if r1 != $r3 goto label1;

        $r5 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.FlingWatcherFactory mFlingWatcher>;

        $r4 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.view.View mScrollingContentView>;

        r2 = virtualinvoke $r5.<androidx.wear.widget.drawer.FlingWatcherFactory: androidx.wear.widget.drawer.FlingWatcherFactory$FlingWatcher getFor(android.view.View)>($r4);

        if r2 == null goto label1;

        interfaceinvoke r2.<androidx.wear.widget.drawer.FlingWatcherFactory$FlingWatcher: void watch()>();

     label1:
        return 0;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[])
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.View r1;
        int i0, i1;
        int[] r2;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: int[];

        specialinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void maybeUpdateScrollingContentView(android.view.View)>(r1);

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.View r1, $r18;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z20, $z21, $z22, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, z34, $z35, $z36;
        androidx.wear.widget.drawer.WearableDrawerView $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r20, $r21, $r22, $r23;
        android.view.MotionEvent $r14, $r16;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        if i1 >= 0 goto label01;

        $z25 = 1;

        goto label02;

     label01:
        $z25 = 0;

     label02:
        z0 = $z25;

        if i1 <= 0 goto label03;

        $z26 = 1;

        goto label04;

     label03:
        $z26 = 0;

     label04:
        z1 = $z26;

        if i3 >= 0 goto label05;

        $z27 = 1;

        goto label06;

     label05:
        $z27 = 0;

     label06:
        z2 = $z27;

        if i3 <= 0 goto label07;

        $z28 = 1;

        goto label08;

     label07:
        $z28 = 0;

     label08:
        z3 = $z28;

        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        if $r2 == null goto label13;

        $r15 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        $z20 = virtualinvoke $r15.<androidx.wear.widget.drawer.WearableDrawerView: boolean isOpened()>();

        if $z20 == 0 goto label13;

        if z3 != 0 goto label09;

        $r17 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        $r18 = virtualinvoke $r17.<androidx.wear.widget.drawer.WearableDrawerView: android.view.View getDrawerContent()>();

        $z24 = virtualinvoke $r18.<android.view.View: boolean canScrollVertically(int)>(1);

        if $z24 != 0 goto label10;

     label09:
        $z29 = 1;

        goto label11;

     label10:
        $z29 = 0;

     label11:
        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mCanTopDrawerBeClosed> = $z29;

        $z21 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mCanTopDrawerBeClosed>;

        if $z21 == 0 goto label12;

        $z22 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mLastScrollWasFling>;

        if $z22 == 0 goto label12;

        $r16 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.view.MotionEvent mDrawerOpenLastInterceptedTouchEvent>;

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean onTouchEvent(android.view.MotionEvent)>($r16);

     label12:
        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mLastScrollWasFling> = 0;

        return;

     label13:
        $r3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        if $r3 == null goto label15;

        $r13 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        $z16 = virtualinvoke $r13.<androidx.wear.widget.drawer.WearableDrawerView: boolean isOpened()>();

        if $z16 == 0 goto label15;

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mCanBottomDrawerBeClosed> = z2;

        $z17 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mCanBottomDrawerBeClosed>;

        if $z17 == 0 goto label14;

        $z18 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mLastScrollWasFling>;

        if $z18 == 0 goto label14;

        $r14 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.view.MotionEvent mDrawerOpenLastInterceptedTouchEvent>;

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean onTouchEvent(android.view.MotionEvent)>($r14);

     label14:
        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mLastScrollWasFling> = 0;

        return;

     label15:
        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mLastScrollWasFling> = 0;

        $r4 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        if $r4 == null goto label16;

        $r12 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        $z15 = virtualinvoke $r12.<androidx.wear.widget.drawer.WearableDrawerView: boolean isAutoPeekEnabled()>();

        if $z15 == 0 goto label16;

        $z30 = 1;

        goto label17;

     label16:
        $z30 = 0;

     label17:
        z4 = $z30;

        $r20 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        if $r20 == null goto label18;

        $r11 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        $z14 = virtualinvoke $r11.<androidx.wear.widget.drawer.WearableDrawerView: boolean isAutoPeekEnabled()>();

        if $z14 == 0 goto label18;

        $z31 = 1;

        goto label19;

     label18:
        $z31 = 0;

     label19:
        z5 = $z31;

        $r21 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        if $r21 == null goto label20;

        $r10 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        $z13 = virtualinvoke $r10.<androidx.wear.widget.drawer.WearableDrawerView: boolean isPeeking()>();

        if $z13 == 0 goto label20;

        $z32 = 1;

        goto label21;

     label20:
        $z32 = 0;

     label21:
        z6 = $z32;

        $r22 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        if $r22 == null goto label22;

        $r9 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        $z12 = virtualinvoke $r9.<androidx.wear.widget.drawer.WearableDrawerView: boolean isPeeking()>();

        if $z12 == 0 goto label22;

        $z33 = 1;

        goto label23;

     label22:
        $z33 = 0;

     label23:
        z7 = $z33;

        z34 = 0;

        $r23 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        if $r23 == null goto label24;

        $r8 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        $z11 = virtualinvoke $r8.<androidx.wear.widget.drawer.WearableDrawerView: boolean isPeekOnScrollDownEnabled()>();

        if $z11 == 0 goto label24;

        $z35 = 1;

        goto label25;

     label24:
        $z35 = 0;

     label25:
        z8 = $z35;

        if z1 == 0 goto label28;

        $i4 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int mCurrentNestedScrollSlopTracker>;

        $i5 = $i4 + i1;

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int mCurrentNestedScrollSlopTracker> = $i5;

        $i7 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int mCurrentNestedScrollSlopTracker>;

        $i6 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int mNestedScrollSlopPx>;

        if $i7 <= $i6 goto label26;

        $z36 = 1;

        goto label27;

     label26:
        $z36 = 0;

     label27:
        z34 = $z36;

     label28:
        if z4 == 0 goto label30;

        if z2 == 0 goto label29;

        if z6 != 0 goto label29;

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void peekDrawer(int)>(48);

        goto label30;

     label29:
        if z1 == 0 goto label30;

        if z6 == 0 goto label30;

        $r7 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        $z10 = specialinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean isClosingPeek(androidx.wear.widget.drawer.WearableDrawerView)>($r7);

        if $z10 != 0 goto label30;

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void closeDrawer(int)>(48);

     label30:
        if z5 == 0 goto label35;

        if z3 != 0 goto label31;

        if z2 == 0 goto label32;

     label31:
        if z7 != 0 goto label32;

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void peekDrawer(int)>(80);

        goto label35;

     label32:
        if z8 == 0 goto label33;

        if z34 == 0 goto label33;

        if z7 != 0 goto label33;

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void peekDrawer(int)>(80);

        goto label35;

     label33:
        if z0 != 0 goto label34;

        if z8 != 0 goto label35;

        if z1 == 0 goto label35;

     label34:
        if z7 == 0 goto label35;

        $r5 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        $z9 = specialinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean isClosingPeek(androidx.wear.widget.drawer.WearableDrawerView)>($r5);

        if $z9 != 0 goto label35;

        $r6 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void closeDrawer(androidx.wear.widget.drawer.WearableDrawerView)>($r6);

     label35:
        return;
    }

    private void maybePeekDrawer(androidx.wear.widget.drawer.WearableDrawerView)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        androidx.wear.widget.drawer.WearableDrawerView r1;
        android.view.ViewGroup r2;
        android.view.View r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.ViewGroup$LayoutParams $r4;
        android.widget.FrameLayout$LayoutParams $r5;
        androidx.customview.widget.ViewDragHelper $r6, $r7;
        boolean $z1;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: androidx.wear.widget.drawer.WearableDrawerView;

        if r1 != null goto label1;

        return;

     label1:
        r2 = virtualinvoke r1.<androidx.wear.widget.drawer.WearableDrawerView: android.view.ViewGroup getPeekContainer()>();

        if r2 != null goto label2;

        return;

     label2:
        r3 = virtualinvoke r1.<androidx.wear.widget.drawer.WearableDrawerView: android.view.View getDrawerContent()>();

        $r4 = virtualinvoke r1.<androidx.wear.widget.drawer.WearableDrawerView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (android.widget.FrameLayout$LayoutParams) $r4;

        i0 = $r5.<android.widget.FrameLayout$LayoutParams: int gravity>;

        if i0 != 0 goto label3;

        $i9 = virtualinvoke r1.<androidx.wear.widget.drawer.WearableDrawerView: int preferGravity()>();

        goto label4;

     label3:
        $i9 = i0;

     label4:
        i1 = $i9;

        virtualinvoke r1.<androidx.wear.widget.drawer.WearableDrawerView: void setIsPeeking(boolean)>(1);

        virtualinvoke r2.<android.view.View: void setAlpha(float)>(1.0F);

        virtualinvoke r2.<android.view.View: void setScaleX(float)>(1.0F);

        virtualinvoke r2.<android.view.View: void setScaleY(float)>(1.0F);

        virtualinvoke r2.<android.view.View: void setVisibility(int)>(0);

        if r3 == null goto label5;

        virtualinvoke r3.<android.view.View: void setAlpha(float)>(0.0F);

        virtualinvoke r3.<android.view.View: void setVisibility(int)>(8);

     label5:
        if i1 != 80 goto label6;

        $r7 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mBottomDrawerDragger>;

        $i6 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int getHeight()>();

        $i7 = virtualinvoke r2.<android.view.View: int getHeight()>();

        $i8 = $i6 - $i7;

        virtualinvoke $r7.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, 0, $i8);

        goto label7;

     label6:
        if i1 != 48 goto label7;

        $r6 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.customview.widget.ViewDragHelper mTopDrawerDragger>;

        $i2 = virtualinvoke r1.<androidx.wear.widget.drawer.WearableDrawerView: int getHeight()>();

        $i3 = virtualinvoke r2.<android.view.View: int getHeight()>();

        $i4 = $i2 - $i3;

        $i5 = neg $i4;

        virtualinvoke $r6.<androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, 0, $i5);

        $z1 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mIsAccessibilityEnabled>;

        if $z1 != 0 goto label7;

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void closeDrawerDelayed(int,long)>(i1, 1000L);

     label7:
        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void invalidate()>();

        return;
    }

    void openDrawerWithoutAnimation(androidx.wear.widget.drawer.WearableDrawerView)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        androidx.wear.widget.drawer.WearableDrawerView r1, $r2, $r3, $r4, $r7;
        int $i1, i2;
        androidx.wear.widget.drawer.WearableDrawerLayout$DrawerStateCallback $r5, $r6;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: androidx.wear.widget.drawer.WearableDrawerView;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        if r1 != $r2 goto label2;

        $r7 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        i2 = virtualinvoke $r7.<androidx.wear.widget.drawer.WearableDrawerView: int getHeight()>();

        goto label4;

     label2:
        $r3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        if r1 != $r3 goto label3;

        $r4 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        $i1 = virtualinvoke $r4.<androidx.wear.widget.drawer.WearableDrawerView: int getHeight()>();

        i2 = neg $i1;

        goto label4;

     label3:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WearableDrawerLayout", "openDrawer(View) should be passed in the top or bottom drawer");

        return;

     label4:
        virtualinvoke r1.<androidx.wear.widget.drawer.WearableDrawerView: void offsetTopAndBottom(int)>(i2);

        virtualinvoke r1.<androidx.wear.widget.drawer.WearableDrawerView: void setOpenedPercent(float)>(1.0F);

        virtualinvoke r1.<androidx.wear.widget.drawer.WearableDrawerView: void onDrawerOpened()>();

        $r5 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerLayout$DrawerStateCallback mDrawerStateCallback>;

        if $r5 == null goto label5;

        $r6 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerLayout$DrawerStateCallback mDrawerStateCallback>;

        virtualinvoke $r6.<androidx.wear.widget.drawer.WearableDrawerLayout$DrawerStateCallback: void onDrawerOpened(androidx.wear.widget.drawer.WearableDrawerLayout,androidx.wear.widget.drawer.WearableDrawerView)>(r0, r1);

     label5:
        staticinvoke <androidx.wear.widget.drawer.WearableDrawerLayout: void showDrawerContentMaybeAnimate(androidx.wear.widget.drawer.WearableDrawerView)>(r1);

        virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: void invalidate()>();

        return;
    }

    androidx.wear.widget.drawer.WearableDrawerView findDrawerWithGravity(int)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        int i0;
        androidx.wear.widget.drawer.WearableDrawerView $r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 48: goto label1;
            case 80: goto label2;
            default: goto label3;
        };

     label1:
        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mTopDrawerView>;

        return $r2;

     label2:
        $r1 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.wear.widget.drawer.WearableDrawerView mBottomDrawerView>;

        return $r1;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid drawer gravity: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WearableDrawerLayout", $r6);

        return null;
    }

    private void maybeUpdateScrollingContentView(android.view.View)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.View r1, $r2;
        boolean $z0;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.view.View mScrollingContentView>;

        if r1 == $r2 goto label1;

        $z0 = specialinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean isDrawerOrChildOfDrawer(android.view.View)>(r1);

        if $z0 != 0 goto label1;

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.view.View mScrollingContentView> = r1;

     label1:
        return;
    }

    private boolean isDrawerOrChildOfDrawer(android.view.View)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        boolean $z0;
        android.view.ViewParent $r1;
        android.view.View r2;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r2 := @parameter0: android.view.View;

     label1:
        if r2 == null goto label3;

        if r2 == r0 goto label3;

        $z0 = r2 instanceof androidx.wear.widget.drawer.WearableDrawerView;

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r1 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        r2 = (android.view.View) $r1;

        goto label1;

     label3:
        return 0;
    }

    private boolean isClosingPeek(androidx.wear.widget.drawer.WearableDrawerView)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        androidx.wear.widget.drawer.WearableDrawerView r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: androidx.wear.widget.drawer.WearableDrawerView;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<androidx.wear.widget.drawer.WearableDrawerView: int getDrawerState()>();

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.View r1, r2;
        int i0;
        androidx.core.view.NestedScrollingParentHelper $r3;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $r3 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        virtualinvoke $r3.<androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)>(r1, r2, i0);

        return;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.View r1, r2;
        int i0;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int mCurrentNestedScrollSlopTracker> = 0;

        return 1;
    }

    public void onStopNestedScroll(android.view.View)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        android.view.View r1;
        androidx.core.view.NestedScrollingParentHelper $r2;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        virtualinvoke $r2.<androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View)>(r1);

        return;
    }

    boolean canDrawerContentScrollVertically(androidx.wear.widget.drawer.WearableDrawerView, int)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        androidx.wear.widget.drawer.WearableDrawerView r1;
        int i0;
        android.view.View r2;
        boolean $z0;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: androidx.wear.widget.drawer.WearableDrawerView;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r1.<androidx.wear.widget.drawer.WearableDrawerView: android.view.View getDrawerContent()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $z0 = virtualinvoke r2.<android.view.View: boolean canScrollVertically(int)>(i0);

        return $z0;
    }

    void allowAccessibilityFocusOnAllChildren()
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        boolean $z0;
        int $i0, i1;
        android.view.View $r1;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        $z0 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mIsAccessibilityEnabled>;

        if $z0 != 0 goto label1;

        return;

     label1:
        i1 = 0;

     label2:
        $i0 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int getChildCount()>();

        if i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.view.View getChildAt(int)>(i1);

        virtualinvoke $r1.<android.view.View: void setImportantForAccessibility(int)>(1);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    void allowAccessibilityFocusOnOnly(androidx.wear.widget.drawer.WearableDrawerView)
    {
        androidx.wear.widget.drawer.WearableDrawerLayout r0;
        androidx.wear.widget.drawer.WearableDrawerView r1;
        android.view.View r2;
        boolean $z0;
        int $i0, i1;

        r0 := @this: androidx.wear.widget.drawer.WearableDrawerLayout;

        r1 := @parameter0: androidx.wear.widget.drawer.WearableDrawerView;

        $z0 = r0.<androidx.wear.widget.drawer.WearableDrawerLayout: boolean mIsAccessibilityEnabled>;

        if $z0 != 0 goto label1;

        return;

     label1:
        i1 = 0;

     label2:
        $i0 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: int getChildCount()>();

        if i1 >= $i0 goto label4;

        r2 = virtualinvoke r0.<androidx.wear.widget.drawer.WearableDrawerLayout: android.view.View getChildAt(int)>(i1);

        if r2 == r1 goto label3;

        virtualinvoke r2.<android.view.View: void setImportantForAccessibility(int)>(4);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return;
    }

