androidx.camera.video.internal.encoder.BufferCopiedEncodedData
<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: java.nio.ByteBuffer mByteBuffer>
<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: android.media.MediaCodec$BufferInfo mBufferInfo>
<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: com.google.common.util.concurrent.ListenableFuture mClosedFuture>
<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mClosedCompleter>
    public void <init>(androidx.camera.video.internal.encoder.EncodedData)
    {
        androidx.camera.video.internal.encoder.BufferCopiedEncodedData r0;
        androidx.camera.video.internal.encoder.EncodedData r1;
        java.util.concurrent.atomic.AtomicReference r2, $r5;
        android.media.MediaCodec$BufferInfo $r3;
        java.nio.ByteBuffer $r4;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r6;
        com.google.common.util.concurrent.ListenableFuture $r7;
        java.lang.Object $r8, $r10;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r9, $r11;

        r0 := @this: androidx.camera.video.internal.encoder.BufferCopiedEncodedData;

        r1 := @parameter0: androidx.camera.video.internal.encoder.EncodedData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = specialinvoke r0.<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: android.media.MediaCodec$BufferInfo generateCopiedByteInfo(androidx.camera.video.internal.encoder.EncodedData)>(r1);

        r0.<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: android.media.MediaCodec$BufferInfo mBufferInfo> = $r3;

        $r4 = specialinvoke r0.<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: java.nio.ByteBuffer generateCopiedByteBuffer(androidx.camera.video.internal.encoder.EncodedData)>(r1);

        r0.<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: java.nio.ByteBuffer mByteBuffer> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r2 = $r5;

        $r6 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (java.util.concurrent.atomic.AtomicReference)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.video.internal.encoder.BufferCopiedEncodedData: java.lang.Object lambda$new$0(java.util.concurrent.atomic.AtomicReference,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r7 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r6);

        r0.<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: com.google.common.util.concurrent.ListenableFuture mClosedFuture> = $r7;

        $r8 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r9 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r8;

        $r10 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r9);

        $r11 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r10;

        r0.<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mClosedCompleter> = $r11;

        return;
    }

    private android.media.MediaCodec$BufferInfo generateCopiedByteInfo(androidx.camera.video.internal.encoder.EncodedData)
    {
        androidx.camera.video.internal.encoder.BufferCopiedEncodedData r0;
        androidx.camera.video.internal.encoder.EncodedData r1;
        android.media.MediaCodec$BufferInfo r2, r3, $r4;
        int $i0, $i2;
        long $l1;

        r0 := @this: androidx.camera.video.internal.encoder.BufferCopiedEncodedData;

        r1 := @parameter0: androidx.camera.video.internal.encoder.EncodedData;

        r2 = interfaceinvoke r1.<androidx.camera.video.internal.encoder.EncodedData: android.media.MediaCodec$BufferInfo getBufferInfo()>();

        $r4 = new android.media.MediaCodec$BufferInfo;

        specialinvoke $r4.<android.media.MediaCodec$BufferInfo: void <init>()>();

        r3 = $r4;

        $i2 = r2.<android.media.MediaCodec$BufferInfo: int size>;

        $l1 = r2.<android.media.MediaCodec$BufferInfo: long presentationTimeUs>;

        $i0 = r2.<android.media.MediaCodec$BufferInfo: int flags>;

        virtualinvoke r3.<android.media.MediaCodec$BufferInfo: void set(int,int,long,int)>(0, $i2, $l1, $i0);

        return r3;
    }

    private java.nio.ByteBuffer generateCopiedByteBuffer(androidx.camera.video.internal.encoder.EncodedData)
    {
        androidx.camera.video.internal.encoder.BufferCopiedEncodedData r0;
        androidx.camera.video.internal.encoder.EncodedData r1;
        java.nio.ByteBuffer r2, r4;
        android.media.MediaCodec$BufferInfo r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.nio.ByteOrder $r7;

        r0 := @this: androidx.camera.video.internal.encoder.BufferCopiedEncodedData;

        r1 := @parameter0: androidx.camera.video.internal.encoder.EncodedData;

        r2 = interfaceinvoke r1.<androidx.camera.video.internal.encoder.EncodedData: java.nio.ByteBuffer getByteBuffer()>();

        r3 = interfaceinvoke r1.<androidx.camera.video.internal.encoder.EncodedData: android.media.MediaCodec$BufferInfo getBufferInfo()>();

        $i0 = r3.<android.media.MediaCodec$BufferInfo: int offset>;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

        $i2 = r3.<android.media.MediaCodec$BufferInfo: int offset>;

        $i1 = r3.<android.media.MediaCodec$BufferInfo: int size>;

        $i3 = $i2 + $i1;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i3);

        $i4 = r3.<android.media.MediaCodec$BufferInfo: int size>;

        r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i4);

        $r7 = virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteOrder order()>();

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r7);

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>(r2);

        virtualinvoke r4.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        return r4;
    }

    public java.nio.ByteBuffer getByteBuffer()
    {
        androidx.camera.video.internal.encoder.BufferCopiedEncodedData r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: androidx.camera.video.internal.encoder.BufferCopiedEncodedData;

        $r1 = r0.<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: java.nio.ByteBuffer mByteBuffer>;

        return $r1;
    }

    public android.media.MediaCodec$BufferInfo getBufferInfo()
    {
        androidx.camera.video.internal.encoder.BufferCopiedEncodedData r0;
        android.media.MediaCodec$BufferInfo $r1;

        r0 := @this: androidx.camera.video.internal.encoder.BufferCopiedEncodedData;

        $r1 = r0.<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: android.media.MediaCodec$BufferInfo mBufferInfo>;

        return $r1;
    }

    public long getPresentationTimeUs()
    {
        androidx.camera.video.internal.encoder.BufferCopiedEncodedData r0;
        android.media.MediaCodec$BufferInfo $r1;
        long $l0;

        r0 := @this: androidx.camera.video.internal.encoder.BufferCopiedEncodedData;

        $r1 = r0.<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: android.media.MediaCodec$BufferInfo mBufferInfo>;

        $l0 = $r1.<android.media.MediaCodec$BufferInfo: long presentationTimeUs>;

        return $l0;
    }

    public long size()
    {
        androidx.camera.video.internal.encoder.BufferCopiedEncodedData r0;
        android.media.MediaCodec$BufferInfo $r1;
        int $i0;
        long $l1;

        r0 := @this: androidx.camera.video.internal.encoder.BufferCopiedEncodedData;

        $r1 = r0.<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: android.media.MediaCodec$BufferInfo mBufferInfo>;

        $i0 = $r1.<android.media.MediaCodec$BufferInfo: int size>;

        $l1 = (long) $i0;

        return $l1;
    }

    public boolean isKeyFrame()
    {
        androidx.camera.video.internal.encoder.BufferCopiedEncodedData r0;
        android.media.MediaCodec$BufferInfo $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.camera.video.internal.encoder.BufferCopiedEncodedData;

        $r1 = r0.<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: android.media.MediaCodec$BufferInfo mBufferInfo>;

        $i0 = $r1.<android.media.MediaCodec$BufferInfo: int flags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void close()
    {
        androidx.camera.video.internal.encoder.BufferCopiedEncodedData r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r1;

        r0 := @this: androidx.camera.video.internal.encoder.BufferCopiedEncodedData;

        $r1 = r0.<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: androidx.concurrent.futures.CallbackToFutureAdapter$Completer mClosedCompleter>;

        virtualinvoke $r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>(null);

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture getClosedFuture()
    {
        androidx.camera.video.internal.encoder.BufferCopiedEncodedData r0;
        com.google.common.util.concurrent.ListenableFuture $r1, $r2;

        r0 := @this: androidx.camera.video.internal.encoder.BufferCopiedEncodedData;

        $r1 = r0.<androidx.camera.video.internal.encoder.BufferCopiedEncodedData: com.google.common.util.concurrent.ListenableFuture mClosedFuture>;

        $r2 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture)>($r1);

        return $r2;
    }

    private static java.lang.Object lambda$new$0(java.util.concurrent.atomic.AtomicReference, androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        java.util.concurrent.atomic.AtomicReference r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;

        r0 := @parameter0: java.util.concurrent.atomic.AtomicReference;

        r1 := @parameter1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        virtualinvoke r0.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r1);

        return "Data closed";
    }

