androidx.databinding.adapters.ViewBindingAdapter
<androidx.databinding.adapters.ViewBindingAdapter: int FADING_EDGE_NONE>
<androidx.databinding.adapters.ViewBindingAdapter: int FADING_EDGE_HORIZONTAL>
<androidx.databinding.adapters.ViewBindingAdapter: int FADING_EDGE_VERTICAL>
    public void <init>()
    {
        androidx.databinding.adapters.ViewBindingAdapter r0;

        r0 := @this: androidx.databinding.adapters.ViewBindingAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setPadding(android.view.View, float)
    {
        android.view.View r0;
        float f0;
        int i0;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        i0 = staticinvoke <androidx.databinding.adapters.ViewBindingAdapter: int pixelsToDimensionPixelSize(float)>(f0);

        virtualinvoke r0.<android.view.View: void setPadding(int,int,int,int)>(i0, i0, i0, i0);

        return;
    }

    public static void setPaddingBottom(android.view.View, float)
    {
        android.view.View r0;
        float f0;
        int i0, $i1, $i2, $i3;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        i0 = staticinvoke <androidx.databinding.adapters.ViewBindingAdapter: int pixelsToDimensionPixelSize(float)>(f0);

        $i1 = virtualinvoke r0.<android.view.View: int getPaddingLeft()>();

        $i2 = virtualinvoke r0.<android.view.View: int getPaddingTop()>();

        $i3 = virtualinvoke r0.<android.view.View: int getPaddingRight()>();

        virtualinvoke r0.<android.view.View: void setPadding(int,int,int,int)>($i1, $i2, $i3, i0);

        return;
    }

    public static void setPaddingEnd(android.view.View, float)
    {
        android.view.View r0;
        float f0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        i0 = staticinvoke <androidx.databinding.adapters.ViewBindingAdapter: int pixelsToDimensionPixelSize(float)>(f0);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label1;

        $i5 = virtualinvoke r0.<android.view.View: int getPaddingStart()>();

        $i6 = virtualinvoke r0.<android.view.View: int getPaddingTop()>();

        $i7 = virtualinvoke r0.<android.view.View: int getPaddingBottom()>();

        virtualinvoke r0.<android.view.View: void setPaddingRelative(int,int,int,int)>($i5, $i6, i0, $i7);

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<android.view.View: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<android.view.View: int getPaddingTop()>();

        $i4 = virtualinvoke r0.<android.view.View: int getPaddingBottom()>();

        virtualinvoke r0.<android.view.View: void setPadding(int,int,int,int)>($i2, $i3, i0, $i4);

     label2:
        return;
    }

    public static void setPaddingLeft(android.view.View, float)
    {
        android.view.View r0;
        float f0;
        int i0, $i1, $i2, $i3;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        i0 = staticinvoke <androidx.databinding.adapters.ViewBindingAdapter: int pixelsToDimensionPixelSize(float)>(f0);

        $i1 = virtualinvoke r0.<android.view.View: int getPaddingTop()>();

        $i2 = virtualinvoke r0.<android.view.View: int getPaddingRight()>();

        $i3 = virtualinvoke r0.<android.view.View: int getPaddingBottom()>();

        virtualinvoke r0.<android.view.View: void setPadding(int,int,int,int)>(i0, $i1, $i2, $i3);

        return;
    }

    public static void setPaddingRight(android.view.View, float)
    {
        android.view.View r0;
        float f0;
        int i0, $i1, $i2, $i3;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        i0 = staticinvoke <androidx.databinding.adapters.ViewBindingAdapter: int pixelsToDimensionPixelSize(float)>(f0);

        $i1 = virtualinvoke r0.<android.view.View: int getPaddingLeft()>();

        $i2 = virtualinvoke r0.<android.view.View: int getPaddingTop()>();

        $i3 = virtualinvoke r0.<android.view.View: int getPaddingBottom()>();

        virtualinvoke r0.<android.view.View: void setPadding(int,int,int,int)>($i1, $i2, i0, $i3);

        return;
    }

    public static void setPaddingStart(android.view.View, float)
    {
        android.view.View r0;
        float f0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        i0 = staticinvoke <androidx.databinding.adapters.ViewBindingAdapter: int pixelsToDimensionPixelSize(float)>(f0);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label1;

        $i5 = virtualinvoke r0.<android.view.View: int getPaddingTop()>();

        $i6 = virtualinvoke r0.<android.view.View: int getPaddingEnd()>();

        $i7 = virtualinvoke r0.<android.view.View: int getPaddingBottom()>();

        virtualinvoke r0.<android.view.View: void setPaddingRelative(int,int,int,int)>(i0, $i5, $i6, $i7);

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<android.view.View: int getPaddingTop()>();

        $i3 = virtualinvoke r0.<android.view.View: int getPaddingRight()>();

        $i4 = virtualinvoke r0.<android.view.View: int getPaddingBottom()>();

        virtualinvoke r0.<android.view.View: void setPadding(int,int,int,int)>(i0, $i2, $i3, $i4);

     label2:
        return;
    }

    public static void setPaddingTop(android.view.View, float)
    {
        android.view.View r0;
        float f0;
        int i0, $i1, $i2, $i3;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        i0 = staticinvoke <androidx.databinding.adapters.ViewBindingAdapter: int pixelsToDimensionPixelSize(float)>(f0);

        $i1 = virtualinvoke r0.<android.view.View: int getPaddingLeft()>();

        $i2 = virtualinvoke r0.<android.view.View: int getPaddingRight()>();

        $i3 = virtualinvoke r0.<android.view.View: int getPaddingBottom()>();

        virtualinvoke r0.<android.view.View: void setPadding(int,int,int,int)>($i1, i0, $i2, $i3);

        return;
    }

    public static void setRequiresFadingEdge(android.view.View, int)
    {
        android.view.View r0;
        int i0, $i1, $i2;
        boolean z0, z1, $z2, $z3;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        $i2 = i0 & 1;

        if $i2 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z1 = $z3;

        virtualinvoke r0.<android.view.View: void setVerticalFadingEdgeEnabled(boolean)>(z0);

        virtualinvoke r0.<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)>(z1);

        return;
    }

    public static void setClickListener(android.view.View, android.view.View$OnClickListener, boolean)
    {
        android.view.View r0;
        android.view.View$OnClickListener r1;
        boolean z0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View$OnClickListener;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r1);

        virtualinvoke r0.<android.view.View: void setClickable(boolean)>(z0);

        return;
    }

    public static void setOnClick(android.view.View, android.view.View$OnClickListener, boolean)
    {
        android.view.View r0;
        android.view.View$OnClickListener r1;
        boolean z0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View$OnClickListener;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r1);

        virtualinvoke r0.<android.view.View: void setClickable(boolean)>(z0);

        return;
    }

    public static void setOnLongClickListener(android.view.View, android.view.View$OnLongClickListener, boolean)
    {
        android.view.View r0;
        android.view.View$OnLongClickListener r1;
        boolean z0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View$OnLongClickListener;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r1);

        virtualinvoke r0.<android.view.View: void setLongClickable(boolean)>(z0);

        return;
    }

    public static void setOnLongClick(android.view.View, android.view.View$OnLongClickListener, boolean)
    {
        android.view.View r0;
        android.view.View$OnLongClickListener r1;
        boolean z0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View$OnLongClickListener;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r1);

        virtualinvoke r0.<android.view.View: void setLongClickable(boolean)>(z0);

        return;
    }

    public static void setOnAttachStateChangeListener(android.view.View, androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow, androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow)
    {
        android.view.View r0;
        androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow r1;
        androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow r2;
        android.view.View$OnAttachStateChangeListener r3;
        androidx.databinding.adapters.ViewBindingAdapter$1 $r4, r5;
        int $i0;
        java.lang.Object $r6;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow;

        r2 := @parameter2: androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow;

        if r1 != null goto label1;

        if r2 != null goto label1;

        r5 = null;

        goto label2;

     label1:
        $r4 = new androidx.databinding.adapters.ViewBindingAdapter$1;

        specialinvoke $r4.<androidx.databinding.adapters.ViewBindingAdapter$1: void <init>(androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow,androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow)>(r2, r1);

        r5 = $r4;

     label2:
        $i0 = <androidx.databinding.library.baseAdapters.R$id: int onAttachStateChangeListener>;

        $r6 = staticinvoke <androidx.databinding.adapters.ListenerUtil: java.lang.Object trackListener(android.view.View,java.lang.Object,int)>(r0, r5, $i0);

        r3 = (android.view.View$OnAttachStateChangeListener) $r6;

        if r3 == null goto label3;

        virtualinvoke r0.<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>(r3);

     label3:
        if r5 == null goto label4;

        virtualinvoke r0.<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>(r5);

     label4:
        return;
    }

    public static void setOnLayoutChangeListener(android.view.View, android.view.View$OnLayoutChangeListener, android.view.View$OnLayoutChangeListener)
    {
        android.view.View r0;
        android.view.View$OnLayoutChangeListener r1, r2;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View$OnLayoutChangeListener;

        r2 := @parameter2: android.view.View$OnLayoutChangeListener;

        if r1 == null goto label1;

        virtualinvoke r0.<android.view.View: void removeOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>(r1);

     label1:
        if r2 == null goto label2;

        virtualinvoke r0.<android.view.View: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>(r2);

     label2:
        return;
    }

    public static void setBackground(android.view.View, android.graphics.drawable.Drawable)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1;
        int $i0;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        virtualinvoke r0.<android.view.View: void setBackground(android.graphics.drawable.Drawable)>(r1);

        goto label2;

     label1:
        virtualinvoke r0.<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(r1);

     label2:
        return;
    }

    private static int pixelsToDimensionPixelSize(float)
    {
        float f0, $f1;
        int i0;
        byte $b1, $b2;

        f0 := @parameter0: float;

        $f1 = f0 + 0.5F;

        i0 = (int) $f1;

        if i0 == 0 goto label1;

        return i0;

     label1:
        $b1 = f0 cmpl 0.0F;

        if $b1 != 0 goto label2;

        return 0;

     label2:
        $b2 = f0 cmpl 0.0F;

        if $b2 <= 0 goto label3;

        return 1;

     label3:
        return -1;
    }

androidx.databinding.adapters.ViewBindingAdapter$1
<androidx.databinding.adapters.ViewBindingAdapter$1: androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow val$attach>
<androidx.databinding.adapters.ViewBindingAdapter$1: androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow val$detach>
    void <init>(androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow, androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow)
    {
        androidx.databinding.adapters.ViewBindingAdapter$1 r0;
        androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow r1;
        androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow r2;

        r0 := @this: androidx.databinding.adapters.ViewBindingAdapter$1;

        r1 := @parameter0: androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow;

        r2 := @parameter1: androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow;

        r0.<androidx.databinding.adapters.ViewBindingAdapter$1: androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow val$attach> = r1;

        r0.<androidx.databinding.adapters.ViewBindingAdapter$1: androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow val$detach> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onViewAttachedToWindow(android.view.View)
    {
        androidx.databinding.adapters.ViewBindingAdapter$1 r0;
        android.view.View r1;
        androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow $r2, $r3;

        r0 := @this: androidx.databinding.adapters.ViewBindingAdapter$1;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.databinding.adapters.ViewBindingAdapter$1: androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow val$attach>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.databinding.adapters.ViewBindingAdapter$1: androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow val$attach>;

        interfaceinvoke $r3.<androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow: void onViewAttachedToWindow(android.view.View)>(r1);

     label1:
        return;
    }

    public void onViewDetachedFromWindow(android.view.View)
    {
        androidx.databinding.adapters.ViewBindingAdapter$1 r0;
        android.view.View r1;
        androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow $r2, $r3;

        r0 := @this: androidx.databinding.adapters.ViewBindingAdapter$1;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.databinding.adapters.ViewBindingAdapter$1: androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow val$detach>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.databinding.adapters.ViewBindingAdapter$1: androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow val$detach>;

        interfaceinvoke $r3.<androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow: void onViewDetachedFromWindow(android.view.View)>(r1);

     label1:
        return;
    }

androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow
<androidx.databinding.adapters.ViewBindingAdapter$OnViewAttachedToWindow: void onViewAttachedToWindow(android.view.View)>
androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow
<androidx.databinding.adapters.ViewBindingAdapter$OnViewDetachedFromWindow: void onViewDetachedFromWindow(android.view.View)>
