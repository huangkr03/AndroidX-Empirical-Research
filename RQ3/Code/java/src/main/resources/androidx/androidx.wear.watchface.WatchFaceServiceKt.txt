androidx.wear.watchface.WatchFaceServiceKt
<androidx.wear.watchface.WatchFaceServiceKt: long SURFACE_DRAW_TIMEOUT_MS>
    public static final java.lang.Object runBlockingOnHandlerWithTracing(android.os.Handler, java.lang.String, kotlin.jvm.functions.Function0)
    {
        android.os.Handler $r0;
        java.lang.String r1;
        kotlin.jvm.functions.Function0 r2;
        java.io.Closeable r3;
        boolean z0, $z2, $z3, z4;
        java.util.concurrent.CountDownLatch r4, r29;
        kotlin.jvm.internal.Ref$ObjectRef r5, r6, r30, r31;
        java.lang.Object r7, $r16, $r23, r24;
        android.os.Looper $r9, $r10;
        java.lang.Runnable $r15;
        java.lang.Exception $r17;
        java.lang.Throwable $r19, $r20, r21, r25, r26, r27, r34;
        androidx.wear.utility.TraceEvent r22, r28;
        androidx.wear.watchface.WatchFaceServiceKt$runBlockingOnHandlerWithTracing$1$1 r32;
        java.lang.NullPointerException r33;

        $r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "traceEventName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "task");

        r28 = new androidx.wear.utility.TraceEvent;

        specialinvoke r28.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>(r1);

        r3 = (java.io.Closeable) r28;

        z0 = 0;

        z4 = 0;

        r21 = (java.lang.Throwable) null;

     label01:
        r22 = (androidx.wear.utility.TraceEvent) r3;

        $r9 = virtualinvoke $r0.<android.os.Handler: android.os.Looper getLooper()>();

        $r10 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r9, $r10);

        if $z2 == 0 goto label02;

        $r23 = interfaceinvoke r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        goto label05;

     label02:
        r29 = new java.util.concurrent.CountDownLatch;

        specialinvoke r29.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r4 = r29;

        r30 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r30.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r5 = r30;

        r31 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r31.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r6 = r31;

        r32 = new androidx.wear.watchface.WatchFaceServiceKt$runBlockingOnHandlerWithTracing$1$1;

        specialinvoke r32.<androidx.wear.watchface.WatchFaceServiceKt$runBlockingOnHandlerWithTracing$1$1: void <init>(kotlin.jvm.internal.Ref$ObjectRef,java.lang.String,kotlin.jvm.internal.Ref$ObjectRef,java.util.concurrent.CountDownLatch,kotlin.jvm.functions.Function0)>(r5, r1, r6, r4, r2);

        $r15 = (java.lang.Runnable) r32;

        $z3 = virtualinvoke $r0.<android.os.Handler: boolean post(java.lang.Runnable)>($r15);

        if $z3 == 0 goto label04;

        virtualinvoke r4.<java.util.concurrent.CountDownLatch: void await()>();

        $r16 = r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if $r16 == null goto label04;

        r7 = r6.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if r7 != null goto label03;

        r33 = new java.lang.NullPointerException;

        specialinvoke r33.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.Exception{ kotlin.TypeAliasesKt.Exception }");

        throw r33;

     label03:
        $r17 = (java.lang.Exception) r7;

        r34 = (java.lang.Throwable) $r17;

        throw r34;

     label04:
        $r23 = r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

     label05:
        r24 = $r23;

     label06:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r3, r21);

        goto label10;

     label07:
        $r20 := @caughtexception;

        r25 = $r20;

        r26 = r25;

        throw r25;

     label08:
        $r19 := @caughtexception;

        r27 = $r19;

     label09:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r3, r26);

        throw r27;

     label10:
        return r24;

        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static final java.lang.Object runOnHandlerWithTracing(android.os.Handler, java.lang.String, kotlin.jvm.functions.Function0)
    {
        android.os.Handler $r0;
        java.lang.String r1;
        kotlin.jvm.functions.Function0 r2;
        java.io.Closeable r3;
        boolean z0, $z2, $z3, z4;
        androidx.wear.utility.TraceEvent $r4, r13;
        android.os.Looper $r5, $r6;
        androidx.wear.watchface.WatchFaceServiceKt$runOnHandlerWithTracing$1$1 $r7;
        java.lang.Runnable $r8;
        java.lang.Throwable $r10, $r11, r12, r16, r17, r18;
        java.lang.Object $r14, r15;

        $r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "traceEventName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "task");

        $r4 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r4.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>(r1);

        r3 = (java.io.Closeable) $r4;

        z0 = 0;

        z4 = 0;

        r12 = (java.lang.Throwable) null;

     label1:
        r13 = (androidx.wear.utility.TraceEvent) r3;

        $r5 = virtualinvoke $r0.<android.os.Handler: android.os.Looper getLooper()>();

        $r6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z2 == 0 goto label2;

        interfaceinvoke r2.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r14 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        goto label3;

     label2:
        $r7 = new androidx.wear.watchface.WatchFaceServiceKt$runOnHandlerWithTracing$1$1;

        specialinvoke $r7.<androidx.wear.watchface.WatchFaceServiceKt$runOnHandlerWithTracing$1$1: void <init>(java.lang.String,kotlin.jvm.functions.Function0)>(r1, r2);

        $r8 = (java.lang.Runnable) $r7;

        $z3 = virtualinvoke $r0.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

     label3:
        r15 = $r14;

     label4:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r3, r12);

        goto label8;

     label5:
        $r10 := @caughtexception;

        r16 = $r10;

        r17 = r16;

        throw r16;

     label6:
        $r11 := @caughtexception;

        r18 = $r11;

     label7:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r3, r17);

        throw r18;

     label8:
        return r15;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static final java.lang.Object runBlockingWithTracing(kotlinx.coroutines.CoroutineScope, java.lang.String, kotlin.jvm.functions.Function1)
    {
        kotlinx.coroutines.CoroutineScope $r0;
        java.lang.String r1;
        kotlin.jvm.functions.Function1 r2;
        java.io.Closeable r3;
        boolean z0, z2;
        java.util.concurrent.CountDownLatch r4, $r8;
        kotlin.jvm.internal.Ref$ObjectRef r5, $r9;
        java.lang.Object r6, $r13;
        androidx.wear.utility.TraceEvent $r7, r17;
        androidx.wear.watchface.WatchFaceServiceKt$runBlockingWithTracing$1$1 $r10;
        kotlin.jvm.functions.Function2 $r11;
        java.lang.Throwable $r14, $r15, r16, r18, r19, r20;

        $r0 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "traceEventName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "task");

        $r7 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r7.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>(r1);

        r3 = (java.io.Closeable) $r7;

        z0 = 0;

        z2 = 0;

        r16 = (java.lang.Throwable) null;

     label1:
        r17 = (androidx.wear.utility.TraceEvent) r3;

        $r8 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r8.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r4 = $r8;

        $r9 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r9.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r5 = $r9;

        $r10 = new androidx.wear.watchface.WatchFaceServiceKt$runBlockingWithTracing$1$1;

        specialinvoke $r10.<androidx.wear.watchface.WatchFaceServiceKt$runBlockingWithTracing$1$1: void <init>(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function1,java.util.concurrent.CountDownLatch,kotlin.coroutines.Continuation)>(r5, r2, r4, null);

        $r11 = (kotlin.jvm.functions.Function2) $r10;

        staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r0, null, null, $r11, 3, null);

        virtualinvoke r4.<java.util.concurrent.CountDownLatch: void await()>();

        $r13 = r5.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r13);

        r6 = $r13;

     label2:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r3, r16);

        return r6;

     label3:
        $r15 := @caughtexception;

        r18 = $r15;

        r19 = r18;

        throw r18;

     label4:
        $r14 := @caughtexception;

        r20 = $r14;

     label5:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r3, r19);

        throw r20;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

