androidx.contentpager.content.InMemoryCursor
<androidx.contentpager.content.InMemoryCursor: int NUM_TYPES>
<androidx.contentpager.content.InMemoryCursor: java.lang.String[] mColumnNames>
<androidx.contentpager.content.InMemoryCursor: int mRowCount>
<androidx.contentpager.content.InMemoryCursor: int[][] mTypedColumnIndex>
<androidx.contentpager.content.InMemoryCursor: int[] mColumnType>
<androidx.contentpager.content.InMemoryCursor: int[] mColumnTypeCount>
<androidx.contentpager.content.InMemoryCursor: android.os.Bundle mExtras>
<androidx.contentpager.content.InMemoryCursor: androidx.contentpager.content.InMemoryCursor$ObserverRelay mObserverRelay>
<androidx.contentpager.content.InMemoryCursor: long[] mLongs>
<androidx.contentpager.content.InMemoryCursor: double[] mDoubles>
<androidx.contentpager.content.InMemoryCursor: byte[][] mBlobs>
<androidx.contentpager.content.InMemoryCursor: java.lang.String[] mStrings>
    void <init>(android.database.Cursor, int, int, int)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        android.database.Cursor r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i28, i29, i30, i31, i32;
        androidx.contentpager.content.InMemoryCursor$ObserverRelay $r2;
        java.lang.String[] $r3, $r16, $r21;
        android.os.Bundle $r4, $r5;
        int[] $r6, $r8, $r9, $r11, $r13, $r15, $r17, $r18, $r27, $r29, $r30;
        int[][] $r7, $r28;
        boolean $z0, $z1, $z2;
        long[] $r10, $r24;
        double[] $r12, $r23;
        byte[][] $r14, $r19;
        byte[] $r20;
        java.lang.String $r22;
        double $d0;
        long $l26;
        java.lang.UnsupportedOperationException $r25;
        java.lang.RuntimeException $r26, $r31;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.database.AbstractCursor: void <init>()>();

        $i6 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        if i0 >= $i6 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z2);

        $r2 = new androidx.contentpager.content.InMemoryCursor$ObserverRelay;

        specialinvoke $r2.<androidx.contentpager.content.InMemoryCursor$ObserverRelay: void <init>(android.database.Cursor)>(r1);

        r0.<androidx.contentpager.content.InMemoryCursor: androidx.contentpager.content.InMemoryCursor$ObserverRelay mObserverRelay> = $r2;

        $r3 = interfaceinvoke r1.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        r0.<androidx.contentpager.content.InMemoryCursor: java.lang.String[] mColumnNames> = $r3;

        $i7 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        $i8 = $i7 - i0;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i8);

        r0.<androidx.contentpager.content.InMemoryCursor: int mRowCount> = $i9;

        i3 = interfaceinvoke r1.<android.database.Cursor: int getColumnCount()>();

        $r4 = interfaceinvoke r1.<android.database.Cursor: android.os.Bundle getExtras()>();

        $i10 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        $r5 = staticinvoke <androidx.contentpager.content.ContentPager: android.os.Bundle buildExtras(android.os.Bundle,int,int)>($r4, $i10, i2);

        r0.<androidx.contentpager.content.InMemoryCursor: android.os.Bundle mExtras> = $r5;

        $r6 = newarray (int)[i3];

        r0.<androidx.contentpager.content.InMemoryCursor: int[] mColumnType> = $r6;

        $r7 = newmultiarray (int)[5][i3];

        r0.<androidx.contentpager.content.InMemoryCursor: int[][] mTypedColumnIndex> = $r7;

        $r8 = newarray (int)[5];

        r0.<androidx.contentpager.content.InMemoryCursor: int[] mColumnTypeCount> = $r8;

        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label03;

        $r31 = new java.lang.RuntimeException;

        specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t position cursor to first row.");

        throw $r31;

     label03:
        i29 = 0;

     label04:
        if i29 >= i3 goto label05;

        i30 = interfaceinvoke r1.<android.database.Cursor: int getType(int)>(i29);

        $r27 = r0.<androidx.contentpager.content.InMemoryCursor: int[] mColumnType>;

        $r27[i29] = i30;

        $r28 = r0.<androidx.contentpager.content.InMemoryCursor: int[][] mTypedColumnIndex>;

        $r30 = $r28[i30];

        $r29 = r0.<androidx.contentpager.content.InMemoryCursor: int[] mColumnTypeCount>;

        $i27 = $r29[i30];

        $i28 = $i27 + 1;

        $r29[i30] = $i28;

        $r30[i29] = $i27;

        i29 = i29 + 1;

        goto label04;

     label05:
        $i12 = r0.<androidx.contentpager.content.InMemoryCursor: int mRowCount>;

        $r9 = r0.<androidx.contentpager.content.InMemoryCursor: int[] mColumnTypeCount>;

        $i11 = $r9[1];

        $i13 = $i12 * $i11;

        $r10 = newarray (long)[$i13];

        r0.<androidx.contentpager.content.InMemoryCursor: long[] mLongs> = $r10;

        $i15 = r0.<androidx.contentpager.content.InMemoryCursor: int mRowCount>;

        $r11 = r0.<androidx.contentpager.content.InMemoryCursor: int[] mColumnTypeCount>;

        $i14 = $r11[2];

        $i16 = $i15 * $i14;

        $r12 = newarray (double)[$i16];

        r0.<androidx.contentpager.content.InMemoryCursor: double[] mDoubles> = $r12;

        $i18 = r0.<androidx.contentpager.content.InMemoryCursor: int mRowCount>;

        $r13 = r0.<androidx.contentpager.content.InMemoryCursor: int[] mColumnTypeCount>;

        $i17 = $r13[4];

        $i19 = $i18 * $i17;

        $r14 = newarray (byte[])[$i19];

        r0.<androidx.contentpager.content.InMemoryCursor: byte[][] mBlobs> = $r14;

        $i21 = r0.<androidx.contentpager.content.InMemoryCursor: int mRowCount>;

        $r15 = r0.<androidx.contentpager.content.InMemoryCursor: int[] mColumnTypeCount>;

        $i20 = $r15[3];

        $i22 = $i21 * $i20;

        $r16 = newarray (java.lang.String)[$i22];

        r0.<androidx.contentpager.content.InMemoryCursor: java.lang.String[] mStrings> = $r16;

        i31 = 0;

     label06:
        $i23 = r0.<androidx.contentpager.content.InMemoryCursor: int mRowCount>;

        if i31 >= $i23 goto label16;

        $i24 = i0 + i31;

        $z1 = interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>($i24);

        if $z1 != 0 goto label07;

        $r26 = new java.lang.RuntimeException;

        specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unable to position cursor.");

        throw $r26;

     label07:
        i32 = 0;

     label08:
        $r17 = r0.<androidx.contentpager.content.InMemoryCursor: int[] mColumnType>;

        $i25 = lengthof $r17;

        if i32 >= $i25 goto label15;

        $r18 = r0.<androidx.contentpager.content.InMemoryCursor: int[] mColumnType>;

        i4 = $r18[i32];

        i5 = specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getCellPosition(int,int,int)>(i31, i32, i4);

        tableswitch(i4)
        {
            case 0: goto label09;
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label13;
            case 4: goto label12;
            default: goto label14;
        };

     label09:
        $r25 = new java.lang.UnsupportedOperationException;

        specialinvoke $r25.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented.");

        throw $r25;

     label10:
        $r24 = r0.<androidx.contentpager.content.InMemoryCursor: long[] mLongs>;

        $l26 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(i32);

        $r24[i5] = $l26;

        goto label14;

     label11:
        $r23 = r0.<androidx.contentpager.content.InMemoryCursor: double[] mDoubles>;

        $d0 = interfaceinvoke r1.<android.database.Cursor: double getDouble(int)>(i32);

        $r23[i5] = $d0;

        goto label14;

     label12:
        $r19 = r0.<androidx.contentpager.content.InMemoryCursor: byte[][] mBlobs>;

        $r20 = interfaceinvoke r1.<android.database.Cursor: byte[] getBlob(int)>(i32);

        $r19[i5] = $r20;

        goto label14;

     label13:
        $r21 = r0.<androidx.contentpager.content.InMemoryCursor: java.lang.String[] mStrings>;

        $r22 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i32);

        $r21[i5] = $r22;

     label14:
        i32 = i32 + 1;

        goto label08;

     label15:
        i31 = i31 + 1;

        goto label06;

     label16:
        return;
    }

    public android.os.Bundle getExtras()
    {
        androidx.contentpager.content.InMemoryCursor r0;
        android.os.Bundle $r1;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        $r1 = r0.<androidx.contentpager.content.InMemoryCursor: android.os.Bundle mExtras>;

        return $r1;
    }

    private int getCellPosition(int, int, int)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        int[] $r1, $r3;
        int[][] $r2;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<androidx.contentpager.content.InMemoryCursor: int[] mColumnTypeCount>;

        $i3 = $r1[i2];

        $i5 = i0 * $i3;

        $r2 = r0.<androidx.contentpager.content.InMemoryCursor: int[][] mTypedColumnIndex>;

        $r3 = $r2[i2];

        $i4 = $r3[i1];

        $i6 = $i5 + $i4;

        return $i6;
    }

    public int getCount()
    {
        androidx.contentpager.content.InMemoryCursor r0;
        int $i0;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        $i0 = r0.<androidx.contentpager.content.InMemoryCursor: int mRowCount>;

        return $i0;
    }

    public java.lang.String[] getColumnNames()
    {
        androidx.contentpager.content.InMemoryCursor r0;
        java.lang.String[] $r1;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        $r1 = r0.<androidx.contentpager.content.InMemoryCursor: java.lang.String[] mColumnNames>;

        return $r1;
    }

    public short getShort(int)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        int i0, $i1, $i2, $i4;
        long[] $r1;
        long $l3;
        short $s5;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidColumn(int)>(i0);

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidPosition()>();

        $r1 = r0.<androidx.contentpager.content.InMemoryCursor: long[] mLongs>;

        $i1 = virtualinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getPosition()>();

        $i2 = specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getCellPosition(int,int,int)>($i1, i0, 1);

        $l3 = $r1[$i2];

        $i4 = (int) $l3;

        $s5 = (short) $i4;

        return $s5;
    }

    public int getInt(int)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        int i0, $i1, $i2, $i4;
        long[] $r1;
        long $l3;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidColumn(int)>(i0);

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidPosition()>();

        $r1 = r0.<androidx.contentpager.content.InMemoryCursor: long[] mLongs>;

        $i1 = virtualinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getPosition()>();

        $i2 = specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getCellPosition(int,int,int)>($i1, i0, 1);

        $l3 = $r1[$i2];

        $i4 = (int) $l3;

        return $i4;
    }

    public long getLong(int)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        int i0, $i1, $i2;
        long[] $r1;
        long $l3;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidColumn(int)>(i0);

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidPosition()>();

        $r1 = r0.<androidx.contentpager.content.InMemoryCursor: long[] mLongs>;

        $i1 = virtualinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getPosition()>();

        $i2 = specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getCellPosition(int,int,int)>($i1, i0, 1);

        $l3 = $r1[$i2];

        return $l3;
    }

    public float getFloat(int)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        int i0, $i1, $i2;
        double[] $r1;
        double $d0;
        float $f0;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidColumn(int)>(i0);

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidPosition()>();

        $r1 = r0.<androidx.contentpager.content.InMemoryCursor: double[] mDoubles>;

        $i1 = virtualinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getPosition()>();

        $i2 = specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getCellPosition(int,int,int)>($i1, i0, 2);

        $d0 = $r1[$i2];

        $f0 = (float) $d0;

        return $f0;
    }

    public double getDouble(int)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        int i0, $i1, $i2;
        double[] $r1;
        double $d0;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidColumn(int)>(i0);

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidPosition()>();

        $r1 = r0.<androidx.contentpager.content.InMemoryCursor: double[] mDoubles>;

        $i1 = virtualinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getPosition()>();

        $i2 = specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getCellPosition(int,int,int)>($i1, i0, 2);

        $d0 = $r1[$i2];

        return $d0;
    }

    public byte[] getBlob(int)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        int i0, $i1, $i2;
        byte[][] $r1;
        byte[] $r2;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidColumn(int)>(i0);

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidPosition()>();

        $r1 = r0.<androidx.contentpager.content.InMemoryCursor: byte[][] mBlobs>;

        $i1 = virtualinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getPosition()>();

        $i2 = specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getCellPosition(int,int,int)>($i1, i0, 4);

        $r2 = $r1[$i2];

        return $r2;
    }

    public java.lang.String getString(int)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        int i0, $i1, $i2;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidColumn(int)>(i0);

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidPosition()>();

        $r1 = r0.<androidx.contentpager.content.InMemoryCursor: java.lang.String[] mStrings>;

        $i1 = virtualinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getPosition()>();

        $i2 = specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getCellPosition(int,int,int)>($i1, i0, 3);

        $r2 = $r1[$i2];

        return $r2;
    }

    public int getType(int)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidColumn(int)>(i0);

        $r1 = r0.<androidx.contentpager.content.InMemoryCursor: int[] mColumnType>;

        $i1 = $r1[i0];

        return $i1;
    }

    public boolean isNull(int)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        int i0, $i1;
        int[] $r1;
        byte[] $r2;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.contentpager.content.InMemoryCursor: void checkValidColumn(int)>(i0);

        $r1 = r0.<androidx.contentpager.content.InMemoryCursor: int[] mColumnType>;

        $i1 = $r1[i0];

        lookupswitch($i1)
        {
            case 3: goto label1;
            case 4: goto label4;
            default: goto label7;
        };

     label1:
        $r3 = virtualinvoke r0.<androidx.contentpager.content.InMemoryCursor: java.lang.String getString(int)>(i0);

        if $r3 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r2 = virtualinvoke r0.<androidx.contentpager.content.InMemoryCursor: byte[] getBlob(int)>(i0);

        if $r2 == null goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;

     label7:
        return 0;
    }

    private void checkValidPosition()
    {
        androidx.contentpager.content.InMemoryCursor r0;
        int $i0, $i1, $i2;
        android.database.CursorIndexOutOfBoundsException $r1, $r2;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        $i0 = virtualinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getPosition()>();

        if $i0 >= 0 goto label1;

        $r2 = new android.database.CursorIndexOutOfBoundsException;

        specialinvoke $r2.<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>("Before first row.");

        throw $r2;

     label1:
        $i1 = virtualinvoke r0.<androidx.contentpager.content.InMemoryCursor: int getPosition()>();

        $i2 = r0.<androidx.contentpager.content.InMemoryCursor: int mRowCount>;

        if $i1 < $i2 goto label2;

        $r1 = new android.database.CursorIndexOutOfBoundsException;

        specialinvoke $r1.<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>("After last row.");

        throw $r1;

     label2:
        return;
    }

    private void checkValidColumn(int)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        int i0, $i1, $i2;
        android.database.CursorIndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7;
        java.lang.String[] $r6, $r9;
        java.lang.String $r8;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r9 = r0.<androidx.contentpager.content.InMemoryCursor: java.lang.String[] mColumnNames>;

        $i2 = lengthof $r9;

        if i0 < $i2 goto label2;

     label1:
        $r1 = new android.database.CursorIndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested column: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", # of columns: ");

        $r6 = r0.<androidx.contentpager.content.InMemoryCursor: java.lang.String[] mColumnNames>;

        $i1 = lengthof $r6;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label2:
        return;
    }

    public void registerContentObserver(android.database.ContentObserver)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        android.database.ContentObserver r1;
        androidx.contentpager.content.InMemoryCursor$ObserverRelay $r2;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        r1 := @parameter0: android.database.ContentObserver;

        $r2 = r0.<androidx.contentpager.content.InMemoryCursor: androidx.contentpager.content.InMemoryCursor$ObserverRelay mObserverRelay>;

        virtualinvoke $r2.<androidx.contentpager.content.InMemoryCursor$ObserverRelay: void registerContentObserver(android.database.ContentObserver)>(r1);

        return;
    }

    public void unregisterContentObserver(android.database.ContentObserver)
    {
        androidx.contentpager.content.InMemoryCursor r0;
        android.database.ContentObserver r1;
        androidx.contentpager.content.InMemoryCursor$ObserverRelay $r2;

        r0 := @this: androidx.contentpager.content.InMemoryCursor;

        r1 := @parameter0: android.database.ContentObserver;

        $r2 = r0.<androidx.contentpager.content.InMemoryCursor: androidx.contentpager.content.InMemoryCursor$ObserverRelay mObserverRelay>;

        virtualinvoke $r2.<androidx.contentpager.content.InMemoryCursor$ObserverRelay: void unregisterContentObserver(android.database.ContentObserver)>(r1);

        return;
    }

androidx.contentpager.content.InMemoryCursor$ObserverRelay
<androidx.contentpager.content.InMemoryCursor$ObserverRelay: android.database.Cursor mCursor>
    void <init>(android.database.Cursor)
    {
        androidx.contentpager.content.InMemoryCursor$ObserverRelay r0;
        android.database.Cursor r1;
        android.os.Handler $r2;
        android.os.Looper $r3;

        r0 := @this: androidx.contentpager.content.InMemoryCursor$ObserverRelay;

        r1 := @parameter0: android.database.Cursor;

        $r2 = new android.os.Handler;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>($r2);

        r0.<androidx.contentpager.content.InMemoryCursor$ObserverRelay: android.database.Cursor mCursor> = r1;

        return;
    }

    void registerContentObserver(android.database.ContentObserver)
    {
        androidx.contentpager.content.InMemoryCursor$ObserverRelay r0;
        android.database.ContentObserver r1;
        android.database.Cursor $r2;

        r0 := @this: androidx.contentpager.content.InMemoryCursor$ObserverRelay;

        r1 := @parameter0: android.database.ContentObserver;

        $r2 = r0.<androidx.contentpager.content.InMemoryCursor$ObserverRelay: android.database.Cursor mCursor>;

        interfaceinvoke $r2.<android.database.Cursor: void registerContentObserver(android.database.ContentObserver)>(r1);

        return;
    }

    void unregisterContentObserver(android.database.ContentObserver)
    {
        androidx.contentpager.content.InMemoryCursor$ObserverRelay r0;
        android.database.ContentObserver r1;
        android.database.Cursor $r2;

        r0 := @this: androidx.contentpager.content.InMemoryCursor$ObserverRelay;

        r1 := @parameter0: android.database.ContentObserver;

        $r2 = r0.<androidx.contentpager.content.InMemoryCursor$ObserverRelay: android.database.Cursor mCursor>;

        interfaceinvoke $r2.<android.database.Cursor: void unregisterContentObserver(android.database.ContentObserver)>(r1);

        return;
    }

