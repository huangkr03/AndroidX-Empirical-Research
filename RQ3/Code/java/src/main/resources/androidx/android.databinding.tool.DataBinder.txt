android.databinding.tool.DataBinder
<android.databinding.tool.DataBinder: java.util.List mLayoutBinders>
<android.databinding.tool.DataBinder: java.lang.String mComponentClass>
<android.databinding.tool.DataBinder: android.databinding.tool.writer.JavaFileWriter mFileWriter>
<android.databinding.tool.DataBinder: java.util.Set mClassesToBeStripped>
<android.databinding.tool.DataBinder: boolean mEnableV2>
<android.databinding.tool.DataBinder: android.databinding.tool.LibTypes mLibTypes>
    public void <init>(android.databinding.tool.store.ResourceBundle, boolean, android.databinding.tool.LibTypes)
    {
        android.databinding.tool.DataBinder r0;
        android.databinding.tool.store.ResourceBundle r1;
        boolean z0, $z1, $z2, $z3, $z5;
        android.databinding.tool.LibTypes r2, $r9;
        android.databinding.tool.store.ResourceBundle$LayoutFileBundle r3, r29;
        java.lang.Throwable r4, $r26, $r27, r30;
        java.util.ArrayList $r5;
        java.util.HashSet $r6;
        java.lang.Object[] $r7;
        java.lang.StringBuilder $r8, $r11, $r12;
        java.lang.String $r10, $r13;
        java.util.HashMap $r14;
        java.util.Set $r15, $r22;
        java.lang.Object $r16, $r17, $r19, $r23;
        java.util.List $r18, $r21, $r25;
        android.databinding.tool.LayoutBinder $r20, $r24;
        java.util.Iterator r28, r31, r33;
        java.util.Map$Entry r32;

        r0 := @this: android.databinding.tool.DataBinder;

        r1 := @parameter0: android.databinding.tool.store.ResourceBundle;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.databinding.tool.LibTypes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.DataBinder: java.util.List mLayoutBinders> = $r5;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<android.databinding.tool.DataBinder: java.util.Set mClassesToBeStripped> = $r6;

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("reading resource bundle into data binder", $r7);

        r0.<android.databinding.tool.DataBinder: android.databinding.tool.LibTypes mLibTypes> = r2;

        r0.<android.databinding.tool.DataBinder: boolean mEnableV2> = z0;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<android.databinding.tool.DataBinder: android.databinding.tool.LibTypes mLibTypes>;

        $r10 = virtualinvoke $r9.<android.databinding.tool.LibTypes: java.lang.String getBindingPackage()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".DataBindingComponent");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.databinding.tool.DataBinder: java.lang.String mComponentClass> = $r13;

        $z1 = r0.<android.databinding.tool.DataBinder: boolean mEnableV2>;

        if $z1 == 0 goto label07;

        $r22 = virtualinvoke r1.<android.databinding.tool.store.ResourceBundle: java.util.Set getLayoutFileBundlesInSource()>();

        r28 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z5 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label06;

        $r23 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r23;

     label02:
        $r25 = r0.<android.databinding.tool.DataBinder: java.util.List mLayoutBinders>;

        $r24 = new android.databinding.tool.LayoutBinder;

        specialinvoke $r24.<android.databinding.tool.LayoutBinder: void <init>(android.databinding.tool.store.ResourceBundle$LayoutFileBundle,boolean)>(r29, 1);

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>($r24);

     label03:
        goto label05;

     label04:
        $r27 := @caughtexception;

        r30 = $r27;

        staticinvoke <android.databinding.tool.processing.Scope: void defer(android.databinding.tool.processing.ScopedException)>(r30);

     label05:
        goto label01;

     label06:
        goto label15;

     label07:
        $r14 = virtualinvoke r1.<android.databinding.tool.store.ResourceBundle: java.util.HashMap getLayoutBundles()>();

        $r15 = virtualinvoke $r14.<java.util.HashMap: java.util.Set entrySet()>();

        r31 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        $r16 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (java.util.Map$Entry) $r16;

        $r17 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.util.List) $r17;

        r33 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r19 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.databinding.tool.store.ResourceBundle$LayoutFileBundle) $r19;

     label10:
        $r21 = r0.<android.databinding.tool.DataBinder: java.util.List mLayoutBinders>;

        $r20 = new android.databinding.tool.LayoutBinder;

        specialinvoke $r20.<android.databinding.tool.LayoutBinder: void <init>(android.databinding.tool.store.ResourceBundle$LayoutFileBundle,boolean)>(r3, 0);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r20);

     label11:
        goto label13;

     label12:
        $r26 := @caughtexception;

        r4 = $r26;

        staticinvoke <android.databinding.tool.processing.Scope: void defer(android.databinding.tool.processing.ScopedException)>(r4);

     label13:
        goto label09;

     label14:
        goto label08;

     label15:
        return;

        catch android.databinding.tool.processing.ScopedException from label02 to label03 with label04;
        catch android.databinding.tool.processing.ScopedException from label10 to label11 with label12;
    }

    public java.util.List getLayoutBinders()
    {
        android.databinding.tool.DataBinder r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.DataBinder;

        $r1 = r0.<android.databinding.tool.DataBinder: java.util.List mLayoutBinders>;

        return $r1;
    }

    public void sealModels()
    {
        android.databinding.tool.DataBinder r0;
        java.util.Iterator r1;
        android.databinding.tool.LayoutBinder r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: android.databinding.tool.DataBinder;

        $r3 = r0.<android.databinding.tool.DataBinder: java.util.List mLayoutBinders>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.databinding.tool.LayoutBinder) $r4;

        virtualinvoke r2.<android.databinding.tool.LayoutBinder: void sealModel()>();

        goto label1;

     label2:
        return;
    }

    public void writerBaseClasses(boolean)
    {
        android.databinding.tool.DataBinder r0;
        boolean z0, $z1, $z2, $z4, $z5, $z6;
        java.util.Iterator r1;
        android.databinding.tool.LayoutBinder r2;
        java.lang.String r3, $r10, $r18, r22;
        java.util.List r4, $r7, $r15;
        java.lang.Throwable r5, $r20, $r21, r23;
        java.lang.Object[] $r6, $r16;
        java.lang.Object $r8;
        java.lang.StringBuilder $r11, $r12, $r13, r24;
        java.util.Set $r14, $r19;
        android.databinding.tool.writer.JavaFileWriter $r17;
        android.databinding.tool.processing.scopes.ScopeProvider r25;

        r0 := @this: android.databinding.tool.DataBinder;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.databinding.tool.DataBinder: boolean mEnableV2>;

        if $z1 != 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z5, "Should not call write base classes in v2", $r6);

        $r7 = r0.<android.databinding.tool.DataBinder: java.util.List mLayoutBinders>;

        r1 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z6 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label14;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.databinding.tool.LayoutBinder) $r8;

     label04:
        r25 = (android.databinding.tool.processing.scopes.ScopeProvider) r2;

        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>(r25);

        if z0 != 0 goto label05;

        $z4 = virtualinvoke r2.<android.databinding.tool.LayoutBinder: boolean hasVariations()>();

        if $z4 == 0 goto label08;

     label05:
        r22 = virtualinvoke r2.<android.databinding.tool.LayoutBinder: java.lang.String getClassName()>();

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r2.<android.databinding.tool.LayoutBinder: java.lang.String getPackage()>();

        $r11 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = r0.<android.databinding.tool.DataBinder: java.util.Set mClassesToBeStripped>;

        $z2 = interfaceinvoke $r14.<java.util.Set: boolean contains(java.lang.Object)>(r3);

        if $z2 == 0 goto label07;

     label06:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label03;

     label07:
        $r15 = r0.<android.databinding.tool.DataBinder: java.util.List mLayoutBinders>;

        r4 = staticinvoke <android.databinding.tool.DataBinder: java.util.List getVariations(java.util.List,java.lang.String)>($r15, r3);

        $r16 = newarray (java.lang.Object)[1];

        $r16[0] = r3;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("writing data binder base %s", $r16);

        $r17 = r0.<android.databinding.tool.DataBinder: android.databinding.tool.writer.JavaFileWriter mFileWriter>;

        $r18 = virtualinvoke r2.<android.databinding.tool.LayoutBinder: java.lang.String writeViewBinderBaseClass(boolean,java.util.List)>(z0, r4);

        virtualinvoke $r17.<android.databinding.tool.writer.JavaFileWriter: void writeToFile(java.lang.String,java.lang.String)>(r3, $r18);

        $r19 = r0.<android.databinding.tool.DataBinder: java.util.Set mClassesToBeStripped>;

        interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>(r3);

     label08:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label13;

     label09:
        $r21 := @caughtexception;

        r23 = $r21;

        staticinvoke <android.databinding.tool.processing.Scope: void defer(android.databinding.tool.processing.ScopedException)>(r23);

     label10:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label13;

     label11:
        $r20 := @caughtexception;

        r5 = $r20;

     label12:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r5;

     label13:
        goto label03;

     label14:
        return;

        catch android.databinding.tool.processing.ScopedException from label04 to label06 with label09;
        catch android.databinding.tool.processing.ScopedException from label07 to label08 with label09;
        catch java.lang.Throwable from label04 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private static java.util.List getVariations(java.util.List, java.lang.String)
    {
        java.util.List r0;
        java.lang.String r1, r5, r6, $r10;
        java.util.ArrayList r2, $r7;
        java.util.Iterator r3;
        android.databinding.tool.LayoutBinder r4;
        boolean $z0, $z1;
        java.lang.Object $r8;
        java.lang.StringBuilder $r9, $r11, $r12, $r13;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r2 = $r7;

        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.databinding.tool.LayoutBinder) $r8;

        r5 = virtualinvoke r4.<android.databinding.tool.LayoutBinder: java.lang.String getClassName()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r4.<android.databinding.tool.LayoutBinder: java.lang.String getPackage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

     label2:
        goto label1;

     label3:
        return r2;
    }

    public void writeBinders(int)
    {
        android.databinding.tool.DataBinder r0;
        int i0;
        java.util.Iterator r1;
        android.databinding.tool.LayoutBinder r2;
        java.lang.String r3, $r8, $r14, r18;
        java.lang.Throwable r4, $r16, $r17, r19;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.StringBuilder $r9, $r10, $r11, r20;
        java.lang.Object[] $r12;
        android.databinding.tool.writer.JavaFileWriter $r13;
        java.util.Set $r15;
        android.databinding.tool.processing.scopes.ScopeProvider r21;

        r0 := @this: android.databinding.tool.DataBinder;

        i0 := @parameter0: int;

        specialinvoke r0.<android.databinding.tool.DataBinder: void writeCallbackWrappers(int)>(i0);

        $r5 = r0.<android.databinding.tool.DataBinder: java.util.List mLayoutBinders>;

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.databinding.tool.LayoutBinder) $r6;

     label02:
        r21 = (android.databinding.tool.processing.scopes.ScopeProvider) r2;

        staticinvoke <android.databinding.tool.processing.Scope: void enter(android.databinding.tool.processing.scopes.ScopeProvider)>(r21);

        r18 = virtualinvoke r2.<android.databinding.tool.LayoutBinder: java.lang.String getImplementationName()>();

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r2.<android.databinding.tool.LayoutBinder: java.lang.String getPackage()>();

        $r9 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = r3;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("writing data binder %s", $r12);

        $z1 = r0.<android.databinding.tool.DataBinder: boolean mEnableV2>;

        if $z1 != 0 goto label03;

        $r15 = r0.<android.databinding.tool.DataBinder: java.util.Set mClassesToBeStripped>;

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>(r3);

     label03:
        $r13 = r0.<android.databinding.tool.DataBinder: android.databinding.tool.writer.JavaFileWriter mFileWriter>;

        $r14 = virtualinvoke r2.<android.databinding.tool.LayoutBinder: java.lang.String writeViewBinder(int)>(i0);

        virtualinvoke $r13.<android.databinding.tool.writer.JavaFileWriter: void writeToFile(java.lang.String,java.lang.String)>(r3, $r14);

     label04:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label09;

     label05:
        $r17 := @caughtexception;

        r19 = $r17;

        staticinvoke <android.databinding.tool.processing.Scope: void defer(android.databinding.tool.processing.ScopedException)>(r19);

     label06:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        goto label09;

     label07:
        $r16 := @caughtexception;

        r4 = $r16;

     label08:
        staticinvoke <android.databinding.tool.processing.Scope: void exit()>();

        throw r4;

     label09:
        goto label01;

     label10:
        return;

        catch android.databinding.tool.processing.ScopedException from label02 to label04 with label05;
        catch java.lang.Throwable from label02 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private void writeCallbackWrappers(int)
    {
        android.databinding.tool.DataBinder r0;
        int i0;
        java.util.HashMap r1, $r6;
        java.util.HashSet r2, $r7;
        boolean z0, $z1, $z2, $z3, $z5;
        android.databinding.tool.CallbackWrapper r3, $r27, r46, r48;
        java.lang.String r4, r5, $r13, $r28, $r29, $r34, $r38, $r39, $r41, r49, r50, r51;
        java.util.List $r8;
        java.util.Collection $r9;
        java.lang.Object $r10, $r19, $r23, $r24, $r25, $r26, $r30, $r31;
        android.databinding.tool.writer.CallbackWrapperWriter $r11;
        java.lang.StringBuilder $r12, $r14, $r15, $r16, $r35, $r36, $r40;
        android.databinding.tool.writer.JavaFileWriter $r17;
        java.util.Set $r18, $r22;
        android.databinding.tool.expr.ExprModel $r20;
        java.util.Map $r21;
        android.databinding.tool.reflection.ModelClass $r33;
        android.databinding.tool.reflection.ModelMethod $r37;
        java.util.Iterator r42, r44, r47;
        android.databinding.tool.LayoutBinder r43;
        java.util.Map$Entry r45;

        r0 := @this: android.databinding.tool.DataBinder;

        i0 := @parameter0: int;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r1 = $r6;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r2 = $r7;

        z0 = 0;

        $r8 = r0.<android.databinding.tool.DataBinder: java.util.List mLayoutBinders>;

        r42 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r19 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r43 = (android.databinding.tool.LayoutBinder) $r19;

        $r20 = virtualinvoke r43.<android.databinding.tool.LayoutBinder: android.databinding.tool.expr.ExprModel getModel()>();

        $r21 = virtualinvoke $r20.<android.databinding.tool.expr.ExprModel: java.util.Map getCallbackWrappers()>();

        $r22 = interfaceinvoke $r21.<java.util.Map: java.util.Set entrySet()>();

        r44 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z5 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label5;

        $r23 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (java.util.Map$Entry) $r23;

        $r24 = interfaceinvoke r45.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r25 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24);

        r46 = (android.databinding.tool.CallbackWrapper) $r25;

        if r46 != null goto label3;

        $r30 = interfaceinvoke r45.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (android.databinding.tool.CallbackWrapper) $r30;

        $r31 = interfaceinvoke r45.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, r3);

        $r33 = r3.<android.databinding.tool.CallbackWrapper: android.databinding.tool.reflection.ModelClass klass>;

        $r34 = virtualinvoke $r33.<android.databinding.tool.reflection.ModelClass: java.lang.String getSimpleName()>();

        r4 = specialinvoke r0.<android.databinding.tool.DataBinder: java.lang.String makeUnique(java.util.Set,java.lang.String)>(r2, $r34);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_internalCallback");

        $r37 = r3.<android.databinding.tool.CallbackWrapper: android.databinding.tool.reflection.ModelMethod method>;

        $r38 = virtualinvoke $r37.<android.databinding.tool.reflection.ModelMethod: java.lang.String getName()>();

        $r39 = staticinvoke <android.databinding.tool.util.StringUtils: java.lang.String capitalize(java.lang.String)>($r38);

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = specialinvoke r0.<android.databinding.tool.DataBinder: java.lang.String makeUnique(java.util.Set,java.lang.String)>(r2, $r41);

        virtualinvoke r3.<android.databinding.tool.CallbackWrapper: void prepare(java.lang.String,java.lang.String)>(r4, r5);

        goto label4;

     label3:
        $r26 = interfaceinvoke r45.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r27 = (android.databinding.tool.CallbackWrapper) $r26;

        $r28 = virtualinvoke r46.<android.databinding.tool.CallbackWrapper: java.lang.String getClassName()>();

        $r29 = virtualinvoke r46.<android.databinding.tool.CallbackWrapper: java.lang.String getListenerMethodName()>();

        virtualinvoke $r27.<android.databinding.tool.CallbackWrapper: void prepare(java.lang.String,java.lang.String)>($r28, $r29);

     label4:
        goto label2;

     label5:
        goto label1;

     label6:
        $r9 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        r47 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label7:
        $z2 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r10 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        r48 = (android.databinding.tool.CallbackWrapper) $r10;

        $r11 = new android.databinding.tool.writer.CallbackWrapperWriter;

        specialinvoke $r11.<android.databinding.tool.writer.CallbackWrapperWriter: void <init>(android.databinding.tool.CallbackWrapper)>(r48);

        r49 = virtualinvoke $r11.<android.databinding.tool.writer.CallbackWrapperWriter: java.lang.String write()>();

        r50 = virtualinvoke r48.<android.databinding.tool.CallbackWrapper: java.lang.String getClassName()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r48.<android.databinding.tool.CallbackWrapper: java.lang.String getPackage()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r50);

        r51 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = r0.<android.databinding.tool.DataBinder: android.databinding.tool.writer.JavaFileWriter mFileWriter>;

        virtualinvoke $r17.<android.databinding.tool.writer.JavaFileWriter: void writeToFile(java.lang.String,java.lang.String)>(r51, r49);

        $z3 = r0.<android.databinding.tool.DataBinder: boolean mEnableV2>;

        if $z3 != 0 goto label8;

        $r18 = r0.<android.databinding.tool.DataBinder: java.util.Set mClassesToBeStripped>;

        interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>(r51);

     label8:
        goto label7;

     label9:
        return;
    }

    private java.lang.String makeUnique(java.util.Set, java.lang.String)
    {
        android.databinding.tool.DataBinder r0;
        java.util.Set r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String r5;
        int i0;

        r0 := @this: android.databinding.tool.DataBinder;

        r1 := @parameter0: java.util.Set;

        r5 := @parameter1: java.lang.String;

        i0 = 1;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r5);

        return r5;
    }

    public void writeComponent()
    {
        android.databinding.tool.DataBinder r0;
        android.databinding.tool.writer.ComponentWriter r1, $r2;
        android.databinding.tool.LibTypes $r3;
        java.lang.String $r4, $r7, $r8;
        java.util.Set $r5;
        android.databinding.tool.writer.JavaFileWriter $r6;

        r0 := @this: android.databinding.tool.DataBinder;

        $r2 = new android.databinding.tool.writer.ComponentWriter;

        $r3 = r0.<android.databinding.tool.DataBinder: android.databinding.tool.LibTypes mLibTypes>;

        specialinvoke $r2.<android.databinding.tool.writer.ComponentWriter: void <init>(android.databinding.tool.LibTypes)>($r3);

        r1 = $r2;

        $r5 = r0.<android.databinding.tool.DataBinder: java.util.Set mClassesToBeStripped>;

        $r4 = r0.<android.databinding.tool.DataBinder: java.lang.String mComponentClass>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r4);

        $r6 = r0.<android.databinding.tool.DataBinder: android.databinding.tool.writer.JavaFileWriter mFileWriter>;

        $r7 = r0.<android.databinding.tool.DataBinder: java.lang.String mComponentClass>;

        $r8 = virtualinvoke r1.<android.databinding.tool.writer.ComponentWriter: java.lang.String createComponent()>();

        virtualinvoke $r6.<android.databinding.tool.writer.JavaFileWriter: void writeToFile(java.lang.String,java.lang.String)>($r7, $r8);

        return;
    }

    public java.util.Set getClassesToBeStripped()
    {
        android.databinding.tool.DataBinder r0;
        java.util.Set $r1;

        r0 := @this: android.databinding.tool.DataBinder;

        $r1 = r0.<android.databinding.tool.DataBinder: java.util.Set mClassesToBeStripped>;

        return $r1;
    }

    public void setFileWriter(android.databinding.tool.writer.JavaFileWriter)
    {
        android.databinding.tool.DataBinder r0;
        android.databinding.tool.writer.JavaFileWriter r1;

        r0 := @this: android.databinding.tool.DataBinder;

        r1 := @parameter0: android.databinding.tool.writer.JavaFileWriter;

        r0.<android.databinding.tool.DataBinder: android.databinding.tool.writer.JavaFileWriter mFileWriter> = r1;

        return;
    }

    public android.databinding.tool.writer.JavaFileWriter getFileWriter()
    {
        android.databinding.tool.DataBinder r0;
        android.databinding.tool.writer.JavaFileWriter $r1;

        r0 := @this: android.databinding.tool.DataBinder;

        $r1 = r0.<android.databinding.tool.DataBinder: android.databinding.tool.writer.JavaFileWriter mFileWriter>;

        return $r1;
    }

