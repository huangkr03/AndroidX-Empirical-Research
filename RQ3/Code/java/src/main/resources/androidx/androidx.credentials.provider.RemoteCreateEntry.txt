androidx.credentials.provider.RemoteCreateEntry
<androidx.credentials.provider.RemoteCreateEntry: androidx.credentials.provider.RemoteCreateEntry$Companion Companion>
<androidx.credentials.provider.RemoteCreateEntry: android.app.PendingIntent pendingIntent>
<androidx.credentials.provider.RemoteCreateEntry: java.lang.String TAG>
<androidx.credentials.provider.RemoteCreateEntry: java.lang.String SLICE_HINT_PENDING_INTENT>
<androidx.credentials.provider.RemoteCreateEntry: android.os.Parcelable$Creator CREATOR>
    public void <init>(android.app.PendingIntent)
    {
        androidx.credentials.provider.RemoteCreateEntry r0;
        android.app.PendingIntent r1;
        androidx.credentials.provider.RemoteCreateEntry$Companion $r2;
        android.app.slice.Slice $r3;

        r0 := @this: androidx.credentials.provider.RemoteCreateEntry;

        r1 := @parameter0: android.app.PendingIntent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pendingIntent");

        $r2 = <androidx.credentials.provider.RemoteCreateEntry: androidx.credentials.provider.RemoteCreateEntry$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.credentials.provider.RemoteCreateEntry$Companion: android.app.slice.Slice toSlice(android.app.PendingIntent)>(r1);

        specialinvoke r0.<android.service.credentials.CreateEntry: void <init>(android.app.slice.Slice)>($r3);

        r0.<androidx.credentials.provider.RemoteCreateEntry: android.app.PendingIntent pendingIntent> = r1;

        return;
    }

    public final android.app.PendingIntent getPendingIntent()
    {
        androidx.credentials.provider.RemoteCreateEntry r0;
        android.app.PendingIntent $r1;

        r0 := @this: androidx.credentials.provider.RemoteCreateEntry;

        $r1 = r0.<androidx.credentials.provider.RemoteCreateEntry: android.app.PendingIntent pendingIntent>;

        return $r1;
    }

    public int describeContents()
    {
        androidx.credentials.provider.RemoteCreateEntry r0;

        r0 := @this: androidx.credentials.provider.RemoteCreateEntry;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.credentials.provider.RemoteCreateEntry r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: androidx.credentials.provider.RemoteCreateEntry;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dest");

        specialinvoke r0.<android.service.credentials.CreateEntry: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        return;
    }

    public static final android.app.slice.Slice toSlice(android.app.PendingIntent)
    {
        android.app.PendingIntent r0;
        androidx.credentials.provider.RemoteCreateEntry$Companion $r1;
        android.app.slice.Slice $r2;

        r0 := @parameter0: android.app.PendingIntent;

        $r1 = <androidx.credentials.provider.RemoteCreateEntry: androidx.credentials.provider.RemoteCreateEntry$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.provider.RemoteCreateEntry$Companion: android.app.slice.Slice toSlice(android.app.PendingIntent)>(r0);

        return $r2;
    }

    public static final androidx.credentials.provider.RemoteCreateEntry fromSlice(android.app.slice.Slice)
    {
        android.app.slice.Slice r0;
        androidx.credentials.provider.RemoteCreateEntry$Companion $r1;
        androidx.credentials.provider.RemoteCreateEntry $r2;

        r0 := @parameter0: android.app.slice.Slice;

        $r1 = <androidx.credentials.provider.RemoteCreateEntry: androidx.credentials.provider.RemoteCreateEntry$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.provider.RemoteCreateEntry$Companion: androidx.credentials.provider.RemoteCreateEntry fromSlice(android.app.slice.Slice)>(r0);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.credentials.provider.RemoteCreateEntry$Companion $r0;
        androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1 $r1;
        android.os.Parcelable$Creator $r2;

        $r0 = new androidx.credentials.provider.RemoteCreateEntry$Companion;

        specialinvoke $r0.<androidx.credentials.provider.RemoteCreateEntry$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.provider.RemoteCreateEntry: androidx.credentials.provider.RemoteCreateEntry$Companion Companion> = $r0;

        $r1 = new androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1;

        specialinvoke $r1.<androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1: void <init>()>();

        $r2 = (android.os.Parcelable$Creator) $r1;

        <androidx.credentials.provider.RemoteCreateEntry: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1
    void <init>()
    {
        androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1 r0;

        r0 := @this: androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.credentials.provider.RemoteCreateEntry createFromParcel(android.os.Parcel)
    {
        androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        android.service.credentials.CreateEntry r2;
        android.os.Parcelable$Creator $r3;
        java.lang.Object $r4;
        androidx.credentials.provider.RemoteCreateEntry$Companion $r5;
        android.app.slice.Slice $r6;
        androidx.credentials.provider.RemoteCreateEntry $r7;

        r0 := @this: androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        $r3 = <android.service.credentials.CreateEntry: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r2 = (android.service.credentials.CreateEntry) $r4;

        $r5 = <androidx.credentials.provider.RemoteCreateEntry: androidx.credentials.provider.RemoteCreateEntry$Companion Companion>;

        $r6 = virtualinvoke r2.<android.service.credentials.CreateEntry: android.app.slice.Slice getSlice()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "createEntry.slice");

        $r7 = virtualinvoke $r5.<androidx.credentials.provider.RemoteCreateEntry$Companion: androidx.credentials.provider.RemoteCreateEntry fromSlice(android.app.slice.Slice)>($r6);

        return $r7;
    }

    public androidx.credentials.provider.RemoteCreateEntry[] newArray(int)
    {
        androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1 r0;
        int i0;
        androidx.credentials.provider.RemoteCreateEntry[] $r1;

        r0 := @this: androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.credentials.provider.RemoteCreateEntry)[i0];

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        androidx.credentials.provider.RemoteCreateEntry $r2;

        r0 := @this: androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1: androidx.credentials.provider.RemoteCreateEntry createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1 r0;
        int i0;
        androidx.credentials.provider.RemoteCreateEntry[] $r1;

        r0 := @this: androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.credentials.provider.RemoteCreateEntry$Companion$CREATOR$1: androidx.credentials.provider.RemoteCreateEntry[] newArray(int)>(i0);

        return $r1;
    }

androidx.credentials.provider.RemoteCreateEntry$Companion
    private void <init>()
    {
        androidx.credentials.provider.RemoteCreateEntry$Companion r0;

        r0 := @this: androidx.credentials.provider.RemoteCreateEntry$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void getSLICE_HINT_PENDING_INTENT$credentials_release$annotations()
    {
        return;
    }

    public final android.app.slice.Slice toSlice(android.app.PendingIntent)
    {
        androidx.credentials.provider.RemoteCreateEntry$Companion r0;
        android.app.PendingIntent r1;
        android.app.slice.Slice$Builder r2, $r3, $r6, $r8;
        android.app.slice.SliceSpec $r4;
        android.net.Uri $r5;
        java.util.List $r7;
        android.app.slice.Slice $r9, $r11;

        r0 := @this: androidx.credentials.provider.RemoteCreateEntry$Companion;

        r1 := @parameter0: android.app.PendingIntent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pendingIntent");

        $r3 = new android.app.slice.Slice$Builder;

        $r5 = <android.net.Uri: android.net.Uri EMPTY>;

        $r4 = new android.app.slice.SliceSpec;

        specialinvoke $r4.<android.app.slice.SliceSpec: void <init>(java.lang.String,int)>("type", 1);

        specialinvoke $r3.<android.app.slice.Slice$Builder: void <init>(android.net.Uri,android.app.slice.SliceSpec)>($r5, $r4);

        r2 = $r3;

        $r6 = new android.app.slice.Slice$Builder;

        specialinvoke $r6.<android.app.slice.Slice$Builder: void <init>(android.app.slice.Slice$Builder)>(r2);

        $r7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("androidx.credentials.provider.createEntry.SLICE_HINT_PENDING_INTENT");

        $r8 = virtualinvoke $r6.<android.app.slice.Slice$Builder: android.app.slice.Slice$Builder addHints(java.util.List)>($r7);

        $r9 = virtualinvoke $r8.<android.app.slice.Slice$Builder: android.app.slice.Slice build()>();

        virtualinvoke r2.<android.app.slice.Slice$Builder: android.app.slice.Slice$Builder addAction(android.app.PendingIntent,android.app.slice.Slice,java.lang.String)>(r1, $r9, null);

        $r11 = virtualinvoke r2.<android.app.slice.Slice$Builder: android.app.slice.Slice build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "sliceBuilder.build()");

        return $r11;
    }

    public final androidx.credentials.provider.RemoteCreateEntry fromSlice(android.app.slice.Slice)
    {
        androidx.credentials.provider.RemoteCreateEntry$Companion r0;
        android.app.slice.Slice r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        android.app.slice.SliceItem r4;
        java.util.List $r5;
        boolean $z1, $z2;
        androidx.credentials.provider.RemoteCreateEntry $r6, $r15;
        java.lang.Throwable $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;
        android.app.PendingIntent r13;
        java.lang.Iterable $r14;

        r0 := @this: androidx.credentials.provider.RemoteCreateEntry$Companion;

        r1 := @parameter0: android.app.slice.Slice;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "slice");

        r13 = null;

        $r5 = virtualinvoke r1.<android.app.slice.Slice: java.util.List getItems()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "slice.items");

        $r14 = (java.lang.Iterable) $r5;

        r2 = interfaceinvoke $r14.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.app.slice.SliceItem) r3;

        $z2 = virtualinvoke r4.<android.app.slice.SliceItem: boolean hasHint(java.lang.String)>("androidx.credentials.provider.createEntry.SLICE_HINT_PENDING_INTENT");

        if $z2 == 0 goto label2;

        r13 = virtualinvoke r4.<android.app.slice.SliceItem: android.app.PendingIntent getAction()>();

     label2:
        goto label1;

     label3:
        $r6 = new androidx.credentials.provider.RemoteCreateEntry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r13);

        specialinvoke $r6.<androidx.credentials.provider.RemoteCreateEntry: void <init>(android.app.PendingIntent)>(r13);

        $r15 = $r6;

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fromSlice failed with: ");

        $r10 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RemoteCreateEntry", $r12);

        $r15 = null;

     label6:
        return $r15;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.provider.RemoteCreateEntry$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.provider.RemoteCreateEntry$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.provider.RemoteCreateEntry$Companion: void <init>()>();

        return;
    }

