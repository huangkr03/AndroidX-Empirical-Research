androidx.credentials.provider.BeginGetPasswordOption
<androidx.credentials.provider.BeginGetPasswordOption: androidx.credentials.provider.BeginGetPasswordOption$Companion Companion>
<androidx.credentials.provider.BeginGetPasswordOption: android.os.Parcelable$Creator CREATOR>
    public void <init>(android.os.Bundle, java.lang.String)
    {
        androidx.credentials.provider.BeginGetPasswordOption r0;
        android.os.Bundle r1;
        java.lang.String r2;

        r0 := @this: androidx.credentials.provider.BeginGetPasswordOption;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "candidateQueryData");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "id");

        specialinvoke r0.<android.service.credentials.BeginGetCredentialOption: void <init>(java.lang.String,java.lang.String,android.os.Bundle)>(r2, "android.credentials.TYPE_PASSWORD_CREDENTIAL", r1);

        return;
    }

    public int describeContents()
    {
        androidx.credentials.provider.BeginGetPasswordOption r0;

        r0 := @this: androidx.credentials.provider.BeginGetPasswordOption;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.credentials.provider.BeginGetPasswordOption r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: androidx.credentials.provider.BeginGetPasswordOption;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dest");

        specialinvoke r0.<android.service.credentials.BeginGetCredentialOption: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        return;
    }

    public static final androidx.credentials.provider.BeginGetPasswordOption createFrom$credentials_release(android.os.Bundle, java.lang.String)
    {
        android.os.Bundle r0;
        java.lang.String r1;
        androidx.credentials.provider.BeginGetPasswordOption$Companion $r2;
        androidx.credentials.provider.BeginGetPasswordOption $r3;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: java.lang.String;

        $r2 = <androidx.credentials.provider.BeginGetPasswordOption: androidx.credentials.provider.BeginGetPasswordOption$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.credentials.provider.BeginGetPasswordOption$Companion: androidx.credentials.provider.BeginGetPasswordOption createFrom$credentials_release(android.os.Bundle,java.lang.String)>(r0, r1);

        return $r3;
    }

    public static final androidx.credentials.provider.BeginGetPasswordOption createFromEntrySlice$credentials_release(android.os.Bundle, java.lang.String)
    {
        android.os.Bundle r0;
        java.lang.String r1;
        androidx.credentials.provider.BeginGetPasswordOption$Companion $r2;
        androidx.credentials.provider.BeginGetPasswordOption $r3;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: java.lang.String;

        $r2 = <androidx.credentials.provider.BeginGetPasswordOption: androidx.credentials.provider.BeginGetPasswordOption$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.credentials.provider.BeginGetPasswordOption$Companion: androidx.credentials.provider.BeginGetPasswordOption createFromEntrySlice$credentials_release(android.os.Bundle,java.lang.String)>(r0, r1);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.credentials.provider.BeginGetPasswordOption$Companion $r0;
        androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1 $r1;
        android.os.Parcelable$Creator $r2;

        $r0 = new androidx.credentials.provider.BeginGetPasswordOption$Companion;

        specialinvoke $r0.<androidx.credentials.provider.BeginGetPasswordOption$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.provider.BeginGetPasswordOption: androidx.credentials.provider.BeginGetPasswordOption$Companion Companion> = $r0;

        $r1 = new androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1;

        specialinvoke $r1.<androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1: void <init>()>();

        $r2 = (android.os.Parcelable$Creator) $r1;

        <androidx.credentials.provider.BeginGetPasswordOption: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1
    void <init>()
    {
        androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1 r0;

        r0 := @this: androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.credentials.provider.BeginGetPasswordOption createFromParcel(android.os.Parcel)
    {
        androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        android.service.credentials.BeginGetCredentialOption r2;
        android.os.Parcelable$Creator $r3;
        java.lang.Object $r4;
        androidx.credentials.provider.BeginGetPasswordOption$Companion $r5;
        android.os.Bundle $r6;
        java.lang.String $r7;
        androidx.credentials.provider.BeginGetPasswordOption $r8;

        r0 := @this: androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        $r3 = <android.service.credentials.BeginGetCredentialOption: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r2 = (android.service.credentials.BeginGetCredentialOption) $r4;

        $r5 = <androidx.credentials.provider.BeginGetPasswordOption: androidx.credentials.provider.BeginGetPasswordOption$Companion Companion>;

        $r6 = virtualinvoke r2.<android.service.credentials.BeginGetCredentialOption: android.os.Bundle getCandidateQueryData()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "baseOption.candidateQueryData");

        $r7 = virtualinvoke r2.<android.service.credentials.BeginGetCredentialOption: java.lang.String getId()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "baseOption.id");

        $r8 = virtualinvoke $r5.<androidx.credentials.provider.BeginGetPasswordOption$Companion: androidx.credentials.provider.BeginGetPasswordOption createFrom$credentials_release(android.os.Bundle,java.lang.String)>($r6, $r7);

        return $r8;
    }

    public androidx.credentials.provider.BeginGetPasswordOption[] newArray(int)
    {
        androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1 r0;
        int i0;
        androidx.credentials.provider.BeginGetPasswordOption[] $r1;

        r0 := @this: androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.credentials.provider.BeginGetPasswordOption)[i0];

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1 r0;
        android.os.Parcel r1;
        androidx.credentials.provider.BeginGetPasswordOption $r2;

        r0 := @this: androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1: androidx.credentials.provider.BeginGetPasswordOption createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1 r0;
        int i0;
        androidx.credentials.provider.BeginGetPasswordOption[] $r1;

        r0 := @this: androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.credentials.provider.BeginGetPasswordOption$Companion$CREATOR$1: androidx.credentials.provider.BeginGetPasswordOption[] newArray(int)>(i0);

        return $r1;
    }

androidx.credentials.provider.BeginGetPasswordOption$Companion
    private void <init>()
    {
        androidx.credentials.provider.BeginGetPasswordOption$Companion r0;

        r0 := @this: androidx.credentials.provider.BeginGetPasswordOption$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.credentials.provider.BeginGetPasswordOption createFrom$credentials_release(android.os.Bundle, java.lang.String)
    {
        androidx.credentials.provider.BeginGetPasswordOption$Companion r0;
        android.os.Bundle r1;
        java.lang.String r2;
        androidx.credentials.provider.BeginGetPasswordOption $r3;

        r0 := @this: androidx.credentials.provider.BeginGetPasswordOption$Companion;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "id");

        $r3 = new androidx.credentials.provider.BeginGetPasswordOption;

        specialinvoke $r3.<androidx.credentials.provider.BeginGetPasswordOption: void <init>(android.os.Bundle,java.lang.String)>(r1, r2);

        return $r3;
    }

    public final androidx.credentials.provider.BeginGetPasswordOption createFromEntrySlice$credentials_release(android.os.Bundle, java.lang.String)
    {
        androidx.credentials.provider.BeginGetPasswordOption$Companion r0;
        android.os.Bundle r1;
        java.lang.String r2;
        androidx.credentials.provider.BeginGetPasswordOption $r3;

        r0 := @this: androidx.credentials.provider.BeginGetPasswordOption$Companion;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "id");

        $r3 = new androidx.credentials.provider.BeginGetPasswordOption;

        specialinvoke $r3.<androidx.credentials.provider.BeginGetPasswordOption: void <init>(android.os.Bundle,java.lang.String)>(r1, r2);

        return $r3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.provider.BeginGetPasswordOption$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.provider.BeginGetPasswordOption$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.provider.BeginGetPasswordOption$Companion: void <init>()>();

        return;
    }

