androidx.tvprovider.media.tv.ChannelLogoUtils
<androidx.tvprovider.media.tv.ChannelLogoUtils: java.lang.String TAG>
<androidx.tvprovider.media.tv.ChannelLogoUtils: int CONNECTION_TIMEOUT_MS_FOR_URLCONNECTION>
<androidx.tvprovider.media.tv.ChannelLogoUtils: int READ_TIMEOUT_MS_FOR_URLCONNECTION>
    public static boolean storeChannelLogo(android.content.Context, long, android.net.Uri)
    {
        android.content.Context r0;
        long l0;
        android.net.Uri r1, $r5;
        java.lang.String r2, $r6, $r8, $r9, $r10, $r16;
        java.lang.Throwable r3, r4, $r11, $r18, $r20, $r21, $r22, r27, r28, r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.net.HttpURLConnection $r7, $r17, $r19;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;
        java.net.URLConnection r23;
        java.io.InputStream r24;
        android.graphics.Bitmap r25;
        android.content.ContentResolver $r26;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 := @parameter2: android.net.Uri;

        $r5 = virtualinvoke r1.<android.net.Uri: android.net.Uri normalizeScheme()>();

        r2 = virtualinvoke $r5.<android.net.Uri: java.lang.String getScheme()>();

        r23 = null;

        r24 = null;

        r25 = null;

     label01:
        $r6 = "android.resource";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label02;

        $r8 = "file";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label02;

        $r9 = "content";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label03;

     label02:
        $r26 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r24 = virtualinvoke $r26.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r1);

        goto label04;

     label03:
        $r10 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        r23 = staticinvoke <androidx.tvprovider.media.tv.ChannelLogoUtils: java.net.URLConnection getUrlConnection(java.lang.String)>($r10);

        r24 = virtualinvoke r23.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label04:
        r25 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>(r24);

     label05:
        if r24 == null goto label09;

     label06:
        virtualinvoke r24.<java.io.InputStream: void close()>();

     label07:
        goto label09;

     label08:
        $r22 := @caughtexception;

        r27 = $r22;

     label09:
        $z4 = r23 instanceof java.net.HttpURLConnection;

        if $z4 == 0 goto label23;

        $r7 = (java.net.HttpURLConnection) r23;

        virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>();

        goto label23;

     label10:
        $r11 := @caughtexception;

        r28 = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get logo from the URI: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("ChannelLogoUtils", $r16, r28);

     label11:
        if r24 == null goto label15;

     label12:
        virtualinvoke r24.<java.io.InputStream: void close()>();

     label13:
        goto label15;

     label14:
        $r21 := @caughtexception;

        r29 = $r21;

     label15:
        $z5 = r23 instanceof java.net.HttpURLConnection;

        if $z5 == 0 goto label23;

        $r17 = (java.net.HttpURLConnection) r23;

        virtualinvoke $r17.<java.net.HttpURLConnection: void disconnect()>();

        goto label23;

     label16:
        $r18 := @caughtexception;

        r3 = $r18;

     label17:
        if r24 == null goto label21;

     label18:
        virtualinvoke r24.<java.io.InputStream: void close()>();

     label19:
        goto label21;

     label20:
        $r20 := @caughtexception;

        r4 = $r20;

     label21:
        $z6 = r23 instanceof java.net.HttpURLConnection;

        if $z6 == 0 goto label22;

        $r19 = (java.net.HttpURLConnection) r23;

        virtualinvoke $r19.<java.net.HttpURLConnection: void disconnect()>();

     label22:
        throw r3;

     label23:
        if r25 == null goto label24;

        $z1 = staticinvoke <androidx.tvprovider.media.tv.ChannelLogoUtils: boolean storeChannelLogo(android.content.Context,long,android.graphics.Bitmap)>(r0, l0, r25);

        if $z1 == 0 goto label24;

        $z7 = 1;

        goto label25;

     label24:
        $z7 = 0;

     label25:
        return $z7;

        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label01 to label05 with label10;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label01 to label05 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public static boolean storeChannelLogo(android.content.Context, long, android.graphics.Bitmap)
    {
        android.content.Context r0;
        long l0;
        android.graphics.Bitmap r1;
        android.net.Uri r2;
        java.lang.Throwable r3, r4, $r7, $r8, $r9, $r10, $r11, r13, r14, r15;
        android.content.ContentResolver $r5;
        android.graphics.Bitmap$CompressFormat $r6;
        boolean z0;
        java.io.OutputStream r12;
        java.lang.NullPointerException r16;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 := @parameter2: android.graphics.Bitmap;

        z0 = 0;

        r2 = staticinvoke <android.media.tv.TvContract: android.net.Uri buildChannelLogoUri(long)>(l0);

     label01:
        $r5 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r12 = virtualinvoke $r5.<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>(r2);

     label02:
        $r6 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        z0 = virtualinvoke r1.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r6, 100, r12);

        virtualinvoke r12.<java.io.OutputStream: void flush()>();

     label03:
        if r12 == null goto label16;

        if null == null goto label07;

     label04:
        virtualinvoke r12.<java.io.OutputStream: void close()>();

     label05:
        goto label16;

     label06:
        $r11 := @caughtexception;

        r16 = new java.lang.NullPointerException;

        specialinvoke r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke l7#3.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(l8#4)");

        throw r16;

     label07:
        virtualinvoke r12.<java.io.OutputStream: void close()>();

        goto label16;

     label08:
        $r9 := @caughtexception;

        r13 = $r9;

        r14 = r13;

        throw r13;

     label09:
        $r8 := @caughtexception;

        r3 = $r8;

     label10:
        if r12 == null goto label15;

        if r14 == null goto label14;

     label11:
        virtualinvoke r12.<java.io.OutputStream: void close()>();

     label12:
        goto label15;

     label13:
        $r10 := @caughtexception;

        r4 = $r10;

        virtualinvoke r14.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r4);

        goto label15;

     label14:
        virtualinvoke r12.<java.io.OutputStream: void close()>();

     label15:
        throw r3;

     label16:
        goto label18;

     label17:
        $r7 := @caughtexception;

        r15 = $r7;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("ChannelLogoUtils", "Failed to store the logo to the system content provider.\n", r15);

     label18:
        return z0;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label08 to label10 with label09;
        catch android.database.sqlite.SQLiteException from label01 to label16 with label17;
        catch java.io.IOException from label01 to label16 with label17;
    }

    public static android.graphics.Bitmap loadChannelLogo(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        java.lang.Throwable r1, $r5;
        android.content.ContentResolver $r2;
        android.net.Uri $r3;
        java.io.InputStream $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10;
        android.graphics.Bitmap r11;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r11 = null;

     label1:
        $r2 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = staticinvoke <android.media.tv.TvContract: android.net.Uri buildChannelLogoUri(long)>(l0);

        $r4 = virtualinvoke $r2.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r3);

        r11 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Channel logo for channel (ID:");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not found.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("ChannelLogoUtils", $r10, r1);

     label4:
        return r11;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    private static java.net.URLConnection getUrlConnection(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        java.net.URLConnection r1;
        java.net.URL $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.net.URL;

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>(r0);

        r1 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke r1.<java.net.URLConnection: void setConnectTimeout(int)>(3000);

        virtualinvoke r1.<java.net.URLConnection: void setReadTimeout(int)>(10000);

        return r1;
    }

    public void <init>()
    {
        androidx.tvprovider.media.tv.ChannelLogoUtils r0;

        r0 := @this: androidx.tvprovider.media.tv.ChannelLogoUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

