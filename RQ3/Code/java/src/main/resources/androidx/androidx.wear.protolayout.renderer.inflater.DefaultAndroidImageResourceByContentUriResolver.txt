androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver
<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: java.lang.String TAG>
<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: androidx.wear.protolayout.renderer.inflater.ContentUriValidator mContentUriValidator>
<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: android.content.res.Resources mPackageResources>
<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: android.content.ContentResolver mContentResolver>
<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: java.util.concurrent.Executor mLoadExecutor>
    public void <init>(android.content.Context, java.lang.String, android.content.res.Resources, android.content.ContentResolver, java.util.concurrent.Executor)
    {
        androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver r0;
        android.content.Context r1;
        java.lang.String r2;
        android.content.res.Resources r3;
        android.content.ContentResolver r4;
        java.util.concurrent.Executor r5;
        androidx.wear.protolayout.renderer.inflater.ContentUriValidator $r6;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.res.Resources;

        r4 := @parameter3: android.content.ContentResolver;

        r5 := @parameter4: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new androidx.wear.protolayout.renderer.inflater.ContentUriValidator;

        specialinvoke $r6.<androidx.wear.protolayout.renderer.inflater.ContentUriValidator: void <init>(android.content.Context,java.lang.String)>(r1, r2);

        r0.<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: androidx.wear.protolayout.renderer.inflater.ContentUriValidator mContentUriValidator> = $r6;

        r0.<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: android.content.res.Resources mPackageResources> = r3;

        r0.<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: android.content.ContentResolver mContentResolver> = r4;

        r0.<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: java.util.concurrent.Executor mLoadExecutor> = r5;

        return;
    }

    private android.graphics.drawable.Drawable getDrawableBlocking(androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri) throws androidx.wear.protolayout.renderer.inflater.ResourceResolvers$ResourceAccessException
    {
        androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver r0;
        androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri r1;
        android.net.Uri r2;
        java.lang.Throwable r3, $r23, $r24, $r25, $r32, r41, r42, r43, r53, r54, r55;
        java.lang.String $r4, $r13, $r15, $r19, $r22, $r29, $r31, $r36, $r38;
        androidx.wear.protolayout.renderer.inflater.ContentUriValidator $r5;
        boolean $z0;
        android.content.ContentResolver $r6;
        android.content.res.Resources $r8;
        android.graphics.Bitmap $r9;
        java.lang.StringBuilder $r12, $r14, $r18, $r20, $r21, $r28, $r30, $r35, $r37, r44, r46, r49, r51;
        java.io.InputStream r39;
        android.graphics.drawable.BitmapDrawable r40, r48;
        java.lang.IllegalArgumentException r45;
        androidx.wear.protolayout.renderer.inflater.ResourceResolvers$ResourceAccessException r47, r50, r52;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver;

        r1 := @parameter0: androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri;

        $r4 = virtualinvoke r1.<androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri: java.lang.String getContentUri()>();

        r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r4);

        $r5 = r0.<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: androidx.wear.protolayout.renderer.inflater.ContentUriValidator mContentUriValidator>;

        $z0 = virtualinvoke $r5.<androidx.wear.protolayout.renderer.inflater.ContentUriValidator: boolean validateUri(android.net.Uri)>(r2);

        if $z0 != 0 goto label01;

        r45 = new java.lang.IllegalArgumentException;

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provided content URI ");

        $r19 = virtualinvoke r1.<androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri: java.lang.String getContentUri()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be opened");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r45.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw r45;

     label01:
        $r6 = r0.<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: android.content.ContentResolver mContentResolver>;

        r39 = virtualinvoke $r6.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r2);

     label02:
        if r39 != null goto label03;

        r47 = new androidx.wear.protolayout.renderer.inflater.ResourceResolvers$ResourceAccessException;

        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read from URI ");

        $r13 = virtualinvoke r1.<androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri: java.lang.String getContentUri()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<androidx.wear.protolayout.renderer.inflater.ResourceResolvers$ResourceAccessException: void <init>(java.lang.String)>($r15);

        r53 = (java.lang.Throwable) r47;

        throw r53;

     label03:
        r48 = new android.graphics.drawable.BitmapDrawable;

        $r8 = r0.<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: android.content.res.Resources mPackageResources>;

        $r9 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>(r39);

        specialinvoke r48.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r8, $r9);

        r40 = r48;

     label04:
        if r39 == null goto label05;

        virtualinvoke r39.<java.io.InputStream: void close()>();

     label05:
        return r40;

     label06:
        $r23 := @caughtexception;

        r41 = $r23;

        if r39 == null goto label10;

     label07:
        virtualinvoke r39.<java.io.InputStream: void close()>();

     label08:
        goto label10;

     label09:
        $r24 := @caughtexception;

        r3 = $r24;

        virtualinvoke r41.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r3);

     label10:
        throw r41;

     label11:
        $r25 := @caughtexception;

        r42 = $r25;

        r50 = new androidx.wear.protolayout.renderer.inflater.ResourceResolvers$ResourceAccessException;

        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open file for URI ");

        $r29 = virtualinvoke r1.<androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri: java.lang.String getContentUri()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r50.<androidx.wear.protolayout.renderer.inflater.ResourceResolvers$ResourceAccessException: void <init>(java.lang.String,java.lang.Exception)>($r31, r42);

        r54 = (java.lang.Throwable) r50;

        throw r54;

     label12:
        $r32 := @caughtexception;

        r43 = $r32;

        r52 = new androidx.wear.protolayout.renderer.inflater.ResourceResolvers$ResourceAccessException;

        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while reading URI ");

        $r36 = virtualinvoke r1.<androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri: java.lang.String getContentUri()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r52.<androidx.wear.protolayout.renderer.inflater.ResourceResolvers$ResourceAccessException: void <init>(java.lang.String,java.lang.Exception)>($r38, r43);

        r55 = (java.lang.Throwable) r52;

        throw r55;

        catch java.lang.Throwable from label02 to label04 with label06;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.io.FileNotFoundException from label01 to label05 with label11;
        catch java.io.FileNotFoundException from label06 to label11 with label11;
        catch java.io.IOException from label01 to label05 with label12;
        catch java.io.IOException from label06 to label11 with label12;
    }

    public com.google.common.util.concurrent.ListenableFuture getDrawable(androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri)
    {
        androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver r0;
        androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri r1;
        androidx.concurrent.futures.ResolvableFuture r2;
        java.util.concurrent.Executor $r3;
        java.lang.Runnable $r4;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver;

        r1 := @parameter0: androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri;

        r2 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r3 = r0.<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: java.util.concurrent.Executor mLoadExecutor>;

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver,androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri,androidx.concurrent.futures.ResolvableFuture)>(r0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: void lambda$getDrawable$0(androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri,androidx.concurrent.futures.ResolvableFuture)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r4);

        return r2;
    }

    private void lambda$getDrawable$0(androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri, androidx.concurrent.futures.ResolvableFuture)
    {
        androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver r0;
        androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri r1;
        androidx.concurrent.futures.ResolvableFuture r2;
        java.lang.Throwable $r3, r5;
        android.graphics.drawable.Drawable r4;

        r0 := @this: androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver;

        r1 := @parameter0: androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri;

        r2 := @parameter1: androidx.concurrent.futures.ResolvableFuture;

     label1:
        r4 = specialinvoke r0.<androidx.wear.protolayout.renderer.inflater.DefaultAndroidImageResourceByContentUriResolver: android.graphics.drawable.Drawable getDrawableBlocking(androidx.wear.protolayout.proto.ResourceProto$AndroidImageResourceByContentUri)>(r1);

        virtualinvoke r2.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>(r4);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r5 = $r3;

        virtualinvoke r2.<androidx.concurrent.futures.ResolvableFuture: boolean setException(java.lang.Throwable)>(r5);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

