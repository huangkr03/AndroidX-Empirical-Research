androidx.compose.ui.node.LayoutModifierNode
    public void forceRemeasure()
    {
        androidx.compose.ui.node.LayoutModifierNode r0;
        androidx.compose.ui.node.DelegatableNode $r1;
        androidx.compose.ui.node.LayoutNode $r2;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNode;

        $r1 = (androidx.compose.ui.node.DelegatableNode) r0;

        $r2 = staticinvoke <androidx.compose.ui.node.DelegatableNodeKt: androidx.compose.ui.node.LayoutNode requireLayoutNode(androidx.compose.ui.node.DelegatableNode)>($r1);

        virtualinvoke $r2.<androidx.compose.ui.node.LayoutNode: void forceRemeasure()>();

        return;
    }

<androidx.compose.ui.node.LayoutModifierNode: androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope,androidx.compose.ui.layout.Measurable,long)>
    public int minIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.ui.node.LayoutModifierNode r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        androidx.compose.ui.layout.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.compose.ui.node.NodeMeasuringIntrinsics $r3;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNode;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        $r3 = <androidx.compose.ui.node.NodeMeasuringIntrinsics: androidx.compose.ui.node.NodeMeasuringIntrinsics INSTANCE>;

        $i1 = virtualinvoke $r3.<androidx.compose.ui.node.NodeMeasuringIntrinsics: int minWidth$ui_release(androidx.compose.ui.node.LayoutModifierNode,androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>(r0, $r1, r2, i0);

        return $i1;
    }

    public int minIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.ui.node.LayoutModifierNode r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        androidx.compose.ui.layout.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.compose.ui.node.NodeMeasuringIntrinsics $r3;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNode;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        $r3 = <androidx.compose.ui.node.NodeMeasuringIntrinsics: androidx.compose.ui.node.NodeMeasuringIntrinsics INSTANCE>;

        $i1 = virtualinvoke $r3.<androidx.compose.ui.node.NodeMeasuringIntrinsics: int minHeight$ui_release(androidx.compose.ui.node.LayoutModifierNode,androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>(r0, $r1, r2, i0);

        return $i1;
    }

    public int maxIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.ui.node.LayoutModifierNode r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        androidx.compose.ui.layout.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.compose.ui.node.NodeMeasuringIntrinsics $r3;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNode;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        $r3 = <androidx.compose.ui.node.NodeMeasuringIntrinsics: androidx.compose.ui.node.NodeMeasuringIntrinsics INSTANCE>;

        $i1 = virtualinvoke $r3.<androidx.compose.ui.node.NodeMeasuringIntrinsics: int maxWidth$ui_release(androidx.compose.ui.node.LayoutModifierNode,androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>(r0, $r1, r2, i0);

        return $i1;
    }

    public int maxIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope, androidx.compose.ui.layout.IntrinsicMeasurable, int)
    {
        androidx.compose.ui.node.LayoutModifierNode r0;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r1;
        androidx.compose.ui.layout.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.compose.ui.node.NodeMeasuringIntrinsics $r3;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNode;

        $r1 := @parameter0: androidx.compose.ui.layout.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.compose.ui.layout.IntrinsicMeasurable;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        $r3 = <androidx.compose.ui.node.NodeMeasuringIntrinsics: androidx.compose.ui.node.NodeMeasuringIntrinsics INSTANCE>;

        $i1 = virtualinvoke $r3.<androidx.compose.ui.node.NodeMeasuringIntrinsics: int maxHeight$ui_release(androidx.compose.ui.node.LayoutModifierNode,androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>(r0, $r1, r2, i0);

        return $i1;
    }

