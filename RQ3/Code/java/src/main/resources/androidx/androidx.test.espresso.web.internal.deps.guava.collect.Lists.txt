androidx.test.espresso.web.internal.deps.guava.collect.Lists
    static int computeArrayListCapacity(int)
    {
        int i0, $i3, $i7;
        long $l2, $l4, $l5, $l6;

        i0 := @parameter0: int;

        staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>(i0, "arraySize");

        $l2 = (long) i0;

        $l5 = $l2 + 5L;

        $i3 = i0 / 10;

        $l4 = (long) $i3;

        $l6 = $l5 + $l4;

        $i7 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.primitives.Ints: int saturatedCast(long)>($l6);

        return $i7;
    }

    static int indexOfImpl(java.util.List, java.lang.Object)
    {
        java.lang.Object r0, $r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1;
        java.util.List r2;
        java.util.ListIterator r3;

        r2 := @parameter0: java.util.List;

        r0 := @parameter1: java.lang.Object;

        $z0 = r2 instanceof java.util.RandomAccess;

        if $z0 == 0 goto label1;

        $i1 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: int indexOfRandomAccess(java.util.List,java.lang.Object)>(r2, r0);

        return $i1;

     label1:
        r3 = interfaceinvoke r2.<java.util.List: java.util.ListIterator listIterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r1 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>();

        $z2 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>(r0, $r1);

        if $z2 == 0 goto label2;

        $i0 = interfaceinvoke r3.<java.util.ListIterator: int previousIndex()>();

        return $i0;

     label3:
        return -1;
    }

    private static int indexOfRandomAccess(java.util.List, java.lang.Object)
    {
        java.util.List r0;
        int i0, i1, i2;
        java.lang.Object $r1, $r2, r3;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.lang.Object;

        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if r3 != null goto label4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        if $r2 != null goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;

     label4:
        i2 = 0;

     label5:
        if i2 >= i0 goto label3;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $z0 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label6;

        return i2;

     label6:
        i2 = i2 + 1;

        goto label5;
    }

    static int lastIndexOfImpl(java.util.List, java.lang.Object)
    {
        java.lang.Object r0, $r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        java.util.List r2;
        java.util.ListIterator r3;

        r2 := @parameter0: java.util.List;

        r0 := @parameter1: java.lang.Object;

        $z0 = r2 instanceof java.util.RandomAccess;

        if $z0 == 0 goto label1;

        $i2 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: int lastIndexOfRandomAccess(java.util.List,java.lang.Object)>(r2, r0);

        return $i2;

     label1:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        r3 = interfaceinvoke r2.<java.util.List: java.util.ListIterator listIterator(int)>($i0);

     label2:
        $z1 = interfaceinvoke r3.<java.util.ListIterator: boolean hasPrevious()>();

        if $z1 == 0 goto label3;

        $r1 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object previous()>();

        $z2 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>(r0, $r1);

        if $z2 == 0 goto label2;

        $i1 = interfaceinvoke r3.<java.util.ListIterator: int nextIndex()>();

        return $i1;

     label3:
        return -1;
    }

    private static int lastIndexOfRandomAccess(java.util.List, java.lang.Object)
    {
        java.util.List r0;
        int $i0, $i1, i2, i3;
        java.lang.Object $r1, $r2, r3;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.lang.Object;

        if r3 != null goto label4;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        i2 = $i1 + -1;

     label1:
        if i2 < 0 goto label3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        if $r2 != null goto label2;

        return i2;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        return -1;

     label4:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i3 = $i0 + -1;

     label5:
        if i3 < 0 goto label3;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        $z0 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label6;

        return i3;

     label6:
        i3 = i3 + -1;

        goto label5;
    }

    public static java.util.ArrayList newArrayList()
    {
        java.util.ArrayList r0;

        r0 = new java.util.ArrayList;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        return r0;
    }

    public static java.util.ArrayList newArrayList(java.lang.Iterable)
    {
        java.util.ArrayList r0, r5;
        boolean $z0;
        java.util.Iterator $r2;
        java.util.Collection $r3;
        java.lang.Iterable r4;

        r4 := @parameter0: java.lang.Iterable;

        staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $z0 = r4 instanceof java.util.Collection;

        if $z0 == 0 goto label2;

        r0 = new java.util.ArrayList;

        $r3 = (java.util.Collection) r4;

        specialinvoke r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        r5 = r0;

     label1:
        return r5;

     label2:
        $r2 = interfaceinvoke r4.<java.lang.Iterable: java.util.Iterator iterator()>();

        r5 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>($r2);

        goto label1;
    }

    public static java.util.ArrayList newArrayList(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.util.ArrayList r1;

        r0 := @parameter0: java.util.Iterator;

        r1 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Iterators: boolean addAll(java.util.Collection,java.util.Iterator)>(r1, r0);

        return r1;
    }

    public static transient java.util.ArrayList newArrayList(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.util.ArrayList r1;
        int i0, i1;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        i0 = lengthof r0;

        i1 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Lists: int computeArrayListCapacity(int)>(i0);

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>(int)>(i1);

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r1, r0);

        return r1;
    }

    public static java.util.ArrayList newArrayListWithCapacity(int)
    {
        int i0;
        java.util.ArrayList r0;

        i0 := @parameter0: int;

        staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.CollectPreconditions: int checkNonnegative(int,java.lang.String)>(i0, "initialArraySize");

        r0 = new java.util.ArrayList;

        specialinvoke r0.<java.util.ArrayList: void <init>(int)>(i0);

        return r0;
    }

    public static java.util.LinkedList newLinkedList()
    {
        java.util.LinkedList r0;

        r0 = new java.util.LinkedList;

        specialinvoke r0.<java.util.LinkedList: void <init>()>();

        return r0;
    }

    static boolean equalsImpl(java.util.List, java.lang.Object)
    {
        java.util.List r0, r1;
        int i0, $i1, i2;
        java.lang.Object $r2, $r5, $r6, r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r3, $r4;

        r0 := @parameter0: java.util.List;

        r7 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        if r7 != $r2 goto label1;

        return 1;

     label1:
        $z0 = r7 instanceof java.util.List;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r1 = (java.util.List) r7;

        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 == $i1 goto label3;

        return 0;

     label3:
        $z1 = r0 instanceof java.util.RandomAccess;

        if $z1 == 0 goto label7;

        $z3 = r1 instanceof java.util.RandomAccess;

        if $z3 == 0 goto label7;

        i2 = 0;

     label4:
        if i2 >= i0 goto label6;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $z4 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z4 != 0 goto label5;

        return 0;

     label5:
        i2 = i2 + 1;

        goto label4;

     label6:
        return 1;

     label7:
        $r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        $z2 = staticinvoke <androidx.test.espresso.web.internal.deps.guava.collect.Iterators: boolean elementsEqual(java.util.Iterator,java.util.Iterator)>($r3, $r4);

        return $z2;
    }

