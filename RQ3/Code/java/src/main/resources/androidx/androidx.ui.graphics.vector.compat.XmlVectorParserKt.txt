androidx.ui.graphics.vector.compat.XmlVectorParserKt
<androidx.ui.graphics.vector.compat.XmlVectorParserKt: int LINECAP_BUTT>
<androidx.ui.graphics.vector.compat.XmlVectorParserKt: int LINECAP_ROUND>
<androidx.ui.graphics.vector.compat.XmlVectorParserKt: int LINECAP_SQUARE>
<androidx.ui.graphics.vector.compat.XmlVectorParserKt: int LINEJOIN_MITER>
<androidx.ui.graphics.vector.compat.XmlVectorParserKt: int LINEJOIN_ROUND>
<androidx.ui.graphics.vector.compat.XmlVectorParserKt: int LINEJOIN_BEVEL>
<androidx.ui.graphics.vector.compat.XmlVectorParserKt: int FILL_TYPE_WINDING>
<androidx.ui.graphics.vector.compat.XmlVectorParserKt: java.lang.String SHAPE_CLIP_PATH>
<androidx.ui.graphics.vector.compat.XmlVectorParserKt: java.lang.String SHAPE_GROUP>
<androidx.ui.graphics.vector.compat.XmlVectorParserKt: java.lang.String SHAPE_PATH>
    private static final androidx.ui.graphics.StrokeCap getStrokeLineCap(int, androidx.ui.graphics.StrokeCap)
    {
        int i0, i1;
        androidx.ui.graphics.StrokeCap r0, $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.ui.graphics.StrokeCap;

        i1 = i0;

        tableswitch(i1)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r1 = <androidx.ui.graphics.StrokeCap: androidx.ui.graphics.StrokeCap butt>;

        goto label5;

     label2:
        $r1 = <androidx.ui.graphics.StrokeCap: androidx.ui.graphics.StrokeCap round>;

        goto label5;

     label3:
        $r1 = <androidx.ui.graphics.StrokeCap: androidx.ui.graphics.StrokeCap square>;

        goto label5;

     label4:
        $r1 = r0;

     label5:
        return $r1;
    }

    static androidx.ui.graphics.StrokeCap getStrokeLineCap$default(int, androidx.ui.graphics.StrokeCap, int, java.lang.Object)
    {
        int i0, i1, $i2;
        java.lang.Object r0;
        androidx.ui.graphics.StrokeCap $r1, r2;

        i0 := @parameter0: int;

        r2 := @parameter1: androidx.ui.graphics.StrokeCap;

        i1 := @parameter2: int;

        r0 := @parameter3: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        r2 = <androidx.ui.graphics.StrokeCap: androidx.ui.graphics.StrokeCap butt>;

     label1:
        $r1 = staticinvoke <androidx.ui.graphics.vector.compat.XmlVectorParserKt: androidx.ui.graphics.StrokeCap getStrokeLineCap(int,androidx.ui.graphics.StrokeCap)>(i0, r2);

        return $r1;
    }

    private static final androidx.ui.graphics.StrokeJoin getStrokeLineJoin(int, androidx.ui.graphics.StrokeJoin)
    {
        int i0, i1;
        androidx.ui.graphics.StrokeJoin r0, $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.ui.graphics.StrokeJoin;

        i1 = i0;

        tableswitch(i1)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r1 = <androidx.ui.graphics.StrokeJoin: androidx.ui.graphics.StrokeJoin miter>;

        goto label5;

     label2:
        $r1 = <androidx.ui.graphics.StrokeJoin: androidx.ui.graphics.StrokeJoin round>;

        goto label5;

     label3:
        $r1 = <androidx.ui.graphics.StrokeJoin: androidx.ui.graphics.StrokeJoin bevel>;

        goto label5;

     label4:
        $r1 = r0;

     label5:
        return $r1;
    }

    static androidx.ui.graphics.StrokeJoin getStrokeLineJoin$default(int, androidx.ui.graphics.StrokeJoin, int, java.lang.Object)
    {
        int i0, i1, $i2;
        java.lang.Object r0;
        androidx.ui.graphics.StrokeJoin $r1, r2;

        i0 := @parameter0: int;

        r2 := @parameter1: androidx.ui.graphics.StrokeJoin;

        i1 := @parameter2: int;

        r0 := @parameter3: java.lang.Object;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        r2 = <androidx.ui.graphics.StrokeJoin: androidx.ui.graphics.StrokeJoin miter>;

     label1:
        $r1 = staticinvoke <androidx.ui.graphics.vector.compat.XmlVectorParserKt: androidx.ui.graphics.StrokeJoin getStrokeLineJoin(int,androidx.ui.graphics.StrokeJoin)>(i0, r2);

        return $r1;
    }

    public static final boolean isAtEnd(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 == 1 goto label1;

        $i1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i1 >= 1 goto label2;

        $i2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i2 != 3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static final void parseCurrentVectorNode(org.xmlpull.v1.XmlPullParser, android.content.res.Resources, android.util.AttributeSet, android.content.res.Resources$Theme, androidx.ui.graphics.vector.VectorAssetBuilder)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        android.content.res.Resources r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        androidx.ui.graphics.vector.VectorAssetBuilder r4;
        int i0, $i1;
        java.lang.String r5, $r6;
        boolean $z0, $z1, $z2, $z3;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        r4 := @parameter4: androidx.ui.graphics.vector.VectorAssetBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "res");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "attrs");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "builder");

        i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        tableswitch(i0)
        {
            case 2: goto label1;
            case 3: goto label8;
            default: goto label9;
        };

     label1:
        r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if r5 == null goto label7;

        $i1 = virtualinvoke r5.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1649314686: goto label3;
            case 3433509: goto label2;
            case 98629247: goto label4;
            default: goto label7;
        };

     label2:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("path");

        if $z2 != 0 goto label5;

        goto label7;

     label3:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("clip-path");

        if $z3 != 0 goto label7;

        goto label7;

     label4:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("group");

        if $z1 != 0 goto label6;

        goto label7;

     label5:
        staticinvoke <androidx.ui.graphics.vector.compat.XmlVectorParserKt: void parsePath(org.xmlpull.v1.XmlPullParser,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,androidx.ui.graphics.vector.VectorAssetBuilder)>($r0, r1, r3, r2, r4);

        goto label7;

     label6:
        staticinvoke <androidx.ui.graphics.vector.compat.XmlVectorParserKt: void parseGroup(org.xmlpull.v1.XmlPullParser,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,androidx.ui.graphics.vector.VectorAssetBuilder)>($r0, r1, r3, r2, r4);

     label7:
        goto label9;

     label8:
        $r6 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>("group", $r6);

        if $z0 == 0 goto label9;

        virtualinvoke r4.<androidx.ui.graphics.vector.VectorAssetBuilder: androidx.ui.graphics.vector.VectorAssetBuilder popGroup()>();

     label9:
        return;
    }

    public static void parseCurrentVectorNode$default(org.xmlpull.v1.XmlPullParser, android.content.res.Resources, android.util.AttributeSet, android.content.res.Resources$Theme, androidx.ui.graphics.vector.VectorAssetBuilder, int, java.lang.Object)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        android.content.res.Resources r1;
        android.util.AttributeSet r2;
        androidx.ui.graphics.vector.VectorAssetBuilder r3;
        int i0, $i1;
        java.lang.Object r4;
        android.content.res.Resources$Theme r5;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.util.AttributeSet;

        r5 := @parameter3: android.content.res.Resources$Theme;

        r3 := @parameter4: androidx.ui.graphics.vector.VectorAssetBuilder;

        i0 := @parameter5: int;

        r4 := @parameter6: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r5 = (android.content.res.Resources$Theme) null;

     label1:
        staticinvoke <androidx.ui.graphics.vector.compat.XmlVectorParserKt: void parseCurrentVectorNode(org.xmlpull.v1.XmlPullParser,android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,androidx.ui.graphics.vector.VectorAssetBuilder)>($r0, r1, r2, r5, r3);

        return;
    }

    public static final org.xmlpull.v1.XmlPullParser seekToStartTag(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        org.xmlpull.v1.XmlPullParserException $r1;
        int i0;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label1:
        if i0 == 2 goto label2;

        if i0 == 1 goto label2;

        i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label2:
        if i0 == 2 goto label3;

        $r1 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r1.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r1;

     label3:
        return $r0;
    }

    public static final androidx.ui.graphics.vector.VectorAssetBuilder createVectorImageBuilder(org.xmlpull.v1.XmlPullParser, android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        android.content.res.Resources r1;
        android.content.res.Resources$Theme r2;
        android.util.AttributeSet r3;
        android.content.res.TypedArray r4, r21;
        float f0, f1, $f2, $f3, f4, f5, $f6, $f7;
        androidx.ui.unit.Dp r5, $r24, $r25;
        androidx.ui.graphics.vector.compat.AndroidVectorResources $r6, $r8, $r9, $r10, $r11;
        int[] $r7;
        int $i0, $i1, $i4, $i5;
        byte $b2, $b3, $b6, $b7;
        android.util.DisplayMetrics $r12, $r13;
        androidx.ui.graphics.vector.VectorAssetBuilder $r14;
        androidx.ui.unit.Dp$Companion $r15, $r16;
        org.xmlpull.v1.XmlPullParserException $r17, $r19;
        java.lang.String $r18, $r20, r22, r23;
        boolean $z2, $z3;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.Resources$Theme;

        r3 := @parameter3: android.util.AttributeSet;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "res");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "attrs");

        $r6 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int[] getSTYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY()>();

        r21 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r2, r3, $r7);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r21, "obtainAttributes(\n        res,\n        theme,\n        attrs,\n        AndroidVectorResources.STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY\n    )");

        r4 = r21;

        $r8 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i0 = virtualinvoke $r8.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_VIEWPORT_WIDTH()>();

        f4 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r4, $r0, "viewportWidth", $i0, 0.0F);

        $r9 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i1 = virtualinvoke $r9.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_VIEWPORT_HEIGHT()>();

        f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r4, $r0, "viewportHeight", $i1, 0.0F);

        $b2 = f4 cmpg 0.0F;

        if $b2 > 0 goto label01;

        $r19 = new org.xmlpull.v1.XmlPullParserException;

        r22 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r22, "vectorAttrs.positionDescription");

        $r20 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>(r22, "<VectorGraphic> tag requires viewportWidth > 0");

        specialinvoke $r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label01:
        $b3 = f0 cmpg 0.0F;

        if $b3 > 0 goto label02;

        $r17 = new org.xmlpull.v1.XmlPullParserException;

        r23 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r23, "vectorAttrs.positionDescription");

        $r18 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>(r23, "<VectorGraphic> tag requires viewportHeight > 0");

        specialinvoke $r17.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r18);

        throw $r17;

     label02:
        $r10 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i4 = virtualinvoke $r10.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_WIDTH()>();

        f5 = virtualinvoke r4.<android.content.res.TypedArray: float getDimension(int,float)>($i4, 0.0F);

        $r11 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i5 = virtualinvoke $r11.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_HEIGHT()>();

        f1 = virtualinvoke r4.<android.content.res.TypedArray: float getDimension(int,float)>($i5, 0.0F);

        $r12 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f2 = $r12.<android.util.DisplayMetrics: float density>;

        $f6 = f5 / $f2;

        $b6 = $f6 cmpg 0.0F;

        if $b6 != 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        if $z2 == 0 goto label05;

        $r16 = <androidx.ui.unit.Dp: androidx.ui.unit.Dp$Companion Companion>;

        $r24 = virtualinvoke $r16.<androidx.ui.unit.Dp$Companion: androidx.ui.unit.Dp getHairline()>();

        goto label06;

     label05:
        $r24 = new androidx.ui.unit.Dp;

        specialinvoke $r24.<androidx.ui.unit.Dp: void <init>(float)>($f6);

     label06:
        r5 = $r24;

        $r13 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f3 = $r13.<android.util.DisplayMetrics: float density>;

        $f7 = f1 / $f3;

        $b7 = $f7 cmpg 0.0F;

        if $b7 != 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        if $z3 == 0 goto label09;

        $r15 = <androidx.ui.unit.Dp: androidx.ui.unit.Dp$Companion Companion>;

        $r25 = virtualinvoke $r15.<androidx.ui.unit.Dp$Companion: androidx.ui.unit.Dp getHairline()>();

        goto label10;

     label09:
        $r25 = new androidx.ui.unit.Dp;

        specialinvoke $r25.<androidx.ui.unit.Dp: void <init>(float)>($f7);

     label10:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        $r14 = new androidx.ui.graphics.vector.VectorAssetBuilder;

        specialinvoke $r14.<androidx.ui.graphics.vector.VectorAssetBuilder: void <init>(java.lang.String,androidx.ui.unit.Dp,androidx.ui.unit.Dp,float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, r5, $r25, f4, f0, 1, null);

        return $r14;
    }

    public static final void parsePath(org.xmlpull.v1.XmlPullParser, android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, androidx.ui.graphics.vector.VectorAssetBuilder) throws java.lang.IllegalArgumentException
    {
        org.xmlpull.v1.XmlPullParser $r0;
        android.content.res.Resources r1;
        android.content.res.Resources$Theme r2;
        android.util.AttributeSet r3;
        androidx.ui.graphics.vector.VectorAssetBuilder r4;
        android.content.res.TypedArray r5, r29;
        java.lang.String r6, r30, $r31, r32, r33;
        androidx.core.content.res.ComplexColorCompat r7, r10, r12, r35;
        float f0, f1, f2, f3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        androidx.ui.graphics.StrokeCap r8, $r20;
        androidx.ui.graphics.StrokeJoin r9, $r22;
        androidx.ui.graphics.Brush r11, r36;
        androidx.ui.graphics.vector.compat.AndroidVectorResources $r13, $r15, $r16, $r17, $r18, $r19, $r21, $r23, $r24, $r25, $r26;
        int[] $r14;
        java.lang.IllegalArgumentException $r28;
        boolean z0;
        java.util.List r34;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.Resources$Theme;

        r3 := @parameter3: android.util.AttributeSet;

        r4 := @parameter4: androidx.ui.graphics.vector.VectorAssetBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "res");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "attrs");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "builder");

        $r13 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $r14 = virtualinvoke $r13.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int[] getSTYLEABLE_VECTOR_DRAWABLE_PATH()>();

        r29 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r2, r3, $r14);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r29, "obtainAttributes(\n        res,\n        theme,\n        attrs,\n        AndroidVectorResources.STYLEABLE_VECTOR_DRAWABLE_PATH\n    )");

        r5 = r29;

        z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, "pathData");

        if z0 != 0 goto label1;

        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No path data available");

        throw $r28;

     label1:
        $r15 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i2 = virtualinvoke $r15.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_NAME()>();

        r30 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getString(int)>($i2);

        if r30 != null goto label2;

        $r31 = "";

        goto label3;

     label2:
        r32 = r30;

        $r31 = r32;

     label3:
        r6 = $r31;

        $r16 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i3 = virtualinvoke $r16.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_PATH_DATA()>();

        r33 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getString(int)>($i3);

        r34 = staticinvoke <androidx.ui.graphics.vector.VectorKt: java.util.List addPathNodes(java.lang.String)>(r33);

        $r17 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i4 = virtualinvoke $r17.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_FILL_COLOR()>();

        r7 = staticinvoke <androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)>(r5, $r0, r2, "fillColor", $i4, 0);

        $r18 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i5 = virtualinvoke $r18.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_FILL_ALPHA()>();

        f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, $r0, "fillAlpha", $i5, 1.0F);

        $r19 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i6 = virtualinvoke $r19.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_CAP()>();

        i0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>(r5, $r0, "strokeLineCap", $i6, -1);

        $r20 = <androidx.ui.graphics.StrokeCap: androidx.ui.graphics.StrokeCap butt>;

        r8 = staticinvoke <androidx.ui.graphics.vector.compat.XmlVectorParserKt: androidx.ui.graphics.StrokeCap getStrokeLineCap(int,androidx.ui.graphics.StrokeCap)>(i0, $r20);

        $r21 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i7 = virtualinvoke $r21.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_JOIN()>();

        i1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>(r5, $r0, "strokeLineJoin", $i7, -1);

        $r22 = <androidx.ui.graphics.StrokeJoin: androidx.ui.graphics.StrokeJoin bevel>;

        r9 = staticinvoke <androidx.ui.graphics.vector.compat.XmlVectorParserKt: androidx.ui.graphics.StrokeJoin getStrokeLineJoin(int,androidx.ui.graphics.StrokeJoin)>(i1, $r22);

        $r23 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i8 = virtualinvoke $r23.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_MITER_LIMIT()>();

        f1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, $r0, "strokeMiterLimit", $i8, 1.0F);

        $r24 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i9 = virtualinvoke $r24.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_COLOR()>();

        r10 = staticinvoke <androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)>(r5, $r0, r2, "strokeColor", $i9, 0);

        $r25 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i10 = virtualinvoke $r25.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_ALPHA()>();

        f2 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, $r0, "strokeAlpha", $i10, 1.0F);

        $r26 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i11 = virtualinvoke $r26.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_WIDTH()>();

        f3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, $r0, "strokeWidth", $i11, 1.0F);

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        r35 = r7;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r35, "fillColor");

        r11 = staticinvoke <androidx.ui.graphics.vector.compat.XmlVectorParserKt: androidx.ui.graphics.Brush obtainBrushFromComplexColor(androidx.core.content.res.ComplexColorCompat)>(r35);

        r12 = r10;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r12, "strokeColor");

        r36 = staticinvoke <androidx.ui.graphics.vector.compat.XmlVectorParserKt: androidx.ui.graphics.Brush obtainBrushFromComplexColor(androidx.core.content.res.ComplexColorCompat)>(r12);

        virtualinvoke r4.<androidx.ui.graphics.vector.VectorAssetBuilder: androidx.ui.graphics.vector.VectorAssetBuilder addPath(java.util.List,java.lang.String,androidx.ui.graphics.Brush,float,androidx.ui.graphics.Brush,float,float,androidx.ui.graphics.StrokeCap,androidx.ui.graphics.StrokeJoin,float)>(r34, r6, r11, f0, r36, f2, f3, r8, r9, f1);

        return;
    }

    private static final androidx.ui.graphics.Brush obtainBrushFromComplexColor(androidx.core.content.res.ComplexColorCompat)
    {
        androidx.core.content.res.ComplexColorCompat r0;
        android.graphics.Shader r1, $r4;
        boolean $z0;
        androidx.ui.graphics.SolidColor $r2;
        int $i0;
        long $l1;
        androidx.ui.graphics.ShaderBrush $r3;
        androidx.ui.graphics.Brush $r5;

        r0 := @parameter0: androidx.core.content.res.ComplexColorCompat;

        $z0 = virtualinvoke r0.<androidx.core.content.res.ComplexColorCompat: boolean willDraw()>();

        if $z0 == 0 goto label3;

        r1 = virtualinvoke r0.<androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()>();

        if r1 == null goto label1;

        $r3 = new androidx.ui.graphics.ShaderBrush;

        $r4 = staticinvoke <androidx.ui.graphics.Shader: android.graphics.Shader constructor-impl(android.graphics.Shader)>(r1);

        specialinvoke $r3.<androidx.ui.graphics.ShaderBrush: void <init>(android.graphics.Shader,kotlin.jvm.internal.DefaultConstructorMarker)>($r4, null);

        $r5 = (androidx.ui.graphics.Brush) $r3;

        goto label2;

     label1:
        $r2 = new androidx.ui.graphics.SolidColor;

        $i0 = virtualinvoke r0.<androidx.core.content.res.ComplexColorCompat: int getColor()>();

        $l1 = staticinvoke <androidx.ui.graphics.ColorKt: long Color(int)>($i0);

        specialinvoke $r2.<androidx.ui.graphics.SolidColor: void <init>(long,kotlin.jvm.internal.DefaultConstructorMarker)>($l1, null);

        $r5 = (androidx.ui.graphics.Brush) $r2;

     label2:
        goto label4;

     label3:
        $r5 = (androidx.ui.graphics.Brush) null;

     label4:
        return $r5;
    }

    public static final void parseGroup(org.xmlpull.v1.XmlPullParser, android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, androidx.ui.graphics.vector.VectorAssetBuilder)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        android.content.res.Resources r1;
        android.content.res.Resources$Theme r2;
        android.util.AttributeSet r3;
        androidx.ui.graphics.vector.VectorAssetBuilder r4;
        android.content.res.TypedArray r5, r19;
        float f0, f1, f2, f3, f4, f5, f6;
        java.lang.String r6, r7, r20, $r21;
        androidx.ui.graphics.vector.compat.AndroidVectorResources $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        int[] $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.List r22;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: android.content.res.Resources$Theme;

        r3 := @parameter3: android.util.AttributeSet;

        r4 := @parameter4: androidx.ui.graphics.vector.VectorAssetBuilder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "res");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "attrs");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "builder");

        $r8 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $r9 = virtualinvoke $r8.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int[] getSTYLEABLE_VECTOR_DRAWABLE_GROUP()>();

        r19 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r1, r2, r3, $r9);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r19, "obtainAttributes(\n        res,\n        theme,\n        attrs,\n        AndroidVectorResources.STYLEABLE_VECTOR_DRAWABLE_GROUP\n    )");

        r5 = r19;

        $r10 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i0 = virtualinvoke $r10.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_ROTATION()>();

        f6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, $r0, "rotation", $i0, 0.0F);

        $r11 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i1 = virtualinvoke $r11.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_X()>();

        f0 = virtualinvoke r5.<android.content.res.TypedArray: float getFloat(int,float)>($i1, 0.0F);

        $r12 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i2 = virtualinvoke $r12.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_Y()>();

        f1 = virtualinvoke r5.<android.content.res.TypedArray: float getFloat(int,float)>($i2, 0.0F);

        $r13 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i3 = virtualinvoke $r13.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_X()>();

        f2 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, $r0, "scaleX", $i3, 1.0F);

        $r14 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i4 = virtualinvoke $r14.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_Y()>();

        f3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, $r0, "scaleY", $i4, 1.0F);

        $r15 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i5 = virtualinvoke $r15.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_X()>();

        f4 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, $r0, "translationX", $i5, 0.0F);

        $r16 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i6 = virtualinvoke $r16.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_Y()>();

        f5 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>(r5, $r0, "translationY", $i6, 0.0F);

        $r17 = <androidx.ui.graphics.vector.compat.AndroidVectorResources: androidx.ui.graphics.vector.compat.AndroidVectorResources INSTANCE>;

        $i7 = virtualinvoke $r17.<androidx.ui.graphics.vector.compat.AndroidVectorResources: int getSTYLEABLE_VECTOR_DRAWABLE_GROUP_NAME()>();

        r20 = virtualinvoke r5.<android.content.res.TypedArray: java.lang.String getString(int)>($i7);

        if r20 != null goto label1;

        $r21 = "";

        goto label2;

     label1:
        r7 = r20;

        $r21 = r7;

     label2:
        r6 = $r21;

        r22 = staticinvoke <androidx.ui.graphics.vector.VectorKt: java.util.List getEmptyPath()>();

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r4.<androidx.ui.graphics.vector.VectorAssetBuilder: androidx.ui.graphics.vector.VectorAssetBuilder pushGroup(java.lang.String,float,float,float,float,float,float,float,java.util.List)>(r6, f6, f0, f1, f2, f3, f4, f5, r22);

        return;
    }

    public static final void <clinit>()
    {
        return;
    }

