androidx.credentials.provider.PendingIntentHandler
<androidx.credentials.provider.PendingIntentHandler: androidx.credentials.provider.PendingIntentHandler$Companion Companion>
<androidx.credentials.provider.PendingIntentHandler: java.lang.String TAG>
    public void <init>()
    {
        androidx.credentials.provider.PendingIntentHandler r0;

        r0 := @this: androidx.credentials.provider.PendingIntentHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final androidx.credentials.provider.ProviderCreateCredentialRequest retrieveProviderCreateCredentialRequest(android.content.Intent)
    {
        android.content.Intent r0;
        androidx.credentials.provider.PendingIntentHandler$Companion $r1;
        androidx.credentials.provider.ProviderCreateCredentialRequest $r2;

        r0 := @parameter0: android.content.Intent;

        $r1 = <androidx.credentials.provider.PendingIntentHandler: androidx.credentials.provider.PendingIntentHandler$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.provider.PendingIntentHandler$Companion: androidx.credentials.provider.ProviderCreateCredentialRequest retrieveProviderCreateCredentialRequest(android.content.Intent)>(r0);

        return $r2;
    }

    public static final android.service.credentials.BeginGetCredentialRequest retrieveBeginGetCredentialRequest(android.content.Intent)
    {
        android.content.Intent r0;
        androidx.credentials.provider.PendingIntentHandler$Companion $r1;
        android.service.credentials.BeginGetCredentialRequest $r2;

        r0 := @parameter0: android.content.Intent;

        $r1 = <androidx.credentials.provider.PendingIntentHandler: androidx.credentials.provider.PendingIntentHandler$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.provider.PendingIntentHandler$Companion: android.service.credentials.BeginGetCredentialRequest retrieveBeginGetCredentialRequest(android.content.Intent)>(r0);

        return $r2;
    }

    public static final void setCreateCredentialResponse(android.content.Intent, androidx.credentials.CreateCredentialResponse)
    {
        android.content.Intent r0;
        androidx.credentials.CreateCredentialResponse r1;
        androidx.credentials.provider.PendingIntentHandler$Companion $r2;

        r0 := @parameter0: android.content.Intent;

        r1 := @parameter1: androidx.credentials.CreateCredentialResponse;

        $r2 = <androidx.credentials.provider.PendingIntentHandler: androidx.credentials.provider.PendingIntentHandler$Companion Companion>;

        virtualinvoke $r2.<androidx.credentials.provider.PendingIntentHandler$Companion: void setCreateCredentialResponse(android.content.Intent,androidx.credentials.CreateCredentialResponse)>(r0, r1);

        return;
    }

    public static final androidx.credentials.provider.ProviderGetCredentialRequest retrieveProviderGetCredentialRequest(android.content.Intent)
    {
        android.content.Intent r0;
        androidx.credentials.provider.PendingIntentHandler$Companion $r1;
        androidx.credentials.provider.ProviderGetCredentialRequest $r2;

        r0 := @parameter0: android.content.Intent;

        $r1 = <androidx.credentials.provider.PendingIntentHandler: androidx.credentials.provider.PendingIntentHandler$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.credentials.provider.PendingIntentHandler$Companion: androidx.credentials.provider.ProviderGetCredentialRequest retrieveProviderGetCredentialRequest(android.content.Intent)>(r0);

        return $r2;
    }

    public static final void setGetCredentialResponse(android.content.Intent, androidx.credentials.GetCredentialResponse)
    {
        android.content.Intent r0;
        androidx.credentials.GetCredentialResponse r1;
        androidx.credentials.provider.PendingIntentHandler$Companion $r2;

        r0 := @parameter0: android.content.Intent;

        r1 := @parameter1: androidx.credentials.GetCredentialResponse;

        $r2 = <androidx.credentials.provider.PendingIntentHandler: androidx.credentials.provider.PendingIntentHandler$Companion Companion>;

        virtualinvoke $r2.<androidx.credentials.provider.PendingIntentHandler$Companion: void setGetCredentialResponse(android.content.Intent,androidx.credentials.GetCredentialResponse)>(r0, r1);

        return;
    }

    public static final void setBeginGetCredentialResponse(android.content.Intent, android.service.credentials.BeginGetCredentialResponse)
    {
        android.content.Intent r0;
        android.service.credentials.BeginGetCredentialResponse r1;
        androidx.credentials.provider.PendingIntentHandler$Companion $r2;

        r0 := @parameter0: android.content.Intent;

        r1 := @parameter1: android.service.credentials.BeginGetCredentialResponse;

        $r2 = <androidx.credentials.provider.PendingIntentHandler: androidx.credentials.provider.PendingIntentHandler$Companion Companion>;

        virtualinvoke $r2.<androidx.credentials.provider.PendingIntentHandler$Companion: void setBeginGetCredentialResponse(android.content.Intent,android.service.credentials.BeginGetCredentialResponse)>(r0, r1);

        return;
    }

    public static final void setGetCredentialException(android.content.Intent, androidx.credentials.exceptions.GetCredentialException)
    {
        android.content.Intent r0;
        androidx.credentials.exceptions.GetCredentialException r1;
        androidx.credentials.provider.PendingIntentHandler$Companion $r2;

        r0 := @parameter0: android.content.Intent;

        r1 := @parameter1: androidx.credentials.exceptions.GetCredentialException;

        $r2 = <androidx.credentials.provider.PendingIntentHandler: androidx.credentials.provider.PendingIntentHandler$Companion Companion>;

        virtualinvoke $r2.<androidx.credentials.provider.PendingIntentHandler$Companion: void setGetCredentialException(android.content.Intent,androidx.credentials.exceptions.GetCredentialException)>(r0, r1);

        return;
    }

    public static final void setCreateCredentialException(android.content.Intent, androidx.credentials.exceptions.CreateCredentialException)
    {
        android.content.Intent r0;
        androidx.credentials.exceptions.CreateCredentialException r1;
        androidx.credentials.provider.PendingIntentHandler$Companion $r2;

        r0 := @parameter0: android.content.Intent;

        r1 := @parameter1: androidx.credentials.exceptions.CreateCredentialException;

        $r2 = <androidx.credentials.provider.PendingIntentHandler: androidx.credentials.provider.PendingIntentHandler$Companion Companion>;

        virtualinvoke $r2.<androidx.credentials.provider.PendingIntentHandler$Companion: void setCreateCredentialException(android.content.Intent,androidx.credentials.exceptions.CreateCredentialException)>(r0, r1);

        return;
    }

    static void <clinit>()
    {
        androidx.credentials.provider.PendingIntentHandler$Companion $r0;

        $r0 = new androidx.credentials.provider.PendingIntentHandler$Companion;

        specialinvoke $r0.<androidx.credentials.provider.PendingIntentHandler$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.provider.PendingIntentHandler: androidx.credentials.provider.PendingIntentHandler$Companion Companion> = $r0;

        return;
    }

androidx.credentials.provider.PendingIntentHandler$Companion
    private void <init>()
    {
        androidx.credentials.provider.PendingIntentHandler$Companion r0;

        r0 := @this: androidx.credentials.provider.PendingIntentHandler$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.credentials.provider.ProviderCreateCredentialRequest retrieveProviderCreateCredentialRequest(android.content.Intent)
    {
        androidx.credentials.provider.PendingIntentHandler$Companion r0;
        android.content.Intent r1;
        android.service.credentials.CreateCredentialRequest r2;
        java.lang.Object $r3;
        androidx.credentials.provider.ProviderCreateCredentialRequest $r4, $r13;
        androidx.credentials.CreateCredentialRequest$Companion $r5;
        java.lang.String $r6, $r10;
        android.os.Bundle $r7, $r8;
        android.service.credentials.CallingAppInfo $r9, $r12;
        androidx.credentials.CreateCredentialRequest $r11;

        r0 := @this: androidx.credentials.provider.PendingIntentHandler$Companion;

        r1 := @parameter0: android.content.Intent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intent");

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.Object getParcelableExtra(java.lang.String,java.lang.Class)>("android.service.credentials.extra.CREATE_CREDENTIAL_REQUEST", class "Landroid/service/credentials/CreateCredentialRequest;");

        r2 = (android.service.credentials.CreateCredentialRequest) $r3;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PendingIntentHandler", "Request not found in pendingIntent");

        $r13 = (androidx.credentials.provider.ProviderCreateCredentialRequest) r2;

        return $r13;

     label1:
        $r4 = new androidx.credentials.provider.ProviderCreateCredentialRequest;

        $r5 = <androidx.credentials.CreateCredentialRequest: androidx.credentials.CreateCredentialRequest$Companion Companion>;

        $r6 = virtualinvoke r2.<android.service.credentials.CreateCredentialRequest: java.lang.String getType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "frameworkReq.type");

        $r7 = virtualinvoke r2.<android.service.credentials.CreateCredentialRequest: android.os.Bundle getData()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "frameworkReq.data");

        $r8 = virtualinvoke r2.<android.service.credentials.CreateCredentialRequest: android.os.Bundle getData()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "frameworkReq.data");

        $r9 = virtualinvoke r2.<android.service.credentials.CreateCredentialRequest: android.service.credentials.CallingAppInfo getCallingAppInfo()>();

        $r10 = virtualinvoke $r9.<android.service.credentials.CallingAppInfo: java.lang.String getOrigin()>();

        $r11 = virtualinvoke $r5.<androidx.credentials.CreateCredentialRequest$Companion: androidx.credentials.CreateCredentialRequest createFrom(java.lang.String,android.os.Bundle,android.os.Bundle,boolean,java.lang.String)>($r6, $r7, $r8, 0, $r10);

        if $r11 != null goto label2;

        return null;

     label2:
        $r12 = virtualinvoke r2.<android.service.credentials.CreateCredentialRequest: android.service.credentials.CallingAppInfo getCallingAppInfo()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "frameworkReq.callingAppInfo");

        specialinvoke $r4.<androidx.credentials.provider.ProviderCreateCredentialRequest: void <init>(androidx.credentials.CreateCredentialRequest,android.service.credentials.CallingAppInfo)>($r11, $r12);

        return $r4;
    }

    public final android.service.credentials.BeginGetCredentialRequest retrieveBeginGetCredentialRequest(android.content.Intent)
    {
        androidx.credentials.provider.PendingIntentHandler$Companion r0;
        android.content.Intent r1;
        android.service.credentials.BeginGetCredentialRequest r2, r3, $r6;
        java.lang.Object $r4;
        androidx.credentials.provider.utils.BeginGetCredentialUtil$Companion $r5;

        r0 := @this: androidx.credentials.provider.PendingIntentHandler$Companion;

        r1 := @parameter0: android.content.Intent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intent");

        $r4 = virtualinvoke r1.<android.content.Intent: java.lang.Object getParcelableExtra(java.lang.String,java.lang.Class)>("android.service.credentials.extra.BEGIN_GET_CREDENTIAL_REQUEST", class "Landroid/service/credentials/BeginGetCredentialRequest;");

        r2 = (android.service.credentials.BeginGetCredentialRequest) $r4;

        if r2 == null goto label1;

        r3 = r2;

        $r5 = <androidx.credentials.provider.utils.BeginGetCredentialUtil: androidx.credentials.provider.utils.BeginGetCredentialUtil$Companion Companion>;

        $r6 = virtualinvoke $r5.<androidx.credentials.provider.utils.BeginGetCredentialUtil$Companion: android.service.credentials.BeginGetCredentialRequest convertToStructuredRequest$credentials_release(android.service.credentials.BeginGetCredentialRequest)>(r3);

        goto label2;

     label1:
        $r6 = null;

     label2:
        return $r6;
    }

    public final void setCreateCredentialResponse(android.content.Intent, androidx.credentials.CreateCredentialResponse)
    {
        androidx.credentials.provider.PendingIntentHandler$Companion r0;
        android.content.Intent r1;
        androidx.credentials.CreateCredentialResponse r2;
        android.credentials.CreateCredentialResponse $r3;
        android.os.Bundle $r4;
        android.os.Parcelable $r5;

        r0 := @this: androidx.credentials.provider.PendingIntentHandler$Companion;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: androidx.credentials.CreateCredentialResponse;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "response");

        $r3 = new android.credentials.CreateCredentialResponse;

        $r4 = virtualinvoke r2.<androidx.credentials.CreateCredentialResponse: android.os.Bundle getData()>();

        specialinvoke $r3.<android.credentials.CreateCredentialResponse: void <init>(android.os.Bundle)>($r4);

        $r5 = (android.os.Parcelable) $r3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.service.credentials.extra.CREATE_CREDENTIAL_RESPONSE", $r5);

        return;
    }

    public final androidx.credentials.provider.ProviderGetCredentialRequest retrieveProviderGetCredentialRequest(android.content.Intent)
    {
        androidx.credentials.provider.PendingIntentHandler$Companion r0;
        android.content.Intent r1;
        android.service.credentials.GetCredentialRequest r2;
        java.lang.Object $r3;
        androidx.credentials.provider.ProviderGetCredentialRequest$Companion $r4;
        androidx.credentials.provider.ProviderGetCredentialRequest $r5;

        r0 := @this: androidx.credentials.provider.PendingIntentHandler$Companion;

        r1 := @parameter0: android.content.Intent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intent");

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.Object getParcelableExtra(java.lang.String,java.lang.Class)>("android.service.credentials.extra.GET_CREDENTIAL_REQUEST", class "Landroid/service/credentials/GetCredentialRequest;");

        r2 = (android.service.credentials.GetCredentialRequest) $r3;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PendingIntentHandler", "Get request from framework is null");

        return null;

     label1:
        $r4 = <androidx.credentials.provider.ProviderGetCredentialRequest: androidx.credentials.provider.ProviderGetCredentialRequest$Companion Companion>;

        $r5 = virtualinvoke $r4.<androidx.credentials.provider.ProviderGetCredentialRequest$Companion: androidx.credentials.provider.ProviderGetCredentialRequest createFrom$credentials_release(android.service.credentials.GetCredentialRequest)>(r2);

        return $r5;
    }

    public final void setGetCredentialResponse(android.content.Intent, androidx.credentials.GetCredentialResponse)
    {
        androidx.credentials.provider.PendingIntentHandler$Companion r0;
        android.content.Intent r1;
        androidx.credentials.GetCredentialResponse r2;
        android.credentials.GetCredentialResponse $r3;
        android.credentials.Credential $r4;
        androidx.credentials.Credential $r5, $r7;
        java.lang.String $r6;
        android.os.Bundle $r8;
        android.os.Parcelable $r9;

        r0 := @this: androidx.credentials.provider.PendingIntentHandler$Companion;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: androidx.credentials.GetCredentialResponse;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "response");

        $r3 = new android.credentials.GetCredentialResponse;

        $r4 = new android.credentials.Credential;

        $r5 = virtualinvoke r2.<androidx.credentials.GetCredentialResponse: androidx.credentials.Credential getCredential()>();

        $r6 = virtualinvoke $r5.<androidx.credentials.Credential: java.lang.String getType()>();

        $r7 = virtualinvoke r2.<androidx.credentials.GetCredentialResponse: androidx.credentials.Credential getCredential()>();

        $r8 = virtualinvoke $r7.<androidx.credentials.Credential: android.os.Bundle getData()>();

        specialinvoke $r4.<android.credentials.Credential: void <init>(java.lang.String,android.os.Bundle)>($r6, $r8);

        specialinvoke $r3.<android.credentials.GetCredentialResponse: void <init>(android.credentials.Credential)>($r4);

        $r9 = (android.os.Parcelable) $r3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.service.credentials.extra.GET_CREDENTIAL_RESPONSE", $r9);

        return;
    }

    public final void setBeginGetCredentialResponse(android.content.Intent, android.service.credentials.BeginGetCredentialResponse)
    {
        androidx.credentials.provider.PendingIntentHandler$Companion r0;
        android.content.Intent r1;
        android.service.credentials.BeginGetCredentialResponse r2;
        android.os.Parcelable $r3;

        r0 := @this: androidx.credentials.provider.PendingIntentHandler$Companion;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.service.credentials.BeginGetCredentialResponse;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "response");

        $r3 = (android.os.Parcelable) r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.service.credentials.extra.BEGIN_GET_CREDENTIAL_RESPONSE", $r3);

        return;
    }

    public final void setGetCredentialException(android.content.Intent, androidx.credentials.exceptions.GetCredentialException)
    {
        androidx.credentials.provider.PendingIntentHandler$Companion r0;
        android.content.Intent r1;
        androidx.credentials.exceptions.GetCredentialException r2;
        android.credentials.GetCredentialException $r3;
        java.lang.String $r4, $r5;
        java.io.Serializable $r6;

        r0 := @this: androidx.credentials.provider.PendingIntentHandler$Companion;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: androidx.credentials.exceptions.GetCredentialException;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "exception");

        $r3 = new android.credentials.GetCredentialException;

        $r4 = virtualinvoke r2.<androidx.credentials.exceptions.GetCredentialException: java.lang.String getType()>();

        $r5 = virtualinvoke r2.<androidx.credentials.exceptions.GetCredentialException: java.lang.String getMessage()>();

        specialinvoke $r3.<android.credentials.GetCredentialException: void <init>(java.lang.String,java.lang.String)>($r4, $r5);

        $r6 = (java.io.Serializable) $r3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("android.service.credentials.extra.GET_CREDENTIAL_EXCEPTION", $r6);

        return;
    }

    public final void setCreateCredentialException(android.content.Intent, androidx.credentials.exceptions.CreateCredentialException)
    {
        androidx.credentials.provider.PendingIntentHandler$Companion r0;
        android.content.Intent r1;
        androidx.credentials.exceptions.CreateCredentialException r2;
        android.credentials.CreateCredentialException $r3;
        java.lang.String $r4, $r5;
        java.io.Serializable $r6;

        r0 := @this: androidx.credentials.provider.PendingIntentHandler$Companion;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: androidx.credentials.exceptions.CreateCredentialException;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intent");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "exception");

        $r3 = new android.credentials.CreateCredentialException;

        $r4 = virtualinvoke r2.<androidx.credentials.exceptions.CreateCredentialException: java.lang.String getType()>();

        $r5 = virtualinvoke r2.<androidx.credentials.exceptions.CreateCredentialException: java.lang.String getMessage()>();

        specialinvoke $r3.<android.credentials.CreateCredentialException: void <init>(java.lang.String,java.lang.String)>($r4, $r5);

        $r6 = (java.io.Serializable) $r3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("android.service.credentials.extra.CREATE_CREDENTIAL_EXCEPTION", $r6);

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.provider.PendingIntentHandler$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.provider.PendingIntentHandler$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.provider.PendingIntentHandler$Companion: void <init>()>();

        return;
    }

