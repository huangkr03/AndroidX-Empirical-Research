androidx.ui.input.TextInputService
<androidx.ui.input.TextInputService: androidx.ui.input.PlatformTextInputService platformTextInputService>
<androidx.ui.input.TextInputService: int nextSessionToken>
<androidx.ui.input.TextInputService: int currentSessionToken>
    public void <init>(androidx.ui.input.PlatformTextInputService)
    {
        androidx.ui.input.TextInputService r0;
        androidx.ui.input.PlatformTextInputService r1;

        r0 := @this: androidx.ui.input.TextInputService;

        r1 := @parameter0: androidx.ui.input.PlatformTextInputService;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "platformTextInputService");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.input.TextInputService: androidx.ui.input.PlatformTextInputService platformTextInputService> = r1;

        r0.<androidx.ui.input.TextInputService: int nextSessionToken> = 1;

        return;
    }

    private final void ignoreIfExpired(int, kotlin.jvm.functions.Function0)
    {
        androidx.ui.input.TextInputService r0;
        int i0, $i1;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.ui.input.TextInputService;

        i0 := @parameter0: int;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        if i0 <= 0 goto label1;

        $i1 = staticinvoke <androidx.ui.input.TextInputService: int access$getCurrentSessionToken$p(androidx.ui.input.TextInputService)>(r0);

        if i0 != $i1 goto label1;

        interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label1:
        return;
    }

    public int startInput(androidx.ui.input.TextFieldValue, androidx.ui.input.KeyboardType, androidx.ui.input.ImeAction, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        androidx.ui.input.TextInputService r0, r6;
        androidx.ui.input.TextFieldValue r1;
        androidx.ui.input.KeyboardType r2;
        androidx.ui.input.ImeAction r3;
        kotlin.jvm.functions.Function1 r4, r5;
        int i0, $i1, $i2;
        androidx.ui.input.PlatformTextInputService $r7;

        r0 := @this: androidx.ui.input.TextInputService;

        r1 := @parameter0: androidx.ui.input.TextFieldValue;

        r2 := @parameter1: androidx.ui.input.KeyboardType;

        r3 := @parameter2: androidx.ui.input.ImeAction;

        r4 := @parameter3: kotlin.jvm.functions.Function1;

        r5 := @parameter4: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "keyboardType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "imeAction");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "onEditCommand");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "onImeActionPerformed");

        $r7 = r0.<androidx.ui.input.TextInputService: androidx.ui.input.PlatformTextInputService platformTextInputService>;

        interfaceinvoke $r7.<androidx.ui.input.PlatformTextInputService: void startInput(androidx.ui.input.TextFieldValue,androidx.ui.input.KeyboardType,androidx.ui.input.ImeAction,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>(r1, r2, r3, r4, r5);

        r6 = r0;

        i0 = r6.<androidx.ui.input.TextInputService: int nextSessionToken>;

        $i1 = i0 + 1;

        r6.<androidx.ui.input.TextInputService: int nextSessionToken> = $i1;

        r0.<androidx.ui.input.TextInputService: int currentSessionToken> = i0;

        $i2 = r0.<androidx.ui.input.TextInputService: int currentSessionToken>;

        return $i2;
    }

    public void stopInput(int)
    {
        androidx.ui.input.TextInputService r0, r1;
        int i0, $i1;
        androidx.ui.input.PlatformTextInputService $r2;

        r0 := @this: androidx.ui.input.TextInputService;

        i0 := @parameter0: int;

        r1 = r0;

        if i0 <= 0 goto label1;

        $i1 = staticinvoke <androidx.ui.input.TextInputService: int access$getCurrentSessionToken$p(androidx.ui.input.TextInputService)>(r1);

        if i0 != $i1 goto label1;

        $r2 = r0.<androidx.ui.input.TextInputService: androidx.ui.input.PlatformTextInputService platformTextInputService>;

        interfaceinvoke $r2.<androidx.ui.input.PlatformTextInputService: void stopInput()>();

     label1:
        return;
    }

    public void showSoftwareKeyboard(int)
    {
        androidx.ui.input.TextInputService r0, r1;
        int i0, $i1;
        androidx.ui.input.PlatformTextInputService $r2;

        r0 := @this: androidx.ui.input.TextInputService;

        i0 := @parameter0: int;

        r1 = r0;

        if i0 <= 0 goto label1;

        $i1 = staticinvoke <androidx.ui.input.TextInputService: int access$getCurrentSessionToken$p(androidx.ui.input.TextInputService)>(r1);

        if i0 != $i1 goto label1;

        $r2 = r0.<androidx.ui.input.TextInputService: androidx.ui.input.PlatformTextInputService platformTextInputService>;

        interfaceinvoke $r2.<androidx.ui.input.PlatformTextInputService: void showSoftwareKeyboard()>();

     label1:
        return;
    }

    public void hideSoftwareKeyboard(int)
    {
        androidx.ui.input.TextInputService r0, r1;
        int i0, $i1;
        androidx.ui.input.PlatformTextInputService $r2;

        r0 := @this: androidx.ui.input.TextInputService;

        i0 := @parameter0: int;

        r1 = r0;

        if i0 <= 0 goto label1;

        $i1 = staticinvoke <androidx.ui.input.TextInputService: int access$getCurrentSessionToken$p(androidx.ui.input.TextInputService)>(r1);

        if i0 != $i1 goto label1;

        $r2 = r0.<androidx.ui.input.TextInputService: androidx.ui.input.PlatformTextInputService platformTextInputService>;

        interfaceinvoke $r2.<androidx.ui.input.PlatformTextInputService: void hideSoftwareKeyboard()>();

     label1:
        return;
    }

    public void onStateUpdated(int, androidx.ui.input.TextFieldValue)
    {
        androidx.ui.input.TextInputService r0, r2;
        int i0, $i1;
        androidx.ui.input.TextFieldValue r1;
        androidx.ui.input.PlatformTextInputService $r3;

        r0 := @this: androidx.ui.input.TextInputService;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.ui.input.TextFieldValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        r2 = r0;

        if i0 <= 0 goto label1;

        $i1 = staticinvoke <androidx.ui.input.TextInputService: int access$getCurrentSessionToken$p(androidx.ui.input.TextInputService)>(r2);

        if i0 != $i1 goto label1;

        $r3 = r0.<androidx.ui.input.TextInputService: androidx.ui.input.PlatformTextInputService platformTextInputService>;

        interfaceinvoke $r3.<androidx.ui.input.PlatformTextInputService: void onStateUpdated(androidx.ui.input.TextFieldValue)>(r1);

     label1:
        return;
    }

    public void notifyFocusedRect(int, androidx.ui.geometry.Rect)
    {
        androidx.ui.input.TextInputService r0, r2;
        int i0, $i1;
        androidx.ui.geometry.Rect r1;
        androidx.ui.input.PlatformTextInputService $r3;

        r0 := @this: androidx.ui.input.TextInputService;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.ui.geometry.Rect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        r2 = r0;

        if i0 <= 0 goto label1;

        $i1 = staticinvoke <androidx.ui.input.TextInputService: int access$getCurrentSessionToken$p(androidx.ui.input.TextInputService)>(r2);

        if i0 != $i1 goto label1;

        $r3 = r0.<androidx.ui.input.TextInputService: androidx.ui.input.PlatformTextInputService platformTextInputService>;

        interfaceinvoke $r3.<androidx.ui.input.PlatformTextInputService: void notifyFocusedRect(androidx.ui.geometry.Rect)>(r1);

     label1:
        return;
    }

    public static final int access$getCurrentSessionToken$p(androidx.ui.input.TextInputService)
    {
        androidx.ui.input.TextInputService r0;
        int $i0;

        r0 := @parameter0: androidx.ui.input.TextInputService;

        $i0 = r0.<androidx.ui.input.TextInputService: int currentSessionToken>;

        return $i0;
    }

