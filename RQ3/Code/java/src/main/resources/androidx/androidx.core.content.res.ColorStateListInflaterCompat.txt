androidx.core.content.res.ColorStateListInflaterCompat
<androidx.core.content.res.ColorStateListInflaterCompat: java.lang.ThreadLocal sTempTypedValue>
    private void <init>()
    {
        androidx.core.content.res.ColorStateListInflaterCompat r0;

        r0 := @this: androidx.core.content.res.ColorStateListInflaterCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.content.res.ColorStateList inflate(android.content.res.Resources, int, android.content.res.Resources$Theme)
    {
        android.content.res.Resources r0;
        int i0;
        android.content.res.Resources$Theme r1;
        android.content.res.ColorStateList $r2;
        java.lang.Throwable $r3, r5;
        android.content.res.XmlResourceParser r4;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        r1 := @parameter2: android.content.res.Resources$Theme;

     label1:
        r4 = virtualinvoke r0.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        $r2 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>(r0, r4, r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r5 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CSLCompat", "Failed to inflate ColorStateList.", r5);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static android.content.res.ColorStateList createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.content.res.Resources$Theme r2;
        android.util.AttributeSet r3;
        int i0, $i1;
        android.content.res.ColorStateList $r4;
        org.xmlpull.v1.XmlPullParserException $r5;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.content.res.Resources$Theme;

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

     label1:
        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i1;

        if $i1 == 2 goto label2;

        if i0 == 1 goto label2;

        goto label1;

     label2:
        if i0 == 2 goto label3;

        $r5 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r5;

     label3:
        $r4 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r0, r1, r3, r2);

        return $r4;
    }

    public static android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        java.lang.String r4, $r8, $r12;
        boolean $z0;
        android.content.res.ColorStateList $r5;
        org.xmlpull.v1.XmlPullParserException $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r11;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("selector");

        if $z0 != 0 goto label1;

        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid color state list tag ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label1:
        $r5 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r0, r1, r2, r3);

        return $r5;
    }

    private static android.content.res.ColorStateList inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.Resources$Theme r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, i22, i23, $i24, $i25, i26, i27, $i28, i29;
        android.content.res.ColorStateList $r4, $r10;
        java.lang.String $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int[] $r6, r13, r16, r17, r18;
        java.lang.Object[] $r7;
        android.content.res.XmlResourceParser $r9;
        java.lang.Throwable $r11, r15;
        int[][] r12, r19;
        android.content.res.TypedArray r14;
        float f0, f1;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: android.content.res.Resources$Theme;

        $i5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = $i5 + 1;

        r12 = newarray (int[])[20];

        $i6 = lengthof r12;

        r13 = newarray (int)[$i6];

        i20 = 0;

     label01:
        $i21 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i21;

        if $i21 == 1 goto label18;

        $i7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i1 = $i7;

        if $i7 >= i0 goto label02;

        if i2 == 3 goto label18;

     label02:
        if i2 != 2 goto label01;

        if i1 > i0 goto label01;

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 != 0 goto label03;

        goto label01;

     label03:
        $r6 = <androidx.core.R$styleable: int[] ColorStateListItem>;

        r14 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>(r0, r3, r2, $r6);

        $i8 = <androidx.core.R$styleable: int ColorStateListItem_android_color>;

        i22 = virtualinvoke r14.<android.content.res.TypedArray: int getResourceId(int,int)>($i8, -1);

        if i22 == -1 goto label07;

        $z4 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: boolean isColorInt(android.content.res.Resources,int)>(r0, i22);

        if $z4 != 0 goto label07;

     label04:
        $r9 = virtualinvoke r0.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i22);

        $r10 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>(r0, $r9, r3);

        i23 = virtualinvoke $r10.<android.content.res.ColorStateList: int getDefaultColor()>();

     label05:
        goto label08;

     label06:
        $r11 := @caughtexception;

        r15 = $r11;

        $i19 = <androidx.core.R$styleable: int ColorStateListItem_android_color>;

        i23 = virtualinvoke r14.<android.content.res.TypedArray: int getColor(int,int)>($i19, -65281);

        goto label08;

     label07:
        $i9 = <androidx.core.R$styleable: int ColorStateListItem_android_color>;

        i23 = virtualinvoke r14.<android.content.res.TypedArray: int getColor(int,int)>($i9, -65281);

     label08:
        f0 = 1.0F;

        $i24 = <androidx.core.R$styleable: int ColorStateListItem_android_alpha>;

        $z5 = virtualinvoke r14.<android.content.res.TypedArray: boolean hasValue(int)>($i24);

        if $z5 == 0 goto label09;

        $i18 = <androidx.core.R$styleable: int ColorStateListItem_android_alpha>;

        f0 = virtualinvoke r14.<android.content.res.TypedArray: float getFloat(int,float)>($i18, f0);

        goto label10;

     label09:
        $i10 = <androidx.core.R$styleable: int ColorStateListItem_alpha>;

        $z1 = virtualinvoke r14.<android.content.res.TypedArray: boolean hasValue(int)>($i10);

        if $z1 == 0 goto label10;

        $i17 = <androidx.core.R$styleable: int ColorStateListItem_alpha>;

        f0 = virtualinvoke r14.<android.content.res.TypedArray: float getFloat(int,float)>($i17, f0);

     label10:
        $i25 = <android.os.Build$VERSION: int SDK_INT>;

        if $i25 < 31 goto label11;

        $i15 = <androidx.core.R$styleable: int ColorStateListItem_android_lStar>;

        $z3 = virtualinvoke r14.<android.content.res.TypedArray: boolean hasValue(int)>($i15);

        if $z3 == 0 goto label11;

        $i16 = <androidx.core.R$styleable: int ColorStateListItem_android_lStar>;

        f1 = virtualinvoke r14.<android.content.res.TypedArray: float getFloat(int,float)>($i16, -1.0F);

        goto label12;

     label11:
        $i11 = <androidx.core.R$styleable: int ColorStateListItem_lStar>;

        f1 = virtualinvoke r14.<android.content.res.TypedArray: float getFloat(int,float)>($i11, -1.0F);

     label12:
        virtualinvoke r14.<android.content.res.TypedArray: void recycle()>();

        i26 = 0;

        i3 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeCount()>();

        r16 = newarray (int)[i3];

        i27 = 0;

     label13:
        if i27 >= i3 goto label17;

        i4 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeNameResource(int)>(i27);

        if i4 == 16843173 goto label16;

        if i4 == 16843551 goto label16;

        $i12 = <androidx.core.R$attr: int alpha>;

        if i4 == $i12 goto label16;

        $i13 = <androidx.core.R$attr: int lStar>;

        if i4 == $i13 goto label16;

        $i14 = i26;

        i26 = i26 + 1;

        $z2 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>(i27, 0);

        if $z2 == 0 goto label14;

        $i28 = i4;

        goto label15;

     label14:
        $i28 = neg i4;

     label15:
        r16[$i14] = $i28;

     label16:
        i27 = i27 + 1;

        goto label13;

     label17:
        r17 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>(r16, i26);

        i29 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float,float)>(i23, f0, f1);

        r13 = staticinvoke <androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)>(r13, i20, i29);

        $r7 = staticinvoke <androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)>(r12, i20, r17);

        r12 = (int[][]) $r7;

        i20 = i20 + 1;

        goto label01;

     label18:
        r18 = newarray (int)[i20];

        r19 = newarray (int[])[i20];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, 0, r18, 0, i20);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, 0, r19, 0, i20);

        $r4 = new android.content.res.ColorStateList;

        specialinvoke $r4.<android.content.res.ColorStateList: void <init>(int[][],int[])>(r19, r18);

        return $r4;

        catch java.lang.Exception from label04 to label05 with label06;
    }

    private static boolean isColorInt(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0, $i1, $i2;
        android.util.TypedValue r1;
        boolean $z0;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        r1 = staticinvoke <androidx.core.content.res.ColorStateListInflaterCompat: android.util.TypedValue getTypedValue()>();

        virtualinvoke r0.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r1, 1);

        $i1 = r1.<android.util.TypedValue: int type>;

        if $i1 < 28 goto label1;

        $i2 = r1.<android.util.TypedValue: int type>;

        if $i2 > 31 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static android.util.TypedValue getTypedValue()
    {
        java.lang.ThreadLocal $r0, $r3;
        java.lang.Object $r1;
        android.util.TypedValue $r2, r4;

        $r0 = <androidx.core.content.res.ColorStateListInflaterCompat: java.lang.ThreadLocal sTempTypedValue>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r4 = (android.util.TypedValue) $r1;

        if r4 != null goto label1;

        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        r4 = $r2;

        $r3 = <androidx.core.content.res.ColorStateListInflaterCompat: java.lang.ThreadLocal sTempTypedValue>;

        virtualinvoke $r3.<java.lang.ThreadLocal: void set(java.lang.Object)>(r4);

     label1:
        return r4;
    }

    private static android.content.res.TypedArray obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[])
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        android.util.AttributeSet r2;
        int[] r3;
        android.content.res.TypedArray $r4;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        r2 := @parameter2: android.util.AttributeSet;

        r3 := @parameter3: int[];

        if r1 != null goto label1;

        $r4 = virtualinvoke r0.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, r3);

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, r3, 0, 0);

     label2:
        return $r4;
    }

    private static int modulateColorAlpha(int, float, float)
    {
        float f0, f1, $f2, $f3, $f4, $f5, $f6;
        boolean z0, $z1;
        int i0, i1, $i3, $i4, $i5, $i6, i8;
        androidx.core.content.res.CamColor r0;
        byte $b2, $b7, $b9;

        i8 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $b2 = f1 cmpl 0.0F;

        if $b2 < 0 goto label1;

        $b7 = f1 cmpg 100.0F;

        if $b7 > 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $b9 = f0 cmpl 1.0F;

        if $b9 != 0 goto label3;

        if z0 != 0 goto label3;

        return i8;

     label3:
        i0 = staticinvoke <android.graphics.Color: int alpha(int)>(i8);

        $f2 = (float) i0;

        $f3 = $f2 * f0;

        $f4 = $f3 + 0.5F;

        $i3 = (int) $f4;

        i1 = staticinvoke <androidx.core.math.MathUtils: int clamp(int,int,int)>($i3, 0, 255);

        if z0 == 0 goto label4;

        r0 = staticinvoke <androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColor(int)>(i8);

        $f5 = virtualinvoke r0.<androidx.core.content.res.CamColor: float getHue()>();

        $f6 = virtualinvoke r0.<androidx.core.content.res.CamColor: float getChroma()>();

        i8 = staticinvoke <androidx.core.content.res.CamColor: int toColor(float,float,float)>($f5, $f6, f1);

     label4:
        $i5 = i8 & 16777215;

        $i4 = i1 << 24;

        $i6 = $i5 | $i4;

        return $i6;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <androidx.core.content.res.ColorStateListInflaterCompat: java.lang.ThreadLocal sTempTypedValue> = $r0;

        return;
    }

