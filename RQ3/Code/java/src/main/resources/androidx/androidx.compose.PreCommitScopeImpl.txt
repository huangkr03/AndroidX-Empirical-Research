androidx.compose.PreCommitScopeImpl
<androidx.compose.PreCommitScopeImpl: kotlin.jvm.functions.Function1 onCommit>
<androidx.compose.PreCommitScopeImpl: kotlin.jvm.functions.Function0 disposeCallback>
    public void <init>(kotlin.jvm.functions.Function1)
    {
        androidx.compose.PreCommitScopeImpl r0;
        kotlin.jvm.functions.Function1 r1;
        kotlin.jvm.functions.Function0 $r2;

        r0 := @this: androidx.compose.PreCommitScopeImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "onCommit");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.PreCommitScopeImpl: kotlin.jvm.functions.Function1 onCommit> = r1;

        $r2 = staticinvoke <androidx.compose.EffectsKt: kotlin.jvm.functions.Function0 access$getEmptyDispose$cp$s535325163()>();

        r0.<androidx.compose.PreCommitScopeImpl: kotlin.jvm.functions.Function0 disposeCallback> = $r2;

        return;
    }

    public final kotlin.jvm.functions.Function1 getOnCommit$compose_runtime_release()
    {
        androidx.compose.PreCommitScopeImpl r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.PreCommitScopeImpl;

        $r1 = r0.<androidx.compose.PreCommitScopeImpl: kotlin.jvm.functions.Function1 onCommit>;

        return $r1;
    }

    public final kotlin.jvm.functions.Function0 getDisposeCallback$compose_runtime_release()
    {
        androidx.compose.PreCommitScopeImpl r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.compose.PreCommitScopeImpl;

        $r1 = r0.<androidx.compose.PreCommitScopeImpl: kotlin.jvm.functions.Function0 disposeCallback>;

        return $r1;
    }

    public final void setDisposeCallback$compose_runtime_release(kotlin.jvm.functions.Function0)
    {
        androidx.compose.PreCommitScopeImpl r0;
        kotlin.jvm.functions.Function0 r1;

        r0 := @this: androidx.compose.PreCommitScopeImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.PreCommitScopeImpl: kotlin.jvm.functions.Function0 disposeCallback> = r1;

        return;
    }

    public void onDispose(kotlin.jvm.functions.Function0)
    {
        androidx.compose.PreCommitScopeImpl r0;
        kotlin.jvm.functions.Function0 r1, $r2, $r3;
        boolean z0, z1, $z3, z4;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5, r7;
        java.lang.Throwable $r6;

        r0 := @this: androidx.compose.PreCommitScopeImpl;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        $r2 = virtualinvoke r0.<androidx.compose.PreCommitScopeImpl: kotlin.jvm.functions.Function0 getDisposeCallback$compose_runtime_release()>();

        $r3 = staticinvoke <androidx.compose.EffectsKt: kotlin.jvm.functions.Function0 access$getEmptyDispose$cp$s535325163()>();

        if $r2 != $r3 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        z1 = 0;

        z4 = 0;

        if z0 != 0 goto label3;

        r7 = "onDispose(...) should only be called once";

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        $r6 = (java.lang.Throwable) $r4;

        throw $r6;

     label3:
        virtualinvoke r0.<androidx.compose.PreCommitScopeImpl: void setDisposeCallback$compose_runtime_release(kotlin.jvm.functions.Function0)>(r1);

        return;
    }

    public void onEnter()
    {
        androidx.compose.PreCommitScopeImpl r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.compose.PreCommitScopeImpl;

        $r1 = virtualinvoke r0.<androidx.compose.PreCommitScopeImpl: kotlin.jvm.functions.Function1 getOnCommit$compose_runtime_release()>();

        interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r0);

        return;
    }

    public void onLeave()
    {
        androidx.compose.PreCommitScopeImpl r0;
        kotlin.jvm.functions.Function0 $r1;

        r0 := @this: androidx.compose.PreCommitScopeImpl;

        $r1 = virtualinvoke r0.<androidx.compose.PreCommitScopeImpl: kotlin.jvm.functions.Function0 getDisposeCallback$compose_runtime_release()>();

        interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        return;
    }

