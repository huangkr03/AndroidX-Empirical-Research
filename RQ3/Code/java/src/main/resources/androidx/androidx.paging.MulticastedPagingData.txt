androidx.paging.MulticastedPagingData
<androidx.paging.MulticastedPagingData: kotlinx.coroutines.CoroutineScope scope>
<androidx.paging.MulticastedPagingData: androidx.paging.PagingData parent>
<androidx.paging.MulticastedPagingData: androidx.paging.ActiveFlowTracker tracker>
<androidx.paging.MulticastedPagingData: androidx.paging.CachedPageEventFlow accumulated>
    public void <init>(kotlinx.coroutines.CoroutineScope, androidx.paging.PagingData, androidx.paging.ActiveFlowTracker)
    {
        androidx.paging.MulticastedPagingData r0;
        kotlinx.coroutines.CoroutineScope r1, $r13;
        androidx.paging.PagingData r2, $r5;
        androidx.paging.ActiveFlowTracker r3;
        androidx.paging.CachedPageEventFlow $r4;
        kotlinx.coroutines.flow.Flow $r6, $r9, $r12;
        androidx.paging.MulticastedPagingData$accumulated$1 $r7;
        kotlin.jvm.functions.Function2 $r8;
        androidx.paging.MulticastedPagingData$accumulated$2 $r10;
        kotlin.jvm.functions.Function3 $r11;

        r0 := @this: androidx.paging.MulticastedPagingData;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: androidx.paging.PagingData;

        r3 := @parameter2: androidx.paging.ActiveFlowTracker;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "parent");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.MulticastedPagingData: kotlinx.coroutines.CoroutineScope scope> = r1;

        r0.<androidx.paging.MulticastedPagingData: androidx.paging.PagingData parent> = r2;

        r0.<androidx.paging.MulticastedPagingData: androidx.paging.ActiveFlowTracker tracker> = r3;

        $r4 = new androidx.paging.CachedPageEventFlow;

        $r5 = r0.<androidx.paging.MulticastedPagingData: androidx.paging.PagingData parent>;

        $r6 = virtualinvoke $r5.<androidx.paging.PagingData: kotlinx.coroutines.flow.Flow getFlow$paging_common()>();

        $r7 = new androidx.paging.MulticastedPagingData$accumulated$1;

        specialinvoke $r7.<androidx.paging.MulticastedPagingData$accumulated$1: void <init>(androidx.paging.MulticastedPagingData,kotlin.coroutines.Continuation)>(r0, null);

        $r8 = (kotlin.jvm.functions.Function2) $r7;

        $r9 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onStart(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>($r6, $r8);

        $r10 = new androidx.paging.MulticastedPagingData$accumulated$2;

        specialinvoke $r10.<androidx.paging.MulticastedPagingData$accumulated$2: void <init>(androidx.paging.MulticastedPagingData,kotlin.coroutines.Continuation)>(r0, null);

        $r11 = (kotlin.jvm.functions.Function3) $r10;

        $r12 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onCompletion(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>($r9, $r11);

        $r13 = r0.<androidx.paging.MulticastedPagingData: kotlinx.coroutines.CoroutineScope scope>;

        specialinvoke $r4.<androidx.paging.CachedPageEventFlow: void <init>(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)>($r12, $r13);

        r0.<androidx.paging.MulticastedPagingData: androidx.paging.CachedPageEventFlow accumulated> = $r4;

        return;
    }

    public void <init>(kotlinx.coroutines.CoroutineScope, androidx.paging.PagingData, androidx.paging.ActiveFlowTracker, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.MulticastedPagingData r0;
        kotlinx.coroutines.CoroutineScope r1;
        androidx.paging.PagingData r2;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r3;
        androidx.paging.ActiveFlowTracker r4;

        r0 := @this: androidx.paging.MulticastedPagingData;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: androidx.paging.PagingData;

        r4 := @parameter2: androidx.paging.ActiveFlowTracker;

        i0 := @parameter3: int;

        r3 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r4 = null;

     label1:
        specialinvoke r0.<androidx.paging.MulticastedPagingData: void <init>(kotlinx.coroutines.CoroutineScope,androidx.paging.PagingData,androidx.paging.ActiveFlowTracker)>(r1, r2, r4);

        return;
    }

    public final kotlinx.coroutines.CoroutineScope getScope()
    {
        androidx.paging.MulticastedPagingData r0;
        kotlinx.coroutines.CoroutineScope $r1;

        r0 := @this: androidx.paging.MulticastedPagingData;

        $r1 = r0.<androidx.paging.MulticastedPagingData: kotlinx.coroutines.CoroutineScope scope>;

        return $r1;
    }

    public final androidx.paging.PagingData getParent()
    {
        androidx.paging.MulticastedPagingData r0;
        androidx.paging.PagingData $r1;

        r0 := @this: androidx.paging.MulticastedPagingData;

        $r1 = r0.<androidx.paging.MulticastedPagingData: androidx.paging.PagingData parent>;

        return $r1;
    }

    public final androidx.paging.ActiveFlowTracker getTracker()
    {
        androidx.paging.MulticastedPagingData r0;
        androidx.paging.ActiveFlowTracker $r1;

        r0 := @this: androidx.paging.MulticastedPagingData;

        $r1 = r0.<androidx.paging.MulticastedPagingData: androidx.paging.ActiveFlowTracker tracker>;

        return $r1;
    }

    public final androidx.paging.PagingData asPagingData()
    {
        androidx.paging.MulticastedPagingData r0;
        androidx.paging.PagingData $r1, $r4;
        androidx.paging.CachedPageEventFlow $r2;
        kotlinx.coroutines.flow.Flow $r3;
        androidx.paging.UiReceiver $r5;

        r0 := @this: androidx.paging.MulticastedPagingData;

        $r1 = new androidx.paging.PagingData;

        $r2 = r0.<androidx.paging.MulticastedPagingData: androidx.paging.CachedPageEventFlow accumulated>;

        $r3 = virtualinvoke $r2.<androidx.paging.CachedPageEventFlow: kotlinx.coroutines.flow.Flow getDownstreamFlow()>();

        $r4 = r0.<androidx.paging.MulticastedPagingData: androidx.paging.PagingData parent>;

        $r5 = virtualinvoke $r4.<androidx.paging.PagingData: androidx.paging.UiReceiver getReceiver$paging_common()>();

        specialinvoke $r1.<androidx.paging.PagingData: void <init>(kotlinx.coroutines.flow.Flow,androidx.paging.UiReceiver)>($r3, $r5);

        return $r1;
    }

    public final java.lang.Object close(kotlin.coroutines.Continuation)
    {
        androidx.paging.MulticastedPagingData r0;
        kotlin.coroutines.Continuation $r1;
        androidx.paging.CachedPageEventFlow $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.paging.MulticastedPagingData;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        $r2 = r0.<androidx.paging.MulticastedPagingData: androidx.paging.CachedPageEventFlow accumulated>;

        virtualinvoke $r2.<androidx.paging.CachedPageEventFlow: void close()>();

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.paging.MulticastedPagingData$accumulated$1
<androidx.paging.MulticastedPagingData$accumulated$1: int label>
<androidx.paging.MulticastedPagingData$accumulated$1: androidx.paging.MulticastedPagingData this$0>
    void <init>(androidx.paging.MulticastedPagingData, kotlin.coroutines.Continuation)
    {
        androidx.paging.MulticastedPagingData$accumulated$1 r0;
        androidx.paging.MulticastedPagingData $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.MulticastedPagingData$accumulated$1;

        $r1 := @parameter0: androidx.paging.MulticastedPagingData;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.MulticastedPagingData$accumulated$1: androidx.paging.MulticastedPagingData this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.MulticastedPagingData$accumulated$1 r0;
        java.lang.Object $r1, r3, $r7;
        androidx.paging.ActiveFlowTracker r2;
        int $i0;
        androidx.paging.MulticastedPagingData $r4;
        androidx.paging.ActiveFlowTracker$FlowType $r5;
        kotlin.coroutines.Continuation $r6;
        java.lang.IllegalStateException $r8;
        kotlin.Unit $r9;

        r0 := @this: androidx.paging.MulticastedPagingData$accumulated$1;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.MulticastedPagingData$accumulated$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            default: goto label5;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.paging.MulticastedPagingData$accumulated$1: androidx.paging.MulticastedPagingData this$0>;

        r2 = virtualinvoke $r4.<androidx.paging.MulticastedPagingData: androidx.paging.ActiveFlowTracker getTracker()>();

        if r2 != null goto label2;

        goto label4;

     label2:
        $r5 = <androidx.paging.ActiveFlowTracker$FlowType: androidx.paging.ActiveFlowTracker$FlowType PAGE_EVENT_FLOW>;

        $r6 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.MulticastedPagingData$accumulated$1: int label> = 1;

        $r7 = interfaceinvoke r2.<androidx.paging.ActiveFlowTracker: java.lang.Object onStart(androidx.paging.ActiveFlowTracker$FlowType,kotlin.coroutines.Continuation)>($r5, $r6);

        if $r7 != r3 goto label4;

        return r3;

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label4:
        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r9;

     label5:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.paging.MulticastedPagingData$accumulated$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.paging.MulticastedPagingData $r4;

        r0 := @this: androidx.paging.MulticastedPagingData$accumulated$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.paging.MulticastedPagingData$accumulated$1;

        $r4 = r0.<androidx.paging.MulticastedPagingData$accumulated$1: androidx.paging.MulticastedPagingData this$0>;

        specialinvoke $r3.<androidx.paging.MulticastedPagingData$accumulated$1: void <init>(androidx.paging.MulticastedPagingData,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        androidx.paging.MulticastedPagingData$accumulated$1 r0, $r5;
        kotlinx.coroutines.flow.FlowCollector r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.paging.MulticastedPagingData$accumulated$1;

        r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.paging.MulticastedPagingData$accumulated$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.paging.MulticastedPagingData$accumulated$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.paging.MulticastedPagingData$accumulated$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.paging.MulticastedPagingData$accumulated$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;

        r0 := @this: androidx.paging.MulticastedPagingData$accumulated$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.flow.FlowCollector) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.paging.MulticastedPagingData$accumulated$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.paging.MulticastedPagingData$accumulated$2
<androidx.paging.MulticastedPagingData$accumulated$2: int label>
<androidx.paging.MulticastedPagingData$accumulated$2: androidx.paging.MulticastedPagingData this$0>
    void <init>(androidx.paging.MulticastedPagingData, kotlin.coroutines.Continuation)
    {
        androidx.paging.MulticastedPagingData$accumulated$2 r0;
        androidx.paging.MulticastedPagingData $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.MulticastedPagingData$accumulated$2;

        $r1 := @parameter0: androidx.paging.MulticastedPagingData;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.MulticastedPagingData$accumulated$2: androidx.paging.MulticastedPagingData this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(3, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.MulticastedPagingData$accumulated$2 r0;
        java.lang.Object $r1, r3, $r7;
        androidx.paging.ActiveFlowTracker r2;
        int $i0;
        androidx.paging.MulticastedPagingData $r4;
        androidx.paging.ActiveFlowTracker$FlowType $r5;
        kotlin.coroutines.Continuation $r6;
        java.lang.IllegalStateException $r8;
        kotlin.Unit $r9;

        r0 := @this: androidx.paging.MulticastedPagingData$accumulated$2;

        $r1 := @parameter0: java.lang.Object;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.paging.MulticastedPagingData$accumulated$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            default: goto label5;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.paging.MulticastedPagingData$accumulated$2: androidx.paging.MulticastedPagingData this$0>;

        r2 = virtualinvoke $r4.<androidx.paging.MulticastedPagingData: androidx.paging.ActiveFlowTracker getTracker()>();

        if r2 != null goto label2;

        goto label4;

     label2:
        $r5 = <androidx.paging.ActiveFlowTracker$FlowType: androidx.paging.ActiveFlowTracker$FlowType PAGE_EVENT_FLOW>;

        $r6 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.paging.MulticastedPagingData$accumulated$2: int label> = 1;

        $r7 = interfaceinvoke r2.<androidx.paging.ActiveFlowTracker: java.lang.Object onComplete(androidx.paging.ActiveFlowTracker$FlowType,kotlin.coroutines.Continuation)>($r5, $r6);

        if $r7 != r3 goto label4;

        return r3;

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label4:
        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r9;

     label5:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r8;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector, java.lang.Throwable, kotlin.coroutines.Continuation)
    {
        androidx.paging.MulticastedPagingData$accumulated$2 r0, $r4;
        kotlinx.coroutines.flow.FlowCollector r1;
        java.lang.Throwable r2;
        kotlin.coroutines.Continuation r3;
        androidx.paging.MulticastedPagingData $r5;
        kotlin.Unit $r6;
        java.lang.Object $r7;

        r0 := @this: androidx.paging.MulticastedPagingData$accumulated$2;

        r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        r2 := @parameter1: java.lang.Throwable;

        r3 := @parameter2: kotlin.coroutines.Continuation;

        $r4 = new androidx.paging.MulticastedPagingData$accumulated$2;

        $r5 = r0.<androidx.paging.MulticastedPagingData$accumulated$2: androidx.paging.MulticastedPagingData this$0>;

        specialinvoke $r4.<androidx.paging.MulticastedPagingData$accumulated$2: void <init>(androidx.paging.MulticastedPagingData,kotlin.coroutines.Continuation)>($r5, r3);

        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = virtualinvoke $r4.<androidx.paging.MulticastedPagingData$accumulated$2: java.lang.Object invokeSuspend(java.lang.Object)>($r6);

        return $r7;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        androidx.paging.MulticastedPagingData$accumulated$2 r0;
        java.lang.Object r1, r2, r3, $r7;
        kotlin.coroutines.Continuation $r4;
        java.lang.Throwable $r5;
        kotlinx.coroutines.flow.FlowCollector $r6;

        r0 := @this: androidx.paging.MulticastedPagingData$accumulated$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r6 = (kotlinx.coroutines.flow.FlowCollector) r1;

        $r5 = (java.lang.Throwable) r2;

        $r4 = (kotlin.coroutines.Continuation) r3;

        $r7 = virtualinvoke r0.<androidx.paging.MulticastedPagingData$accumulated$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Throwable,kotlin.coroutines.Continuation)>($r6, $r5, $r4);

        return $r7;
    }

