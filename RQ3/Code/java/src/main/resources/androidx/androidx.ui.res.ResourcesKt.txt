androidx.ui.res.ResourcesKt
<androidx.ui.res.ResourcesKt: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.ui.res.ResourcesKt: java.lang.Object cacheLock>
<androidx.ui.res.ResourcesKt: int CACHE_SIZE>
<androidx.ui.res.ResourcesKt: java.util.Map requestCache>
<androidx.ui.res.ResourcesKt: android.util.LruCache resourceCache>
<androidx.ui.res.ResourcesKt: java.util.concurrent.ExecutorService executor>
<androidx.ui.res.ResourcesKt: kotlin.Lazy handler$delegate>
<androidx.ui.res.ResourcesKt: kotlin.jvm.functions.Function1 postAtFrontOfQueue>
    public static final java.util.Map getRequestCache()
    {
        java.util.Map $r0;

        $r0 = <androidx.ui.res.ResourcesKt: java.util.Map requestCache>;

        return $r0;
    }

    public static final android.util.LruCache getResourceCache()
    {
        android.util.LruCache $r0;

        $r0 = <androidx.ui.res.ResourcesKt: android.util.LruCache resourceCache>;

        return $r0;
    }

    private static final android.os.Handler getHandler()
    {
        kotlin.Lazy r0;
        kotlin.reflect.KProperty r1;
        kotlin.reflect.KProperty[] $r2;
        java.lang.Object $r3;
        android.os.Handler $r4;

        r0 = <androidx.ui.res.ResourcesKt: kotlin.Lazy handler$delegate>;

        $r2 = <androidx.ui.res.ResourcesKt: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r1 = $r2[0];

        $r3 = interfaceinvoke r0.<kotlin.Lazy: java.lang.Object getValue()>();

        $r4 = (android.os.Handler) $r3;

        return $r4;
    }

    public static final androidx.ui.res.DeferredResource loadResource(java.lang.String, java.lang.Object, java.lang.Object, kotlin.jvm.functions.Function0, androidx.compose.Composer)
    {
        java.lang.String r0;
        java.lang.Object r1, r2, $r10;
        kotlin.jvm.functions.Function0 r3;
        androidx.compose.Composer $r4;
        androidx.ui.res.DeferredResource r5;
        java.util.concurrent.ExecutorService r6;
        java.lang.Integer $r7;
        java.util.concurrent.Executor $r8;
        kotlin.jvm.functions.Function1 $r9;
        java.util.Map $r11;
        android.util.LruCache $r12;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: kotlin.jvm.functions.Function0;

        $r4 := @parameter4: androidx.compose.Composer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "loader");

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-85422545);

        virtualinvoke $r4.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r7);

        r6 = <androidx.ui.res.ResourcesKt: java.util.concurrent.ExecutorService executor>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r6, "executor");

        $r8 = (java.util.concurrent.Executor) r6;

        $r9 = <androidx.ui.res.ResourcesKt: kotlin.jvm.functions.Function1 postAtFrontOfQueue>;

        $r10 = <androidx.ui.res.ResourcesKt: java.lang.Object cacheLock>;

        $r11 = staticinvoke <androidx.ui.res.ResourcesKt: java.util.Map getRequestCache()>();

        $r12 = staticinvoke <androidx.ui.res.ResourcesKt: android.util.LruCache getResourceCache()>();

        r5 = staticinvoke <androidx.ui.res.ResourcesKt: androidx.ui.res.DeferredResource loadResourceInternal(java.lang.String,java.lang.Object,java.lang.Object,java.util.concurrent.Executor,kotlin.jvm.functions.Function1,java.lang.Object,java.util.Map,android.util.LruCache,kotlin.jvm.functions.Function0,androidx.compose.Composer)>(r0, r1, r2, $r8, $r9, $r10, $r11, $r12, r3, $r4);

        virtualinvoke $r4.<androidx.compose.Composer: void endExpr()>();

        return r5;
    }

    public static androidx.ui.res.DeferredResource loadResource$default(java.lang.String, java.lang.Object, java.lang.Object, kotlin.jvm.functions.Function0, androidx.compose.Composer, int, java.lang.Object)
    {
        java.lang.String r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.compose.Composer $r2;
        int i0, $i1, $i2;
        java.lang.Object r3, r5, r6;
        androidx.ui.res.DeferredResource $r4;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        r6 := @parameter2: java.lang.Object;

        r1 := @parameter3: kotlin.jvm.functions.Function0;

        $r2 := @parameter4: androidx.compose.Composer;

        i0 := @parameter5: int;

        r3 := @parameter6: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r5 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r6 = null;

     label2:
        $r4 = staticinvoke <androidx.ui.res.ResourcesKt: androidx.ui.res.DeferredResource loadResource(java.lang.String,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function0,androidx.compose.Composer)>(r0, r5, r6, r1, $r2);

        return $r4;
    }

    public static final androidx.ui.res.DeferredResource loadResourceInternal(java.lang.String, java.lang.Object, java.lang.Object, java.util.concurrent.Executor, kotlin.jvm.functions.Function1, java.lang.Object, java.util.Map, android.util.LruCache, kotlin.jvm.functions.Function0, androidx.compose.Composer)
    {
        java.lang.String r0;
        java.lang.Object r1, r2, r5, r22, $r24, $r29, r30, r32, $r34;
        java.util.concurrent.Executor r3;
        kotlin.jvm.functions.Function1 r4;
        java.util.Map r6;
        android.util.LruCache r7;
        kotlin.jvm.functions.Function0 r8;
        androidx.compose.Composer $r9;
        androidx.ui.res.DeferredResource r10, r11, r12, $r14, r25, r26;
        boolean z1, z2, $z4, $z5, $z8, z9, $z10, z11, $z12, $z13, z14, $z17, z18, z20, z21, z25, z27, z28;
        java.lang.Integer $r13;
        androidx.ui.res.LoadingState $r15, $r27, $r28;
        int $i0;
        androidx.ui.res.ResourcesKt$loadResourceInternal$1$3$1 $r16;
        java.lang.Runnable $r17;
        java.util.ArrayList $r18;
        java.lang.Throwable $r20;
        androidx.compose.SlotTable$Companion $r23;
        java.util.List $r33, $r35;
        kotlin.Unit $r36;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.util.concurrent.Executor;

        r4 := @parameter4: kotlin.jvm.functions.Function1;

        r5 := @parameter5: java.lang.Object;

        r6 := @parameter6: java.util.Map;

        r7 := @parameter7: android.util.LruCache;

        r8 := @parameter8: kotlin.jvm.functions.Function0;

        $r9 := @parameter9: androidx.compose.Composer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "uiThreadHandler");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "cacheLock");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "requestCache");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "resourceCache");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r8, "loader");

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2008868898);

        virtualinvoke $r9.<androidx.compose.Composer: void startExpr(java.lang.Object)>($r13);

        $z4 = virtualinvoke $r9.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r0);

        if $z4 != 0 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        z9 = $z8;

        $z5 = virtualinvoke $r9.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r1);

        if $z5 != 0 goto label03;

        if z9 == 0 goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        z11 = $z10;

        $z12 = virtualinvoke $r9.<androidx.compose.Composer: boolean changed(java.lang.Object)>(r2);

        if $z12 != 0 goto label05;

        if z11 == 0 goto label05;

        $z13 = 1;

        goto label06;

     label05:
        $z13 = 0;

     label06:
        z14 = $z13;

        r22 = virtualinvoke $r9.<androidx.compose.Composer: java.lang.Object nextSlot()>();

        $r23 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r24 = virtualinvoke $r23.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        if r22 == $r24 goto label07;

        if z14 != 0 goto label08;

     label07:
        $r14 = new androidx.ui.res.DeferredResource;

        $r15 = <androidx.ui.res.LoadingState: androidx.ui.res.LoadingState PENDING>;

        specialinvoke $r14.<androidx.ui.res.DeferredResource: void <init>(androidx.ui.res.LoadingState,java.lang.Object,java.lang.Object)>($r15, r1, r2);

        r25 = $r14;

        virtualinvoke $r9.<androidx.compose.Composer: void updateValue(java.lang.Object)>(r25);

        r22 = r25;

     label08:
        r26 = (androidx.ui.res.DeferredResource) r22;

        virtualinvoke $r9.<androidx.compose.Composer: void endExpr()>();

        r10 = r26;

        $r27 = virtualinvoke r10.<androidx.ui.res.DeferredResource: androidx.ui.res.LoadingState getState$ui_framework_release()>();

        $r28 = <androidx.ui.res.LoadingState: androidx.ui.res.LoadingState PENDING>;

        $z17 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r27, $r28);

        if $z17 != 0 goto label09;

        return r10;

     label09:
        z18 = 0;

        entermonitor r5;

     label10:
        z20 = 0;

        $r29 = virtualinvoke r7.<android.util.LruCache: java.lang.Object get(java.lang.Object)>(r0);

        if $r29 != null goto label11;

        goto label13;

     label11:
        z21 = 0;

        r30 = $r29;

        r11 = r10;

        z1 = 0;

        z2 = 0;

        virtualinvoke r11.<androidx.ui.res.DeferredResource: void loadCompleted$ui_framework_release(java.lang.Object)>(r30);

        r12 = r11;

     label12:
        exitmonitor r5;

        return r12;

     label13:
        r32 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        if r32 != null goto label14;

        z25 = 0;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        $r33 = (java.util.List) $r18;

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r33);

        $r34 = $r33;

        goto label15;

     label14:
        $r34 = r32;

     label15:
        z27 = 0;

        $r35 = (java.util.List) $r34;

        z28 = 0;

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>(r10);

        $i0 = interfaceinvoke $r35.<java.util.List: int size()>();

        if $i0 != 1 goto label16;

        $r16 = new androidx.ui.res.ResourcesKt$loadResourceInternal$1$3$1;

        specialinvoke $r16.<androidx.ui.res.ResourcesKt$loadResourceInternal$1$3$1: void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,java.lang.Object,java.util.Map,java.lang.String)>(r8, r4, r5, r6, r0);

        $r17 = (java.lang.Runnable) $r16;

        interfaceinvoke r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r17);

     label16:
        $r36 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label17:
        exitmonitor r5;

        goto label20;

     label18:
        $r20 := @caughtexception;

     label19:
        exitmonitor r5;

        throw $r20;

     label20:
        return r10;

        catch java.lang.Throwable from label10 to label12 with label18;
        catch java.lang.Throwable from label13 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public static androidx.ui.res.DeferredResource loadResourceInternal$default(java.lang.String, java.lang.Object, java.lang.Object, java.util.concurrent.Executor, kotlin.jvm.functions.Function1, java.lang.Object, java.util.Map, android.util.LruCache, kotlin.jvm.functions.Function0, androidx.compose.Composer, int, java.lang.Object)
    {
        java.lang.String r0;
        java.util.concurrent.Executor r1;
        kotlin.jvm.functions.Function1 r2;
        java.lang.Object r3, r8, r10, r11;
        java.util.Map r4;
        android.util.LruCache r5;
        kotlin.jvm.functions.Function0 r6;
        androidx.compose.Composer $r7;
        int i0, $i1, $i2;
        androidx.ui.res.DeferredResource $r9;

        r0 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.Object;

        r11 := @parameter2: java.lang.Object;

        r1 := @parameter3: java.util.concurrent.Executor;

        r2 := @parameter4: kotlin.jvm.functions.Function1;

        r3 := @parameter5: java.lang.Object;

        r4 := @parameter6: java.util.Map;

        r5 := @parameter7: android.util.LruCache;

        r6 := @parameter8: kotlin.jvm.functions.Function0;

        $r7 := @parameter9: androidx.compose.Composer;

        i0 := @parameter10: int;

        r8 := @parameter11: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r10 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r11 = null;

     label2:
        $r9 = staticinvoke <androidx.ui.res.ResourcesKt: androidx.ui.res.DeferredResource loadResourceInternal(java.lang.String,java.lang.Object,java.lang.Object,java.util.concurrent.Executor,kotlin.jvm.functions.Function1,java.lang.Object,java.util.Map,android.util.LruCache,kotlin.jvm.functions.Function0,androidx.compose.Composer)>(r0, r10, r11, r1, r2, r3, r4, r5, r6, $r7);

        return $r9;
    }

    public static final android.os.Handler access$getHandler()
    {
        android.os.Handler $r0;

        $r0 = staticinvoke <androidx.ui.res.ResourcesKt: android.os.Handler getHandler()>();

        return $r0;
    }

    public static final void <clinit>()
    {
        kotlin.jvm.internal.PropertyReference0Impl $r0;
        kotlin.reflect.KDeclarationContainer $r1;
        kotlin.jvm.internal.PropertyReference0 $r2;
        kotlin.reflect.KProperty0 $r3;
        kotlin.reflect.KProperty $r4;
        java.lang.Object $r5;
        java.util.LinkedHashMap $r6;
        java.util.Map $r7;
        android.util.LruCache $r8;
        androidx.ui.res.ResourcesKt$executor$1 $r9;
        java.util.concurrent.ThreadFactory $r10;
        java.util.concurrent.ExecutorService $r11;
        androidx.ui.res.ResourcesKt$handler$2 $r12;
        kotlin.jvm.functions.Function0 $r13;
        kotlin.Lazy $r14;
        androidx.ui.res.ResourcesKt$postAtFrontOfQueue$1 $r15;
        kotlin.jvm.functions.Function1 $r16;
        kotlin.reflect.KProperty[] r17;
        boolean z0;

        r17 = newarray (kotlin.reflect.KProperty)[1];

        $r0 = new kotlin.jvm.internal.PropertyReference0Impl;

        $r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)>(class "Landroidx/ui/res/ResourcesKt;", "ui-framework_release");

        specialinvoke $r0.<kotlin.jvm.internal.PropertyReference0Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r1, "handler", "getHandler()Landroid/os/Handler;");

        $r2 = (kotlin.jvm.internal.PropertyReference0) $r0;

        $r3 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0)>($r2);

        $r4 = (kotlin.reflect.KProperty) $r3;

        r17[0] = $r4;

        <androidx.ui.res.ResourcesKt: kotlin.reflect.KProperty[] $$delegatedProperties> = r17;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        <androidx.ui.res.ResourcesKt: java.lang.Object cacheLock> = $r5;

        z0 = 0;

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        $r7 = (java.util.Map) $r6;

        <androidx.ui.res.ResourcesKt: java.util.Map requestCache> = $r7;

        $r8 = new android.util.LruCache;

        specialinvoke $r8.<android.util.LruCache: void <init>(int)>(500);

        <androidx.ui.res.ResourcesKt: android.util.LruCache resourceCache> = $r8;

        $r9 = new androidx.ui.res.ResourcesKt$executor$1;

        specialinvoke $r9.<androidx.ui.res.ResourcesKt$executor$1: void <init>()>();

        $r10 = (java.util.concurrent.ThreadFactory) $r9;

        $r11 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>(1, $r10);

        <androidx.ui.res.ResourcesKt: java.util.concurrent.ExecutorService executor> = $r11;

        $r12 = new androidx.ui.res.ResourcesKt$handler$2;

        specialinvoke $r12.<androidx.ui.res.ResourcesKt$handler$2: void <init>()>();

        $r13 = (kotlin.jvm.functions.Function0) $r12;

        $r14 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r13);

        <androidx.ui.res.ResourcesKt: kotlin.Lazy handler$delegate> = $r14;

        $r15 = new androidx.ui.res.ResourcesKt$postAtFrontOfQueue$1;

        specialinvoke $r15.<androidx.ui.res.ResourcesKt$postAtFrontOfQueue$1: void <init>()>();

        $r16 = (kotlin.jvm.functions.Function1) $r15;

        <androidx.ui.res.ResourcesKt: kotlin.jvm.functions.Function1 postAtFrontOfQueue> = $r16;

        return;
    }

