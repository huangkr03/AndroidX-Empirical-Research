androidx.media3.exoplayer.trackselection.TrackSelector
<androidx.media3.exoplayer.trackselection.TrackSelector: androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener listener>
<androidx.media3.exoplayer.trackselection.TrackSelector: androidx.media3.exoplayer.upstream.BandwidthMeter bandwidthMeter>
    public void <init>()
    {
        androidx.media3.exoplayer.trackselection.TrackSelector r0;

        r0 := @this: androidx.media3.exoplayer.trackselection.TrackSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener, androidx.media3.exoplayer.upstream.BandwidthMeter)
    {
        androidx.media3.exoplayer.trackselection.TrackSelector r0;
        androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener r1;
        androidx.media3.exoplayer.upstream.BandwidthMeter r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.TrackSelector;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener;

        r2 := @parameter1: androidx.media3.exoplayer.upstream.BandwidthMeter;

        r0.<androidx.media3.exoplayer.trackselection.TrackSelector: androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener listener> = r1;

        r0.<androidx.media3.exoplayer.trackselection.TrackSelector: androidx.media3.exoplayer.upstream.BandwidthMeter bandwidthMeter> = r2;

        return;
    }

    public void release()
    {
        androidx.media3.exoplayer.trackselection.TrackSelector r0;

        r0 := @this: androidx.media3.exoplayer.trackselection.TrackSelector;

        r0.<androidx.media3.exoplayer.trackselection.TrackSelector: androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener listener> = null;

        r0.<androidx.media3.exoplayer.trackselection.TrackSelector: androidx.media3.exoplayer.upstream.BandwidthMeter bandwidthMeter> = null;

        return;
    }

<androidx.media3.exoplayer.trackselection.TrackSelector: androidx.media3.exoplayer.trackselection.TrackSelectorResult selectTracks(androidx.media3.exoplayer.RendererCapabilities[],androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline)>
<androidx.media3.exoplayer.trackselection.TrackSelector: void onSelectionActivated(java.lang.Object)>
    public androidx.media3.common.TrackSelectionParameters getParameters()
    {
        androidx.media3.exoplayer.trackselection.TrackSelector r0;
        androidx.media3.common.TrackSelectionParameters $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.TrackSelector;

        $r1 = <androidx.media3.common.TrackSelectionParameters: androidx.media3.common.TrackSelectionParameters DEFAULT_WITHOUT_CONTEXT>;

        return $r1;
    }

    public void setParameters(androidx.media3.common.TrackSelectionParameters)
    {
        androidx.media3.exoplayer.trackselection.TrackSelector r0;
        androidx.media3.common.TrackSelectionParameters r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.TrackSelector;

        r1 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        return;
    }

    public boolean isSetParametersSupported()
    {
        androidx.media3.exoplayer.trackselection.TrackSelector r0;

        r0 := @this: androidx.media3.exoplayer.trackselection.TrackSelector;

        return 0;
    }

    public void setAudioAttributes(androidx.media3.common.AudioAttributes)
    {
        androidx.media3.exoplayer.trackselection.TrackSelector r0;
        androidx.media3.common.AudioAttributes r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.TrackSelector;

        r1 := @parameter0: androidx.media3.common.AudioAttributes;

        return;
    }

    protected final void invalidate()
    {
        androidx.media3.exoplayer.trackselection.TrackSelector r0;
        androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener $r1, $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.TrackSelector;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.TrackSelector: androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener listener>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media3.exoplayer.trackselection.TrackSelector: androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener listener>;

        interfaceinvoke $r2.<androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener: void onTrackSelectionsInvalidated()>();

     label1:
        return;
    }

    protected final androidx.media3.exoplayer.upstream.BandwidthMeter getBandwidthMeter()
    {
        androidx.media3.exoplayer.trackselection.TrackSelector r0;
        androidx.media3.exoplayer.upstream.BandwidthMeter $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.TrackSelector;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.TrackSelector: androidx.media3.exoplayer.upstream.BandwidthMeter bandwidthMeter>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r1);

        $r3 = (androidx.media3.exoplayer.upstream.BandwidthMeter) $r2;

        return $r3;
    }

androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener
<androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener: void onTrackSelectionsInvalidated()>
