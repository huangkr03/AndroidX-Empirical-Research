androidx.customview.widget.FocusStrategy
    public static java.lang.Object findNextFocusInRelativeDirection(java.lang.Object, androidx.customview.widget.FocusStrategy$CollectionAdapter, androidx.customview.widget.FocusStrategy$BoundsAdapter, java.lang.Object, int, boolean, boolean)
    {
        java.lang.Object r0, r3, $r7, $r8, $r10;
        androidx.customview.widget.FocusStrategy$CollectionAdapter r1;
        androidx.customview.widget.FocusStrategy$BoundsAdapter r2;
        int i0, i1, i2;
        boolean z0, z1;
        java.util.ArrayList r4, $r5;
        androidx.customview.widget.FocusStrategy$SequentialComparator $r6, r11;
        java.lang.IllegalArgumentException $r9;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: androidx.customview.widget.FocusStrategy$CollectionAdapter;

        r2 := @parameter2: androidx.customview.widget.FocusStrategy$BoundsAdapter;

        r3 := @parameter3: java.lang.Object;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        i1 = interfaceinvoke r1.<androidx.customview.widget.FocusStrategy$CollectionAdapter: int size(java.lang.Object)>(r0);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(i1);

        r4 = $r5;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r10 = interfaceinvoke r1.<androidx.customview.widget.FocusStrategy$CollectionAdapter: java.lang.Object get(java.lang.Object,int)>(r0, i2);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r6 = new androidx.customview.widget.FocusStrategy$SequentialComparator;

        specialinvoke $r6.<androidx.customview.widget.FocusStrategy$SequentialComparator: void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter)>(z0, r2);

        r11 = $r6;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r4, r11);

        lookupswitch(i0)
        {
            case 1: goto label4;
            case 2: goto label3;
            default: goto label5;
        };

     label3:
        $r7 = staticinvoke <androidx.customview.widget.FocusStrategy: java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean)>(r3, r4, z1);

        return $r7;

     label4:
        $r8 = staticinvoke <androidx.customview.widget.FocusStrategy: java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean)>(r3, r4, z1);

        return $r8;

     label5:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_FORWARD, FOCUS_BACKWARD}.");

        throw $r9;
    }

    private static java.lang.Object getNextFocusable(java.lang.Object, java.util.ArrayList, boolean)
    {
        java.lang.Object r0, $r2, $r3;
        java.util.ArrayList r1;
        boolean z0;
        int i0, i1, $i2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.ArrayList;

        z0 := @parameter2: boolean;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if r0 != null goto label1;

        $i2 = -1;

        goto label2;

     label1:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>(r0);

     label2:
        i1 = $i2 + 1;

        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        return $r3;

     label3:
        if z0 == 0 goto label4;

        if i0 <= 0 goto label4;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        return $r2;

     label4:
        return null;
    }

    private static java.lang.Object getPreviousFocusable(java.lang.Object, java.util.ArrayList, boolean)
    {
        java.lang.Object r0, $r2, $r3;
        java.util.ArrayList r1;
        boolean z0;
        int i0, i1, $i2, $i3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.util.ArrayList;

        z0 := @parameter2: boolean;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if r0 != null goto label1;

        $i3 = i0;

        goto label2;

     label1:
        $i3 = virtualinvoke r1.<java.util.ArrayList: int indexOf(java.lang.Object)>(r0);

     label2:
        i1 = $i3 - 1;

        if i1 < 0 goto label3;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        return $r3;

     label3:
        if z0 == 0 goto label4;

        if i0 <= 0 goto label4;

        $i2 = i0 - 1;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        return $r2;

     label4:
        return null;
    }

    public static java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object, androidx.customview.widget.FocusStrategy$CollectionAdapter, androidx.customview.widget.FocusStrategy$BoundsAdapter, java.lang.Object, android.graphics.Rect, int)
    {
        java.lang.Object r0, r3, r7, r10;
        androidx.customview.widget.FocusStrategy$CollectionAdapter r1;
        androidx.customview.widget.FocusStrategy$BoundsAdapter r2;
        android.graphics.Rect r4, r5, r6, $r8, $r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        boolean $z0;
        java.lang.IllegalArgumentException $r9;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: androidx.customview.widget.FocusStrategy$CollectionAdapter;

        r2 := @parameter2: androidx.customview.widget.FocusStrategy$BoundsAdapter;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: android.graphics.Rect;

        i0 := @parameter5: int;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>(android.graphics.Rect)>(r4);

        r5 = $r8;

        lookupswitch(i0)
        {
            case 17: goto label01;
            case 33: goto label03;
            case 66: goto label02;
            case 130: goto label04;
            default: goto label05;
        };

     label01:
        $i10 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        $i11 = $i10 + 1;

        virtualinvoke r5.<android.graphics.Rect: void offset(int,int)>($i11, 0);

        goto label06;

     label02:
        $i5 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        $i6 = $i5 + 1;

        $i7 = neg $i6;

        virtualinvoke r5.<android.graphics.Rect: void offset(int,int)>($i7, 0);

        goto label06;

     label03:
        $i8 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        $i9 = $i8 + 1;

        virtualinvoke r5.<android.graphics.Rect: void offset(int,int)>(0, $i9);

        goto label06;

     label04:
        $i2 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        $i3 = $i2 + 1;

        $i4 = neg $i3;

        virtualinvoke r5.<android.graphics.Rect: void offset(int,int)>(0, $i4);

        goto label06;

     label05:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r9;

     label06:
        r10 = null;

        i1 = interfaceinvoke r1.<androidx.customview.widget.FocusStrategy$CollectionAdapter: int size(java.lang.Object)>(r0);

        $r11 = new android.graphics.Rect;

        specialinvoke $r11.<android.graphics.Rect: void <init>()>();

        r6 = $r11;

        i12 = 0;

     label07:
        if i12 >= i1 goto label10;

        r7 = interfaceinvoke r1.<androidx.customview.widget.FocusStrategy$CollectionAdapter: java.lang.Object get(java.lang.Object,int)>(r0, i12);

        if r7 != r3 goto label08;

        goto label09;

     label08:
        interfaceinvoke r2.<androidx.customview.widget.FocusStrategy$BoundsAdapter: void obtainBounds(java.lang.Object,android.graphics.Rect)>(r7, r6);

        $z0 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(i0, r4, r6, r5);

        if $z0 == 0 goto label09;

        virtualinvoke r5.<android.graphics.Rect: void set(android.graphics.Rect)>(r6);

        r10 = r7;

     label09:
        i12 = i12 + 1;

        goto label07;

     label10:
        return r10;
    }

    private static boolean isBetterCandidate(int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.graphics.Rect r0, r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        r2 := @parameter3: android.graphics.Rect;

        $z0 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>(r0, r1, i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>(r0, r2, i0);

        if $z1 != 0 goto label2;

        return 1;

     label2:
        $z2 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r1, r2);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r2, r1);

        if $z3 == 0 goto label4;

        return 0;

     label4:
        $i3 = staticinvoke <androidx.customview.widget.FocusStrategy: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r1);

        $i4 = staticinvoke <androidx.customview.widget.FocusStrategy: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r1);

        i1 = staticinvoke <androidx.customview.widget.FocusStrategy: int getWeightedDistanceFor(int,int)>($i3, $i4);

        $i5 = staticinvoke <androidx.customview.widget.FocusStrategy: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r2);

        $i6 = staticinvoke <androidx.customview.widget.FocusStrategy: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r2);

        i2 = staticinvoke <androidx.customview.widget.FocusStrategy: int getWeightedDistanceFor(int,int)>($i5, $i6);

        if i1 >= i2 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;
    }

    private static boolean beamBeats(int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2;
        android.graphics.Rect r0, r1, r2;
        boolean z0, z1, $z2, $z3;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        r2 := @parameter3: android.graphics.Rect;

        z0 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r1);

        z1 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r2);

        if z1 != 0 goto label1;

        if z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $z2 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r2);

        if $z2 != 0 goto label3;

        return 1;

     label3:
        if i0 == 17 goto label4;

        if i0 != 66 goto label5;

     label4:
        return 1;

     label5:
        $i1 = staticinvoke <androidx.customview.widget.FocusStrategy: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r1);

        $i2 = staticinvoke <androidx.customview.widget.FocusStrategy: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r2);

        if $i1 >= $i2 goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        return $z3;
    }

    private static int getWeightedDistanceFor(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = 13 * i0;

        $i4 = $i2 * i0;

        $i3 = i1 * i1;

        $i5 = $i4 + $i3;

        return $i5;
    }

    private static boolean isCandidate(android.graphics.Rect, android.graphics.Rect, int)
    {
        android.graphics.Rect r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.lang.IllegalArgumentException $r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: android.graphics.Rect;

        i0 := @parameter2: int;

        lookupswitch(i0)
        {
            case 17: goto label01;
            case 33: goto label09;
            case 66: goto label05;
            case 130: goto label13;
            default: goto label17;
        };

     label01:
        $i20 = r0.<android.graphics.Rect: int right>;

        $i19 = r1.<android.graphics.Rect: int right>;

        if $i20 > $i19 goto label02;

        $i24 = r0.<android.graphics.Rect: int left>;

        $i23 = r1.<android.graphics.Rect: int right>;

        if $i24 < $i23 goto label03;

     label02:
        $i22 = r0.<android.graphics.Rect: int left>;

        $i21 = r1.<android.graphics.Rect: int left>;

        if $i22 <= $i21 goto label03;

        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        return $z0;

     label05:
        $i8 = r0.<android.graphics.Rect: int left>;

        $i7 = r1.<android.graphics.Rect: int left>;

        if $i8 < $i7 goto label06;

        $i12 = r0.<android.graphics.Rect: int right>;

        $i11 = r1.<android.graphics.Rect: int left>;

        if $i12 > $i11 goto label07;

     label06:
        $i10 = r0.<android.graphics.Rect: int right>;

        $i9 = r1.<android.graphics.Rect: int right>;

        if $i10 >= $i9 goto label07;

        $z1 = 1;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        return $z1;

     label09:
        $i14 = r0.<android.graphics.Rect: int bottom>;

        $i13 = r1.<android.graphics.Rect: int bottom>;

        if $i14 > $i13 goto label10;

        $i18 = r0.<android.graphics.Rect: int top>;

        $i17 = r1.<android.graphics.Rect: int bottom>;

        if $i18 < $i17 goto label11;

     label10:
        $i16 = r0.<android.graphics.Rect: int top>;

        $i15 = r1.<android.graphics.Rect: int top>;

        if $i16 <= $i15 goto label11;

        $z2 = 1;

        goto label12;

     label11:
        $z2 = 0;

     label12:
        return $z2;

     label13:
        $i2 = r0.<android.graphics.Rect: int top>;

        $i1 = r1.<android.graphics.Rect: int top>;

        if $i2 < $i1 goto label14;

        $i6 = r0.<android.graphics.Rect: int bottom>;

        $i5 = r1.<android.graphics.Rect: int top>;

        if $i6 > $i5 goto label15;

     label14:
        $i4 = r0.<android.graphics.Rect: int bottom>;

        $i3 = r1.<android.graphics.Rect: int bottom>;

        if $i4 >= $i3 goto label15;

        $z3 = 1;

        goto label16;

     label15:
        $z3 = 0;

     label16:
        return $z3;

     label17:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;
    }

    private static boolean beamsOverlap(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect r0, r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        lookupswitch(i0)
        {
            case 17: goto label1;
            case 33: goto label4;
            case 66: goto label1;
            case 130: goto label4;
            default: goto label7;
        };

     label1:
        $i6 = r1.<android.graphics.Rect: int bottom>;

        $i5 = r0.<android.graphics.Rect: int top>;

        if $i6 < $i5 goto label2;

        $i8 = r1.<android.graphics.Rect: int top>;

        $i7 = r0.<android.graphics.Rect: int bottom>;

        if $i8 > $i7 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $i2 = r1.<android.graphics.Rect: int right>;

        $i1 = r0.<android.graphics.Rect: int left>;

        if $i2 < $i1 goto label5;

        $i4 = r1.<android.graphics.Rect: int left>;

        $i3 = r0.<android.graphics.Rect: int right>;

        if $i4 > $i3 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;
    }

    private static boolean isToDirectionOf(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Rect r0, r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0, $z1, $z2, $z3;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        lookupswitch(i0)
        {
            case 17: goto label01;
            case 33: goto label07;
            case 66: goto label04;
            case 130: goto label10;
            default: goto label13;
        };

     label01:
        $i8 = r0.<android.graphics.Rect: int left>;

        $i7 = r1.<android.graphics.Rect: int right>;

        if $i8 < $i7 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        return $z0;

     label04:
        $i4 = r0.<android.graphics.Rect: int right>;

        $i3 = r1.<android.graphics.Rect: int left>;

        if $i4 > $i3 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        return $z1;

     label07:
        $i6 = r0.<android.graphics.Rect: int top>;

        $i5 = r1.<android.graphics.Rect: int bottom>;

        if $i6 < $i5 goto label08;

        $z2 = 1;

        goto label09;

     label08:
        $z2 = 0;

     label09:
        return $z2;

     label10:
        $i2 = r0.<android.graphics.Rect: int bottom>;

        $i1 = r1.<android.graphics.Rect: int top>;

        if $i2 > $i1 goto label11;

        $z3 = 1;

        goto label12;

     label11:
        $z3 = 0;

     label12:
        return $z3;

     label13:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;
    }

    private static int majorAxisDistance(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2;
        android.graphics.Rect r0, r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        $i1 = staticinvoke <androidx.customview.widget.FocusStrategy: int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r1);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        return $i2;
    }

    private static int majorAxisDistanceRaw(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.Rect r0, r1;
        java.lang.IllegalArgumentException $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        lookupswitch(i0)
        {
            case 17: goto label1;
            case 33: goto label3;
            case 66: goto label2;
            case 130: goto label4;
            default: goto label5;
        };

     label1:
        $i11 = r0.<android.graphics.Rect: int left>;

        $i10 = r1.<android.graphics.Rect: int right>;

        $i12 = $i11 - $i10;

        return $i12;

     label2:
        $i5 = r1.<android.graphics.Rect: int left>;

        $i4 = r0.<android.graphics.Rect: int right>;

        $i6 = $i5 - $i4;

        return $i6;

     label3:
        $i8 = r0.<android.graphics.Rect: int top>;

        $i7 = r1.<android.graphics.Rect: int bottom>;

        $i9 = $i8 - $i7;

        return $i9;

     label4:
        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r0.<android.graphics.Rect: int bottom>;

        $i3 = $i2 - $i1;

        return $i3;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;
    }

    private static int majorAxisDistanceToFarEdge(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2;
        android.graphics.Rect r0, r1;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        $i1 = staticinvoke <androidx.customview.widget.FocusStrategy: int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)>(i0, r0, r1);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i1);

        return $i2;
    }

    private static int majorAxisDistanceToFarEdgeRaw(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.Rect r0, r1;
        java.lang.IllegalArgumentException $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        lookupswitch(i0)
        {
            case 17: goto label1;
            case 33: goto label3;
            case 66: goto label2;
            case 130: goto label4;
            default: goto label5;
        };

     label1:
        $i11 = r0.<android.graphics.Rect: int left>;

        $i10 = r1.<android.graphics.Rect: int left>;

        $i12 = $i11 - $i10;

        return $i12;

     label2:
        $i5 = r1.<android.graphics.Rect: int right>;

        $i4 = r0.<android.graphics.Rect: int right>;

        $i6 = $i5 - $i4;

        return $i6;

     label3:
        $i8 = r0.<android.graphics.Rect: int top>;

        $i7 = r1.<android.graphics.Rect: int top>;

        $i9 = $i8 - $i7;

        return $i9;

     label4:
        $i2 = r1.<android.graphics.Rect: int bottom>;

        $i1 = r0.<android.graphics.Rect: int bottom>;

        $i3 = $i2 - $i1;

        return $i3;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;
    }

    private static int minorAxisDistance(int, android.graphics.Rect, android.graphics.Rect)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        android.graphics.Rect r0, r1;
        java.lang.IllegalArgumentException $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.Rect;

        r1 := @parameter2: android.graphics.Rect;

        lookupswitch(i0)
        {
            case 17: goto label1;
            case 33: goto label2;
            case 66: goto label1;
            case 130: goto label2;
            default: goto label3;
        };

     label1:
        $i11 = r0.<android.graphics.Rect: int top>;

        $i12 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $i13 = $i12 / 2;

        $i14 = $i11 + $i13;

        $i15 = r1.<android.graphics.Rect: int top>;

        $i16 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i17 = $i16 / 2;

        $i18 = $i15 + $i17;

        $i19 = $i14 - $i18;

        $i20 = staticinvoke <java.lang.Math: int abs(int)>($i19);

        return $i20;

     label2:
        $i1 = r0.<android.graphics.Rect: int left>;

        $i2 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i3 = $i2 / 2;

        $i4 = $i1 + $i3;

        $i5 = r1.<android.graphics.Rect: int left>;

        $i6 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i7 = $i6 / 2;

        $i8 = $i5 + $i7;

        $i9 = $i4 - $i8;

        $i10 = staticinvoke <java.lang.Math: int abs(int)>($i9);

        return $i10;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;
    }

    private void <init>()
    {
        androidx.customview.widget.FocusStrategy r0;

        r0 := @this: androidx.customview.widget.FocusStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.customview.widget.FocusStrategy$BoundsAdapter
<androidx.customview.widget.FocusStrategy$BoundsAdapter: void obtainBounds(java.lang.Object,android.graphics.Rect)>
androidx.customview.widget.FocusStrategy$CollectionAdapter
<androidx.customview.widget.FocusStrategy$CollectionAdapter: java.lang.Object get(java.lang.Object,int)>
<androidx.customview.widget.FocusStrategy$CollectionAdapter: int size(java.lang.Object)>
androidx.customview.widget.FocusStrategy$SequentialComparator
<androidx.customview.widget.FocusStrategy$SequentialComparator: android.graphics.Rect mTemp1>
<androidx.customview.widget.FocusStrategy$SequentialComparator: android.graphics.Rect mTemp2>
<androidx.customview.widget.FocusStrategy$SequentialComparator: boolean mIsLayoutRtl>
<androidx.customview.widget.FocusStrategy$SequentialComparator: androidx.customview.widget.FocusStrategy$BoundsAdapter mAdapter>
    void <init>(boolean, androidx.customview.widget.FocusStrategy$BoundsAdapter)
    {
        androidx.customview.widget.FocusStrategy$SequentialComparator r0;
        boolean z0;
        androidx.customview.widget.FocusStrategy$BoundsAdapter r1;
        android.graphics.Rect $r2, $r3;

        r0 := @this: androidx.customview.widget.FocusStrategy$SequentialComparator;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.customview.widget.FocusStrategy$BoundsAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<androidx.customview.widget.FocusStrategy$SequentialComparator: android.graphics.Rect mTemp1> = $r2;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<androidx.customview.widget.FocusStrategy$SequentialComparator: android.graphics.Rect mTemp2> = $r3;

        r0.<androidx.customview.widget.FocusStrategy$SequentialComparator: boolean mIsLayoutRtl> = z0;

        r0.<androidx.customview.widget.FocusStrategy$SequentialComparator: androidx.customview.widget.FocusStrategy$BoundsAdapter mAdapter> = r1;

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        androidx.customview.widget.FocusStrategy$SequentialComparator r0;
        java.lang.Object r1, r2;
        android.graphics.Rect r3, r4;
        androidx.customview.widget.FocusStrategy$BoundsAdapter $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean $z0, $z1, $z2, $z3;
        byte $b16, $b17, $b18, $b19;

        r0 := @this: androidx.customview.widget.FocusStrategy$SequentialComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 = r0.<androidx.customview.widget.FocusStrategy$SequentialComparator: android.graphics.Rect mTemp1>;

        r4 = r0.<androidx.customview.widget.FocusStrategy$SequentialComparator: android.graphics.Rect mTemp2>;

        $r5 = r0.<androidx.customview.widget.FocusStrategy$SequentialComparator: androidx.customview.widget.FocusStrategy$BoundsAdapter mAdapter>;

        interfaceinvoke $r5.<androidx.customview.widget.FocusStrategy$BoundsAdapter: void obtainBounds(java.lang.Object,android.graphics.Rect)>(r1, r3);

        $r6 = r0.<androidx.customview.widget.FocusStrategy$SequentialComparator: androidx.customview.widget.FocusStrategy$BoundsAdapter mAdapter>;

        interfaceinvoke $r6.<androidx.customview.widget.FocusStrategy$BoundsAdapter: void obtainBounds(java.lang.Object,android.graphics.Rect)>(r2, r4);

        $i1 = r3.<android.graphics.Rect: int top>;

        $i0 = r4.<android.graphics.Rect: int top>;

        if $i1 >= $i0 goto label01;

        return -1;

     label01:
        $i3 = r3.<android.graphics.Rect: int top>;

        $i2 = r4.<android.graphics.Rect: int top>;

        if $i3 <= $i2 goto label02;

        return 1;

     label02:
        $i5 = r3.<android.graphics.Rect: int left>;

        $i4 = r4.<android.graphics.Rect: int left>;

        if $i5 >= $i4 goto label05;

        $z3 = r0.<androidx.customview.widget.FocusStrategy$SequentialComparator: boolean mIsLayoutRtl>;

        if $z3 == 0 goto label03;

        $b16 = 1;

        goto label04;

     label03:
        $b16 = -1;

     label04:
        return $b16;

     label05:
        $i7 = r3.<android.graphics.Rect: int left>;

        $i6 = r4.<android.graphics.Rect: int left>;

        if $i7 <= $i6 goto label08;

        $z2 = r0.<androidx.customview.widget.FocusStrategy$SequentialComparator: boolean mIsLayoutRtl>;

        if $z2 == 0 goto label06;

        $b17 = -1;

        goto label07;

     label06:
        $b17 = 1;

     label07:
        return $b17;

     label08:
        $i9 = r3.<android.graphics.Rect: int bottom>;

        $i8 = r4.<android.graphics.Rect: int bottom>;

        if $i9 >= $i8 goto label09;

        return -1;

     label09:
        $i11 = r3.<android.graphics.Rect: int bottom>;

        $i10 = r4.<android.graphics.Rect: int bottom>;

        if $i11 <= $i10 goto label10;

        return 1;

     label10:
        $i13 = r3.<android.graphics.Rect: int right>;

        $i12 = r4.<android.graphics.Rect: int right>;

        if $i13 >= $i12 goto label13;

        $z1 = r0.<androidx.customview.widget.FocusStrategy$SequentialComparator: boolean mIsLayoutRtl>;

        if $z1 == 0 goto label11;

        $b18 = 1;

        goto label12;

     label11:
        $b18 = -1;

     label12:
        return $b18;

     label13:
        $i15 = r3.<android.graphics.Rect: int right>;

        $i14 = r4.<android.graphics.Rect: int right>;

        if $i15 <= $i14 goto label16;

        $z0 = r0.<androidx.customview.widget.FocusStrategy$SequentialComparator: boolean mIsLayoutRtl>;

        if $z0 == 0 goto label14;

        $b19 = -1;

        goto label15;

     label14:
        $b19 = 1;

     label15:
        return $b19;

     label16:
        return 0;
    }

