androidx.camera.camera2.internal.compat.CameraManagerCompatApi29Impl
    void <init>(android.content.Context)
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompatApi29Impl r0;
        android.content.Context r1;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompatApi29Impl;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatApi28Impl: void <init>(android.content.Context)>(r1);

        return;
    }

    public void openCamera(java.lang.String, java.util.concurrent.Executor, android.hardware.camera2.CameraDevice$StateCallback) throws androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompatApi29Impl r0;
        java.lang.String r1;
        java.util.concurrent.Executor r2;
        android.hardware.camera2.CameraDevice$StateCallback r3;
        java.lang.Throwable r4, $r6, r8;
        android.hardware.camera2.CameraManager $r5;
        androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat $r7;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompatApi29Impl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: android.hardware.camera2.CameraDevice$StateCallback;

     label1:
        $r5 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatApi29Impl: android.hardware.camera2.CameraManager mCameraManager>;

        virtualinvoke $r5.<android.hardware.camera2.CameraManager: void openCamera(java.lang.String,java.util.concurrent.Executor,android.hardware.camera2.CameraDevice$StateCallback)>(r1, r2, r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        $r7 = staticinvoke <androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat: androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat toCameraAccessExceptionCompat(android.hardware.camera2.CameraAccessException)>(r4);

        r8 = (java.lang.Throwable) $r7;

        throw r8;

     label4:
        return;

        catch android.hardware.camera2.CameraAccessException from label1 to label2 with label3;
    }

    public android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String) throws androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat
    {
        androidx.camera.camera2.internal.compat.CameraManagerCompatApi29Impl r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r5, r7;
        android.hardware.camera2.CameraManager $r3;
        android.hardware.camera2.CameraCharacteristics $r4;
        androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat $r6;

        r0 := @this: androidx.camera.camera2.internal.compat.CameraManagerCompatApi29Impl;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<androidx.camera.camera2.internal.compat.CameraManagerCompatApi29Impl: android.hardware.camera2.CameraManager mCameraManager>;

        $r4 = virtualinvoke $r3.<android.hardware.camera2.CameraManager: android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String)>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = staticinvoke <androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat: androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat toCameraAccessExceptionCompat(android.hardware.camera2.CameraAccessException)>(r2);

        r7 = (java.lang.Throwable) $r6;

        throw r7;

        catch android.hardware.camera2.CameraAccessException from label1 to label2 with label3;
    }

