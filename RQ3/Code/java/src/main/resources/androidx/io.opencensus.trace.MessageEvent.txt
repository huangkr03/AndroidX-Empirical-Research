io.opencensus.trace.MessageEvent
    void <init>()
    {
        io.opencensus.trace.MessageEvent $r0;

        $r0 := @this: io.opencensus.trace.MessageEvent;

        specialinvoke $r0.<io.opencensus.trace.BaseMessageEvent: void <init>()>();

        return;
    }

    public static io.opencensus.trace.MessageEvent$Builder builder(io.opencensus.trace.MessageEvent$Type, long)
    {
        io.opencensus.trace.AutoValue_MessageEvent$Builder $r0;
        io.opencensus.trace.MessageEvent$Type $r1;
        long $l0;
        java.lang.Object $r2;
        io.opencensus.trace.MessageEvent$Builder $r3;

        $r1 := @parameter0: io.opencensus.trace.MessageEvent$Type;

        $l0 := @parameter1: long;

        $r0 = new io.opencensus.trace.AutoValue_MessageEvent$Builder;

        specialinvoke $r0.<io.opencensus.trace.AutoValue_MessageEvent$Builder: void <init>()>();

        $r2 = staticinvoke <io.opencensus.internal.Utils: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "type");

        $r1 = (io.opencensus.trace.MessageEvent$Type) $r2;

        $r3 = virtualinvoke $r0.<io.opencensus.trace.AutoValue_MessageEvent$Builder: io.opencensus.trace.MessageEvent$Builder setType(io.opencensus.trace.MessageEvent$Type)>($r1);

        $r3 = virtualinvoke $r3.<io.opencensus.trace.MessageEvent$Builder: io.opencensus.trace.MessageEvent$Builder setMessageId(long)>($l0);

        $r3 = virtualinvoke $r3.<io.opencensus.trace.MessageEvent$Builder: io.opencensus.trace.MessageEvent$Builder setUncompressedMessageSize(long)>(0L);

        $r3 = virtualinvoke $r3.<io.opencensus.trace.MessageEvent$Builder: io.opencensus.trace.MessageEvent$Builder setCompressedMessageSize(long)>(0L);

        return $r3;
    }

<io.opencensus.trace.MessageEvent: long getCompressedMessageSize()>
<io.opencensus.trace.MessageEvent: long getMessageId()>
<io.opencensus.trace.MessageEvent: io.opencensus.trace.MessageEvent$Type getType()>
<io.opencensus.trace.MessageEvent: long getUncompressedMessageSize()>
