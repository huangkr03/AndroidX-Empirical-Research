androidx.media3.transformer.TransformerVideoRenderer
<androidx.media3.transformer.TransformerVideoRenderer: java.lang.String TAG>
<androidx.media3.transformer.TransformerVideoRenderer: android.content.Context context>
<androidx.media3.transformer.TransformerVideoRenderer: boolean clippingStartsAtKeyFrame>
<androidx.media3.transformer.TransformerVideoRenderer: com.google.common.collect.ImmutableList effects>
<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory>
<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.Codec$EncoderFactory encoderFactory>
<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.Codec$DecoderFactory decoderFactory>
<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.common.DebugViewProvider debugViewProvider>
<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.decoder.DecoderInputBuffer decoderInputBuffer>
    public void <init>(android.content.Context, androidx.media3.transformer.MuxerWrapper, androidx.media3.transformer.TransformerMediaClock, androidx.media3.transformer.TransformationRequest, boolean, com.google.common.collect.ImmutableList, androidx.media3.common.FrameProcessor$Factory, androidx.media3.transformer.Codec$EncoderFactory, androidx.media3.transformer.Codec$DecoderFactory, androidx.media3.transformer.Transformer$AsyncErrorListener, androidx.media3.transformer.FallbackListener, androidx.media3.common.DebugViewProvider)
    {
        androidx.media3.transformer.TransformerVideoRenderer r0;
        android.content.Context r1;
        androidx.media3.transformer.MuxerWrapper r2;
        androidx.media3.transformer.TransformerMediaClock r3;
        androidx.media3.transformer.TransformationRequest r4;
        boolean z0;
        com.google.common.collect.ImmutableList r5;
        androidx.media3.common.FrameProcessor$Factory r6;
        androidx.media3.transformer.Codec$EncoderFactory r7;
        androidx.media3.transformer.Codec$DecoderFactory r8;
        androidx.media3.transformer.Transformer$AsyncErrorListener r9;
        androidx.media3.transformer.FallbackListener r10;
        androidx.media3.common.DebugViewProvider r11;
        androidx.media3.decoder.DecoderInputBuffer $r12;

        r0 := @this: androidx.media3.transformer.TransformerVideoRenderer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.transformer.MuxerWrapper;

        r3 := @parameter2: androidx.media3.transformer.TransformerMediaClock;

        r4 := @parameter3: androidx.media3.transformer.TransformationRequest;

        z0 := @parameter4: boolean;

        r5 := @parameter5: com.google.common.collect.ImmutableList;

        r6 := @parameter6: androidx.media3.common.FrameProcessor$Factory;

        r7 := @parameter7: androidx.media3.transformer.Codec$EncoderFactory;

        r8 := @parameter8: androidx.media3.transformer.Codec$DecoderFactory;

        r9 := @parameter9: androidx.media3.transformer.Transformer$AsyncErrorListener;

        r10 := @parameter10: androidx.media3.transformer.FallbackListener;

        r11 := @parameter11: androidx.media3.common.DebugViewProvider;

        specialinvoke r0.<androidx.media3.transformer.TransformerBaseRenderer: void <init>(int,androidx.media3.transformer.MuxerWrapper,androidx.media3.transformer.TransformerMediaClock,androidx.media3.transformer.TransformationRequest,androidx.media3.transformer.Transformer$AsyncErrorListener,androidx.media3.transformer.FallbackListener)>(2, r2, r3, r4, r9, r10);

        r0.<androidx.media3.transformer.TransformerVideoRenderer: android.content.Context context> = r1;

        r0.<androidx.media3.transformer.TransformerVideoRenderer: boolean clippingStartsAtKeyFrame> = z0;

        r0.<androidx.media3.transformer.TransformerVideoRenderer: com.google.common.collect.ImmutableList effects> = r5;

        r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory> = r6;

        r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.Codec$EncoderFactory encoderFactory> = r7;

        r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.Codec$DecoderFactory decoderFactory> = r8;

        r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.common.DebugViewProvider debugViewProvider> = r11;

        $r12 = new androidx.media3.decoder.DecoderInputBuffer;

        specialinvoke $r12.<androidx.media3.decoder.DecoderInputBuffer: void <init>(int)>(0);

        r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.decoder.DecoderInputBuffer decoderInputBuffer> = $r12;

        return;
    }

    public java.lang.String getName()
    {
        androidx.media3.transformer.TransformerVideoRenderer r0;

        r0 := @this: androidx.media3.transformer.TransformerVideoRenderer;

        return "TVideoRenderer";
    }

    protected boolean ensureConfigured() throws androidx.media3.transformer.TransformationException
    {
        androidx.media3.transformer.TransformerVideoRenderer r0;
        androidx.media3.exoplayer.FormatHolder r1;
        int i0;
        androidx.media3.common.Format r2, $r5;
        androidx.media3.transformer.SamplePipeline $r3;
        androidx.media3.decoder.DecoderInputBuffer $r4;
        java.lang.Object $r6;
        boolean $z0;
        androidx.media3.transformer.PassthroughSamplePipeline $r7;
        androidx.media3.transformer.FallbackListener $r8, $r14;
        androidx.media3.transformer.MuxerWrapper $r9, $r15;
        androidx.media3.transformer.TransformationRequest $r10, $r20;
        long $l1, $l2, $l3, $l4;
        androidx.media3.transformer.VideoTranscodingSamplePipeline $r11;
        androidx.media3.common.DebugViewProvider $r12;
        androidx.media3.transformer.Transformer$AsyncErrorListener $r13;
        androidx.media3.transformer.Codec$EncoderFactory $r16;
        androidx.media3.transformer.Codec$DecoderFactory $r17;
        androidx.media3.common.FrameProcessor$Factory $r18;
        com.google.common.collect.ImmutableList $r19;
        android.content.Context $r21;

        r0 := @this: androidx.media3.transformer.TransformerVideoRenderer;

        $r3 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.SamplePipeline samplePipeline>;

        if $r3 == null goto label1;

        return 1;

     label1:
        r1 = virtualinvoke r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.exoplayer.FormatHolder getFormatHolder()>();

        $r4 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.decoder.DecoderInputBuffer decoderInputBuffer>;

        i0 = virtualinvoke r0.<androidx.media3.transformer.TransformerVideoRenderer: int readSource(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int)>(r1, $r4, 2);

        if i0 == -5 goto label2;

        return 0;

     label2:
        $r5 = r1.<androidx.media3.exoplayer.FormatHolder: androidx.media3.common.Format format>;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        r2 = (androidx.media3.common.Format) $r6;

        $z0 = specialinvoke r0.<androidx.media3.transformer.TransformerVideoRenderer: boolean shouldTranscode(androidx.media3.common.Format)>(r2);

        if $z0 == 0 goto label3;

        $r11 = new androidx.media3.transformer.VideoTranscodingSamplePipeline;

        $r21 = r0.<androidx.media3.transformer.TransformerVideoRenderer: android.content.Context context>;

        $l4 = r0.<androidx.media3.transformer.TransformerVideoRenderer: long streamOffsetUs>;

        $l3 = r0.<androidx.media3.transformer.TransformerVideoRenderer: long streamStartPositionUs>;

        $r20 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $r19 = r0.<androidx.media3.transformer.TransformerVideoRenderer: com.google.common.collect.ImmutableList effects>;

        $r18 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.common.FrameProcessor$Factory frameProcessorFactory>;

        $r17 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.Codec$DecoderFactory decoderFactory>;

        $r16 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.Codec$EncoderFactory encoderFactory>;

        $r15 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.MuxerWrapper muxerWrapper>;

        $r14 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.FallbackListener fallbackListener>;

        $r13 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.Transformer$AsyncErrorListener asyncErrorListener>;

        $r12 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.common.DebugViewProvider debugViewProvider>;

        specialinvoke $r11.<androidx.media3.transformer.VideoTranscodingSamplePipeline: void <init>(android.content.Context,androidx.media3.common.Format,long,long,androidx.media3.transformer.TransformationRequest,com.google.common.collect.ImmutableList,androidx.media3.common.FrameProcessor$Factory,androidx.media3.transformer.Codec$DecoderFactory,androidx.media3.transformer.Codec$EncoderFactory,androidx.media3.transformer.MuxerWrapper,androidx.media3.transformer.FallbackListener,androidx.media3.transformer.Transformer$AsyncErrorListener,androidx.media3.common.DebugViewProvider)>($r21, r2, $l4, $l3, $r20, $r19, $r18, $r17, $r16, $r15, $r14, $r13, $r12);

        r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.SamplePipeline samplePipeline> = $r11;

        goto label4;

     label3:
        $r7 = new androidx.media3.transformer.PassthroughSamplePipeline;

        $l2 = r0.<androidx.media3.transformer.TransformerVideoRenderer: long streamOffsetUs>;

        $l1 = r0.<androidx.media3.transformer.TransformerVideoRenderer: long streamStartPositionUs>;

        $r10 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $r9 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.MuxerWrapper muxerWrapper>;

        $r8 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.FallbackListener fallbackListener>;

        specialinvoke $r7.<androidx.media3.transformer.PassthroughSamplePipeline: void <init>(androidx.media3.common.Format,long,long,androidx.media3.transformer.TransformationRequest,androidx.media3.transformer.MuxerWrapper,androidx.media3.transformer.FallbackListener)>(r2, $l2, $l1, $r10, $r9, $r8);

        r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.SamplePipeline samplePipeline> = $r7;

     label4:
        return 1;
    }

    private boolean shouldTranscode(androidx.media3.common.Format)
    {
        androidx.media3.transformer.TransformerVideoRenderer r0;
        androidx.media3.common.Format r1;
        int i0, $i9, $i10, $i11, $i12, $i13;
        long $l1, $l2, $l3;
        byte $b4, $b5, $b6, $b7, $b8;
        androidx.media3.transformer.Codec$EncoderFactory $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        androidx.media3.transformer.TransformationRequest $r3, $r4, $r5, $r7, $r9, $r10, $r11, $r12, $r14, $r17;
        java.lang.String $r6, $r8, $r15, $r18, $r19;
        float $f0, $f1, $f2, $f3;
        com.google.common.collect.ImmutableList $r13;
        androidx.media3.transformer.MuxerWrapper $r16;

        r0 := @this: androidx.media3.transformer.TransformerVideoRenderer;

        r1 := @parameter0: androidx.media3.common.Format;

        $l2 = r0.<androidx.media3.transformer.TransformerVideoRenderer: long streamStartPositionUs>;

        $l1 = r0.<androidx.media3.transformer.TransformerVideoRenderer: long streamOffsetUs>;

        $l3 = $l2 - $l1;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label01;

        $z6 = r0.<androidx.media3.transformer.TransformerVideoRenderer: boolean clippingStartsAtKeyFrame>;

        if $z6 != 0 goto label01;

        return 1;

     label01:
        $r2 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.Codec$EncoderFactory encoderFactory>;

        $z0 = interfaceinvoke $r2.<androidx.media3.transformer.Codec$EncoderFactory: boolean videoNeedsEncoding()>();

        if $z0 == 0 goto label02;

        return 1;

     label02:
        $r3 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $z1 = $r3.<androidx.media3.transformer.TransformationRequest: boolean enableRequestSdrToneMapping>;

        if $z1 == 0 goto label03;

        return 1;

     label03:
        $r4 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $z2 = $r4.<androidx.media3.transformer.TransformationRequest: boolean forceInterpretHdrVideoAsSdr>;

        if $z2 == 0 goto label04;

        return 1;

     label04:
        $r5 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $r6 = $r5.<androidx.media3.transformer.TransformationRequest: java.lang.String videoMimeType>;

        if $r6 == null goto label05;

        $r17 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $r19 = $r17.<androidx.media3.transformer.TransformationRequest: java.lang.String videoMimeType>;

        $r18 = r1.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $z5 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z5 != 0 goto label05;

        return 1;

     label05:
        $r7 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $r8 = $r7.<androidx.media3.transformer.TransformationRequest: java.lang.String videoMimeType>;

        if $r8 != null goto label06;

        $r16 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.MuxerWrapper muxerWrapper>;

        $r15 = r1.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $z4 = virtualinvoke $r16.<androidx.media3.transformer.MuxerWrapper: boolean supportsSampleMimeType(java.lang.String)>($r15);

        if $z4 != 0 goto label06;

        return 1;

     label06:
        $f0 = r1.<androidx.media3.common.Format: float pixelWidthHeightRatio>;

        $b5 = $f0 cmpl 1.0F;

        if $b5 == 0 goto label07;

        return 1;

     label07:
        $r9 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $f1 = $r9.<androidx.media3.transformer.TransformationRequest: float rotationDegrees>;

        $b6 = $f1 cmpl 0.0F;

        if $b6 == 0 goto label08;

        return 1;

     label08:
        $r10 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $f2 = $r10.<androidx.media3.transformer.TransformationRequest: float scaleX>;

        $b7 = $f2 cmpl 1.0F;

        if $b7 == 0 goto label09;

        return 1;

     label09:
        $r11 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $f3 = $r11.<androidx.media3.transformer.TransformationRequest: float scaleY>;

        $b8 = $f3 cmpl 1.0F;

        if $b8 == 0 goto label10;

        return 1;

     label10:
        $i9 = r1.<androidx.media3.common.Format: int rotationDegrees>;

        $i10 = $i9 % 180;

        if $i10 != 0 goto label11;

        $i13 = r1.<androidx.media3.common.Format: int height>;

        goto label12;

     label11:
        $i13 = r1.<androidx.media3.common.Format: int width>;

     label12:
        i0 = $i13;

        $r12 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $i11 = $r12.<androidx.media3.transformer.TransformationRequest: int outputHeight>;

        if $i11 == -1 goto label13;

        $r14 = r0.<androidx.media3.transformer.TransformerVideoRenderer: androidx.media3.transformer.TransformationRequest transformationRequest>;

        $i12 = $r14.<androidx.media3.transformer.TransformationRequest: int outputHeight>;

        if $i12 == i0 goto label13;

        return 1;

     label13:
        $r13 = r0.<androidx.media3.transformer.TransformerVideoRenderer: com.google.common.collect.ImmutableList effects>;

        $z3 = virtualinvoke $r13.<com.google.common.collect.ImmutableList: boolean isEmpty()>();

        if $z3 != 0 goto label14;

        return 1;

     label14:
        return 0;
    }

