com.google.common.flogger.backend.KeyValueFormatter
<com.google.common.flogger.backend.KeyValueFormatter: java.util.Set FUNDAMENTAL_TYPES>
<com.google.common.flogger.backend.KeyValueFormatter: boolean haveSeenValues>
<com.google.common.flogger.backend.KeyValueFormatter: java.lang.StringBuilder out>
<com.google.common.flogger.backend.KeyValueFormatter: java.lang.String prefix>
<com.google.common.flogger.backend.KeyValueFormatter: java.lang.String suffix>
    static void <clinit>()
    {
        java.util.List $r0;
        java.lang.Class[] $r1;
        java.util.HashSet r2;
        java.util.Collection r3;
        java.util.Set r4;

        r2 = new java.util.HashSet;

        $r1 = newarray (java.lang.Class)[7];

        $r1[0] = class "Ljava/lang/Boolean;";

        $r1[1] = class "Ljava/lang/Byte;";

        $r1[2] = class "Ljava/lang/Short;";

        $r1[3] = class "Ljava/lang/Integer;";

        $r1[4] = class "Ljava/lang/Long;";

        $r1[5] = class "Ljava/lang/Float;";

        $r1[6] = class "Ljava/lang/Double;";

        $r0 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        r3 = (java.util.Collection) $r0;

        specialinvoke r2.<java.util.HashSet: void <init>(java.util.Collection)>(r3);

        r4 = (java.util.Set) r2;

        <com.google.common.flogger.backend.KeyValueFormatter: java.util.Set FUNDAMENTAL_TYPES> = r4;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.StringBuilder)
    {
        com.google.common.flogger.backend.KeyValueFormatter $r0;
        java.lang.String $r1, $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: com.google.common.flogger.backend.KeyValueFormatter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.google.common.flogger.backend.KeyValueFormatter: boolean haveSeenValues> = 0;

        $r0.<com.google.common.flogger.backend.KeyValueFormatter: java.lang.String prefix> = $r1;

        $r0.<com.google.common.flogger.backend.KeyValueFormatter: java.lang.String suffix> = $r2;

        $r0.<com.google.common.flogger.backend.KeyValueFormatter: java.lang.StringBuilder out> = $r3;

        return;
    }

    private static void appendEscaped(java.lang.StringBuilder, java.lang.String)
    {
        java.lang.StringBuilder $r0, $r2;
        java.lang.String $r1;
        int $i0, $i1;
        char $c2, $c3;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.String;

        $i0 = 0;

     label1:
        $i1 = staticinvoke <com.google.common.flogger.backend.KeyValueFormatter: int nextEscapableChar(java.lang.String,int)>($r1, $i0);

        if $i1 == -1 goto label8;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        $i0 = $i1 + 1;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $c3 = $c2;

        lookupswitch($c2)
        {
            case 9: goto label5;
            case 10: goto label4;
            case 13: goto label3;
            case 34: goto label6;
            case 92: goto label6;
            default: goto label2;
        };

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);

        goto label7;

     label3:
        $c3 = 114;

        goto label6;

     label4:
        $c3 = 110;

        goto label6;

     label5:
        $c3 = 116;

     label6:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

     label7:
        goto label1;

     label8:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        return;
    }

    public static void appendJsonFormattedKeyAndValue(java.lang.String, java.lang.Object, java.lang.StringBuilder)
    {
        java.lang.StringBuilder $r0, $r3;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Set $r4;
        java.lang.Class $r5;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: java.lang.StringBuilder;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        if $r2 != null goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(1);

        return;

     label1:
        $r4 = <com.google.common.flogger.backend.KeyValueFormatter: java.util.Set FUNDAMENTAL_TYPES>;

        $r5 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        return;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <com.google.common.flogger.backend.KeyValueFormatter: void appendEscaped(java.lang.StringBuilder,java.lang.String)>($r0, $r1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        return;
    }

    private static int nextEscapableChar(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1;
        char $c2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c2 < 32 goto label3;

        if $c2 == 34 goto label5;

        if $c2 != 92 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $i0;

     label4:
        return -1;

     label5:
        return $i0;
    }

    public void done()
    {
        com.google.common.flogger.backend.KeyValueFormatter $r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;

        $r0 := @this: com.google.common.flogger.backend.KeyValueFormatter;

        $z0 = $r0.<com.google.common.flogger.backend.KeyValueFormatter: boolean haveSeenValues>;

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.google.common.flogger.backend.KeyValueFormatter: java.lang.StringBuilder out>;

        $r1 = $r0.<com.google.common.flogger.backend.KeyValueFormatter: java.lang.String suffix>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label1:
        return;
    }

    public void handle(java.lang.String, java.lang.Object)
    {
        com.google.common.flogger.backend.KeyValueFormatter $r0;
        java.lang.String $r1, $r5;
        java.lang.Object $r2;
        boolean $z0;
        char $c0;
        java.lang.StringBuilder $r3, $r4;
        int $i1;

        $r0 := @this: com.google.common.flogger.backend.KeyValueFormatter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $z0 = $r0.<com.google.common.flogger.backend.KeyValueFormatter: boolean haveSeenValues>;

        $c0 = 32;

        if $z0 == 0 goto label1;

        $r3 = $r0.<com.google.common.flogger.backend.KeyValueFormatter: java.lang.StringBuilder out>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label6;

     label1:
        $r3 = $r0.<com.google.common.flogger.backend.KeyValueFormatter: java.lang.StringBuilder out>;

        $i1 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label5;

        $r3 = $r0.<com.google.common.flogger.backend.KeyValueFormatter: java.lang.StringBuilder out>;

        $i1 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        if $i1 > 1000 goto label3;

        $r4 = $r0.<com.google.common.flogger.backend.KeyValueFormatter: java.lang.StringBuilder out>;

        $i1 = virtualinvoke $r4.<java.lang.StringBuilder: int indexOf(java.lang.String)>("\n");

        if $i1 == -1 goto label2;

        goto label3;

     label2:
        goto label4;

     label3:
        $c0 = 10;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

     label5:
        $r3 = $r0.<com.google.common.flogger.backend.KeyValueFormatter: java.lang.StringBuilder out>;

        $r5 = $r0.<com.google.common.flogger.backend.KeyValueFormatter: java.lang.String prefix>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r0.<com.google.common.flogger.backend.KeyValueFormatter: boolean haveSeenValues> = 1;

     label6:
        $r3 = $r0.<com.google.common.flogger.backend.KeyValueFormatter: java.lang.StringBuilder out>;

        staticinvoke <com.google.common.flogger.backend.KeyValueFormatter: void appendJsonFormattedKeyAndValue(java.lang.String,java.lang.Object,java.lang.StringBuilder)>($r1, $r2, $r3);

        return;
    }

