androidx.savedstate.bundle.BundleSavedStateRegistry
<androidx.savedstate.bundle.BundleSavedStateRegistry: java.lang.String SAVED_COMPONENTS_KEY>
    public void <init>()
    {
        androidx.savedstate.bundle.BundleSavedStateRegistry r0;

        r0 := @this: androidx.savedstate.bundle.BundleSavedStateRegistry;

        specialinvoke r0.<androidx.savedstate.AbstractSavedStateRegistry: void <init>()>();

        return;
    }

    public void performRestore(android.os.Bundle)
    {
        androidx.savedstate.bundle.BundleSavedStateRegistry r0;
        android.os.Bundle r1, r2, $r9, $r11;
        java.util.HashMap r3, $r6;
        java.util.Iterator r4;
        java.lang.String r5;
        boolean $z0, $z1;
        java.util.Set $r7;
        java.lang.Object $r8;

        r0 := @this: androidx.savedstate.bundle.BundleSavedStateRegistry;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label1;

        $r11 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>("androidx.lifecycle.BundlableSavedStateRegistry.key");

        goto label2;

     label1:
        $r11 = null;

     label2:
        r2 = $r11;

        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean isEmpty()>();

        if $z0 == 0 goto label4;

     label3:
        virtualinvoke r0.<androidx.savedstate.bundle.BundleSavedStateRegistry: void restoreSavedState(java.util.Map)>(null);

        return;

     label4:
        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r3 = $r6;

        $r7 = virtualinvoke r2.<android.os.Bundle: java.util.Set keySet()>();

        r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r8;

        $r9 = virtualinvoke r2.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>(r5);

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r9);

        goto label5;

     label6:
        virtualinvoke r0.<androidx.savedstate.bundle.BundleSavedStateRegistry: void restoreSavedState(java.util.Map)>(r3);

        return;
    }

    public void performSave(android.os.Bundle)
    {
        androidx.savedstate.bundle.BundleSavedStateRegistry r0;
        android.os.Bundle r1, r3, $r6, $r12;
        java.util.Map r2;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r8, $r9, $r11;
        java.lang.String $r10;

        r0 := @this: androidx.savedstate.bundle.BundleSavedStateRegistry;

        r1 := @parameter0: android.os.Bundle;

        r2 = virtualinvoke r0.<androidx.savedstate.bundle.BundleSavedStateRegistry: java.util.Map saveState()>();

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r3 = $r6;

        $r7 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r9;

        $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (android.os.Bundle) $r11;

        virtualinvoke r3.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r10, $r12);

        goto label1;

     label2:
        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("androidx.lifecycle.BundlableSavedStateRegistry.key", r3);

        return;
    }

