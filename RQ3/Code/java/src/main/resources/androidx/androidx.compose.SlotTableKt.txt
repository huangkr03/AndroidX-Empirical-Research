androidx.compose.SlotTableKt
<androidx.compose.SlotTableKt: java.lang.Object EMPTY>
<androidx.compose.SlotTableKt: int GROUP>
<androidx.compose.SlotTableKt: int NODE>
<androidx.compose.SlotTableKt: int DATA>
<androidx.compose.SlotTableKt: int MIN_GROWTH_SIZE>
    public static final java.lang.Object getEMPTY()
    {
        java.lang.Object $r0;

        $r0 = <androidx.compose.SlotTableKt: java.lang.Object EMPTY>;

        return $r0;
    }

    public static void getEMPTY$annotations()
    {
        return;
    }

    private static final boolean isDecendentOf(androidx.compose.Group, androidx.compose.Group)
    {
        androidx.compose.Group $r0, r1, r2;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.Group;

        r1 := @parameter1: androidx.compose.Group;

        if r1 != null goto label1;

        return 1;

     label1:
        r2 = virtualinvoke $r0.<androidx.compose.Group: androidx.compose.Group getParent()>();

     label2:
        if r2 == null goto label4;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        r2 = virtualinvoke r2.<androidx.compose.Group: androidx.compose.Group getParent()>();

        goto label2;

     label4:
        return 0;
    }

    private static final androidx.compose.Group getAsGroup(java.lang.Object)
    {
        java.lang.Object $r0, r5;
        androidx.compose.Group r1, $r6;
        boolean z0, $z1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3, r7;
        java.lang.Throwable $r4;

        $r0 := @parameter0: java.lang.Object;

        r5 = $r0;

        $z1 = r5 instanceof androidx.compose.Group;

        if $z1 == 0 goto label1;

        $r6 = (androidx.compose.Group) r5;

        goto label2;

     label1:
        $r6 = null;

     label2:
        r1 = $r6;

        if r1 != null goto label3;

        r7 = "Expected a group";

        z0 = 0;

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        $r4 = (java.lang.Throwable) $r2;

        throw $r4;

     label3:
        return r1;
    }

    public static final androidx.compose.Group Group(int, int, java.lang.Object, androidx.compose.Group, java.lang.Object)
    {
        int i0, i1, i2;
        java.lang.Object r0, r2;
        androidx.compose.Group r1, $r7, $r9;
        androidx.compose.NodeGroup r3, r4, $r6;
        boolean z0, z1;
        androidx.compose.DataGroup $r5;
        androidx.compose.DataKeyGroup $r8;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.Object;

        r1 := @parameter3: androidx.compose.Group;

        r2 := @parameter4: java.lang.Object;

        i2 = i0;

        tableswitch(i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r6 = new androidx.compose.NodeGroup;

        specialinvoke $r6.<androidx.compose.NodeGroup: void <init>(int,java.lang.Object,androidx.compose.Group)>(i1, r0, r1);

        r3 = $r6;

        z0 = 0;

        z1 = 0;

        r4 = r3;

        virtualinvoke r4.<androidx.compose.NodeGroup: void setNode(java.lang.Object)>(r2);

        $r9 = (androidx.compose.Group) r3;

        goto label5;

     label2:
        $r5 = new androidx.compose.DataGroup;

        specialinvoke $r5.<androidx.compose.DataGroup: void <init>(int,java.lang.Object,androidx.compose.Group,java.lang.Object)>(i1, r0, r1, r2);

        $r9 = (androidx.compose.Group) $r5;

        goto label5;

     label3:
        if r0 == null goto label4;

        $r8 = new androidx.compose.DataKeyGroup;

        specialinvoke $r8.<androidx.compose.DataKeyGroup: void <init>(int,java.lang.Object,androidx.compose.Group)>(i1, r0, r1);

        $r9 = (androidx.compose.Group) $r8;

        goto label5;

     label4:
        $r7 = new androidx.compose.Group;

        $r9 = $r7;

        specialinvoke $r7.<androidx.compose.Group: void <init>(int,androidx.compose.Group)>(i1, r1);

     label5:
        return $r9;
    }

    private static final int locationOf(java.util.ArrayList, int)
    {
        java.util.ArrayList $r0;
        int i0, i1, i2, $i3, $i4;
        boolean z0, z1;

        $r0 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        i1 = staticinvoke <androidx.compose.SlotTableKt: int search(java.util.ArrayList,int)>($r0, i0);

        z0 = 0;

        z1 = 0;

        i2 = i1;

        if i2 < 0 goto label1;

        $i4 = i2;

        goto label2;

     label1:
        $i3 = i2 + 1;

        $i4 = neg $i3;

     label2:
        return $i4;
    }

    private static final int search(java.util.ArrayList, int)
    {
        java.util.ArrayList $r0;
        int i0, $i1;
        androidx.compose.SlotTableKt$search$1 $r1;
        java.util.List $r2;
        kotlin.jvm.functions.Function1 $r3;

        $r0 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        $r2 = (java.util.List) $r0;

        $r1 = new androidx.compose.SlotTableKt$search$1;

        specialinvoke $r1.<androidx.compose.SlotTableKt$search$1: void <init>(int)>(i0);

        $r3 = (kotlin.jvm.functions.Function1) $r1;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int binarySearch$default(java.util.List,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r2, 0, 0, $r3, 3, null);

        return $i1;
    }

    public static final androidx.compose.Group access$getAsGroup(java.lang.Object)
    {
        java.lang.Object $r0;
        androidx.compose.Group $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <androidx.compose.SlotTableKt: androidx.compose.Group getAsGroup(java.lang.Object)>($r0);

        return $r1;
    }

    public static final boolean access$isDecendentOf(androidx.compose.Group, androidx.compose.Group)
    {
        androidx.compose.Group $r0, r1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.Group;

        r1 := @parameter1: androidx.compose.Group;

        $z0 = staticinvoke <androidx.compose.SlotTableKt: boolean isDecendentOf(androidx.compose.Group,androidx.compose.Group)>($r0, r1);

        return $z0;
    }

    public static final int access$locationOf(java.util.ArrayList, int)
    {
        java.util.ArrayList $r0;
        int i0, $i1;

        $r0 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        $i1 = staticinvoke <androidx.compose.SlotTableKt: int locationOf(java.util.ArrayList,int)>($r0, i0);

        return $i1;
    }

    public static final int access$search(java.util.ArrayList, int)
    {
        java.util.ArrayList $r0;
        int i0, $i1;

        $r0 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        $i1 = staticinvoke <androidx.compose.SlotTableKt: int search(java.util.ArrayList,int)>($r0, i0);

        return $i1;
    }

    public static final void <clinit>()
    {
        androidx.compose.SlotTable$Companion $r0;
        java.lang.Object $r1;

        $r0 = <androidx.compose.SlotTable: androidx.compose.SlotTable$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.compose.SlotTable$Companion: java.lang.Object getEMPTY()>();

        <androidx.compose.SlotTableKt: java.lang.Object EMPTY> = $r1;

        return;
    }

