androidx.ui.foundation.animation.AndroidFlingDecaySpec
<androidx.ui.foundation.animation.AndroidFlingDecaySpec: androidx.ui.foundation.animation.AndroidFlingCalculator flingCalculator>
    public void <init>(androidx.ui.foundation.animation.AndroidFlingCalculator)
    {
        androidx.ui.foundation.animation.AndroidFlingDecaySpec r0;
        androidx.ui.foundation.animation.AndroidFlingCalculator r1;

        r0 := @this: androidx.ui.foundation.animation.AndroidFlingDecaySpec;

        r1 := @parameter0: androidx.ui.foundation.animation.AndroidFlingCalculator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "flingCalculator");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.foundation.animation.AndroidFlingDecaySpec: androidx.ui.foundation.animation.AndroidFlingCalculator flingCalculator> = r1;

        return;
    }

    public final androidx.ui.foundation.animation.AndroidFlingCalculator getFlingCalculator()
    {
        androidx.ui.foundation.animation.AndroidFlingDecaySpec r0;
        androidx.ui.foundation.animation.AndroidFlingCalculator $r1;

        r0 := @this: androidx.ui.foundation.animation.AndroidFlingDecaySpec;

        $r1 = r0.<androidx.ui.foundation.animation.AndroidFlingDecaySpec: androidx.ui.foundation.animation.AndroidFlingCalculator flingCalculator>;

        return $r1;
    }

    public final void setFlingCalculator$ui_foundation_release(androidx.ui.foundation.animation.AndroidFlingCalculator)
    {
        androidx.ui.foundation.animation.AndroidFlingDecaySpec r0;
        androidx.ui.foundation.animation.AndroidFlingCalculator r1;

        r0 := @this: androidx.ui.foundation.animation.AndroidFlingDecaySpec;

        r1 := @parameter0: androidx.ui.foundation.animation.AndroidFlingCalculator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.ui.foundation.animation.AndroidFlingDecaySpec: androidx.ui.foundation.animation.AndroidFlingCalculator flingCalculator> = r1;

        return;
    }

    public float getAbsVelocityThreshold()
    {
        androidx.ui.foundation.animation.AndroidFlingDecaySpec r0;

        r0 := @this: androidx.ui.foundation.animation.AndroidFlingDecaySpec;

        return 0.0F;
    }

    private final float flingDistance(float)
    {
        androidx.ui.foundation.animation.AndroidFlingDecaySpec r0;
        float f0, f1, f2, $f3;
        boolean z0;
        androidx.ui.foundation.animation.AndroidFlingCalculator $r1;

        r0 := @this: androidx.ui.foundation.animation.AndroidFlingDecaySpec;

        f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<androidx.ui.foundation.animation.AndroidFlingDecaySpec: androidx.ui.foundation.animation.AndroidFlingCalculator getFlingCalculator()>();

        f1 = virtualinvoke $r1.<androidx.ui.foundation.animation.AndroidFlingCalculator: float flingDistance(float)>(f0);

        z0 = 0;

        f2 = staticinvoke <java.lang.Math: float signum(float)>(f0);

        $f3 = f1 * f2;

        return $f3;
    }

    public float getTarget(float, float)
    {
        androidx.ui.foundation.animation.AndroidFlingDecaySpec r0;
        float f0, f1, $f2, $f3;

        r0 := @this: androidx.ui.foundation.animation.AndroidFlingDecaySpec;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = specialinvoke r0.<androidx.ui.foundation.animation.AndroidFlingDecaySpec: float flingDistance(float)>(f1);

        $f3 = f0 + $f2;

        return $f3;
    }

    public float getValue(long, float, float)
    {
        androidx.ui.foundation.animation.AndroidFlingDecaySpec r0;
        long l0;
        float f0, f1, $f2, $f3;
        androidx.ui.foundation.animation.AndroidFlingCalculator $r1;
        androidx.ui.foundation.animation.AndroidFlingCalculator$FlingInfo $r2;

        r0 := @this: androidx.ui.foundation.animation.AndroidFlingDecaySpec;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $r1 = virtualinvoke r0.<androidx.ui.foundation.animation.AndroidFlingDecaySpec: androidx.ui.foundation.animation.AndroidFlingCalculator getFlingCalculator()>();

        $r2 = virtualinvoke $r1.<androidx.ui.foundation.animation.AndroidFlingCalculator: androidx.ui.foundation.animation.AndroidFlingCalculator$FlingInfo flingInfo(float)>(f1);

        $f2 = virtualinvoke $r2.<androidx.ui.foundation.animation.AndroidFlingCalculator$FlingInfo: float position(long)>(l0);

        $f3 = f0 + $f2;

        return $f3;
    }

    public long getDurationMillis(float, float)
    {
        androidx.ui.foundation.animation.AndroidFlingDecaySpec r0;
        float f0, f1;
        androidx.ui.foundation.animation.AndroidFlingCalculator $r1;
        long $l0;

        r0 := @this: androidx.ui.foundation.animation.AndroidFlingDecaySpec;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<androidx.ui.foundation.animation.AndroidFlingDecaySpec: androidx.ui.foundation.animation.AndroidFlingCalculator getFlingCalculator()>();

        $l0 = virtualinvoke $r1.<androidx.ui.foundation.animation.AndroidFlingCalculator: long flingDuration(float)>(f1);

        return $l0;
    }

    public float getVelocity(long, float, float)
    {
        androidx.ui.foundation.animation.AndroidFlingDecaySpec r0;
        long l0;
        float f0, f1, $f2;
        androidx.ui.foundation.animation.AndroidFlingCalculator $r1;
        androidx.ui.foundation.animation.AndroidFlingCalculator$FlingInfo $r2;

        r0 := @this: androidx.ui.foundation.animation.AndroidFlingDecaySpec;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $r1 = virtualinvoke r0.<androidx.ui.foundation.animation.AndroidFlingDecaySpec: androidx.ui.foundation.animation.AndroidFlingCalculator getFlingCalculator()>();

        $r2 = virtualinvoke $r1.<androidx.ui.foundation.animation.AndroidFlingCalculator: androidx.ui.foundation.animation.AndroidFlingCalculator$FlingInfo flingInfo(float)>(f1);

        $f2 = virtualinvoke $r2.<androidx.ui.foundation.animation.AndroidFlingCalculator$FlingInfo: float velocity(long)>(l0);

        return $f2;
    }

