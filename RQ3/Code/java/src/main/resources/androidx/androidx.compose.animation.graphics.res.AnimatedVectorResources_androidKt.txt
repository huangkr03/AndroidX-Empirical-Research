androidx.compose.animation.graphics.res.AnimatedVectorResources_androidKt
    public static final androidx.compose.animation.graphics.vector.AnimatedImageVector animatedVectorResource(androidx.compose.animation.graphics.vector.AnimatedImageVector$Companion, int, androidx.compose.runtime.Composer, int)
    {
        androidx.compose.animation.graphics.vector.AnimatedImageVector$Companion $r0;
        int i0, $i1;
        androidx.compose.runtime.Composer $r1;
        android.content.Context r2;
        boolean z1, $z5, $z6;
        java.lang.Object r4, r6, $r9, r11, $r15;
        androidx.compose.animation.graphics.vector.AnimatedImageVector r5, $r16;
        androidx.compose.runtime.ProvidableCompositionLocal $r7;
        androidx.compose.runtime.Composer$Companion $r8;
        androidx.compose.runtime.CompositionLocal r10;
        android.content.res.Resources r12;
        android.content.res.Resources$Theme $r13;
        java.lang.Integer r14;

        $r0 := @parameter0: androidx.compose.animation.graphics.vector.AnimatedImageVector$Companion;

        i0 := @parameter1: int;

        $r1 := @parameter2: androidx.compose.runtime.Composer;

        $i1 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(-976666674);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(animatedVectorResource)43@1668L7,46@1749L71:AnimatedVectorResources.android.kt#pckd48");

        $z5 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z5 == 0 goto label1;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventStart(int,int,int,java.lang.String)>(-976666674, $i1, -1, "androidx.compose.animation.graphics.res.animatedVectorResource (AnimatedVectorResources.android.kt:40)");

     label1:
        $r7 = staticinvoke <androidx.compose.ui.platform.AndroidCompositionLocals_androidKt: androidx.compose.runtime.ProvidableCompositionLocal getLocalContext()>();

        r10 = (androidx.compose.runtime.CompositionLocal) $r7;

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String)>($r1, 2023513938, "C:CompositionLocal.kt#9igjgp");

        r11 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: java.lang.Object consume(androidx.compose.runtime.CompositionLocal)>(r10);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformationMarkerEnd(androidx.compose.runtime.Composer)>($r1);

        r2 = (android.content.Context) r11;

        r12 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r13 = virtualinvoke r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void startReplaceableGroup(int)>(1157296644);

        staticinvoke <androidx.compose.runtime.ComposerKt: void sourceInformation(androidx.compose.runtime.Composer,java.lang.String)>($r1, "C(remember)P(1):Composables.kt#9igjgp");

        z1 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: boolean changed(java.lang.Object)>(r14);

        r4 = interfaceinvoke $r1.<androidx.compose.runtime.Composer: java.lang.Object rememberedValue()>();

        if z1 != 0 goto label2;

        $r8 = <androidx.compose.runtime.Composer: androidx.compose.runtime.Composer$Companion Companion>;

        $r9 = virtualinvoke $r8.<androidx.compose.runtime.Composer$Companion: java.lang.Object getEmpty()>();

        if r4 != $r9 goto label3;

     label2:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r12, "res");

        r5 = staticinvoke <androidx.compose.animation.graphics.res.AnimatedVectorResources_androidKt: androidx.compose.animation.graphics.vector.AnimatedImageVector loadAnimatedVectorResource(android.content.res.Resources$Theme,android.content.res.Resources,int)>($r13, r12, i0);

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void updateRememberedValue(java.lang.Object)>(r5);

        $r15 = r5;

        goto label4;

     label3:
        $r15 = r4;

     label4:
        r6 = $r15;

        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        $r16 = (androidx.compose.animation.graphics.vector.AnimatedImageVector) r6;

        $z6 = staticinvoke <androidx.compose.runtime.ComposerKt: boolean isTraceInProgress()>();

        if $z6 == 0 goto label5;

        staticinvoke <androidx.compose.runtime.ComposerKt: void traceEventEnd()>();

     label5:
        interfaceinvoke $r1.<androidx.compose.runtime.Composer: void endReplaceableGroup()>();

        return $r16;
    }

    public static final androidx.compose.animation.graphics.vector.AnimatedImageVector loadAnimatedVectorResource(android.content.res.Resources$Theme, android.content.res.Resources, int) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.Resources$Theme r0;
        android.content.res.Resources r1;
        int i0;
        org.xmlpull.v1.XmlPullParser r2, $r5;
        android.util.AttributeSet r3;
        android.content.res.XmlResourceParser $r4;
        androidx.compose.animation.graphics.vector.AnimatedImageVector $r6;

        r0 := @parameter0: android.content.res.Resources$Theme;

        r1 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "res");

        $r4 = virtualinvoke r1.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "res.getXml(resId)");

        $r5 = (org.xmlpull.v1.XmlPullParser) $r4;

        r2 = staticinvoke <androidx.compose.animation.graphics.vector.compat.XmlPullParserUtils_androidKt: org.xmlpull.v1.XmlPullParser seekToStartTag(org.xmlpull.v1.XmlPullParser)>($r5);

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "attrs");

        $r6 = staticinvoke <androidx.compose.animation.graphics.vector.compat.XmlAnimatedVectorParser_androidKt: androidx.compose.animation.graphics.vector.AnimatedImageVector parseAnimatedImageVector(org.xmlpull.v1.XmlPullParser,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)>(r2, r1, r0, r3);

        return $r6;
    }

    public static androidx.compose.animation.graphics.vector.AnimatedImageVector loadAnimatedVectorResource$default(android.content.res.Resources$Theme, android.content.res.Resources, int, int, java.lang.Object) throws org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.Resources r0;
        int i0, i1, $i2;
        java.lang.Object r1;
        androidx.compose.animation.graphics.vector.AnimatedImageVector $r2;
        android.content.res.Resources$Theme r3;

        r3 := @parameter0: android.content.res.Resources$Theme;

        r0 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i2 = i1 & 1;

        if $i2 == 0 goto label1;

        r3 = null;

     label1:
        $r2 = staticinvoke <androidx.compose.animation.graphics.res.AnimatedVectorResources_androidKt: androidx.compose.animation.graphics.vector.AnimatedImageVector loadAnimatedVectorResource(android.content.res.Resources$Theme,android.content.res.Resources,int)>(r3, r0, i0);

        return $r2;
    }

