androidx.room.compiler.processing.javac.JavacMethodType
<androidx.room.compiler.processing.javac.JavacMethodType: androidx.room.compiler.processing.javac.JavacMethodType$Companion Companion>
<androidx.room.compiler.processing.javac.JavacMethodType: androidx.room.compiler.processing.javac.JavacMethodElement element>
<androidx.room.compiler.processing.javac.JavacMethodType: kotlin.Lazy returnType$delegate>
<androidx.room.compiler.processing.javac.JavacMethodType: kotlin.Lazy typeVariableNames$delegate>
    private void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, androidx.room.compiler.processing.javac.JavacMethodElement, javax.lang.model.type.ExecutableType)
    {
        androidx.room.compiler.processing.javac.JavacMethodType r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        androidx.room.compiler.processing.javac.JavacMethodElement r2;
        javax.lang.model.type.ExecutableType r3;
        androidx.room.compiler.processing.javac.JavacExecutableElement $r4;
        androidx.room.compiler.processing.javac.JavacMethodType$returnType$2 $r5;
        kotlin.jvm.functions.Function0 $r6, $r9;
        kotlin.Lazy $r7, $r10;
        androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2 $r8;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: androidx.room.compiler.processing.javac.JavacMethodElement;

        r3 := @parameter2: javax.lang.model.type.ExecutableType;

        $r4 = (androidx.room.compiler.processing.javac.JavacExecutableElement) r2;

        specialinvoke r0.<androidx.room.compiler.processing.javac.JavacExecutableType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacExecutableElement,javax.lang.model.type.ExecutableType)>(r1, $r4, r3);

        r0.<androidx.room.compiler.processing.javac.JavacMethodType: androidx.room.compiler.processing.javac.JavacMethodElement element> = r2;

        $r5 = new androidx.room.compiler.processing.javac.JavacMethodType$returnType$2;

        specialinvoke $r5.<androidx.room.compiler.processing.javac.JavacMethodType$returnType$2: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ExecutableType,androidx.room.compiler.processing.javac.JavacMethodType)>(r1, r3, r0);

        $r6 = (kotlin.jvm.functions.Function0) $r5;

        $r7 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r6);

        r0.<androidx.room.compiler.processing.javac.JavacMethodType: kotlin.Lazy returnType$delegate> = $r7;

        $r8 = new androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2;

        specialinvoke $r8.<androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2: void <init>(javax.lang.model.type.ExecutableType)>(r3);

        $r9 = (kotlin.jvm.functions.Function0) $r8;

        $r10 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r9);

        r0.<androidx.room.compiler.processing.javac.JavacMethodType: kotlin.Lazy typeVariableNames$delegate> = $r10;

        return;
    }

    public androidx.room.compiler.processing.javac.JavacMethodElement getElement()
    {
        androidx.room.compiler.processing.javac.JavacMethodType r0;
        androidx.room.compiler.processing.javac.JavacMethodElement $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacMethodType: androidx.room.compiler.processing.javac.JavacMethodElement element>;

        return $r1;
    }

    public androidx.room.compiler.processing.javac.JavacType getReturnType()
    {
        androidx.room.compiler.processing.javac.JavacMethodType r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.javac.JavacType $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacMethodType: kotlin.Lazy returnType$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.javac.JavacType) $r2;

        return $r3;
    }

    public java.util.List getTypeVariableNames()
    {
        androidx.room.compiler.processing.javac.JavacMethodType r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacMethodType: kotlin.Lazy typeVariableNames$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public volatile androidx.room.compiler.processing.javac.JavacExecutableElement getElement()
    {
        androidx.room.compiler.processing.javac.JavacMethodType r0;
        androidx.room.compiler.processing.javac.JavacMethodElement $r1;
        androidx.room.compiler.processing.javac.JavacExecutableElement $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodType: androidx.room.compiler.processing.javac.JavacMethodElement getElement()>();

        $r2 = (androidx.room.compiler.processing.javac.JavacExecutableElement) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XType getReturnType()
    {
        androidx.room.compiler.processing.javac.JavacMethodType r0;
        androidx.room.compiler.processing.javac.JavacType $r1;
        androidx.room.compiler.processing.XType $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodType: androidx.room.compiler.processing.javac.JavacType getReturnType()>();

        $r2 = (androidx.room.compiler.processing.XType) $r1;

        return $r2;
    }

    public void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, androidx.room.compiler.processing.javac.JavacMethodElement, javax.lang.model.type.ExecutableType, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.javac.JavacMethodType r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        androidx.room.compiler.processing.javac.JavacMethodElement r2;
        javax.lang.model.type.ExecutableType r3;
        kotlin.jvm.internal.DefaultConstructorMarker $r4;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: androidx.room.compiler.processing.javac.JavacMethodElement;

        r3 := @parameter2: javax.lang.model.type.ExecutableType;

        $r4 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacMethodElement,javax.lang.model.type.ExecutableType)>(r1, r2, r3);

        return;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.javac.JavacMethodType$Companion $r0;

        $r0 = new androidx.room.compiler.processing.javac.JavacMethodType$Companion;

        specialinvoke $r0.<androidx.room.compiler.processing.javac.JavacMethodType$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.javac.JavacMethodType: androidx.room.compiler.processing.javac.JavacMethodType$Companion Companion> = $r0;

        return;
    }

androidx.room.compiler.processing.javac.JavacMethodType$Companion
    private void <init>()
    {
        androidx.room.compiler.processing.javac.JavacMethodType$Companion r0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.room.compiler.processing.javac.JavacMethodType create(androidx.room.compiler.processing.javac.JavacProcessingEnv, androidx.room.compiler.processing.javac.JavacMethodElement, javax.lang.model.type.ExecutableType)
    {
        androidx.room.compiler.processing.javac.JavacMethodType$Companion r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        androidx.room.compiler.processing.javac.JavacMethodElement r2;
        javax.lang.model.type.ExecutableType r3;
        boolean $z0;
        androidx.room.compiler.processing.javac.JavacMethodType$NormalMethodType $r4;
        androidx.room.compiler.processing.javac.JavacMethodType$SuspendMethodType $r5;
        androidx.room.compiler.processing.javac.JavacMethodType $r6;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType$Companion;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: androidx.room.compiler.processing.javac.JavacMethodElement;

        r3 := @parameter2: javax.lang.model.type.ExecutableType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "element");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "executableType");

        $z0 = virtualinvoke r2.<androidx.room.compiler.processing.javac.JavacMethodElement: boolean isSuspendFunction()>();

        if $z0 == 0 goto label1;

        $r5 = new androidx.room.compiler.processing.javac.JavacMethodType$SuspendMethodType;

        specialinvoke $r5.<androidx.room.compiler.processing.javac.JavacMethodType$SuspendMethodType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacMethodElement,javax.lang.model.type.ExecutableType)>(r1, r2, r3);

        $r6 = (androidx.room.compiler.processing.javac.JavacMethodType) $r5;

        goto label2;

     label1:
        $r4 = new androidx.room.compiler.processing.javac.JavacMethodType$NormalMethodType;

        specialinvoke $r4.<androidx.room.compiler.processing.javac.JavacMethodType$NormalMethodType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacMethodElement,javax.lang.model.type.ExecutableType)>(r1, r2, r3);

        $r6 = (androidx.room.compiler.processing.javac.JavacMethodType) $r4;

     label2:
        return $r6;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.javac.JavacMethodType$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodType$Companion: void <init>()>();

        return;
    }

androidx.room.compiler.processing.javac.JavacMethodType$NormalMethodType
    public void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, androidx.room.compiler.processing.javac.JavacMethodElement, javax.lang.model.type.ExecutableType)
    {
        androidx.room.compiler.processing.javac.JavacMethodType$NormalMethodType r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        androidx.room.compiler.processing.javac.JavacMethodElement r2;
        javax.lang.model.type.ExecutableType r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType$NormalMethodType;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: androidx.room.compiler.processing.javac.JavacMethodElement;

        r3 := @parameter2: javax.lang.model.type.ExecutableType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "element");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "executableType");

        specialinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacMethodElement,javax.lang.model.type.ExecutableType,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, r3, null);

        return;
    }

androidx.room.compiler.processing.javac.JavacMethodType$returnType$2
<androidx.room.compiler.processing.javac.JavacMethodType$returnType$2: androidx.room.compiler.processing.javac.JavacProcessingEnv $env>
<androidx.room.compiler.processing.javac.JavacMethodType$returnType$2: javax.lang.model.type.ExecutableType $executableType>
<androidx.room.compiler.processing.javac.JavacMethodType$returnType$2: androidx.room.compiler.processing.javac.JavacMethodType this$0>
    void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, javax.lang.model.type.ExecutableType, androidx.room.compiler.processing.javac.JavacMethodType)
    {
        androidx.room.compiler.processing.javac.JavacMethodType$returnType$2 r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r1;
        javax.lang.model.type.ExecutableType $r2;
        androidx.room.compiler.processing.javac.JavacMethodType $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType$returnType$2;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        $r2 := @parameter1: javax.lang.model.type.ExecutableType;

        $r3 := @parameter2: androidx.room.compiler.processing.javac.JavacMethodType;

        r0.<androidx.room.compiler.processing.javac.JavacMethodType$returnType$2: androidx.room.compiler.processing.javac.JavacProcessingEnv $env> = $r1;

        r0.<androidx.room.compiler.processing.javac.JavacMethodType$returnType$2: javax.lang.model.type.ExecutableType $executableType> = $r2;

        r0.<androidx.room.compiler.processing.javac.JavacMethodType$returnType$2: androidx.room.compiler.processing.javac.JavacMethodType this$0> = $r3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.processing.javac.JavacType invoke()
    {
        androidx.room.compiler.processing.javac.JavacMethodType$returnType$2 r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        javax.lang.model.type.TypeMirror r2, $r6;
        androidx.room.compiler.processing.javac.kotlin.KmType r3, $r22;
        androidx.room.compiler.processing.XNullability r4;
        javax.lang.model.type.ExecutableType $r5;
        androidx.room.compiler.processing.javac.JavacMethodType $r7, $r9, $r23;
        androidx.room.compiler.processing.javac.JavacMethodElement $r8, $r10, $r24;
        boolean $z1;
        androidx.room.compiler.processing.javac.kotlin.KmFunction $r11;
        int[] $r12;
        int $i0, $i1;
        javax.lang.model.type.DeclaredType $r13, $r14, $r16;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r15, $r30;
        javax.lang.model.type.ArrayType $r17, $r18, $r20;
        androidx.room.compiler.processing.javac.JavacArrayType $r19, $r28;
        androidx.room.compiler.processing.javac.DefaultJavacType $r21, $r31;
        javax.lang.model.element.ExecutableElement $r25;
        javax.lang.model.element.Element $r26;
        javax.lang.model.type.TypeKind $r27;
        androidx.room.compiler.processing.javac.JavacType $r29;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType$returnType$2;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacMethodType$returnType$2: androidx.room.compiler.processing.javac.JavacProcessingEnv $env>;

        $r5 = r0.<androidx.room.compiler.processing.javac.JavacMethodType$returnType$2: javax.lang.model.type.ExecutableType $executableType>;

        $r6 = interfaceinvoke $r5.<javax.lang.model.type.ExecutableType: javax.lang.model.type.TypeMirror getReturnType()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "executableType.returnType");

        r2 = $r6;

        $r7 = r0.<androidx.room.compiler.processing.javac.JavacMethodType$returnType$2: androidx.room.compiler.processing.javac.JavacMethodType this$0>;

        $r8 = virtualinvoke $r7.<androidx.room.compiler.processing.javac.JavacMethodType: androidx.room.compiler.processing.javac.JavacMethodElement getElement()>();

        $z1 = virtualinvoke $r8.<androidx.room.compiler.processing.javac.JavacMethodElement: boolean isSuspendFunction()>();

        if $z1 == 0 goto label01;

        $r22 = (androidx.room.compiler.processing.javac.kotlin.KmType) null;

        goto label03;

     label01:
        $r9 = r0.<androidx.room.compiler.processing.javac.JavacMethodType$returnType$2: androidx.room.compiler.processing.javac.JavacMethodType this$0>;

        $r10 = virtualinvoke $r9.<androidx.room.compiler.processing.javac.JavacMethodType: androidx.room.compiler.processing.javac.JavacMethodElement getElement()>();

        $r11 = virtualinvoke $r10.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.kotlin.KmFunction getKotlinMetadata()>();

        if $r11 == null goto label02;

        $r22 = virtualinvoke $r11.<androidx.room.compiler.processing.javac.kotlin.KmFunction: androidx.room.compiler.processing.javac.kotlin.KmType getReturnType()>();

        goto label03;

     label02:
        $r22 = null;

     label03:
        r3 = $r22;

        $r23 = r0.<androidx.room.compiler.processing.javac.JavacMethodType$returnType$2: androidx.room.compiler.processing.javac.JavacMethodType this$0>;

        $r24 = virtualinvoke $r23.<androidx.room.compiler.processing.javac.JavacMethodType: androidx.room.compiler.processing.javac.JavacMethodElement getElement()>();

        $r25 = virtualinvoke $r24.<androidx.room.compiler.processing.javac.JavacMethodElement: javax.lang.model.element.ExecutableElement getElement()>();

        $r26 = (javax.lang.model.element.Element) $r25;

        r4 = staticinvoke <androidx.room.compiler.processing.javac.ElementExtKt: androidx.room.compiler.processing.XNullability getNullability(javax.lang.model.element.Element)>($r26);

        $r27 = interfaceinvoke r2.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        if $r27 != null goto label04;

        $i1 = -1;

        goto label05;

     label04:
        $r12 = <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r27.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i1 = $r12[$i0];

     label05:
        tableswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label10;
            default: goto label14;
        };

     label06:
        if r3 == null goto label07;

        $r19 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r28 = $r19;

        $r20 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r20, "asArray(typeMirror)");

        specialinvoke $r19.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r1, $r20, r3);

        goto label09;

     label07:
        if r4 == null goto label08;

        $r28 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r18 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "asArray(typeMirror)");

        specialinvoke $r28.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.XNullability,androidx.room.compiler.processing.XNullability)>(r1, $r18, r4, null);

        goto label09;

     label08:
        $r28 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r17 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "asArray(typeMirror)");

        specialinvoke $r28.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType)>(r1, $r17);

     label09:
        $r29 = (androidx.room.compiler.processing.javac.JavacType) $r28;

        goto label18;

     label10:
        if r3 == null goto label11;

        $r15 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r30 = $r15;

        $r16 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "asDeclared(typeMirror)");

        specialinvoke $r15.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r1, $r16, r3);

        goto label13;

     label11:
        if r4 == null goto label12;

        $r30 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r14 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "asDeclared(typeMirror)");

        specialinvoke $r30.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.XNullability)>(r1, $r14, r4);

        goto label13;

     label12:
        $r30 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r13 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "asDeclared(typeMirror)");

        specialinvoke $r30.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType)>(r1, $r13);

     label13:
        $r29 = (androidx.room.compiler.processing.javac.JavacType) $r30;

        goto label18;

     label14:
        if r3 == null goto label15;

        $r21 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        $r31 = $r21;

        specialinvoke $r21.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.javac.kotlin.KmType)>(r1, r2, r3);

        goto label17;

     label15:
        if r4 == null goto label16;

        $r31 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r31.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.XNullability)>(r1, r2, r4);

        goto label17;

     label16:
        $r31 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r31.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror)>(r1, r2);

     label17:
        $r29 = (androidx.room.compiler.processing.javac.JavacType) $r31;

     label18:
        return $r29;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.javac.JavacMethodType$returnType$2 r0;
        androidx.room.compiler.processing.javac.JavacType $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType$returnType$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodType$returnType$2: androidx.room.compiler.processing.javac.JavacType invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.javac.JavacMethodType$SuspendMethodType
    public void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv, androidx.room.compiler.processing.javac.JavacMethodElement, javax.lang.model.type.ExecutableType)
    {
        androidx.room.compiler.processing.javac.JavacMethodType$SuspendMethodType r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r1;
        androidx.room.compiler.processing.javac.JavacMethodElement r2;
        javax.lang.model.type.ExecutableType r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType$SuspendMethodType;

        r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r2 := @parameter1: androidx.room.compiler.processing.javac.JavacMethodElement;

        r3 := @parameter2: javax.lang.model.type.ExecutableType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "element");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "executableType");

        specialinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,androidx.room.compiler.processing.javac.JavacMethodElement,javax.lang.model.type.ExecutableType,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, r3, null);

        return;
    }

    public androidx.room.compiler.processing.XType getSuspendFunctionReturnType()
    {
        androidx.room.compiler.processing.javac.JavacMethodType$SuspendMethodType r0;
        javax.lang.model.type.TypeMirror r1, r2, r4, $r10, $r30;
        androidx.room.compiler.processing.javac.JavacProcessingEnv r3;
        androidx.room.compiler.processing.javac.kotlin.KmType r5, $r31;
        androidx.room.compiler.processing.XNullability r6;
        javax.lang.model.type.ExecutableType $r7;
        java.util.List $r8, $r12;
        java.lang.Object $r9, $r13;
        javax.lang.model.type.DeclaredType $r11, $r21, $r22, $r24;
        androidx.room.compiler.processing.javac.JavacMethodElement $r14, $r16;
        androidx.room.compiler.processing.javac.kotlin.KmFunction $r15;
        javax.lang.model.element.ExecutableElement $r17;
        javax.lang.model.element.Element $r18;
        javax.lang.model.type.TypeKind $r19;
        int[] $r20;
        int $i0, $i1;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r23, $r34;
        javax.lang.model.type.ArrayType $r25, $r26, $r28;
        androidx.room.compiler.processing.javac.JavacArrayType $r27, $r32;
        androidx.room.compiler.processing.javac.DefaultJavacType $r29, $r35;
        androidx.room.compiler.processing.javac.JavacType $r33;
        androidx.room.compiler.processing.XType $r36;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType$SuspendMethodType;

        $r7 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodType$SuspendMethodType: javax.lang.model.type.ExecutableType getExecutableType()>();

        $r8 = interfaceinvoke $r7.<javax.lang.model.type.ExecutableType: java.util.List getParameterTypes()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "executableType.parameterTypes");

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r8);

        $r10 = (javax.lang.model.type.TypeMirror) $r9;

        $r11 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>($r10);

        $r12 = interfaceinvoke $r11.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "asDeclared(executableTyp\u2026pes.last()).typeArguments");

        $r13 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r12);

        r1 = (javax.lang.model.type.TypeMirror) $r13;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "typeParam");

        $r30 = staticinvoke <androidx.room.compiler.processing.javac.TypeMirrorExtKt: javax.lang.model.type.TypeMirror extendsBound(javax.lang.model.type.TypeMirror)>(r1);

        if $r30 != null goto label01;

        $r30 = r1;

     label01:
        r2 = $r30;

        r3 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodType$SuspendMethodType: androidx.room.compiler.processing.javac.JavacProcessingEnv getEnv()>();

        r4 = r2;

        $r14 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodType$SuspendMethodType: androidx.room.compiler.processing.javac.JavacMethodElement getElement()>();

        $r15 = virtualinvoke $r14.<androidx.room.compiler.processing.javac.JavacMethodElement: androidx.room.compiler.processing.javac.kotlin.KmFunction getKotlinMetadata()>();

        if $r15 == null goto label02;

        $r31 = virtualinvoke $r15.<androidx.room.compiler.processing.javac.kotlin.KmFunction: androidx.room.compiler.processing.javac.kotlin.KmType getReturnType()>();

        goto label03;

     label02:
        $r31 = null;

     label03:
        r5 = $r31;

        $r16 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodType$SuspendMethodType: androidx.room.compiler.processing.javac.JavacMethodElement getElement()>();

        $r17 = virtualinvoke $r16.<androidx.room.compiler.processing.javac.JavacMethodElement: javax.lang.model.element.ExecutableElement getElement()>();

        $r18 = (javax.lang.model.element.Element) $r17;

        r6 = staticinvoke <androidx.room.compiler.processing.javac.ElementExtKt: androidx.room.compiler.processing.XNullability getNullability(javax.lang.model.element.Element)>($r18);

        $r19 = interfaceinvoke r4.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        if $r19 != null goto label04;

        $i1 = -1;

        goto label05;

     label04:
        $r20 = <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r19.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i1 = $r20[$i0];

     label05:
        tableswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label10;
            default: goto label14;
        };

     label06:
        if r5 == null goto label07;

        $r27 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r32 = $r27;

        $r28 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r28, "asArray(typeMirror)");

        specialinvoke $r27.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r3, $r28, r5);

        goto label09;

     label07:
        if r6 == null goto label08;

        $r32 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r26 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r26, "asArray(typeMirror)");

        specialinvoke $r32.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.XNullability,androidx.room.compiler.processing.XNullability)>(r3, $r26, r6, null);

        goto label09;

     label08:
        $r32 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r25 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r25, "asArray(typeMirror)");

        specialinvoke $r32.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType)>(r3, $r25);

     label09:
        $r33 = (androidx.room.compiler.processing.javac.JavacType) $r32;

        goto label18;

     label10:
        if r5 == null goto label11;

        $r23 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r34 = $r23;

        $r24 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r24, "asDeclared(typeMirror)");

        specialinvoke $r23.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r3, $r24, r5);

        goto label13;

     label11:
        if r6 == null goto label12;

        $r34 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r22 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r22, "asDeclared(typeMirror)");

        specialinvoke $r34.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.XNullability)>(r3, $r22, r6);

        goto label13;

     label12:
        $r34 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r21 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r21, "asDeclared(typeMirror)");

        specialinvoke $r34.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType)>(r3, $r21);

     label13:
        $r33 = (androidx.room.compiler.processing.javac.JavacType) $r34;

        goto label18;

     label14:
        if r5 == null goto label15;

        $r29 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        $r35 = $r29;

        specialinvoke $r29.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.javac.kotlin.KmType)>(r3, r4, r5);

        goto label17;

     label15:
        if r6 == null goto label16;

        $r35 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r35.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.XNullability)>(r3, r4, r6);

        goto label17;

     label16:
        $r35 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r35.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror)>(r3, r4);

     label17:
        $r33 = (androidx.room.compiler.processing.javac.JavacType) $r35;

     label18:
        $r36 = (androidx.room.compiler.processing.XType) $r33;

        return $r36;
    }

androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2
<androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2: javax.lang.model.type.ExecutableType $executableType>
    void <init>(javax.lang.model.type.ExecutableType)
    {
        androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2 r0;
        javax.lang.model.type.ExecutableType $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2;

        $r1 := @parameter0: javax.lang.model.type.ExecutableType;

        r0.<androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2: javax.lang.model.type.ExecutableType $executableType> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.util.List invoke()
    {
        androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2 r0;
        java.lang.Iterable $r1;
        java.util.Collection r2, r6;
        java.util.Iterator r3;
        java.lang.Object r4;
        javax.lang.model.type.TypeVariable r5;
        javax.lang.model.type.ExecutableType $r7;
        java.util.List $r8, $r10;
        java.util.ArrayList $r9;
        int $i0;
        boolean $z3;
        com.squareup.javapoet.TypeVariableName $r11;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2;

        $r7 = r0.<androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2: javax.lang.model.type.ExecutableType $executableType>;

        $r8 = interfaceinvoke $r7.<javax.lang.model.type.ExecutableType: java.util.List getTypeVariables()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "executableType.typeVariables");

        $r1 = (java.lang.Iterable) $r8;

        $r9 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r1, 10);

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r9;

        r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (javax.lang.model.type.TypeVariable) r4;

        r6 = r2;

        $r11 = staticinvoke <com.squareup.javapoet.TypeVariableName: com.squareup.javapoet.TypeVariableName get(javax.lang.model.type.TypeVariable)>(r5);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        $r10 = (java.util.List) r2;

        return $r10;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2 r0;
        java.util.List $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacMethodType$typeVariableNames$2: java.util.List invoke()>();

        return $r1;
    }

