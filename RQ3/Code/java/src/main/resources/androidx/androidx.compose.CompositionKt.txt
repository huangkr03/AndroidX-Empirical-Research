androidx.compose.CompositionKt
    public static final androidx.compose.Composition compositionFor(java.lang.Object, androidx.compose.Recomposer, androidx.compose.CompositionReference, kotlin.jvm.functions.Function2)
    {
        java.lang.Object r0;
        androidx.compose.Recomposer r1;
        androidx.compose.CompositionReference r2;
        kotlin.jvm.functions.Function2 r3;
        androidx.compose.CompositionKt$compositionFor$1 $r4;
        androidx.compose.Compositions $r5;
        kotlin.jvm.functions.Function0 $r6;
        androidx.compose.CompositionImpl $r7;
        androidx.compose.Composition $r8;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: androidx.compose.Recomposer;

        r2 := @parameter2: androidx.compose.CompositionReference;

        r3 := @parameter3: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "container");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "recomposer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "composerFactory");

        $r5 = <androidx.compose.Compositions: androidx.compose.Compositions INSTANCE>;

        $r4 = new androidx.compose.CompositionKt$compositionFor$1;

        specialinvoke $r4.<androidx.compose.CompositionKt$compositionFor$1: void <init>(androidx.compose.Recomposer,androidx.compose.CompositionReference,kotlin.jvm.functions.Function2,java.lang.Object)>(r1, r2, r3, r0);

        $r6 = (kotlin.jvm.functions.Function0) $r4;

        $r7 = virtualinvoke $r5.<androidx.compose.Compositions: androidx.compose.CompositionImpl findOrCreate(java.lang.Object,kotlin.jvm.functions.Function0)>(r0, $r6);

        $r8 = (androidx.compose.Composition) $r7;

        return $r8;
    }

    public static androidx.compose.Composition compositionFor$default(java.lang.Object, androidx.compose.Recomposer, androidx.compose.CompositionReference, kotlin.jvm.functions.Function2, int, java.lang.Object)
    {
        java.lang.Object r0, r3;
        androidx.compose.Recomposer r1;
        kotlin.jvm.functions.Function2 r2;
        int i0, $i1;
        androidx.compose.Composition $r4;
        androidx.compose.CompositionReference r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: androidx.compose.Recomposer;

        r5 := @parameter2: androidx.compose.CompositionReference;

        r2 := @parameter3: kotlin.jvm.functions.Function2;

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        r5 = (androidx.compose.CompositionReference) null;

     label1:
        $r4 = staticinvoke <androidx.compose.CompositionKt: androidx.compose.Composition compositionFor(java.lang.Object,androidx.compose.Recomposer,androidx.compose.CompositionReference,kotlin.jvm.functions.Function2)>(r0, r1, r5, r2);

        return $r4;
    }

    public static final androidx.compose.Composition compositionFor(java.lang.Object, androidx.compose.CompositionReference, kotlin.jvm.functions.Function2)
    {
        java.lang.Object r0;
        androidx.compose.CompositionReference r1;
        kotlin.jvm.functions.Function2 r2;
        androidx.compose.Recomposer$Companion $r3;
        androidx.compose.Recomposer $r4;
        androidx.compose.Composition $r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: androidx.compose.CompositionReference;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "container");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "composerFactory");

        $r3 = <androidx.compose.Recomposer: androidx.compose.Recomposer$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.compose.Recomposer$Companion: androidx.compose.Recomposer current()>();

        $r5 = staticinvoke <androidx.compose.CompositionKt: androidx.compose.Composition compositionFor(java.lang.Object,androidx.compose.Recomposer,androidx.compose.CompositionReference,kotlin.jvm.functions.Function2)>(r0, $r4, r1, r2);

        return $r5;
    }

    public static androidx.compose.Composition compositionFor$default(java.lang.Object, androidx.compose.CompositionReference, kotlin.jvm.functions.Function2, int, java.lang.Object)
    {
        java.lang.Object r0, r2;
        kotlin.jvm.functions.Function2 r1;
        int i0, $i1;
        androidx.compose.Composition $r3;
        androidx.compose.CompositionReference r4;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: androidx.compose.CompositionReference;

        r1 := @parameter2: kotlin.jvm.functions.Function2;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r4 = (androidx.compose.CompositionReference) null;

     label1:
        $r3 = staticinvoke <androidx.compose.CompositionKt: androidx.compose.Composition compositionFor(java.lang.Object,androidx.compose.CompositionReference,kotlin.jvm.functions.Function2)>(r0, r4, r1);

        return $r3;
    }

    public static final void simulateHotReload(java.lang.Object)
    {
        java.lang.Object r0;
        androidx.compose.HotReloader$Companion $r1;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "context");

        $r1 = <androidx.compose.HotReloader: androidx.compose.HotReloader$Companion Companion>;

        virtualinvoke $r1.<androidx.compose.HotReloader$Companion: void simulateHotReload$compose_runtime_release(java.lang.Object)>(r0);

        return;
    }

    public static final void clearRoots()
    {
        androidx.compose.HotReloader$Companion $r0;

        $r0 = <androidx.compose.HotReloader: androidx.compose.HotReloader$Companion Companion>;

        virtualinvoke $r0.<androidx.compose.HotReloader$Companion: void clearRoots()>();

        return;
    }

