androidx.car.app.model.DateTimeWithZone
<androidx.car.app.model.DateTimeWithZone: long MAX_ZONE_OFFSET_SECONDS>
<androidx.car.app.model.DateTimeWithZone: long mTimeSinceEpochMillis>
<androidx.car.app.model.DateTimeWithZone: int mZoneOffsetSeconds>
<androidx.car.app.model.DateTimeWithZone: java.lang.String mZoneShortName>
    public long getTimeSinceEpochMillis()
    {
        androidx.car.app.model.DateTimeWithZone r0;
        long $l0;

        r0 := @this: androidx.car.app.model.DateTimeWithZone;

        $l0 = r0.<androidx.car.app.model.DateTimeWithZone: long mTimeSinceEpochMillis>;

        return $l0;
    }

    public int getZoneOffsetSeconds()
    {
        androidx.car.app.model.DateTimeWithZone r0;
        int $i0;

        r0 := @this: androidx.car.app.model.DateTimeWithZone;

        $i0 = r0.<androidx.car.app.model.DateTimeWithZone: int mZoneOffsetSeconds>;

        return $i0;
    }

    public java.lang.String getZoneShortName()
    {
        androidx.car.app.model.DateTimeWithZone r0;
        java.lang.String $r1;

        r0 := @this: androidx.car.app.model.DateTimeWithZone;

        $r1 = r0.<androidx.car.app.model.DateTimeWithZone: java.lang.String mZoneShortName>;

        return $r1;
    }

    public java.lang.String toString()
    {
        androidx.car.app.model.DateTimeWithZone r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r11, $r12;
        long $l0, $l1;
        java.util.Date $r5;
        int $i2;
        java.lang.String $r10, $r13;

        r0 := @this: androidx.car.app.model.DateTimeWithZone;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[time since epoch (ms): ");

        $l0 = r0.<androidx.car.app.model.DateTimeWithZone: long mTimeSinceEpochMillis>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("( ");

        $r5 = new java.util.Date;

        $l1 = r0.<androidx.car.app.model.DateTimeWithZone: long mTimeSinceEpochMillis>;

        specialinvoke $r5.<java.util.Date: void <init>(long)>($l1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")  zone offset (s): ");

        $i2 = r0.<androidx.car.app.model.DateTimeWithZone: int mZoneOffsetSeconds>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", zone: ");

        $r10 = r0.<androidx.car.app.model.DateTimeWithZone: java.lang.String mZoneShortName>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public int hashCode()
    {
        androidx.car.app.model.DateTimeWithZone r0;
        java.lang.Object[] $r1;
        long $l0;
        java.lang.Long $r2;
        int $i1, $i2;
        java.lang.Integer $r3;
        java.lang.String $r4;

        r0 := @this: androidx.car.app.model.DateTimeWithZone;

        $r1 = newarray (java.lang.Object)[3];

        $l0 = r0.<androidx.car.app.model.DateTimeWithZone: long mTimeSinceEpochMillis>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1[0] = $r2;

        $i1 = r0.<androidx.car.app.model.DateTimeWithZone: int mZoneOffsetSeconds>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $r4 = r0.<androidx.car.app.model.DateTimeWithZone: java.lang.String mZoneShortName>;

        $r1[2] = $r4;

        $i2 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.car.app.model.DateTimeWithZone r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        long $l0, $l1;
        byte $b2;
        int $i3, $i4;
        java.lang.String $r3, $r4;

        r0 := @this: androidx.car.app.model.DateTimeWithZone;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.car.app.model.DateTimeWithZone;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.car.app.model.DateTimeWithZone) r1;

        $l1 = r0.<androidx.car.app.model.DateTimeWithZone: long mTimeSinceEpochMillis>;

        $l0 = r2.<androidx.car.app.model.DateTimeWithZone: long mTimeSinceEpochMillis>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label3;

        $i4 = r0.<androidx.car.app.model.DateTimeWithZone: int mZoneOffsetSeconds>;

        $i3 = r2.<androidx.car.app.model.DateTimeWithZone: int mZoneOffsetSeconds>;

        if $i4 != $i3 goto label3;

        $r4 = r0.<androidx.car.app.model.DateTimeWithZone: java.lang.String mZoneShortName>;

        $r3 = r2.<androidx.car.app.model.DateTimeWithZone: java.lang.String mZoneShortName>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public static androidx.car.app.model.DateTimeWithZone create(long, int, java.lang.String)
    {
        long l0, $l4, $l5;
        int i1, $i3;
        java.lang.String r0, $r2;
        byte $b2, $b6;
        java.lang.Object $r1;
        boolean $z0;
        androidx.car.app.model.DateTimeWithZone $r3;
        java.lang.IllegalArgumentException $r4, $r5, $r6;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Time since epoch must be greater than or equal to zero");

        throw $r6;

     label1:
        $i3 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        $l5 = (long) $i3;

        $l4 = <androidx.car.app.model.DateTimeWithZone: long MAX_ZONE_OFFSET_SECONDS>;

        $b6 = $l5 cmp $l4;

        if $b6 <= 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Zone offset not in valid range: -18:00 to +18:00");

        throw $r5;

     label2:
        $r1 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r2 = (java.lang.String) $r1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The time zone short name can not be null or empty");

        throw $r4;

     label3:
        $r3 = new androidx.car.app.model.DateTimeWithZone;

        specialinvoke $r3.<androidx.car.app.model.DateTimeWithZone: void <init>(long,int,java.lang.String)>(l0, i1, r0);

        return $r3;
    }

    public static androidx.car.app.model.DateTimeWithZone create(long, java.util.TimeZone)
    {
        long l0, $l3, $l4;
        java.util.TimeZone r0, $r3;
        byte $b1;
        java.util.concurrent.TimeUnit $r1;
        java.lang.Object $r2;
        int $i2, $i5;
        java.lang.String $r4;
        androidx.car.app.model.DateTimeWithZone $r5;
        java.lang.IllegalArgumentException $r6;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.TimeZone;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("timeSinceEpochMillis must be greater than or equal to zero");

        throw $r6;

     label1:
        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r3 = (java.util.TimeZone) $r2;

        $i2 = virtualinvoke $r3.<java.util.TimeZone: int getOffset(long)>(l0);

        $l3 = (long) $i2;

        $l4 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toSeconds(long)>($l3);

        $i5 = (int) $l4;

        $r4 = virtualinvoke r0.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int)>(0, 0);

        $r5 = staticinvoke <androidx.car.app.model.DateTimeWithZone: androidx.car.app.model.DateTimeWithZone create(long,int,java.lang.String)>(l0, $i5, $r4);

        return $r5;
    }

    public static androidx.car.app.model.DateTimeWithZone create(java.time.ZonedDateTime)
    {
        java.time.ZonedDateTime r0;
        androidx.car.app.model.DateTimeWithZone $r1;

        r0 := @parameter0: java.time.ZonedDateTime;

        $r1 = staticinvoke <androidx.car.app.model.DateTimeWithZone$Api26Impl: androidx.car.app.model.DateTimeWithZone create(java.time.ZonedDateTime)>(r0);

        return $r1;
    }

    private void <init>()
    {
        androidx.car.app.model.DateTimeWithZone r0;

        r0 := @this: androidx.car.app.model.DateTimeWithZone;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.car.app.model.DateTimeWithZone: long mTimeSinceEpochMillis> = 0L;

        r0.<androidx.car.app.model.DateTimeWithZone: int mZoneOffsetSeconds> = 0;

        r0.<androidx.car.app.model.DateTimeWithZone: java.lang.String mZoneShortName> = null;

        return;
    }

    private void <init>(long, int, java.lang.String)
    {
        androidx.car.app.model.DateTimeWithZone r0;
        long l0;
        int i1;
        java.lang.String r1;

        r0 := @this: androidx.car.app.model.DateTimeWithZone;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.car.app.model.DateTimeWithZone: long mTimeSinceEpochMillis> = l0;

        r0.<androidx.car.app.model.DateTimeWithZone: int mZoneOffsetSeconds> = i1;

        r0.<androidx.car.app.model.DateTimeWithZone: java.lang.String mZoneShortName> = r1;

        return;
    }

    static void <clinit>()
    {
        java.util.concurrent.TimeUnit $r0;
        long $l0, $l1;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toSeconds(long)>(1L);

        $l1 = 18L * $l0;

        <androidx.car.app.model.DateTimeWithZone: long MAX_ZONE_OFFSET_SECONDS> = $l1;

        return;
    }

androidx.car.app.model.DateTimeWithZone$Api26Impl
    private void <init>()
    {
        androidx.car.app.model.DateTimeWithZone$Api26Impl r0;

        r0 := @this: androidx.car.app.model.DateTimeWithZone$Api26Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.car.app.model.DateTimeWithZone create(java.time.ZonedDateTime)
    {
        java.time.ZonedDateTime r0, $r5;
        java.time.LocalDateTime r1;
        java.time.ZoneId r2;
        java.time.ZoneOffset r3;
        java.lang.Object $r4;
        java.time.zone.ZoneRules $r6;
        java.util.concurrent.TimeUnit $r7;
        long $l0, $l1;
        int $i2;
        java.time.format.TextStyle $r8;
        java.util.Locale $r9;
        java.lang.String $r10;
        androidx.car.app.model.DateTimeWithZone $r11;

        r0 := @parameter0: java.time.ZonedDateTime;

        $r4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r5 = (java.time.ZonedDateTime) $r4;

        r1 = virtualinvoke $r5.<java.time.ZonedDateTime: java.time.LocalDateTime toLocalDateTime()>();

        r2 = virtualinvoke r0.<java.time.ZonedDateTime: java.time.ZoneId getZone()>();

        $r6 = virtualinvoke r2.<java.time.ZoneId: java.time.zone.ZoneRules getRules()>();

        r3 = virtualinvoke $r6.<java.time.zone.ZoneRules: java.time.ZoneOffset getOffset(java.time.LocalDateTime)>(r1);

        $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $l0 = virtualinvoke r1.<java.time.LocalDateTime: long toEpochSecond(java.time.ZoneOffset)>(r3);

        $l1 = virtualinvoke $r7.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $i2 = virtualinvoke r3.<java.time.ZoneOffset: int getTotalSeconds()>();

        $r8 = <java.time.format.TextStyle: java.time.format.TextStyle SHORT>;

        $r9 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r10 = virtualinvoke r2.<java.time.ZoneId: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>($r8, $r9);

        $r11 = staticinvoke <androidx.car.app.model.DateTimeWithZone: androidx.car.app.model.DateTimeWithZone create(long,int,java.lang.String)>($l1, $i2, $r10);

        return $r11;
    }

