androidx.credentials.provider.BeginCreatePasswordCredentialRequest
<androidx.credentials.provider.BeginCreatePasswordCredentialRequest: androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion Companion>
<androidx.credentials.provider.BeginCreatePasswordCredentialRequest: android.os.Parcelable$Creator CREATOR>
    public void <init>(android.service.credentials.CallingAppInfo)
    {
        androidx.credentials.provider.BeginCreatePasswordCredentialRequest r0;
        android.service.credentials.CallingAppInfo r1;
        androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion $r2;
        android.os.Bundle $r3;

        r0 := @this: androidx.credentials.provider.BeginCreatePasswordCredentialRequest;

        r1 := @parameter0: android.service.credentials.CallingAppInfo;

        $r2 = <androidx.credentials.provider.BeginCreatePasswordCredentialRequest: androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion: android.os.Bundle toCandidateDataBundle$credentials_release()>();

        specialinvoke r0.<android.service.credentials.BeginCreateCredentialRequest: void <init>(java.lang.String,android.os.Bundle,android.service.credentials.CallingAppInfo)>("android.credentials.TYPE_PASSWORD_CREDENTIAL", $r3, r1);

        return;
    }

    public int describeContents()
    {
        androidx.credentials.provider.BeginCreatePasswordCredentialRequest r0;

        r0 := @this: androidx.credentials.provider.BeginCreatePasswordCredentialRequest;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.credentials.provider.BeginCreatePasswordCredentialRequest r0;
        android.os.Parcel r1;
        int i0;

        r0 := @this: androidx.credentials.provider.BeginCreatePasswordCredentialRequest;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dest");

        specialinvoke r0.<android.service.credentials.BeginCreateCredentialRequest: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        return;
    }

    public static final android.os.Bundle toCandidateDataBundle$credentials_release()
    {
        androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion $r0;
        android.os.Bundle $r1;

        $r0 = <androidx.credentials.provider.BeginCreatePasswordCredentialRequest: androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion: android.os.Bundle toCandidateDataBundle$credentials_release()>();

        return $r1;
    }

    public static final androidx.credentials.provider.BeginCreatePasswordCredentialRequest createFrom$credentials_release(android.os.Bundle, android.service.credentials.CallingAppInfo)
    {
        android.os.Bundle r0;
        android.service.credentials.CallingAppInfo r1;
        androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion $r2;
        androidx.credentials.provider.BeginCreatePasswordCredentialRequest $r3;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: android.service.credentials.CallingAppInfo;

        $r2 = <androidx.credentials.provider.BeginCreatePasswordCredentialRequest: androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion Companion>;

        $r3 = virtualinvoke $r2.<androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion: androidx.credentials.provider.BeginCreatePasswordCredentialRequest createFrom$credentials_release(android.os.Bundle,android.service.credentials.CallingAppInfo)>(r0, r1);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion $r0;
        androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion$CREATOR$1 $r1;
        android.os.Parcelable$Creator $r2;

        $r0 = new androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion;

        specialinvoke $r0.<androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.provider.BeginCreatePasswordCredentialRequest: androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion Companion> = $r0;

        $r1 = new androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion$CREATOR$1;

        specialinvoke $r1.<androidx.credentials.provider.BeginCreatePasswordCredentialRequest$Companion$CREATOR$1: void <init>()>();

        $r2 = (android.os.Parcelable$Creator) $r1;

        <androidx.credentials.provider.BeginCreatePasswordCredentialRequest: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }

