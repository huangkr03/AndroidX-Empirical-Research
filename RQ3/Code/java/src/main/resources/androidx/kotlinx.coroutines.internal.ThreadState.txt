kotlinx.coroutines.internal.ThreadState
<kotlinx.coroutines.internal.ThreadState: kotlin.coroutines.CoroutineContext context>
<kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements>
<kotlinx.coroutines.internal.ThreadState: int i>
<kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values>
    public void <init>(kotlin.coroutines.CoroutineContext, int)
    {
        kotlinx.coroutines.internal.ThreadState $r0;
        int $i0;
        kotlin.coroutines.CoroutineContext $r1;
        java.lang.Object[] $r2;
        kotlinx.coroutines.ThreadContextElement[] $r3;

        $r0 := @this: kotlinx.coroutines.internal.ThreadState;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "context");

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlinx.coroutines.internal.ThreadState: kotlin.coroutines.CoroutineContext context> = $r1;

        $r2 = newarray (java.lang.Object)[$i0];

        $r0.<kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values> = $r2;

        $r3 = newarray (kotlinx.coroutines.ThreadContextElement)[$i0];

        $r0.<kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements> = $r3;

        return;
    }

    public final void append(kotlinx.coroutines.ThreadContextElement, java.lang.Object)
    {
        kotlinx.coroutines.internal.ThreadState $r0;
        kotlinx.coroutines.ThreadContextElement $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.Object[] $r3;
        kotlinx.coroutines.ThreadContextElement[] $r4;

        $r0 := @this: kotlinx.coroutines.internal.ThreadState;

        $r1 := @parameter0: kotlinx.coroutines.ThreadContextElement;

        $r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "element");

        $r3 = $r0.<kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values>;

        $i0 = $r0.<kotlinx.coroutines.internal.ThreadState: int i>;

        $r3[$i0] = $r2;

        $r4 = $r0.<kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements>;

        $i1 = $i0 + 1;

        $r0.<kotlinx.coroutines.internal.ThreadState: int i> = $i1;

        $r4[$i0] = $r1;

        return;
    }

    public final void restore(kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.internal.ThreadState $r0;
        kotlin.coroutines.CoroutineContext $r1;
        int $i0, $i1;
        java.lang.Object[] $r2;
        kotlinx.coroutines.ThreadContextElement[] $r3;
        kotlinx.coroutines.ThreadContextElement $r4;
        java.lang.Object $r5;

        $r0 := @this: kotlinx.coroutines.internal.ThreadState;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "context");

        $r3 = $r0.<kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements>;

        $i0 = lengthof $r3;

        $i1 = $i0 + -1;

        if $i1 < 0 goto label2;

     label1:
        $i0 = $i1 + -1;

        $r3 = $r0.<kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements>;

        $r4 = $r3[$i1];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r4);

        $r2 = $r0.<kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values>;

        $r5 = $r2[$i1];

        interfaceinvoke $r4.<kotlinx.coroutines.ThreadContextElement: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)>($r1, $r5);

        if $i0 < 0 goto label2;

        $i1 = $i0;

        goto label1;

     label2:
        return;
    }

