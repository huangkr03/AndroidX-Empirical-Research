androidx.media3.exoplayer.trackselection.MappingTrackSelector
<androidx.media3.exoplayer.trackselection.MappingTrackSelector: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo currentMappedTrackInfo>
    public void <init>()
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector r0;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector;

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.TrackSelector: void <init>()>();

        return;
    }

    public final androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo getCurrentMappedTrackInfo()
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector r0;
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo currentMappedTrackInfo>;

        return $r1;
    }

    public final void onSelectionActivated(java.lang.Object)
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector r0;
        java.lang.Object r1;
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo) r1;

        r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo currentMappedTrackInfo> = $r2;

        return;
    }

    public final androidx.media3.exoplayer.trackselection.TrackSelectorResult selectTracks(androidx.media3.exoplayer.RendererCapabilities[], androidx.media3.exoplayer.source.TrackGroupArray, androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.common.Timeline) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector r0;
        androidx.media3.exoplayer.RendererCapabilities[] r1;
        androidx.media3.exoplayer.source.TrackGroupArray r2, $r10, $r22, r45;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r3;
        androidx.media3.common.Timeline r4;
        int[] r5, r38, $r40, r41, r44;
        androidx.media3.common.TrackGroup[][] r6;
        int[][][] r7;
        android.util.Pair r8;
        androidx.media3.common.Tracks r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22, i23, i24, i25, i26, i27, i28, i29;
        androidx.media3.common.TrackGroup[] $r11, $r13, $r23, $r25, $r33, $r36;
        java.lang.Object[] $r12, $r24, $r27;
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo $r14, r46;
        java.lang.Object $r15, $r18, $r19;
        androidx.media3.exoplayer.trackselection.TrackSelection[] $r16;
        androidx.media3.exoplayer.trackselection.TrackSelectorResult $r17;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection[] $r20;
        androidx.media3.exoplayer.RendererConfiguration[] $r21;
        int[][] $r26, $r28, $r34, $r37;
        androidx.media3.exoplayer.RendererCapabilities $r29, $r31, $r32;
        java.lang.String $r30;
        androidx.media3.common.TrackGroup r39;
        boolean $z0, z1;
        androidx.media3.exoplayer.source.TrackGroupArray[] r42;
        java.lang.String[] r43;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector;

        r1 := @parameter0: androidx.media3.exoplayer.RendererCapabilities[];

        r2 := @parameter1: androidx.media3.exoplayer.source.TrackGroupArray;

        r3 := @parameter2: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r4 := @parameter3: androidx.media3.common.Timeline;

        $i0 = lengthof r1;

        $i1 = $i0 + 1;

        r5 = newarray (int)[$i1];

        $i2 = lengthof r1;

        $i3 = $i2 + 1;

        r6 = newarray (androidx.media3.common.TrackGroup[])[$i3];

        $i4 = lengthof r1;

        $i5 = $i4 + 1;

        r7 = newarray (int[][])[$i5];

        i23 = 0;

     label01:
        $i6 = lengthof r6;

        if i23 >= $i6 goto label02;

        $i21 = r2.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        $r36 = newarray (androidx.media3.common.TrackGroup)[$i21];

        r6[i23] = $r36;

        $i22 = r2.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        $r37 = newarray (int[])[$i22];

        r7[i23] = $r37;

        i23 = i23 + 1;

        goto label01;

     label02:
        r38 = staticinvoke <androidx.media3.exoplayer.trackselection.MappingTrackSelector: int[] getMixedMimeTypeAdaptationSupports(androidx.media3.exoplayer.RendererCapabilities[])>(r1);

        i24 = 0;

     label03:
        $i7 = r2.<androidx.media3.exoplayer.source.TrackGroupArray: int length>;

        if i24 >= $i7 goto label08;

        r39 = virtualinvoke r2.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i24);

        $i15 = r39.<androidx.media3.common.TrackGroup: int type>;

        if $i15 != 5 goto label04;

        $z0 = 1;

        goto label05;

     label04:
        $z0 = 0;

     label05:
        z1 = $z0;

        i25 = staticinvoke <androidx.media3.exoplayer.trackselection.MappingTrackSelector: int findRenderer(androidx.media3.exoplayer.RendererCapabilities[],androidx.media3.common.TrackGroup,int[],boolean)>(r1, r39, r5, z1);

        $i16 = lengthof r1;

        if i25 != $i16 goto label06;

        $i19 = r39.<androidx.media3.common.TrackGroup: int length>;

        $r40 = newarray (int)[$i19];

        goto label07;

     label06:
        $r32 = r1[i25];

        $r40 = staticinvoke <androidx.media3.exoplayer.trackselection.MappingTrackSelector: int[] getFormatSupport(androidx.media3.exoplayer.RendererCapabilities,androidx.media3.common.TrackGroup)>($r32, r39);

     label07:
        r41 = $r40;

        i26 = r5[i25];

        $r33 = r6[i25];

        $r33[i26] = r39;

        $r34 = r7[i25];

        $r34[i26] = r41;

        $i17 = r5[i25];

        $i18 = $i17 + 1;

        r5[i25] = $i18;

        i24 = i24 + 1;

        goto label03;

     label08:
        $i8 = lengthof r1;

        r42 = newarray (androidx.media3.exoplayer.source.TrackGroupArray)[$i8];

        $i9 = lengthof r1;

        r43 = newarray (java.lang.String)[$i9];

        $i10 = lengthof r1;

        r44 = newarray (int)[$i10];

        i27 = 0;

     label09:
        $i11 = lengthof r1;

        if i27 >= $i11 goto label10;

        i28 = r5[i27];

        $r22 = new androidx.media3.exoplayer.source.TrackGroupArray;

        $r23 = r6[i27];

        $r24 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object[] nullSafeArrayCopy(java.lang.Object[],int)>($r23, i28);

        $r25 = (androidx.media3.common.TrackGroup[]) $r24;

        specialinvoke $r22.<androidx.media3.exoplayer.source.TrackGroupArray: void <init>(androidx.media3.common.TrackGroup[])>($r25);

        r42[i27] = $r22;

        $r26 = r7[i27];

        $r27 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object[] nullSafeArrayCopy(java.lang.Object[],int)>($r26, i28);

        $r28 = (int[][]) $r27;

        r7[i27] = $r28;

        $r29 = r1[i27];

        $r30 = interfaceinvoke $r29.<androidx.media3.exoplayer.RendererCapabilities: java.lang.String getName()>();

        r43[i27] = $r30;

        $r31 = r1[i27];

        $i14 = interfaceinvoke $r31.<androidx.media3.exoplayer.RendererCapabilities: int getTrackType()>();

        r44[i27] = $i14;

        i27 = i27 + 1;

        goto label09;

     label10:
        $i12 = lengthof r1;

        i29 = r5[$i12];

        $r10 = new androidx.media3.exoplayer.source.TrackGroupArray;

        $i13 = lengthof r1;

        $r11 = r6[$i13];

        $r12 = staticinvoke <androidx.media3.common.util.Util: java.lang.Object[] nullSafeArrayCopy(java.lang.Object[],int)>($r11, i29);

        $r13 = (androidx.media3.common.TrackGroup[]) $r12;

        specialinvoke $r10.<androidx.media3.exoplayer.source.TrackGroupArray: void <init>(androidx.media3.common.TrackGroup[])>($r13);

        r45 = $r10;

        $r14 = new androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        specialinvoke $r14.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: void <init>(java.lang.String[],int[],androidx.media3.exoplayer.source.TrackGroupArray[],int[],int[][][],androidx.media3.exoplayer.source.TrackGroupArray)>(r43, r44, r42, r38, r7, r45);

        r46 = $r14;

        r8 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector: android.util.Pair selectTracks(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],int[],androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline)>(r46, r7, r38, r3, r4);

        $r15 = r8.<android.util.Pair: java.lang.Object second>;

        $r16 = (androidx.media3.exoplayer.trackselection.TrackSelection[]) $r15;

        r9 = staticinvoke <androidx.media3.exoplayer.trackselection.TrackSelectionUtil: androidx.media3.common.Tracks buildTracks(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,androidx.media3.exoplayer.trackselection.TrackSelection[])>(r46, $r16);

        $r17 = new androidx.media3.exoplayer.trackselection.TrackSelectorResult;

        $r18 = r8.<android.util.Pair: java.lang.Object first>;

        $r21 = (androidx.media3.exoplayer.RendererConfiguration[]) $r18;

        $r19 = r8.<android.util.Pair: java.lang.Object second>;

        $r20 = (androidx.media3.exoplayer.trackselection.ExoTrackSelection[]) $r19;

        specialinvoke $r17.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: void <init>(androidx.media3.exoplayer.RendererConfiguration[],androidx.media3.exoplayer.trackselection.ExoTrackSelection[],androidx.media3.common.Tracks,java.lang.Object)>($r21, $r20, r9, r46);

        return $r17;
    }

<androidx.media3.exoplayer.trackselection.MappingTrackSelector: android.util.Pair selectTracks(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],int[],androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline)>
    private static int findRenderer(androidx.media3.exoplayer.RendererCapabilities[], androidx.media3.common.TrackGroup, int[], boolean) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.RendererCapabilities[] r0;
        androidx.media3.common.TrackGroup r1;
        int[] r2;
        boolean z0, z1, $z2, z3;
        androidx.media3.exoplayer.RendererCapabilities r3;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;
        androidx.media3.common.Format $r4;

        r0 := @parameter0: androidx.media3.exoplayer.RendererCapabilities[];

        r1 := @parameter1: androidx.media3.common.TrackGroup;

        r2 := @parameter2: int[];

        z0 := @parameter3: boolean;

        i5 = lengthof r0;

        i6 = 0;

        z1 = 1;

        i7 = 0;

     label1:
        $i1 = lengthof r0;

        if i7 >= $i1 goto label8;

        r3 = r0[i7];

        i8 = 0;

        i9 = 0;

     label2:
        $i2 = r1.<androidx.media3.common.TrackGroup: int length>;

        if i9 >= $i2 goto label3;

        $r4 = virtualinvoke r1.<androidx.media3.common.TrackGroup: androidx.media3.common.Format getFormat(int)>(i9);

        $i4 = interfaceinvoke r3.<androidx.media3.exoplayer.RendererCapabilities: int supportsFormat(androidx.media3.common.Format)>($r4);

        i0 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int getFormatSupport(int)>($i4);

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(i8, i0);

        i9 = i9 + 1;

        goto label2;

     label3:
        $i3 = r2[i7];

        if $i3 != 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        z3 = $z2;

        if i8 > i6 goto label6;

        if i8 != i6 goto label7;

        if z0 == 0 goto label7;

        if z1 != 0 goto label7;

        if z3 == 0 goto label7;

     label6:
        i5 = i7;

        i6 = i8;

        z1 = z3;

     label7:
        i7 = i7 + 1;

        goto label1;

     label8:
        return i5;
    }

    private static int[] getFormatSupport(androidx.media3.exoplayer.RendererCapabilities, androidx.media3.common.TrackGroup) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.RendererCapabilities r0;
        androidx.media3.common.TrackGroup r1;
        int[] r2;
        int $i0, $i1, $i2, i3;
        androidx.media3.common.Format $r3;

        r0 := @parameter0: androidx.media3.exoplayer.RendererCapabilities;

        r1 := @parameter1: androidx.media3.common.TrackGroup;

        $i0 = r1.<androidx.media3.common.TrackGroup: int length>;

        r2 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $i1 = r1.<androidx.media3.common.TrackGroup: int length>;

        if i3 >= $i1 goto label2;

        $r3 = virtualinvoke r1.<androidx.media3.common.TrackGroup: androidx.media3.common.Format getFormat(int)>(i3);

        $i2 = interfaceinvoke r0.<androidx.media3.exoplayer.RendererCapabilities: int supportsFormat(androidx.media3.common.Format)>($r3);

        r2[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r2;
    }

    private static int[] getMixedMimeTypeAdaptationSupports(androidx.media3.exoplayer.RendererCapabilities[]) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.RendererCapabilities[] r0;
        int[] r1;
        int $i0, $i1, $i2, i3;
        androidx.media3.exoplayer.RendererCapabilities $r2;

        r0 := @parameter0: androidx.media3.exoplayer.RendererCapabilities[];

        $i0 = lengthof r0;

        r1 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r1;

        if i3 >= $i1 goto label2;

        $r2 = r0[i3];

        $i2 = interfaceinvoke $r2.<androidx.media3.exoplayer.RendererCapabilities: int supportsMixedMimeTypeAdaptation()>();

        r1[i3] = $i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo$RendererSupport
androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo
<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int RENDERER_SUPPORT_NO_TRACKS>
<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int RENDERER_SUPPORT_UNSUPPORTED_TRACKS>
<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int RENDERER_SUPPORT_EXCEEDS_CAPABILITIES_TRACKS>
<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int RENDERER_SUPPORT_PLAYABLE_TRACKS>
<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int rendererCount>
<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: java.lang.String[] rendererNames>
<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int[] rendererTrackTypes>
<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray[] rendererTrackGroups>
<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int[] rendererMixedMimeTypeAdaptiveSupports>
<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int[][][] rendererFormatSupports>
<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray unmappedTrackGroups>
    void <init>(java.lang.String[], int[], androidx.media3.exoplayer.source.TrackGroupArray[], int[], int[][][], androidx.media3.exoplayer.source.TrackGroupArray)
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        java.lang.String[] r1;
        int[] r2, r4;
        androidx.media3.exoplayer.source.TrackGroupArray[] r3;
        int[][][] r5;
        androidx.media3.exoplayer.source.TrackGroupArray r6;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: int[];

        r3 := @parameter2: androidx.media3.exoplayer.source.TrackGroupArray[];

        r4 := @parameter3: int[];

        r5 := @parameter4: int[][][];

        r6 := @parameter5: androidx.media3.exoplayer.source.TrackGroupArray;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: java.lang.String[] rendererNames> = r1;

        r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int[] rendererTrackTypes> = r2;

        r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray[] rendererTrackGroups> = r3;

        r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int[][][] rendererFormatSupports> = r5;

        r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int[] rendererMixedMimeTypeAdaptiveSupports> = r4;

        r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray unmappedTrackGroups> = r6;

        $i0 = lengthof r2;

        r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int rendererCount> = $i0;

        return;
    }

    public int getRendererCount()
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        $i0 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int rendererCount>;

        return $i0;
    }

    public java.lang.String getRendererName(int)
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: java.lang.String[] rendererNames>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getRendererType(int)
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int[] rendererTrackTypes>;

        $i1 = $r1[i0];

        return $i1;
    }

    public androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups(int)
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        int i0;
        androidx.media3.exoplayer.source.TrackGroupArray[] $r1;
        androidx.media3.exoplayer.source.TrackGroupArray $r2;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray[] rendererTrackGroups>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getRendererSupport(int)
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        int i0, i1, i2, i3, $i4, i5, i6, i7;
        int[][] r1, r2;
        int[] r3, r4;
        int[][][] $r5;
        java.lang.IllegalStateException $r6;
        byte b8;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        i0 := @parameter0: int;

        i5 = 0;

        $r5 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int[][][] rendererFormatSupports>;

        r1 = $r5[i0];

        r2 = r1;

        i1 = lengthof r2;

        i6 = 0;

     label1:
        if i6 >= i1 goto label9;

        r3 = r2[i6];

        r4 = r3;

        i2 = lengthof r4;

        i7 = 0;

     label2:
        if i7 >= i2 goto label8;

        i3 = r4[i7];

        $i4 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int getFormatSupport(int)>(i3);

        tableswitch($i4)
        {
            case 0: goto label5;
            case 1: goto label5;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label3;
            default: goto label6;
        };

     label3:
        return 3;

     label4:
        b8 = 2;

        goto label7;

     label5:
        b8 = 1;

        goto label7;

     label6:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label7:
        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i5, b8);

        i7 = i7 + 1;

        goto label2;

     label8:
        i6 = i6 + 1;

        goto label1;

     label9:
        return i5;
    }

    public int getTypeSupport(int)
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        int i0, $i1, $i2, $i3, i4, i5;
        int[] $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        i0 := @parameter0: int;

        i4 = 0;

        i5 = 0;

     label1:
        $i1 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int rendererCount>;

        if i5 >= $i1 goto label3;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int[] rendererTrackTypes>;

        $i2 = $r1[i5];

        if $i2 != i0 goto label2;

        $i3 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererSupport(int)>(i5);

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i4, $i3);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return i4;
    }

    public int getCapabilities(int, int, int)
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        int i0, i1, i2, $i3;
        int[][][] $r1;
        int[][] $r2;
        int[] $r3;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int[][][] rendererFormatSupports>;

        $r2 = $r1[i0];

        $r3 = $r2[i1];

        $i3 = $r3[i2];

        return $i3;
    }

    public int getTrackSupport(int, int, int)
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getCapabilities(int,int,int)>(i0, i1, i2);

        $i4 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int getFormatSupport(int)>($i3);

        return $i4;
    }

    public int getAdaptiveSupport(int, int, boolean)
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        int i0, i1, i2, i3, $i4, $i5, i6, i7;
        boolean z0;
        androidx.media3.exoplayer.source.TrackGroupArray[] $r1;
        androidx.media3.exoplayer.source.TrackGroupArray $r2;
        androidx.media3.common.TrackGroup $r3;
        int[] r4, r5;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray[] rendererTrackGroups>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke $r2.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i1);

        i2 = $r3.<androidx.media3.common.TrackGroup: int length>;

        r4 = newarray (int)[i2];

        i6 = 0;

        i7 = 0;

     label1:
        if i7 >= i2 goto label4;

        i3 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getTrackSupport(int,int,int)>(i0, i1, i7);

        if i3 == 4 goto label2;

        if z0 == 0 goto label3;

        if i3 != 3 goto label3;

     label2:
        $i5 = i6;

        i6 = i6 + 1;

        r4[$i5] = i7;

     label3:
        i7 = i7 + 1;

        goto label1;

     label4:
        r5 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r4, i6);

        $i4 = virtualinvoke r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int getAdaptiveSupport(int,int,int[])>(i0, i1, r5);

        return $i4;
    }

    public int getAdaptiveSupport(int, int, int[])
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7, i8, $i9, $i10, $i11;
        int[] r1, $r3, $r11;
        java.lang.String r2, r8;
        androidx.media3.exoplayer.source.TrackGroupArray[] $r4;
        androidx.media3.exoplayer.source.TrackGroupArray $r5;
        androidx.media3.common.TrackGroup $r6;
        androidx.media3.common.Format $r7;
        boolean $z0, $z1, z2, $z3;
        int[][][] $r9;
        int[][] $r10;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        i6 = 0;

        i7 = 16;

        z2 = 0;

        r8 = null;

        i8 = 0;

     label1:
        $i3 = lengthof r1;

        if i8 >= $i3 goto label6;

        i2 = r1[i8];

        $r4 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray[] rendererTrackGroups>;

        $r5 = $r4[i0];

        $r6 = virtualinvoke $r5.<androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.common.TrackGroup get(int)>(i1);

        $r7 = virtualinvoke $r6.<androidx.media3.common.TrackGroup: androidx.media3.common.Format getFormat(int)>(i2);

        r2 = $r7.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        $i5 = i6;

        i6 = i6 + 1;

        if $i5 != 0 goto label2;

        r8 = r2;

        goto label5;

     label2:
        $z1 = z2;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, r2);

        if $z0 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z2 = $z1 | $z3;

     label5:
        $r9 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int[][][] rendererFormatSupports>;

        $r10 = $r9[i0];

        $r11 = $r10[i1];

        $i9 = $r11[i8];

        $i10 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int getAdaptiveSupport(int)>($i9);

        i7 = staticinvoke <java.lang.Math: int min(int,int)>(i7, $i10);

        i8 = i8 + 1;

        goto label1;

     label6:
        if z2 == 0 goto label7;

        $r3 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: int[] rendererMixedMimeTypeAdaptiveSupports>;

        $i4 = $r3[i0];

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>(i7, $i4);

        goto label8;

     label7:
        $i11 = i7;

     label8:
        return $i11;
    }

    public androidx.media3.exoplayer.source.TrackGroupArray getUnmappedTrackGroups()
    {
        androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo r0;
        androidx.media3.exoplayer.source.TrackGroupArray $r1;

        r0 := @this: androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo;

        $r1 = r0.<androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo: androidx.media3.exoplayer.source.TrackGroupArray unmappedTrackGroups>;

        return $r1;
    }

