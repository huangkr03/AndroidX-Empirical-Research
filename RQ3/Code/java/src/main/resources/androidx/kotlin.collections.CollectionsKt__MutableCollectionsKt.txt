kotlin.collections.CollectionsKt__MutableCollectionsKt
    public void <init>()
    {
        kotlin.collections.CollectionsKt__MutableCollectionsKt $r0;

        $r0 := @this: kotlin.collections.CollectionsKt__MutableCollectionsKt;

        specialinvoke $r0.<kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void <init>()>();

        return;
    }

    public static final boolean addAll(java.util.Collection, java.lang.Iterable)
    {
        java.util.Collection $r0, $r2;
        java.lang.Iterable $r1;
        boolean $z0, $z1;
        java.util.Iterator $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        $z0 = $r1 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r2 = (java.util.Collection) $r1;

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean addAll(java.util.Collection)>($r2);

        return $z0;

     label1:
        $r3 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = 0;

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $z0 = 1;

        goto label2;

     label3:
        return $z0;
    }

    public static final boolean addAll(java.util.Collection, kotlin.sequences.Sequence)
    {
        java.util.Collection $r0;
        kotlin.sequences.Sequence $r1;
        java.util.Iterator $r2;
        boolean $z0, $z1;
        java.lang.Object $r3;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: kotlin.sequences.Sequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        $r2 = interfaceinvoke $r1.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $z0 = 1;

        goto label1;

     label2:
        return $z0;
    }

    public static final boolean addAll(java.util.Collection, java.lang.Object[])
    {
        java.util.Collection $r0, r3;
        java.lang.Object[] $r1;
        java.util.List $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        $r2 = staticinvoke <kotlin.collections.ArraysKt: java.util.List asList(java.lang.Object[])>($r1);

        r3 = (java.util.Collection) $r2;

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean addAll(java.util.Collection)>(r3);

        return $z0;
    }

    private static final boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.lang.Iterable, kotlin.jvm.functions.Function1, boolean)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean $z0, $z1, $z2;
        java.lang.Iterable $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        $z0 := @parameter2: boolean;

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z1 = 0;

     label1:
        $z2 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r3);

        $r4 = (java.lang.Boolean) $r3;

        $z2 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 != $z0 goto label1;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        $z1 = 1;

        goto label1;

     label2:
        return $z1;
    }

    private static final boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.util.List, kotlin.jvm.functions.Function1, boolean)
    {
        boolean $z0, $z1;
        java.util.List $r0;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Iterable $r2;
        kotlin.ranges.IntRange $r3;
        int $i0, $i1, $i2;
        kotlin.collections.IntIterator $r4;
        java.lang.Object $r5, $r6;
        java.lang.Boolean $r7;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: kotlin.jvm.functions.Function1;

        $z0 := @parameter2: boolean;

        $z1 = $r0 instanceof java.util.RandomAccess;

        if $z1 != 0 goto label1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r0, "null cannot be cast to non-null type kotlin.collections.MutableIterable<T of kotlin.collections.CollectionsKt__MutableCollectionsKt.filterInPlace>");

        $r2 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.lang.Iterable asMutableIterable(java.lang.Object)>($r0);

        $z0 = staticinvoke <kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.lang.Iterable,kotlin.jvm.functions.Function1,boolean)>($r2, $r1, $z0);

        return $z0;

     label1:
        $r3 = new kotlin.ranges.IntRange;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r0);

        specialinvoke $r3.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i0);

        $r4 = virtualinvoke $r3.<kotlin.ranges.IntRange: kotlin.collections.IntIterator iterator()>();

        $i0 = 0;

     label2:
        $z1 = virtualinvoke $r4.<kotlin.collections.IntIterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $i1 = virtualinvoke $r4.<kotlin.collections.IntIterator: int nextInt()>();

        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i1);

        $r6 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

        $r7 = (java.lang.Boolean) $r6;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == $z0 goto label2;

        if $i0 == $i1 goto label3;

        interfaceinvoke $r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r5);

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 >= $i1 goto label7;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r0);

        $i2 = $i1;

        if $i0 > $i1 goto label6;

     label5:
        interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>($i2);

        if $i2 == $i0 goto label6;

        $i2 = $i2 + -1;

        goto label5;

     label6:
        return 1;

     label7:
        return 0;
    }

    private static final void minusAssign(java.util.Collection, java.lang.Iterable)
    {
        java.util.Collection $r0;
        java.lang.Iterable $r1;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)>($r0, $r1);

        return;
    }

    private static final void minusAssign(java.util.Collection, java.lang.Object)
    {
        java.util.Collection $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        interfaceinvoke $r0.<java.util.Collection: boolean remove(java.lang.Object)>($r1);

        return;
    }

    private static final void minusAssign(java.util.Collection, kotlin.sequences.Sequence)
    {
        java.util.Collection $r0;
        kotlin.sequences.Sequence $r1;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: kotlin.sequences.Sequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,kotlin.sequences.Sequence)>($r0, $r1);

        return;
    }

    private static final void minusAssign(java.util.Collection, java.lang.Object[])
    {
        java.util.Collection $r0;
        java.lang.Object[] $r1;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        staticinvoke <kotlin.collections.CollectionsKt: boolean removeAll(java.util.Collection,java.lang.Object[])>($r0, $r1);

        return;
    }

    private static final void plusAssign(java.util.Collection, java.lang.Iterable)
    {
        java.util.Collection $r0;
        java.lang.Iterable $r1;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)>($r0, $r1);

        return;
    }

    private static final void plusAssign(java.util.Collection, java.lang.Object)
    {
        java.util.Collection $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r1);

        return;
    }

    private static final void plusAssign(java.util.Collection, kotlin.sequences.Sequence)
    {
        java.util.Collection $r0;
        kotlin.sequences.Sequence $r1;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: kotlin.sequences.Sequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)>($r0, $r1);

        return;
    }

    private static final void plusAssign(java.util.Collection, java.lang.Object[])
    {
        java.util.Collection $r0;
        java.lang.Object[] $r1;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        staticinvoke <kotlin.collections.CollectionsKt: boolean addAll(java.util.Collection,java.lang.Object[])>($r0, $r1);

        return;
    }

    private static final java.lang.Object remove(java.util.List, int)
    {
        int $i0;
        java.lang.Object $r0;
        java.util.List $r1;

        $r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r0 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i0);

        return $r0;
    }

    private static final boolean remove(java.util.Collection, java.lang.Object)
    {
        java.lang.Object $r0;
        java.util.Collection $r1;
        boolean $z0;

        $r1 := @parameter0: java.util.Collection;

        $r0 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r1 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object)>($r1);

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean remove(java.lang.Object)>($r0);

        return $z0;
    }

    public static final boolean removeAll(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean $z0;
        java.lang.Iterable $r1;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $z0 = staticinvoke <kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.lang.Iterable,kotlin.jvm.functions.Function1,boolean)>($r1, $r0, 1);

        return $z0;
    }

    public static final boolean removeAll(java.util.Collection, java.lang.Iterable)
    {
        java.util.Collection $r0, $r2;
        java.lang.Iterable $r1, r3;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        r3 = (java.lang.Iterable) $r0;

        $r2 = staticinvoke <kotlin.collections.BrittleContainsOptimizationKt: java.util.Collection convertToSetForSetOperationWith(java.lang.Iterable,java.lang.Iterable)>($r1, r3);

        $r0 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object)>($r0);

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean removeAll(java.util.Collection)>($r2);

        return $z0;
    }

    private static final boolean removeAll(java.util.Collection, java.util.Collection)
    {
        java.util.Collection $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.util.Collection;

        $r0 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "elements");

        $r1 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object)>($r1);

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean removeAll(java.util.Collection)>($r0);

        return $z0;
    }

    public static final boolean removeAll(java.util.Collection, kotlin.sequences.Sequence)
    {
        java.util.Collection $r0, $r2;
        kotlin.sequences.Sequence $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: kotlin.sequences.Sequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        $r2 = staticinvoke <kotlin.collections.BrittleContainsOptimizationKt: java.util.Collection convertToSetForSetOperation(kotlin.sequences.Sequence)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label1;

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean removeAll(java.util.Collection)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static final boolean removeAll(java.util.Collection, java.lang.Object[])
    {
        java.util.Collection $r0, $r2;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $z0 = $z0 ^ 1;

        if $z0 == 0 goto label3;

        $r2 = staticinvoke <kotlin.collections.BrittleContainsOptimizationKt: java.util.Collection convertToSetForSetOperation(java.lang.Object[])>($r1);

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean removeAll(java.util.Collection)>($r2);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public static final boolean removeAll(java.util.List, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean $z0;
        java.util.List $r1;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $z0 = staticinvoke <kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.util.List,kotlin.jvm.functions.Function1,boolean)>($r1, $r0, 1);

        return $z0;
    }

    public static final java.lang.Object removeFirst(java.util.List)
    {
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>(0);

        return $r1;

     label1:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("List is empty.");

        throw $r2;
    }

    public static final java.lang.Object removeFirstOrNull(java.util.List)
    {
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>(0);

        return $r1;
    }

    public static final java.lang.Object removeLast(java.util.List)
    {
        java.util.List $r0;
        boolean $z0;
        int $i0;
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r0);

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>($i0);

        return $r1;

     label1:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>(java.lang.String)>("List is empty.");

        throw $r2;
    }

    public static final java.lang.Object removeLastOrNull(java.util.List)
    {
        java.util.List $r0;
        boolean $z0;
        int $i0;
        java.lang.Object $r1;

        $r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int getLastIndex(java.util.List)>($r0);

        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>($i0);

        return $r1;
    }

    public static final boolean retainAll(java.lang.Iterable, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean $z0;
        java.lang.Iterable $r1;

        $r1 := @parameter0: java.lang.Iterable;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $z0 = staticinvoke <kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.lang.Iterable,kotlin.jvm.functions.Function1,boolean)>($r1, $r0, 0);

        return $z0;
    }

    public static final boolean retainAll(java.util.Collection, java.lang.Iterable)
    {
        java.util.Collection $r0, $r2;
        java.lang.Iterable $r1, r3;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Iterable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        r3 = (java.lang.Iterable) $r0;

        $r2 = staticinvoke <kotlin.collections.BrittleContainsOptimizationKt: java.util.Collection convertToSetForSetOperationWith(java.lang.Iterable,java.lang.Iterable)>($r1, r3);

        $r0 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object)>($r0);

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean retainAll(java.util.Collection)>($r2);

        return $z0;
    }

    private static final boolean retainAll(java.util.Collection, java.util.Collection)
    {
        java.util.Collection $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: java.util.Collection;

        $r0 := @parameter1: java.util.Collection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "elements");

        $r1 = staticinvoke <kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object)>($r1);

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean retainAll(java.util.Collection)>($r0);

        return $z0;
    }

    public static final boolean retainAll(java.util.Collection, kotlin.sequences.Sequence)
    {
        java.util.Collection $r0, $r2;
        kotlin.sequences.Sequence $r1;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: kotlin.sequences.Sequence;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        $r2 = staticinvoke <kotlin.collections.BrittleContainsOptimizationKt: java.util.Collection convertToSetForSetOperation(kotlin.sequences.Sequence)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean retainAll(java.util.Collection)>($r2);

        return $z0;

     label3:
        $z0 = staticinvoke <kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainNothing$CollectionsKt__MutableCollectionsKt(java.util.Collection)>($r0);

        return $z0;
    }

    public static final boolean retainAll(java.util.Collection, java.lang.Object[])
    {
        java.util.Collection $r0, $r2;
        java.lang.Object[] $r1;
        int $i0;
        boolean $z0, $z1;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.Object[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "elements");

        $i0 = lengthof $r1;

        $z0 = 1;

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 != 0 goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        if $z0 == 0 goto label5;

        $r2 = staticinvoke <kotlin.collections.BrittleContainsOptimizationKt: java.util.Collection convertToSetForSetOperation(java.lang.Object[])>($r1);

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean retainAll(java.util.Collection)>($r2);

        return $z0;

     label5:
        $z0 = staticinvoke <kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainNothing$CollectionsKt__MutableCollectionsKt(java.util.Collection)>($r0);

        return $z0;
    }

    public static final boolean retainAll(java.util.List, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 $r0;
        boolean $z0;
        java.util.List $r1;

        $r1 := @parameter0: java.util.List;

        $r0 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "predicate");

        $z0 = staticinvoke <kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.util.List,kotlin.jvm.functions.Function1,boolean)>($r1, $r0, 0);

        return $z0;
    }

    private static final boolean retainNothing$CollectionsKt__MutableCollectionsKt(java.util.Collection)
    {
        java.util.Collection $r0;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        $z0 = interfaceinvoke $r0.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        interfaceinvoke $r0.<java.util.Collection: void clear()>();

        return $z0;
    }

