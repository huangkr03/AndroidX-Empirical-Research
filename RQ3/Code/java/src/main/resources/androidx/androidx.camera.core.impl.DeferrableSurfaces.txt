androidx.camera.core.impl.DeferrableSurfaces
    private void <init>()
    {
        androidx.camera.core.impl.DeferrableSurfaces r0;

        r0 := @this: androidx.camera.core.impl.DeferrableSurfaces;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.common.util.concurrent.ListenableFuture surfaceListWithTimeout(java.util.Collection, boolean, long, java.util.concurrent.Executor, java.util.concurrent.ScheduledExecutorService)
    {
        java.util.Collection r0;
        boolean z0, $z1;
        long l0;
        java.util.concurrent.Executor r1;
        java.util.concurrent.ScheduledExecutorService r2;
        java.util.ArrayList r3, $r6;
        java.util.Iterator r4;
        androidx.camera.core.impl.DeferrableSurface r5;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r7;
        com.google.common.util.concurrent.ListenableFuture $r8, $r10, $r11;
        java.lang.Object $r9;

        r0 := @parameter0: java.util.Collection;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        r1 := @parameter3: java.util.concurrent.Executor;

        r2 := @parameter4: java.util.concurrent.ScheduledExecutorService;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

        r4 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.camera.core.impl.DeferrableSurface) $r9;

        $r10 = virtualinvoke r5.<androidx.camera.core.impl.DeferrableSurface: com.google.common.util.concurrent.ListenableFuture getSurface()>();

        $r11 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture)>($r10);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        $r7 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (java.util.List,java.util.concurrent.ScheduledExecutorService,java.util.concurrent.Executor,long,boolean)>(r3, r2, r1, l0, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.impl.DeferrableSurfaces: java.lang.Object lambda$surfaceListWithTimeout$3(java.util.List,java.util.concurrent.ScheduledExecutorService,java.util.concurrent.Executor,long,boolean,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r8 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r7);

        return $r8;
    }

    public static boolean tryIncrementAll(java.util.List)
    {
        java.util.List r0;

        r0 := @parameter0: java.util.List;

        staticinvoke <androidx.camera.core.impl.DeferrableSurfaces: void incrementAll(java.util.List)>(r0);

        goto label1;

     label1:
        return 1;
    }

    public static void incrementAll(java.util.List) throws androidx.camera.core.impl.DeferrableSurface$SurfaceClosedException
    {
        java.util.List r0;
        boolean $z0;
        java.lang.Object $r1;
        androidx.camera.core.impl.DeferrableSurface $r2;
        int $i0, i1;

        r0 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        i1 = 0;

     label1:
        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r2 = (androidx.camera.core.impl.DeferrableSurface) $r1;

        virtualinvoke $r2.<androidx.camera.core.impl.DeferrableSurface: void incrementUseCount()>();

        i1 = i1 + 1;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 < $i0 goto label1;

        goto label2;

     label2:
        return;
    }

    public static void decrementAll(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator r1;
        androidx.camera.core.impl.DeferrableSurface r2;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.List;

        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.camera.core.impl.DeferrableSurface) $r3;

        virtualinvoke r2.<androidx.camera.core.impl.DeferrableSurface: void decrementUseCount()>();

        goto label1;

     label2:
        return;
    }

    private static java.lang.Object lambda$surfaceListWithTimeout$3(java.util.List, java.util.concurrent.ScheduledExecutorService, java.util.concurrent.Executor, long, boolean, androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        java.util.List r0;
        java.util.concurrent.ScheduledExecutorService r1;
        java.util.concurrent.Executor r2;
        long l0;
        boolean z0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r3;
        com.google.common.util.concurrent.ListenableFuture r4;
        java.util.concurrent.ScheduledFuture r5;
        java.lang.Runnable $r6, $r8;
        java.util.concurrent.TimeUnit $r7;
        androidx.camera.core.impl.DeferrableSurfaces$1 $r9;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.concurrent.ScheduledExecutorService;

        r2 := @parameter2: java.util.concurrent.Executor;

        l0 := @parameter3: long;

        z0 := @parameter4: boolean;

        r3 := @parameter5: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r4 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture successfulAsList(java.util.Collection)>(r0);

        $r6 = dynamicinvoke "run" <java.lang.Runnable (java.util.concurrent.Executor,com.google.common.util.concurrent.ListenableFuture,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,long)>(r2, r4, r3, l0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.impl.DeferrableSurfaces: void lambda$surfaceListWithTimeout$1(java.util.concurrent.Executor,com.google.common.util.concurrent.ListenableFuture,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,long)>, methodtype: void __METHODTYPE__());

        $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        r5 = interfaceinvoke r1.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r6, l0, $r7);

        $r8 = dynamicinvoke "run" <java.lang.Runnable (com.google.common.util.concurrent.ListenableFuture)>(r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.impl.DeferrableSurfaces: void lambda$surfaceListWithTimeout$2(com.google.common.util.concurrent.ListenableFuture)>, methodtype: void __METHODTYPE__());

        virtualinvoke r3.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void addCancellationListener(java.lang.Runnable,java.util.concurrent.Executor)>($r8, r2);

        $r9 = new androidx.camera.core.impl.DeferrableSurfaces$1;

        specialinvoke $r9.<androidx.camera.core.impl.DeferrableSurfaces$1: void <init>(boolean,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,java.util.concurrent.ScheduledFuture)>(z0, r3, r5);

        staticinvoke <androidx.camera.core.impl.utils.futures.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.impl.utils.futures.FutureCallback,java.util.concurrent.Executor)>(r4, $r9, r2);

        return "surfaceList";
    }

    private static void lambda$surfaceListWithTimeout$2(com.google.common.util.concurrent.ListenableFuture)
    {
        com.google.common.util.concurrent.ListenableFuture r0;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        interfaceinvoke r0.<com.google.common.util.concurrent.ListenableFuture: boolean cancel(boolean)>(1);

        return;
    }

    private static void lambda$surfaceListWithTimeout$1(java.util.concurrent.Executor, com.google.common.util.concurrent.ListenableFuture, androidx.concurrent.futures.CallbackToFutureAdapter$Completer, long)
    {
        java.util.concurrent.Executor r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r2;
        long l0;
        java.lang.Runnable $r3;

        r0 := @parameter0: java.util.concurrent.Executor;

        r1 := @parameter1: com.google.common.util.concurrent.ListenableFuture;

        r2 := @parameter2: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        l0 := @parameter3: long;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (com.google.common.util.concurrent.ListenableFuture,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,long)>(r1, r2, l0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.core.impl.DeferrableSurfaces: void lambda$surfaceListWithTimeout$0(com.google.common.util.concurrent.ListenableFuture,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,long)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r0.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    private static void lambda$surfaceListWithTimeout$0(com.google.common.util.concurrent.ListenableFuture, androidx.concurrent.futures.CallbackToFutureAdapter$Completer, long)
    {
        com.google.common.util.concurrent.ListenableFuture r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        long l0;
        boolean $z0;
        java.util.concurrent.TimeoutException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r1 := @parameter1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        l0 := @parameter2: long;

        $z0 = interfaceinvoke r0.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();

        if $z0 != 0 goto label1;

        $r2 = new java.util.concurrent.TimeoutException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot complete surfaceList within ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>($r6);

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>($r2);

        interfaceinvoke r0.<com.google.common.util.concurrent.ListenableFuture: boolean cancel(boolean)>(1);

     label1:
        return;
    }

androidx.camera.core.impl.DeferrableSurfaces$1
<androidx.camera.core.impl.DeferrableSurfaces$1: boolean val$removeNullSurfaces>
<androidx.camera.core.impl.DeferrableSurfaces$1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer>
<androidx.camera.core.impl.DeferrableSurfaces$1: java.util.concurrent.ScheduledFuture val$scheduledFuture>
    void <init>(boolean, androidx.concurrent.futures.CallbackToFutureAdapter$Completer, java.util.concurrent.ScheduledFuture)
    {
        androidx.camera.core.impl.DeferrableSurfaces$1 r0;
        boolean z0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        java.util.concurrent.ScheduledFuture r2;

        r0 := @this: androidx.camera.core.impl.DeferrableSurfaces$1;

        z0 := @parameter0: boolean;

        r1 := @parameter1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        r2 := @parameter2: java.util.concurrent.ScheduledFuture;

        r0.<androidx.camera.core.impl.DeferrableSurfaces$1: boolean val$removeNullSurfaces> = z0;

        r0.<androidx.camera.core.impl.DeferrableSurfaces$1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer> = r1;

        r0.<androidx.camera.core.impl.DeferrableSurfaces$1: java.util.concurrent.ScheduledFuture val$scheduledFuture> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSuccess(java.util.List)
    {
        androidx.camera.core.impl.DeferrableSurfaces$1 r0;
        java.util.List r1;
        java.util.ArrayList r2, $r3;
        boolean $z0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r4;
        java.util.concurrent.ScheduledFuture $r5;
        java.util.Set $r6;

        r0 := @this: androidx.camera.core.impl.DeferrableSurfaces$1;

        r1 := @parameter0: java.util.List;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r2 = $r3;

        $z0 = r0.<androidx.camera.core.impl.DeferrableSurfaces$1: boolean val$removeNullSurfaces>;

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(null);

        interfaceinvoke r2.<java.util.List: boolean removeAll(java.util.Collection)>($r6);

     label1:
        $r4 = r0.<androidx.camera.core.impl.DeferrableSurfaces$1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer>;

        virtualinvoke $r4.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>(r2);

        $r5 = r0.<androidx.camera.core.impl.DeferrableSurfaces$1: java.util.concurrent.ScheduledFuture val$scheduledFuture>;

        interfaceinvoke $r5.<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>(1);

        return;
    }

    public void onFailure(java.lang.Throwable)
    {
        androidx.camera.core.impl.DeferrableSurfaces$1 r0;
        java.lang.Throwable r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer $r2;
        java.util.List $r3, $r4;
        java.util.concurrent.ScheduledFuture $r5;

        r0 := @this: androidx.camera.core.impl.DeferrableSurfaces$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<androidx.camera.core.impl.DeferrableSurfaces$1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer>;

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        virtualinvoke $r2.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>($r4);

        $r5 = r0.<androidx.camera.core.impl.DeferrableSurfaces$1: java.util.concurrent.ScheduledFuture val$scheduledFuture>;

        interfaceinvoke $r5.<java.util.concurrent.ScheduledFuture: boolean cancel(boolean)>(1);

        return;
    }

    public volatile void onSuccess(java.lang.Object)
    {
        androidx.camera.core.impl.DeferrableSurfaces$1 r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: androidx.camera.core.impl.DeferrableSurfaces$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        virtualinvoke r0.<androidx.camera.core.impl.DeferrableSurfaces$1: void onSuccess(java.util.List)>($r2);

        return;
    }

