android.databinding.tool.util.GenerationalClassUtil
<android.databinding.tool.util.GenerationalClassUtil: java.util.List[] mCache>
<android.databinding.tool.util.GenerationalClassUtil: java.util.List mInputDirs>
<android.databinding.tool.util.GenerationalClassUtil: java.io.File mIncrementalOutDir>
<android.databinding.tool.util.GenerationalClassUtil: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] mEnabledExtensions>
    public static android.databinding.tool.util.GenerationalClassUtil create(android.databinding.tool.DataBindingCompilerArgs)
    {
        android.databinding.tool.DataBindingCompilerArgs r0;
        android.databinding.tool.util.GenerationalClassUtil $r1;

        r0 := @parameter0: android.databinding.tool.DataBindingCompilerArgs;

        $r1 = new android.databinding.tool.util.GenerationalClassUtil;

        specialinvoke $r1.<android.databinding.tool.util.GenerationalClassUtil: void <init>(android.databinding.tool.DataBindingCompilerArgs)>(r0);

        return $r1;
    }

    public transient void <init>(java.io.File, android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[])
    {
        android.databinding.tool.util.GenerationalClassUtil r0;
        java.io.File r1;
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        java.lang.Object[] $r7;
        boolean $z0;
        java.util.List $r8;

        r0 := @this: android.databinding.tool.util.GenerationalClassUtil;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.tool.util.GenerationalClassUtil: java.util.List[] mCache> = null;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid input folder ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.String,java.lang.Object[])>($r6, $r7);

     label2:
        r0.<android.databinding.tool.util.GenerationalClassUtil: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] mEnabledExtensions> = r2;

        r0.<android.databinding.tool.util.GenerationalClassUtil: java.io.File mIncrementalOutDir> = null;

        $r8 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        r0.<android.databinding.tool.util.GenerationalClassUtil: java.util.List mInputDirs> = $r8;

        return;
    }

    private void <init>(android.databinding.tool.DataBindingCompilerArgs)
    {
        android.databinding.tool.util.GenerationalClassUtil r0;
        android.databinding.tool.DataBindingCompilerArgs r1;
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] $r2;
        java.lang.String $r3, $r5, $r8, $r10;
        boolean $z0, $z1;
        java.util.ArrayList $r4;
        java.io.File $r6, $r9;
        java.util.List $r7;

        r0 := @this: android.databinding.tool.util.GenerationalClassUtil;

        r1 := @parameter0: android.databinding.tool.DataBindingCompilerArgs;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.tool.util.GenerationalClassUtil: java.util.List[] mCache> = null;

        $r2 = staticinvoke <android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] values()>();

        r0.<android.databinding.tool.util.GenerationalClassUtil: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] mEnabledExtensions> = $r2;

        $r3 = virtualinvoke r1.<android.databinding.tool.DataBindingCompilerArgs: java.lang.String getAarOutFolder()>();

        $z0 = staticinvoke <android.databinding.tool.util.StringUtils: boolean isNotBlank(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label1;

        $r9 = new java.io.File;

        $r10 = virtualinvoke r1.<android.databinding.tool.DataBindingCompilerArgs: java.lang.String getAarOutFolder()>();

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r10, "bin-files");

        r0.<android.databinding.tool.util.GenerationalClassUtil: java.io.File mIncrementalOutDir> = $r9;

        goto label2;

     label1:
        r0.<android.databinding.tool.util.GenerationalClassUtil: java.io.File mIncrementalOutDir> = null;

     label2:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.databinding.tool.util.GenerationalClassUtil: java.util.List mInputDirs> = $r4;

        $r5 = virtualinvoke r1.<android.databinding.tool.DataBindingCompilerArgs: java.lang.String getBuildFolder()>();

        $z1 = staticinvoke <android.databinding.tool.util.StringUtils: boolean isNotBlank(java.lang.CharSequence)>($r5);

        if $z1 == 0 goto label3;

        $r7 = r0.<android.databinding.tool.util.GenerationalClassUtil: java.util.List mInputDirs>;

        $r6 = new java.io.File;

        $r8 = virtualinvoke r1.<android.databinding.tool.DataBindingCompilerArgs: java.lang.String getBuildFolder()>();

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r8, "dependent-lib-artifacts");

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

     label3:
        return;
    }

    public static android.databinding.tool.util.GenerationalClassUtil get()
    {
        android.databinding.tool.util.GenerationalClassUtil $r0;

        $r0 = staticinvoke <android.databinding.tool.Context: android.databinding.tool.util.GenerationalClassUtil getGenerationalClassUtil()>();

        return $r0;
    }

    public java.util.List loadObjects(android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter)
    {
        android.databinding.tool.util.GenerationalClassUtil r0;
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter r1;
        java.util.List r2;
        java.util.List[] $r3, $r4;
        int $i0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        java.lang.Object[] $r9;

        r0 := @this: android.databinding.tool.util.GenerationalClassUtil;

        r1 := @parameter0: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter;

        $r3 = r0.<android.databinding.tool.util.GenerationalClassUtil: java.util.List[] mCache>;

        if $r3 != null goto label1;

        specialinvoke r0.<android.databinding.tool.util.GenerationalClassUtil: void buildCache()>();

     label1:
        $r4 = r0.<android.databinding.tool.util.GenerationalClassUtil: java.util.List[] mCache>;

        $i0 = virtualinvoke r1.<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: int ordinal()>();

        r2 = $r4[$i0];

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid filter ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>(r2, $r8, $r9);

        return r2;
    }

    private void buildCache()
    {
        android.databinding.tool.util.GenerationalClassUtil r0;
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] r1, $r4;
        int i0, $i1, $i2, i3;
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter r2;
        java.lang.Object[] $r3, $r6;
        java.util.List[] $r5;
        java.util.ArrayList $r7;

        r0 := @this: android.databinding.tool.util.GenerationalClassUtil;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("building generational class cache", $r3);

        $r4 = staticinvoke <android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] values()>();

        $i1 = lengthof $r4;

        $r5 = newarray (java.util.List)[$i1];

        r0.<android.databinding.tool.util.GenerationalClassUtil: java.util.List[] mCache> = $r5;

        r1 = r0.<android.databinding.tool.util.GenerationalClassUtil: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] mEnabledExtensions>;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r2 = r1[i3];

        $r6 = r0.<android.databinding.tool.util.GenerationalClassUtil: java.util.List[] mCache>;

        $i2 = virtualinvoke r2.<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: int ordinal()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r6[$i2] = $r7;

        i3 = i3 + 1;

        goto label1;

     label2:
        specialinvoke r0.<android.databinding.tool.util.GenerationalClassUtil: void loadFromBuildInfo()>();

        return;
    }

    private void loadFromBuildInfo()
    {
        android.databinding.tool.util.GenerationalClassUtil r0;
        java.util.List $r1;
        java.util.function.Consumer $r2;

        r0 := @this: android.databinding.tool.util.GenerationalClassUtil;

        $r1 = r0.<android.databinding.tool.util.GenerationalClassUtil: java.util.List mInputDirs>;

        $r2 = dynamicinvoke "accept" <java.util.function.Consumer (android.databinding.tool.util.GenerationalClassUtil)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <android.databinding.tool.util.GenerationalClassUtil: void loadFromDirectory(java.io.File)>, methodtype: void __METHODTYPE__(java.io.File));

        interfaceinvoke $r1.<java.util.List: void forEach(java.util.function.Consumer)>($r2);

        return;
    }

    private void loadFromDirectory(java.io.File)
    {
        android.databinding.tool.util.GenerationalClassUtil r0;
        java.io.File r1, r3;
        java.util.Iterator r2;
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] r4;
        int i0, $i1, i2;
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter r5;
        java.lang.Throwable r6, $r15, $r18, $r21, r24, r25;
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.io.filefilter.IOFileFilter $r7, $r8;
        java.util.Collection $r9;
        java.lang.Object $r10;
        java.lang.String $r11, $r17, $r20;
        java.util.List[] $r12;
        java.util.List $r13;
        java.lang.Object[] $r14, $r16, $r19;
        java.io.FileInputStream r22;
        java.io.Serializable r23;

        r0 := @this: android.databinding.tool.util.GenerationalClassUtil;

        r1 := @parameter0: java.io.File;

        if r1 == null goto label01;

        $z0 = virtualinvoke r1.<java.io.File: boolean canRead()>();

        if $z0 == 0 goto label01;

        $z1 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label02;

     label01:
        return;

     label02:
        $r8 = <org.apache.commons.io.filefilter.TrueFileFilter: org.apache.commons.io.filefilter.IOFileFilter INSTANCE>;

        $r7 = <org.apache.commons.io.filefilter.TrueFileFilter: org.apache.commons.io.filefilter.IOFileFilter INSTANCE>;

        $r9 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r1, $r8, $r7);

        r2 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.io.File) $r10;

        r4 = r0.<android.databinding.tool.util.GenerationalClassUtil: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] mEnabledExtensions>;

        i0 = lengthof r4;

        i2 = 0;

     label04:
        if i2 >= i0 goto label14;

        r5 = r4[i2];

        $r11 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        $z3 = virtualinvoke r5.<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: boolean accept(java.lang.String)>($r11);

        if $z3 == 0 goto label13;

        r22 = null;

     label05:
        r22 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r3);

        r23 = specialinvoke r0.<android.databinding.tool.util.GenerationalClassUtil: java.io.Serializable fromInputStream(java.io.InputStream)>(r22);

        if r23 == null goto label06;

        $r12 = r0.<android.databinding.tool.util.GenerationalClassUtil: java.util.List[] mCache>;

        $i1 = virtualinvoke r5.<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: int ordinal()>();

        $r13 = $r12[$i1];

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r23);

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r23;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("loaded item %s from file", $r14);

     label06:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r22);

        goto label13;

     label07:
        $r18 := @caughtexception;

        r24 = $r18;

        $r19 = newarray (java.lang.Object)[1];

        $r20 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r19[0] = $r20;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r24, "Could not merge in Bindables from %s", $r19);

     label08:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r22);

        goto label13;

     label09:
        $r15 := @caughtexception;

        r25 = $r15;

        $r16 = newarray (java.lang.Object)[1];

        $r17 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r16[0] = $r17;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r25, "Could not read Binding properties intermediate file. %s", $r16);

     label10:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r22);

        goto label13;

     label11:
        $r21 := @caughtexception;

        r6 = $r21;

     label12:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r22);

        throw r6;

     label13:
        i2 = i2 + 1;

        goto label04;

     label14:
        goto label03;

     label15:
        return;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.ClassNotFoundException from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private java.io.Serializable fromInputStream(java.io.InputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        android.databinding.tool.util.GenerationalClassUtil r0;
        java.io.InputStream r1;
        android.databinding.tool.util.GenerationalClassUtil$IgnoreSerialIdObjectInputStream r2, $r3;
        java.lang.Object $r4;
        java.io.Serializable $r5;

        r0 := @this: android.databinding.tool.util.GenerationalClassUtil;

        r1 := @parameter0: java.io.InputStream;

        $r3 = new android.databinding.tool.util.GenerationalClassUtil$IgnoreSerialIdObjectInputStream;

        specialinvoke $r3.<android.databinding.tool.util.GenerationalClassUtil$IgnoreSerialIdObjectInputStream: void <init>(java.io.InputStream)>(r1);

        r2 = $r3;

        $r4 = virtualinvoke r2.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r5 = (java.io.Serializable) $r4;

        return $r5;
    }

    public void writeIntermediateFile(java.lang.String, java.lang.String, java.io.Serializable)
    {
        android.databinding.tool.util.GenerationalClassUtil r0;
        java.lang.String r1, r2, $r14;
        java.io.Serializable r3;
        java.lang.Throwable r4, $r18, $r19, $r20, r25, r26;
        java.lang.Object[] $r5, $r17, $r21;
        java.io.File $r6, $r7, $r8, $r10, r24;
        java.lang.StringBuilder $r9, $r11, $r12, $r13;
        java.io.FileOutputStream $r15, r23;
        java.io.ObjectOutputStream $r16, r22;

        r0 := @this: android.databinding.tool.util.GenerationalClassUtil;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.io.Serializable;

        r22 = null;

        r23 = null;

     label1:
        $r6 = r0.<android.databinding.tool.util.GenerationalClassUtil: java.io.File mIncrementalOutDir>;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <android.databinding.tool.util.Preconditions: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>($r6, "incremental out directory should be set to aar output directory.", $r5);

        $r7 = r0.<android.databinding.tool.util.GenerationalClassUtil: java.io.File mIncrementalOutDir>;

        virtualinvoke $r7.<java.io.File: boolean mkdirs()>();

        $r8 = new java.io.File;

        $r10 = r0.<android.databinding.tool.util.GenerationalClassUtil: java.io.File mIncrementalOutDir>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, $r14);

        r24 = $r8;

        $r15 = new java.io.FileOutputStream;

        specialinvoke $r15.<java.io.FileOutputStream: void <init>(java.io.File)>(r24);

        r23 = $r15;

        $r16 = new java.io.ObjectOutputStream;

        specialinvoke $r16.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r23);

        r22 = $r16;

        virtualinvoke r22.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3);

        virtualinvoke r22.<java.io.ObjectOutputStream: void close()>();

        $r17 = newarray (java.lang.Object)[2];

        $r17[0] = r1;

        $r17[1] = r2;

        staticinvoke <android.databinding.tool.util.L: void d(java.lang.String,java.lang.Object[])>("wrote intermediate bindable file %s %s", $r17);

     label2:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>(r22);

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>(r23);

        goto label7;

     label3:
        $r20 := @caughtexception;

        r25 = $r20;

        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = r2;

        staticinvoke <android.databinding.tool.util.L: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r25, "Could not write to intermediate file: %s", $r21);

     label4:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>(r22);

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>(r23);

        goto label7;

     label5:
        $r19 := @caughtexception;

        r4 = $r19;

     label6:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>(r22);

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>(r23);

        throw r4;

     label7:
        goto label9;

     label8:
        $r18 := @caughtexception;

        r26 = $r18;

     label9:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch android.databinding.tool.util.LoggedErrorException from label1 to label7 with label8;
    }

android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter
<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter BR>
<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter LAYOUT>
<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter SETTER_STORE>
<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: java.lang.String mExtension>
<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] $VALUES>
    public static android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] values()
    {
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[]) $r1;

        return $r2;
    }

    public static android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroid/databinding/tool/util/GenerationalClassUtil$ExtensionFilter;", r0);

        $r2 = (android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: java.lang.String mExtension> = r2;

        return;
    }

    public boolean accept(java.lang.String)
    {
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: java.lang.String mExtension>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>($r2);

        return $z0;
    }

    public java.lang.String getExtension()
    {
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter;

        $r1 = r0.<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: java.lang.String mExtension>;

        return $r1;
    }

    static void <clinit>()
    {
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter $r0, $r1, $r2, $r4, $r5, $r6;
        android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] $r3;

        $r0 = new android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter;

        specialinvoke $r0.<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: void <init>(java.lang.String,int,java.lang.String)>("BR", 0, "-br.bin");

        <android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter BR> = $r0;

        $r1 = new android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter;

        specialinvoke $r1.<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: void <init>(java.lang.String,int,java.lang.String)>("LAYOUT", 1, "-layoutinfo.bin");

        <android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter LAYOUT> = $r1;

        $r2 = new android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter;

        specialinvoke $r2.<android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: void <init>(java.lang.String,int,java.lang.String)>("SETTER_STORE", 2, "-setter_store.bin");

        <android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter SETTER_STORE> = $r2;

        $r3 = newarray (android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter)[3];

        $r4 = <android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter BR>;

        $r3[0] = $r4;

        $r5 = <android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter LAYOUT>;

        $r3[1] = $r5;

        $r6 = <android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter SETTER_STORE>;

        $r3[2] = $r6;

        <android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter: android.databinding.tool.util.GenerationalClassUtil$ExtensionFilter[] $VALUES> = $r3;

        return;
    }

android.databinding.tool.util.GenerationalClassUtil$IgnoreSerialIdObjectInputStream
    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        android.databinding.tool.util.GenerationalClassUtil$IgnoreSerialIdObjectInputStream r0;
        java.io.InputStream r1;

        r0 := @this: android.databinding.tool.util.GenerationalClassUtil$IgnoreSerialIdObjectInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r1);

        return;
    }

    protected java.io.ObjectStreamClass readClassDescriptor() throws java.io.IOException, java.lang.ClassNotFoundException
    {
        android.databinding.tool.util.GenerationalClassUtil$IgnoreSerialIdObjectInputStream r0;
        java.io.ObjectStreamClass r1, $r5;
        java.lang.Class $r2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: android.databinding.tool.util.GenerationalClassUtil$IgnoreSerialIdObjectInputStream;

        r1 = specialinvoke r0.<java.io.ObjectInputStream: java.io.ObjectStreamClass readClassDescriptor()>();

        $r2 = class "Landroid/databinding/annotationprocessor/ProcessExpressions$IntermediateV1;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke r1.<java.io.ObjectStreamClass: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamClass lookup(java.lang.Class)>(class "Landroid/databinding/annotationprocessor/ProcessExpressions$IntermediateV1;");

        return $r5;

     label1:
        return r1;
    }

