androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor
<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.impl.PreviewExtenderImpl mPreviewExtenderImpl>
<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.impl.RequestUpdateProcessorImpl mProcessorImpl>
<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>
    public void <init>(androidx.camera.extensions.impl.PreviewExtenderImpl)
    {
        androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor r0;
        androidx.camera.extensions.impl.PreviewExtenderImpl r1, $r5;
        androidx.camera.extensions.internal.BlockingCloseAccessCounter $r2;
        androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType $r3, $r4;
        androidx.camera.extensions.impl.ProcessorImpl $r6;
        androidx.camera.extensions.impl.RequestUpdateProcessorImpl $r7;
        boolean $z0;

        r0 := @this: androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor;

        r1 := @parameter0: androidx.camera.extensions.impl.PreviewExtenderImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new androidx.camera.extensions.internal.BlockingCloseAccessCounter;

        specialinvoke $r2.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: void <init>()>();

        r0.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter> = $r2;

        $r3 = interfaceinvoke r1.<androidx.camera.extensions.impl.PreviewExtenderImpl: androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType getProcessorType()>();

        $r4 = <androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType: androidx.camera.extensions.impl.PreviewExtenderImpl$ProcessorType PROCESSOR_TYPE_REQUEST_UPDATE_ONLY>;

        if $r3 != $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "AdaptingRequestUpdateProcess can only adapt extender with PROCESSOR_TYPE_REQUEST_UPDATE_ONLY ProcessorType.");

        r0.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.impl.PreviewExtenderImpl mPreviewExtenderImpl> = r1;

        $r5 = r0.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.impl.PreviewExtenderImpl mPreviewExtenderImpl>;

        $r6 = interfaceinvoke $r5.<androidx.camera.extensions.impl.PreviewExtenderImpl: androidx.camera.extensions.impl.ProcessorImpl getProcessor()>();

        $r7 = (androidx.camera.extensions.impl.RequestUpdateProcessorImpl) $r6;

        r0.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.impl.RequestUpdateProcessorImpl mProcessorImpl> = $r7;

        return;
    }

    public androidx.camera.core.impl.CaptureStage getCaptureStage()
    {
        androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor r0;
        androidx.camera.extensions.internal.AdaptingCaptureStage r1, $r4;
        java.lang.Throwable r2, $r8;
        androidx.camera.extensions.internal.BlockingCloseAccessCounter $r3, $r7, $r9;
        boolean $z0;
        androidx.camera.extensions.impl.PreviewExtenderImpl $r5;
        androidx.camera.extensions.impl.CaptureStageImpl $r6;

        r0 := @this: androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor;

        $r3 = r0.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        $z0 = virtualinvoke $r3.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: boolean tryIncrement()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = new androidx.camera.extensions.internal.AdaptingCaptureStage;

        $r5 = r0.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.impl.PreviewExtenderImpl mPreviewExtenderImpl>;

        $r6 = interfaceinvoke $r5.<androidx.camera.extensions.impl.PreviewExtenderImpl: androidx.camera.extensions.impl.CaptureStageImpl getCaptureStage()>();

        specialinvoke $r4.<androidx.camera.extensions.internal.AdaptingCaptureStage: void <init>(androidx.camera.extensions.impl.CaptureStageImpl)>($r6);

        r1 = $r4;

     label2:
        $r7 = r0.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        virtualinvoke $r7.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: void decrement()>();

        return r1;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = r0.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        virtualinvoke $r9.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: void decrement()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean process(androidx.camera.core.ImageInfo)
    {
        androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor r0;
        androidx.camera.core.ImageInfo r1;
        androidx.camera.core.impl.CameraCaptureResult r2;
        android.hardware.camera2.CaptureResult r3;
        java.lang.Throwable r4, $r8;
        androidx.camera.extensions.internal.BlockingCloseAccessCounter $r5, $r9, $r11;
        boolean $z0, $z1, z2, $z3, z4;
        android.hardware.camera2.TotalCaptureResult $r6;
        androidx.camera.extensions.impl.RequestUpdateProcessorImpl $r7;
        androidx.camera.extensions.impl.CaptureStageImpl r10;

        r0 := @this: androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor;

        r1 := @parameter0: androidx.camera.core.ImageInfo;

        $r5 = r0.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        $z0 = virtualinvoke $r5.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: boolean tryIncrement()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        z2 = 0;

        r2 = staticinvoke <androidx.camera.core.impl.CameraCaptureResults: androidx.camera.core.impl.CameraCaptureResult retrieveCameraCaptureResult(androidx.camera.core.ImageInfo)>(r1);

        r3 = staticinvoke <androidx.camera.camera2.impl.Camera2CameraCaptureResultConverter: android.hardware.camera2.CaptureResult getCaptureResult(androidx.camera.core.impl.CameraCaptureResult)>(r2);

        $z1 = r3 instanceof android.hardware.camera2.TotalCaptureResult;

        if $z1 == 0 goto label4;

        $r7 = r0.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.impl.RequestUpdateProcessorImpl mProcessorImpl>;

        $r6 = (android.hardware.camera2.TotalCaptureResult) r3;

        r10 = interfaceinvoke $r7.<androidx.camera.extensions.impl.RequestUpdateProcessorImpl: androidx.camera.extensions.impl.CaptureStageImpl process(android.hardware.camera2.TotalCaptureResult)>($r6);

        if r10 == null goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z2 = $z3;

     label4:
        z4 = z2;

     label5:
        $r11 = r0.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        virtualinvoke $r11.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: void decrement()>();

        return z4;

     label6:
        $r8 := @caughtexception;

        r4 = $r8;

     label7:
        $r9 = r0.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        virtualinvoke $r9.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: void decrement()>();

        throw r4;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void close()
    {
        androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor r0;
        androidx.camera.extensions.internal.BlockingCloseAccessCounter $r1;

        r0 := @this: androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor;

        $r1 = r0.<androidx.camera.extensions.internal.AdaptingRequestUpdateProcessor: androidx.camera.extensions.internal.BlockingCloseAccessCounter mAccessCounter>;

        virtualinvoke $r1.<androidx.camera.extensions.internal.BlockingCloseAccessCounter: void destroyAndWaitForZeroAccess()>();

        return;
    }

