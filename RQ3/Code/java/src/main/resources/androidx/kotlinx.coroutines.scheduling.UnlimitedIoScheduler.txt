kotlinx.coroutines.scheduling.UnlimitedIoScheduler
<kotlinx.coroutines.scheduling.UnlimitedIoScheduler: kotlinx.coroutines.scheduling.UnlimitedIoScheduler INSTANCE>
    static void <clinit>()
    {
        kotlinx.coroutines.scheduling.UnlimitedIoScheduler $r0;

        $r0 = new kotlinx.coroutines.scheduling.UnlimitedIoScheduler;

        specialinvoke $r0.<kotlinx.coroutines.scheduling.UnlimitedIoScheduler: void <init>()>();

        <kotlinx.coroutines.scheduling.UnlimitedIoScheduler: kotlinx.coroutines.scheduling.UnlimitedIoScheduler INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        kotlinx.coroutines.scheduling.UnlimitedIoScheduler $r0;

        $r0 := @this: kotlinx.coroutines.scheduling.UnlimitedIoScheduler;

        specialinvoke $r0.<kotlinx.coroutines.CoroutineDispatcher: void <init>()>();

        return;
    }

    public void dispatch(kotlin.coroutines.CoroutineContext, java.lang.Runnable)
    {
        kotlinx.coroutines.scheduling.UnlimitedIoScheduler $r0;
        java.lang.Runnable $r1;
        kotlin.coroutines.CoroutineContext $r2;
        kotlinx.coroutines.scheduling.DefaultScheduler $r3;
        kotlinx.coroutines.scheduling.TaskContext $r4;

        $r0 := @this: kotlinx.coroutines.scheduling.UnlimitedIoScheduler;

        $r2 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r1 := @parameter1: java.lang.Runnable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "block");

        $r3 = <kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.scheduling.DefaultScheduler INSTANCE>;

        $r4 = <kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.TaskContext BlockingContext>;

        virtualinvoke $r3.<kotlinx.coroutines.scheduling.DefaultScheduler: void dispatchWithContext$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)>($r1, $r4, 0);

        return;
    }

