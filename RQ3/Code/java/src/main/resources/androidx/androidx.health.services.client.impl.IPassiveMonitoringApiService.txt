androidx.health.services.client.impl.IPassiveMonitoringApiService
<androidx.health.services.client.impl.IPassiveMonitoringApiService: java.lang.String DESCRIPTOR>
<androidx.health.services.client.impl.IPassiveMonitoringApiService: int API_VERSION>
<androidx.health.services.client.impl.IPassiveMonitoringApiService: int getApiVersion()>
<androidx.health.services.client.impl.IPassiveMonitoringApiService: androidx.health.services.client.impl.response.PassiveMonitoringCapabilitiesResponse getCapabilities(androidx.health.services.client.impl.request.CapabilitiesRequest)>
<androidx.health.services.client.impl.IPassiveMonitoringApiService: void flush(androidx.health.services.client.impl.request.FlushRequest,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IPassiveMonitoringApiService: void registerPassiveListenerService(androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IPassiveMonitoringApiService: void registerPassiveListenerCallback(androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest,androidx.health.services.client.impl.IPassiveListenerCallback,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IPassiveMonitoringApiService: void unregisterPassiveListenerService(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>
<androidx.health.services.client.impl.IPassiveMonitoringApiService: void unregisterPassiveListenerCallback(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>
androidx.health.services.client.impl.IPassiveMonitoringApiService$Default
    public void <init>()
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Default r0;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Default;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getApiVersion() throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Default r0;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Default;

        return 0;
    }

    public androidx.health.services.client.impl.response.PassiveMonitoringCapabilitiesResponse getCapabilities(androidx.health.services.client.impl.request.CapabilitiesRequest) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Default r0;
        androidx.health.services.client.impl.request.CapabilitiesRequest r1;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Default;

        r1 := @parameter0: androidx.health.services.client.impl.request.CapabilitiesRequest;

        return null;
    }

    public void flush(androidx.health.services.client.impl.request.FlushRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Default r0;
        androidx.health.services.client.impl.request.FlushRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Default;

        r1 := @parameter0: androidx.health.services.client.impl.request.FlushRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void registerPassiveListenerService(androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Default r0;
        androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Default;

        r1 := @parameter0: androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void registerPassiveListenerCallback(androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest, androidx.health.services.client.impl.IPassiveListenerCallback, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Default r0;
        androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest r1;
        androidx.health.services.client.impl.IPassiveListenerCallback r2;
        androidx.health.services.client.impl.internal.IStatusCallback r3;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Default;

        r1 := @parameter0: androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest;

        r2 := @parameter1: androidx.health.services.client.impl.IPassiveListenerCallback;

        r3 := @parameter2: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void unregisterPassiveListenerService(java.lang.String, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Default r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public void unregisterPassiveListenerCallback(java.lang.String, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Default r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Default;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Default r0;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Default;

        return null;
    }

androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy
<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy: android.os.IBinder mRemote>
    void <init>(android.os.IBinder)
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy;

        $r1 = r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy r0;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy;

        return "androidx.health.services.client.impl.IPassiveMonitoringApiService";
    }

    public int getApiVersion() throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        int i0;
        boolean z0;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IPassiveMonitoringApiService");

        $r4 = r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return i0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public androidx.health.services.client.impl.response.PassiveMonitoringCapabilitiesResponse getCapabilities(androidx.health.services.client.impl.request.CapabilitiesRequest) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy r0;
        androidx.health.services.client.impl.request.CapabilitiesRequest r1;
        android.os.Parcel r2, r3;
        androidx.health.services.client.impl.response.PassiveMonitoringCapabilitiesResponse r4;
        java.lang.Throwable r5, $r9;
        android.os.IBinder $r6;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy;

        r1 := @parameter0: androidx.health.services.client.impl.request.CapabilitiesRequest;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IPassiveMonitoringApiService");

        staticinvoke <androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r2, r1, 0);

        $r6 = r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r7 = <androidx.health.services.client.impl.response.PassiveMonitoringCapabilitiesResponse: android.os.Parcelable$Creator CREATOR>;

        $r8 = staticinvoke <androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r3, $r7);

        r4 = (androidx.health.services.client.impl.response.PassiveMonitoringCapabilitiesResponse) $r8;

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void flush(androidx.health.services.client.impl.request.FlushRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy r0;
        androidx.health.services.client.impl.request.FlushRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy;

        r1 := @parameter0: androidx.health.services.client.impl.request.FlushRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IPassiveMonitoringApiService");

        staticinvoke <androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r3, r1, 0);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void registerPassiveListenerService(androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy r0;
        androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy;

        r1 := @parameter0: androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IPassiveMonitoringApiService");

        staticinvoke <androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r3, r1, 0);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void registerPassiveListenerCallback(androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest, androidx.health.services.client.impl.IPassiveListenerCallback, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy r0;
        androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest r1;
        androidx.health.services.client.impl.IPassiveListenerCallback r2;
        androidx.health.services.client.impl.internal.IStatusCallback r3;
        android.os.Parcel r4, r5;
        boolean z0;
        java.lang.Throwable r6, $r8;
        android.os.IBinder $r7;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy;

        r1 := @parameter0: androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest;

        r2 := @parameter1: androidx.health.services.client.impl.IPassiveListenerCallback;

        r3 := @parameter2: androidx.health.services.client.impl.internal.IStatusCallback;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IPassiveMonitoringApiService");

        staticinvoke <androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r4, r1, 0);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        virtualinvoke r4.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r3);

        $r7 = r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r6 = $r8;

     label4:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unregisterPassiveListenerService(java.lang.String, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IPassiveMonitoringApiService");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unregisterPassiveListenerCallback(java.lang.String, androidx.health.services.client.impl.internal.IStatusCallback) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy r0;
        java.lang.String r1;
        androidx.health.services.client.impl.internal.IStatusCallback r2;
        android.os.Parcel r3, r4;
        boolean z0;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.health.services.client.impl.internal.IStatusCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("androidx.health.services.client.impl.IPassiveMonitoringApiService");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>(r2);

        $r6 = r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy: android.os.IBinder mRemote>;

        z0 = interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub
<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: int TRANSACTION_getApiVersion>
<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: int TRANSACTION_getCapabilities>
<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: int TRANSACTION_flush>
<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: int TRANSACTION_registerPassiveListenerService>
<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: int TRANSACTION_registerPassiveListenerCallback>
<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: int TRANSACTION_unregisterPassiveListenerService>
<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: int TRANSACTION_unregisterPassiveListenerCallback>
    public void <init>()
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub r0;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "androidx.health.services.client.impl.IPassiveMonitoringApiService");

        return;
    }

    public static androidx.health.services.client.impl.IPassiveMonitoringApiService asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy $r2;
        boolean $z0;
        androidx.health.services.client.impl.IPassiveMonitoringApiService $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("androidx.health.services.client.impl.IPassiveMonitoringApiService");

        if r1 == null goto label2;

        $z0 = r1 instanceof androidx.health.services.client.impl.IPassiveMonitoringApiService;

        if $z0 == 0 goto label2;

        $r3 = (androidx.health.services.client.impl.IPassiveMonitoringApiService) r1;

        return $r3;

     label2:
        $r2 = new androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy;

        specialinvoke $r2.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub r0;
        android.os.IBinder r1;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub;

        r1 = (android.os.IBinder) r0;

        return r1;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub r0;
        int i0, i1, i2;
        android.os.Parcel r1, r2;
        java.lang.String r3, r27, r29;
        androidx.health.services.client.impl.internal.IStatusCallback r4, r22, r24, r28, r30;
        android.os.IBinder $r5, $r6, $r9, $r10, $r13, $r16;
        android.os.Parcelable$Creator $r7, $r11, $r14, $r17;
        java.lang.Object $r8, $r12, $r15, $r18;
        boolean $z0;
        androidx.health.services.client.impl.request.CapabilitiesRequest r19;
        androidx.health.services.client.impl.response.PassiveMonitoringCapabilitiesResponse r20;
        androidx.health.services.client.impl.request.FlushRequest r21;
        androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest r23;
        androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest r25;
        androidx.health.services.client.impl.IPassiveListenerCallback r26;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        r3 = "androidx.health.services.client.impl.IPassiveMonitoringApiService";

        if i0 < 1 goto label01;

        if i0 > 16777215 goto label01;

        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>(r3);

     label01:
        lookupswitch(i0)
        {
            case 1598968902: goto label02;
            default: goto label03;
        };

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        return 1;

     label03:
        tableswitch(i0)
        {
            case 1: goto label04;
            case 2: goto label11;
            case 3: goto label11;
            case 4: goto label11;
            case 5: goto label11;
            case 6: goto label05;
            case 7: goto label06;
            case 8: goto label11;
            case 9: goto label11;
            case 10: goto label11;
            case 11: goto label07;
            case 12: goto label08;
            case 13: goto label09;
            case 14: goto label10;
            default: goto label11;
        };

     label04:
        i2 = virtualinvoke r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: int getApiVersion()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        goto label12;

     label05:
        $r17 = <androidx.health.services.client.impl.request.CapabilitiesRequest: android.os.Parcelable$Creator CREATOR>;

        $r18 = staticinvoke <androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r17);

        r19 = (androidx.health.services.client.impl.request.CapabilitiesRequest) $r18;

        r20 = virtualinvoke r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: androidx.health.services.client.impl.response.PassiveMonitoringCapabilitiesResponse getCapabilities(androidx.health.services.client.impl.request.CapabilitiesRequest)>(r19);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        staticinvoke <androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)>(r2, r20, 1);

        goto label12;

     label06:
        $r14 = <androidx.health.services.client.impl.request.FlushRequest: android.os.Parcelable$Creator CREATOR>;

        $r15 = staticinvoke <androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r14);

        r21 = (androidx.health.services.client.impl.request.FlushRequest) $r15;

        $r16 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r22 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r16);

        virtualinvoke r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: void flush(androidx.health.services.client.impl.request.FlushRequest,androidx.health.services.client.impl.internal.IStatusCallback)>(r21, r22);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label12;

     label07:
        $r11 = <androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest: android.os.Parcelable$Creator CREATOR>;

        $r12 = staticinvoke <androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r11);

        r23 = (androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest) $r12;

        $r13 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r24 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r13);

        virtualinvoke r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: void registerPassiveListenerService(androidx.health.services.client.impl.request.PassiveListenerServiceRegistrationRequest,androidx.health.services.client.impl.internal.IStatusCallback)>(r23, r24);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label12;

     label08:
        $r7 = <androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest: android.os.Parcelable$Creator CREATOR>;

        $r8 = staticinvoke <androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)>(r1, $r7);

        r25 = (androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest) $r8;

        $r9 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r26 = staticinvoke <androidx.health.services.client.impl.IPassiveListenerCallback$Stub: androidx.health.services.client.impl.IPassiveListenerCallback asInterface(android.os.IBinder)>($r9);

        $r10 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r4 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r10);

        virtualinvoke r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: void registerPassiveListenerCallback(androidx.health.services.client.impl.request.PassiveListenerCallbackRegistrationRequest,androidx.health.services.client.impl.IPassiveListenerCallback,androidx.health.services.client.impl.internal.IStatusCallback)>(r25, r26, r4);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label12;

     label09:
        r27 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r6 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r28 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r6);

        virtualinvoke r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: void unregisterPassiveListenerService(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>(r27, r28);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label12;

     label10:
        r29 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r5 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r30 = staticinvoke <androidx.health.services.client.impl.internal.IStatusCallback$Stub: androidx.health.services.client.impl.internal.IStatusCallback asInterface(android.os.IBinder)>($r5);

        virtualinvoke r0.<androidx.health.services.client.impl.IPassiveMonitoringApiService$Stub: void unregisterPassiveListenerCallback(java.lang.String,androidx.health.services.client.impl.internal.IStatusCallback)>(r29, r30);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        goto label12;

     label11:
        $z0 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z0;

     label12:
        return 1;
    }

androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel
    public void <init>()
    {
        androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel r0;

        r0 := @this: androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Object readTypedObject(android.os.Parcel, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        int $i0;
        java.lang.Object $r2;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable$Creator;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i0 == 0 goto label1;

        $r2 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        return $r2;

     label1:
        return null;
    }

    private static void writeTypedObject(android.os.Parcel, android.os.Parcelable, int)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        int i0;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable;

        i0 := @parameter2: int;

        if r1 == null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        interfaceinvoke r1.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>(r0, i0);

        goto label2;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }

    static java.lang.Object access$000(android.os.Parcel, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        java.lang.Object $r2;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable$Creator;

        $r2 = staticinvoke <androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel: java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator)>(r0, r1);

        return $r2;
    }

    static void access$100(android.os.Parcel, android.os.Parcelable, int)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        int i0;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: android.os.Parcelable;

        i0 := @parameter2: int;

        staticinvoke <androidx.health.services.client.impl.IPassiveMonitoringApiService$_Parcel: void writeTypedObject(android.os.Parcel,android.os.Parcelable,int)>(r0, r1, i0);

        return;
    }

