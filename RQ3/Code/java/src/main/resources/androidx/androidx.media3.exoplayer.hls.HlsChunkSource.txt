androidx.media3.exoplayer.hls.HlsChunkSource
<androidx.media3.exoplayer.hls.HlsChunkSource: int CHUNK_PUBLICATION_STATE_PRELOAD>
<androidx.media3.exoplayer.hls.HlsChunkSource: int CHUNK_PUBLICATION_STATE_PUBLISHED>
<androidx.media3.exoplayer.hls.HlsChunkSource: int CHUNK_PUBLICATION_STATE_REMOVED>
<androidx.media3.exoplayer.hls.HlsChunkSource: int KEY_CACHE_SIZE>
<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory>
<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.datasource.DataSource mediaDataSource>
<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.datasource.DataSource encryptionDataSource>
<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.TimestampAdjusterProvider timestampAdjusterProvider>
<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri[] playlistUrls>
<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.Format[] playlistFormats>
<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>
<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.TrackGroup trackGroup>
<androidx.media3.exoplayer.hls.HlsChunkSource: java.util.List muxedCaptionFormats>
<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache keyCache>
<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.analytics.PlayerId playerId>
<androidx.media3.exoplayer.hls.HlsChunkSource: boolean isTimestampMaster>
<androidx.media3.exoplayer.hls.HlsChunkSource: byte[] scratchSpace>
<androidx.media3.exoplayer.hls.HlsChunkSource: java.io.IOException fatalError>
<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri expectedPlaylistUrl>
<androidx.media3.exoplayer.hls.HlsChunkSource: boolean independentSegments>
<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>
<androidx.media3.exoplayer.hls.HlsChunkSource: long liveEdgeInPeriodTimeUs>
<androidx.media3.exoplayer.hls.HlsChunkSource: boolean seenExpectedPlaylistError>
    public void <init>(androidx.media3.exoplayer.hls.HlsExtractorFactory, androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker, android.net.Uri[], androidx.media3.common.Format[], androidx.media3.exoplayer.hls.HlsDataSourceFactory, androidx.media3.datasource.TransferListener, androidx.media3.exoplayer.hls.TimestampAdjusterProvider, java.util.List, androidx.media3.exoplayer.analytics.PlayerId)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        androidx.media3.exoplayer.hls.HlsExtractorFactory r1;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker r2;
        android.net.Uri[] r3;
        androidx.media3.common.Format[] r4;
        androidx.media3.exoplayer.hls.HlsDataSourceFactory r5;
        androidx.media3.datasource.TransferListener r6;
        androidx.media3.exoplayer.hls.TimestampAdjusterProvider r7;
        java.util.List r8;
        androidx.media3.exoplayer.analytics.PlayerId r9;
        java.util.ArrayList r10, r25;
        byte[] $r12;
        androidx.media3.datasource.DataSource $r13, $r14, $r22;
        androidx.media3.common.TrackGroup $r18, r24;
        int[] $r19;
        androidx.media3.common.Format $r20;
        int $i0, $i1, i2, $i3;
        java.lang.Integer $r21;
        androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache r23;
        androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection r26;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r27;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        r1 := @parameter0: androidx.media3.exoplayer.hls.HlsExtractorFactory;

        r2 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker;

        r3 := @parameter2: android.net.Uri[];

        r4 := @parameter3: androidx.media3.common.Format[];

        r5 := @parameter4: androidx.media3.exoplayer.hls.HlsDataSourceFactory;

        r6 := @parameter5: androidx.media3.datasource.TransferListener;

        r7 := @parameter6: androidx.media3.exoplayer.hls.TimestampAdjusterProvider;

        r8 := @parameter7: java.util.List;

        r9 := @parameter8: androidx.media3.exoplayer.analytics.PlayerId;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory> = r1;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker> = r2;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri[] playlistUrls> = r3;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.Format[] playlistFormats> = r4;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.TimestampAdjusterProvider timestampAdjusterProvider> = r7;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: java.util.List muxedCaptionFormats> = r8;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.analytics.PlayerId playerId> = r9;

        r23 = new androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache;

        specialinvoke r23.<androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache: void <init>(int)>(4);

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache keyCache> = r23;

        $r12 = <androidx.media3.common.util.Util: byte[] EMPTY_BYTE_ARRAY>;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: byte[] scratchSpace> = $r12;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: long liveEdgeInPeriodTimeUs> = -9223372036854775807L;

        $r13 = interfaceinvoke r5.<androidx.media3.exoplayer.hls.HlsDataSourceFactory: androidx.media3.datasource.DataSource createDataSource(int)>(1);

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.datasource.DataSource mediaDataSource> = $r13;

        if r6 == null goto label1;

        $r22 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.datasource.DataSource mediaDataSource>;

        interfaceinvoke $r22.<androidx.media3.datasource.DataSource: void addTransferListener(androidx.media3.datasource.TransferListener)>(r6);

     label1:
        $r14 = interfaceinvoke r5.<androidx.media3.exoplayer.hls.HlsDataSourceFactory: androidx.media3.datasource.DataSource createDataSource(int)>(3);

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.datasource.DataSource encryptionDataSource> = $r14;

        r24 = new androidx.media3.common.TrackGroup;

        specialinvoke r24.<androidx.media3.common.TrackGroup: void <init>(androidx.media3.common.Format[])>(r4);

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.TrackGroup trackGroup> = r24;

        r25 = new java.util.ArrayList;

        specialinvoke r25.<java.util.ArrayList: void <init>()>();

        r10 = r25;

        i2 = 0;

     label2:
        $i3 = lengthof r3;

        if i2 >= $i3 goto label4;

        $r20 = r4[i2];

        $i0 = $r20.<androidx.media3.common.Format: int roleFlags>;

        $i1 = $i0 & 16384;

        if $i1 != 0 goto label3;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        r26 = new androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection;

        $r18 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.TrackGroup trackGroup>;

        $r19 = staticinvoke <com.google.common.primitives.Ints: int[] toArray(java.util.Collection)>(r10);

        specialinvoke r26.<androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection: void <init>(androidx.media3.common.TrackGroup,int[])>($r18, $r19);

        r27 = (androidx.media3.exoplayer.trackselection.ExoTrackSelection) r26;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection> = r27;

        return;
    }

    public void maybeThrowError() throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        java.io.IOException $r1, $r5;
        android.net.Uri $r2, $r3;
        boolean $z0;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r4;
        java.lang.Throwable r6;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: java.io.IOException fatalError>;

        if $r1 == null goto label1;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: java.io.IOException fatalError>;

        r6 = (java.lang.Throwable) $r5;

        throw r6;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri expectedPlaylistUrl>;

        if $r2 == null goto label2;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean seenExpectedPlaylistError>;

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri expectedPlaylistUrl>;

        interfaceinvoke $r4.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: void maybeThrowPlaylistRefreshError(android.net.Uri)>($r3);

     label2:
        return;
    }

    public androidx.media3.common.TrackGroup getTrackGroup()
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        androidx.media3.common.TrackGroup $r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.TrackGroup trackGroup>;

        return $r1;
    }

    public void setTrackSelection(androidx.media3.exoplayer.trackselection.ExoTrackSelection)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.ExoTrackSelection;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection> = r1;

        return;
    }

    public androidx.media3.exoplayer.trackselection.ExoTrackSelection getTrackSelection()
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        return $r1;
    }

    public void reset()
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: java.io.IOException fatalError> = null;

        return;
    }

    public void setIsTimestampMaster(boolean)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        boolean z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        z0 := @parameter0: boolean;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean isTimestampMaster> = z0;

        return;
    }

    public long getAdjustedSeekPositionUs(long, androidx.media3.exoplayer.SeekParameters)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        long l0, l2, l3, l5, $l7, $l8, $l11, $l12, l15;
        androidx.media3.exoplayer.SeekParameters r1;
        int i1, i4, $i6, $i9, $i10, $i13, $i14;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r2, $r20;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r3, $r16;
        android.net.Uri[] $r4, $r18;
        java.util.List $r5, $r7, $r9, $r12, $r13;
        boolean $z0, $z1;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r6, $r17;
        java.lang.Long $r8;
        java.lang.Object $r10, $r14;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment $r11, $r15;
        android.net.Uri $r19;
        java.lang.Comparable r21;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.exoplayer.SeekParameters;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        i1 = interfaceinvoke $r3.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getSelectedIndex()>();

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri[] playlistUrls>;

        $i6 = lengthof $r4;

        if i1 >= $i6 goto label1;

        if i1 == -1 goto label1;

        $r17 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $r18 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri[] playlistUrls>;

        $r16 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i14 = interfaceinvoke $r16.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getSelectedIndexInTrackGroup()>();

        $r19 = $r18[$i14];

        $r20 = interfaceinvoke $r17.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot(android.net.Uri,boolean)>($r19, 1);

        goto label2;

     label1:
        $r20 = null;

     label2:
        r2 = $r20;

        if r2 == null goto label3;

        $r5 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $z1 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasIndependentSegments>;

        if $z1 != 0 goto label4;

     label3:
        return l0;

     label4:
        $l7 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startTimeUs>;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $l8 = interfaceinvoke $r6.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: long getInitialStartTimeUs()>();

        l2 = $l7 - $l8;

        l3 = l0 - l2;

        $r7 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        r21 = (java.lang.Comparable) $r8;

        i4 = staticinvoke <androidx.media3.common.util.Util: int binarySearchFloor(java.util.List,java.lang.Comparable,boolean,boolean)>($r7, r21, 1, 1);

        $r9 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i4);

        $r11 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment) $r10;

        l5 = $r11.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long relativeStartTimeUs>;

        l15 = l5;

        $r12 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i9 = interfaceinvoke $r12.<java.util.List: int size()>();

        $i10 = $i9 - 1;

        if i4 == $i10 goto label5;

        $r13 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i13 = i4 + 1;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>($i13);

        $r15 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment) $r14;

        l15 = $r15.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long relativeStartTimeUs>;

     label5:
        $l11 = virtualinvoke r1.<androidx.media3.exoplayer.SeekParameters: long resolveSeekPositionUs(long,long,long)>(l3, l5, l15);

        $l12 = $l11 + l2;

        return $l12;
    }

    public int getChunkPublicationState(androidx.media3.exoplayer.hls.HlsMediaChunk)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        androidx.media3.exoplayer.hls.HlsMediaChunk r1;
        android.net.Uri r2, r6, $r19;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r3, $r11;
        int i0, $i1, $i2, $i6, $i7, $i8, $i9;
        java.util.List r4, $r13, $r20, $r23;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part r5;
        androidx.media3.common.Format $r7;
        androidx.media3.common.TrackGroup $r8;
        android.net.Uri[] $r9;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r10;
        java.lang.Object $r12, $r14, $r21;
        long $l3, $l4, $l5;
        boolean $z0, $z1;
        java.lang.String $r15, $r16, $r17;
        androidx.media3.datasource.DataSpec $r18;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment $r22;
        byte $b10;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        r1 := @parameter0: androidx.media3.exoplayer.hls.HlsMediaChunk;

        $i1 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: int partIndex>;

        if $i1 != -1 goto label1;

        return 1;

     label1:
        $r9 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri[] playlistUrls>;

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.TrackGroup trackGroup>;

        $r7 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.Format trackFormat>;

        $i2 = virtualinvoke $r8.<androidx.media3.common.TrackGroup: int indexOf(androidx.media3.common.Format)>($r7);

        r2 = $r9[$i2];

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $r11 = interfaceinvoke $r10.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot(android.net.Uri,boolean)>(r2, 0);

        $r12 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r11);

        r3 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist) $r12;

        $l4 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: long chunkIndex>;

        $l3 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $l5 = $l4 - $l3;

        i0 = (int) $l5;

        if i0 >= 0 goto label2;

        return 1;

     label2:
        $r13 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i6 = interfaceinvoke $r13.<java.util.List: int size()>();

        if i0 >= $i6 goto label3;

        $r20 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i0);

        $r22 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment) $r21;

        $r23 = $r22.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.util.List parts>;

        goto label4;

     label3:
        $r23 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List trailingParts>;

     label4:
        r4 = $r23;

        $i7 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: int partIndex>;

        $i8 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i7 < $i8 goto label5;

        return 2;

     label5:
        $i9 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: int partIndex>;

        $r14 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>($i9);

        r5 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part) $r14;

        $z0 = r5.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: boolean isPreload>;

        if $z0 == 0 goto label6;

        return 0;

     label6:
        $r16 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.lang.String baseUri>;

        $r15 = r5.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: java.lang.String url>;

        $r17 = staticinvoke <androidx.media3.common.util.UriUtil: java.lang.String resolve(java.lang.String,java.lang.String)>($r16, $r15);

        r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r17);

        $r18 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSpec dataSpec>;

        $r19 = $r18.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $z1 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>(r6, $r19);

        if $z1 == 0 goto label7;

        $b10 = 1;

        goto label8;

     label7:
        $b10 = 2;

     label8:
        return $b10;
    }

    public void getNextChunk(long, long, java.util.List, boolean, androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        long l0, l1, $l3, $l4, $l5, $l8, $l10, $l11, $l12, $l13, $l14, $l15, $l17, l19, l20, l21, l23, l24, $l26;
        java.util.List r1, $r31, $r41, $r43, $r45;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder r2;
        androidx.media3.exoplayer.hls.HlsMediaChunk r3, $r40, $r58;
        int i2, $i7, $i9, $i18, i22, i25;
        android.util.Pair r4, r64;
        android.net.Uri r5, r6, $r47, $r57, r62;
        java.lang.Object $r7, $r15, $r17, $r33, $r44, $r53, $r55;
        androidx.media3.common.Format $r8, $r30;
        androidx.media3.common.TrackGroup $r9;
        android.net.Uri[] $r10, $r49;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r11, $r12, $r14, $r50, $r52;
        java.lang.Long $r16, $r54;
        java.lang.Integer $r18, $r56;
        byte $b6, $b16, $b27;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase $r19, $r23, $r46;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment $r20;
        androidx.media3.exoplayer.source.chunk.Chunk $r21, $r22, $r24, $r25, r68;
        androidx.media3.common.Format[] $r26;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r27, $r32, $r60, $r61;
        androidx.media3.exoplayer.hls.HlsExtractorFactory $r28;
        androidx.media3.datasource.DataSource $r29;
        androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache $r34, $r37;
        androidx.media3.exoplayer.hls.TimestampAdjusterProvider $r35;
        byte[] $r36, $r38;
        androidx.media3.exoplayer.analytics.PlayerId $r39;
        androidx.media3.exoplayer.source.chunk.MediaChunkIterator[] r59;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r63;
        androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder r65, r67;
        androidx.media3.exoplayer.source.BehindLiveWindowException r66;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: java.util.List;

        z0 := @parameter3: boolean;

        r2 := @parameter4: androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder;

        $z3 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label01;

        $r58 = null;

        goto label02;

     label01:
        $r7 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable)>(r1);

        $r58 = (androidx.media3.exoplayer.hls.HlsMediaChunk) $r7;

     label02:
        r3 = $r58;

        if r3 != null goto label03;

        $i18 = -1;

        goto label04;

     label03:
        $r9 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.TrackGroup trackGroup>;

        $r8 = r3.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.Format trackFormat>;

        $i18 = virtualinvoke $r9.<androidx.media3.common.TrackGroup: int indexOf(androidx.media3.common.Format)>($r8);

     label04:
        i2 = $i18;

        l19 = l1 - l0;

        l20 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource: long resolveTimeToLiveEdgeUs(long)>(l0);

        if r3 == null goto label05;

        $z16 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean independentSegments>;

        if $z16 != 0 goto label05;

        l21 = virtualinvoke r3.<androidx.media3.exoplayer.hls.HlsMediaChunk: long getDurationUs()>();

        $l15 = l19 - l21;

        l19 = staticinvoke <java.lang.Math: long max(long,long)>(0L, $l15);

        $b16 = l20 cmp -9223372036854775807L;

        if $b16 == 0 goto label05;

        $l17 = l20 - l21;

        l20 = staticinvoke <java.lang.Math: long max(long,long)>(0L, $l17);

     label05:
        r59 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.source.chunk.MediaChunkIterator[] createMediaChunkIterators(androidx.media3.exoplayer.hls.HlsMediaChunk,long)>(r3, l1);

        $r60 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        interfaceinvoke $r60.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: void updateSelectedTrack(long,long,long,java.util.List,androidx.media3.exoplayer.source.chunk.MediaChunkIterator[])>(l0, l19, l20, r1, r59);

        $r61 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        i22 = interfaceinvoke $r61.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getSelectedIndexInTrackGroup()>();

        if i2 == i22 goto label06;

        $z17 = 1;

        goto label07;

     label06:
        $z17 = 0;

     label07:
        z1 = $z17;

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri[] playlistUrls>;

        r62 = $r10[i22];

        $r11 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $z4 = interfaceinvoke $r11.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: boolean isSnapshotValid(android.net.Uri)>(r62);

        if $z4 != 0 goto label08;

        r2.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: android.net.Uri playlistUrl> = r62;

        $z13 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean seenExpectedPlaylistError>;

        $r57 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri expectedPlaylistUrl>;

        $z14 = virtualinvoke r62.<android.net.Uri: boolean equals(java.lang.Object)>($r57);

        $z15 = $z13 & $z14;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean seenExpectedPlaylistError> = $z15;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri expectedPlaylistUrl> = r62;

        return;

     label08:
        $r12 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        r63 = interfaceinvoke $r12.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot(android.net.Uri,boolean)>(r62, 1);

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r63);

        $z5 = r63.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasIndependentSegments>;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean independentSegments> = $z5;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource: void updateLiveEdgeTimeUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>(r63);

        $l3 = r63.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startTimeUs>;

        $r14 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $l4 = interfaceinvoke $r14.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: long getInitialStartTimeUs()>();

        l23 = $l3 - $l4;

        r4 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.util.Pair getNextMediaSequenceAndPartIndex(androidx.media3.exoplayer.hls.HlsMediaChunk,boolean,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long,long)>(r3, z1, r63, l23, l1);

        $r15 = r4.<android.util.Pair: java.lang.Object first>;

        $r16 = (java.lang.Long) $r15;

        l24 = virtualinvoke $r16.<java.lang.Long: long longValue()>();

        $r17 = r4.<android.util.Pair: java.lang.Object second>;

        $r18 = (java.lang.Integer) $r17;

        i25 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        $l5 = r63.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $b6 = l24 cmp $l5;

        if $b6 >= 0 goto label09;

        if r3 == null goto label09;

        if z1 == 0 goto label09;

        i22 = i2;

        $r49 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri[] playlistUrls>;

        r62 = $r49[i22];

        $r50 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        r63 = interfaceinvoke $r50.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot(android.net.Uri,boolean)>(r62, 1);

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r63);

        $l13 = r63.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startTimeUs>;

        $r52 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $l14 = interfaceinvoke $r52.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: long getInitialStartTimeUs()>();

        l23 = $l13 - $l14;

        r64 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.util.Pair getNextMediaSequenceAndPartIndex(androidx.media3.exoplayer.hls.HlsMediaChunk,boolean,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long,long)>(r3, 0, r63, l23, l1);

        $r53 = r64.<android.util.Pair: java.lang.Object first>;

        $r54 = (java.lang.Long) $r53;

        l24 = virtualinvoke $r54.<java.lang.Long: long longValue()>();

        $r55 = r64.<android.util.Pair: java.lang.Object second>;

        $r56 = (java.lang.Integer) $r55;

        i25 = virtualinvoke $r56.<java.lang.Integer: int intValue()>();

     label09:
        $l26 = r63.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $b27 = l24 cmp $l26;

        if $b27 >= 0 goto label10;

        r66 = new androidx.media3.exoplayer.source.BehindLiveWindowException;

        specialinvoke r66.<androidx.media3.exoplayer.source.BehindLiveWindowException: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: java.io.IOException fatalError> = r66;

        return;

     label10:
        r65 = staticinvoke <androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder getNextSegmentHolder(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long,int)>(r63, l24, i25);

        if r65 != null goto label14;

        $z8 = r63.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasEndTag>;

        if $z8 != 0 goto label11;

        r2.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: android.net.Uri playlistUrl> = r62;

        $z10 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean seenExpectedPlaylistError>;

        $r47 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri expectedPlaylistUrl>;

        $z11 = virtualinvoke r62.<android.net.Uri: boolean equals(java.lang.Object)>($r47);

        $z12 = $z10 & $z11;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean seenExpectedPlaylistError> = $z12;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri expectedPlaylistUrl> = r62;

        return;

     label11:
        if z0 != 0 goto label12;

        $r41 = r63.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $z9 = interfaceinvoke $r41.<java.util.List: boolean isEmpty()>();

        if $z9 == 0 goto label13;

     label12:
        r2.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: boolean endOfStream> = 1;

        return;

     label13:
        r67 = new androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder;

        $r43 = r63.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $r44 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getLast(java.lang.Iterable)>($r43);

        $r46 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase) $r44;

        $l8 = r63.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $r45 = r63.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i9 = interfaceinvoke $r45.<java.util.List: int size()>();

        $l10 = (long) $i9;

        $l11 = $l8 + $l10;

        $l12 = $l11 - 1L;

        specialinvoke r67.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: void <init>(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase,long,int)>($r46, $l12, -1);

        r65 = r67;

     label14:
        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean seenExpectedPlaylistError> = 0;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri expectedPlaylistUrl> = null;

        $r19 = r65.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase segmentBase>;

        $r20 = $r19.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment initializationSegment>;

        r5 = staticinvoke <androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri getFullEncryptionKeyUri(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase)>(r63, $r20);

        $r21 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.source.chunk.Chunk maybeCreateEncryptionChunkFor(android.net.Uri,int)>(r5, i22);

        r2.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: androidx.media3.exoplayer.source.chunk.Chunk chunk> = $r21;

        $r22 = r2.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: androidx.media3.exoplayer.source.chunk.Chunk chunk>;

        if $r22 == null goto label15;

        return;

     label15:
        $r23 = r65.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase segmentBase>;

        r6 = staticinvoke <androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri getFullEncryptionKeyUri(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase)>(r63, $r23);

        $r24 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.source.chunk.Chunk maybeCreateEncryptionChunkFor(android.net.Uri,int)>(r6, i22);

        r2.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: androidx.media3.exoplayer.source.chunk.Chunk chunk> = $r24;

        $r25 = r2.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: androidx.media3.exoplayer.source.chunk.Chunk chunk>;

        if $r25 == null goto label16;

        return;

     label16:
        z2 = staticinvoke <androidx.media3.exoplayer.hls.HlsMediaChunk: boolean shouldSpliceIn(androidx.media3.exoplayer.hls.HlsMediaChunk,android.net.Uri,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder,long)>(r3, r62, r63, r65, l23);

        if z2 == 0 goto label17;

        $z7 = r65.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: boolean isPreload>;

        if $z7 == 0 goto label17;

        return;

     label17:
        $r28 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory>;

        $r29 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.datasource.DataSource mediaDataSource>;

        $r26 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.Format[] playlistFormats>;

        $r30 = $r26[i22];

        $r31 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: java.util.List muxedCaptionFormats>;

        $r27 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i7 = interfaceinvoke $r27.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getSelectionReason()>();

        $r32 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $r33 = interfaceinvoke $r32.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: java.lang.Object getSelectionData()>();

        $z6 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean isTimestampMaster>;

        $r35 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.TimestampAdjusterProvider timestampAdjusterProvider>;

        $r34 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache keyCache>;

        $r36 = virtualinvoke $r34.<androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache: byte[] get(android.net.Uri)>(r6);

        $r37 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache keyCache>;

        $r38 = virtualinvoke $r37.<androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache: byte[] get(android.net.Uri)>(r5);

        $r39 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.analytics.PlayerId playerId>;

        $r40 = staticinvoke <androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunk createInstance(androidx.media3.exoplayer.hls.HlsExtractorFactory,androidx.media3.datasource.DataSource,androidx.media3.common.Format,long,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder,android.net.Uri,java.util.List,int,java.lang.Object,boolean,androidx.media3.exoplayer.hls.TimestampAdjusterProvider,androidx.media3.exoplayer.hls.HlsMediaChunk,byte[],byte[],boolean,androidx.media3.exoplayer.analytics.PlayerId)>($r28, $r29, $r30, l23, r63, r65, r62, $r31, $i7, $r33, $z6, $r35, r3, $r36, $r38, z2, $r39);

        r68 = (androidx.media3.exoplayer.source.chunk.Chunk) $r40;

        r2.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: androidx.media3.exoplayer.source.chunk.Chunk chunk> = r68;

        return;
    }

    private static androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder getNextSegmentHolder(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, long, int)
    {
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r0;
        long l0, $l3, $l4, $l9, $l11;
        int i1, i2, $i5, $i6, $i7, $i8, $i10, $i12, $i13, i14;
        java.util.List $r1, $r2, $r4, $r5, $r6, $r8, $r12, $r16, $r20, $r21;
        java.lang.Object $r3, $r9, $r13, $r17, $r22;
        boolean $z0;
        androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder $r7, $r11, $r15, $r19, $r24;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase $r10, $r14, $r18, $r23;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment r25;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $l3 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $l4 = l0 - $l3;

        i2 = (int) $l4;

        $r1 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i5 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i2 != $i5 goto label5;

        if i1 == -1 goto label1;

        $i13 = i1;

        goto label2;

     label1:
        $i13 = 0;

     label2:
        i14 = $i13;

        $r20 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List trailingParts>;

        $i12 = interfaceinvoke $r20.<java.util.List: int size()>();

        if i14 >= $i12 goto label3;

        $r24 = new androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder;

        $r21 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List trailingParts>;

        $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i14);

        $r23 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase) $r22;

        specialinvoke $r24.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: void <init>(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase,long,int)>($r23, l0, i14);

        goto label4;

     label3:
        $r24 = null;

     label4:
        return $r24;

     label5:
        $r2 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r25 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment) $r3;

        if i1 != -1 goto label6;

        $r19 = new androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder;

        specialinvoke $r19.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: void <init>(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase,long,int)>(r25, l0, -1);

        return $r19;

     label6:
        $r4 = r25.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.util.List parts>;

        $i6 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i6 goto label7;

        $r15 = new androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder;

        $r16 = r25.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.util.List parts>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i1);

        $r18 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase) $r17;

        specialinvoke $r15.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: void <init>(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase,long,int)>($r18, l0, i1);

        return $r15;

     label7:
        $i7 = i2 + 1;

        $r5 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i8 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i7 >= $i8 goto label8;

        $r11 = new androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder;

        $r12 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i10 = i2 + 1;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>($i10);

        $r14 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase) $r13;

        $l11 = l0 + 1L;

        specialinvoke $r11.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: void <init>(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase,long,int)>($r14, $l11, -1);

        return $r11;

     label8:
        $r6 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List trailingParts>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label9;

        $r7 = new androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder;

        $r8 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List trailingParts>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase) $r9;

        $l9 = l0 + 1L;

        specialinvoke $r7.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: void <init>(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase,long,int)>($r10, $l9, 0);

        return $r7;

     label9:
        return null;
    }

    public void onChunkLoadCompleted(androidx.media3.exoplayer.source.chunk.Chunk)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        androidx.media3.exoplayer.source.chunk.Chunk r1;
        androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk r2;
        boolean $z0;
        byte[] $r3, $r7, $r9;
        androidx.media3.datasource.DataSpec $r4;
        androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache $r5;
        android.net.Uri $r6;
        java.lang.Object $r8;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.chunk.Chunk;

        $z0 = r1 instanceof androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk;

        if $z0 == 0 goto label1;

        r2 = (androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk) r1;

        $r3 = virtualinvoke r2.<androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk: byte[] getDataHolder()>();

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: byte[] scratchSpace> = $r3;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache keyCache>;

        $r4 = r2.<androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk: androidx.media3.datasource.DataSpec dataSpec>;

        $r6 = $r4.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $r7 = virtualinvoke r2.<androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk: byte[] getResult()>();

        $r8 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r7);

        $r9 = (byte[]) $r8;

        virtualinvoke $r5.<androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache: byte[] put(android.net.Uri,byte[])>($r6, $r9);

     label1:
        return;
    }

    public boolean maybeExcludeTrack(androidx.media3.exoplayer.source.chunk.Chunk, long)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        androidx.media3.exoplayer.source.chunk.Chunk r1;
        long l0;
        androidx.media3.common.Format $r2;
        androidx.media3.common.TrackGroup $r3;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r4, $r5;
        int $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        r1 := @parameter0: androidx.media3.exoplayer.source.chunk.Chunk;

        l0 := @parameter1: long;

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.TrackGroup trackGroup>;

        $r2 = r1.<androidx.media3.exoplayer.source.chunk.Chunk: androidx.media3.common.Format trackFormat>;

        $i1 = virtualinvoke $r3.<androidx.media3.common.TrackGroup: int indexOf(androidx.media3.common.Format)>($r2);

        $i2 = interfaceinvoke $r5.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int indexOf(int)>($i1);

        $z0 = interfaceinvoke $r4.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: boolean blacklist(int,long)>($i2, l0);

        return $z0;
    }

    public boolean onPlaylistError(android.net.Uri, long)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        android.net.Uri r1, $r4, $r8;
        long l0;
        android.net.Uri[] $r2, $r7;
        int $i1, i3, i4, i5;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r3, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        byte $b2;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r6;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        r1 := @parameter0: android.net.Uri;

        l0 := @parameter1: long;

        i3 = -1;

        i4 = 0;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri[] playlistUrls>;

        $i1 = lengthof $r2;

        if i4 >= $i1 goto label3;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri[] playlistUrls>;

        $r8 = $r7[i4];

        $z5 = virtualinvoke $r8.<android.net.Uri: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label2;

        i3 = i4;

        goto label3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        if i3 != -1 goto label4;

        return 1;

     label4:
        $r3 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        i5 = interfaceinvoke $r3.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int indexOf(int)>(i3);

        if i5 != -1 goto label5;

        return 1;

     label5:
        $z0 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean seenExpectedPlaylistError>;

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri expectedPlaylistUrl>;

        $z1 = virtualinvoke r1.<android.net.Uri: boolean equals(java.lang.Object)>($r4);

        $z2 = $z0 | $z1;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean seenExpectedPlaylistError> = $z2;

        $b2 = l0 cmp -9223372036854775807L;

        if $b2 == 0 goto label6;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $z3 = interfaceinvoke $r5.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: boolean blacklist(int,long)>(i5, l0);

        if $z3 == 0 goto label7;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $z4 = interfaceinvoke $r6.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: boolean excludeMediaPlaylist(android.net.Uri,long)>(r1, l0);

        if $z4 == 0 goto label7;

     label6:
        $z6 = 1;

        goto label8;

     label7:
        $z6 = 0;

     label8:
        return $z6;
    }

    public androidx.media3.exoplayer.source.chunk.MediaChunkIterator[] createMediaChunkIterators(androidx.media3.exoplayer.hls.HlsMediaChunk, long)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        androidx.media3.exoplayer.hls.HlsMediaChunk r1;
        long l0, l3, l4, $l7, $l8;
        int i1, i2, i5, $i6, $i9, i10, $i11;
        java.lang.Object[] r2;
        android.net.Uri r3;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r4;
        boolean z0, $z1, $z2;
        android.util.Pair r5;
        androidx.media3.common.Format $r6;
        androidx.media3.common.TrackGroup $r7;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r8, $r9;
        android.net.Uri[] $r10;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r11, $r12, $r14;
        java.lang.Object $r15, $r17;
        java.lang.Long $r16;
        java.lang.Integer $r18;
        java.lang.String $r20;
        java.util.List $r21;
        androidx.media3.exoplayer.source.chunk.MediaChunkIterator $r22;
        androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator r23;
        androidx.media3.exoplayer.source.chunk.MediaChunkIterator[] r24;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        r1 := @parameter0: androidx.media3.exoplayer.hls.HlsMediaChunk;

        l0 := @parameter1: long;

        if r1 != null goto label1;

        $i9 = -1;

        goto label2;

     label1:
        $r7 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.TrackGroup trackGroup>;

        $r6 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.Format trackFormat>;

        $i9 = virtualinvoke $r7.<androidx.media3.common.TrackGroup: int indexOf(androidx.media3.common.Format)>($r6);

     label2:
        i1 = $i9;

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i6 = interfaceinvoke $r8.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int length()>();

        r2 = newarray (androidx.media3.exoplayer.source.chunk.MediaChunkIterator)[$i6];

        i10 = 0;

     label3:
        $i11 = lengthof r2;

        if i10 >= $i11 goto label8;

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        i2 = interfaceinvoke $r9.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getIndexInTrackGroup(int)>(i10);

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri[] playlistUrls>;

        r3 = $r10[i2];

        $r11 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $z1 = interfaceinvoke $r11.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: boolean isSnapshotValid(android.net.Uri)>(r3);

        if $z1 != 0 goto label4;

        $r22 = <androidx.media3.exoplayer.source.chunk.MediaChunkIterator: androidx.media3.exoplayer.source.chunk.MediaChunkIterator EMPTY>;

        r2[i10] = $r22;

        goto label7;

     label4:
        $r12 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        r4 = interfaceinvoke $r12.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot(android.net.Uri,boolean)>(r3, 0);

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $l7 = r4.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long startTimeUs>;

        $r14 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $l8 = interfaceinvoke $r14.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: long getInitialStartTimeUs()>();

        l3 = $l7 - $l8;

        if i2 == i1 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        z0 = $z2;

        r5 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.util.Pair getNextMediaSequenceAndPartIndex(androidx.media3.exoplayer.hls.HlsMediaChunk,boolean,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long,long)>(r1, z0, r4, l3, l0);

        $r15 = r5.<android.util.Pair: java.lang.Object first>;

        $r16 = (java.lang.Long) $r15;

        l4 = virtualinvoke $r16.<java.lang.Long: long longValue()>();

        $r17 = r5.<android.util.Pair: java.lang.Object second>;

        $r18 = (java.lang.Integer) $r17;

        i5 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        r23 = new androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator;

        $r20 = r4.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.lang.String baseUri>;

        $r21 = staticinvoke <androidx.media3.exoplayer.hls.HlsChunkSource: java.util.List getSegmentBaseList(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long,int)>(r4, l4, i5);

        specialinvoke r23.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: void <init>(java.lang.String,long,java.util.List)>($r20, l3, $r21);

        r2[i10] = r23;

     label7:
        i10 = i10 + 1;

        goto label3;

     label8:
        r24 = (androidx.media3.exoplayer.source.chunk.MediaChunkIterator[]) r2;

        return r24;
    }

    public int getPreferredQueueSize(long, java.util.List)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        long l0;
        java.util.List r1;
        java.io.IOException $r2;
        int $i1, $i2, $i3;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r3, $r4;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: java.io.IOException fatalError>;

        if $r2 != null goto label1;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i2 = interfaceinvoke $r3.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int length()>();

        if $i2 >= 2 goto label2;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        return $i1;

     label2:
        $r4 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i3 = interfaceinvoke $r4.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int evaluateQueueSize(long,java.util.List)>(l0, r1);

        return $i3;
    }

    public boolean shouldCancelLoad(long, androidx.media3.exoplayer.source.chunk.Chunk, java.util.List)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        long l0;
        androidx.media3.exoplayer.source.chunk.Chunk r1;
        java.util.List r2;
        java.io.IOException $r3;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r4;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        l0 := @parameter0: long;

        r1 := @parameter1: androidx.media3.exoplayer.source.chunk.Chunk;

        r2 := @parameter2: java.util.List;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: java.io.IOException fatalError>;

        if $r3 == null goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $z0 = interfaceinvoke $r4.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: boolean shouldCancelChunkLoad(long,androidx.media3.exoplayer.source.chunk.Chunk,java.util.List)>(l0, r1, r2);

        return $z0;
    }

    static java.util.List getSegmentBaseList(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, long, int)
    {
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r0;
        long l0, $l1, $l2, $l12;
        java.util.ArrayList r1, $r5;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment r2;
        com.google.common.collect.ImmutableList $r3;
        java.util.List $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        int $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i11, $i14, i15;
        java.lang.Object $r12;
        byte $b13;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        l0 := @parameter1: long;

        i9 := @parameter2: int;

        $l1 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $l2 = l0 - $l1;

        i10 = (int) $l2;

        if i10 < 0 goto label1;

        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i3 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i3 >= i10 goto label2;

     label1:
        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        return $r3;

     label2:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = $r5;

        $r6 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i4 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i10 >= $i4 goto label6;

        if i9 == -1 goto label5;

        $r11 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i10);

        r2 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment) $r12;

        if i9 != 0 goto label3;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

        goto label4;

     label3:
        $r13 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.util.List parts>;

        $i7 = interfaceinvoke $r13.<java.util.List: int size()>();

        if i9 >= $i7 goto label4;

        $r15 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.util.List parts>;

        $r14 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.util.List parts>;

        $i8 = interfaceinvoke $r14.<java.util.List: int size()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.List subList(int,int)>(i9, $i8);

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r16);

     label4:
        i10 = i10 + 1;

     label5:
        i9 = 0;

        $r17 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $r18 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i11 = interfaceinvoke $r18.<java.util.List: int size()>();

        $r19 = interfaceinvoke $r17.<java.util.List: java.util.List subList(int,int)>(i10, $i11);

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r19);

     label6:
        $l12 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long partTargetDurationUs>;

        $b13 = $l12 cmp -9223372036854775807L;

        if $b13 == 0 goto label9;

        if i9 != -1 goto label7;

        $i14 = 0;

        goto label8;

     label7:
        $i14 = i9;

     label8:
        i15 = $i14;

        $r7 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List trailingParts>;

        $i5 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i15 >= $i5 goto label9;

        $r9 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List trailingParts>;

        $r8 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List trailingParts>;

        $i6 = interfaceinvoke $r8.<java.util.List: int size()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.List subList(int,int)>(i15, $i6);

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r10);

     label9:
        $r20 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1);

        return $r20;
    }

    public boolean obtainsChunksForPlaylist(android.net.Uri)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        android.net.Uri r1;
        android.net.Uri[] $r2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: android.net.Uri[] playlistUrls>;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean contains(java.lang.Object[],java.lang.Object)>($r2, r1);

        return $z0;
    }

    private android.util.Pair getNextMediaSequenceAndPartIndex(androidx.media3.exoplayer.hls.HlsMediaChunk, boolean, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, long, long)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        androidx.media3.exoplayer.hls.HlsMediaChunk r1;
        boolean z0, $z1, $z3, $z4, $z5, $z6, $z7;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r2;
        long l0, l1, l2, l3, l4, $l6, $l7, $l8, $l9, $l10, $l11, $l13, $l14, $l15, $l17, $l19, $l21, $l22, $l23, $l28, l29, $l33, $l34;
        int i5, $i20, $i24, $i25, $i26, $i27, i30, i31, $i32, $i35;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment r3;
        java.util.List r4, $r6, $r9, $r12, $r14, $r21;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part r5;
        java.lang.Long $r7, $r15, $r17, $r19, $r23;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r8;
        java.lang.Object $r10, $r11;
        byte $b12, $b16, $b18;
        java.lang.Integer $r16, $r18, $r20, $r24;
        android.util.Pair $r25, r26, r27, r28, r29;
        java.lang.Comparable r30;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        r1 := @parameter0: androidx.media3.exoplayer.hls.HlsMediaChunk;

        z0 := @parameter1: boolean;

        r2 := @parameter2: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        if r1 == null goto label01;

        if z0 == 0 goto label16;

     label01:
        $l6 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long durationUs>;

        l2 = l0 + $l6;

        if r1 == null goto label02;

        $z5 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: boolean independentSegments>;

        if $z5 == 0 goto label03;

     label02:
        $l28 = l1;

        goto label04;

     label03:
        $l28 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: long startTimeUs>;

     label04:
        l3 = $l28;

        $z1 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasEndTag>;

        if $z1 != 0 goto label05;

        $b18 = l3 cmp l2;

        if $b18 < 0 goto label05;

        r26 = new android.util.Pair;

        $l19 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        $r14 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $i20 = interfaceinvoke $r14.<java.util.List: int size()>();

        $l21 = (long) $i20;

        $l22 = $l19 + $l21;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l22);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke r26.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r15, $r16);

        return r26;

     label05:
        l4 = l3 - l0;

        $r6 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $z3 = interfaceinvoke $r8.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: boolean isLive()>();

        if $z3 == 0 goto label06;

        if r1 != null goto label07;

     label06:
        $z7 = 1;

        goto label08;

     label07:
        $z7 = 0;

     label08:
        r30 = (java.lang.Comparable) $r7;

        i5 = staticinvoke <androidx.media3.common.util.Util: int binarySearchFloor(java.util.List,java.lang.Comparable,boolean,boolean)>($r6, r30, 1, $z7);

        $l8 = (long) i5;

        $l7 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long mediaSequence>;

        l29 = $l8 + $l7;

        i30 = -1;

        if i5 < 0 goto label15;

        $r9 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List segments>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i5);

        r3 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment) $r10;

        $l10 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long relativeStartTimeUs>;

        $l9 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long durationUs>;

        $l11 = $l10 + $l9;

        $b12 = l4 cmp $l11;

        if $b12 >= 0 goto label09;

        $r21 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.util.List parts>;

        goto label10;

     label09:
        $r21 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List trailingParts>;

     label10:
        r4 = $r21;

        i31 = 0;

     label11:
        $i32 = interfaceinvoke r4.<java.util.List: int size()>();

        if i31 >= $i32 goto label15;

        $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i31);

        r5 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part) $r11;

        $l14 = r5.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: long relativeStartTimeUs>;

        $l13 = r5.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: long durationUs>;

        $l15 = $l14 + $l13;

        $b16 = l4 cmp $l15;

        if $b16 >= 0 goto label14;

        $z4 = r5.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: boolean isIndependent>;

        if $z4 == 0 goto label15;

        i30 = i31;

        $l17 = l29;

        $r12 = r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.util.List trailingParts>;

        if r4 != $r12 goto label12;

        $l33 = 1L;

        goto label13;

     label12:
        $l33 = 0L;

     label13:
        l29 = $l17 + $l33;

        goto label15;

     label14:
        i31 = i31 + 1;

        goto label11;

     label15:
        r27 = new android.util.Pair;

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l29);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i30);

        specialinvoke r27.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r23, $r24);

        return r27;

     label16:
        $z6 = virtualinvoke r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isLoadCompleted()>();

        if $z6 == 0 goto label21;

        r28 = new android.util.Pair;

        $r25 = r28;

        $i25 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: int partIndex>;

        if $i25 != -1 goto label17;

        $l34 = virtualinvoke r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: long getNextChunkIndex()>();

        goto label18;

     label17:
        $l34 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: long chunkIndex>;

     label18:
        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l34);

        $i26 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: int partIndex>;

        if $i26 != -1 goto label19;

        $i35 = -1;

        goto label20;

     label19:
        $i27 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: int partIndex>;

        $i35 = $i27 + 1;

     label20:
        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i35);

        specialinvoke r28.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r19, $r20);

        goto label22;

     label21:
        r29 = new android.util.Pair;

        $r25 = r29;

        $l23 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: long chunkIndex>;

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l23);

        $i24 = r1.<androidx.media3.exoplayer.hls.HlsMediaChunk: int partIndex>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i24);

        specialinvoke r29.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r17, $r18);

     label22:
        return $r25;
    }

    private long resolveTimeToLiveEdgeUs(long)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        long l0, $l1, $l3, $l4;
        boolean z0, $z1;
        byte $b2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        l0 := @parameter0: long;

        $l1 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: long liveEdgeInPeriodTimeUs>;

        $b2 = $l1 cmp -9223372036854775807L;

        if $b2 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $l3 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: long liveEdgeInPeriodTimeUs>;

        $l4 = $l3 - l0;

        goto label4;

     label3:
        $l4 = -9223372036854775807L;

     label4:
        return $l4;
    }

    private void updateLiveEdgeTimeUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1;
        boolean $z0;
        long $l0, $l1, $l2;
        androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        $z0 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasEndTag>;

        if $z0 == 0 goto label1;

        $l2 = -9223372036854775807L;

        goto label2;

     label1:
        $l0 = virtualinvoke r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: long getEndTimeUs()>();

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker>;

        $l1 = interfaceinvoke $r2.<androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker: long getInitialStartTimeUs()>();

        $l2 = $l0 - $l1;

     label2:
        r0.<androidx.media3.exoplayer.hls.HlsChunkSource: long liveEdgeInPeriodTimeUs> = $l2;

        return;
    }

    private androidx.media3.exoplayer.source.chunk.Chunk maybeCreateEncryptionChunkFor(android.net.Uri, int)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource r0;
        android.net.Uri r1;
        int i0, $i1;
        byte[] r2, $r15;
        androidx.media3.datasource.DataSpec r3;
        androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache $r4, $r16;
        androidx.media3.datasource.DataSpec$Builder $r6, $r7, r18;
        androidx.media3.common.Format[] $r9;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r10, $r13;
        androidx.media3.datasource.DataSource $r11;
        androidx.media3.common.Format $r12;
        java.lang.Object $r14;
        androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk r19;
        androidx.media3.exoplayer.source.chunk.Chunk r20;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache keyCache>;

        r2 = virtualinvoke $r4.<androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache: byte[] remove(android.net.Uri)>(r1);

        if r2 == null goto label2;

        $r16 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache keyCache>;

        virtualinvoke $r16.<androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache: byte[] put(android.net.Uri,byte[])>(r1, r2);

        return null;

     label2:
        r18 = new androidx.media3.datasource.DataSpec$Builder;

        specialinvoke r18.<androidx.media3.datasource.DataSpec$Builder: void <init>()>();

        $r6 = virtualinvoke r18.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setUri(android.net.Uri)>(r1);

        $r7 = virtualinvoke $r6.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setFlags(int)>(1);

        r3 = virtualinvoke $r7.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec build()>();

        r19 = new androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk;

        $r11 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.datasource.DataSource encryptionDataSource>;

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.common.Format[] playlistFormats>;

        $r12 = $r9[i0];

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $i1 = interfaceinvoke $r10.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: int getSelectionReason()>();

        $r13 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection>;

        $r14 = interfaceinvoke $r13.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: java.lang.Object getSelectionData()>();

        $r15 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource: byte[] scratchSpace>;

        specialinvoke r19.<androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk: void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,int,java.lang.Object,byte[])>($r11, r3, $r12, $i1, $r14, $r15);

        r20 = (androidx.media3.exoplayer.source.chunk.Chunk) r19;

        return r20;
    }

    private static android.net.Uri getFullEncryptionKeyUri(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase)
    {
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase r1;
        java.lang.String $r2, $r3, $r4;
        android.net.Uri $r5;

        r0 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        r1 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase;

        if r1 == null goto label1;

        $r2 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: java.lang.String fullSegmentEncryptionKeyUri>;

        if $r2 != null goto label2;

     label1:
        return null;

     label2:
        $r4 = r0.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.lang.String baseUri>;

        $r3 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: java.lang.String fullSegmentEncryptionKeyUri>;

        $r5 = staticinvoke <androidx.media3.common.util.UriUtil: android.net.Uri resolveToUri(java.lang.String,java.lang.String)>($r4, $r3);

        return $r5;
    }

androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk
<androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk: byte[] result>
    public void <init>(androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSpec, androidx.media3.common.Format, int, java.lang.Object, byte[])
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk r0;
        androidx.media3.datasource.DataSource r1;
        androidx.media3.datasource.DataSpec r2;
        androidx.media3.common.Format r3;
        int i0;
        java.lang.Object r4;
        byte[] r5;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        r3 := @parameter2: androidx.media3.common.Format;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.Object;

        r5 := @parameter5: byte[];

        specialinvoke r0.<androidx.media3.exoplayer.source.chunk.DataChunk: void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,int,androidx.media3.common.Format,int,java.lang.Object,byte[])>(r1, r2, 3, r3, i0, r4, r5);

        return;
    }

    protected void consume(byte[], int)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk r0;
        byte[] r1, $r2;
        int i0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r2 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r1, i0);

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk: byte[] result> = $r2;

        return;
    }

    public byte[] getResult()
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk r0;
        byte[] $r1;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk: byte[] result>;

        return $r1;
    }

androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder
<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: androidx.media3.exoplayer.source.chunk.Chunk chunk>
<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: boolean endOfStream>
<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: android.net.Uri playlistUrl>
    public void <init>()
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder r0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: void clear()>();

        return;
    }

    public void clear()
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder r0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: androidx.media3.exoplayer.source.chunk.Chunk chunk> = null;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: boolean endOfStream> = 0;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder: android.net.Uri playlistUrl> = null;

        return;
    }

androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator
<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: java.util.List segmentBases>
<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: long startOfPlaylistInPeriodUs>
<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: java.lang.String playlistBaseUri>
    public void <init>(java.lang.String, long, java.util.List)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator r0;
        java.lang.String r1;
        long l0, $l3;
        java.util.List r2;
        int $i1, $i2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.List;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $l3 = (long) $i2;

        specialinvoke r0.<androidx.media3.exoplayer.source.chunk.BaseMediaChunkIterator: void <init>(long,long)>(0L, $l3);

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: java.lang.String playlistBaseUri> = r1;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: long startOfPlaylistInPeriodUs> = l0;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: java.util.List segmentBases> = r2;

        return;
    }

    public androidx.media3.datasource.DataSpec getDataSpec()
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase r1;
        android.net.Uri r2;
        java.util.List $r3;
        long $l0, $l2, $l3;
        int $i1;
        java.lang.Object $r4;
        java.lang.String $r5, $r6;
        androidx.media3.datasource.DataSpec $r7;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: void checkInBounds()>();

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: java.util.List segmentBases>;

        $l0 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: long getCurrentIndex()>();

        $i1 = (int) $l0;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        r1 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase) $r4;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: java.lang.String playlistBaseUri>;

        $r5 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: java.lang.String url>;

        r2 = staticinvoke <androidx.media3.common.util.UriUtil: android.net.Uri resolveToUri(java.lang.String,java.lang.String)>($r6, $r5);

        $r7 = new androidx.media3.datasource.DataSpec;

        $l3 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: long byteRangeOffset>;

        $l2 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: long byteRangeLength>;

        specialinvoke $r7.<androidx.media3.datasource.DataSpec: void <init>(android.net.Uri,long,long)>(r2, $l3, $l2);

        return $r7;
    }

    public long getChunkStartTimeUs()
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator r0;
        long $l0, $l1, $l3, $l4;
        java.util.List $r1;
        int $i2;
        java.lang.Object $r2;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase $r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: void checkInBounds()>();

        $l0 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: long startOfPlaylistInPeriodUs>;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: java.util.List segmentBases>;

        $l1 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: long getCurrentIndex()>();

        $i2 = (int) $l1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);

        $r3 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase) $r2;

        $l3 = $r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: long relativeStartTimeUs>;

        $l4 = $l0 + $l3;

        return $l4;
    }

    public long getChunkEndTimeUs()
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase r1;
        long l0, $l1, $l3, $l4, $l5, $l6;
        java.util.List $r2;
        int $i2;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator;

        virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: void checkInBounds()>();

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: java.util.List segmentBases>;

        $l1 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: long getCurrentIndex()>();

        $i2 = (int) $l1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        r1 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase) $r3;

        $l4 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: long startOfPlaylistInPeriodUs>;

        $l3 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: long relativeStartTimeUs>;

        l0 = $l4 + $l3;

        $l5 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: long durationUs>;

        $l6 = l0 + $l5;

        return $l6;
    }

androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection
<androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection: int selectedIndex>
    public void <init>(androidx.media3.common.TrackGroup, int[])
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection r0;
        androidx.media3.common.TrackGroup r1;
        int[] r2;
        int $i0, $i1;
        androidx.media3.common.Format $r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection;

        r1 := @parameter0: androidx.media3.common.TrackGroup;

        r2 := @parameter1: int[];

        specialinvoke r0.<androidx.media3.exoplayer.trackselection.BaseTrackSelection: void <init>(androidx.media3.common.TrackGroup,int[])>(r1, r2);

        $i0 = r2[0];

        $r3 = virtualinvoke r1.<androidx.media3.common.TrackGroup: androidx.media3.common.Format getFormat(int)>($i0);

        $i1 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection: int indexOf(androidx.media3.common.Format)>($r3);

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection: int selectedIndex> = $i1;

        return;
    }

    public void updateSelectedTrack(long, long, long, java.util.List, androidx.media3.exoplayer.source.chunk.MediaChunkIterator[])
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection r0;
        long l0, l1, l2, l3;
        java.util.List r1;
        androidx.media3.exoplayer.source.chunk.MediaChunkIterator[] r2;
        int $i4, $i5, i6;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        r1 := @parameter3: java.util.List;

        r2 := @parameter4: androidx.media3.exoplayer.source.chunk.MediaChunkIterator[];

        l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $i4 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection: int selectedIndex>;

        $z0 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection: boolean isBlacklisted(int,long)>($i4, l3);

        if $z0 != 0 goto label1;

        return;

     label1:
        $i5 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection: int length>;

        i6 = $i5 - 1;

     label2:
        if i6 < 0 goto label4;

        $z1 = virtualinvoke r0.<androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection: boolean isBlacklisted(int,long)>(i6, l3);

        if $z1 != 0 goto label3;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection: int selectedIndex> = i6;

        return;

     label3:
        i6 = i6 + -1;

        goto label2;

     label4:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;
    }

    public int getSelectedIndex()
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection;

        $i0 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection: int selectedIndex>;

        return $i0;
    }

    public int getSelectionReason()
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection r0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection;

        return 0;
    }

    public java.lang.Object getSelectionData()
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection r0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection;

        return null;
    }

androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder
<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase segmentBase>
<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: long mediaSequence>
<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: int partIndex>
<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: boolean isPreload>
    public void <init>(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase, long, int)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase r1;
        long l0;
        int i1;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part $r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder;

        r1 := @parameter0: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase segmentBase> = r1;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: long mediaSequence> = l0;

        r0.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: int partIndex> = i1;

        $z0 = r1 instanceof androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part;

        if $z0 == 0 goto label1;

        $r2 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part) r1;

        $z1 = $r2.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: boolean isPreload>;

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: boolean isPreload> = $z2;

        return;
    }

