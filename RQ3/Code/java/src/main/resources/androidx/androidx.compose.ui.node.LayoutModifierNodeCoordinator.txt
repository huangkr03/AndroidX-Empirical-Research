androidx.compose.ui.node.LayoutModifierNodeCoordinator
<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNodeCoordinator$Companion Companion>
<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode layoutModifierNode>
<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.IntermediateLayoutModifierNode lookAheadTransientMeasureNode>
<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.graphics.Paint modifierBoundsPaint>
    public void <init>(androidx.compose.ui.node.LayoutNode, androidx.compose.ui.node.LayoutModifierNode)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0, r5;
        androidx.compose.ui.node.LayoutNode r1;
        androidx.compose.ui.node.LayoutModifierNode r2;
        androidx.compose.ui.Modifier$Node r4;
        int i0, $i1, $i2;
        androidx.compose.ui.node.Nodes $r6;
        boolean $z2, $z3;
        androidx.compose.ui.node.IntermediateLayoutModifierNode $r7;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        r1 := @parameter0: androidx.compose.ui.node.LayoutNode;

        r2 := @parameter1: androidx.compose.ui.node.LayoutModifierNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "layoutNode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measureNode");

        specialinvoke r0.<androidx.compose.ui.node.NodeCoordinator: void <init>(androidx.compose.ui.node.LayoutNode)>(r1);

        r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode layoutModifierNode> = r2;

        r5 = r0;

        r4 = interfaceinvoke r2.<androidx.compose.ui.node.LayoutModifierNode: androidx.compose.ui.Modifier$Node getNode()>();

        $r6 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i0 = virtualinvoke $r6.<androidx.compose.ui.node.Nodes: int getIntermediateMeasure-OLwlOKw()>();

        $i1 = virtualinvoke r4.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label3;

        $z2 = r2 instanceof androidx.compose.ui.node.IntermediateLayoutModifierNode;

        if $z2 == 0 goto label3;

        $r7 = (androidx.compose.ui.node.IntermediateLayoutModifierNode) r2;

        goto label4;

     label3:
        $r7 = null;

     label4:
        r5.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.IntermediateLayoutModifierNode lookAheadTransientMeasureNode> = $r7;

        return;
    }

    public final androidx.compose.ui.node.LayoutModifierNode getLayoutModifierNode()
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        androidx.compose.ui.node.LayoutModifierNode $r1;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        $r1 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode layoutModifierNode>;

        return $r1;
    }

    public final void setLayoutModifierNode$ui_release(androidx.compose.ui.node.LayoutModifierNode)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        androidx.compose.ui.node.LayoutModifierNode r1;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        r1 := @parameter0: androidx.compose.ui.node.LayoutModifierNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode layoutModifierNode> = r1;

        return;
    }

    public androidx.compose.ui.Modifier$Node getTail()
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        androidx.compose.ui.node.LayoutModifierNode $r1;
        androidx.compose.ui.Modifier$Node $r2;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        $r1 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode layoutModifierNode>;

        $r2 = interfaceinvoke $r1.<androidx.compose.ui.node.LayoutModifierNode: androidx.compose.ui.Modifier$Node getNode()>();

        return $r2;
    }

    public final androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        androidx.compose.ui.node.NodeCoordinator $r1;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        $r1 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrapped$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

        return $r1;
    }

    public androidx.compose.ui.node.LookaheadDelegate createLookaheadDelegate(androidx.compose.ui.layout.LookaheadScope)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        androidx.compose.ui.layout.LookaheadScope r1;
        androidx.compose.ui.node.IntermediateLayoutModifierNode r2, $r3;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode $r4;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier $r5;
        androidx.compose.ui.node.LookaheadDelegate $r6;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        r1 := @parameter0: androidx.compose.ui.layout.LookaheadScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "scope");

        $r3 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.IntermediateLayoutModifierNode lookAheadTransientMeasureNode>;

        if $r3 == null goto label1;

        r2 = $r3;

        $r5 = new androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier;

        specialinvoke $r5.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: void <init>(androidx.compose.ui.node.LayoutModifierNodeCoordinator,androidx.compose.ui.layout.LookaheadScope,androidx.compose.ui.node.IntermediateLayoutModifierNode)>(r0, r1, r2);

        $r6 = (androidx.compose.ui.node.LookaheadDelegate) $r5;

        goto label2;

     label1:
        $r4 = new androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode;

        specialinvoke $r4.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: void <init>(androidx.compose.ui.node.LayoutModifierNodeCoordinator,androidx.compose.ui.layout.LookaheadScope)>(r0, r1);

        $r6 = (androidx.compose.ui.node.LookaheadDelegate) $r4;

     label2:
        return $r6;
    }

    public androidx.compose.ui.layout.Placeable measure-BRTryo0(long)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        long l0, $l1;
        androidx.compose.ui.node.NodeCoordinator r1, $r5;
        androidx.compose.ui.node.LayoutModifierNode $r2;
        androidx.compose.ui.layout.Placeable r3, $r9;
        androidx.compose.ui.layout.MeasureScope $r4;
        androidx.compose.ui.layout.Measurable $r6;
        androidx.compose.ui.layout.MeasureResult $r7;
        androidx.compose.ui.node.OwnedLayer $r8;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        l0 := @parameter0: long;

        r1 = (androidx.compose.ui.node.NodeCoordinator) r0;

        staticinvoke <androidx.compose.ui.node.NodeCoordinator: void access$setMeasurementConstraints-BRTryo0(androidx.compose.ui.node.NodeCoordinator,long)>(r1, l0);

        $r2 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode layoutModifierNode>;

        $r4 = (androidx.compose.ui.layout.MeasureScope) r0;

        $r5 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r6 = (androidx.compose.ui.layout.Measurable) $r5;

        $r7 = interfaceinvoke $r2.<androidx.compose.ui.node.LayoutModifierNode: androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope,androidx.compose.ui.layout.Measurable,long)>($r4, $r6, l0);

        virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: void setMeasureResult$ui_release(androidx.compose.ui.layout.MeasureResult)>($r7);

        r3 = (androidx.compose.ui.layout.Placeable) r0;

        $r8 = virtualinvoke r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.OwnedLayer getLayer()>();

        if $r8 == null goto label1;

        $l1 = staticinvoke <androidx.compose.ui.node.NodeCoordinator: long access$getMeasuredSize-YbymL2g(androidx.compose.ui.node.NodeCoordinator)>(r1);

        interfaceinvoke $r8.<androidx.compose.ui.node.OwnedLayer: void resize-ozmzZPI(long)>($l1);

        goto label1;

     label1:
        virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: void onMeasured()>();

        $r9 = (androidx.compose.ui.layout.Placeable) r0;

        return $r9;
    }

    public int minIntrinsicWidth(int)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        int i0, $i1;
        androidx.compose.ui.node.LayoutModifierNode $r1;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r2;
        androidx.compose.ui.node.NodeCoordinator $r3;
        androidx.compose.ui.layout.IntrinsicMeasurable $r4;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode layoutModifierNode>;

        $r2 = (androidx.compose.ui.layout.IntrinsicMeasureScope) r0;

        $r3 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r4 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r3;

        $i1 = interfaceinvoke $r1.<androidx.compose.ui.node.LayoutModifierNode: int minIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r2, $r4, i0);

        return $i1;
    }

    public int maxIntrinsicWidth(int)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        int i0, $i1;
        androidx.compose.ui.node.LayoutModifierNode $r1;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r2;
        androidx.compose.ui.node.NodeCoordinator $r3;
        androidx.compose.ui.layout.IntrinsicMeasurable $r4;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode layoutModifierNode>;

        $r2 = (androidx.compose.ui.layout.IntrinsicMeasureScope) r0;

        $r3 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r4 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r3;

        $i1 = interfaceinvoke $r1.<androidx.compose.ui.node.LayoutModifierNode: int maxIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r2, $r4, i0);

        return $i1;
    }

    public int minIntrinsicHeight(int)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        int i0, $i1;
        androidx.compose.ui.node.LayoutModifierNode $r1;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r2;
        androidx.compose.ui.node.NodeCoordinator $r3;
        androidx.compose.ui.layout.IntrinsicMeasurable $r4;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode layoutModifierNode>;

        $r2 = (androidx.compose.ui.layout.IntrinsicMeasureScope) r0;

        $r3 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r4 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r3;

        $i1 = interfaceinvoke $r1.<androidx.compose.ui.node.LayoutModifierNode: int minIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r2, $r4, i0);

        return $i1;
    }

    public int maxIntrinsicHeight(int)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        int i0, $i1;
        androidx.compose.ui.node.LayoutModifierNode $r1;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r2;
        androidx.compose.ui.node.NodeCoordinator $r3;
        androidx.compose.ui.layout.IntrinsicMeasurable $r4;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode layoutModifierNode>;

        $r2 = (androidx.compose.ui.layout.IntrinsicMeasureScope) r0;

        $r3 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r4 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r3;

        $i1 = interfaceinvoke $r1.<androidx.compose.ui.node.LayoutModifierNode: int maxIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r2, $r4, i0);

        return $i1;
    }

    protected void placeAt-f8xVGno(long, float, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        long l0, $l3;
        float f0;
        kotlin.jvm.functions.Function1 r1;
        androidx.compose.ui.layout.Placeable$PlacementScope$Companion r2, $r8, $r9, $r10, $r11, $r15, $r16;
        int i1, i2;
        androidx.compose.ui.unit.LayoutDirection r3, r5;
        androidx.compose.ui.layout.LayoutCoordinates r4;
        androidx.compose.ui.node.LayoutNodeLayoutDelegate r6;
        boolean z1, $z3;
        androidx.compose.ui.layout.Placeable$PlacementScope $r7;
        androidx.compose.ui.node.LookaheadCapablePlaceable $r12, $r14;
        androidx.compose.ui.layout.MeasureResult $r13;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        specialinvoke r0.<androidx.compose.ui.node.NodeCoordinator: void placeAt-f8xVGno(long,float,kotlin.jvm.functions.Function1)>(l0, f0, r1);

        $z3 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: boolean isShallowPlacing$ui_release()>();

        if $z3 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: void onPlaced()>();

        r2 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        $l3 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: long getMeasuredSize-YbymL2g()>();

        i1 = staticinvoke <androidx.compose.ui.unit.IntSize: int getWidth-impl(long)>($l3);

        r3 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()>();

        r4 = staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.LayoutCoordinates access$get_coordinates$cp()>();

        $r8 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        i2 = staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope$Companion: int access$getParentWidth(androidx.compose.ui.layout.Placeable$PlacementScope$Companion)>($r8);

        $r9 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        r5 = staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope$Companion: androidx.compose.ui.unit.LayoutDirection access$getParentLayoutDirection(androidx.compose.ui.layout.Placeable$PlacementScope$Companion)>($r9);

        r6 = staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.node.LayoutNodeLayoutDelegate access$getLayoutDelegate$cp()>();

        $r10 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void access$setParentWidth$cp(int)>(i1);

        $r11 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void access$setParentLayoutDirection$cp(androidx.compose.ui.unit.LayoutDirection)>(r3);

        $r12 = (androidx.compose.ui.node.LookaheadCapablePlaceable) r0;

        z1 = staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope$Companion: boolean access$configureForPlacingForAlignment(androidx.compose.ui.layout.Placeable$PlacementScope$Companion,androidx.compose.ui.node.LookaheadCapablePlaceable)>(r2, $r12);

        $r7 = (androidx.compose.ui.layout.Placeable$PlacementScope) r2;

        $r13 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.layout.MeasureResult getMeasureResult$ui_release()>();

        interfaceinvoke $r13.<androidx.compose.ui.layout.MeasureResult: void placeChildren()>();

        $r14 = (androidx.compose.ui.node.LookaheadCapablePlaceable) r0;

        if $r14 != null goto label2;

        goto label3;

     label2:
        virtualinvoke $r14.<androidx.compose.ui.node.LookaheadCapablePlaceable: void setPlacingForAlignment$ui_release(boolean)>(z1);

     label3:
        $r15 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void access$setParentWidth$cp(int)>(i2);

        $r16 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void access$setParentLayoutDirection$cp(androidx.compose.ui.unit.LayoutDirection)>(r5);

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void access$set_coordinates$cp(androidx.compose.ui.layout.LayoutCoordinates)>(r4);

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void access$setLayoutDelegate$cp(androidx.compose.ui.node.LayoutNodeLayoutDelegate)>(r6);

        return;
    }

    public void onLayoutModifierNodeChanged()
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        androidx.compose.ui.node.LayoutModifierNode r1;
        androidx.compose.ui.Modifier$Node r2;
        int i0, $i1, $i2;
        androidx.compose.ui.node.Nodes $r3;
        androidx.compose.ui.node.LookaheadDelegate $r4, $r7, $r9, $r13;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode $r5;
        androidx.compose.ui.layout.LookaheadScope $r6, $r11;
        boolean $z1, $z3;
        androidx.compose.ui.node.IntermediateLayoutModifierNode $r8, $r12;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier $r10;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        specialinvoke r0.<androidx.compose.ui.node.NodeCoordinator: void onLayoutModifierNodeChanged()>();

        r1 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode layoutModifierNode>;

        r2 = interfaceinvoke r1.<androidx.compose.ui.node.LayoutModifierNode: androidx.compose.ui.Modifier$Node getNode()>();

        $r3 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i0 = virtualinvoke $r3.<androidx.compose.ui.node.Nodes: int getIntermediateMeasure-OLwlOKw()>();

        $i1 = virtualinvoke r2.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label4;

        $z1 = r1 instanceof androidx.compose.ui.node.IntermediateLayoutModifierNode;

        if $z1 == 0 goto label4;

        $r8 = (androidx.compose.ui.node.IntermediateLayoutModifierNode) r1;

        r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.IntermediateLayoutModifierNode lookAheadTransientMeasureNode> = $r8;

        $r9 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        if $r9 == null goto label3;

        $r10 = new androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier;

        $r11 = virtualinvoke $r9.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.LookaheadScope getLookaheadScope()>();

        $r12 = (androidx.compose.ui.node.IntermediateLayoutModifierNode) r1;

        specialinvoke $r10.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: void <init>(androidx.compose.ui.node.LayoutModifierNodeCoordinator,androidx.compose.ui.layout.LookaheadScope,androidx.compose.ui.node.IntermediateLayoutModifierNode)>(r0, $r11, $r12);

        $r13 = (androidx.compose.ui.node.LookaheadDelegate) $r10;

        virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: void updateLookaheadDelegate(androidx.compose.ui.node.LookaheadDelegate)>($r13);

        goto label5;

     label3:
        goto label5;

     label4:
        r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.IntermediateLayoutModifierNode lookAheadTransientMeasureNode> = null;

        $r4 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        if $r4 == null goto label5;

        $r5 = new androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode;

        $r6 = virtualinvoke $r4.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.LookaheadScope getLookaheadScope()>();

        specialinvoke $r5.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: void <init>(androidx.compose.ui.node.LayoutModifierNodeCoordinator,androidx.compose.ui.layout.LookaheadScope)>(r0, $r6);

        $r7 = (androidx.compose.ui.node.LookaheadDelegate) $r5;

        virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: void updateLookaheadDelegate(androidx.compose.ui.node.LookaheadDelegate)>($r7);

        goto label5;

     label5:
        return;
    }

    public int calculateAlignmentLine(androidx.compose.ui.layout.AlignmentLine)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        androidx.compose.ui.layout.AlignmentLine r1;
        androidx.compose.ui.node.LookaheadDelegate $r2;
        androidx.compose.ui.node.LookaheadCapablePlaceable $r3;
        int $i0;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        r1 := @parameter0: androidx.compose.ui.layout.AlignmentLine;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "alignmentLine");

        $r2 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<androidx.compose.ui.node.LookaheadDelegate: int getCachedAlignmentLine$ui_release(androidx.compose.ui.layout.AlignmentLine)>(r1);

        goto label2;

     label1:
        $r3 = (androidx.compose.ui.node.LookaheadCapablePlaceable) r0;

        $i0 = staticinvoke <androidx.compose.ui.node.LayoutModifierNodeCoordinatorKt: int access$calculateAlignmentAndPlaceChildAsNeeded(androidx.compose.ui.node.LookaheadCapablePlaceable,androidx.compose.ui.layout.AlignmentLine)>($r3, r1);

     label2:
        return $i0;
    }

    public void performDraw(androidx.compose.ui.graphics.Canvas)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r0;
        androidx.compose.ui.graphics.Canvas r1;
        androidx.compose.ui.node.NodeCoordinator $r2;
        androidx.compose.ui.node.LayoutNode $r3;
        androidx.compose.ui.node.Owner $r4;
        boolean $z0;
        androidx.compose.ui.graphics.Paint $r5;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        r1 := @parameter0: androidx.compose.ui.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        $r2 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        virtualinvoke $r2.<androidx.compose.ui.node.NodeCoordinator: void draw(androidx.compose.ui.graphics.Canvas)>(r1);

        $r3 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        $r4 = staticinvoke <androidx.compose.ui.node.LayoutNodeKt: androidx.compose.ui.node.Owner requireOwner(androidx.compose.ui.node.LayoutNode)>($r3);

        $z0 = interfaceinvoke $r4.<androidx.compose.ui.node.Owner: boolean getShowLayoutBounds()>();

        if $z0 == 0 goto label1;

        $r5 = <androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.graphics.Paint modifierBoundsPaint>;

        virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: void drawBorder(androidx.compose.ui.graphics.Canvas,androidx.compose.ui.graphics.Paint)>(r1, $r5);

     label1:
        return;
    }

    public static final androidx.compose.ui.graphics.Paint access$getModifierBoundsPaint$cp()
    {
        androidx.compose.ui.graphics.Paint $r0;

        $r0 = <androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.graphics.Paint modifierBoundsPaint>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.compose.ui.graphics.Paint r0, r1;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$Companion $r2;
        androidx.compose.ui.graphics.Color$Companion $r3;
        long $l0;
        androidx.compose.ui.graphics.PaintingStyle$Companion $r4;
        int $i1;

        $r2 = new androidx.compose.ui.node.LayoutModifierNodeCoordinator$Companion;

        specialinvoke $r2.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNodeCoordinator$Companion Companion> = $r2;

        r0 = staticinvoke <androidx.compose.ui.graphics.AndroidPaint_androidKt: androidx.compose.ui.graphics.Paint Paint()>();

        r1 = r0;

        $r3 = <androidx.compose.ui.graphics.Color: androidx.compose.ui.graphics.Color$Companion Companion>;

        $l0 = virtualinvoke $r3.<androidx.compose.ui.graphics.Color$Companion: long getBlue-0d7_KjU()>();

        interfaceinvoke r1.<androidx.compose.ui.graphics.Paint: void setColor-8_81llA(long)>($l0);

        interfaceinvoke r1.<androidx.compose.ui.graphics.Paint: void setStrokeWidth(float)>(1.0F);

        $r4 = <androidx.compose.ui.graphics.PaintingStyle: androidx.compose.ui.graphics.PaintingStyle$Companion Companion>;

        $i1 = virtualinvoke $r4.<androidx.compose.ui.graphics.PaintingStyle$Companion: int getStroke-TiuSbCo()>();

        interfaceinvoke r1.<androidx.compose.ui.graphics.Paint: void setStyle-k9PVt8s(int)>($i1);

        <androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.graphics.Paint modifierBoundsPaint> = r0;

        return;
    }

androidx.compose.ui.node.LayoutModifierNodeCoordinator$Companion
    private void <init>()
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$Companion r0;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.compose.ui.graphics.Paint getModifierBoundsPaint()
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$Companion r0;
        androidx.compose.ui.graphics.Paint $r1;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$Companion;

        $r1 = staticinvoke <androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.graphics.Paint access$getModifierBoundsPaint$cp()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$Companion: void <init>()>();

        return;
    }

androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult
<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult: java.util.Map alignmentLines>
<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier this$0>
    public void <init>(androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult r0;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier r1;
        java.util.Map $r2;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult;

        r1 := @parameter0: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier;

        r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult: java.util.Map alignmentLines> = $r2;

        return;
    }

    public int getWidth()
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult r0;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier $r1;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator $r2;
        androidx.compose.ui.node.NodeCoordinator $r3;
        androidx.compose.ui.node.LookaheadDelegate $r4;
        androidx.compose.ui.layout.MeasureResult $r5;
        int $i0;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult;

        $r1 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier this$0>;

        $r2 = $r1.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r4 = virtualinvoke $r3.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r4.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.MeasureResult getMeasureResult$ui_release()>();

        $i0 = interfaceinvoke $r5.<androidx.compose.ui.layout.MeasureResult: int getWidth()>();

        return $i0;
    }

    public int getHeight()
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult r0;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier $r1;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator $r2;
        androidx.compose.ui.node.NodeCoordinator $r3;
        androidx.compose.ui.node.LookaheadDelegate $r4;
        androidx.compose.ui.layout.MeasureResult $r5;
        int $i0;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult;

        $r1 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier this$0>;

        $r2 = $r1.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r4 = virtualinvoke $r3.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r4.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.MeasureResult getMeasureResult$ui_release()>();

        $i0 = interfaceinvoke $r5.<androidx.compose.ui.layout.MeasureResult: int getHeight()>();

        return $i0;
    }

    public java.util.Map getAlignmentLines()
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult r0;
        java.util.Map $r1;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult;

        $r1 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult: java.util.Map alignmentLines>;

        return $r1;
    }

    public void placeChildren()
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult r0;
        androidx.compose.ui.layout.Placeable$PlacementScope$Companion r1;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r2;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier $r3;
        androidx.compose.ui.layout.Placeable$PlacementScope $r4;
        androidx.compose.ui.node.NodeCoordinator $r5;
        androidx.compose.ui.node.LookaheadDelegate $r6;
        androidx.compose.ui.layout.Placeable $r7;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult;

        r1 = <androidx.compose.ui.layout.Placeable$PlacementScope: androidx.compose.ui.layout.Placeable$PlacementScope$Companion Companion>;

        $r3 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier this$0>;

        r2 = $r3.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>;

        $r4 = (androidx.compose.ui.layout.Placeable$PlacementScope) r1;

        $r5 = virtualinvoke r2.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r6 = virtualinvoke $r5.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r6);

        $r7 = (androidx.compose.ui.layout.Placeable) $r6;

        staticinvoke <androidx.compose.ui.layout.Placeable$PlacementScope: void place$default(androidx.compose.ui.layout.Placeable$PlacementScope,androidx.compose.ui.layout.Placeable,int,int,float,int,java.lang.Object)>($r4, $r7, 0, 0, 0.0F, 4, null);

        return;
    }

androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier
<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: androidx.compose.ui.node.IntermediateLayoutModifierNode intermediateMeasureNode>
<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult passThroughMeasureResult>
<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>
    public void <init>(androidx.compose.ui.node.LayoutModifierNodeCoordinator, androidx.compose.ui.layout.LookaheadScope, androidx.compose.ui.node.IntermediateLayoutModifierNode)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier r0;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r1;
        androidx.compose.ui.layout.LookaheadScope r2;
        androidx.compose.ui.node.IntermediateLayoutModifierNode r3;
        androidx.compose.ui.node.NodeCoordinator $r4;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult $r5;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier;

        r1 := @parameter0: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        r2 := @parameter1: androidx.compose.ui.layout.LookaheadScope;

        r3 := @parameter2: androidx.compose.ui.node.IntermediateLayoutModifierNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "scope");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "intermediateMeasureNode");

        r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0> = r1;

        $r4 = (androidx.compose.ui.node.NodeCoordinator) r1;

        specialinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: void <init>(androidx.compose.ui.node.NodeCoordinator,androidx.compose.ui.layout.LookaheadScope)>($r4, r2);

        r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: androidx.compose.ui.node.IntermediateLayoutModifierNode intermediateMeasureNode> = r3;

        $r5 = new androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult;

        specialinvoke $r5.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult: void <init>(androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier)>(r0);

        r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult passThroughMeasureResult> = $r5;

        return;
    }

    public final androidx.compose.ui.node.IntermediateLayoutModifierNode getIntermediateMeasureNode()
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier r0;
        androidx.compose.ui.node.IntermediateLayoutModifierNode $r1;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier;

        $r1 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: androidx.compose.ui.node.IntermediateLayoutModifierNode intermediateMeasureNode>;

        return $r1;
    }

    public androidx.compose.ui.layout.Placeable measure-BRTryo0(long)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier r0;
        long l0, $l3;
        androidx.compose.ui.node.IntermediateLayoutModifierNode r1;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r2;
        androidx.compose.ui.node.LookaheadDelegate r3, r4, $r7;
        androidx.compose.ui.node.NodeCoordinator $r6;
        androidx.compose.ui.layout.MeasureResult $r9, $r10, $r12;
        int $i1, $i2;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult $r11;
        androidx.compose.ui.layout.Placeable $r13;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier;

        l0 := @parameter0: long;

        r1 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: androidx.compose.ui.node.IntermediateLayoutModifierNode intermediateMeasureNode>;

        r2 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>;

        r3 = (androidx.compose.ui.node.LookaheadDelegate) r0;

        staticinvoke <androidx.compose.ui.node.LookaheadDelegate: void access$setMeasurementConstraints-BRTryo0(androidx.compose.ui.node.LookaheadDelegate,long)>(r3, l0);

        r4 = r3;

        $r6 = virtualinvoke r2.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r7 = virtualinvoke $r6.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r7);

        virtualinvoke $r7.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.Placeable measure-BRTryo0(long)>(l0);

        $r9 = virtualinvoke $r7.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.MeasureResult getMeasureResult$ui_release()>();

        $i1 = interfaceinvoke $r9.<androidx.compose.ui.layout.MeasureResult: int getWidth()>();

        $r10 = virtualinvoke $r7.<androidx.compose.ui.node.LookaheadDelegate: androidx.compose.ui.layout.MeasureResult getMeasureResult$ui_release()>();

        $i2 = interfaceinvoke $r10.<androidx.compose.ui.layout.MeasureResult: int getHeight()>();

        $l3 = staticinvoke <androidx.compose.ui.unit.IntSizeKt: long IntSize(int,int)>($i1, $i2);

        interfaceinvoke r1.<androidx.compose.ui.node.IntermediateLayoutModifierNode: void setTargetSize-ozmzZPI(long)>($l3);

        $r11 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier$PassThroughMeasureResult passThroughMeasureResult>;

        $r12 = (androidx.compose.ui.layout.MeasureResult) $r11;

        staticinvoke <androidx.compose.ui.node.LookaheadDelegate: void access$set_measureResult(androidx.compose.ui.node.LookaheadDelegate,androidx.compose.ui.layout.MeasureResult)>(r4, $r12);

        $r13 = (androidx.compose.ui.layout.Placeable) r3;

        return $r13;
    }

    public int calculateAlignmentLine(androidx.compose.ui.layout.AlignmentLine)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier r0;
        androidx.compose.ui.layout.AlignmentLine r1;
        int i0, i1;
        java.lang.Integer r2;
        androidx.compose.ui.node.LookaheadCapablePlaceable $r3;
        java.util.Map $r4;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier;

        r1 := @parameter0: androidx.compose.ui.layout.AlignmentLine;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "alignmentLine");

        $r3 = (androidx.compose.ui.node.LookaheadCapablePlaceable) r0;

        i0 = staticinvoke <androidx.compose.ui.node.LayoutModifierNodeCoordinatorKt: int access$calculateAlignmentAndPlaceChildAsNeeded(androidx.compose.ui.node.LookaheadCapablePlaceable,androidx.compose.ui.layout.AlignmentLine)>($r3, r1);

        i1 = i0;

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForIntermediateLayoutModifier: java.util.Map getCachedAlignmentLinesMap()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return i0;
    }

androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode
<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>
    public void <init>(androidx.compose.ui.node.LayoutModifierNodeCoordinator, androidx.compose.ui.layout.LookaheadScope)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode r0;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r1;
        androidx.compose.ui.layout.LookaheadScope r2;
        androidx.compose.ui.node.NodeCoordinator $r3;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode;

        r1 := @parameter0: androidx.compose.ui.node.LayoutModifierNodeCoordinator;

        r2 := @parameter1: androidx.compose.ui.layout.LookaheadScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "scope");

        r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0> = r1;

        $r3 = (androidx.compose.ui.node.NodeCoordinator) r1;

        specialinvoke r0.<androidx.compose.ui.node.LookaheadDelegate: void <init>(androidx.compose.ui.node.NodeCoordinator,androidx.compose.ui.layout.LookaheadScope)>($r3, r2);

        return;
    }

    public androidx.compose.ui.layout.Placeable measure-BRTryo0(long)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode r0;
        long l0;
        androidx.compose.ui.node.LookaheadDelegate r1, r4, $r7;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r2;
        androidx.compose.ui.node.LayoutModifierNode $r3;
        androidx.compose.ui.layout.MeasureScope $r5;
        androidx.compose.ui.node.NodeCoordinator $r6;
        androidx.compose.ui.layout.Measurable $r8;
        androidx.compose.ui.layout.MeasureResult $r9;
        androidx.compose.ui.layout.Placeable $r10;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode;

        l0 := @parameter0: long;

        r1 = (androidx.compose.ui.node.LookaheadDelegate) r0;

        r2 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>;

        staticinvoke <androidx.compose.ui.node.LookaheadDelegate: void access$setMeasurementConstraints-BRTryo0(androidx.compose.ui.node.LookaheadDelegate,long)>(r1, l0);

        r4 = r1;

        $r3 = virtualinvoke r2.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode getLayoutModifierNode()>();

        $r5 = (androidx.compose.ui.layout.MeasureScope) r0;

        $r6 = virtualinvoke r2.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r7 = virtualinvoke $r6.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r7);

        $r8 = (androidx.compose.ui.layout.Measurable) $r7;

        $r9 = interfaceinvoke $r3.<androidx.compose.ui.node.LayoutModifierNode: androidx.compose.ui.layout.MeasureResult measure-3p2s80s(androidx.compose.ui.layout.MeasureScope,androidx.compose.ui.layout.Measurable,long)>($r5, $r8, l0);

        staticinvoke <androidx.compose.ui.node.LookaheadDelegate: void access$set_measureResult(androidx.compose.ui.node.LookaheadDelegate,androidx.compose.ui.layout.MeasureResult)>(r4, $r9);

        $r10 = (androidx.compose.ui.layout.Placeable) r1;

        return $r10;
    }

    public int calculateAlignmentLine(androidx.compose.ui.layout.AlignmentLine)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode r0;
        androidx.compose.ui.layout.AlignmentLine r1;
        int i0, i1;
        java.lang.Integer r2;
        androidx.compose.ui.node.LookaheadCapablePlaceable $r3;
        java.util.Map $r4;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode;

        r1 := @parameter0: androidx.compose.ui.layout.AlignmentLine;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "alignmentLine");

        $r3 = (androidx.compose.ui.node.LookaheadCapablePlaceable) r0;

        i0 = staticinvoke <androidx.compose.ui.node.LayoutModifierNodeCoordinatorKt: int access$calculateAlignmentAndPlaceChildAsNeeded(androidx.compose.ui.node.LookaheadCapablePlaceable,androidx.compose.ui.layout.AlignmentLine)>($r3, r1);

        i1 = i0;

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4 = virtualinvoke r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: java.util.Map getCachedAlignmentLinesMap()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return i0;
    }

    public int minIntrinsicWidth(int)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode r0;
        int i0, $i1;
        androidx.compose.ui.node.LayoutModifierNode r1;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r2, $r3;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r4;
        androidx.compose.ui.node.NodeCoordinator $r5;
        androidx.compose.ui.node.LookaheadDelegate $r6;
        androidx.compose.ui.layout.IntrinsicMeasurable $r7;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>;

        r1 = virtualinvoke $r3.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode getLayoutModifierNode()>();

        r2 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>;

        $r4 = (androidx.compose.ui.layout.IntrinsicMeasureScope) r0;

        $r5 = virtualinvoke r2.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r6 = virtualinvoke $r5.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r6);

        $r7 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r6;

        $i1 = interfaceinvoke r1.<androidx.compose.ui.node.LayoutModifierNode: int minIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r4, $r7, i0);

        return $i1;
    }

    public int maxIntrinsicWidth(int)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode r0;
        int i0, $i1;
        androidx.compose.ui.node.LayoutModifierNode r1;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r2, $r3;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r4;
        androidx.compose.ui.node.NodeCoordinator $r5;
        androidx.compose.ui.node.LookaheadDelegate $r6;
        androidx.compose.ui.layout.IntrinsicMeasurable $r7;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>;

        r1 = virtualinvoke $r3.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode getLayoutModifierNode()>();

        r2 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>;

        $r4 = (androidx.compose.ui.layout.IntrinsicMeasureScope) r0;

        $r5 = virtualinvoke r2.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r6 = virtualinvoke $r5.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r6);

        $r7 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r6;

        $i1 = interfaceinvoke r1.<androidx.compose.ui.node.LayoutModifierNode: int maxIntrinsicWidth(androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r4, $r7, i0);

        return $i1;
    }

    public int minIntrinsicHeight(int)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode r0;
        int i0, $i1;
        androidx.compose.ui.node.LayoutModifierNode r1;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r2, $r3;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r4;
        androidx.compose.ui.node.NodeCoordinator $r5;
        androidx.compose.ui.node.LookaheadDelegate $r6;
        androidx.compose.ui.layout.IntrinsicMeasurable $r7;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>;

        r1 = virtualinvoke $r3.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode getLayoutModifierNode()>();

        r2 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>;

        $r4 = (androidx.compose.ui.layout.IntrinsicMeasureScope) r0;

        $r5 = virtualinvoke r2.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r6 = virtualinvoke $r5.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r6);

        $r7 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r6;

        $i1 = interfaceinvoke r1.<androidx.compose.ui.node.LayoutModifierNode: int minIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r4, $r7, i0);

        return $i1;
    }

    public int maxIntrinsicHeight(int)
    {
        androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode r0;
        int i0, $i1;
        androidx.compose.ui.node.LayoutModifierNode r1;
        androidx.compose.ui.node.LayoutModifierNodeCoordinator r2, $r3;
        androidx.compose.ui.layout.IntrinsicMeasureScope $r4;
        androidx.compose.ui.node.NodeCoordinator $r5;
        androidx.compose.ui.node.LookaheadDelegate $r6;
        androidx.compose.ui.layout.IntrinsicMeasurable $r7;

        r0 := @this: androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode;

        i0 := @parameter0: int;

        $r3 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>;

        r1 = virtualinvoke $r3.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.LayoutModifierNode getLayoutModifierNode()>();

        r2 = r0.<androidx.compose.ui.node.LayoutModifierNodeCoordinator$LookaheadDelegateForLayoutModifierNode: androidx.compose.ui.node.LayoutModifierNodeCoordinator this$0>;

        $r4 = (androidx.compose.ui.layout.IntrinsicMeasureScope) r0;

        $r5 = virtualinvoke r2.<androidx.compose.ui.node.LayoutModifierNodeCoordinator: androidx.compose.ui.node.NodeCoordinator getWrappedNonNull()>();

        $r6 = virtualinvoke $r5.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LookaheadDelegate getLookaheadDelegate$ui_release()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r6);

        $r7 = (androidx.compose.ui.layout.IntrinsicMeasurable) $r6;

        $i1 = interfaceinvoke r1.<androidx.compose.ui.node.LayoutModifierNode: int maxIntrinsicHeight(androidx.compose.ui.layout.IntrinsicMeasureScope,androidx.compose.ui.layout.IntrinsicMeasurable,int)>($r4, $r7, i0);

        return $i1;
    }

