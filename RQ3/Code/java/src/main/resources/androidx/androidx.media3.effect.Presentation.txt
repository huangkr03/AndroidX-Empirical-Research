androidx.media3.effect.Presentation
<androidx.media3.effect.Presentation: int LAYOUT_SCALE_TO_FIT>
<androidx.media3.effect.Presentation: int LAYOUT_SCALE_TO_FIT_WITH_CROP>
<androidx.media3.effect.Presentation: int LAYOUT_STRETCH_TO_FIT>
<androidx.media3.effect.Presentation: float ASPECT_RATIO_UNSET>
<androidx.media3.effect.Presentation: int requestedWidthPixels>
<androidx.media3.effect.Presentation: int requestedHeightPixels>
<androidx.media3.effect.Presentation: float requestedAspectRatio>
<androidx.media3.effect.Presentation: int layout>
<androidx.media3.effect.Presentation: float outputWidth>
<androidx.media3.effect.Presentation: float outputHeight>
<androidx.media3.effect.Presentation: android.graphics.Matrix transformationMatrix>
    private static void checkLayout(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        if i0 != 2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid layout ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z0, $r3);

        return;
    }

    public static androidx.media3.effect.Presentation createForAspectRatio(float, int)
    {
        float f0;
        int i0;
        byte $b1, $b2;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;
        java.lang.String $r4;
        androidx.media3.effect.Presentation $r5;
        boolean $z0;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        $b1 = f0 cmpl -1.0F;

        if $b1 == 0 goto label1;

        $b2 = f0 cmpl 0.0F;

        if $b2 <= 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("aspect ratio ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be positive or unset");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z0, $r4);

        staticinvoke <androidx.media3.effect.Presentation: void checkLayout(int)>(i0);

        $r5 = new androidx.media3.effect.Presentation;

        specialinvoke $r5.<androidx.media3.effect.Presentation: void <init>(int,int,float,int)>(-1, -1, f0, i0);

        return $r5;
    }

    public static androidx.media3.effect.Presentation createForHeight(int)
    {
        int i0;
        androidx.media3.effect.Presentation $r0;

        i0 := @parameter0: int;

        $r0 = new androidx.media3.effect.Presentation;

        specialinvoke $r0.<androidx.media3.effect.Presentation: void <init>(int,int,float,int)>(-1, i0, -1.0F, 0);

        return $r0;
    }

    public static androidx.media3.effect.Presentation createForWidthAndHeight(int, int, int)
    {
        int i0, i1, i2;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        java.lang.String $r4, $r9;
        androidx.media3.effect.Presentation $r10;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("width ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be positive");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z0, $r4);

        if i1 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("height ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be positive");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z1, $r9);

        staticinvoke <androidx.media3.effect.Presentation: void checkLayout(int)>(i2);

        $r10 = new androidx.media3.effect.Presentation;

        specialinvoke $r10.<androidx.media3.effect.Presentation: void <init>(int,int,float,int)>(i0, i1, -1.0F, i2);

        return $r10;
    }

    private void <init>(int, int, float, int)
    {
        androidx.media3.effect.Presentation r0;
        int i0, i1, i2;
        float f0;
        byte $b3;
        android.graphics.Matrix $r1;
        boolean $z0;

        r0 := @this: androidx.media3.effect.Presentation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b3 = f0 cmpl -1.0F;

        if $b3 == 0 goto label1;

        if i0 != -1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z0, "width and aspect ratio should not both be set");

        r0.<androidx.media3.effect.Presentation: int requestedWidthPixels> = i0;

        r0.<androidx.media3.effect.Presentation: int requestedHeightPixels> = i1;

        r0.<androidx.media3.effect.Presentation: float requestedAspectRatio> = f0;

        r0.<androidx.media3.effect.Presentation: int layout> = i2;

        r0.<androidx.media3.effect.Presentation: float outputWidth> = -1.0F;

        r0.<androidx.media3.effect.Presentation: float outputHeight> = -1.0F;

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<androidx.media3.effect.Presentation: android.graphics.Matrix transformationMatrix> = $r1;

        return;
    }

    public android.util.Pair configure(int, int)
    {
        androidx.media3.effect.Presentation r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13;
        android.graphics.Matrix $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        boolean $z0, $z1;
        byte $b11;
        java.lang.Integer $r2, $r3;
        android.util.Pair $r4;

        r0 := @this: androidx.media3.effect.Presentation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z0, "inputWidth must be positive");

        if i1 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z1, "inputHeight must be positive");

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        r0.<androidx.media3.effect.Presentation: android.graphics.Matrix transformationMatrix> = $r1;

        $f0 = (float) i0;

        r0.<androidx.media3.effect.Presentation: float outputWidth> = $f0;

        $f1 = (float) i1;

        r0.<androidx.media3.effect.Presentation: float outputHeight> = $f1;

        $i2 = r0.<androidx.media3.effect.Presentation: int requestedWidthPixels>;

        if $i2 == -1 goto label5;

        $i8 = r0.<androidx.media3.effect.Presentation: int requestedHeightPixels>;

        if $i8 == -1 goto label5;

        $i9 = r0.<androidx.media3.effect.Presentation: int requestedWidthPixels>;

        $f10 = (float) $i9;

        $i10 = r0.<androidx.media3.effect.Presentation: int requestedHeightPixels>;

        $f9 = (float) $i10;

        $f11 = $f10 / $f9;

        r0.<androidx.media3.effect.Presentation: float requestedAspectRatio> = $f11;

     label5:
        $f12 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $b11 = $f12 cmpl -1.0F;

        if $b11 == 0 goto label6;

        specialinvoke r0.<androidx.media3.effect.Presentation: void applyAspectRatio()>();

     label6:
        $i3 = r0.<androidx.media3.effect.Presentation: int requestedHeightPixels>;

        if $i3 == -1 goto label9;

        $i4 = r0.<androidx.media3.effect.Presentation: int requestedWidthPixels>;

        if $i4 == -1 goto label7;

        $i7 = r0.<androidx.media3.effect.Presentation: int requestedWidthPixels>;

        $f8 = (float) $i7;

        r0.<androidx.media3.effect.Presentation: float outputWidth> = $f8;

        goto label8;

     label7:
        $i5 = r0.<androidx.media3.effect.Presentation: int requestedHeightPixels>;

        $f3 = (float) $i5;

        $f2 = r0.<androidx.media3.effect.Presentation: float outputWidth>;

        $f5 = $f3 * $f2;

        $f4 = r0.<androidx.media3.effect.Presentation: float outputHeight>;

        $f6 = $f5 / $f4;

        r0.<androidx.media3.effect.Presentation: float outputWidth> = $f6;

     label8:
        $i6 = r0.<androidx.media3.effect.Presentation: int requestedHeightPixels>;

        $f7 = (float) $i6;

        r0.<androidx.media3.effect.Presentation: float outputHeight> = $f7;

     label9:
        $f13 = r0.<androidx.media3.effect.Presentation: float outputWidth>;

        $i12 = staticinvoke <java.lang.Math: int round(float)>($f13);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $f14 = r0.<androidx.media3.effect.Presentation: float outputHeight>;

        $i13 = staticinvoke <java.lang.Math: int round(float)>($f14);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r4 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r2, $r3);

        return $r4;
    }

    public android.graphics.Matrix getMatrix(long)
    {
        androidx.media3.effect.Presentation r0;
        long l0;
        android.graphics.Matrix $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.effect.Presentation;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.media3.effect.Presentation: android.graphics.Matrix transformationMatrix>;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object,java.lang.Object)>($r1, "configure must be called first");

        $r3 = (android.graphics.Matrix) $r2;

        return $r3;
    }

    private void applyAspectRatio()
    {
        androidx.media3.effect.Presentation r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31;
        int $i0, $i1, $i2;
        byte $b3, $b4, $b5;
        android.graphics.Matrix $r1, $r2, $r3, $r4;

        r0 := @this: androidx.media3.effect.Presentation;

        $f2 = r0.<androidx.media3.effect.Presentation: float outputWidth>;

        $f1 = r0.<androidx.media3.effect.Presentation: float outputHeight>;

        f0 = $f2 / $f1;

        $i0 = r0.<androidx.media3.effect.Presentation: int layout>;

        if $i0 != 0 goto label2;

        $f21 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $b5 = $f21 cmpl f0;

        if $b5 <= 0 goto label1;

        $r4 = r0.<androidx.media3.effect.Presentation: android.graphics.Matrix transformationMatrix>;

        $f27 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $f28 = f0 / $f27;

        virtualinvoke $r4.<android.graphics.Matrix: void setScale(float,float)>($f28, 1.0F);

        $f30 = r0.<androidx.media3.effect.Presentation: float outputHeight>;

        $f29 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $f31 = $f30 * $f29;

        r0.<androidx.media3.effect.Presentation: float outputWidth> = $f31;

        goto label6;

     label1:
        $r3 = r0.<androidx.media3.effect.Presentation: android.graphics.Matrix transformationMatrix>;

        $f22 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $f23 = $f22 / f0;

        virtualinvoke $r3.<android.graphics.Matrix: void setScale(float,float)>(1.0F, $f23);

        $f25 = r0.<androidx.media3.effect.Presentation: float outputWidth>;

        $f24 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $f26 = $f25 / $f24;

        r0.<androidx.media3.effect.Presentation: float outputHeight> = $f26;

        goto label6;

     label2:
        $i1 = r0.<androidx.media3.effect.Presentation: int layout>;

        if $i1 != 1 goto label4;

        $f10 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $b4 = $f10 cmpl f0;

        if $b4 <= 0 goto label3;

        $r2 = r0.<androidx.media3.effect.Presentation: android.graphics.Matrix transformationMatrix>;

        $f16 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $f17 = $f16 / f0;

        virtualinvoke $r2.<android.graphics.Matrix: void setScale(float,float)>(1.0F, $f17);

        $f19 = r0.<androidx.media3.effect.Presentation: float outputWidth>;

        $f18 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $f20 = $f19 / $f18;

        r0.<androidx.media3.effect.Presentation: float outputHeight> = $f20;

        goto label6;

     label3:
        $r1 = r0.<androidx.media3.effect.Presentation: android.graphics.Matrix transformationMatrix>;

        $f11 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $f12 = f0 / $f11;

        virtualinvoke $r1.<android.graphics.Matrix: void setScale(float,float)>($f12, 1.0F);

        $f14 = r0.<androidx.media3.effect.Presentation: float outputHeight>;

        $f13 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $f15 = $f14 * $f13;

        r0.<androidx.media3.effect.Presentation: float outputWidth> = $f15;

        goto label6;

     label4:
        $i2 = r0.<androidx.media3.effect.Presentation: int layout>;

        if $i2 != 2 goto label6;

        $f3 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $b3 = $f3 cmpl f0;

        if $b3 <= 0 goto label5;

        $f8 = r0.<androidx.media3.effect.Presentation: float outputHeight>;

        $f7 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $f9 = $f8 * $f7;

        r0.<androidx.media3.effect.Presentation: float outputWidth> = $f9;

        goto label6;

     label5:
        $f5 = r0.<androidx.media3.effect.Presentation: float outputWidth>;

        $f4 = r0.<androidx.media3.effect.Presentation: float requestedAspectRatio>;

        $f6 = $f5 / $f4;

        r0.<androidx.media3.effect.Presentation: float outputHeight> = $f6;

     label6:
        return;
    }

androidx.media3.effect.Presentation$Layout
