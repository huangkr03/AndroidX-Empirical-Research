io.grpc.android.AndroidChannelBuilder
<io.grpc.android.AndroidChannelBuilder: io.grpc.ManagedChannelProvider OKHTTP_CHANNEL_PROVIDER>
<io.grpc.android.AndroidChannelBuilder: android.content.Context context>
<io.grpc.android.AndroidChannelBuilder: io.grpc.ManagedChannelBuilder delegateBuilder>
    static void <clinit>()
    {
        io.grpc.ManagedChannelProvider $r0;

        $r0 = staticinvoke <io.grpc.android.AndroidChannelBuilder: io.grpc.ManagedChannelProvider findOkHttp()>();

        <io.grpc.android.AndroidChannelBuilder: io.grpc.ManagedChannelProvider OKHTTP_CHANNEL_PROVIDER> = $r0;

        return;
    }

    private void <init>(java.lang.String)
    {
        io.grpc.android.AndroidChannelBuilder $r0;
        io.grpc.ManagedChannelBuilder $r1;
        java.lang.String $r2;
        io.grpc.ManagedChannelProvider $r3;
        java.lang.UnsupportedOperationException $r4;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder;

        $r2 := @parameter0: java.lang.String;

        specialinvoke $r0.<io.grpc.ForwardingChannelBuilder: void <init>()>();

        $r3 = <io.grpc.android.AndroidChannelBuilder: io.grpc.ManagedChannelProvider OKHTTP_CHANNEL_PROVIDER>;

        if $r3 == null goto label1;

        $r1 = staticinvoke <io.grpc.InternalManagedChannelProvider: io.grpc.ManagedChannelBuilder builderForTarget(io.grpc.ManagedChannelProvider,java.lang.String)>($r3, $r2);

        $r0.<io.grpc.android.AndroidChannelBuilder: io.grpc.ManagedChannelBuilder delegateBuilder> = $r1;

        return;

     label1:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Unable to load OkHttpChannelProvider");

        throw $r4;
    }

    private static io.grpc.ManagedChannelProvider findOkHttp()
    {
        java.lang.Class[] $r0;
        java.lang.Class $r1;
        java.lang.reflect.Constructor $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        io.grpc.ManagedChannelProvider $r5;
        boolean $z0;
        java.lang.Throwable $r6, $r7;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("io.grpc.okhttp.OkHttpChannelProvider");

     label1:
        $r1 = virtualinvoke $r1.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lio/grpc/ManagedChannelProvider;");

     label2:
        $r0 = newarray (java.lang.Class)[0];

     label3:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r0);

     label4:
        $r3 = newarray (java.lang.Object)[0];

     label5:
        $r4 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r3);

     label6:
        $r5 = (io.grpc.ManagedChannelProvider) $r4;

        $z0 = staticinvoke <io.grpc.InternalManagedChannelProvider: boolean isAvailable(io.grpc.ManagedChannelProvider)>($r5);

        if $z0 != 0 goto label7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidChannelBuilder", "OkHttpChannelProvider.isAvailable() returned false");

        return null;

     label7:
        return $r5;

     label8:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidChannelBuilder", "Failed to construct OkHttpChannelProvider", $r6);

        return null;

     label9:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidChannelBuilder", "Couldn\'t cast OkHttpChannelProvider to ManagedChannelProvider", $r7);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label5 to label6 with label8;
    }

    public static io.grpc.android.AndroidChannelBuilder forTarget(java.lang.String)
    {
        java.lang.String $r0;
        io.grpc.android.AndroidChannelBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new io.grpc.android.AndroidChannelBuilder;

        specialinvoke $r1.<io.grpc.android.AndroidChannelBuilder: void <init>(java.lang.String)>($r0);

        return $r1;
    }

    public io.grpc.ManagedChannel build()
    {
        io.grpc.android.AndroidChannelBuilder $r0;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r1;
        android.content.Context $r2;
        io.grpc.ManagedChannel $r3;
        io.grpc.ManagedChannelBuilder $r4;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder;

        $r1 = new io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $r4 = $r0.<io.grpc.android.AndroidChannelBuilder: io.grpc.ManagedChannelBuilder delegateBuilder>;

        $r3 = virtualinvoke $r4.<io.grpc.ManagedChannelBuilder: io.grpc.ManagedChannel build()>();

        $r2 = $r0.<io.grpc.android.AndroidChannelBuilder: android.content.Context context>;

        specialinvoke $r1.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: void <init>(io.grpc.ManagedChannel,android.content.Context)>($r3, $r2);

        return $r1;
    }

    public io.grpc.android.AndroidChannelBuilder context(android.content.Context)
    {
        io.grpc.android.AndroidChannelBuilder $r0;
        android.content.Context $r1;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder;

        $r1 := @parameter0: android.content.Context;

        $r0.<io.grpc.android.AndroidChannelBuilder: android.content.Context context> = $r1;

        return $r0;
    }

    protected io.grpc.ManagedChannelBuilder delegate()
    {
        io.grpc.android.AndroidChannelBuilder $r0;
        io.grpc.ManagedChannelBuilder r1;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder;

        r1 = $r0.<io.grpc.android.AndroidChannelBuilder: io.grpc.ManagedChannelBuilder delegateBuilder>;

        return r1;
    }

io.grpc.android.AndroidChannelBuilder$AndroidChannel$1
<io.grpc.android.AndroidChannelBuilder$AndroidChannel$1: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0>
<io.grpc.android.AndroidChannelBuilder$AndroidChannel$1: io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback val$defaultNetworkCallback>
    void <init>(io.grpc.android.AndroidChannelBuilder$AndroidChannel, io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$1 $r0;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r1;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback $r2;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel$1;

        $r1 := @parameter0: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $r2 := @parameter1: io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback;

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$1: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0> = $r1;

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$1: io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback val$defaultNetworkCallback> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$1 $r0;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback $r1;
        android.net.ConnectivityManager $r2;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r3;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel$1;

        $r3 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$1: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0>;

        $r2 = staticinvoke <io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.net.ConnectivityManager '-$$Nest$fgetconnectivityManager'(io.grpc.android.AndroidChannelBuilder$AndroidChannel)>($r3);

        $r1 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$1: io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback val$defaultNetworkCallback>;

        virtualinvoke $r2.<android.net.ConnectivityManager: void unregisterNetworkCallback(android.net.ConnectivityManager$NetworkCallback)>($r1);

        return;
    }

io.grpc.android.AndroidChannelBuilder$AndroidChannel$2
<io.grpc.android.AndroidChannelBuilder$AndroidChannel$2: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0>
<io.grpc.android.AndroidChannelBuilder$AndroidChannel$2: io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver val$networkReceiver>
    void <init>(io.grpc.android.AndroidChannelBuilder$AndroidChannel, io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$2 $r0;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r1;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver $r2;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel$2;

        $r1 := @parameter0: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $r2 := @parameter1: io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver;

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$2: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0> = $r1;

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$2: io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver val$networkReceiver> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$2 $r0;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver $r1;
        android.content.Context $r2;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r3;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel$2;

        $r3 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$2: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0>;

        $r2 = staticinvoke <io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.content.Context '-$$Nest$fgetcontext'(io.grpc.android.AndroidChannelBuilder$AndroidChannel)>($r3);

        $r1 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$2: io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver val$networkReceiver>;

        virtualinvoke $r2.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        return;
    }

io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback-IA
io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback
<io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0>
    private void <init>(io.grpc.android.AndroidChannelBuilder$AndroidChannel)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback $r0;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r1;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback;

        $r1 := @parameter0: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0> = $r1;

        specialinvoke $r0.<android.net.ConnectivityManager$NetworkCallback: void <init>()>();

        return;
    }

    void <init>(io.grpc.android.AndroidChannelBuilder$AndroidChannel, io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback-IA)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback $r0;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r1;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback-IA $r2;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback;

        $r1 := @parameter0: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $r2 := @parameter1: io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback-IA;

        specialinvoke $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback: void <init>(io.grpc.android.AndroidChannelBuilder$AndroidChannel)>($r1);

        return;
    }

    public void onAvailable(android.net.Network)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback $r0;
        io.grpc.ManagedChannel $r1;
        android.net.Network $r2;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r3;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback;

        $r2 := @parameter0: android.net.Network;

        $r3 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0>;

        $r1 = staticinvoke <io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel '-$$Nest$fgetdelegate'(io.grpc.android.AndroidChannelBuilder$AndroidChannel)>($r3);

        virtualinvoke $r1.<io.grpc.ManagedChannel: void enterIdle()>();

        return;
    }

    public void onBlockedStatusChanged(android.net.Network, boolean)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback $r0;
        boolean $z0;
        io.grpc.ManagedChannel $r1;
        android.net.Network $r2;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r3;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback;

        $r2 := @parameter0: android.net.Network;

        $z0 := @parameter1: boolean;

        if $z0 != 0 goto label1;

        $r3 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0>;

        $r1 = staticinvoke <io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel '-$$Nest$fgetdelegate'(io.grpc.android.AndroidChannelBuilder$AndroidChannel)>($r3);

        virtualinvoke $r1.<io.grpc.ManagedChannel: void enterIdle()>();

     label1:
        return;
    }

io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver-IA
io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver
<io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: boolean isConnected>
<io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0>
    private void <init>(io.grpc.android.AndroidChannelBuilder$AndroidChannel)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver $r0;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r1;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver;

        $r1 := @parameter0: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0> = $r1;

        specialinvoke $r0.<android.content.BroadcastReceiver: void <init>()>();

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: boolean isConnected> = 0;

        return;
    }

    void <init>(io.grpc.android.AndroidChannelBuilder$AndroidChannel, io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver-IA)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver $r0;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r1;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver-IA $r2;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver;

        $r1 := @parameter0: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $r2 := @parameter1: io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver-IA;

        specialinvoke $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: void <init>(io.grpc.android.AndroidChannelBuilder$AndroidChannel)>($r1);

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver $r0;
        android.content.Context $r1;
        android.content.Intent $r2;
        java.lang.Object $r3;
        android.net.ConnectivityManager $r4;
        android.net.NetworkInfo $r5;
        boolean $z0, $z1;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r6;
        io.grpc.ManagedChannel $r7;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r4 = (android.net.ConnectivityManager) $r3;

        $r5 = virtualinvoke $r4.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        $z0 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: boolean isConnected>;

        if $r5 == null goto label1;

        $z1 = virtualinvoke $r5.<android.net.NetworkInfo: boolean isConnected()>();

        if $z1 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: boolean isConnected> = $z1;

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label3;

        $r6 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: io.grpc.android.AndroidChannelBuilder$AndroidChannel this$0>;

        $r7 = staticinvoke <io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel '-$$Nest$fgetdelegate'(io.grpc.android.AndroidChannelBuilder$AndroidChannel)>($r6);

        virtualinvoke $r7.<io.grpc.ManagedChannel: void enterIdle()>();

     label3:
        return;
    }

io.grpc.android.AndroidChannelBuilder$AndroidChannel
<io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.net.ConnectivityManager connectivityManager>
<io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.content.Context context>
<io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel delegate>
<io.grpc.android.AndroidChannelBuilder$AndroidChannel: java.lang.Object lock>
<io.grpc.android.AndroidChannelBuilder$AndroidChannel: java.lang.Runnable unregisterRunnable>
    static volatile android.net.ConnectivityManager '-$$Nest$fgetconnectivityManager'(io.grpc.android.AndroidChannelBuilder$AndroidChannel)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r0;
        android.net.ConnectivityManager r1;

        $r0 := @parameter0: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        r1 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.net.ConnectivityManager connectivityManager>;

        return r1;
    }

    static volatile android.content.Context '-$$Nest$fgetcontext'(io.grpc.android.AndroidChannelBuilder$AndroidChannel)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r0;
        android.content.Context r1;

        $r0 := @parameter0: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        r1 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.content.Context context>;

        return r1;
    }

    static volatile io.grpc.ManagedChannel '-$$Nest$fgetdelegate'(io.grpc.android.AndroidChannelBuilder$AndroidChannel)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r0;
        io.grpc.ManagedChannel r1;

        $r0 := @parameter0: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        r1 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel delegate>;

        return r1;
    }

    void <init>(io.grpc.ManagedChannel, android.content.Context)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r0;
        java.lang.Object $r1;
        io.grpc.ManagedChannel $r2;
        android.content.Context $r3;
        android.net.ConnectivityManager $r4;
        java.lang.Throwable $r5;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $r2 := @parameter0: io.grpc.ManagedChannel;

        $r3 := @parameter1: android.content.Context;

        specialinvoke $r0.<io.grpc.ManagedChannel: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: java.lang.Object lock> = $r1;

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel delegate> = $r2;

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.content.Context context> = $r3;

        if $r3 == null goto label4;

        $r1 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r4 = (android.net.ConnectivityManager) $r1;

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.net.ConnectivityManager connectivityManager> = $r4;

     label1:
        specialinvoke $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: void configureNetworkMonitoring()>();

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidChannelBuilder", "Failed to configure network monitoring. Does app have ACCESS_NETWORK_STATE permission?", $r5);

        return;

     label4:
        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.net.ConnectivityManager connectivityManager> = null;

        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    private void configureNetworkMonitoring()
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r0;
        int $i0;
        android.net.ConnectivityManager $r1;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback $r2;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$1 $r3;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver $r4;
        android.content.IntentFilter $r5;
        android.content.Context $r6;
        io.grpc.android.AndroidChannelBuilder$AndroidChannel$2 $r7;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label1;

        $r1 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.net.ConnectivityManager connectivityManager>;

        if $r1 == null goto label1;

        $r2 = new io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback;

        specialinvoke $r2.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback: void <init>(io.grpc.android.AndroidChannelBuilder$AndroidChannel,io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback-IA)>($r0, null);

        $r1 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.net.ConnectivityManager connectivityManager>;

        virtualinvoke $r1.<android.net.ConnectivityManager: void registerDefaultNetworkCallback(android.net.ConnectivityManager$NetworkCallback)>($r2);

        $r3 = new io.grpc.android.AndroidChannelBuilder$AndroidChannel$1;

        specialinvoke $r3.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$1: void <init>(io.grpc.android.AndroidChannelBuilder$AndroidChannel,io.grpc.android.AndroidChannelBuilder$AndroidChannel$DefaultNetworkCallback)>($r0, $r2);

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: java.lang.Runnable unregisterRunnable> = $r3;

        return;

     label1:
        $r4 = new io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver;

        specialinvoke $r4.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver: void <init>(io.grpc.android.AndroidChannelBuilder$AndroidChannel,io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver-IA)>($r0, null);

        $r5 = new android.content.IntentFilter;

        specialinvoke $r5.<android.content.IntentFilter: void <init>(java.lang.String)>("android.net.conn.CONNECTIVITY_CHANGE");

        $r6 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: android.content.Context context>;

        virtualinvoke $r6.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r4, $r5);

        $r7 = new io.grpc.android.AndroidChannelBuilder$AndroidChannel$2;

        specialinvoke $r7.<io.grpc.android.AndroidChannelBuilder$AndroidChannel$2: void <init>(io.grpc.android.AndroidChannelBuilder$AndroidChannel,io.grpc.android.AndroidChannelBuilder$AndroidChannel$NetworkReceiver)>($r0, $r4);

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: java.lang.Runnable unregisterRunnable> = $r7;

        return;
    }

    private void unregisterNetworkListener()
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r0;
        java.lang.Object $r1;
        java.lang.Runnable $r2;
        java.lang.Throwable $r3;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $r1 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: java.lang.Runnable unregisterRunnable>;

        if $r2 == null goto label2;

        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

        $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: java.lang.Runnable unregisterRunnable> = null;

     label2:
        exitmonitor $r1;

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor $r1;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String authority()
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r0;
        java.lang.String $r1;
        io.grpc.ManagedChannel $r2;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $r2 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel delegate>;

        $r1 = virtualinvoke $r2.<io.grpc.ManagedChannel: java.lang.String authority()>();

        return $r1;
    }

    public void enterIdle()
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r0;
        io.grpc.ManagedChannel $r1;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $r1 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel delegate>;

        virtualinvoke $r1.<io.grpc.ManagedChannel: void enterIdle()>();

        return;
    }

    public boolean isTerminated()
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r0;
        boolean $z0;
        io.grpc.ManagedChannel $r1;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $r1 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel delegate>;

        $z0 = virtualinvoke $r1.<io.grpc.ManagedChannel: boolean isTerminated()>();

        return $z0;
    }

    public io.grpc.ClientCall newCall(io.grpc.MethodDescriptor, io.grpc.CallOptions)
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r0;
        io.grpc.CallOptions $r1;
        io.grpc.ManagedChannel $r2;
        io.grpc.ClientCall $r3;
        io.grpc.MethodDescriptor $r4;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        $r4 := @parameter0: io.grpc.MethodDescriptor;

        $r1 := @parameter1: io.grpc.CallOptions;

        $r2 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel delegate>;

        $r3 = virtualinvoke $r2.<io.grpc.ManagedChannel: io.grpc.ClientCall newCall(io.grpc.MethodDescriptor,io.grpc.CallOptions)>($r4, $r1);

        return $r3;
    }

    public io.grpc.ManagedChannel shutdown()
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r0;
        io.grpc.ManagedChannel $r1;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        specialinvoke $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: void unregisterNetworkListener()>();

        $r1 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel delegate>;

        $r1 = virtualinvoke $r1.<io.grpc.ManagedChannel: io.grpc.ManagedChannel shutdown()>();

        return $r1;
    }

    public io.grpc.ManagedChannel shutdownNow()
    {
        io.grpc.android.AndroidChannelBuilder$AndroidChannel $r0;
        io.grpc.ManagedChannel $r1;

        $r0 := @this: io.grpc.android.AndroidChannelBuilder$AndroidChannel;

        specialinvoke $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: void unregisterNetworkListener()>();

        $r1 = $r0.<io.grpc.android.AndroidChannelBuilder$AndroidChannel: io.grpc.ManagedChannel delegate>;

        $r1 = virtualinvoke $r1.<io.grpc.ManagedChannel: io.grpc.ManagedChannel shutdownNow()>();

        return $r1;
    }

