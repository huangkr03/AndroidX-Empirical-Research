androidx.benchmark.perfetto.PerfettoConfigKt
<androidx.benchmark.perfetto.PerfettoConfigKt: perfetto.protos.TraceConfig$DataSource PROCESS_STATS_DATASOURCE>
<androidx.benchmark.perfetto.PerfettoConfigKt: perfetto.protos.TraceConfig$DataSource LINUX_SYS_STATS_DATASOURCE>
    private static final perfetto.protos.TraceConfig$DataSource ftraceDataSource(java.util.List)
    {
        java.util.List r0, r2, r3, r4, $r9, $r26, r37, r44, r46, r53;
        perfetto.protos.FtraceConfig$CompactSchedConfig r1, $r29;
        perfetto.protos.FtraceConfig r5, $r31;
        java.lang.Integer r6, $r8, r38, r47;
        perfetto.protos.DataSourceConfig r7, $r32;
        androidx.benchmark.perfetto.AtraceTag $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, r43, r51;
        java.util.ArrayList $r27, $r28;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        java.lang.Boolean $r30;
        perfetto.protos.TraceConfig$DataSource $r33;
        java.lang.String $r34;
        java.lang.String[] $r35;
        androidx.benchmark.perfetto.AtraceTag[] $r36;
        java.lang.Iterable $r39, $r45;
        java.util.Collection r40, r48, r52;
        java.util.Iterator r41, r49;
        java.lang.Object r42, r50;

        r0 := @parameter0: java.util.List;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r35 = newarray (java.lang.String)[11];

        $r35[0] = "task/task_newtask";

        $r35[1] = "task/task_rename";

        $r35[2] = "sched/sched_process_exit";

        $r35[3] = "sched/sched_process_free";

        $r35[4] = "mm_event/mm_event_record";

        $r35[5] = "kmem/rss_stat";

        $r35[6] = "kmem/ion_heap_shrink";

        $r35[7] = "kmem/ion_heap_grow";

        $r35[8] = "ion/ion_stat";

        $r35[9] = "oom/oom_score_adj_update";

        $r35[10] = "lowmemorykiller/lowmemory_kill";

        $r9 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>($r35);

        $r36 = newarray (androidx.benchmark.perfetto.AtraceTag)[16];

        $r10 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag ActivityManager>;

        $r36[0] = $r10;

        $r11 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag Audio>;

        $r36[1] = $r11;

        $r12 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag BinderDriver>;

        $r36[2] = $r12;

        $r13 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag Camera>;

        $r36[3] = $r13;

        $r14 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag Dalvik>;

        $r36[4] = $r14;

        $r15 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag Frequency>;

        $r36[5] = $r15;

        $r16 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag Graphics>;

        $r36[6] = $r16;

        $r17 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag HardwareModules>;

        $r36[7] = $r17;

        $r18 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag Idle>;

        $r36[8] = $r18;

        $r19 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag Input>;

        $r36[9] = $r19;

        $r20 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag MemReclaim>;

        $r36[10] = $r20;

        $r21 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag Resources>;

        $r36[11] = $r21;

        $r22 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag Scheduling>;

        $r36[12] = $r22;

        $r23 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag Synchronization>;

        $r36[13] = $r23;

        $r24 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag View>;

        $r36[14] = $r24;

        $r25 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag WindowManager>;

        $r36[15] = $r25;

        $r26 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>($r36);

        r37 = $r9;

        r38 = $r8;

        $r39 = (java.lang.Iterable) $r26;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r40 = (java.util.Collection) $r27;

        r41 = interfaceinvoke $r39.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r42 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r43 = (androidx.benchmark.perfetto.AtraceTag) r42;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        $z1 = virtualinvoke r43.<androidx.benchmark.perfetto.AtraceTag: boolean supported(int,boolean)>($i1, 0);

        if $z1 == 0 goto label1;

        interfaceinvoke r40.<java.util.Collection: boolean add(java.lang.Object)>(r42);

        goto label1;

     label2:
        r44 = (java.util.List) r40;

        $r45 = (java.lang.Iterable) r44;

        r46 = r37;

        r47 = r38;

        $r28 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r45, 10);

        specialinvoke $r28.<java.util.ArrayList: void <init>(int)>($i0);

        r48 = (java.util.Collection) $r28;

        r49 = interfaceinvoke $r45.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r50 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();

        r51 = (androidx.benchmark.perfetto.AtraceTag) r50;

        r52 = r48;

        $r34 = virtualinvoke r51.<androidx.benchmark.perfetto.AtraceTag: java.lang.String getTag()>();

        interfaceinvoke r52.<java.util.Collection: boolean add(java.lang.Object)>($r34);

        goto label3;

     label4:
        r53 = (java.util.List) r48;

        $r29 = new perfetto.protos.FtraceConfig$CompactSchedConfig;

        $r30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        specialinvoke $r29.<perfetto.protos.FtraceConfig$CompactSchedConfig: void <init>(java.lang.Boolean,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r30, null, 2, null);

        r1 = $r29;

        r2 = r0;

        r3 = r53;

        r4 = r46;

        $r31 = new perfetto.protos.FtraceConfig;

        specialinvoke $r31.<perfetto.protos.FtraceConfig: void <init>(java.util.List,java.util.List,java.util.List,java.lang.Integer,java.lang.Integer,perfetto.protos.FtraceConfig$CompactSchedConfig,java.lang.Boolean,java.lang.Boolean,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r4, r3, r2, null, null, r1, null, null, null, 472, null);

        r5 = $r31;

        r6 = r47;

        $r32 = new perfetto.protos.DataSourceConfig;

        specialinvoke $r32.<perfetto.protos.DataSourceConfig: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,perfetto.protos.DataSourceConfig$SessionInitiator,java.lang.Long,perfetto.protos.FtraceConfig,perfetto.protos.InodeFileConfig,perfetto.protos.ProcessStatsConfig,perfetto.protos.SysStatsConfig,perfetto.protos.HeapprofdConfig,perfetto.protos.JavaHprofConfig,perfetto.protos.AndroidPowerConfig,perfetto.protos.AndroidLogConfig,perfetto.protos.GpuCounterConfig,perfetto.protos.PackagesListConfig,perfetto.protos.PerfEventConfig,perfetto.protos.VulkanMemoryConfig,perfetto.protos.TrackEventConfig,perfetto.protos.AndroidPolledStateConfig,perfetto.protos.ChromeConfig,perfetto.protos.InterceptorConfig,java.lang.String,perfetto.protos.TestConfig,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>("linux.ftrace", r6, null, null, null, null, null, r5, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 67108732, null);

        r7 = $r32;

        $r33 = new perfetto.protos.TraceConfig$DataSource;

        specialinvoke $r33.<perfetto.protos.TraceConfig$DataSource: void <init>(perfetto.protos.DataSourceConfig,java.util.List,java.util.List,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r7, null, null, null, 14, null);

        return $r33;
    }

    public static final perfetto.protos.TraceConfig perfettoConfig(java.util.List)
    {
        java.util.List r0, $r8, $r14;
        perfetto.protos.TraceConfig $r1;
        perfetto.protos.TraceConfig$BufferConfig $r2, $r5;
        java.lang.Integer $r3, $r6, $r16, $r17;
        perfetto.protos.TraceConfig$BufferConfig$FillPolicy $r4, $r7;
        perfetto.protos.TraceConfig$DataSource $r9, $r10, $r11, $r12;
        perfetto.protos.DataSourceConfig $r13;
        java.lang.Boolean $r15;
        perfetto.protos.TraceConfig$BufferConfig[] r18;
        perfetto.protos.TraceConfig$DataSource[] r19;

        r0 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "atraceApps");

        $r1 = new perfetto.protos.TraceConfig;

        r18 = newarray (perfetto.protos.TraceConfig$BufferConfig)[2];

        $r2 = new perfetto.protos.TraceConfig$BufferConfig;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32768);

        $r4 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy RING_BUFFER>;

        specialinvoke $r2.<perfetto.protos.TraceConfig$BufferConfig: void <init>(java.lang.Integer,perfetto.protos.TraceConfig$BufferConfig$FillPolicy,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r3, $r4, null, 4, null);

        r18[0] = $r2;

        $r5 = new perfetto.protos.TraceConfig$BufferConfig;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4096);

        $r7 = <perfetto.protos.TraceConfig$BufferConfig$FillPolicy: perfetto.protos.TraceConfig$BufferConfig$FillPolicy RING_BUFFER>;

        specialinvoke $r5.<perfetto.protos.TraceConfig$BufferConfig: void <init>(java.lang.Integer,perfetto.protos.TraceConfig$BufferConfig$FillPolicy,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r6, $r7, null, 4, null);

        r18[1] = $r5;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r18);

        r19 = newarray (perfetto.protos.TraceConfig$DataSource)[4];

        $r9 = staticinvoke <androidx.benchmark.perfetto.PerfettoConfigKt: perfetto.protos.TraceConfig$DataSource ftraceDataSource(java.util.List)>(r0);

        r19[0] = $r9;

        $r10 = <androidx.benchmark.perfetto.PerfettoConfigKt: perfetto.protos.TraceConfig$DataSource PROCESS_STATS_DATASOURCE>;

        r19[1] = $r10;

        $r11 = <androidx.benchmark.perfetto.PerfettoConfigKt: perfetto.protos.TraceConfig$DataSource LINUX_SYS_STATS_DATASOURCE>;

        r19[2] = $r11;

        $r12 = new perfetto.protos.TraceConfig$DataSource;

        $r13 = new perfetto.protos.DataSourceConfig;

        specialinvoke $r13.<perfetto.protos.DataSourceConfig: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,perfetto.protos.DataSourceConfig$SessionInitiator,java.lang.Long,perfetto.protos.FtraceConfig,perfetto.protos.InodeFileConfig,perfetto.protos.ProcessStatsConfig,perfetto.protos.SysStatsConfig,perfetto.protos.HeapprofdConfig,perfetto.protos.JavaHprofConfig,perfetto.protos.AndroidPowerConfig,perfetto.protos.AndroidLogConfig,perfetto.protos.GpuCounterConfig,perfetto.protos.PackagesListConfig,perfetto.protos.PerfEventConfig,perfetto.protos.VulkanMemoryConfig,perfetto.protos.TrackEventConfig,perfetto.protos.AndroidPolledStateConfig,perfetto.protos.ChromeConfig,perfetto.protos.InterceptorConfig,java.lang.String,perfetto.protos.TestConfig,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>("android.surfaceflinger.frametimeline", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 67108862, null);

        specialinvoke $r12.<perfetto.protos.TraceConfig$DataSource: void <init>(perfetto.protos.DataSourceConfig,java.util.List,java.util.List,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r13, null, null, null, 14, null);

        r19[3] = $r12;

        $r14 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r19);

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2500);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5000);

        specialinvoke $r1.<perfetto.protos.TraceConfig: void <init>(java.util.List,java.util.List,perfetto.protos.TraceConfig$BuiltinDataSource,java.lang.Integer,java.lang.Boolean,perfetto.protos.TraceConfig$LockdownModeOperation,java.util.List,perfetto.protos.TraceConfig$StatsdMetadata,java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Long,perfetto.protos.TraceConfig$GuardrailOverrides,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Integer,perfetto.protos.TraceConfig$TriggerConfig,java.util.List,perfetto.protos.TraceConfig$IncrementalStateConfig,java.lang.Boolean,java.lang.String,perfetto.protos.TraceConfig$CompressionType,perfetto.protos.TraceConfig$StatsdLogging,java.lang.Long,java.lang.Long,perfetto.protos.TraceConfig$TraceFilter,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r8, $r14, null, null, null, null, null, null, $r15, null, $r16, null, null, null, $r17, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1073724156, null);

        return $r1;
    }

    public static final byte[] validateAndEncode(perfetto.protos.TraceConfig)
    {
        perfetto.protos.TraceConfig $r0;
        perfetto.protos.FtraceConfig r1, r3, $r42;
        perfetto.protos.TraceConfig$DataSource r2;
        java.util.Collection r4, r37, $r45;
        java.util.List $r5, $r7, $r13, $r15, $r19, $r30, $r50;
        java.util.ArrayList $r6, $r12;
        boolean $z3, $z4, $z5, $z6, $z7, z15, z16, $z17, z18, $z19;
        java.lang.Object $r8, r40, r41, r47;
        androidx.benchmark.Shell $r9;
        androidx.benchmark.perfetto.AtraceTag$Companion $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.Set $r11, $r49;
        java.lang.Iterable $r14, $r16, $r17, $r21, $r38, $r43, r44;
        byte[] $r18;
        java.lang.CharSequence $r20;
        java.lang.StringBuilder $r22, $r23, $r24, $r25, $r26, $r27;
        java.lang.IllegalStateException $r28, $r31, $r33;
        java.lang.String $r29, $r32, $r34, $r35, r51, r52, $r53, $r54;
        perfetto.protos.DataSourceConfig $r36;
        java.util.Iterator r39, $r46;
        androidx.benchmark.perfetto.AtraceTag r48;

        $r0 := @parameter0: perfetto.protos.TraceConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r5 = virtualinvoke $r0.<perfetto.protos.TraceConfig: java.util.List getData_sources()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r37 = (java.util.Collection) $r6;

        $r38 = (java.lang.Iterable) $r5;

        r39 = interfaceinvoke $r38.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z3 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label06;

        r40 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r41 = r40;

        r2 = (perfetto.protos.TraceConfig$DataSource) r41;

        $r36 = virtualinvoke r2.<perfetto.protos.TraceConfig$DataSource: perfetto.protos.DataSourceConfig getConfig()>();

        if $r36 != null goto label02;

        $r42 = null;

        goto label03;

     label02:
        $r42 = virtualinvoke $r36.<perfetto.protos.DataSourceConfig: perfetto.protos.FtraceConfig getFtrace_config()>();

     label03:
        if $r42 != null goto label04;

        goto label05;

     label04:
        r3 = $r42;

        interfaceinvoke r37.<java.util.Collection: boolean add(java.lang.Object)>(r3);

     label05:
        goto label01;

     label06:
        $r7 = (java.util.List) r37;

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object first(java.util.List)>($r7);

        r1 = (perfetto.protos.FtraceConfig) $r8;

        $r10 = <androidx.benchmark.perfetto.AtraceTag: androidx.benchmark.perfetto.AtraceTag$Companion Companion>;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $r9 = <androidx.benchmark.Shell: androidx.benchmark.Shell INSTANCE>;

        $z4 = virtualinvoke $r9.<androidx.benchmark.Shell: boolean isSessionRooted()>();

        $r11 = virtualinvoke $r10.<androidx.benchmark.perfetto.AtraceTag$Companion: java.util.Set supported(int,boolean)>($i0, $z4);

        $r43 = (java.lang.Iterable) $r11;

        r44 = $r43;

        $r12 = new java.util.ArrayList;

        $i1 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r43, 10);

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i1);

        $r45 = (java.util.Collection) $r12;

        $r46 = interfaceinvoke r44.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z5 = interfaceinvoke $r46.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label08;

        r47 = interfaceinvoke $r46.<java.util.Iterator: java.lang.Object next()>();

        r48 = (androidx.benchmark.perfetto.AtraceTag) r47;

        r4 = $r45;

        z15 = 0;

        $r35 = virtualinvoke r48.<androidx.benchmark.perfetto.AtraceTag: java.lang.String getTag()>();

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r35);

        goto label07;

     label08:
        $r13 = (java.util.List) $r45;

        $r14 = (java.lang.Iterable) $r13;

        $r49 = staticinvoke <kotlin.collections.CollectionsKt: java.util.Set toSet(java.lang.Iterable)>($r14);

        $r15 = virtualinvoke r1.<perfetto.protos.FtraceConfig: java.util.List getAtrace_categories()>();

        $r17 = (java.lang.Iterable) $r15;

        $r16 = (java.lang.Iterable) $r49;

        $r50 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Iterable)>($r17, $r16);

        $z6 = interfaceinvoke $r50.<java.util.List: boolean isEmpty()>();

        if $z6 != 0 goto label09;

        z16 = 0;

        r51 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Error - attempted to use unsupported atrace tags: ", $r50);

        $r33 = new java.lang.IllegalStateException;

        $r34 = virtualinvoke r51.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r34);

        throw $r33;

     label09:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 >= 28 goto label12;

        $r30 = virtualinvoke r1.<perfetto.protos.FtraceConfig: java.util.List getAtrace_apps()>();

        $z7 = interfaceinvoke $r30.<java.util.List: boolean contains(java.lang.Object)>("*");

        if $z7 != 0 goto label10;

        $z17 = 1;

        goto label11;

     label10:
        $z17 = 0;

     label11:
        if $z17 != 0 goto label12;

        z18 = 0;

        r52 = "Support for wildcard (*) app matching in atrace added in API 28";

        $r31 = new java.lang.IllegalStateException;

        $r32 = virtualinvoke r52.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r32);

        throw $r31;

     label12:
        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 >= 24 goto label15;

        $r19 = virtualinvoke r1.<perfetto.protos.FtraceConfig: java.util.List getAtrace_apps()>();

        $r21 = (java.lang.Iterable) $r19;

        $r20 = (java.lang.CharSequence) ",";

        $r53 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r21, $r20, null, null, 0, null, null, 62, null);

        $i4 = virtualinvoke $r53.<java.lang.String: int length()>();

        if $i4 > 91 goto label13;

        $z19 = 1;

        goto label14;

     label13:
        $z19 = 0;

     label14:
        if $z19 != 0 goto label15;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to trace package list (\"");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\").length = ");

        $i5 = virtualinvoke $r53.<java.lang.String: int length()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > 91 chars, which is the limit before API 24");

        $r54 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = new java.lang.IllegalStateException;

        $r29 = virtualinvoke $r54.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label15:
        $r18 = virtualinvoke $r0.<perfetto.protos.TraceConfig: byte[] encode()>();

        return $r18;
    }

    static void <clinit>()
    {
        perfetto.protos.MeminfoCounters[] r0;
        perfetto.protos.TraceConfig$DataSource $r1, $r7;
        perfetto.protos.DataSourceConfig $r2, $r8;
        java.lang.Integer $r3, $r6, $r9, $r11;
        perfetto.protos.ProcessStatsConfig $r4;
        java.lang.Boolean $r5;
        perfetto.protos.SysStatsConfig $r10;
        perfetto.protos.MeminfoCounters $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;
        java.util.List $r32;

        $r1 = new perfetto.protos.TraceConfig$DataSource;

        $r2 = new perfetto.protos.DataSourceConfig;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r4 = new perfetto.protos.ProcessStatsConfig;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10000);

        specialinvoke $r4.<perfetto.protos.ProcessStatsConfig: void <init>(java.lang.Boolean,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Integer,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r5, null, $r6, null, null, null, null, 122, null);

        specialinvoke $r2.<perfetto.protos.DataSourceConfig: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,perfetto.protos.DataSourceConfig$SessionInitiator,java.lang.Long,perfetto.protos.FtraceConfig,perfetto.protos.InodeFileConfig,perfetto.protos.ProcessStatsConfig,perfetto.protos.SysStatsConfig,perfetto.protos.HeapprofdConfig,perfetto.protos.JavaHprofConfig,perfetto.protos.AndroidPowerConfig,perfetto.protos.AndroidLogConfig,perfetto.protos.GpuCounterConfig,perfetto.protos.PackagesListConfig,perfetto.protos.PerfEventConfig,perfetto.protos.VulkanMemoryConfig,perfetto.protos.TrackEventConfig,perfetto.protos.AndroidPolledStateConfig,perfetto.protos.ChromeConfig,perfetto.protos.InterceptorConfig,java.lang.String,perfetto.protos.TestConfig,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>("linux.process_stats", $r3, null, null, null, null, null, null, null, $r4, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 67108348, null);

        specialinvoke $r1.<perfetto.protos.TraceConfig$DataSource: void <init>(perfetto.protos.DataSourceConfig,java.util.List,java.util.List,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r2, null, null, null, 14, null);

        <androidx.benchmark.perfetto.PerfettoConfigKt: perfetto.protos.TraceConfig$DataSource PROCESS_STATS_DATASOURCE> = $r1;

        $r7 = new perfetto.protos.TraceConfig$DataSource;

        $r8 = new perfetto.protos.DataSourceConfig;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r10 = new perfetto.protos.SysStatsConfig;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1000);

        r0 = newarray (perfetto.protos.MeminfoCounters)[20];

        $r12 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_TOTAL>;

        r0[0] = $r12;

        $r13 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_FREE>;

        r0[1] = $r13;

        $r14 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MEM_AVAILABLE>;

        r0[2] = $r14;

        $r15 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_BUFFERS>;

        r0[3] = $r15;

        $r16 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_CACHED>;

        r0[4] = $r16;

        $r17 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_CACHED>;

        r0[5] = $r17;

        $r18 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE>;

        r0[6] = $r18;

        $r19 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE>;

        r0[7] = $r19;

        $r20 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE_ANON>;

        r0[8] = $r20;

        $r21 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE_ANON>;

        r0[9] = $r21;

        $r22 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ACTIVE_FILE>;

        r0[10] = $r22;

        $r23 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_INACTIVE_FILE>;

        r0[11] = $r23;

        $r24 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_UNEVICTABLE>;

        r0[12] = $r24;

        $r25 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_TOTAL>;

        r0[13] = $r25;

        $r26 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SWAP_FREE>;

        r0[14] = $r26;

        $r27 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_DIRTY>;

        r0[15] = $r27;

        $r28 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_WRITEBACK>;

        r0[16] = $r28;

        $r29 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_ANON_PAGES>;

        r0[17] = $r29;

        $r30 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_MAPPED>;

        r0[18] = $r30;

        $r31 = <perfetto.protos.MeminfoCounters: perfetto.protos.MeminfoCounters MEMINFO_SHMEM>;

        r0[19] = $r31;

        $r32 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object[])>(r0);

        specialinvoke $r10.<perfetto.protos.SysStatsConfig: void <init>(java.lang.Integer,java.util.List,java.lang.Integer,java.util.List,java.lang.Integer,java.util.List,java.lang.Integer,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r11, $r32, null, null, null, null, null, null, 252, null);

        specialinvoke $r8.<perfetto.protos.DataSourceConfig: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,perfetto.protos.DataSourceConfig$SessionInitiator,java.lang.Long,perfetto.protos.FtraceConfig,perfetto.protos.InodeFileConfig,perfetto.protos.ProcessStatsConfig,perfetto.protos.SysStatsConfig,perfetto.protos.HeapprofdConfig,perfetto.protos.JavaHprofConfig,perfetto.protos.AndroidPowerConfig,perfetto.protos.AndroidLogConfig,perfetto.protos.GpuCounterConfig,perfetto.protos.PackagesListConfig,perfetto.protos.PerfEventConfig,perfetto.protos.VulkanMemoryConfig,perfetto.protos.TrackEventConfig,perfetto.protos.AndroidPolledStateConfig,perfetto.protos.ChromeConfig,perfetto.protos.InterceptorConfig,java.lang.String,perfetto.protos.TestConfig,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>("linux.sys_stats", $r9, null, null, null, null, null, null, null, null, $r10, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 67107836, null);

        specialinvoke $r7.<perfetto.protos.TraceConfig$DataSource: void <init>(perfetto.protos.DataSourceConfig,java.util.List,java.util.List,okio.ByteString,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r8, null, null, null, 14, null);

        <androidx.benchmark.perfetto.PerfettoConfigKt: perfetto.protos.TraceConfig$DataSource LINUX_SYS_STATS_DATASOURCE> = $r7;

        return;
    }

