androidx.media3.extractor.avi.AviStreamHeaderChunk
<androidx.media3.extractor.avi.AviStreamHeaderChunk: java.lang.String TAG>
<androidx.media3.extractor.avi.AviStreamHeaderChunk: int streamType>
<androidx.media3.extractor.avi.AviStreamHeaderChunk: int initialFrames>
<androidx.media3.extractor.avi.AviStreamHeaderChunk: int scale>
<androidx.media3.extractor.avi.AviStreamHeaderChunk: int rate>
<androidx.media3.extractor.avi.AviStreamHeaderChunk: int length>
<androidx.media3.extractor.avi.AviStreamHeaderChunk: int suggestedBufferSize>
    public static androidx.media3.extractor.avi.AviStreamHeaderChunk parseFrom(androidx.media3.common.util.ParsableByteArray)
    {
        androidx.media3.common.util.ParsableByteArray r0;
        int i0, i1, i2, i3, i4, i5;
        androidx.media3.extractor.avi.AviStreamHeaderChunk $r1;

        r0 := @parameter0: androidx.media3.common.util.ParsableByteArray;

        i0 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(12);

        i1 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        i2 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        i3 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(4);

        i4 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        i5 = virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: int readLittleEndianInt()>();

        virtualinvoke r0.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(8);

        $r1 = new androidx.media3.extractor.avi.AviStreamHeaderChunk;

        specialinvoke $r1.<androidx.media3.extractor.avi.AviStreamHeaderChunk: void <init>(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5);

        return $r1;
    }

    private void <init>(int, int, int, int, int, int)
    {
        androidx.media3.extractor.avi.AviStreamHeaderChunk r0;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: androidx.media3.extractor.avi.AviStreamHeaderChunk;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int streamType> = i0;

        r0.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int initialFrames> = i1;

        r0.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int scale> = i2;

        r0.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int rate> = i3;

        r0.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int length> = i4;

        r0.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int suggestedBufferSize> = i5;

        return;
    }

    public int getType()
    {
        androidx.media3.extractor.avi.AviStreamHeaderChunk r0;

        r0 := @this: androidx.media3.extractor.avi.AviStreamHeaderChunk;

        return 1752331379;
    }

    public int getTrackType()
    {
        androidx.media3.extractor.avi.AviStreamHeaderChunk r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: androidx.media3.extractor.avi.AviStreamHeaderChunk;

        $i0 = r0.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int streamType>;

        lookupswitch($i0)
        {
            case 1935960438: goto label2;
            case 1935963489: goto label1;
            case 1937012852: goto label3;
            default: goto label4;
        };

     label1:
        return 1;

     label2:
        return 2;

     label3:
        return 3;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found unsupported streamType fourCC: ");

        $i1 = r0.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int streamType>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("AviStreamHeaderChunk", $r5);

        return -1;
    }

    public float getFrameRate()
    {
        androidx.media3.extractor.avi.AviStreamHeaderChunk r0;
        int $i0, $i1;
        float $f0, $f1, $f2;

        r0 := @this: androidx.media3.extractor.avi.AviStreamHeaderChunk;

        $i0 = r0.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int rate>;

        $f1 = (float) $i0;

        $i1 = r0.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int scale>;

        $f0 = (float) $i1;

        $f2 = $f1 / $f0;

        return $f2;
    }

    public long getDurationUs()
    {
        androidx.media3.extractor.avi.AviStreamHeaderChunk r0;
        int $i0, $i1, $i3;
        long $l2, $l4, $l5, $l6, $l7;

        r0 := @this: androidx.media3.extractor.avi.AviStreamHeaderChunk;

        $i0 = r0.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int length>;

        $l6 = (long) $i0;

        $i1 = r0.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int scale>;

        $l2 = (long) $i1;

        $l5 = 1000000L * $l2;

        $i3 = r0.<androidx.media3.extractor.avi.AviStreamHeaderChunk: int rate>;

        $l4 = (long) $i3;

        $l7 = staticinvoke <androidx.media3.common.util.Util: long scaleLargeTimestamp(long,long,long)>($l6, $l5, $l4);

        return $l7;
    }

