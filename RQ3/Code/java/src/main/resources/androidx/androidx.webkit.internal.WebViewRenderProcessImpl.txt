androidx.webkit.internal.WebViewRenderProcessImpl
<androidx.webkit.internal.WebViewRenderProcessImpl: org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface mBoundaryInterface>
<androidx.webkit.internal.WebViewRenderProcessImpl: java.lang.ref.WeakReference mFrameworkObject>
<androidx.webkit.internal.WebViewRenderProcessImpl: java.util.WeakHashMap sFrameworkMap>
    public void <init>(org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface)
    {
        androidx.webkit.internal.WebViewRenderProcessImpl r0;
        org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface r1;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessImpl;

        r1 := @parameter0: org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface;

        specialinvoke r0.<androidx.webkit.WebViewRenderProcess: void <init>()>();

        r0.<androidx.webkit.internal.WebViewRenderProcessImpl: org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface mBoundaryInterface> = r1;

        return;
    }

    public void <init>(android.webkit.WebViewRenderProcess)
    {
        androidx.webkit.internal.WebViewRenderProcessImpl r0;
        android.webkit.WebViewRenderProcess r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessImpl;

        r1 := @parameter0: android.webkit.WebViewRenderProcess;

        specialinvoke r0.<androidx.webkit.WebViewRenderProcess: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.webkit.internal.WebViewRenderProcessImpl: java.lang.ref.WeakReference mFrameworkObject> = $r2;

        return;
    }

    public static androidx.webkit.internal.WebViewRenderProcessImpl forInvocationHandler(java.lang.reflect.InvocationHandler)
    {
        java.lang.reflect.InvocationHandler r0;
        org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface r1;
        java.lang.Object $r2, $r4;
        androidx.webkit.internal.WebViewRenderProcessImpl$1 $r3;
        androidx.webkit.internal.WebViewRenderProcessImpl $r5;

        r0 := @parameter0: java.lang.reflect.InvocationHandler;

        $r2 = staticinvoke <org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: java.lang.Object castToSuppLibClass(java.lang.Class,java.lang.reflect.InvocationHandler)>(class "Lorg/chromium/support_lib_boundary/WebViewRendererBoundaryInterface;", r0);

        r1 = (org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface) $r2;

        $r3 = new androidx.webkit.internal.WebViewRenderProcessImpl$1;

        specialinvoke $r3.<androidx.webkit.internal.WebViewRenderProcessImpl$1: void <init>(org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface)>(r1);

        $r4 = interfaceinvoke r1.<org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)>($r3);

        $r5 = (androidx.webkit.internal.WebViewRenderProcessImpl) $r4;

        return $r5;
    }

    public static androidx.webkit.internal.WebViewRenderProcessImpl forFrameworkObject(android.webkit.WebViewRenderProcess)
    {
        android.webkit.WebViewRenderProcess r0;
        java.util.WeakHashMap $r1, $r4;
        java.lang.Object $r2;
        androidx.webkit.internal.WebViewRenderProcessImpl $r3, r6, r7;

        r0 := @parameter0: android.webkit.WebViewRenderProcess;

        $r1 = <androidx.webkit.internal.WebViewRenderProcessImpl: java.util.WeakHashMap sFrameworkMap>;

        $r2 = virtualinvoke $r1.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r0);

        r6 = (androidx.webkit.internal.WebViewRenderProcessImpl) $r2;

        if r6 == null goto label1;

        return r6;

     label1:
        $r3 = new androidx.webkit.internal.WebViewRenderProcessImpl;

        specialinvoke $r3.<androidx.webkit.internal.WebViewRenderProcessImpl: void <init>(android.webkit.WebViewRenderProcess)>(r0);

        r7 = $r3;

        $r4 = <androidx.webkit.internal.WebViewRenderProcessImpl: java.util.WeakHashMap sFrameworkMap>;

        virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r7);

        return r7;
    }

    public boolean terminate()
    {
        androidx.webkit.internal.WebViewRenderProcessImpl r0;
        androidx.webkit.internal.ApiFeature$Q r1;
        android.webkit.WebViewRenderProcess r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.UnsupportedOperationException $r3;
        org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface $r4;
        java.lang.ref.WeakReference $r5;
        java.lang.Object $r6;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessImpl;

        r1 = <androidx.webkit.internal.WebViewFeatureInternal: androidx.webkit.internal.ApiFeature$Q WEB_VIEW_RENDERER_TERMINATE>;

        $z0 = virtualinvoke r1.<androidx.webkit.internal.ApiFeature$Q: boolean isSupportedByFramework()>();

        if $z0 == 0 goto label3;

        $r5 = r0.<androidx.webkit.internal.WebViewRenderProcessImpl: java.lang.ref.WeakReference mFrameworkObject>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.webkit.WebViewRenderProcess) $r6;

        if r2 == null goto label1;

        $z3 = staticinvoke <androidx.webkit.internal.ApiHelperForQ: boolean terminate(android.webkit.WebViewRenderProcess)>(r2);

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;

     label3:
        $z1 = virtualinvoke r1.<androidx.webkit.internal.ApiFeature$Q: boolean isSupportedByWebView()>();

        if $z1 == 0 goto label4;

        $r4 = r0.<androidx.webkit.internal.WebViewRenderProcessImpl: org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface mBoundaryInterface>;

        $z2 = interfaceinvoke $r4.<org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()>();

        return $z2;

     label4:
        $r3 = staticinvoke <androidx.webkit.internal.WebViewFeatureInternal: java.lang.UnsupportedOperationException getUnsupportedOperationException()>();

        throw $r3;
    }

    static void <clinit>()
    {
        java.util.WeakHashMap $r0;

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        <androidx.webkit.internal.WebViewRenderProcessImpl: java.util.WeakHashMap sFrameworkMap> = $r0;

        return;
    }

androidx.webkit.internal.WebViewRenderProcessImpl$1
<androidx.webkit.internal.WebViewRenderProcessImpl$1: org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface val$boundaryInterface>
    void <init>(org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface)
    {
        androidx.webkit.internal.WebViewRenderProcessImpl$1 r0;
        org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface r1;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessImpl$1;

        r1 := @parameter0: org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface;

        r0.<androidx.webkit.internal.WebViewRenderProcessImpl$1: org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface val$boundaryInterface> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object call()
    {
        androidx.webkit.internal.WebViewRenderProcessImpl$1 r0;
        androidx.webkit.internal.WebViewRenderProcessImpl $r1;
        org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface $r2;

        r0 := @this: androidx.webkit.internal.WebViewRenderProcessImpl$1;

        $r1 = new androidx.webkit.internal.WebViewRenderProcessImpl;

        $r2 = r0.<androidx.webkit.internal.WebViewRenderProcessImpl$1: org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface val$boundaryInterface>;

        specialinvoke $r1.<androidx.webkit.internal.WebViewRenderProcessImpl: void <init>(org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface)>($r2);

        return $r1;
    }

