androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory
<androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory: androidx.test.espresso.base.BaseLayerModule module>
<androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory: javax.inject.Provider contextProvider>
<androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory: javax.inject.Provider testStorageProvider>
    public static androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory create(androidx.test.espresso.base.BaseLayerModule, javax.inject.Provider, javax.inject.Provider)
    {
        androidx.test.espresso.base.BaseLayerModule r0;
        javax.inject.Provider r1, r2;
        androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory r3;

        r0 := @parameter0: androidx.test.espresso.base.BaseLayerModule;

        r1 := @parameter1: javax.inject.Provider;

        r2 := @parameter2: javax.inject.Provider;

        r3 = new androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory;

        specialinvoke r3.<androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory: void <init>(androidx.test.espresso.base.BaseLayerModule,javax.inject.Provider,javax.inject.Provider)>(r0, r1, r2);

        return r3;
    }

    public androidx.test.espresso.base.DefaultFailureHandler get()
    {
        androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory r0;
        javax.inject.Provider $r1, $r4;
        androidx.test.espresso.base.BaseLayerModule $r2;
        java.lang.Object $r3, $r6;
        android.content.Context $r5;
        androidx.test.platform.io.PlatformTestStorage $r7;
        androidx.test.espresso.base.DefaultFailureHandler $r8;

        r0 := @this: androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory;

        $r2 = r0.<androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory: androidx.test.espresso.base.BaseLayerModule module>;

        $r1 = r0.<androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory: javax.inject.Provider contextProvider>;

        $r3 = interfaceinvoke $r1.<javax.inject.Provider: java.lang.Object get()>();

        $r5 = (android.content.Context) $r3;

        $r4 = r0.<androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory: javax.inject.Provider testStorageProvider>;

        $r6 = interfaceinvoke $r4.<javax.inject.Provider: java.lang.Object get()>();

        $r7 = (androidx.test.platform.io.PlatformTestStorage) $r6;

        $r8 = staticinvoke <androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory: androidx.test.espresso.base.DefaultFailureHandler provideDefaultFailureHander(androidx.test.espresso.base.BaseLayerModule,android.content.Context,androidx.test.platform.io.PlatformTestStorage)>($r2, $r5, $r7);

        return $r8;
    }

    public static androidx.test.espresso.base.DefaultFailureHandler provideDefaultFailureHander(androidx.test.espresso.base.BaseLayerModule, android.content.Context, androidx.test.platform.io.PlatformTestStorage)
    {
        androidx.test.espresso.base.BaseLayerModule r0;
        android.content.Context r1;
        androidx.test.platform.io.PlatformTestStorage r2;
        androidx.test.espresso.base.DefaultFailureHandler $r3, $r5;
        java.lang.Object $r4;

        r0 := @parameter0: androidx.test.espresso.base.BaseLayerModule;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: androidx.test.platform.io.PlatformTestStorage;

        $r3 = virtualinvoke r0.<androidx.test.espresso.base.BaseLayerModule: androidx.test.espresso.base.DefaultFailureHandler provideDefaultFailureHander(android.content.Context,androidx.test.platform.io.PlatformTestStorage)>(r1, r2);

        $r4 = staticinvoke <androidx.test.espresso.core.internal.deps.dagger.internal.Preconditions: java.lang.Object checkNotNullFromProvides(java.lang.Object)>($r3);

        $r5 = (androidx.test.espresso.base.DefaultFailureHandler) $r4;

        return $r5;
    }

    public volatile java.lang.Object get()
    {
        androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory r0;
        androidx.test.espresso.base.DefaultFailureHandler $r1;

        r0 := @this: androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory;

        $r1 = virtualinvoke r0.<androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory: androidx.test.espresso.base.DefaultFailureHandler get()>();

        return $r1;
    }

    public void <init>(androidx.test.espresso.base.BaseLayerModule, javax.inject.Provider, javax.inject.Provider)
    {
        androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory r0;
        androidx.test.espresso.base.BaseLayerModule r1;
        javax.inject.Provider r2, r3;

        r0 := @this: androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory;

        r1 := @parameter0: androidx.test.espresso.base.BaseLayerModule;

        r2 := @parameter1: javax.inject.Provider;

        r3 := @parameter2: javax.inject.Provider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory: androidx.test.espresso.base.BaseLayerModule module> = r1;

        r0.<androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory: javax.inject.Provider contextProvider> = r2;

        r0.<androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory: javax.inject.Provider testStorageProvider> = r3;

        return;
    }

