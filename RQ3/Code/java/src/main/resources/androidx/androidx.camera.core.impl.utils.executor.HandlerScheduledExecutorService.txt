androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService
<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: java.lang.ThreadLocal sThreadLocalInstance>
<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: android.os.Handler mHandler>
    void <init>(android.os.Handler)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r0;
        android.os.Handler r1;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        r1 := @parameter0: android.os.Handler;

        specialinvoke r0.<java.util.concurrent.AbstractExecutorService: void <init>()>();

        r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: android.os.Handler mHandler> = r1;

        return;
    }

    static java.util.concurrent.ScheduledExecutorService currentThreadExecutor()
    {
        android.os.Looper r0;
        java.lang.ThreadLocal $r1, $r5;
        java.lang.Object $r2, r7;
        java.lang.IllegalStateException r8;
        android.os.Handler r9;
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r10;
        java.util.concurrent.ScheduledExecutorService r11;

        $r1 = <androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: java.lang.ThreadLocal sThreadLocalInstance>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r7 = (java.util.concurrent.ScheduledExecutorService) $r2;

        if r7 != null goto label2;

        r0 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r0 != null goto label1;

        r8 = new java.lang.IllegalStateException;

        specialinvoke r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Current thread has no looper!");

        throw r8;

     label1:
        r10 = new androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        r9 = new android.os.Handler;

        specialinvoke r9.<android.os.Handler: void <init>(android.os.Looper)>(r0);

        specialinvoke r10.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: void <init>(android.os.Handler)>(r9);

        r7 = r10;

        $r5 = <androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: java.lang.ThreadLocal sThreadLocalInstance>;

        virtualinvoke $r5.<java.lang.ThreadLocal: void set(java.lang.Object)>(r7);

     label2:
        r11 = (java.util.concurrent.ScheduledExecutorService) r7;

        return r11;
    }

    public java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r0;
        java.lang.Runnable r1;
        long l0;
        java.util.concurrent.TimeUnit r2;
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2 r3, $r4;
        java.util.concurrent.ScheduledFuture $r5;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        $r4 = new androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2;

        specialinvoke $r4.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2: void <init>(androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService,java.lang.Runnable)>(r0, r1);

        r3 = $r4;

        $r5 = virtualinvoke r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)>(r3, l0, r2);

        return $r5;
    }

    public java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable, long, java.util.concurrent.TimeUnit)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r0;
        java.util.concurrent.Callable r1;
        long l0, l1, $l2, $l3;
        java.util.concurrent.TimeUnit r2, $r4;
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture r3, r10;
        android.os.Handler $r6, $r7;
        boolean $z0;
        java.util.concurrent.RejectedExecutionException $r8;
        java.util.concurrent.ScheduledFuture $r9, r12;
        java.lang.Runnable r11;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        r1 := @parameter0: java.util.concurrent.Callable;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l3 = virtualinvoke $r4.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(l0, r2);

        l1 = $l2 + $l3;

        r10 = new androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture;

        $r6 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: android.os.Handler mHandler>;

        specialinvoke r10.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: void <init>(android.os.Handler,long,java.util.concurrent.Callable)>($r6, l1, r1);

        r3 = r10;

        $r7 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: android.os.Handler mHandler>;

        r11 = (java.lang.Runnable) r3;

        $z0 = virtualinvoke $r7.<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>(r11, l1);

        if $z0 == 0 goto label1;

        r12 = (java.util.concurrent.ScheduledFuture) r3;

        return r12;

     label1:
        $r8 = specialinvoke r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: java.util.concurrent.RejectedExecutionException createPostFailedException()>();

        $r9 = staticinvoke <androidx.camera.core.impl.utils.futures.Futures: java.util.concurrent.ScheduledFuture immediateFailedScheduledFuture(java.lang.Throwable)>($r8);

        return $r9;
    }

    public java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r0;
        java.lang.Runnable r1;
        long l0, l1;
        java.util.concurrent.TimeUnit r2;
        java.lang.UnsupportedOperationException $r3;
        java.lang.StringBuilder $r4, $r7, $r8;
        java.lang.Class $r5;
        java.lang.String $r6, $r9;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.util.concurrent.TimeUnit;

        $r3 = new java.lang.UnsupportedOperationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = class "Landroidx/camera/core/impl/utils/executor/HandlerScheduledExecutorService;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not yet support fixed-rate scheduling.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r9);

        throw $r3;
    }

    public java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r0;
        java.lang.Runnable r1;
        long l0, l1;
        java.util.concurrent.TimeUnit r2;
        java.lang.UnsupportedOperationException $r3;
        java.lang.StringBuilder $r4, $r7, $r8;
        java.lang.Class $r5;
        java.lang.String $r6, $r9;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.util.concurrent.TimeUnit;

        $r3 = new java.lang.UnsupportedOperationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = class "Landroidx/camera/core/impl/utils/executor/HandlerScheduledExecutorService;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not yet support fixed-delay scheduling.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r9);

        throw $r3;
    }

    public void shutdown()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.StringBuilder $r2, $r5, $r6;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = class "Landroidx/camera/core/impl/utils/executor/HandlerScheduledExecutorService;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be shut down. Use Looper.quitSafely().");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    public java.util.List shutdownNow()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r0;
        java.lang.UnsupportedOperationException $r1;
        java.lang.StringBuilder $r2, $r5, $r6;
        java.lang.Class $r3;
        java.lang.String $r4, $r7;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = class "Landroidx/camera/core/impl/utils/executor/HandlerScheduledExecutorService;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be shut down. Use Looper.quitSafely().");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r1;
    }

    public boolean isShutdown()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r0;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        return 0;
    }

    public boolean isTerminated()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r0;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        return 0;
    }

    public boolean awaitTermination(long, java.util.concurrent.TimeUnit)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        java.lang.UnsupportedOperationException $r2;
        java.lang.StringBuilder $r3, $r6, $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r8;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = class "Landroidx/camera/core/impl/utils/executor/HandlerScheduledExecutorService;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be shut down. Use Looper.quitSafely().");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r8);

        throw $r2;
    }

    public void execute(java.lang.Runnable)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r0;
        java.lang.Runnable r1;
        android.os.Handler $r2;
        boolean $z0;
        java.util.concurrent.RejectedExecutionException $r3;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>(r1);

        if $z0 != 0 goto label1;

        $r3 = specialinvoke r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: java.util.concurrent.RejectedExecutionException createPostFailedException()>();

        throw $r3;

     label1:
        return;
    }

    private java.util.concurrent.RejectedExecutionException createPostFailedException()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r0;
        java.util.concurrent.RejectedExecutionException $r1;
        java.lang.StringBuilder $r2, $r4, $r5;
        android.os.Handler $r3;
        java.lang.String $r6;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        $r1 = new java.util.concurrent.RejectedExecutionException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is shutting down");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.util.concurrent.RejectedExecutionException: void <init>(java.lang.String)>($r6);

        return $r1;
    }

    static void <clinit>()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$1 $r0;

        $r0 = new androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$1;

        specialinvoke $r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$1: void <init>()>();

        <androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: java.lang.ThreadLocal sThreadLocalInstance> = $r0;

        return;
    }

androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$1
    void <init>()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$1 r0;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$1;

        specialinvoke r0.<java.lang.ThreadLocal: void <init>()>();

        return;
    }

    public java.util.concurrent.ScheduledExecutorService initialValue()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$1 r0;
        android.os.Handler r1, $r5;
        android.os.Looper $r2, $r3, $r4, $r6;
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService $r7;
        java.util.concurrent.ScheduledExecutorService $r8;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$1;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r2 != $r3 goto label1;

        $r8 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.ScheduledExecutorService mainThreadExecutor()>();

        return $r8;

     label1:
        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r4 == null goto label2;

        $r5 = new android.os.Handler;

        $r6 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        specialinvoke $r5.<android.os.Handler: void <init>(android.os.Looper)>($r6);

        r1 = $r5;

        $r7 = new androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        specialinvoke $r7.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: void <init>(android.os.Handler)>(r1);

        return $r7;

     label2:
        return null;
    }

    public volatile java.lang.Object initialValue()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$1 r0;
        java.util.concurrent.ScheduledExecutorService $r1;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$1;

        $r1 = virtualinvoke r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$1: java.util.concurrent.ScheduledExecutorService initialValue()>();

        return $r1;
    }

androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2
<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2: java.lang.Runnable val$command>
<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService this$0>
    void <init>(androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService, java.lang.Runnable)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2 r0;
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService r1;
        java.lang.Runnable r2;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2;

        r1 := @parameter0: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        r2 := @parameter1: java.lang.Runnable;

        r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService this$0> = r1;

        r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2: java.lang.Runnable val$command> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void call()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2 r0;
        java.lang.Runnable $r1;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2;

        $r1 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2: java.lang.Runnable val$command>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        return null;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2 r0;
        java.lang.Void $r1;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2;

        $r1 = virtualinvoke r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2: java.lang.Void call()>();

        return $r1;
    }

androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1
<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1 this$1>
    void <init>(androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1 r0;
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1 r1;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1;

        r1 := @parameter0: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1;

        r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1 r0;
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1 $r1, $r5, $r6;
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture $r2, $r7;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        android.os.Handler $r8;
        java.lang.Runnable r9;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1;

        $r1 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1 this$1>;

        $r2 = $r1.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture this$0>;

        $r3 = $r2.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: java.util.concurrent.atomic.AtomicReference mCompleter>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>(null);

        if $r4 == null goto label1;

        $r5 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1 this$1>;

        $r8 = $r5.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1: android.os.Handler val$handler>;

        $r6 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1 this$1>;

        $r7 = $r6.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture this$0>;

        r9 = (java.lang.Runnable) $r7;

        virtualinvoke $r8.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r9);

     label1:
        return;
    }

androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1
<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1: android.os.Handler val$handler>
<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1: java.util.concurrent.Callable val$task>
<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture this$0>
    void <init>(androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture, android.os.Handler, java.util.concurrent.Callable)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1 r0;
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture r1;
        android.os.Handler r2;
        java.util.concurrent.Callable r3;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1;

        r1 := @parameter0: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: java.util.concurrent.Callable;

        r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture this$0> = r1;

        r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1: android.os.Handler val$handler> = r2;

        r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1: java.util.concurrent.Callable val$task> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.util.concurrent.RejectedExecutionException
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1 r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1 $r2;
        java.util.concurrent.Executor $r3;
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture $r4;
        java.util.concurrent.atomic.AtomicReference $r5;
        java.lang.StringBuilder $r6, $r7, $r10;
        java.util.concurrent.Callable $r8;
        java.lang.String $r9, $r11;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        $r2 = new androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1;

        specialinvoke $r2.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1: void <init>(androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1)>(r0);

        $r3 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor directExecutor()>();

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void addCancellationListener(java.lang.Runnable,java.util.concurrent.Executor)>($r2, $r3);

        $r4 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture this$0>;

        $r5 = $r4.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: java.util.concurrent.atomic.AtomicReference mCompleter>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HandlerScheduledFuture-");

        $r8 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1: java.util.concurrent.Callable val$task>;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture
<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: java.util.concurrent.atomic.AtomicReference mCompleter>
<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: long mRunAtMillis>
<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: java.util.concurrent.Callable mTask>
<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: com.google.common.util.concurrent.ListenableFuture mDelegate>
    void <init>(android.os.Handler, long, java.util.concurrent.Callable)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture r0;
        android.os.Handler r1;
        long l0;
        java.util.concurrent.Callable r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1 $r4;
        com.google.common.util.concurrent.ListenableFuture $r5;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture;

        r1 := @parameter0: android.os.Handler;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.Callable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(null);

        r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: java.util.concurrent.atomic.AtomicReference mCompleter> = $r3;

        r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: long mRunAtMillis> = l0;

        r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: java.util.concurrent.Callable mTask> = r2;

        $r4 = new androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1;

        specialinvoke $r4.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1: void <init>(androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture,android.os.Handler,java.util.concurrent.Callable)>(r0, r1, r2);

        $r5 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r4);

        r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: com.google.common.util.concurrent.ListenableFuture mDelegate> = $r5;

        return;
    }

    public boolean isPeriodic()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture r0;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture;

        return 0;
    }

    public long getDelay(java.util.concurrent.TimeUnit)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture r0;
        java.util.concurrent.TimeUnit r1, $r2;
        long $l0, $l1, $l2, $l3;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture;

        r1 := @parameter0: java.util.concurrent.TimeUnit;

        $l0 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: long mRunAtMillis>;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l0 - $l1;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l3 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($l2, $r2);

        return $l3;
    }

    public int compareTo(java.util.concurrent.Delayed)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture r0;
        java.util.concurrent.Delayed r1;
        java.util.concurrent.TimeUnit $r2, $r3;
        long $l0, $l1;
        int $i2;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture;

        r1 := @parameter0: java.util.concurrent.Delayed;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l0 = virtualinvoke r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: long getDelay(java.util.concurrent.TimeUnit)>($r2);

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l1 = interfaceinvoke r1.<java.util.concurrent.Delayed: long getDelay(java.util.concurrent.TimeUnit)>($r3);

        $i2 = staticinvoke <java.lang.Long: int compare(long,long)>($l0, $l1);

        return $i2;
    }

    public void run()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        java.lang.Throwable r2, $r7;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4, $r6;
        java.util.concurrent.Callable $r5;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture;

        $r3 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: java.util.concurrent.atomic.AtomicReference mCompleter>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>(null);

        r1 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r4;

        if r1 == null goto label4;

     label1:
        $r5 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: java.util.concurrent.Callable mTask>;

        $r6 = interfaceinvoke $r5.<java.util.concurrent.Callable: java.lang.Object call()>();

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>($r6);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        virtualinvoke r1.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)>(r2);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean cancel(boolean)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture r0;
        boolean z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r1;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: com.google.common.util.concurrent.ListenableFuture mDelegate>;

        $z1 = interfaceinvoke $r1.<com.google.common.util.concurrent.ListenableFuture: boolean cancel(boolean)>(z0);

        return $z1;
    }

    public boolean isCancelled()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture r0;
        com.google.common.util.concurrent.ListenableFuture $r1;
        boolean $z0;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture;

        $r1 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: com.google.common.util.concurrent.ListenableFuture mDelegate>;

        $z0 = interfaceinvoke $r1.<com.google.common.util.concurrent.ListenableFuture: boolean isCancelled()>();

        return $z0;
    }

    public boolean isDone()
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture r0;
        com.google.common.util.concurrent.ListenableFuture $r1;
        boolean $z0;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture;

        $r1 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: com.google.common.util.concurrent.ListenableFuture mDelegate>;

        $z0 = interfaceinvoke $r1.<com.google.common.util.concurrent.ListenableFuture: boolean isDone()>();

        return $z0;
    }

    public java.lang.Object get() throws java.util.concurrent.ExecutionException, java.lang.InterruptedException
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture r0;
        com.google.common.util.concurrent.ListenableFuture $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture;

        $r1 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: com.google.common.util.concurrent.ListenableFuture mDelegate>;

        $r2 = interfaceinvoke $r1.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        return $r2;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.util.concurrent.ExecutionException, java.lang.InterruptedException, java.util.concurrent.TimeoutException
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        com.google.common.util.concurrent.ListenableFuture $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: com.google.common.util.concurrent.ListenableFuture mDelegate>;

        $r3 = interfaceinvoke $r2.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l0, r1);

        return $r3;
    }

    public volatile int compareTo(java.lang.Object)
    {
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture r0;
        java.lang.Object r1;
        java.util.concurrent.Delayed $r2;
        int $i0;

        r0 := @this: androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.concurrent.Delayed) r1;

        $i0 = virtualinvoke r0.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture: int compareTo(java.util.concurrent.Delayed)>($r2);

        return $i0;
    }

