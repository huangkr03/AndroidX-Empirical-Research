kotlinx.coroutines.TimeoutCoroutine
<kotlinx.coroutines.TimeoutCoroutine: long time>
    public void <init>(long, kotlin.coroutines.Continuation)
    {
        kotlinx.coroutines.TimeoutCoroutine $r0;
        long $l0;
        kotlin.coroutines.Continuation $r1;
        kotlin.coroutines.CoroutineContext $r2;

        $r0 := @this: kotlinx.coroutines.TimeoutCoroutine;

        $l0 := @parameter0: long;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "uCont");

        $r2 = interfaceinvoke $r1.<kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()>();

        specialinvoke $r0.<kotlinx.coroutines.internal.ScopeCoroutine: void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)>($r2, $r1);

        $r0.<kotlinx.coroutines.TimeoutCoroutine: long time> = $l0;

        return;
    }

    public java.lang.String nameString$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines()
    {
        kotlinx.coroutines.TimeoutCoroutine $r0;
        java.lang.String $r1;
        long $l0;
        java.lang.StringBuilder $r2;

        $r0 := @this: kotlinx.coroutines.TimeoutCoroutine;

        $r1 = specialinvoke $r0.<kotlinx.coroutines.internal.ScopeCoroutine: java.lang.String nameString$third_party_kotlin_kotlinx_coroutines_kotlinx_coroutines()>();

        $l0 = $r0.<kotlinx.coroutines.TimeoutCoroutine: long time>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(timeMillis=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public void run()
    {
        kotlinx.coroutines.TimeoutCoroutine $r0;
        kotlinx.coroutines.TimeoutCancellationException $r1;
        long $l0;

        $r0 := @this: kotlinx.coroutines.TimeoutCoroutine;

        $l0 = $r0.<kotlinx.coroutines.TimeoutCoroutine: long time>;

        $r1 = staticinvoke <kotlinx.coroutines.TimeoutKt: kotlinx.coroutines.TimeoutCancellationException TimeoutCancellationException(long,kotlinx.coroutines.Job)>($l0, $r0);

        virtualinvoke $r0.<kotlinx.coroutines.TimeoutCoroutine: boolean cancelCoroutine(java.lang.Throwable)>($r1);

        return;
    }

