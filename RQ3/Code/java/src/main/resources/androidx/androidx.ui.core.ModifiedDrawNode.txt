androidx.ui.core.ModifiedDrawNode
<androidx.ui.core.ModifiedDrawNode: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl drawScope>
<androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas canvas>
    public void <init>(androidx.ui.core.LayoutNodeWrapper, androidx.ui.core.DrawModifier)
    {
        androidx.ui.core.ModifiedDrawNode r0;
        androidx.ui.core.LayoutNodeWrapper r1;
        androidx.ui.core.DrawModifier r2;
        androidx.ui.core.Modifier$Element $r3;
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl $r4;

        r0 := @this: androidx.ui.core.ModifiedDrawNode;

        r1 := @parameter0: androidx.ui.core.LayoutNodeWrapper;

        r2 := @parameter1: androidx.ui.core.DrawModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "wrapped");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "drawModifier");

        $r3 = (androidx.ui.core.Modifier$Element) r2;

        specialinvoke r0.<androidx.ui.core.DelegatingLayoutNodeWrapper: void <init>(androidx.ui.core.LayoutNodeWrapper,androidx.ui.core.Modifier$Element)>(r1, $r3);

        $r4 = new androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        specialinvoke $r4.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: void <init>(androidx.ui.core.ModifiedDrawNode)>(r0);

        r0.<androidx.ui.core.ModifiedDrawNode: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl drawScope> = $r4;

        return;
    }

    public void draw(androidx.ui.graphics.Canvas)
    {
        androidx.ui.core.ModifiedDrawNode r0;
        androidx.ui.graphics.Canvas r1, r3, $r8;
        androidx.ui.core.LayoutNodeWrapper r2;
        long l0, l1, $l2, $l4;
        float f0, $f1, $f2, f3;
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r4;
        boolean z5, z6, z8, z9;
        androidx.ui.core.DrawModifier r5;
        int $i3, $i5, $i6, $i7;
        androidx.ui.core.Modifier$Element $r6;
        androidx.ui.core.ContentDrawScope $r7;
        androidx.ui.unit.IntPxPosition r9, $r10;

        r0 := @this: androidx.ui.core.ModifiedDrawNode;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        r2 = (androidx.ui.core.LayoutNodeWrapper) r0;

        r9 = virtualinvoke r2.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition getPosition()>();

        l0 = virtualinvoke r9.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l2 = l0 >> 32;

        $i6 = (int) $l2;

        $i3 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i6);

        f0 = (float) $i3;

        $r10 = virtualinvoke r2.<androidx.ui.core.LayoutNodeWrapper: androidx.ui.unit.IntPxPosition getPosition()>();

        l1 = virtualinvoke $r10.<androidx.ui.unit.IntPxPosition: long getValue()>();

        $l4 = l1 & 4294967295L;

        $i7 = (int) $l4;

        $i5 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i7);

        f3 = (float) $i5;

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void translate(float,float)>(f0, f3);

        r3 = r1;

        r0.<androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas canvas> = r1;

        r4 = r0.<androidx.ui.core.ModifiedDrawNode: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl drawScope>;

        z5 = 0;

        z6 = 0;

        $r6 = virtualinvoke r0.<androidx.ui.core.ModifiedDrawNode: androidx.ui.core.Modifier$Element getModifier()>();

        r5 = (androidx.ui.core.DrawModifier) $r6;

        z8 = 0;

        z9 = 0;

        $r7 = (androidx.ui.core.ContentDrawScope) r4;

        interfaceinvoke r5.<androidx.ui.core.DrawModifier: void draw(androidx.ui.core.ContentDrawScope)>($r7);

        $r8 = (androidx.ui.graphics.Canvas) null;

        r0.<androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas canvas> = $r8;

        $f2 = neg f0;

        $f1 = neg f3;

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void translate(float,float)>($f2, $f1);

        return;
    }

    public static final androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)
    {
        androidx.ui.core.ModifiedDrawNode r0;
        androidx.ui.graphics.Canvas $r1;

        r0 := @parameter0: androidx.ui.core.ModifiedDrawNode;

        $r1 = r0.<androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas canvas>;

        return $r1;
    }

androidx.ui.core.ModifiedDrawNode$draw$1$1
<androidx.ui.core.ModifiedDrawNode$draw$1$1: androidx.ui.core.LayoutNodeDrawScope $drawScope>
<androidx.ui.core.ModifiedDrawNode$draw$1$1: androidx.ui.core.ModifiedDrawNode $this>
    void <init>(androidx.ui.core.LayoutNodeDrawScope, androidx.ui.core.ModifiedDrawNode)
    {
        androidx.ui.core.ModifiedDrawNode$draw$1$1 r0;
        androidx.ui.core.LayoutNodeDrawScope $r1;
        androidx.ui.core.ModifiedDrawNode $r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$draw$1$1;

        $r1 := @parameter0: androidx.ui.core.LayoutNodeDrawScope;

        $r2 := @parameter1: androidx.ui.core.ModifiedDrawNode;

        r0.<androidx.ui.core.ModifiedDrawNode$draw$1$1: androidx.ui.core.LayoutNodeDrawScope $drawScope> = $r1;

        r0.<androidx.ui.core.ModifiedDrawNode$draw$1$1: androidx.ui.core.ModifiedDrawNode $this> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.graphics.drawscope.DrawScope)
    {
        androidx.ui.core.ModifiedDrawNode$draw$1$1 r0;
        androidx.ui.graphics.drawscope.DrawScope r1;
        androidx.ui.core.LayoutNodeDrawScope r2;
        androidx.ui.core.ModifiedDrawNode r3;
        boolean z0, z1, z3, z4;
        androidx.ui.core.DrawModifier r4;
        androidx.ui.core.Modifier$Element $r5;
        androidx.ui.core.ContentDrawScope $r6;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$draw$1$1;

        r1 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<this>");

        r2 = r0.<androidx.ui.core.ModifiedDrawNode$draw$1$1: androidx.ui.core.LayoutNodeDrawScope $drawScope>;

        r3 = r0.<androidx.ui.core.ModifiedDrawNode$draw$1$1: androidx.ui.core.ModifiedDrawNode $this>;

        z0 = 0;

        z1 = 0;

        $r5 = virtualinvoke r3.<androidx.ui.core.ModifiedDrawNode: androidx.ui.core.Modifier$Element getModifier()>();

        r4 = (androidx.ui.core.DrawModifier) $r5;

        z3 = 0;

        z4 = 0;

        $r6 = (androidx.ui.core.ContentDrawScope) r2;

        interfaceinvoke r4.<androidx.ui.core.DrawModifier: void draw(androidx.ui.core.ContentDrawScope)>($r6);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.ModifiedDrawNode$draw$1$1 r0;
        java.lang.Object r1;
        androidx.ui.graphics.drawscope.DrawScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$draw$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.graphics.drawscope.DrawScope) r1;

        virtualinvoke r0.<androidx.ui.core.ModifiedDrawNode$draw$1$1: void invoke(androidx.ui.graphics.drawscope.DrawScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.ui.core.ModifiedDrawNode$DrawScopeImpl
<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>
    public void <init>(androidx.ui.core.ModifiedDrawNode)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.core.ModifiedDrawNode r1;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.core.ModifiedDrawNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawContent()
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.core.ModifiedDrawNode $r2, $r4;
        androidx.ui.core.LayoutNodeWrapper $r3;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r2 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        $r3 = virtualinvoke $r2.<androidx.ui.core.ModifiedDrawNode: androidx.ui.core.LayoutNodeWrapper getWrapped$ui_platform_release()>();

        $r4 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r1 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r1);

        virtualinvoke $r3.<androidx.ui.core.LayoutNodeWrapper: void draw(androidx.ui.graphics.Canvas)>(r1);

        return;
    }

    public float getDensity()
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.core.ModifiedDrawNode $r1;
        androidx.ui.core.LayoutNode $r2;
        androidx.ui.core.ComponentNode $r3;
        androidx.ui.core.Owner $r4;
        androidx.ui.unit.Density $r5;
        float $f0;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        $r2 = virtualinvoke $r1.<androidx.ui.core.ModifiedDrawNode: androidx.ui.core.LayoutNode getLayoutNode$ui_platform_release()>();

        $r3 = (androidx.ui.core.ComponentNode) $r2;

        $r4 = staticinvoke <androidx.ui.core.ComponentNodesKt: androidx.ui.core.Owner requireOwner(androidx.ui.core.ComponentNode)>($r3);

        $r5 = interfaceinvoke $r4.<androidx.ui.core.Owner: androidx.ui.unit.Density getDensity()>();

        $f0 = interfaceinvoke $r5.<androidx.ui.unit.Density: float getDensity()>();

        return $f0;
    }

    public float getFontScale()
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.core.ModifiedDrawNode $r1;
        androidx.ui.core.LayoutNode $r2;
        androidx.ui.core.ComponentNode $r3;
        androidx.ui.core.Owner $r4;
        androidx.ui.unit.Density $r5;
        float $f0;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        $r2 = virtualinvoke $r1.<androidx.ui.core.ModifiedDrawNode: androidx.ui.core.LayoutNode getLayoutNode$ui_platform_release()>();

        $r3 = (androidx.ui.core.ComponentNode) $r2;

        $r4 = staticinvoke <androidx.ui.core.ComponentNodesKt: androidx.ui.core.Owner requireOwner(androidx.ui.core.ComponentNode)>($r3);

        $r5 = interfaceinvoke $r4.<androidx.ui.core.Owner: androidx.ui.unit.Density getDensity()>();

        $f0 = interfaceinvoke $r5.<androidx.ui.unit.Density: float getFontScale()>();

        return $f0;
    }

    public androidx.ui.unit.PxSize getSize()
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.unit.IntPxSize $r1, r4;
        long l0, l1, l2, l3, l4, l5, $l6, $l7, $l10, $l11;
        float f0, f1, $f2, $f3, $f4, $f5;
        boolean z2, z3;
        androidx.ui.core.ModifiedDrawNode $r2;
        int $i8, $i9, $i12, i13, $i14, $i15;
        androidx.ui.unit.PxSize $r3;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r2 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        $r1 = virtualinvoke $r2.<androidx.ui.core.ModifiedDrawNode: androidx.ui.unit.IntPxSize getMeasuredSize()>();

        r4 = $r1;

        l0 = virtualinvoke r4.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l6 = l0 >> 32;

        $i12 = (int) $l6;

        i13 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i12);

        l1 = virtualinvoke $r1.<androidx.ui.unit.IntPxSize: long getValue()>();

        $l7 = l1 & 4294967295L;

        $i14 = (int) $l7;

        $i15 = staticinvoke <androidx.ui.unit.IntPx: int constructor-impl(int)>($i14);

        $f2 = (float) i13;

        $f4 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f2);

        $f3 = (float) $i15;

        $f5 = staticinvoke <androidx.ui.unit.Px: float constructor-impl(float)>($f3);

        f0 = $f4;

        z2 = 0;

        $i8 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        l2 = (long) $i8;

        f1 = $f5;

        z3 = 0;

        $i9 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f1);

        l3 = (long) $i9;

        $l11 = l2 << 32;

        $l10 = l3 & 4294967295L;

        l4 = $l11 | $l10;

        l5 = l4;

        $r3 = new androidx.ui.unit.PxSize;

        specialinvoke $r3.<androidx.ui.unit.PxSize: void <init>(long)>(l5);

        return $r3;
    }

    public android.graphics.Canvas getNativeCanvas()
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.core.ModifiedDrawNode $r2;
        android.graphics.Canvas $r3;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r2 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r1 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r1);

        $r3 = interfaceinvoke r1.<androidx.ui.graphics.Canvas: android.graphics.Canvas getNativeCanvas()>();

        return $r3;
    }

    public androidx.ui.core.LayoutDirection getLayoutDirection()
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.core.ModifiedDrawNode $r1;
        androidx.ui.core.MeasureScope $r2;
        androidx.ui.core.LayoutDirection $r3;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r1 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        $r2 = virtualinvoke $r1.<androidx.ui.core.ModifiedDrawNode: androidx.ui.core.MeasureScope getMeasureScope()>();

        $r3 = virtualinvoke $r2.<androidx.ui.core.MeasureScope: androidx.ui.core.LayoutDirection getLayoutDirection()>();

        return $r3;
    }

    public void save()
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.core.ModifiedDrawNode $r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r2 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r1 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r1);

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void save()>();

        return;
    }

    public void restore()
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.core.ModifiedDrawNode $r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r2 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r1 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r1);

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void restore()>();

        return;
    }

    public void saveLayer(androidx.ui.geometry.Rect, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas r3;
        androidx.ui.core.ModifiedDrawNode $r4;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        r2 := @parameter1: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "bounds");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r4 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r3 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r3);

        interfaceinvoke r3.<androidx.ui.graphics.Canvas: void saveLayer(androidx.ui.geometry.Rect,androidx.ui.graphics.Paint)>(r1, r2);

        return;
    }

    public void translate(float, float)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        float f0, f1;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.core.ModifiedDrawNode $r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r1 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r1);

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void translate(float,float)>(f0, f1);

        return;
    }

    public void scale(float, float)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        float f0, f1;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.core.ModifiedDrawNode $r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r1 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r1);

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void scale(float,float)>(f0, f1);

        return;
    }

    public void rotate(float)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        float f0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.core.ModifiedDrawNode $r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        f0 := @parameter0: float;

        $r2 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r1 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r1);

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void rotate(float)>(f0);

        return;
    }

    public void skew(float, float)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        float f0, f1;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.core.ModifiedDrawNode $r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r1 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r1);

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void skew(float,float)>(f0, f1);

        return;
    }

    public void concat(androidx.ui.graphics.vectormath.Matrix4)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.vectormath.Matrix4 r1;
        androidx.ui.graphics.Canvas r2;
        androidx.ui.core.ModifiedDrawNode $r3;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.vectormath.Matrix4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "matrix4");

        $r3 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r2 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r2);

        interfaceinvoke r2.<androidx.ui.graphics.Canvas: void concat(androidx.ui.graphics.vectormath.Matrix4)>(r1);

        return;
    }

    public void clipRect(androidx.ui.geometry.Rect, androidx.ui.graphics.ClipOp)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.graphics.ClipOp r2;
        androidx.ui.graphics.Canvas r3;
        androidx.ui.core.ModifiedDrawNode $r4;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        r2 := @parameter1: androidx.ui.graphics.ClipOp;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "clipOp");

        $r4 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r3 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r3);

        interfaceinvoke r3.<androidx.ui.graphics.Canvas: void clipRect(androidx.ui.geometry.Rect,androidx.ui.graphics.ClipOp)>(r1, r2);

        return;
    }

    public void clipRRect(androidx.ui.geometry.RRect)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.geometry.RRect r1;
        androidx.ui.graphics.Canvas r2;
        androidx.ui.core.ModifiedDrawNode $r3;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.RRect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rrect");

        $r3 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r2 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r2);

        interfaceinvoke r2.<androidx.ui.graphics.Canvas: void clipRRect(androidx.ui.geometry.RRect)>(r1);

        return;
    }

    public void clipPath(androidx.ui.graphics.Path)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.Path r1;
        androidx.ui.graphics.Canvas r2;
        androidx.ui.core.ModifiedDrawNode $r3;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.Path;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "path");

        $r3 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r2 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r2);

        interfaceinvoke r2.<androidx.ui.graphics.Canvas: void clipPath(androidx.ui.graphics.Path)>(r1);

        return;
    }

    public void drawLine(androidx.ui.geometry.Offset, androidx.ui.geometry.Offset, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.geometry.Offset r1, r2;
        androidx.ui.graphics.Paint r3;
        androidx.ui.graphics.Canvas r4;
        androidx.ui.core.ModifiedDrawNode $r5;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Offset;

        r2 := @parameter1: androidx.ui.geometry.Offset;

        r3 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "p1");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "p2");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "paint");

        $r5 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r4 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r4);

        interfaceinvoke r4.<androidx.ui.graphics.Canvas: void drawLine(androidx.ui.geometry.Offset,androidx.ui.geometry.Offset,androidx.ui.graphics.Paint)>(r1, r2, r3);

        return;
    }

    public void drawRect(androidx.ui.geometry.Rect, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas r3;
        androidx.ui.core.ModifiedDrawNode $r4;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        r2 := @parameter1: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r4 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r3 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r3);

        interfaceinvoke r3.<androidx.ui.graphics.Canvas: void drawRect(androidx.ui.geometry.Rect,androidx.ui.graphics.Paint)>(r1, r2);

        return;
    }

    public void drawRoundRect(float, float, float, float, float, float, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        float f0, f1, f2, f3, f4, f5;
        androidx.ui.graphics.Paint r1;
        androidx.ui.graphics.Canvas r2;
        androidx.ui.core.ModifiedDrawNode $r3;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        r1 := @parameter6: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "paint");

        $r3 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r2 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r2);

        interfaceinvoke r2.<androidx.ui.graphics.Canvas: void drawRoundRect(float,float,float,float,float,float,androidx.ui.graphics.Paint)>(f0, f1, f2, f3, f4, f5, r1);

        return;
    }

    public void drawOval(androidx.ui.geometry.Rect, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.geometry.Rect r1;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas r3;
        androidx.ui.core.ModifiedDrawNode $r4;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        r2 := @parameter1: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r4 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r3 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r3);

        interfaceinvoke r3.<androidx.ui.graphics.Canvas: void drawOval(androidx.ui.geometry.Rect,androidx.ui.graphics.Paint)>(r1, r2);

        return;
    }

    public void drawCircle(androidx.ui.geometry.Offset, float, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.geometry.Offset r1;
        float f0;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas r3;
        androidx.ui.core.ModifiedDrawNode $r4;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Offset;

        f0 := @parameter1: float;

        r2 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "center");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r4 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r3 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r3);

        interfaceinvoke r3.<androidx.ui.graphics.Canvas: void drawCircle(androidx.ui.geometry.Offset,float,androidx.ui.graphics.Paint)>(r1, f0, r2);

        return;
    }

    public void drawArc(androidx.ui.geometry.Rect, float, float, boolean, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.geometry.Rect r1;
        float f0, f1;
        boolean z0;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas r3;
        androidx.ui.core.ModifiedDrawNode $r4;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        r2 := @parameter4: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r4 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r3 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r3);

        interfaceinvoke r3.<androidx.ui.graphics.Canvas: void drawArc(androidx.ui.geometry.Rect,float,float,boolean,androidx.ui.graphics.Paint)>(r1, f0, f1, z0, r2);

        return;
    }

    public void drawPath(androidx.ui.graphics.Path, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.Path r1;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas r3;
        androidx.ui.core.ModifiedDrawNode $r4;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.Path;

        r2 := @parameter1: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "path");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        $r4 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r3 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r3);

        interfaceinvoke r3.<androidx.ui.graphics.Canvas: void drawPath(androidx.ui.graphics.Path,androidx.ui.graphics.Paint)>(r1, r2);

        return;
    }

    public void drawImage(androidx.ui.graphics.ImageAsset, androidx.ui.geometry.Offset, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.ImageAsset r1;
        androidx.ui.geometry.Offset r2;
        androidx.ui.graphics.Paint r3;
        androidx.ui.graphics.Canvas r4;
        androidx.ui.core.ModifiedDrawNode $r5;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.ImageAsset;

        r2 := @parameter1: androidx.ui.geometry.Offset;

        r3 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "image");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "topLeftOffset");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "paint");

        $r5 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r4 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r4);

        interfaceinvoke r4.<androidx.ui.graphics.Canvas: void drawImage(androidx.ui.graphics.ImageAsset,androidx.ui.geometry.Offset,androidx.ui.graphics.Paint)>(r1, r2, r3);

        return;
    }

    public void drawImageRect(androidx.ui.graphics.ImageAsset, androidx.ui.geometry.Rect, androidx.ui.geometry.Rect, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.ImageAsset r1;
        androidx.ui.geometry.Rect r2, r3;
        androidx.ui.graphics.Paint r4;
        androidx.ui.graphics.Canvas r5;
        androidx.ui.core.ModifiedDrawNode $r6;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.ImageAsset;

        r2 := @parameter1: androidx.ui.geometry.Rect;

        r3 := @parameter2: androidx.ui.geometry.Rect;

        r4 := @parameter3: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "image");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "dst");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "paint");

        $r6 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r5 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r5);

        interfaceinvoke r5.<androidx.ui.graphics.Canvas: void drawImageRect(androidx.ui.graphics.ImageAsset,androidx.ui.geometry.Rect,androidx.ui.geometry.Rect,androidx.ui.graphics.Paint)>(r1, r2, r3, r4);

        return;
    }

    public void drawPicture(androidx.ui.graphics.Picture)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.Picture r1;
        androidx.ui.graphics.Canvas r2;
        androidx.ui.core.ModifiedDrawNode $r3;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.Picture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "picture");

        $r3 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r2 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r2);

        interfaceinvoke r2.<androidx.ui.graphics.Canvas: void drawPicture(androidx.ui.graphics.Picture)>(r1);

        return;
    }

    public void drawPoints(androidx.ui.graphics.PointMode, java.util.List, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.PointMode r1;
        java.util.List r2;
        androidx.ui.graphics.Paint r3;
        androidx.ui.graphics.Canvas r4;
        androidx.ui.core.ModifiedDrawNode $r5;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.PointMode;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pointMode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "points");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "paint");

        $r5 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r4 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r4);

        interfaceinvoke r4.<androidx.ui.graphics.Canvas: void drawPoints(androidx.ui.graphics.PointMode,java.util.List,androidx.ui.graphics.Paint)>(r1, r2, r3);

        return;
    }

    public void drawRawPoints(androidx.ui.graphics.PointMode, float[], androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.PointMode r1;
        float[] r2;
        androidx.ui.graphics.Paint r3;
        androidx.ui.graphics.Canvas r4;
        androidx.ui.core.ModifiedDrawNode $r5;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.PointMode;

        r2 := @parameter1: float[];

        r3 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "pointMode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "points");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "paint");

        $r5 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r4 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r4);

        interfaceinvoke r4.<androidx.ui.graphics.Canvas: void drawRawPoints(androidx.ui.graphics.PointMode,float[],androidx.ui.graphics.Paint)>(r1, r2, r3);

        return;
    }

    public void drawVertices(androidx.ui.graphics.Vertices, androidx.ui.graphics.BlendMode, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.Vertices r1;
        androidx.ui.graphics.BlendMode r2;
        androidx.ui.graphics.Paint r3;
        androidx.ui.graphics.Canvas r4;
        androidx.ui.core.ModifiedDrawNode $r5;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.graphics.Vertices;

        r2 := @parameter1: androidx.ui.graphics.BlendMode;

        r3 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "vertices");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "blendMode");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "paint");

        $r5 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r4 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r4);

        interfaceinvoke r4.<androidx.ui.graphics.Canvas: void drawVertices(androidx.ui.graphics.Vertices,androidx.ui.graphics.BlendMode,androidx.ui.graphics.Paint)>(r1, r2, r3);

        return;
    }

    public void enableZ()
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.core.ModifiedDrawNode $r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r2 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r1 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r1);

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void enableZ()>();

        return;
    }

    public void disableZ()
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.graphics.Canvas r1;
        androidx.ui.core.ModifiedDrawNode $r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r2 = r0.<androidx.ui.core.ModifiedDrawNode$DrawScopeImpl: androidx.ui.core.ModifiedDrawNode this$0>;

        r1 = staticinvoke <androidx.ui.core.ModifiedDrawNode: androidx.ui.graphics.Canvas access$getCanvas$p(androidx.ui.core.ModifiedDrawNode)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>(r1);

        interfaceinvoke r1.<androidx.ui.graphics.Canvas: void disableZ()>();

        return;
    }

    public androidx.ui.geometry.Rect toRect(androidx.ui.unit.Bounds)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.unit.Bounds $r1;
        androidx.ui.geometry.Rect $r2;
        androidx.ui.unit.Density r3;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r1 := @parameter0: androidx.ui.unit.Bounds;

        r3 = (androidx.ui.unit.Density) r0;

        $r2 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: androidx.ui.geometry.Rect toRect(androidx.ui.unit.Density,androidx.ui.unit.Bounds)>(r3, $r1);

        return $r2;
    }

    public int toIntPx(androidx.ui.unit.Dp)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.unit.Dp $r1;
        int $i0;
        androidx.ui.unit.Density r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r1 := @parameter0: androidx.ui.unit.Dp;

        r2 = (androidx.ui.unit.Density) r0;

        $i0 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: int toIntPx(androidx.ui.unit.Density,androidx.ui.unit.Dp)>(r2, $r1);

        return $i0;
    }

    public float toPx(androidx.ui.unit.Dp)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.unit.Dp $r1;
        float $f0;
        androidx.ui.unit.Density r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r1 := @parameter0: androidx.ui.unit.Dp;

        r2 = (androidx.ui.unit.Density) r0;

        $f0 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: float toPx(androidx.ui.unit.Density,androidx.ui.unit.Dp)>(r2, $r1);

        return $f0;
    }

    public long toSp(androidx.ui.unit.Dp)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.unit.Dp $r1;
        long $l0;
        androidx.ui.unit.Density r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $r1 := @parameter0: androidx.ui.unit.Dp;

        r2 = (androidx.ui.unit.Density) r0;

        $l0 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: long toSp(androidx.ui.unit.Density,androidx.ui.unit.Dp)>(r2, $r1);

        return $l0;
    }

    public androidx.ui.unit.Dp toDp-gshw56o(int)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        int $i0;
        androidx.ui.unit.Dp $r1;
        androidx.ui.unit.Density r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $i0 := @parameter0: int;

        r2 = (androidx.ui.unit.Density) r0;

        $r1 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: androidx.ui.unit.Dp toDp-gshw56o(androidx.ui.unit.Density,int)>(r2, $i0);

        return $r1;
    }

    public long toSp-gshw56o(int)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        int $i0;
        long $l1;
        androidx.ui.unit.Density r1;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $i0 := @parameter0: int;

        r1 = (androidx.ui.unit.Density) r0;

        $l1 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: long toSp-gshw56o(androidx.ui.unit.Density,int)>(r1, $i0);

        return $l1;
    }

    public androidx.ui.unit.Dp toDp-NgWp0Z8(float)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        float $f0;
        androidx.ui.unit.Dp $r1;
        androidx.ui.unit.Density r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $f0 := @parameter0: float;

        r2 = (androidx.ui.unit.Density) r0;

        $r1 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: androidx.ui.unit.Dp toDp-NgWp0Z8(androidx.ui.unit.Density,float)>(r2, $f0);

        return $r1;
    }

    public long toSp-NgWp0Z8(float)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        float $f0;
        long $l0;
        androidx.ui.unit.Density r1;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $f0 := @parameter0: float;

        r1 = (androidx.ui.unit.Density) r0;

        $l0 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: long toSp-NgWp0Z8(androidx.ui.unit.Density,float)>(r1, $f0);

        return $l0;
    }

    public androidx.ui.unit.PxSize toPx-kAYDl8w(long)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        long $l0;
        androidx.ui.unit.PxSize $r1;
        androidx.ui.unit.Density r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $l0 := @parameter0: long;

        r2 = (androidx.ui.unit.Density) r0;

        $r1 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: androidx.ui.unit.PxSize toPx-kAYDl8w(androidx.ui.unit.Density,long)>(r2, $l0);

        return $r1;
    }

    public androidx.ui.unit.Dp toDp-vVlMl6k(long)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        long $l0;
        androidx.ui.unit.Dp $r1;
        androidx.ui.unit.Density r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $l0 := @parameter0: long;

        r2 = (androidx.ui.unit.Density) r0;

        $r1 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: androidx.ui.unit.Dp toDp-vVlMl6k(androidx.ui.unit.Density,long)>(r2, $l0);

        return $r1;
    }

    public int toIntPx-vVlMl6k(long)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        long $l0;
        int $i1;
        androidx.ui.unit.Density r1;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $l0 := @parameter0: long;

        r1 = (androidx.ui.unit.Density) r0;

        $i1 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: int toIntPx-vVlMl6k(androidx.ui.unit.Density,long)>(r1, $l0);

        return $i1;
    }

    public float toPx-vVlMl6k(long)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        long $l0;
        float $f0;
        androidx.ui.unit.Density r1;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $l0 := @parameter0: long;

        r1 = (androidx.ui.unit.Density) r0;

        $f0 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: float toPx-vVlMl6k(androidx.ui.unit.Density,long)>(r1, $l0);

        return $f0;
    }

    public void drawArcRad(androidx.ui.geometry.Rect, float, float, boolean, androidx.ui.graphics.Paint)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        androidx.ui.geometry.Rect r1;
        float f0, f1;
        boolean z0;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Canvas r3;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        r2 := @parameter4: androidx.ui.graphics.Paint;

        r3 = (androidx.ui.graphics.Canvas) r0;

        staticinvoke <androidx.ui.graphics.Canvas$DefaultImpls: void drawArcRad(androidx.ui.graphics.Canvas,androidx.ui.geometry.Rect,float,float,boolean,androidx.ui.graphics.Paint)>(r3, r1, f0, f1, z0, r2);

        return;
    }

    public androidx.ui.unit.Dp toDp(float)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        float $f0;
        androidx.ui.unit.Dp $r1;
        androidx.ui.unit.Density r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $f0 := @parameter0: float;

        r2 = (androidx.ui.unit.Density) r0;

        $r1 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: androidx.ui.unit.Dp toDp(androidx.ui.unit.Density,float)>(r2, $f0);

        return $r1;
    }

    public long toSp(float)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        float $f0;
        long $l0;
        androidx.ui.unit.Density r1;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $f0 := @parameter0: float;

        r1 = (androidx.ui.unit.Density) r0;

        $l0 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: long toSp(androidx.ui.unit.Density,float)>(r1, $f0);

        return $l0;
    }

    public androidx.ui.unit.Dp toDp(int)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        int $i0;
        androidx.ui.unit.Dp $r1;
        androidx.ui.unit.Density r2;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $i0 := @parameter0: int;

        r2 = (androidx.ui.unit.Density) r0;

        $r1 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: androidx.ui.unit.Dp toDp(androidx.ui.unit.Density,int)>(r2, $i0);

        return $r1;
    }

    public long toSp(int)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        int $i0;
        long $l1;
        androidx.ui.unit.Density r1;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        $i0 := @parameter0: int;

        r1 = (androidx.ui.unit.Density) r0;

        $l1 = staticinvoke <androidx.ui.unit.Density$DefaultImpls: long toSp(androidx.ui.unit.Density,int)>(r1, $i0);

        return $l1;
    }

    public void skewRad(float, float)
    {
        androidx.ui.core.ModifiedDrawNode$DrawScopeImpl r0;
        float f0, f1;
        androidx.ui.graphics.Canvas r1;

        r0 := @this: androidx.ui.core.ModifiedDrawNode$DrawScopeImpl;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 = (androidx.ui.graphics.Canvas) r0;

        staticinvoke <androidx.ui.graphics.Canvas$DefaultImpls: void skewRad(androidx.ui.graphics.Canvas,float,float)>(r1, f0, f1);

        return;
    }

