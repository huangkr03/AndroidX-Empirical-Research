androidx.room.compiler.processing.ksp.KspAnnotation
<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.ksp.KspProcessingEnv env>
<androidx.room.compiler.processing.ksp.KspAnnotation: com.google.devtools.ksp.symbol.KSAnnotation ksAnnotated>
<androidx.room.compiler.processing.ksp.KspAnnotation: kotlin.Lazy ksType$delegate>
<androidx.room.compiler.processing.ksp.KspAnnotation: kotlin.Lazy type$delegate>
<androidx.room.compiler.processing.ksp.KspAnnotation: kotlin.Lazy annotationValues$delegate>
    public void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv, com.google.devtools.ksp.symbol.KSAnnotation)
    {
        androidx.room.compiler.processing.ksp.KspAnnotation r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv r1;
        com.google.devtools.ksp.symbol.KSAnnotation r2;
        androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2 $r3;
        kotlin.jvm.functions.Function0 $r4, $r7, $r10;
        kotlin.Lazy $r5, $r8, $r11;
        androidx.room.compiler.processing.ksp.KspAnnotation$type$2 $r6;
        androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2 $r9;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation;

        r1 := @parameter0: androidx.room.compiler.processing.ksp.KspProcessingEnv;

        r2 := @parameter1: com.google.devtools.ksp.symbol.KSAnnotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "env");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "ksAnnotated");

        specialinvoke r0.<androidx.room.compiler.processing.InternalXAnnotation: void <init>()>();

        r0.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.ksp.KspProcessingEnv env> = r1;

        r0.<androidx.room.compiler.processing.ksp.KspAnnotation: com.google.devtools.ksp.symbol.KSAnnotation ksAnnotated> = r2;

        $r3 = new androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2;

        specialinvoke $r3.<androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2: void <init>(androidx.room.compiler.processing.ksp.KspAnnotation)>(r0);

        $r4 = (kotlin.jvm.functions.Function0) $r3;

        $r5 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r4);

        r0.<androidx.room.compiler.processing.ksp.KspAnnotation: kotlin.Lazy ksType$delegate> = $r5;

        $r6 = new androidx.room.compiler.processing.ksp.KspAnnotation$type$2;

        specialinvoke $r6.<androidx.room.compiler.processing.ksp.KspAnnotation$type$2: void <init>(androidx.room.compiler.processing.ksp.KspAnnotation)>(r0);

        $r7 = (kotlin.jvm.functions.Function0) $r6;

        $r8 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r7);

        r0.<androidx.room.compiler.processing.ksp.KspAnnotation: kotlin.Lazy type$delegate> = $r8;

        $r9 = new androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2;

        specialinvoke $r9.<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2: void <init>(androidx.room.compiler.processing.ksp.KspAnnotation)>(r0);

        $r10 = (kotlin.jvm.functions.Function0) $r9;

        $r11 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r10);

        r0.<androidx.room.compiler.processing.ksp.KspAnnotation: kotlin.Lazy annotationValues$delegate> = $r11;

        return;
    }

    public final androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()
    {
        androidx.room.compiler.processing.ksp.KspAnnotation r0;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        return $r1;
    }

    public final com.google.devtools.ksp.symbol.KSAnnotation getKsAnnotated()
    {
        androidx.room.compiler.processing.ksp.KspAnnotation r0;
        com.google.devtools.ksp.symbol.KSAnnotation $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation: com.google.devtools.ksp.symbol.KSAnnotation ksAnnotated>;

        return $r1;
    }

    public final com.google.devtools.ksp.symbol.KSType getKsType()
    {
        androidx.room.compiler.processing.ksp.KspAnnotation r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        com.google.devtools.ksp.symbol.KSType $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation: kotlin.Lazy ksType$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (com.google.devtools.ksp.symbol.KSType) $r2;

        return $r3;
    }

    public java.lang.String getName()
    {
        androidx.room.compiler.processing.ksp.KspAnnotation r0;
        com.google.devtools.ksp.symbol.KSAnnotation $r1;
        com.google.devtools.ksp.symbol.KSName $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation: com.google.devtools.ksp.symbol.KSAnnotation ksAnnotated>;

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSAnnotation: com.google.devtools.ksp.symbol.KSName getShortName()>();

        $r3 = interfaceinvoke $r2.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        return $r3;
    }

    public java.lang.String getQualifiedName()
    {
        androidx.room.compiler.processing.ksp.KspAnnotation r0;
        com.google.devtools.ksp.symbol.KSType $r1;
        com.google.devtools.ksp.symbol.KSDeclaration $r2;
        com.google.devtools.ksp.symbol.KSName $r3;
        java.lang.String $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotation: com.google.devtools.ksp.symbol.KSType getKsType()>();

        $r2 = interfaceinvoke $r1.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r3 = interfaceinvoke $r2.<com.google.devtools.ksp.symbol.KSDeclaration: com.google.devtools.ksp.symbol.KSName getQualifiedName()>();

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        if $r4 != null goto label2;

     label1:
        $r4 = "";

     label2:
        return $r4;
    }

    public androidx.room.compiler.processing.XType getType()
    {
        androidx.room.compiler.processing.ksp.KspAnnotation r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.XType $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation: kotlin.Lazy type$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.XType) $r2;

        return $r3;
    }

    public java.util.List getAnnotationValues()
    {
        androidx.room.compiler.processing.ksp.KspAnnotation r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation;

        r1 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation: kotlin.Lazy annotationValues$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (java.util.List) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.XAnnotationBox asAnnotationBox(java.lang.Class)
    {
        androidx.room.compiler.processing.ksp.KspAnnotation r0;
        java.lang.Class r1;
        androidx.room.compiler.processing.ksp.KspAnnotationBox $r2;
        com.google.devtools.ksp.symbol.KSAnnotation $r3;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r4;
        androidx.room.compiler.processing.XAnnotationBox $r5;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation;

        r1 := @parameter0: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotationClass");

        $r2 = new androidx.room.compiler.processing.ksp.KspAnnotationBox;

        $r4 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.ksp.KspProcessingEnv env>;

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation: com.google.devtools.ksp.symbol.KSAnnotation ksAnnotated>;

        specialinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotationBox: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,java.lang.Class,com.google.devtools.ksp.symbol.KSAnnotation)>($r4, r1, $r3);

        $r5 = (androidx.room.compiler.processing.XAnnotationBox) $r2;

        return $r5;
    }

androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2$invoke$$inlined$sortedBy$1
<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2$invoke$$inlined$sortedBy$1: java.util.Map $indexByName$inlined>
    public void <init>(java.util.Map)
    {
        androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2$invoke$$inlined$sortedBy$1 r0;
        java.util.Map r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2$invoke$$inlined$sortedBy$1;

        r1 := @parameter0: java.util.Map;

        r0.<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2$invoke$$inlined$sortedBy$1: java.util.Map $indexByName$inlined> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int compare(java.lang.Object, java.lang.Object)
    {
        androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2$invoke$$inlined$sortedBy$1 r0;
        java.lang.Object r1, r2, $r6, $r10;
        java.lang.Comparable r3, $r12;
        java.util.Map $r4, $r8;
        java.lang.String $r5, $r9;
        java.lang.Integer $r7, $r11;
        int $i0;
        androidx.room.compiler.processing.ksp.KspAnnotationValue r13, r14;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2$invoke$$inlined$sortedBy$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r13 = (androidx.room.compiler.processing.ksp.KspAnnotationValue) r1;

        $r4 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2$invoke$$inlined$sortedBy$1: java.util.Map $indexByName$inlined>;

        $r5 = virtualinvoke r13.<androidx.room.compiler.processing.ksp.KspAnnotationValue: java.lang.String getName()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (java.lang.Integer) $r6;

        r14 = (androidx.room.compiler.processing.ksp.KspAnnotationValue) r2;

        r3 = (java.lang.Comparable) $r7;

        $r8 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2$invoke$$inlined$sortedBy$1: java.util.Map $indexByName$inlined>;

        $r9 = virtualinvoke r14.<androidx.room.compiler.processing.ksp.KspAnnotationValue: java.lang.String getName()>();

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (java.lang.Integer) $r10;

        $r12 = (java.lang.Comparable) $r11;

        $i0 = staticinvoke <kotlin.comparisons.ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)>(r3, $r12);

        return $i0;
    }

androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2
<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspAnnotation)
    {
        androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2 r0;
        androidx.room.compiler.processing.ksp.KspAnnotation $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspAnnotation;

        r0.<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.util.List invoke()
    {
        androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2 r0;
        java.util.Map r1, r69, $r74, r81, $r91;
        androidx.room.compiler.processing.ksp.KspAnnotation $r2, $r9, $r19, $r56, r93;
        androidx.room.compiler.processing.XTypeElement $r3, $r10, $r57;
        java.util.List $r4, $r7, $r11, $r13, $r17, $r21, $r23, $r26, $r58, $r61;
        java.lang.Object $r5, $r36, $r53, $r54, $r59, $r65, $r66, r71, r78, r83, $r89, $r97;
        androidx.room.compiler.processing.XConstructorElement $r6, $r60;
        java.util.Collection $r8, $r76, r87, r90, $r95, r99;
        boolean $z0, $z1, $z2, $z5, $z7, $z8, z13, $z14, z19, $z21, z24, z26;
        java.util.ArrayList $r12, $r16, $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11;
        java.util.LinkedHashMap $r14, $r62;
        java.util.Set $r15;
        java.lang.Iterable $r18, $r68, r75, $r80, $r86, $r92, r94, $r101;
        com.google.devtools.ksp.symbol.KSAnnotation $r20;
        androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2$invoke$$inlined$sortedBy$1 $r24;
        java.util.Comparator $r25;
        com.google.devtools.ksp.symbol.KSName $r27;
        java.lang.IllegalStateException $r28, $r40;
        java.lang.StringBuilder $r29, $r30, $r31, $r32, $r41, $r42, $r43, $r44;
        java.lang.String $r33, $r34, $r35, $r45, $r46, $r50, $r51, $r63, r100;
        androidx.room.compiler.processing.XType $r37, $r52, $r64;
        androidx.room.compiler.processing.ksp.KspAnnotationValue $r38;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r39;
        java.lang.Integer $r47;
        kotlin.Pair $r48, r73, r85;
        java.util.Iterator r70, $r77, r82, r88, r96;
        androidx.room.compiler.processing.XExecutableParameterElement r72;
        androidx.room.compiler.processing.XMethodElement r79, r84;
        com.google.devtools.ksp.symbol.KSValueArgument r98;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2;

        $r2 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.XTypeElement getTypeElement()>();

        $r4 = interfaceinvoke $r3.<androidx.room.compiler.processing.XTypeElement: java.util.List getConstructors()>();

        $r5 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object single(java.util.List)>($r4);

        $r6 = (androidx.room.compiler.processing.XConstructorElement) $r5;

        $r7 = interfaceinvoke $r6.<androidx.room.compiler.processing.XConstructorElement: java.util.List getParameters()>();

        $r8 = (java.util.Collection) $r7;

        $z0 = interfaceinvoke $r8.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        if $z8 == 0 goto label05;

        $r56 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0>;

        $r57 = virtualinvoke $r56.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.XTypeElement getTypeElement()>();

        $r58 = interfaceinvoke $r57.<androidx.room.compiler.processing.XTypeElement: java.util.List getConstructors()>();

        $r59 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object single(java.util.List)>($r58);

        $r60 = (androidx.room.compiler.processing.XConstructorElement) $r59;

        $r61 = interfaceinvoke $r60.<androidx.room.compiler.processing.XConstructorElement: java.util.List getParameters()>();

        $r68 = (java.lang.Iterable) $r61;

        $i5 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r68, 10);

        $i6 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i5);

        i7 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i6, 16);

        $r62 = new java.util.LinkedHashMap;

        specialinvoke $r62.<java.util.LinkedHashMap: void <init>(int)>(i7);

        r69 = (java.util.Map) $r62;

        r70 = interfaceinvoke $r68.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z7 = interfaceinvoke r70.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label04;

        r71 = interfaceinvoke r70.<java.util.Iterator: java.lang.Object next()>();

        r72 = (androidx.room.compiler.processing.XExecutableParameterElement) r71;

        $r63 = interfaceinvoke r72.<androidx.room.compiler.processing.XExecutableParameterElement: java.lang.String getName()>();

        $r64 = interfaceinvoke r72.<androidx.room.compiler.processing.XExecutableParameterElement: androidx.room.compiler.processing.XType getType()>();

        r73 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r63, $r64);

        $r65 = virtualinvoke r73.<kotlin.Pair: java.lang.Object getFirst()>();

        $r66 = virtualinvoke r73.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke r69.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r65, $r66);

        goto label03;

     label04:
        $r74 = r69;

        goto label10;

     label05:
        $r9 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0>;

        $r10 = virtualinvoke $r9.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.XTypeElement getTypeElement()>();

        $r11 = interfaceinvoke $r10.<androidx.room.compiler.processing.XTypeElement: java.util.List getDeclaredMethods()>();

        r75 = (java.lang.Iterable) $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r76 = (java.util.Collection) $r12;

        z13 = 0;

        $r77 = interfaceinvoke r75.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z14 = interfaceinvoke $r77.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label07;

        r78 = interfaceinvoke $r77.<java.util.Iterator: java.lang.Object next()>();

        r79 = (androidx.room.compiler.processing.XMethodElement) r78;

        $z5 = interfaceinvoke r79.<androidx.room.compiler.processing.XMethodElement: boolean isAbstract()>();

        if $z5 == 0 goto label06;

        interfaceinvoke $r76.<java.util.Collection: boolean add(java.lang.Object)>(r78);

        goto label06;

     label07:
        $r13 = (java.util.List) $r76;

        $r80 = (java.lang.Iterable) $r13;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r80, 10);

        $i1 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        i8 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i1, 16);

        $r14 = new java.util.LinkedHashMap;

        specialinvoke $r14.<java.util.LinkedHashMap: void <init>(int)>(i8);

        r81 = (java.util.Map) $r14;

        r82 = interfaceinvoke $r80.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke r82.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        r83 = interfaceinvoke r82.<java.util.Iterator: java.lang.Object next()>();

        r84 = (androidx.room.compiler.processing.XMethodElement) r83;

        $r51 = interfaceinvoke r84.<androidx.room.compiler.processing.XMethodElement: java.lang.String getName()>();

        $r52 = interfaceinvoke r84.<androidx.room.compiler.processing.XMethodElement: androidx.room.compiler.processing.XType getReturnType()>();

        r85 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r51, $r52);

        $r53 = virtualinvoke r85.<kotlin.Pair: java.lang.Object getFirst()>();

        $r54 = virtualinvoke r85.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke r81.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r53, $r54);

        goto label08;

     label09:
        $r74 = r81;

     label10:
        r1 = $r74;

        $r15 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r86 = (java.lang.Iterable) $r15;

        z19 = 0;

        $r16 = new java.util.ArrayList;

        $i2 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r86, 10);

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i2);

        r87 = (java.util.Collection) $r16;

        i9 = 0;

        r88 = interfaceinvoke $r86.<java.lang.Iterable: java.util.Iterator iterator()>();

     label11:
        $z21 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>();

        if $z21 == 0 goto label13;

        $r89 = interfaceinvoke r88.<java.util.Iterator: java.lang.Object next()>();

        $i4 = i9;

        i9 = i9 + 1;

        i10 = $i4;

        if i10 >= 0 goto label12;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label12:
        i11 = i10;

        r90 = r87;

        $r50 = (java.lang.String) $r89;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        $r48 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r50, $r47);

        interfaceinvoke r90.<java.util.Collection: boolean add(java.lang.Object)>($r48);

        goto label11;

     label13:
        $r17 = (java.util.List) r87;

        $r18 = (java.lang.Iterable) $r17;

        $r91 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMap(java.lang.Iterable)>($r18);

        $r19 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0>;

        $r20 = virtualinvoke $r19.<androidx.room.compiler.processing.ksp.KspAnnotation: com.google.devtools.ksp.symbol.KSAnnotation getKsAnnotated()>();

        $r21 = interfaceinvoke $r20.<com.google.devtools.ksp.symbol.KSAnnotation: java.util.List getArguments()>();

        $r92 = (java.lang.Iterable) $r21;

        r93 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0>;

        r94 = $r92;

        $r22 = new java.util.ArrayList;

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r92, 10);

        specialinvoke $r22.<java.util.ArrayList: void <init>(int)>($i3);

        $r95 = (java.util.Collection) $r22;

        z24 = 0;

        r96 = interfaceinvoke r94.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z2 = interfaceinvoke r96.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label18;

        $r97 = interfaceinvoke r96.<java.util.Iterator: java.lang.Object next()>();

        r98 = (com.google.devtools.ksp.symbol.KSValueArgument) $r97;

        r99 = $r95;

        $r27 = interfaceinvoke r98.<com.google.devtools.ksp.symbol.KSValueArgument: com.google.devtools.ksp.symbol.KSName getName()>();

        if $r27 == null goto label15;

        $r35 = interfaceinvoke $r27.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        if $r35 != null goto label16;

     label15:
        $r28 = new java.lang.IllegalStateException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value argument ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r98);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a name.");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = virtualinvoke $r33.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r34);

        throw $r28;

     label16:
        r100 = $r35;

        $r36 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r100);

        $r37 = (androidx.room.compiler.processing.XType) $r36;

        if $r37 != null goto label17;

        $r40 = new java.lang.IllegalStateException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value type not found for ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r100);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r46 = virtualinvoke $r45.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r46);

        throw $r40;

     label17:
        $r38 = new androidx.room.compiler.processing.ksp.KspAnnotationValue;

        $r39 = virtualinvoke r93.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        specialinvoke $r38.<androidx.room.compiler.processing.ksp.KspAnnotationValue: void <init>(androidx.room.compiler.processing.ksp.KspProcessingEnv,androidx.room.compiler.processing.ksp.KspAnnotation,androidx.room.compiler.processing.XType,com.google.devtools.ksp.symbol.KSValueArgument,kotlin.jvm.functions.Function0,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r39, r93, $r37, r98, null, 16, null);

        interfaceinvoke r99.<java.util.Collection: boolean add(java.lang.Object)>($r38);

        goto label14;

     label18:
        $r23 = (java.util.List) $r95;

        $r101 = (java.lang.Iterable) $r23;

        z26 = 0;

        $r24 = new androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2$invoke$$inlined$sortedBy$1;

        specialinvoke $r24.<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2$invoke$$inlined$sortedBy$1: void <init>(java.util.Map)>($r91);

        $r25 = (java.util.Comparator) $r24;

        $r26 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)>($r101, $r25);

        return $r26;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2 r0;
        java.util.List $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotation$annotationValues$2: java.util.List invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2
<androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspAnnotation)
    {
        androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2 r0;
        androidx.room.compiler.processing.ksp.KspAnnotation $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspAnnotation;

        r0.<androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final com.google.devtools.ksp.symbol.KSType invoke()
    {
        androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2 r0;
        androidx.room.compiler.processing.ksp.KspAnnotation $r1;
        com.google.devtools.ksp.symbol.KSAnnotation $r2;
        com.google.devtools.ksp.symbol.KSTypeReference $r3;
        com.google.devtools.ksp.symbol.KSType $r4;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspAnnotation: com.google.devtools.ksp.symbol.KSAnnotation getKsAnnotated()>();

        $r3 = interfaceinvoke $r2.<com.google.devtools.ksp.symbol.KSAnnotation: com.google.devtools.ksp.symbol.KSTypeReference getAnnotationType()>();

        $r4 = interfaceinvoke $r3.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        return $r4;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2 r0;
        com.google.devtools.ksp.symbol.KSType $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotation$ksType$2: com.google.devtools.ksp.symbol.KSType invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.ksp.KspAnnotation$type$2
<androidx.room.compiler.processing.ksp.KspAnnotation$type$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0>
    void <init>(androidx.room.compiler.processing.ksp.KspAnnotation)
    {
        androidx.room.compiler.processing.ksp.KspAnnotation$type$2 r0;
        androidx.room.compiler.processing.ksp.KspAnnotation $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation$type$2;

        $r1 := @parameter0: androidx.room.compiler.processing.ksp.KspAnnotation;

        r0.<androidx.room.compiler.processing.ksp.KspAnnotation$type$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.processing.ksp.KspType invoke()
    {
        androidx.room.compiler.processing.ksp.KspAnnotation$type$2 r0;
        androidx.room.compiler.processing.ksp.KspAnnotation $r1, $r3;
        androidx.room.compiler.processing.ksp.KspProcessingEnv $r2;
        com.google.devtools.ksp.symbol.KSType $r4;
        androidx.room.compiler.processing.ksp.KspType $r5;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation$type$2;

        $r1 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation$type$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0>;

        $r2 = virtualinvoke $r1.<androidx.room.compiler.processing.ksp.KspAnnotation: androidx.room.compiler.processing.ksp.KspProcessingEnv getEnv()>();

        $r3 = r0.<androidx.room.compiler.processing.ksp.KspAnnotation$type$2: androidx.room.compiler.processing.ksp.KspAnnotation this$0>;

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.ksp.KspAnnotation: com.google.devtools.ksp.symbol.KSType getKsType()>();

        $r5 = virtualinvoke $r2.<androidx.room.compiler.processing.ksp.KspProcessingEnv: androidx.room.compiler.processing.ksp.KspType wrap(com.google.devtools.ksp.symbol.KSType,boolean)>($r4, 1);

        return $r5;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.ksp.KspAnnotation$type$2 r0;
        androidx.room.compiler.processing.ksp.KspType $r1;

        r0 := @this: androidx.room.compiler.processing.ksp.KspAnnotation$type$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.ksp.KspAnnotation$type$2: androidx.room.compiler.processing.ksp.KspType invoke()>();

        return $r1;
    }

