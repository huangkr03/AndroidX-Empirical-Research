androidx.recyclerview.widget.GridLayoutManager
<androidx.recyclerview.widget.GridLayoutManager: boolean DEBUG>
<androidx.recyclerview.widget.GridLayoutManager: java.lang.String TAG>
<androidx.recyclerview.widget.GridLayoutManager: int DEFAULT_SPAN_COUNT>
<androidx.recyclerview.widget.GridLayoutManager: boolean mPendingSpanCountChange>
<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>
<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>
<androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet>
<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache>
<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache>
<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>
<androidx.recyclerview.widget.GridLayoutManager: android.graphics.Rect mDecorInsets>
<androidx.recyclerview.widget.GridLayoutManager: boolean mUsingSpansToEstimateScrollBarDimensions>
    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, $i2;
        androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties r3;
        android.util.SparseIntArray $r4, $r5;
        androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup $r6;
        android.graphics.Rect $r7;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 0;

        r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount> = -1;

        $r4 = new android.util.SparseIntArray;

        specialinvoke $r4.<android.util.SparseIntArray: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache> = $r4;

        $r5 = new android.util.SparseIntArray;

        specialinvoke $r5.<android.util.SparseIntArray: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache> = $r5;

        $r6 = new androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup;

        specialinvoke $r6.<androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = $r6;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager: android.graphics.Rect mDecorInsets> = $r7;

        r3 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        $i2 = r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int spanCount>;

        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void setSpanCount(int)>($i2);

        return;
    }

    public void <init>(android.content.Context, int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        android.content.Context r1;
        int i0;
        android.util.SparseIntArray $r2, $r3;
        androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup $r4;
        android.graphics.Rect $r5;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context)>(r1);

        r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 0;

        r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount> = -1;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache> = $r2;

        $r3 = new android.util.SparseIntArray;

        specialinvoke $r3.<android.util.SparseIntArray: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache> = $r3;

        $r4 = new androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup;

        specialinvoke $r4.<androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager: android.graphics.Rect mDecorInsets> = $r5;

        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void setSpanCount(int)>(i0);

        return;
    }

    public void <init>(android.content.Context, int, int, boolean)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        android.content.Context r1;
        int i0, i1;
        boolean z0;
        android.util.SparseIntArray $r2, $r3;
        androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup $r4;
        android.graphics.Rect $r5;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void <init>(android.content.Context,int,boolean)>(r1, i1, z0);

        r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 0;

        r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount> = -1;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache> = $r2;

        $r3 = new android.util.SparseIntArray;

        specialinvoke $r3.<android.util.SparseIntArray: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache> = $r3;

        $r4 = new androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup;

        specialinvoke $r4.<androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager: android.graphics.Rect mDecorInsets> = $r5;

        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void setSpanCount(int)>(i0);

        return;
    }

    public void setStackFromEnd(boolean)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        boolean z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("GridLayoutManager does not support stack from end. Consider using reverse layout");

        throw $r1;

     label1:
        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void setStackFromEnd(boolean)>(0);

        return;
    }

    public int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 0 goto label1;

        $i6 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        return $i6;

     label1:
        $i1 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if $i1 >= 1 goto label2;

        return 0;

     label2:
        $i2 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $i3 = $i2 - 1;

        $i4 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)>(r1, r2, $i3);

        $i5 = $i4 + 1;

        return $i5;
    }

    public int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        $i0 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 1 goto label1;

        $i6 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        return $i6;

     label1:
        $i1 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if $i1 >= 1 goto label2;

        return 0;

     label2:
        $i2 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $i3 = $i2 - 1;

        $i4 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)>(r1, r2, $i3);

        $i5 = $i4 + 1;

        return $i5;
    }

    public void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        android.view.View r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r4;
        android.view.ViewGroup$LayoutParams r5;
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat $r7, $r8;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        r5 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = r5 instanceof androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        if $z0 != 0 goto label1;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>(r3, r4);

        return;

     label1:
        r6 = (androidx.recyclerview.widget.GridLayoutManager$LayoutParams) r5;

        $i1 = virtualinvoke r6.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getViewLayoutPosition()>();

        i0 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)>(r1, r2, $i1);

        $i2 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mOrientation>;

        if $i2 != 0 goto label2;

        $i5 = virtualinvoke r6.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanIndex()>();

        $i6 = virtualinvoke r6.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        $r8 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>($i5, $i6, i0, 1, 0, 0);

        virtualinvoke r4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)>($r8);

        goto label3;

     label2:
        $i3 = virtualinvoke r6.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanIndex()>();

        $i4 = virtualinvoke r6.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        $r7 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>(i0, 1, $i3, $i4, 0, 0);

        virtualinvoke r4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)>($r7);

     label3:
        return;
    }

    public void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r3;
        java.lang.Class $r4;
        java.lang.String $r5;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>(r1, r2, r3);

        $r4 = class "Landroid/widget/GridView;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r3.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r5);

        return;
    }

    public void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void cachePreLayoutSpanMapping()>();

     label1:
        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, r2);

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void clearPreLayoutSpanMappingCache()>();

        return;
    }

    public void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 0;

        return;
    }

    private void clearPreLayoutSpanMappingCache()
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        android.util.SparseIntArray $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache>;

        virtualinvoke $r1.<android.util.SparseIntArray: void clear()>();

        $r2 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache>;

        virtualinvoke $r2.<android.util.SparseIntArray: void clear()>();

        return;
    }

    private void cachePreLayoutSpanMapping()
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        int i0, i1, $i2, $i3, i4;
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams r1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.util.SparseIntArray $r4, $r5;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        i0 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getChildCount()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r2 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View getChildAt(int)>(i4);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (androidx.recyclerview.widget.GridLayoutManager$LayoutParams) $r3;

        i1 = virtualinvoke r1.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getViewLayoutPosition()>();

        $r4 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache>;

        $i2 = virtualinvoke r1.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        virtualinvoke $r4.<android.util.SparseIntArray: void put(int,int)>(i1, $i2);

        $r5 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache>;

        $i3 = virtualinvoke r1.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanIndex()>();

        virtualinvoke $r5.<android.util.SparseIntArray: void put(int,int)>(i1, $i3);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public void onItemsAdded(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        $r3 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r3.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanGroupIndexCache()>();

        return;
    }

    public void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        $r2 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        $r3 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r3.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanGroupIndexCache()>();

        return;
    }

    public void onItemsRemoved(androidx.recyclerview.widget.RecyclerView, int, int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        $r3 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r3.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanGroupIndexCache()>();

        return;
    }

    public void onItemsUpdated(androidx.recyclerview.widget.RecyclerView, int, int, java.lang.Object)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1;
        java.lang.Object r2;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r3, $r4;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.Object;

        $r3 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r3.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        $r4 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r4.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanGroupIndexCache()>();

        return;
    }

    public void onItemsMoved(androidx.recyclerview.widget.RecyclerView, int, int, int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView r1;
        int i0, i1, i2;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r2, $r3;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        $r3 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r3.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanGroupIndexCache()>();

        return;
    }

    public androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        int $i0;
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        $i0 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 0 goto label1;

        $r2 = new androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r2.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: void <init>(int,int)>(-2, -1);

        return $r2;

     label1:
        $r1 = new androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r1.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: void <init>(int,int)>(-1, -2);

        return $r1;
    }

    public androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context, android.util.AttributeSet)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams $r3;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $r3 = new androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r3.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return $r3;
    }

    public androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams $r2, $r3;
        android.view.ViewGroup$MarginLayoutParams $r4;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label1;

        $r3 = new androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r3.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r3;

     label1:
        $r2 = new androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r2.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        $z0 = r1 instanceof androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        return $z0;
    }

    public void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup r1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup;

        r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = r1;

        return;
    }

    public androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup()
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        return $r1;
    }

    private void updateMeasurements()
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        $i0 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getOrientation()>();

        if $i0 != 1 goto label1;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getWidth()>();

        $i6 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPaddingRight()>();

        $i7 = $i5 - $i6;

        $i8 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPaddingLeft()>();

        i9 = $i7 - $i8;

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getHeight()>();

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPaddingBottom()>();

        $i3 = $i1 - $i2;

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPaddingTop()>();

        i9 = $i3 - $i4;

     label2:
        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void calculateItemBorders(int)>(i9);

        return;
    }

    public void setMeasuredDimension(android.graphics.Rect, int, int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        android.graphics.Rect r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26;
        int[] $r2, $r3, $r4, $r5, $r6;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: android.graphics.Rect;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        if $r2 != null goto label1;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)>(r1, i0, i1);

     label1:
        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPaddingLeft()>();

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPaddingRight()>();

        i2 = $i4 + $i5;

        $i6 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPaddingTop()>();

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPaddingBottom()>();

        i3 = $i6 + $i7;

        $i8 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mOrientation>;

        if $i8 != 1 goto label2;

        $i16 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        i23 = $i16 + i3;

        $i17 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getMinimumHeight()>();

        i24 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager: int chooseSize(int,int,int)>(i1, i23, $i17);

        $r6 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        $r5 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        $i18 = lengthof $r5;

        $i19 = $i18 - 1;

        $i20 = $r6[$i19];

        $i21 = $i20 + i2;

        $i22 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getMinimumWidth()>();

        i25 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager: int chooseSize(int,int,int)>(i0, $i21, $i22);

        goto label3;

     label2:
        $i9 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        i26 = $i9 + i2;

        $i10 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getMinimumWidth()>();

        i25 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager: int chooseSize(int,int,int)>(i0, i26, $i10);

        $r4 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        $r3 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        $i11 = lengthof $r3;

        $i12 = $i11 - 1;

        $i13 = $r4[$i12];

        $i14 = $i13 + i3;

        $i15 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getMinimumHeight()>();

        i24 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager: int chooseSize(int,int,int)>(i1, $i14, $i15);

     label3:
        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void setMeasuredDimension(int,int)>(i25, i24);

        return;
    }

    private void calculateItemBorders(int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        int i0, $i1;
        int[] $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        $i1 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $r2 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager: int[] calculateItemBorders(int[],int,int)>($r1, $i1, i0);

        r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders> = $r2;

        return;
    }

    static int[] calculateItemBorders(int[], int, int)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14;
        int[] r0;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 == null goto label1;

        $i6 = lengthof r0;

        $i5 = i0 + 1;

        if $i6 != $i5 goto label1;

        $i7 = lengthof r0;

        $i8 = $i7 - 1;

        $i9 = r0[$i8];

        if $i9 == i1 goto label2;

     label1:
        $i10 = i0 + 1;

        r0 = newarray (int)[$i10];

     label2:
        r0[0] = 0;

        i2 = i1 / i0;

        i3 = i1 % i0;

        i11 = 0;

        i12 = 0;

        i13 = 1;

     label3:
        if i13 > i0 goto label5;

        i14 = i2;

        i12 = i12 + i3;

        if i12 <= 0 goto label4;

        $i4 = i0 - i12;

        if $i4 >= i3 goto label4;

        i14 = i14 + 1;

        i12 = i12 - i0;

     label4:
        i11 = i11 + i14;

        r0[i13] = i11;

        i13 = i13 + 1;

        goto label3;

     label5:
        return r0;
    }

    int getSpaceForSpanRange(int, int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        int[] $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mOrientation>;

        if $i2 != 1 goto label1;

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: boolean isLayoutRTL()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        $i7 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $i8 = $i7 - i0;

        $i13 = $r3[$i8];

        $r4 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        $i9 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $i10 = $i9 - i0;

        $i11 = $i10 - i1;

        $i12 = $r4[$i11];

        $i14 = $i13 - $i12;

        return $i14;

     label1:
        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        $i3 = i0 + i1;

        $i5 = $r1[$i3];

        $r2 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        $i4 = $r2[i0];

        $i6 = $i5 - $i4;

        return $i6;
    }

    void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo, int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r3;
        int i0, $i1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        i0 := @parameter3: int;

        specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)>(r1, r2, r3, i0);

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void updateMeasurements()>();

        $i1 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if $i1 <= 0 goto label1;

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)>(r1, r2, r3, i0);

     label1:
        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void ensureViewSet()>();

        return;
    }

    private void ensureViewSet()
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        android.view.View[] $r1, $r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet>;

        if $r1 == null goto label1;

        $r3 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet>;

        $i2 = lengthof $r3;

        $i1 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        if $i2 == $i1 goto label2;

     label1:
        $i0 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $r2 = newarray (android.view.View)[$i0];

        r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet> = $r2;

     label2:
        return;
    }

    public int scrollHorizontallyBy(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        int i0, $i1;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void updateMeasurements()>();

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void ensureViewSet()>();

        $i1 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(i0, r1, r2);

        return $i1;
    }

    public int scrollVerticallyBy(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        int i0, $i1;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$State;

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void updateMeasurements()>();

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void ensureViewSet()>();

        $i1 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(i0, r1, r2);

        return $i1;
    }

    private void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo, int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12;
        boolean z0, $z1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo;

        i0 := @parameter3: int;

        if i0 != 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $i3 = r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        i10 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)>(r1, r2, $i3);

        if z0 == 0 goto label4;

     label3:
        if i10 <= 0 goto label7;

        $i6 = r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        if $i6 <= 0 goto label7;

        $i7 = r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        $i8 = $i7 - 1;

        r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition> = $i8;

        $i9 = r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        i10 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)>(r1, r2, $i9);

        goto label3;

     label4:
        $i4 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        i1 = $i4 - 1;

        i11 = r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        i12 = i10;

     label5:
        if i11 >= i1 goto label6;

        $i5 = i11 + 1;

        i2 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)>(r1, r2, $i5);

        if i2 <= i12 goto label6;

        i11 = i11 + 1;

        i12 = i2;

        goto label5;

     label6:
        r3.<androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition> = i11;

     label7:
        return;
    }

    android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, boolean, boolean)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        boolean z0, z1, $z2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, i8, i9, i11;
        android.view.View r3, r10, r11, $r12;
        androidx.recyclerview.widget.OrientationHelper $r4, $r5, $r8, $r9;
        android.view.ViewGroup$LayoutParams $r6;
        androidx.recyclerview.widget.RecyclerView$LayoutParams $r7;
        byte b10;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i8 = 0;

        i9 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getChildCount()>();

        b10 = 1;

        if z1 == 0 goto label01;

        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getChildCount()>();

        i8 = $i7 - 1;

        i9 = -1;

        b10 = -1;

     label01:
        i0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void ensureLayoutState()>();

        r10 = null;

        r11 = null;

        $r4 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i1 = virtualinvoke $r4.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        $r5 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i2 = virtualinvoke $r5.<androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()>();

        i11 = i8;

     label02:
        if i11 == i9 goto label08;

        r3 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View getChildAt(int)>(i11);

        i3 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPosition(android.view.View)>(r3);

        if i3 < 0 goto label07;

        if i3 >= i0 goto label07;

        i4 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)>(r1, r2, i3);

        if i4 == 0 goto label03;

        goto label07;

     label03:
        $r6 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r6;

        $z2 = virtualinvoke $r7.<androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemRemoved()>();

        if $z2 == 0 goto label04;

        if r10 != null goto label07;

        r10 = r3;

        goto label07;

     label04:
        $r8 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i5 = virtualinvoke $r8.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r3);

        if $i5 >= i2 goto label05;

        $r9 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i6 = virtualinvoke $r9.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r3);

        if $i6 >= i1 goto label06;

     label05:
        if r11 != null goto label07;

        r11 = r3;

        goto label07;

     label06:
        return r3;

     label07:
        i11 = i11 + b10;

        goto label02;

     label08:
        if r11 == null goto label09;

        $r12 = r11;

        goto label10;

     label09:
        $r12 = r10;

     label10:
        return $r12;
    }

    private int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int i0, i1, $i2, $i3, $i5, $i6;
        boolean $z0;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r3, $r8;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        $r8 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i5 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $i6 = virtualinvoke $r8.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)>(i0, $i5);

        return $i6;

     label1:
        i1 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)>(i0);

        if i1 != -1 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find span size for pre layout position. ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GridLayoutManager", $r7);

        return 0;

     label2:
        $r3 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i2 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $i3 = virtualinvoke $r3.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)>(i1, $i2);

        return $i3;
    }

    private int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int i0, i1, i2, $i3, $i4, $i6, $i7;
        boolean $z0;
        android.util.SparseIntArray $r3;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r4, $r9;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        $r9 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i6 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $i7 = virtualinvoke $r9.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)>(i0, $i6);

        return $i7;

     label1:
        $r3 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache>;

        i1 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if i1 == -1 goto label2;

        return i1;

     label2:
        i2 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)>(i0);

        if i2 != -1 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find span size for pre layout position. It is not cached, not in the adapter. Pos:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GridLayoutManager", $r8);

        return 0;

     label3:
        $r4 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i3 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $i4 = virtualinvoke $r4.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)>(i2, $i3);

        return $i4;
    }

    private int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int i0, i1, i2, $i3, $i5;
        boolean $z0;
        android.util.SparseIntArray $r3;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r4, $r9;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        $r9 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i5 = virtualinvoke $r9.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i0);

        return $i5;

     label1:
        $r3 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache>;

        i1 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if i1 == -1 goto label2;

        return i1;

     label2:
        i2 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)>(i0);

        if i2 != -1 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find span size for pre layout position. It is not cached, not in the adapter. Pos:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GridLayoutManager", $r8);

        return 1;

     label3:
        $r4 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i3 = virtualinvoke $r4.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i2);

        return $i3;
    }

    void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.LinearLayoutManager$LayoutState, androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r2;
        androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        boolean $z0;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r4;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        r2 := @parameter1: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        r3 := @parameter2: androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry;

        i8 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        i9 = 0;

     label1:
        $i2 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        if i9 >= $i2 goto label2;

        $z0 = virtualinvoke r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        if $z0 == 0 goto label2;

        if i8 <= 0 goto label2;

        i0 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $i3 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        interfaceinvoke r3.<androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry: void addPosition(int,int)>(i0, $i4);

        $r4 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        i1 = virtualinvoke $r4.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i0);

        i8 = i8 - i1;

        $i6 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        $i5 = r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        $i7 = $i6 + $i5;

        r2.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition> = $i7;

        i9 = i9 + 1;

        goto label1;

     label2:
        return;
    }

    void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.LinearLayoutManager$LayoutState, androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutState r3;
        androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i45, $i46, $i47, $i48, $i49, $i50, i51, i52, i53, i54, $i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        androidx.recyclerview.widget.OrientationHelper $r5, $r10, $r12, $r14, $r16, $r19, $r23, $r39;
        android.view.View[] $r6, $r7, $r15, $r18, $r20, $r24;
        android.view.ViewGroup$LayoutParams $r8, $r17, $r22;
        int[] $r9, $r11, $r13, $r35;
        java.util.List $r21;
        float $f0, $f1, $f2, f3, f4;
        byte $b44;
        java.lang.IllegalArgumentException $r25;
        java.lang.StringBuilder $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        java.lang.String $r34;
        android.view.View r36, r37, r41, r42, r45;
        android.graphics.Rect $r38, r44;
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams r40, r43, r46;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        r3 := @parameter2: androidx.recyclerview.widget.LinearLayoutManager$LayoutState;

        r4 := @parameter3: androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult;

        $r5 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i0 = virtualinvoke $r5.<androidx.recyclerview.widget.OrientationHelper: int getModeInOther()>();

        if i0 == 1073741824 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z0 = $z5;

        $i2 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getChildCount()>();

        if $i2 <= 0 goto label03;

        $r35 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        $i49 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $i50 = $r35[$i49];

        goto label04;

     label03:
        $i50 = 0;

     label04:
        i1 = $i50;

        if z0 == 0 goto label05;

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void updateMeasurements()>();

     label05:
        $i3 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        if $i3 != 1 goto label06;

        $z6 = 1;

        goto label07;

     label06:
        $z6 = 0;

     label07:
        z1 = $z6;

        i51 = 0;

        i52 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        if z1 != 0 goto label08;

        $i47 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        i53 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)>(r1, r2, $i47);

        $i48 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        i54 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)>(r1, r2, $i48);

        i52 = i53 + i54;

     label08:
        $i55 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        if i51 >= $i55 goto label12;

        $z4 = virtualinvoke r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)>(r2);

        if $z4 == 0 goto label12;

        if i52 <= 0 goto label12;

        i56 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        i57 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)>(r1, r2, i56);

        $i45 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        if i57 <= $i45 goto label09;

        $r25 = new java.lang.IllegalArgumentException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Item at position ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i56);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i57);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" spans but GridLayoutManager has only ");

        $i46 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i46);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" spans.");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);

        throw $r25;

     label09:
        i52 = i52 - i57;

        if i52 >= 0 goto label10;

        goto label12;

     label10:
        r36 = virtualinvoke r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)>(r1);

        if r36 != null goto label11;

        goto label12;

     label11:
        $r24 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet>;

        $r24[i51] = r36;

        i51 = i51 + 1;

        goto label08;

     label12:
        if i51 != 0 goto label13;

        r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished> = 1;

        return;

     label13:
        i58 = 0;

        f3 = 0.0F;

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean)>(r1, r2, i51, z1);

        i59 = 0;

     label14:
        if i59 >= i51 goto label21;

        $r20 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet>;

        r37 = $r20[i59];

        $r21 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>;

        if $r21 != null goto label16;

        if z1 == 0 goto label15;

        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void addView(android.view.View)>(r37);

        goto label18;

     label15:
        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void addView(android.view.View,int)>(r37, 0);

        goto label18;

     label16:
        if z1 == 0 goto label17;

        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void addDisappearingView(android.view.View)>(r37);

        goto label18;

     label17:
        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void addDisappearingView(android.view.View,int)>(r37, 0);

     label18:
        $r38 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.graphics.Rect mDecorInsets>;

        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)>(r37, $r38);

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void measureChild(android.view.View,int,boolean)>(r37, i0, 0);

        $r39 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i60 = virtualinvoke $r39.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r37);

        if i60 <= i58 goto label19;

        i58 = i60;

     label19:
        $r22 = virtualinvoke r37.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r40 = (androidx.recyclerview.widget.GridLayoutManager$LayoutParams) $r22;

        $r23 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i42 = virtualinvoke $r23.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>(r37);

        $f0 = (float) $i42;

        $f2 = 1.0F * $f0;

        $i43 = r40.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize>;

        $f1 = (float) $i43;

        f4 = $f2 / $f1;

        $b44 = f4 cmpl f3;

        if $b44 <= 0 goto label20;

        f3 = f4;

     label20:
        i59 = i59 + 1;

        goto label14;

     label21:
        if z0 == 0 goto label24;

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void guessMeasurement(float,int)>(f3, i1);

        i58 = 0;

        i61 = 0;

     label22:
        if i61 >= i51 goto label24;

        $r18 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet>;

        r41 = $r18[i61];

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void measureChild(android.view.View,int,boolean)>(r41, 1073741824, 1);

        $r19 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        i62 = virtualinvoke $r19.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r41);

        if i62 <= i58 goto label23;

        i58 = i62;

     label23:
        i61 = i61 + 1;

        goto label22;

     label24:
        i63 = 0;

     label25:
        if i63 >= i51 goto label29;

        $r15 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet>;

        r42 = $r15[i63];

        $r16 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i22 = virtualinvoke $r16.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r42);

        if $i22 == i58 goto label28;

        $r17 = virtualinvoke r42.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r43 = (androidx.recyclerview.widget.GridLayoutManager$LayoutParams) $r17;

        r44 = r43.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i24 = r44.<android.graphics.Rect: int top>;

        $i23 = r44.<android.graphics.Rect: int bottom>;

        $i26 = $i24 + $i23;

        $i25 = r43.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int topMargin>;

        $i28 = $i26 + $i25;

        $i27 = r43.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int bottomMargin>;

        i64 = $i28 + $i27;

        $i30 = r44.<android.graphics.Rect: int left>;

        $i29 = r44.<android.graphics.Rect: int right>;

        $i32 = $i30 + $i29;

        $i31 = r43.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int leftMargin>;

        $i34 = $i32 + $i31;

        $i33 = r43.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int rightMargin>;

        i65 = $i34 + $i33;

        $i36 = r43.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i35 = r43.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize>;

        i66 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpaceForSpanRange(int,int)>($i36, $i35);

        $i37 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mOrientation>;

        if $i37 != 1 goto label26;

        $i40 = r43.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int width>;

        i67 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>(i66, 1073741824, i65, $i40, 0);

        $i41 = i58 - i64;

        i68 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i41, 1073741824);

        goto label27;

     label26:
        $i38 = i58 - i65;

        i67 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i38, 1073741824);

        $i39 = r43.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int height>;

        i68 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>(i66, 1073741824, i64, $i39, 0);

     label27:
        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean)>(r42, i67, i68, 1);

     label28:
        i63 = i63 + 1;

        goto label25;

     label29:
        r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed> = i58;

        i69 = 0;

        i70 = 0;

        i71 = 0;

        i72 = 0;

        $i4 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mOrientation>;

        if $i4 != 1 goto label31;

        $i21 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i21 != -1 goto label30;

        i72 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i71 = i72 - i58;

        goto label33;

     label30:
        i71 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i72 = i71 + i58;

        goto label33;

     label31:
        $i5 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i5 != -1 goto label32;

        i70 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i69 = i70 - i58;

        goto label33;

     label32:
        i69 = r3.<androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i70 = i69 + i58;

     label33:
        i73 = 0;

     label34:
        if i73 >= i51 goto label40;

        $r7 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet>;

        r45 = $r7[i73];

        $r8 = virtualinvoke r45.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r46 = (androidx.recyclerview.widget.GridLayoutManager$LayoutParams) $r8;

        $i6 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mOrientation>;

        if $i6 != 1 goto label36;

        $z3 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: boolean isLayoutRTL()>();

        if $z3 == 0 goto label35;

        $i15 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPaddingLeft()>();

        $r13 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        $i17 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $i16 = r46.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i18 = $i17 - $i16;

        $i19 = $r13[$i18];

        i70 = $i15 + $i19;

        $r14 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i20 = virtualinvoke $r14.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>(r45);

        i69 = i70 - $i20;

        goto label37;

     label35:
        $i11 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPaddingLeft()>();

        $r11 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        $i12 = r46.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i13 = $r11[$i12];

        i69 = $i11 + $i13;

        $r12 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i14 = virtualinvoke $r12.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>(r45);

        i70 = i69 + $i14;

        goto label37;

     label36:
        $i7 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPaddingTop()>();

        $r9 = r0.<androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders>;

        $i8 = r46.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i9 = $r9[$i8];

        i71 = $i7 + $i9;

        $r10 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i10 = virtualinvoke $r10.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>(r45);

        i72 = i71 + $i10;

     label37:
        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void layoutDecoratedWithMargins(android.view.View,int,int,int,int)>(r45, i69, i71, i70, i72);

        $z7 = virtualinvoke r46.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: boolean isItemRemoved()>();

        if $z7 != 0 goto label38;

        $z2 = virtualinvoke r46.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: boolean isItemChanged()>();

        if $z2 == 0 goto label39;

     label38:
        r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed> = 1;

     label39:
        $z8 = r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable>;

        $z9 = virtualinvoke r45.<android.view.View: boolean hasFocusable()>();

        $z10 = $z8 | $z9;

        r4.<androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable> = $z10;

        i73 = i73 + 1;

        goto label34;

     label40:
        $r6 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r6, null);

        return;
    }

    private void measureChild(android.view.View, int, boolean)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28;
        boolean z0;
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams r2;
        android.graphics.Rect r3;
        android.view.ViewGroup$LayoutParams $r4;
        androidx.recyclerview.widget.OrientationHelper $r5, $r6;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.recyclerview.widget.GridLayoutManager$LayoutParams) $r4;

        r3 = r2.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i5 = r3.<android.graphics.Rect: int top>;

        $i4 = r3.<android.graphics.Rect: int bottom>;

        $i7 = $i5 + $i4;

        $i6 = r2.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int topMargin>;

        $i9 = $i7 + $i6;

        $i8 = r2.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int bottomMargin>;

        i1 = $i9 + $i8;

        $i11 = r3.<android.graphics.Rect: int left>;

        $i10 = r3.<android.graphics.Rect: int right>;

        $i13 = $i11 + $i10;

        $i12 = r2.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int leftMargin>;

        $i15 = $i13 + $i12;

        $i14 = r2.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int rightMargin>;

        i2 = $i15 + $i14;

        $i17 = r2.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i16 = r2.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize>;

        i3 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpaceForSpanRange(int,int)>($i17, $i16);

        $i18 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mOrientation>;

        if $i18 != 1 goto label1;

        $i23 = r2.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int width>;

        i27 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>(i3, i0, i2, $i23, 0);

        $r6 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i24 = virtualinvoke $r6.<androidx.recyclerview.widget.OrientationHelper: int getTotalSpace()>();

        $i25 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getHeightMode()>();

        $i26 = r2.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int height>;

        i28 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i24, $i25, i1, $i26, 1);

        goto label2;

     label1:
        $i19 = r2.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int height>;

        i28 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>(i3, i0, i1, $i19, 0);

        $r5 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i20 = virtualinvoke $r5.<androidx.recyclerview.widget.OrientationHelper: int getTotalSpace()>();

        $i21 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getWidthMode()>();

        $i22 = r2.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int width>;

        i27 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)>($i20, $i21, i2, $i22, 1);

     label2:
        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean)>(r1, i27, i28, z0);

        return;
    }

    private void guessMeasurement(float, int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        float f0, $f1, $f2;
        int i0, i1, $i2, $i3;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        $i2 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $f1 = (float) $i2;

        $f2 = f0 * $f1;

        i1 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i0);

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void calculateItemBorders(int)>($i3);

        return;
    }

    private void measureChildWithDecorationsAndMargin(android.view.View, int, int, boolean)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        android.view.View r1;
        int i0, i1;
        boolean z0, z1;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.recyclerview.widget.RecyclerView$LayoutParams) $r3;

        if z0 == 0 goto label1;

        z1 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)>(r1, i0, i1, r2);

        goto label2;

     label1:
        z1 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)>(r1, i0, i1, r2);

     label2:
        if z1 == 0 goto label3;

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i0, i1);

     label3:
        return;
    }

    private void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int, boolean)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$Recycler r1;
        androidx.recyclerview.widget.RecyclerView$State r2;
        int i0, $i1, $i2, $i3, i4, i5, i7, i8;
        boolean z0;
        android.view.View r3;
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams r4;
        android.view.View[] $r5;
        android.view.ViewGroup$LayoutParams $r6;
        byte b6;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Recycler;

        r2 := @parameter1: androidx.recyclerview.widget.RecyclerView$State;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        i4 = 0;

        i5 = i0;

        b6 = 1;

        goto label2;

     label1:
        i4 = i0 - 1;

        i5 = -1;

        b6 = -1;

     label2:
        i7 = 0;

        i8 = i4;

     label3:
        if i8 == i5 goto label4;

        $r5 = r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet>;

        r3 = $r5[i8];

        $r6 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (androidx.recyclerview.widget.GridLayoutManager$LayoutParams) $r6;

        $i1 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPosition(android.view.View)>(r3);

        $i2 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)>(r1, r2, $i1);

        r4.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize> = $i2;

        r4.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex> = i7;

        $i3 = r4.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize>;

        i7 = i7 + $i3;

        i8 = i8 + b6;

        goto label3;

     label4:
        return;
    }

    public int getSpanCount()
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        $i0 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        return $i0;
    }

    public void setSpanCount(int)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        int i0, $i1;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        if i0 != $i1 goto label1;

        return;

     label1:
        r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mPendingSpanCountChange> = 1;

        if i0 >= 1 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Span count should be at least 1. Provided ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount> = i0;

        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r1.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void requestLayout()>();

        return;
    }

    public android.view.View onFocusSearchFailed(android.view.View, int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        android.view.View r1, r4, r6, r7, r11, r12, $r13;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i23, i24, i25, i26, i27, i28;
        androidx.recyclerview.widget.RecyclerView$Recycler r2;
        androidx.recyclerview.widget.RecyclerView$State r3;
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams r5, r8;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z11, $z12, $z13, $z14, z15, $z16, $z17, $z18;
        android.view.ViewGroup$LayoutParams $r9, $r10;
        byte b22;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.recyclerview.widget.RecyclerView$Recycler;

        r3 := @parameter3: androidx.recyclerview.widget.RecyclerView$State;

        r4 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View findContainingItemView(android.view.View)>(r1);

        if r4 != null goto label01;

        return null;

     label01:
        $r9 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r5 = (androidx.recyclerview.widget.GridLayoutManager$LayoutParams) $r9;

        i1 = r5.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i12 = r5.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i11 = r5.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize>;

        i2 = $i12 + $i11;

        r6 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)>(r1, i0, r2, r3);

        if r6 != null goto label02;

        return null;

     label02:
        i3 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int convertFocusDirectionToLayoutDirection(int)>(i0);

        if i3 != 1 goto label03;

        $z12 = 1;

        goto label04;

     label03:
        $z12 = 0;

     label04:
        $z2 = r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mShouldReverseLayout>;

        if $z12 == $z2 goto label05;

        $z13 = 1;

        goto label06;

     label05:
        $z13 = 0;

     label06:
        z0 = $z13;

        if z0 == 0 goto label07;

        $i20 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getChildCount()>();

        i21 = $i20 - 1;

        b22 = -1;

        i23 = -1;

        goto label08;

     label07:
        i21 = 0;

        b22 = 1;

        i23 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getChildCount()>();

     label08:
        $i13 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mOrientation>;

        if $i13 != 1 goto label09;

        $z11 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: boolean isLayoutRTL()>();

        if $z11 == 0 goto label09;

        $z14 = 1;

        goto label10;

     label09:
        $z14 = 0;

     label10:
        z1 = $z14;

        r11 = null;

        i24 = -1;

        i25 = 0;

        r12 = null;

        i26 = -1;

        i27 = 0;

        i4 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)>(r2, r3, i21);

        i28 = i21;

     label11:
        if i28 == i23 goto label28;

        i5 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)>(r2, r3, i28);

        r7 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View getChildAt(int)>(i28);

        if r7 != r4 goto label12;

        goto label28;

     label12:
        $z3 = virtualinvoke r7.<android.view.View: boolean hasFocusable()>();

        if $z3 == 0 goto label13;

        if i5 == i4 goto label13;

        if r11 == null goto label27;

        goto label28;

     label13:
        $r10 = virtualinvoke r7.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r8 = (androidx.recyclerview.widget.GridLayoutManager$LayoutParams) $r10;

        i6 = r8.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i15 = r8.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i14 = r8.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize>;

        i7 = $i15 + $i14;

        $z4 = virtualinvoke r7.<android.view.View: boolean hasFocusable()>();

        if $z4 == 0 goto label14;

        if i6 != i1 goto label14;

        if i7 != i2 goto label14;

        return r7;

     label14:
        z15 = 0;

        $z16 = virtualinvoke r7.<android.view.View: boolean hasFocusable()>();

        if $z16 == 0 goto label15;

        if r11 == null goto label16;

     label15:
        $z5 = virtualinvoke r7.<android.view.View: boolean hasFocusable()>();

        if $z5 != 0 goto label17;

        if r12 != null goto label17;

     label16:
        z15 = 1;

        goto label25;

     label17:
        i8 = staticinvoke <java.lang.Math: int max(int,int)>(i6, i1);

        i9 = staticinvoke <java.lang.Math: int min(int,int)>(i7, i2);

        i10 = i9 - i8;

        $z6 = virtualinvoke r7.<android.view.View: boolean hasFocusable()>();

        if $z6 == 0 goto label21;

        if i10 <= i25 goto label18;

        z15 = 1;

        goto label25;

     label18:
        if i10 != i25 goto label25;

        if i6 <= i24 goto label19;

        $z17 = 1;

        goto label20;

     label19:
        $z17 = 0;

     label20:
        if z1 != $z17 goto label25;

        z15 = 1;

        goto label25;

     label21:
        if r11 != null goto label25;

        $z8 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: boolean isViewPartiallyVisible(android.view.View,boolean,boolean)>(r7, 0, 1);

        if $z8 == 0 goto label25;

        if i10 <= i27 goto label22;

        z15 = 1;

        goto label25;

     label22:
        if i10 != i27 goto label25;

        if i6 <= i26 goto label23;

        $z18 = 1;

        goto label24;

     label23:
        $z18 = 0;

     label24:
        if z1 != $z18 goto label25;

        z15 = 1;

     label25:
        if z15 == 0 goto label27;

        $z7 = virtualinvoke r7.<android.view.View: boolean hasFocusable()>();

        if $z7 == 0 goto label26;

        r11 = r7;

        i24 = r8.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i18 = staticinvoke <java.lang.Math: int min(int,int)>(i7, i2);

        $i19 = staticinvoke <java.lang.Math: int max(int,int)>(i6, i1);

        i25 = $i18 - $i19;

        goto label27;

     label26:
        r12 = r7;

        i26 = r8.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        $i16 = staticinvoke <java.lang.Math: int min(int,int)>(i7, i2);

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>(i6, i1);

        i27 = $i16 - $i17;

     label27:
        i28 = i28 + b22;

        goto label11;

     label28:
        if r11 == null goto label29;

        $r13 = r11;

        goto label30;

     label29:
        $r13 = r12;

     label30:
        return $r13;
    }

    public boolean supportsPredictiveItemAnimations()
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.LinearLayoutManager$SavedState $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r1 != null goto label1;

        $z0 = r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mPendingSpanCountChange>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $z0 = r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mUsingSpansToEstimateScrollBarDimensions>;

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i1;

     label1:
        $i0 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i0;
    }

    public int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $z0 = r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mUsingSpansToEstimateScrollBarDimensions>;

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i1;

     label1:
        $i0 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i0;
    }

    public int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $z0 = r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mUsingSpansToEstimateScrollBarDimensions>;

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i1;

     label1:
        $i0 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i0;
    }

    public int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $z0 = r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mUsingSpansToEstimateScrollBarDimensions>;

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i1;

     label1:
        $i0 = specialinvoke r0.<androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)>(r1);

        return $i0;
    }

    public void setUsingSpansToEstimateScrollbarDimensions(boolean)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mUsingSpansToEstimateScrollBarDimensions> = z0;

        return;
    }

    public boolean isUsingSpansToEstimateScrollbarDimensions()
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        $z0 = r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mUsingSpansToEstimateScrollBarDimensions>;

        return $z0;
    }

    private int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        android.view.View r2, r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.recyclerview.widget.OrientationHelper $r4, $r5;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r6, $r7, $r8, $r9;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getChildCount()>();

        if $i5 == 0 goto label1;

        $i6 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if $i6 != 0 goto label2;

     label1:
        return 0;

     label2:
        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void ensureLayoutState()>();

        $z0 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: boolean isSmoothScrollbarEnabled()>();

        if $z0 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r2 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View findFirstVisibleChildClosestToStart(boolean,boolean)>($z3, 1);

        $z1 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: boolean isSmoothScrollbarEnabled()>();

        if $z1 != 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        r3 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean)>($z4, 1);

        if r2 == null goto label7;

        if r3 != null goto label8;

     label7:
        return 0;

     label8:
        $z2 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: boolean isSmoothScrollbarEnabled()>();

        if $z2 != 0 goto label9;

        $r9 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i19 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $i21 = $i19 - 1;

        $i20 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $i22 = virtualinvoke $r9.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)>($i21, $i20);

        $i23 = $i22 + 1;

        return $i23;

     label9:
        $r4 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i7 = virtualinvoke $r4.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r3);

        $r5 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i8 = virtualinvoke $r5.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r2);

        i0 = $i7 - $i8;

        $r6 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i9 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPosition(android.view.View)>(r2);

        $i10 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        i1 = virtualinvoke $r6.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)>($i9, $i10);

        $r7 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i11 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPosition(android.view.View)>(r3);

        $i12 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        i2 = virtualinvoke $r7.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)>($i11, $i12);

        $r8 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i13 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $i15 = $i13 - 1;

        $i14 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $i16 = virtualinvoke $r8.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)>($i15, $i14);

        i3 = $i16 + 1;

        $i17 = i2 - i1;

        i4 = $i17 + 1;

        $f1 = (float) i0;

        $f0 = (float) i4;

        $f3 = $f1 / $f0;

        $f2 = (float) i3;

        $f4 = $f3 * $f2;

        $i18 = (int) $f4;

        return $i18;
    }

    private int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
    {
        androidx.recyclerview.widget.GridLayoutManager r0;
        androidx.recyclerview.widget.RecyclerView$State r1;
        boolean z0, $z1, $z2, $z3;
        android.view.View r2, r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup $r4, $r5, $r6, $r9, $r10;
        androidx.recyclerview.widget.OrientationHelper $r7, $r8, $r11, $r12;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$State;

        $i10 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getChildCount()>();

        if $i10 == 0 goto label01;

        $i11 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        if $i11 != 0 goto label02;

     label01:
        return 0;

     label02:
        virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: void ensureLayoutState()>();

        z0 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: boolean isSmoothScrollbarEnabled()>();

        if z0 != 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        r2 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View findFirstVisibleChildClosestToStart(boolean,boolean)>($z2, 1);

        if z0 != 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        r3 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean)>($z3, 1);

        if r2 == null goto label07;

        if r3 != null goto label08;

     label07:
        return 0;

     label08:
        $r4 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i12 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPosition(android.view.View)>(r2);

        $i13 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        i0 = virtualinvoke $r4.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)>($i12, $i13);

        $r5 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i14 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPosition(android.view.View)>(r3);

        $i15 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        i1 = virtualinvoke $r5.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)>($i14, $i15);

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        $r6 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i16 = virtualinvoke r1.<androidx.recyclerview.widget.RecyclerView$State: int getItemCount()>();

        $i18 = $i16 - 1;

        $i17 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        $i19 = virtualinvoke $r6.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)>($i18, $i17);

        i4 = $i19 + 1;

        $z1 = r0.<androidx.recyclerview.widget.GridLayoutManager: boolean mShouldReverseLayout>;

        if $z1 == 0 goto label09;

        $i32 = i4 - i3;

        $i33 = $i32 - 1;

        $i34 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i33);

        goto label10;

     label09:
        $i34 = staticinvoke <java.lang.Math: int max(int,int)>(0, i2);

     label10:
        i5 = $i34;

        if z0 != 0 goto label11;

        return i5;

     label11:
        $r7 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i20 = virtualinvoke $r7.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)>(r3);

        $r8 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i21 = virtualinvoke $r8.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r2);

        $i22 = $i20 - $i21;

        i6 = staticinvoke <java.lang.Math: int abs(int)>($i22);

        $r9 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i23 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPosition(android.view.View)>(r2);

        $i24 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        i7 = virtualinvoke $r9.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)>($i23, $i24);

        $r10 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i25 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager: int getPosition(android.view.View)>(r3);

        $i26 = r0.<androidx.recyclerview.widget.GridLayoutManager: int mSpanCount>;

        i8 = virtualinvoke $r10.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)>($i25, $i26);

        $i27 = i8 - i7;

        i9 = $i27 + 1;

        $f2 = (float) i6;

        $f1 = (float) i9;

        f0 = $f2 / $f1;

        $f3 = (float) i5;

        $f4 = $f3 * f0;

        $r11 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i28 = virtualinvoke $r11.<androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()>();

        $r12 = r0.<androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper>;

        $i29 = virtualinvoke $r12.<androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)>(r2);

        $i30 = $i28 - $i29;

        $f5 = (float) $i30;

        $f6 = $f4 + $f5;

        $i31 = staticinvoke <java.lang.Math: int round(float)>($f6);

        return $i31;
    }

androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup
    public void <init>()
    {
        androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup r0;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup;

        specialinvoke r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void <init>()>();

        return;
    }

    public int getSpanSize(int)
    {
        androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup r0;
        int i0;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup;

        i0 := @parameter0: int;

        return 1;
    }

    public int getSpanIndex(int, int)
    {
        androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup r0;
        int i0, i1, $i2;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 % i1;

        return $i2;
    }

androidx.recyclerview.widget.GridLayoutManager$LayoutParams
<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int INVALID_SPAN_ID>
<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex>
<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize>
    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex> = -1;

        r0.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize> = 0;

        return;
    }

    public void <init>(int, int)
    {
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams r0;
        int i0, i1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(int,int)>(i0, i1);

        r0.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex> = -1;

        r0.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize> = 0;

        return;
    }

    public void <init>(android.view.ViewGroup$MarginLayoutParams)
    {
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams r0;
        android.view.ViewGroup$MarginLayoutParams r1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: android.view.ViewGroup$MarginLayoutParams;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>(r1);

        r0.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex> = -1;

        r0.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize> = 0;

        return;
    }

    public void <init>(android.view.ViewGroup$LayoutParams)
    {
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams r0;
        android.view.ViewGroup$LayoutParams r1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        r0.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex> = -1;

        r0.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize> = 0;

        return;
    }

    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    {
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams r0;
        androidx.recyclerview.widget.RecyclerView$LayoutParams r1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$LayoutParams;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$LayoutParams: void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)>(r1);

        r0.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex> = -1;

        r0.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize> = 0;

        return;
    }

    public int getSpanIndex()
    {
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        $i0 = r0.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex>;

        return $i0;
    }

    public int getSpanSize()
    {
        androidx.recyclerview.widget.GridLayoutManager$LayoutParams r0;
        int $i0;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$LayoutParams;

        $i0 = r0.<androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize>;

        return $i0;
    }

androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanIndexCache>
<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanGroupIndexCache>
<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanIndices>
<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanGroupIndices>
    public void <init>()
    {
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup r0;
        android.util.SparseIntArray $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.SparseIntArray;

        specialinvoke $r1.<android.util.SparseIntArray: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanIndexCache> = $r1;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanGroupIndexCache> = $r2;

        r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanIndices> = 0;

        r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanGroupIndices> = 0;

        return;
    }

<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>
    public void setSpanIndexCacheEnabled(boolean)
    {
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup r0;
        boolean z0;
        android.util.SparseIntArray $r1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanGroupIndexCache>;

        virtualinvoke $r1.<android.util.SparseIntArray: void clear()>();

     label1:
        r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanIndices> = z0;

        return;
    }

    public void setSpanGroupIndexCacheEnabled(boolean)
    {
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup r0;
        boolean z0;
        android.util.SparseIntArray $r1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanGroupIndexCache>;

        virtualinvoke $r1.<android.util.SparseIntArray: void clear()>();

     label1:
        r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanGroupIndices> = z0;

        return;
    }

    public void invalidateSpanIndexCache()
    {
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup r0;
        android.util.SparseIntArray $r1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup;

        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanIndexCache>;

        virtualinvoke $r1.<android.util.SparseIntArray: void clear()>();

        return;
    }

    public void invalidateSpanGroupIndexCache()
    {
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup r0;
        android.util.SparseIntArray $r1;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup;

        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanGroupIndexCache>;

        virtualinvoke $r1.<android.util.SparseIntArray: void clear()>();

        return;
    }

    public boolean isSpanIndexCacheEnabled()
    {
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup;

        $z0 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanIndices>;

        return $z0;
    }

    public boolean isSpanGroupIndexCacheEnabled()
    {
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup r0;
        boolean $z0;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup;

        $z0 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanGroupIndices>;

        return $z0;
    }

    int getCachedSpanIndex(int, int)
    {
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup r0;
        int i0, i1, i2, i3, $i4;
        boolean $z0;
        android.util.SparseIntArray $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanIndices>;

        if $z0 != 0 goto label1;

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanIndex(int,int)>(i0, i1);

        return $i4;

     label1:
        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanIndexCache>;

        i2 = virtualinvoke $r1.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if i2 == -1 goto label2;

        return i2;

     label2:
        i3 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanIndex(int,int)>(i0, i1);

        $r2 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanIndexCache>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(i0, i3);

        return i3;
    }

    int getCachedSpanGroupIndex(int, int)
    {
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup r0;
        int i0, i1, i2, i3, $i4;
        boolean $z0;
        android.util.SparseIntArray $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanGroupIndices>;

        if $z0 != 0 goto label1;

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanGroupIndex(int,int)>(i0, i1);

        return $i4;

     label1:
        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanGroupIndexCache>;

        i2 = virtualinvoke $r1.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if i2 == -1 goto label2;

        return i2;

     label2:
        i3 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanGroupIndex(int,int)>(i0, i1);

        $r2 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanGroupIndexCache>;

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>(i0, i3);

        return i3;
    }

    public int getSpanIndex(int, int)
    {
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7, i8, i9, i10;
        boolean $z0;
        android.util.SparseIntArray $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i0);

        if i2 != i1 goto label1;

        return 0;

     label1:
        i7 = 0;

        i8 = 0;

        $z0 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanIndices>;

        if $z0 == 0 goto label2;

        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanIndexCache>;

        i9 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int findFirstKeyLessThan(android.util.SparseIntArray,int)>($r1, i0);

        if i9 < 0 goto label2;

        $r2 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanIndexCache>;

        $i5 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int)>(i9);

        $i6 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i9);

        i7 = $i5 + $i6;

        i8 = i9 + 1;

     label2:
        i10 = i8;

     label3:
        if i10 >= i0 goto label6;

        i3 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i10);

        i7 = i7 + i3;

        if i7 != i1 goto label4;

        i7 = 0;

        goto label5;

     label4:
        if i7 <= i1 goto label5;

        i7 = i3;

     label5:
        i10 = i10 + 1;

        goto label3;

     label6:
        $i4 = i7 + i2;

        if $i4 > i1 goto label7;

        return i7;

     label7:
        return 0;
    }

    static int findFirstKeyLessThan(android.util.SparseIntArray, int)
    {
        android.util.SparseIntArray r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;

        r0 := @parameter0: android.util.SparseIntArray;

        i0 := @parameter1: int;

        i6 = 0;

        $i2 = virtualinvoke r0.<android.util.SparseIntArray: int size()>();

        i7 = $i2 - 1;

     label1:
        if i6 > i7 goto label4;

        $i5 = i6 + i7;

        i8 = $i5 >>> 1;

        i1 = virtualinvoke r0.<android.util.SparseIntArray: int keyAt(int)>(i8);

        if i1 >= i0 goto label2;

        i6 = i8 + 1;

        goto label3;

     label2:
        i7 = i8 - 1;

     label3:
        goto label1;

     label4:
        i9 = i6 - 1;

        if i9 < 0 goto label5;

        $i3 = virtualinvoke r0.<android.util.SparseIntArray: int size()>();

        if i9 >= $i3 goto label5;

        $i4 = virtualinvoke r0.<android.util.SparseIntArray: int keyAt(int)>(i9);

        return $i4;

     label5:
        return -1;
    }

    public int getSpanGroupIndex(int, int)
    {
        androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup r0;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11;
        boolean $z0;
        android.util.SparseIntArray $r1, $r2;

        r0 := @this: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i6 = 0;

        i7 = 0;

        i8 = 0;

        $z0 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanGroupIndices>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanGroupIndexCache>;

        i9 = staticinvoke <androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int findFirstKeyLessThan(android.util.SparseIntArray,int)>($r1, i0);

        if i9 == -1 goto label1;

        $r2 = r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanGroupIndexCache>;

        i7 = virtualinvoke $r2.<android.util.SparseIntArray: int get(int)>(i9);

        i8 = i9 + 1;

        $i4 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)>(i9, i1);

        $i5 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i9);

        i6 = $i4 + $i5;

        if i6 != i1 goto label1;

        i6 = 0;

        i7 = i7 + 1;

     label1:
        i10 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i0);

        i11 = i8;

     label2:
        if i11 >= i0 goto label5;

        i2 = virtualinvoke r0.<androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i11);

        i6 = i6 + i2;

        if i6 != i1 goto label3;

        i6 = 0;

        i7 = i7 + 1;

        goto label4;

     label3:
        if i6 <= i1 goto label4;

        i6 = i2;

        i7 = i7 + 1;

     label4:
        i11 = i11 + 1;

        goto label2;

     label5:
        $i3 = i6 + i10;

        if $i3 <= i1 goto label6;

        i7 = i7 + 1;

     label6:
        return i7;
    }

