androidx.test.espresso.remote.AnyToTypeConverter
<androidx.test.espresso.remote.AnyToTypeConverter: androidx.test.espresso.remote.RemoteDescriptorRegistry remoteDescriptorRegistry>
    private androidx.test.espresso.remote.EspressoRemoteMessage$From createRemoteMessageFromField(java.lang.reflect.Field) throws java.lang.IllegalAccessException
    {
        java.lang.reflect.Field r0;
        java.lang.Class $r1;
        java.lang.Object $r2, $r3;
        java.lang.Throwable $r4;
        androidx.test.espresso.remote.AnyToTypeConverter r5;
        androidx.test.espresso.remote.EspressoRemoteMessage$From r6;
        androidx.test.espresso.remote.RemoteProtocolException r7;

        r5 := @this: androidx.test.espresso.remote.AnyToTypeConverter;

        r0 := @parameter0: java.lang.reflect.Field;

     label1:
        $r1 = class "Landroidx/test/espresso/remote/EspressoRemoteMessage$From;";

        $r2 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r2);

        r6 = (androidx.test.espresso.remote.EspressoRemoteMessage$From) $r3;

        goto label3;

     label2:
        $r4 := @caughtexception;

        r7 = new androidx.test.espresso.remote.RemoteProtocolException;

        specialinvoke r7.<androidx.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String)>("Cannot unwrap target type from any proto: Cannot cast\'private static FROM\' field to the EspressoRemoteMessage.From interface.");

        throw r7;

     label3:
        return r6;

        catch java.lang.ClassCastException from label1 to label2 with label2;
    }

    private androidx.test.espresso.remote.internal.deps.protobuf.MessageLite anyToProto(androidx.test.espresso.remote.internal.deps.protobuf.Any)
    {
        androidx.test.espresso.remote.RemoteDescriptor r0;
        androidx.test.espresso.remote.RemoteDescriptorRegistry $r1;
        java.lang.String $r2;
        java.lang.Class $r3;
        androidx.test.espresso.remote.internal.deps.protobuf.Parser $r4;
        java.lang.Throwable $r5, r9;
        androidx.test.espresso.remote.AnyToTypeConverter r6;
        androidx.test.espresso.remote.internal.deps.protobuf.Any r7;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite r8;
        androidx.test.espresso.remote.RemoteProtocolException r10;

        r6 := @this: androidx.test.espresso.remote.AnyToTypeConverter;

        r7 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.Any;

        $r1 = r6.<androidx.test.espresso.remote.AnyToTypeConverter: androidx.test.espresso.remote.RemoteDescriptorRegistry remoteDescriptorRegistry>;

        $r2 = virtualinvoke r7.<androidx.test.espresso.remote.internal.deps.protobuf.Any: java.lang.String getTypeUrl()>();

        r0 = virtualinvoke $r1.<androidx.test.espresso.remote.RemoteDescriptorRegistry: androidx.test.espresso.remote.RemoteDescriptor argForRemoteTypeUrl(java.lang.String)>($r2);

     label1:
        $r3 = virtualinvoke r0.<androidx.test.espresso.remote.RemoteDescriptor: java.lang.Class getProtoType()>();

        $r4 = virtualinvoke r0.<androidx.test.espresso.remote.RemoteDescriptor: androidx.test.espresso.remote.internal.deps.protobuf.Parser getProtoParser()>();

        r8 = specialinvoke r6.<androidx.test.espresso.remote.AnyToTypeConverter: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite anyToProto(androidx.test.espresso.remote.internal.deps.protobuf.Any,java.lang.Class,androidx.test.espresso.remote.internal.deps.protobuf.Parser)>(r7, $r3, $r4);

        goto label3;

     label2:
        $r5 := @caughtexception;

        r9 = $r5;

        r10 = new androidx.test.espresso.remote.RemoteProtocolException;

        specialinvoke r10.<androidx.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>("Message cannot be casted to type T", r9);

        throw r10;

     label3:
        return r8;

        catch java.lang.ClassCastException from label1 to label2 with label2;
    }

    private androidx.test.espresso.remote.internal.deps.protobuf.MessageLite anyToProto(androidx.test.espresso.remote.internal.deps.protobuf.Any, java.lang.Class, androidx.test.espresso.remote.internal.deps.protobuf.Parser) throws androidx.test.espresso.remote.internal.deps.protobuf.InvalidProtocolBufferException
    {
        java.lang.Class r0, $r7;
        java.lang.Object[] r1;
        androidx.test.espresso.remote.internal.deps.protobuf.ByteString $r4;
        boolean $z0;
        java.lang.Object $r5, r14;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite $r6;
        java.lang.String $r8, $r9, $r10;
        androidx.test.espresso.remote.AnyToTypeConverter r11;
        androidx.test.espresso.remote.internal.deps.protobuf.Any r12;
        androidx.test.espresso.remote.internal.deps.protobuf.Parser r13;
        androidx.test.espresso.remote.RemoteProtocolException r15;
        java.util.Locale r16;

        r11 := @this: androidx.test.espresso.remote.AnyToTypeConverter;

        r12 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.Any;

        r0 := @parameter1: java.lang.Class;

        r13 := @parameter2: androidx.test.espresso.remote.internal.deps.protobuf.Parser;

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "expectedType cannot be null!");

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r13, "parser cannot be null!");

        $r4 = virtualinvoke r12.<androidx.test.espresso.remote.internal.deps.protobuf.Any: androidx.test.espresso.remote.internal.deps.protobuf.ByteString getValue()>();

        r14 = interfaceinvoke r13.<androidx.test.espresso.remote.internal.deps.protobuf.Parser: java.lang.Object parseFrom(androidx.test.espresso.remote.internal.deps.protobuf.ByteString)>($r4);

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r14);

        if $z0 != 0 goto label1;

        r15 = new androidx.test.espresso.remote.RemoteProtocolException;

        r16 = <java.util.Locale: java.util.Locale ROOT>;

        r1 = newarray (java.lang.Object)[2];

        $r7 = virtualinvoke r14.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        r1[0] = $r8;

        $r9 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        r1[1] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r16, "Got type: %s, but expected type: %s instead", r1);

        specialinvoke r15.<androidx.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String)>($r10);

        throw r15;

     label1:
        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r14);

        $r6 = (androidx.test.espresso.remote.internal.deps.protobuf.MessageLite) $r5;

        return $r6;
    }

    private java.lang.Class createRemoteTargetClassFromAny(androidx.test.espresso.remote.internal.deps.protobuf.Any)
    {
        androidx.test.espresso.remote.AnyToTypeConverter r0;
        androidx.test.espresso.remote.internal.deps.protobuf.Any r1;
        androidx.test.espresso.remote.RemoteDescriptorRegistry $r2;
        java.lang.String $r3;
        androidx.test.espresso.remote.RemoteDescriptor $r4;
        java.lang.Class $r5;

        r0 := @this: androidx.test.espresso.remote.AnyToTypeConverter;

        r1 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.Any;

        $r2 = r0.<androidx.test.espresso.remote.AnyToTypeConverter: androidx.test.espresso.remote.RemoteDescriptorRegistry remoteDescriptorRegistry>;

        $r3 = virtualinvoke r1.<androidx.test.espresso.remote.internal.deps.protobuf.Any: java.lang.String getTypeUrl()>();

        $r4 = virtualinvoke $r2.<androidx.test.espresso.remote.RemoteDescriptorRegistry: androidx.test.espresso.remote.RemoteDescriptor argForRemoteTypeUrl(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<androidx.test.espresso.remote.RemoteDescriptor: java.lang.Class getRemoteType()>();

        return $r5;
    }

    public java.lang.Object convert(androidx.test.espresso.remote.internal.deps.protobuf.Any)
    {
        androidx.test.espresso.remote.RemoteProtocolException r0, r16;
        java.util.Locale r1;
        java.lang.Object[] r2;
        java.lang.Class $r4;
        java.lang.reflect.Field $r5;
        androidx.test.espresso.remote.EspressoRemoteMessage$From $r6;
        java.lang.Throwable $r7, $r8, r14, r15;
        java.lang.String $r9, $r10;
        androidx.test.espresso.remote.AnyToTypeConverter r11;
        androidx.test.espresso.remote.internal.deps.protobuf.Any r12;
        java.lang.Object r13;

        r11 := @this: androidx.test.espresso.remote.AnyToTypeConverter;

        r12 := @parameter0: androidx.test.espresso.remote.internal.deps.protobuf.Any;

        staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r12, "any cannot be null!");

     label1:
        $r4 = specialinvoke r11.<androidx.test.espresso.remote.AnyToTypeConverter: java.lang.Class createRemoteTargetClassFromAny(androidx.test.espresso.remote.internal.deps.protobuf.Any)>(r12);

        $r5 = specialinvoke r11.<androidx.test.espresso.remote.AnyToTypeConverter: java.lang.reflect.Field accessFromField(java.lang.Class)>($r4);

        $r6 = specialinvoke r11.<androidx.test.espresso.remote.AnyToTypeConverter: androidx.test.espresso.remote.EspressoRemoteMessage$From createRemoteMessageFromField(java.lang.reflect.Field)>($r5);

        r13 = specialinvoke r11.<androidx.test.espresso.remote.AnyToTypeConverter: java.lang.Object createTargetTypeFromRemoteMessage(androidx.test.espresso.remote.EspressoRemoteMessage$From,androidx.test.espresso.remote.internal.deps.protobuf.Any)>($r6, r12);

        goto label4;

     label2:
        $r8 := @caughtexception;

        r14 = $r8;

        r0 = new androidx.test.espresso.remote.RemoteProtocolException;

        r1 = <java.util.Locale: java.util.Locale ROOT>;

        r2 = newarray (java.lang.Object)[1];

        $r9 = virtualinvoke r12.<androidx.test.espresso.remote.internal.deps.protobuf.Any: java.lang.String getTypeUrl()>();

        r2[0] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r1, "Something went wrong during any conversion for type url: %s", r2);

        specialinvoke r0.<androidx.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r14);

        throw r0;

     label3:
        $r7 := @caughtexception;

        r15 = $r7;

        r16 = new androidx.test.espresso.remote.RemoteProtocolException;

        specialinvoke r16.<androidx.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot unwrap target type instance from any proto: ", r15);

        throw r16;

     label4:
        return r13;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label2;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        androidx.test.espresso.remote.AnyToTypeConverter r0;
        java.lang.Object r1, $r3;
        androidx.test.espresso.remote.internal.deps.protobuf.Any $r2;

        r0 := @this: androidx.test.espresso.remote.AnyToTypeConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.test.espresso.remote.internal.deps.protobuf.Any) r1;

        $r3 = virtualinvoke r0.<androidx.test.espresso.remote.AnyToTypeConverter: java.lang.Object convert(androidx.test.espresso.remote.internal.deps.protobuf.Any)>($r2);

        return $r3;
    }

    private java.lang.Object createTargetTypeFromRemoteMessage(androidx.test.espresso.remote.EspressoRemoteMessage$From, androidx.test.espresso.remote.internal.deps.protobuf.Any)
    {
        androidx.test.espresso.remote.AnyToTypeConverter r0;
        androidx.test.espresso.remote.EspressoRemoteMessage$From r1;
        androidx.test.espresso.remote.internal.deps.protobuf.Any r2;
        androidx.test.espresso.remote.internal.deps.protobuf.MessageLite $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.test.espresso.remote.AnyToTypeConverter;

        r1 := @parameter0: androidx.test.espresso.remote.EspressoRemoteMessage$From;

        r2 := @parameter1: androidx.test.espresso.remote.internal.deps.protobuf.Any;

        $r3 = specialinvoke r0.<androidx.test.espresso.remote.AnyToTypeConverter: androidx.test.espresso.remote.internal.deps.protobuf.MessageLite anyToProto(androidx.test.espresso.remote.internal.deps.protobuf.Any)>(r2);

        $r4 = interfaceinvoke r1.<androidx.test.espresso.remote.EspressoRemoteMessage$From: java.lang.Object fromProto(java.lang.Object)>($r3);

        return $r4;
    }

    private java.lang.reflect.Field accessFromField(java.lang.Class) throws java.lang.IllegalAccessException
    {
        androidx.test.espresso.remote.RemoteProtocolException r0;
        java.lang.StringBuilder r1, $r3, $r4, $r5;
        boolean $z0;
        java.lang.Throwable $r2, r11;
        java.lang.String $r6, r12;
        androidx.test.espresso.remote.AnyToTypeConverter r7;
        java.lang.Class r8;
        java.lang.reflect.Field r9;
        java.lang.IllegalAccessException r10;

        r7 := @this: androidx.test.espresso.remote.AnyToTypeConverter;

        r8 := @parameter0: java.lang.Class;

     label1:
        r9 = virtualinvoke r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("FROM");

     label2:
        virtualinvoke r9.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        if r9 == null goto label3;

        $z0 = virtualinvoke r9.<java.lang.reflect.Field: boolean isAccessible()>();

        if $z0 != 0 goto label5;

     label3:
        r10 = new java.lang.IllegalAccessException;

        specialinvoke r10.<java.lang.IllegalAccessException: void <init>(java.lang.String)>("Failed to make EspressoRemoteMessage.From FROM field accessible");

        throw r10;

     label4:
        $r2 := @caughtexception;

        r11 = $r2;

        r0 = new androidx.test.espresso.remote.RemoteProtocolException;

        r12 = virtualinvoke r8.<java.lang.Class: java.lang.String getSimpleName()>();

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot unwrap target type from any proto: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not declare a \'private static FROM\' fromViewMatcherField implementing theEspressoRemoteMessage.From interface. Please ensure that such afromViewMatcherField exists!");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<androidx.test.espresso.remote.RemoteProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r6, r11);

        throw r0;

     label5:
        return r9;

        catch java.lang.NoSuchFieldException from label1 to label2 with label4;
    }

    void <init>(androidx.test.espresso.remote.RemoteDescriptorRegistry)
    {
        androidx.test.espresso.remote.AnyToTypeConverter r0;
        androidx.test.espresso.remote.RemoteDescriptorRegistry r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.espresso.remote.AnyToTypeConverter;

        r1 := @parameter0: androidx.test.espresso.remote.RemoteDescriptorRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.test.espresso.remote.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "remoteDescriptorRegistry cannot be null!");

        $r3 = (androidx.test.espresso.remote.RemoteDescriptorRegistry) $r2;

        r0.<androidx.test.espresso.remote.AnyToTypeConverter: androidx.test.espresso.remote.RemoteDescriptorRegistry remoteDescriptorRegistry> = $r3;

        return;
    }

