androidx.work.multiprocess.parcelable.ParcelableUpdateRequest
<androidx.work.multiprocess.parcelable.ParcelableUpdateRequest: java.lang.String mId>
<androidx.work.multiprocess.parcelable.ParcelableUpdateRequest: androidx.work.multiprocess.parcelable.ParcelableData mParcelableData>
<androidx.work.multiprocess.parcelable.ParcelableUpdateRequest: android.os.Parcelable$Creator CREATOR>
    public void <init>(java.util.UUID, androidx.work.Data)
    {
        androidx.work.multiprocess.parcelable.ParcelableUpdateRequest r0;
        java.util.UUID r1;
        androidx.work.Data r2;
        java.lang.String $r3;
        androidx.work.multiprocess.parcelable.ParcelableData $r4;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableUpdateRequest;

        r1 := @parameter0: java.util.UUID;

        r2 := @parameter1: androidx.work.Data;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r1.<java.util.UUID: java.lang.String toString()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableUpdateRequest: java.lang.String mId> = $r3;

        $r4 = new androidx.work.multiprocess.parcelable.ParcelableData;

        specialinvoke $r4.<androidx.work.multiprocess.parcelable.ParcelableData: void <init>(androidx.work.Data)>(r2);

        r0.<androidx.work.multiprocess.parcelable.ParcelableUpdateRequest: androidx.work.multiprocess.parcelable.ParcelableData mParcelableData> = $r4;

        return;
    }

    protected void <init>(android.os.Parcel)
    {
        androidx.work.multiprocess.parcelable.ParcelableUpdateRequest r0;
        android.os.Parcel r1;
        java.lang.String $r2;
        androidx.work.multiprocess.parcelable.ParcelableData $r3;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableUpdateRequest;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableUpdateRequest: java.lang.String mId> = $r2;

        $r3 = new androidx.work.multiprocess.parcelable.ParcelableData;

        specialinvoke $r3.<androidx.work.multiprocess.parcelable.ParcelableData: void <init>(android.os.Parcel)>(r1);

        r0.<androidx.work.multiprocess.parcelable.ParcelableUpdateRequest: androidx.work.multiprocess.parcelable.ParcelableData mParcelableData> = $r3;

        return;
    }

    public java.lang.String getId()
    {
        androidx.work.multiprocess.parcelable.ParcelableUpdateRequest r0;
        java.lang.String $r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableUpdateRequest;

        $r1 = r0.<androidx.work.multiprocess.parcelable.ParcelableUpdateRequest: java.lang.String mId>;

        return $r1;
    }

    public androidx.work.Data getData()
    {
        androidx.work.multiprocess.parcelable.ParcelableUpdateRequest r0;
        androidx.work.multiprocess.parcelable.ParcelableData $r1;
        androidx.work.Data $r2;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableUpdateRequest;

        $r1 = r0.<androidx.work.multiprocess.parcelable.ParcelableUpdateRequest: androidx.work.multiprocess.parcelable.ParcelableData mParcelableData>;

        $r2 = virtualinvoke $r1.<androidx.work.multiprocess.parcelable.ParcelableData: androidx.work.Data getData()>();

        return $r2;
    }

    public int describeContents()
    {
        androidx.work.multiprocess.parcelable.ParcelableUpdateRequest r0;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableUpdateRequest;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.work.multiprocess.parcelable.ParcelableUpdateRequest r0;
        android.os.Parcel r1;
        int i0;
        java.lang.String $r2;
        androidx.work.multiprocess.parcelable.ParcelableData $r3;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableUpdateRequest;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.work.multiprocess.parcelable.ParcelableUpdateRequest: java.lang.String mId>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<androidx.work.multiprocess.parcelable.ParcelableUpdateRequest: androidx.work.multiprocess.parcelable.ParcelableData mParcelableData>;

        virtualinvoke $r3.<androidx.work.multiprocess.parcelable.ParcelableData: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        androidx.work.multiprocess.parcelable.ParcelableUpdateRequest$1 $r0;

        $r0 = new androidx.work.multiprocess.parcelable.ParcelableUpdateRequest$1;

        specialinvoke $r0.<androidx.work.multiprocess.parcelable.ParcelableUpdateRequest$1: void <init>()>();

        <androidx.work.multiprocess.parcelable.ParcelableUpdateRequest: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

