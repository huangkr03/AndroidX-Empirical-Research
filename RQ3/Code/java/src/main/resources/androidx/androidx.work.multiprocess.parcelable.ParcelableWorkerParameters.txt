androidx.work.multiprocess.parcelable.ParcelableWorkerParameters
<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: java.util.UUID mId>
<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: androidx.work.Data mData>
<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: java.util.Set mTags>
<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras>
<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: int mRunAttemptCount>
<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: int mGeneration>
<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: android.os.Parcelable$Creator CREATOR>
    public void <init>(androidx.work.WorkerParameters)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters r0;
        androidx.work.WorkerParameters r1;
        java.util.UUID $r2;
        androidx.work.Data $r3;
        java.util.Set $r4;
        androidx.work.WorkerParameters$RuntimeExtras $r5;
        int $i0, $i1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters;

        r1 := @parameter0: androidx.work.WorkerParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<androidx.work.WorkerParameters: java.util.UUID getId()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: java.util.UUID mId> = $r2;

        $r3 = virtualinvoke r1.<androidx.work.WorkerParameters: androidx.work.Data getInputData()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: androidx.work.Data mData> = $r3;

        $r4 = virtualinvoke r1.<androidx.work.WorkerParameters: java.util.Set getTags()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: java.util.Set mTags> = $r4;

        $r5 = virtualinvoke r1.<androidx.work.WorkerParameters: androidx.work.WorkerParameters$RuntimeExtras getRuntimeExtras()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras> = $r5;

        $i0 = virtualinvoke r1.<androidx.work.WorkerParameters: int getRunAttemptCount()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: int mRunAttemptCount> = $i0;

        $i1 = virtualinvoke r1.<androidx.work.WorkerParameters: int getGeneration()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: int mGeneration> = $i1;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters r0;
        android.os.Parcel r1;
        java.lang.String r2;
        androidx.work.multiprocess.parcelable.ParcelableData r3, $r6;
        androidx.work.multiprocess.parcelable.ParcelableRuntimeExtras r4, $r10;
        java.util.UUID $r5;
        androidx.work.Data $r7;
        java.util.HashSet $r8;
        java.util.ArrayList $r9;
        androidx.work.WorkerParameters$RuntimeExtras $r11;
        int $i0, $i1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r5 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>(r2);

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: java.util.UUID mId> = $r5;

        $r6 = new androidx.work.multiprocess.parcelable.ParcelableData;

        specialinvoke $r6.<androidx.work.multiprocess.parcelable.ParcelableData: void <init>(android.os.Parcel)>(r1);

        r3 = $r6;

        $r7 = virtualinvoke r3.<androidx.work.multiprocess.parcelable.ParcelableData: androidx.work.Data getData()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: androidx.work.Data mData> = $r7;

        $r8 = new java.util.HashSet;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        specialinvoke $r8.<java.util.HashSet: void <init>(java.util.Collection)>($r9);

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: java.util.Set mTags> = $r8;

        $r10 = new androidx.work.multiprocess.parcelable.ParcelableRuntimeExtras;

        specialinvoke $r10.<androidx.work.multiprocess.parcelable.ParcelableRuntimeExtras: void <init>(android.os.Parcel)>(r1);

        r4 = $r10;

        $r11 = virtualinvoke r4.<androidx.work.multiprocess.parcelable.ParcelableRuntimeExtras: androidx.work.WorkerParameters$RuntimeExtras getRuntimeExtras()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras> = $r11;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: int mRunAttemptCount> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: int mGeneration> = $i1;

        return;
    }

    public int describeContents()
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters r0;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters r0;
        android.os.Parcel r1;
        int i0, $i1, $i2;
        androidx.work.multiprocess.parcelable.ParcelableData r2, $r7;
        java.util.ArrayList r3, $r9;
        androidx.work.multiprocess.parcelable.ParcelableRuntimeExtras r4, $r11;
        java.util.UUID $r5;
        java.lang.String $r6;
        androidx.work.Data $r8;
        java.util.Set $r10;
        androidx.work.WorkerParameters$RuntimeExtras $r12;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r5 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: java.util.UUID mId>;

        $r6 = virtualinvoke $r5.<java.util.UUID: java.lang.String toString()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $r7 = new androidx.work.multiprocess.parcelable.ParcelableData;

        $r8 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: androidx.work.Data mData>;

        specialinvoke $r7.<androidx.work.multiprocess.parcelable.ParcelableData: void <init>(androidx.work.Data)>($r8);

        r2 = $r7;

        virtualinvoke r2.<androidx.work.multiprocess.parcelable.ParcelableData: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $r9 = new java.util.ArrayList;

        $r10 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: java.util.Set mTags>;

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>($r10);

        r3 = $r9;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>(r3);

        $r11 = new androidx.work.multiprocess.parcelable.ParcelableRuntimeExtras;

        $r12 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras>;

        specialinvoke $r11.<androidx.work.multiprocess.parcelable.ParcelableRuntimeExtras: void <init>(androidx.work.WorkerParameters$RuntimeExtras)>($r12);

        r4 = $r11;

        virtualinvoke r4.<androidx.work.multiprocess.parcelable.ParcelableRuntimeExtras: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $i1 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: int mRunAttemptCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: int mGeneration>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        return;
    }

    public java.util.UUID getId()
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters r0;
        java.util.UUID $r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters;

        $r1 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: java.util.UUID mId>;

        return $r1;
    }

    public androidx.work.Data getData()
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters r0;
        androidx.work.Data $r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters;

        $r1 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: androidx.work.Data mData>;

        return $r1;
    }

    public int getRunAttemptCount()
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters r0;
        int $i0;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters;

        $i0 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: int mRunAttemptCount>;

        return $i0;
    }

    public java.util.Set getTags()
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters r0;
        java.util.Set $r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters;

        $r1 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: java.util.Set mTags>;

        return $r1;
    }

    public androidx.work.WorkerParameters toWorkerParameters(androidx.work.impl.WorkManagerImpl)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters r0;
        androidx.work.impl.WorkManagerImpl r1;
        androidx.work.Configuration r2;
        androidx.work.impl.WorkDatabase r3;
        androidx.work.impl.utils.taskexecutor.TaskExecutor r4;
        androidx.work.impl.Processor r5;
        androidx.work.impl.utils.WorkProgressUpdater r6, r11;
        androidx.work.impl.utils.WorkForegroundUpdater r7, r12;
        androidx.work.WorkerParameters $r10;
        androidx.work.ProgressUpdater r13;
        androidx.work.ForegroundUpdater r14;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters;

        r1 := @parameter0: androidx.work.impl.WorkManagerImpl;

        r2 = virtualinvoke r1.<androidx.work.impl.WorkManagerImpl: androidx.work.Configuration getConfiguration()>();

        r3 = virtualinvoke r1.<androidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkDatabase getWorkDatabase()>();

        r4 = virtualinvoke r1.<androidx.work.impl.WorkManagerImpl: androidx.work.impl.utils.taskexecutor.TaskExecutor getWorkTaskExecutor()>();

        r5 = virtualinvoke r1.<androidx.work.impl.WorkManagerImpl: androidx.work.impl.Processor getProcessor()>();

        r11 = new androidx.work.impl.utils.WorkProgressUpdater;

        specialinvoke r11.<androidx.work.impl.utils.WorkProgressUpdater: void <init>(androidx.work.impl.WorkDatabase,androidx.work.impl.utils.taskexecutor.TaskExecutor)>(r3, r4);

        r6 = r11;

        r12 = new androidx.work.impl.utils.WorkForegroundUpdater;

        specialinvoke r12.<androidx.work.impl.utils.WorkForegroundUpdater: void <init>(androidx.work.impl.WorkDatabase,androidx.work.impl.foreground.ForegroundProcessor,androidx.work.impl.utils.taskexecutor.TaskExecutor)>(r3, r5, r4);

        r7 = r12;

        r13 = (androidx.work.ProgressUpdater) r6;

        r14 = (androidx.work.ForegroundUpdater) r7;

        $r10 = virtualinvoke r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: androidx.work.WorkerParameters toWorkerParameters(androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.ProgressUpdater,androidx.work.ForegroundUpdater)>(r2, r4, r13, r14);

        return $r10;
    }

    public androidx.work.WorkerParameters toWorkerParameters(androidx.work.Configuration, androidx.work.impl.utils.taskexecutor.TaskExecutor, androidx.work.ProgressUpdater, androidx.work.ForegroundUpdater)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters r0;
        androidx.work.Configuration r1;
        androidx.work.impl.utils.taskexecutor.TaskExecutor r2;
        androidx.work.ProgressUpdater r3;
        androidx.work.ForegroundUpdater r4;
        androidx.work.WorkerParameters $r5;
        java.util.UUID $r6;
        androidx.work.Data $r7;
        java.util.Set $r8;
        androidx.work.WorkerParameters$RuntimeExtras $r9;
        int $i0, $i1;
        java.util.concurrent.Executor $r10;
        androidx.work.WorkerFactory $r11;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters;

        r1 := @parameter0: androidx.work.Configuration;

        r2 := @parameter1: androidx.work.impl.utils.taskexecutor.TaskExecutor;

        r3 := @parameter2: androidx.work.ProgressUpdater;

        r4 := @parameter3: androidx.work.ForegroundUpdater;

        $r5 = new androidx.work.WorkerParameters;

        $r6 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: java.util.UUID mId>;

        $r7 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: androidx.work.Data mData>;

        $r8 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: java.util.Set mTags>;

        $r9 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras>;

        $i0 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: int mRunAttemptCount>;

        $i1 = r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: int mGeneration>;

        $r10 = virtualinvoke r1.<androidx.work.Configuration: java.util.concurrent.Executor getExecutor()>();

        $r11 = virtualinvoke r1.<androidx.work.Configuration: androidx.work.WorkerFactory getWorkerFactory()>();

        specialinvoke $r5.<androidx.work.WorkerParameters: void <init>(java.util.UUID,androidx.work.Data,java.util.Collection,androidx.work.WorkerParameters$RuntimeExtras,int,int,java.util.concurrent.Executor,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.WorkerFactory,androidx.work.ProgressUpdater,androidx.work.ForegroundUpdater)>($r6, $r7, $r8, $r9, $i0, $i1, $r10, r2, $r11, r3, r4);

        return $r5;
    }

    static void <clinit>()
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1 $r0;

        $r0 = new androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1;

        specialinvoke $r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1: void <init>()>();

        <androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1
    void <init>()
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1 r0;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.work.multiprocess.parcelable.ParcelableWorkerParameters createFromParcel(android.os.Parcel)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1 r0;
        android.os.Parcel r1;
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters $r2;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new androidx.work.multiprocess.parcelable.ParcelableWorkerParameters;

        specialinvoke $r2.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: void <init>(android.os.Parcel)>(r1);

        return $r2;
    }

    public androidx.work.multiprocess.parcelable.ParcelableWorkerParameters[] newArray(int)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1 r0;
        int i0;
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters[] $r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.work.multiprocess.parcelable.ParcelableWorkerParameters)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1 r0;
        int i0;
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters[] $r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters[] newArray(int)>(i0);

        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1 r0;
        android.os.Parcel r1;
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters $r2;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters$1: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

