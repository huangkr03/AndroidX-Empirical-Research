androidx.media3.common.audio.AudioProcessor
<androidx.media3.common.audio.AudioProcessor: java.nio.ByteBuffer EMPTY_BUFFER>
<androidx.media3.common.audio.AudioProcessor: androidx.media3.common.audio.AudioProcessor$AudioFormat configure(androidx.media3.common.audio.AudioProcessor$AudioFormat)>
<androidx.media3.common.audio.AudioProcessor: boolean isActive()>
<androidx.media3.common.audio.AudioProcessor: void queueInput(java.nio.ByteBuffer)>
<androidx.media3.common.audio.AudioProcessor: void queueEndOfStream()>
<androidx.media3.common.audio.AudioProcessor: java.nio.ByteBuffer getOutput()>
<androidx.media3.common.audio.AudioProcessor: boolean isEnded()>
<androidx.media3.common.audio.AudioProcessor: void flush()>
<androidx.media3.common.audio.AudioProcessor: void reset()>
    static void <clinit>()
    {
        java.nio.ByteBuffer $r0, $r2;
        java.nio.ByteOrder $r1;

        $r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(0);

        $r1 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $r2 = virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r1);

        <androidx.media3.common.audio.AudioProcessor: java.nio.ByteBuffer EMPTY_BUFFER> = $r2;

        return;
    }

androidx.media3.common.audio.AudioProcessor$AudioFormat
<androidx.media3.common.audio.AudioProcessor$AudioFormat: androidx.media3.common.audio.AudioProcessor$AudioFormat NOT_SET>
<androidx.media3.common.audio.AudioProcessor$AudioFormat: int sampleRate>
<androidx.media3.common.audio.AudioProcessor$AudioFormat: int channelCount>
<androidx.media3.common.audio.AudioProcessor$AudioFormat: int encoding>
<androidx.media3.common.audio.AudioProcessor$AudioFormat: int bytesPerFrame>
    public void <init>(int, int, int)
    {
        androidx.media3.common.audio.AudioProcessor$AudioFormat r0;
        int i0, i1, i2, $i3;
        boolean $z0;

        r0 := @this: androidx.media3.common.audio.AudioProcessor$AudioFormat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int sampleRate> = i0;

        r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int channelCount> = i1;

        r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int encoding> = i2;

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean isEncodingLinearPcm(int)>(i2);

        if $z0 == 0 goto label1;

        $i3 = staticinvoke <androidx.media3.common.util.Util: int getPcmFrameSize(int,int)>(i2, i1);

        goto label2;

     label1:
        $i3 = -1;

     label2:
        r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int bytesPerFrame> = $i3;

        return;
    }

    public java.lang.String toString()
    {
        androidx.media3.common.audio.AudioProcessor$AudioFormat r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2;
        java.lang.String $r9;

        r0 := @this: androidx.media3.common.audio.AudioProcessor$AudioFormat;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AudioFormat[sampleRate=");

        $i0 = r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int sampleRate>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", channelCount=");

        $i1 = r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int channelCount>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", encoding=");

        $i2 = r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int encoding>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media3.common.audio.AudioProcessor$AudioFormat r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: androidx.media3.common.audio.AudioProcessor$AudioFormat;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.media3.common.audio.AudioProcessor$AudioFormat;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (androidx.media3.common.audio.AudioProcessor$AudioFormat) r1;

        $i1 = r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int sampleRate>;

        $i0 = r2.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int sampleRate>;

        if $i1 != $i0 goto label3;

        $i3 = r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int channelCount>;

        $i2 = r2.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int channelCount>;

        if $i3 != $i2 goto label3;

        $i5 = r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int encoding>;

        $i4 = r2.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int encoding>;

        if $i5 != $i4 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public int hashCode()
    {
        androidx.media3.common.audio.AudioProcessor$AudioFormat r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r2, $r3, $r4;

        r0 := @this: androidx.media3.common.audio.AudioProcessor$AudioFormat;

        $r1 = newarray (java.lang.Object)[3];

        $i0 = r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int sampleRate>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $i1 = r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int channelCount>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $i2 = r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: int encoding>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[2] = $r4;

        $i3 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r1);

        return $i3;
    }

    static void <clinit>()
    {
        androidx.media3.common.audio.AudioProcessor$AudioFormat $r0;

        $r0 = new androidx.media3.common.audio.AudioProcessor$AudioFormat;

        specialinvoke $r0.<androidx.media3.common.audio.AudioProcessor$AudioFormat: void <init>(int,int,int)>(-1, -1, -1);

        <androidx.media3.common.audio.AudioProcessor$AudioFormat: androidx.media3.common.audio.AudioProcessor$AudioFormat NOT_SET> = $r0;

        return;
    }

androidx.media3.common.audio.AudioProcessor$UnhandledAudioFormatException
    public void <init>(androidx.media3.common.audio.AudioProcessor$AudioFormat)
    {
        androidx.media3.common.audio.AudioProcessor$UnhandledAudioFormatException r0;
        androidx.media3.common.audio.AudioProcessor$AudioFormat r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: androidx.media3.common.audio.AudioProcessor$UnhandledAudioFormatException;

        r1 := @parameter0: androidx.media3.common.audio.AudioProcessor$AudioFormat;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled format: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r5);

        return;
    }

