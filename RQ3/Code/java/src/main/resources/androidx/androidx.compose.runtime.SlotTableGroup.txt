androidx.compose.runtime.SlotTableGroup
<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>
<androidx.compose.runtime.SlotTableGroup: int group>
<androidx.compose.runtime.SlotTableGroup: int version>
    public void <init>(androidx.compose.runtime.SlotTable, int, int)
    {
        androidx.compose.runtime.SlotTableGroup r0;
        androidx.compose.runtime.SlotTable r1;
        int i0, i1;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        r1 := @parameter0: androidx.compose.runtime.SlotTable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "table");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table> = r1;

        r0.<androidx.compose.runtime.SlotTableGroup: int group> = i0;

        r0.<androidx.compose.runtime.SlotTableGroup: int version> = i1;

        return;
    }

    public void <init>(androidx.compose.runtime.SlotTable, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.runtime.SlotTableGroup r0;
        androidx.compose.runtime.SlotTable r1;
        int i0, i1, $i2, i3;
        kotlin.jvm.internal.DefaultConstructorMarker r2;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        r1 := @parameter0: androidx.compose.runtime.SlotTable;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i2 = i1 & 4;

        if $i2 == 0 goto label1;

        i3 = virtualinvoke r1.<androidx.compose.runtime.SlotTable: int getVersion$runtime_release()>();

     label1:
        specialinvoke r0.<androidx.compose.runtime.SlotTableGroup: void <init>(androidx.compose.runtime.SlotTable,int,int)>(r1, i0, i3);

        return;
    }

    public final androidx.compose.runtime.SlotTable getTable()
    {
        androidx.compose.runtime.SlotTableGroup r0;
        androidx.compose.runtime.SlotTable $r1;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        $r1 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        return $r1;
    }

    public final int getGroup()
    {
        androidx.compose.runtime.SlotTableGroup r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        $i0 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        return $i0;
    }

    public final int getVersion()
    {
        androidx.compose.runtime.SlotTableGroup r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        $i0 = r0.<androidx.compose.runtime.SlotTableGroup: int version>;

        return $i0;
    }

    public boolean isEmpty()
    {
        androidx.compose.runtime.SlotTableGroup r0;
        androidx.compose.runtime.SlotTable $r1;
        int[] $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        $r1 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $r2 = virtualinvoke $r1.<androidx.compose.runtime.SlotTable: int[] getGroups()>();

        $i0 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        $i1 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$groupSize(int[],int)>($r2, $i0);

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object getKey()
    {
        androidx.compose.runtime.SlotTableGroup r0;
        androidx.compose.runtime.SlotTable $r1, $r3, $r5, $r7;
        int[] $r2, $r4, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        java.lang.Object[] $r6;
        java.lang.Object $r9;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        $r1 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $r2 = virtualinvoke $r1.<androidx.compose.runtime.SlotTable: int[] getGroups()>();

        $i0 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$hasObjectKey(int[],int)>($r2, $i0);

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $r6 = virtualinvoke $r5.<androidx.compose.runtime.SlotTable: java.lang.Object[] getSlots()>();

        $r7 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $r8 = virtualinvoke $r7.<androidx.compose.runtime.SlotTable: int[] getGroups()>();

        $i3 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        $i4 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$objectKeyIndex(int[],int)>($r8, $i3);

        $r9 = $r6[$i4];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r9);

        goto label2;

     label1:
        $r3 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $r4 = virtualinvoke $r3.<androidx.compose.runtime.SlotTable: int[] getGroups()>();

        $i1 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        $i2 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$key(int[],int)>($r4, $i1);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label2:
        return $r9;
    }

    public java.lang.String getSourceInfo()
    {
        androidx.compose.runtime.SlotTableGroup r0;
        java.lang.Object r1;
        androidx.compose.runtime.SlotTable $r2, $r4, $r6;
        int[] $r3, $r7;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.Object[] $r5;
        java.lang.String $r8;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        $r2 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.SlotTable: int[] getGroups()>();

        $i0 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$hasAux(int[],int)>($r3, $i0);

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $r5 = virtualinvoke $r4.<androidx.compose.runtime.SlotTable: java.lang.Object[] getSlots()>();

        $r6 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $r7 = virtualinvoke $r6.<androidx.compose.runtime.SlotTable: int[] getGroups()>();

        $i1 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        $i2 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$auxIndex(int[],int)>($r7, $i1);

        r1 = $r5[$i2];

        $z1 = r1 instanceof java.lang.String;

        if $z1 == 0 goto label1;

        $r8 = (java.lang.String) r1;

        goto label3;

     label1:
        $r8 = null;

        goto label3;

     label2:
        $r8 = null;

     label3:
        return $r8;
    }

    public java.lang.Object getNode()
    {
        androidx.compose.runtime.SlotTableGroup r0;
        androidx.compose.runtime.SlotTable $r1, $r3, $r5;
        int[] $r2, $r6;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Object[] $r4;
        java.lang.Object $r7;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        $r1 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $r2 = virtualinvoke $r1.<androidx.compose.runtime.SlotTable: int[] getGroups()>();

        $i0 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        $z0 = staticinvoke <androidx.compose.runtime.SlotTableKt: boolean access$isNode(int[],int)>($r2, $i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $r4 = virtualinvoke $r3.<androidx.compose.runtime.SlotTable: java.lang.Object[] getSlots()>();

        $r5 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $r6 = virtualinvoke $r5.<androidx.compose.runtime.SlotTable: int[] getGroups()>();

        $i1 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        $i2 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$nodeIndex(int[],int)>($r6, $i1);

        $r7 = $r4[$i2];

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;
    }

    public java.lang.Iterable getData()
    {
        androidx.compose.runtime.SlotTableGroup r0;
        androidx.compose.runtime.DataIterator $r1;
        int $i0;
        androidx.compose.runtime.SlotTable $r2;
        java.lang.Iterable $r3;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        $r1 = new androidx.compose.runtime.DataIterator;

        $r2 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $i0 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        specialinvoke $r1.<androidx.compose.runtime.DataIterator: void <init>(androidx.compose.runtime.SlotTable,int)>($r2, $i0);

        $r3 = (java.lang.Iterable) $r1;

        return $r3;
    }

    public java.lang.Object getIdentity()
    {
        androidx.compose.runtime.SlotTableGroup r0;
        androidx.compose.runtime.SlotTable r1;
        androidx.compose.runtime.SlotReader r2, r5;
        androidx.compose.runtime.Anchor r3;
        int $i0;
        java.lang.Throwable $r4, r6;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        specialinvoke r0.<androidx.compose.runtime.SlotTableGroup: void validateRead()>();

        r1 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        r2 = virtualinvoke r1.<androidx.compose.runtime.SlotTable: androidx.compose.runtime.SlotReader openReader()>();

     label1:
        r5 = r2;

        $i0 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        r3 = virtualinvoke r5.<androidx.compose.runtime.SlotReader: androidx.compose.runtime.Anchor anchor(int)>($i0);

     label2:
        virtualinvoke r2.<androidx.compose.runtime.SlotReader: void close()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

        r6 = $r4;

     label4:
        virtualinvoke r2.<androidx.compose.runtime.SlotReader: void close()>();

        throw r6;

     label5:
        return r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Iterable getCompositionGroups()
    {
        androidx.compose.runtime.SlotTableGroup r0;
        java.lang.Iterable $r1;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        $r1 = (java.lang.Iterable) r0;

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        androidx.compose.runtime.SlotTableGroup r0;
        androidx.compose.runtime.GroupIterator $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.compose.runtime.SlotTable $r2, $r3;
        int[] $r4;
        java.util.Iterator $r5;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        specialinvoke r0.<androidx.compose.runtime.SlotTableGroup: void validateRead()>();

        $r1 = new androidx.compose.runtime.GroupIterator;

        $r3 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $i0 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        $i1 = $i0 + 1;

        $i2 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        $r2 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $r4 = virtualinvoke $r2.<androidx.compose.runtime.SlotTable: int[] getGroups()>();

        $i3 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        $i4 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$groupSize(int[],int)>($r4, $i3);

        $i5 = $i2 + $i4;

        specialinvoke $r1.<androidx.compose.runtime.GroupIterator: void <init>(androidx.compose.runtime.SlotTable,int,int)>($r3, $i1, $i5);

        $r5 = (java.util.Iterator) $r1;

        return $r5;
    }

    private final void validateRead()
    {
        androidx.compose.runtime.SlotTableGroup r0;
        androidx.compose.runtime.SlotTable $r1;
        int $i0, $i1;
        java.util.ConcurrentModificationException $r2;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        $r1 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $i0 = virtualinvoke $r1.<androidx.compose.runtime.SlotTable: int getVersion$runtime_release()>();

        $i1 = r0.<androidx.compose.runtime.SlotTableGroup: int version>;

        if $i0 == $i1 goto label1;

        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;

     label1:
        return;
    }

    public androidx.compose.runtime.tooling.CompositionGroup find(java.lang.Object)
    {
        androidx.compose.runtime.SlotTableGroup r0, $r7, $r10;
        java.lang.Object r1;
        androidx.compose.runtime.Anchor r2, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z1, $z2;
        androidx.compose.runtime.SlotTable $r3, $r4, $r5, $r8;
        int[] $r6;
        androidx.compose.runtime.tooling.CompositionGroup $r11;

        r0 := @this: androidx.compose.runtime.SlotTableGroup;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "identityToFind");

        $z1 = r1 instanceof androidx.compose.runtime.Anchor;

        if $z1 == 0 goto label1;

        $r9 = (androidx.compose.runtime.Anchor) r1;

        goto label2;

     label1:
        $r9 = null;

     label2:
        if $r9 == null goto label6;

        r2 = $r9;

        $r3 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $z2 = virtualinvoke $r3.<androidx.compose.runtime.SlotTable: boolean ownsAnchor(androidx.compose.runtime.Anchor)>(r2);

        if $z2 == 0 goto label4;

        $r4 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        i0 = virtualinvoke $r4.<androidx.compose.runtime.SlotTable: int anchorIndex(androidx.compose.runtime.Anchor)>(r2);

        $i1 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        if i0 < $i1 goto label3;

        $i2 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        $i3 = i0 - $i2;

        $r5 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $r6 = virtualinvoke $r5.<androidx.compose.runtime.SlotTable: int[] getGroups()>();

        $i4 = r0.<androidx.compose.runtime.SlotTableGroup: int group>;

        $i5 = staticinvoke <androidx.compose.runtime.SlotTableKt: int access$groupSize(int[],int)>($r6, $i4);

        if $i3 >= $i5 goto label3;

        $r7 = new androidx.compose.runtime.SlotTableGroup;

        $r10 = $r7;

        $r8 = r0.<androidx.compose.runtime.SlotTableGroup: androidx.compose.runtime.SlotTable table>;

        $i6 = r0.<androidx.compose.runtime.SlotTableGroup: int version>;

        specialinvoke $r7.<androidx.compose.runtime.SlotTableGroup: void <init>(androidx.compose.runtime.SlotTable,int,int)>($r8, i0, $i6);

        goto label5;

     label3:
        $r10 = null;

        goto label5;

     label4:
        $r10 = null;

     label5:
        goto label7;

     label6:
        $r10 = null;

     label7:
        $r11 = (androidx.compose.runtime.tooling.CompositionGroup) $r10;

        return $r11;
    }

