androidx.test.espresso.base.UiControllerImpl
<androidx.test.espresso.base.UiControllerImpl: java.lang.String TAG>
<androidx.test.espresso.base.UiControllerImpl: java.util.concurrent.Callable NO_OP>
<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.EventInjector eventInjector>
<androidx.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>
<androidx.test.espresso.base.UiControllerImpl: java.util.concurrent.ExecutorService keyEventExecutor>
<androidx.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper>
<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdlingResourceRegistry idlingResourceRegistry>
<androidx.test.espresso.base.UiControllerImpl: android.os.Handler controllerHandler>
<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation>
<androidx.test.espresso.base.UiControllerImpl: int generation>
<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier asyncIdle>
<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier compatIdle>
<androidx.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider>
    static volatile int '-$$Nest$fgetgeneration'(androidx.test.espresso.base.UiControllerImpl)
    {
        androidx.test.espresso.base.UiControllerImpl r0;
        int $i0;

        r0 := @parameter0: androidx.test.espresso.base.UiControllerImpl;

        $i0 = r0.<androidx.test.espresso.base.UiControllerImpl: int generation>;

        return $i0;
    }

    static volatile android.os.Handler '-$$Nest$fgetcontrollerHandler'(androidx.test.espresso.base.UiControllerImpl)
    {
        androidx.test.espresso.base.UiControllerImpl r0;
        android.os.Handler $r1;

        r0 := @parameter0: androidx.test.espresso.base.UiControllerImpl;

        $r1 = r0.<androidx.test.espresso.base.UiControllerImpl: android.os.Handler controllerHandler>;

        return $r1;
    }

    public static android.view.KeyCharacterMap getKeyCharacterMap()
    {
        int $i0;
        android.view.KeyCharacterMap r0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 11 goto label2;

        r0 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(0);

     label1:
        return r0;

     label2:
        r0 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(-1);

        goto label1;
    }

    static volatile androidx.test.espresso.base.EventInjector '-$$Nest$fgeteventInjector'(androidx.test.espresso.base.UiControllerImpl)
    {
        androidx.test.espresso.base.UiControllerImpl r0;
        androidx.test.espresso.base.EventInjector $r1;

        r0 := @parameter0: androidx.test.espresso.base.UiControllerImpl;

        $r1 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.EventInjector eventInjector>;

        return $r1;
    }

    private androidx.test.espresso.base.IdleNotifier loopUntil(java.util.EnumSet, androidx.test.espresso.base.IdleNotifier)
    {
        androidx.test.espresso.base.UiControllerImpl r0;
        androidx.test.espresso.IdlingPolicy r1, r38;
        long l0, $l1, $l3, l13, l14;
        java.util.Locale r2, r61;
        java.lang.String r3, $r12, $r13, $r20, $r28, r49, r50, $r55, r59, r62;
        java.lang.Object[] r4, r63;
        java.util.concurrent.TimeUnit $r5, $r11;
        java.util.BitSet $r6, $r15, $r22, $r30, $r34;
        java.lang.Object $r7, $r14, $r21, $r25, $r29, $r33;
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation $r8, r39, r40, r58, r67;
        int $i2, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12;
        java.lang.Integer $r9;
        java.lang.Long $r10;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition $r16, $r31, $r35, r48;
        java.lang.StringBuilder $r17, $r18, $r19, r60, r72;
        int[] $r23;
        javax.inject.Provider $r24;
        androidx.test.espresso.base.IdleNotifier $r26, $r27, r37;
        boolean $z2, $z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, $z16;
        java.lang.Throwable $r32, r65, r73;
        java.util.EnumSet r36;
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus r41, r42, r44;
        java.util.Iterator r43, r47, r64, r66;
        java.lang.RuntimeException r45, r68;
        java.util.ArrayList r46;
        androidx.test.espresso.base.NoopIdleNotificationCallbackIdleNotifierProvider r51, r69;
        androidx.test.espresso.base.IdlingResourceRegistry $r52;
        java.util.List r53, r74, r76, r77, r78;
        androidx.test.espresso.core.internal.deps.guava.base.Joiner $r54;
        androidx.test.espresso.base.NoopRunnableIdleNotifier r56, r57, r70, r71;
        java.lang.Iterable r75;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl;

        r36 := @parameter0: java.util.EnumSet;

        r37 := @parameter1: androidx.test.espresso.base.IdleNotifier;

        r1 = staticinvoke <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy getMasterIdlingPolicy()>();

        r38 = staticinvoke <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy getDynamicIdlingResourceErrorPolicy()>();

     label01:
        l13 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = virtualinvoke r1.<androidx.test.espresso.IdlingPolicy: java.util.concurrent.TimeUnit getIdleTimeoutUnit()>();

        $l1 = virtualinvoke r1.<androidx.test.espresso.IdlingPolicy: long getIdleTimeout()>();

        l0 = virtualinvoke $r5.<java.util.concurrent.TimeUnit: long toMillis(long)>($l1);

     label02:
        l14 = l13 + l0;

     label03:
        r67 = new androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        r39 = r67;

        $r6 = r0.<androidx.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        specialinvoke r67.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: void <init>(java.util.EnumSet,java.util.BitSet,long)>(r36, $r6, l14);

        r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation> = r39;

        r40 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation>;

     label04:
        $r7 = staticinvoke <androidx.test.espresso.base.Interrogator: java.lang.Object loopAndInterrogate(androidx.test.espresso.base.Interrogator$InterrogationHandler)>(r40);

        r41 = (androidx.test.espresso.base.UiControllerImpl$InterrogationStatus) $r7;

     label05:
        r42 = <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus COMPLETED>;

     label06:
        if r42 != r41 goto label09;

        $i9 = r0.<androidx.test.espresso.base.UiControllerImpl: int generation>;

        $i10 = $i9 + 1;

        r0.<androidx.test.espresso.base.UiControllerImpl: int generation> = $i10;

        r43 = virtualinvoke r36.<java.util.EnumSet: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r29 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        $r31 = (androidx.test.espresso.base.UiControllerImpl$IdleCondition) $r29;

        $r30 = r0.<androidx.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        virtualinvoke $r31.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: void reset(java.util.BitSet)>($r30);

        goto label07;

     label08:
        r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation> = null;

        return r37;

     label09:
        r44 = <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED>;

     label10:
        if r44 != r41 goto label12;

     label11:
        $r28 = <androidx.test.espresso.base.UiControllerImpl: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r28, "Espresso interrogation of the main thread is interrupted");

        r68 = new java.lang.RuntimeException;

        r45 = r68;

        specialinvoke r68.<java.lang.RuntimeException: void <init>(java.lang.String)>("Espresso interrogation of the main thread is interrupted");

        r73 = (java.lang.Throwable) r45;

        throw r73;

     label12:
        r46 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Lists: java.util.ArrayList newArrayList()>();

        r47 = virtualinvoke r36.<java.util.EnumSet: java.util.Iterator iterator()>();

     label13:
        z4 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

     label14:
        if z4 == 0 goto label48;

     label15:
        $r21 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        r48 = (androidx.test.espresso.base.UiControllerImpl$IdleCondition) $r21;

        $r22 = r0.<androidx.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        z5 = virtualinvoke r48.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: boolean isSignaled(java.util.BitSet)>($r22);

     label16:
        if z5 != 0 goto label13;

     label17:
        r49 = virtualinvoke r48.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: java.lang.String name()>();

     label18:
        $r23 = <androidx.test.espresso.base.UiControllerImpl$7: int[] $SwitchMap$androidx$test$espresso$base$UiControllerImpl$IdleCondition>;

        $i6 = virtualinvoke r48.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: int ordinal()>();

        $i7 = $r23[$i6];

        tableswitch($i7)
        {
            case 1: goto label39;
            case 2: goto label30;
            case 3: goto label21;
            default: goto label19;
        };

     label19:
        r50 = r49;

     label20:
        r74 = (java.util.List) r46;

        interfaceinvoke r74.<java.util.List: boolean add(java.lang.Object)>(r50);

        goto label13;

     label21:
        z6 = virtualinvoke r38.<androidx.test.espresso.IdlingPolicy: boolean getDisableOnTimeout()>();

     label22:
        if z6 != 0 goto label27;

     label23:
        z7 = virtualinvoke r1.<androidx.test.espresso.IdlingPolicy: boolean getTimeoutIfDebuggerAttached()>();

     label24:
        if z7 != 0 goto label28;

     label25:
        z8 = staticinvoke <android.os.Debug: boolean isDebuggerConnected()>();

     label26:
        if z8 == 0 goto label28;

     label27:
        interfaceinvoke r37.<androidx.test.espresso.base.IdleNotifier: void cancelCallback()>();

        r69 = new androidx.test.espresso.base.NoopIdleNotificationCallbackIdleNotifierProvider;

        r51 = r69;

        specialinvoke r69.<androidx.test.espresso.base.NoopIdleNotificationCallbackIdleNotifierProvider: void <init>()>();

        r0.<androidx.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider> = r51;

        $r24 = r0.<androidx.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider>;

        $r25 = interfaceinvoke $r24.<javax.inject.Provider: java.lang.Object get()>();

        r37 = (androidx.test.espresso.base.IdleNotifier) $r25;

     label28:
        $r52 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdlingResourceRegistry idlingResourceRegistry>;

        r53 = virtualinvoke $r52.<androidx.test.espresso.base.IdlingResourceRegistry: java.util.List getBusyResources()>();

        r2 = <java.util.Locale: java.util.Locale ROOT>;

        r3 = "%s(busy resources=%s)";

        r4 = newarray (java.lang.Object)[2];

        r4[0] = r49;

     label29:
        $r54 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Joiner: androidx.test.espresso.core.internal.deps.guava.base.Joiner on(java.lang.String)>(",");

        r75 = (java.lang.Iterable) r53;

        $r55 = virtualinvoke $r54.<androidx.test.espresso.core.internal.deps.guava.base.Joiner: java.lang.String join(java.lang.Iterable)>(r75);

        r4[1] = $r55;

        r50 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r2, r3, r4);

        goto label20;

     label30:
        z9 = virtualinvoke r1.<androidx.test.espresso.IdlingPolicy: boolean getDisableOnTimeout()>();

     label31:
        if z9 != 0 goto label36;

     label32:
        z10 = virtualinvoke r1.<androidx.test.espresso.IdlingPolicy: boolean getTimeoutIfDebuggerAttached()>();

     label33:
        if z10 != 0 goto label38;

     label34:
        z11 = staticinvoke <android.os.Debug: boolean isDebuggerConnected()>();

     label35:
        if z11 == 0 goto label37;

     label36:
        $r26 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier compatIdle>;

        interfaceinvoke $r26.<androidx.test.espresso.base.IdleNotifier: void cancelCallback()>();

        r70 = new androidx.test.espresso.base.NoopRunnableIdleNotifier;

        r56 = r70;

        specialinvoke r70.<androidx.test.espresso.base.NoopRunnableIdleNotifier: void <init>()>();

        r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier compatIdle> = r56;

        r50 = r49;

        goto label20;

     label37:
        r50 = r49;

        goto label20;

     label38:
        r50 = r49;

        goto label20;

     label39:
        z12 = virtualinvoke r1.<androidx.test.espresso.IdlingPolicy: boolean getDisableOnTimeout()>();

     label40:
        if z12 != 0 goto label45;

     label41:
        z13 = virtualinvoke r1.<androidx.test.espresso.IdlingPolicy: boolean getTimeoutIfDebuggerAttached()>();

     label42:
        if z13 != 0 goto label47;

     label43:
        z14 = staticinvoke <android.os.Debug: boolean isDebuggerConnected()>();

     label44:
        if z14 == 0 goto label46;

     label45:
        $r27 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier asyncIdle>;

        interfaceinvoke $r27.<androidx.test.espresso.base.IdleNotifier: void cancelCallback()>();

        r71 = new androidx.test.espresso.base.NoopRunnableIdleNotifier;

        r57 = r71;

        specialinvoke r71.<androidx.test.espresso.base.NoopRunnableIdleNotifier: void <init>()>();

        r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier asyncIdle> = r57;

        r50 = r49;

        goto label20;

     label46:
        r50 = r49;

        goto label20;

     label47:
        r50 = r49;

        goto label20;

     label48:
        r76 = (java.util.List) r46;

        z15 = interfaceinvoke r76.<java.util.List: boolean isEmpty()>();

     label49:
        if z15 == 0 goto label51;

     label50:
        r58 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation>;

        r59 = virtualinvoke r58.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.lang.String getMessage()>();

        r72 = new java.lang.StringBuilder;

        r60 = r72;

        specialinvoke r72.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MAIN_LOOPER_HAS_IDLED(last message: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        r77 = (java.util.List) r46;

        interfaceinvoke r77.<java.util.List: boolean add(java.lang.Object)>($r20);

     label51:
        r61 = <java.util.Locale: java.util.Locale ROOT>;

        r62 = "Looped for %s iterations over %s %s.";

        r63 = newarray (java.lang.Object)[3];

     label52:
        $r8 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation>;

        $i2 = staticinvoke <androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int '-$$Nest$fgetexecCount'(androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation)>($r8);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r63[0] = $r9;

     label53:
        $l3 = virtualinvoke r1.<androidx.test.espresso.IdlingPolicy: long getIdleTimeout()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        r63[1] = $r10;

     label54:
        $r11 = virtualinvoke r1.<androidx.test.espresso.IdlingPolicy: java.util.concurrent.TimeUnit getIdleTimeoutUnit()>();

        $r12 = virtualinvoke $r11.<java.util.concurrent.TimeUnit: java.lang.String name()>();

        r63[2] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r61, r62, r63);

        r78 = (java.util.List) r46;

        virtualinvoke r1.<androidx.test.espresso.IdlingPolicy: void handleTimeout(java.util.List,java.lang.String)>(r78, $r13);

     label55:
        $i4 = r0.<androidx.test.espresso.base.UiControllerImpl: int generation>;

        $i5 = $i4 + 1;

        r0.<androidx.test.espresso.base.UiControllerImpl: int generation> = $i5;

        r64 = virtualinvoke r36.<java.util.EnumSet: java.util.Iterator iterator()>();

     label56:
        $z16 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label57;

        $r14 = interfaceinvoke r64.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (androidx.test.espresso.base.UiControllerImpl$IdleCondition) $r14;

        $r15 = r0.<androidx.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        virtualinvoke $r16.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: void reset(java.util.BitSet)>($r15);

        goto label56;

     label57:
        r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation> = null;

        return r37;

     label58:
        $r32 := @caughtexception;

        r65 = $r32;

        $i11 = r0.<androidx.test.espresso.base.UiControllerImpl: int generation>;

        $i12 = $i11 + 1;

        r0.<androidx.test.espresso.base.UiControllerImpl: int generation> = $i12;

        r66 = virtualinvoke r36.<java.util.EnumSet: java.util.Iterator iterator()>();

     label59:
        $z3 = interfaceinvoke r66.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label60;

        r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation> = null;

        throw r65;

     label60:
        $r33 = interfaceinvoke r66.<java.util.Iterator: java.lang.Object next()>();

        $r35 = (androidx.test.espresso.base.UiControllerImpl$IdleCondition) $r33;

        $r34 = r0.<androidx.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        virtualinvoke $r35.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: void reset(java.util.BitSet)>($r34);

        goto label59;

        catch java.lang.Throwable from label01 to label02 with label58;
        catch java.lang.Throwable from label03 to label04 with label58;
        catch java.lang.Throwable from label04 to label05 with label58;
        catch java.lang.Throwable from label05 to label06 with label58;
        catch java.lang.Throwable from label09 to label10 with label58;
        catch java.lang.Throwable from label11 to label13 with label58;
        catch java.lang.Throwable from label13 to label14 with label58;
        catch java.lang.Throwable from label15 to label16 with label58;
        catch java.lang.Throwable from label17 to label18 with label58;
        catch java.lang.Throwable from label18 to label21 with label58;
        catch java.lang.Throwable from label21 to label22 with label58;
        catch java.lang.Throwable from label23 to label24 with label58;
        catch java.lang.Throwable from label25 to label26 with label58;
        catch java.lang.Throwable from label27 to label28 with label58;
        catch java.lang.Throwable from label28 to label29 with label58;
        catch java.lang.Throwable from label29 to label30 with label58;
        catch java.lang.Throwable from label30 to label31 with label58;
        catch java.lang.Throwable from label32 to label33 with label58;
        catch java.lang.Throwable from label34 to label35 with label58;
        catch java.lang.Throwable from label36 to label37 with label58;
        catch java.lang.Throwable from label39 to label40 with label58;
        catch java.lang.Throwable from label41 to label42 with label58;
        catch java.lang.Throwable from label43 to label44 with label58;
        catch java.lang.Throwable from label45 to label46 with label58;
        catch java.lang.Throwable from label48 to label49 with label58;
        catch java.lang.Throwable from label50 to label52 with label58;
        catch java.lang.Throwable from label52 to label53 with label58;
        catch java.lang.Throwable from label53 to label54 with label58;
        catch java.lang.Throwable from label54 to label55 with label58;
    }

    public androidx.test.espresso.base.IdlingResourceRegistry getIdlingResourceRegistry()
    {
        androidx.test.espresso.base.UiControllerImpl r0;
        androidx.test.espresso.base.IdlingResourceRegistry $r1;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl;

        $r1 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdlingResourceRegistry idlingResourceRegistry>;

        return $r1;
    }

    static volatile androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation '-$$Nest$fgetinterrogation'(androidx.test.espresso.base.UiControllerImpl)
    {
        androidx.test.espresso.base.UiControllerImpl r0;
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation $r1;

        r0 := @parameter0: androidx.test.espresso.base.UiControllerImpl;

        $r1 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation interrogation>;

        return $r1;
    }

    static volatile java.lang.String '-$$Nest$sfgetTAG'()
    {
        java.lang.String $r0;

        $r0 = <androidx.test.espresso.base.UiControllerImpl: java.lang.String TAG>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.test.espresso.base.UiControllerImpl$1 r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        $r1 = class "Landroidx/test/espresso/base/UiControllerImpl;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <androidx.test.espresso.base.UiControllerImpl: java.lang.String TAG> = $r2;

        r0 = new androidx.test.espresso.base.UiControllerImpl$1;

        specialinvoke r0.<androidx.test.espresso.base.UiControllerImpl$1: void <init>()>();

        <androidx.test.espresso.base.UiControllerImpl: java.util.concurrent.Callable NO_OP> = r0;

        return;
    }

    void <init>(androidx.test.espresso.base.EventInjector, androidx.test.espresso.base.IdleNotifier, androidx.test.espresso.base.IdleNotifier, javax.inject.Provider, android.os.Looper, androidx.test.espresso.base.IdlingResourceRegistry)
    {
        androidx.test.espresso.base.UiControllerImpl r0;
        androidx.test.espresso.base.IdleNotifier r1, r2, $r13, $r15;
        javax.inject.Provider r3, $r18;
        android.os.Looper r4, $r20;
        androidx.test.espresso.base.IdlingResourceRegistry r5, $r22;
        androidx.test.espresso.core.internal.deps.guava.util.concurrent.ThreadFactoryBuilder r6, $r7;
        java.util.concurrent.ThreadFactory $r8;
        java.util.concurrent.ExecutorService $r9;
        java.lang.Object $r10, $r12, $r14, $r17, $r19, $r21;
        androidx.test.espresso.base.EventInjector $r11, r23;
        java.util.BitSet $r16;
        android.os.Handler r24;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl;

        r23 := @parameter0: androidx.test.espresso.base.EventInjector;

        r1 := @parameter1: androidx.test.espresso.base.IdleNotifier;

        r2 := @parameter2: androidx.test.espresso.base.IdleNotifier;

        r3 := @parameter3: javax.inject.Provider;

        r4 := @parameter4: android.os.Looper;

        r5 := @parameter5: androidx.test.espresso.base.IdlingResourceRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r6 = new androidx.test.espresso.core.internal.deps.guava.util.concurrent.ThreadFactoryBuilder;

        specialinvoke r6.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: void <init>()>();

        $r7 = virtualinvoke r6.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: androidx.test.espresso.core.internal.deps.guava.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String)>("Espresso Key Event #%d");

        $r8 = virtualinvoke $r7.<androidx.test.espresso.core.internal.deps.guava.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory build()>();

        $r9 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>($r8);

        r0.<androidx.test.espresso.base.UiControllerImpl: java.util.concurrent.ExecutorService keyEventExecutor> = $r9;

        r0.<androidx.test.espresso.base.UiControllerImpl: int generation> = 0;

        $r10 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r23);

        $r11 = (androidx.test.espresso.base.EventInjector) $r10;

        r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.EventInjector eventInjector> = $r11;

        $r12 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r13 = (androidx.test.espresso.base.IdleNotifier) $r12;

        r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier asyncIdle> = $r13;

        $r14 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r15 = (androidx.test.espresso.base.IdleNotifier) $r14;

        r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier compatIdle> = $r15;

        $r16 = staticinvoke <androidx.test.espresso.base.UiControllerImpl$IdleCondition: java.util.BitSet createConditionSet()>();

        r0.<androidx.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet> = $r16;

        $r17 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r18 = (javax.inject.Provider) $r17;

        r0.<androidx.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider> = $r18;

        $r19 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r20 = (android.os.Looper) $r19;

        r0.<androidx.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper> = $r20;

        $r21 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r22 = (androidx.test.espresso.base.IdlingResourceRegistry) $r21;

        r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdlingResourceRegistry idlingResourceRegistry> = $r22;

        r24 = new android.os.Handler;

        specialinvoke r24.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>(r4, r0);

        r0.<androidx.test.espresso.base.UiControllerImpl: android.os.Handler controllerHandler> = r24;

        return;
    }

    public void interruptEspressoTasks()
    {
        androidx.test.espresso.base.UiControllerImpl r0;
        android.os.Handler r1;
        androidx.test.espresso.base.UiControllerImpl$6 r2;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl;

        r1 = r0.<androidx.test.espresso.base.UiControllerImpl: android.os.Handler controllerHandler>;

        r2 = new androidx.test.espresso.base.UiControllerImpl$6;

        specialinvoke r2.<androidx.test.espresso.base.UiControllerImpl$6: void <init>(androidx.test.espresso.base.UiControllerImpl)>(r0);

        virtualinvoke r1.<android.os.Handler: boolean post(java.lang.Runnable)>(r2);

        return;
    }

    public void loopMainThreadForAtLeast(long)
    {
        androidx.test.espresso.base.UiControllerImpl r0;
        long l0, $l4, $l5;
        androidx.test.espresso.base.UiControllerImpl$SignalingTask r1;
        android.os.Looper $r2, $r3;
        java.util.BitSet $r4;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition $r5, $r6, $r10;
        boolean $z0, z2, z3, z4;
        byte $b1;
        int $i2, $i3;
        java.util.concurrent.Callable $r7;
        java.lang.Integer $r8;
        javax.inject.Provider $r9;
        java.lang.Object $r11;
        androidx.test.espresso.base.IdleNotifier $r12;
        android.os.Handler r13;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl;

        l0 := @parameter0: long;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<androidx.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper>;

        if $r2 != $r3 goto label6;

        z2 = 1;

     label1:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>(z2, "Expecting to be on main thread!");

        $r5 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition DELAY_HAS_PAST>;

        $r4 = r0.<androidx.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        $z0 = virtualinvoke $r5.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: boolean isSignaled(java.util.BitSet)>($r4);

        if $z0 != 0 goto label5;

        z3 = 1;

     label2:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>(z3, "recursion detected!");

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label4;

        z4 = 1;

     label3:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkArgument(boolean)>(z4);

        r13 = r0.<androidx.test.espresso.base.UiControllerImpl: android.os.Handler controllerHandler>;

        r1 = new androidx.test.espresso.base.UiControllerImpl$SignalingTask;

        $r7 = <androidx.test.espresso.base.UiControllerImpl: java.util.concurrent.Callable NO_OP>;

        $r6 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition DELAY_HAS_PAST>;

        $i2 = r0.<androidx.test.espresso.base.UiControllerImpl: int generation>;

        specialinvoke r1.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: void <init>(androidx.test.espresso.base.UiControllerImpl,java.util.concurrent.Callable,androidx.test.espresso.base.UiControllerImpl$IdleCondition,int)>(r0, $r7, $r6, $i2);

        $i3 = r0.<androidx.test.espresso.base.UiControllerImpl: int generation>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l5 = $l4 + l0;

        virtualinvoke r13.<android.os.Handler: boolean postAtTime(java.lang.Runnable,java.lang.Object,long)>(r1, $r8, $l5);

        $r10 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition DELAY_HAS_PAST>;

        $r9 = r0.<androidx.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider>;

        $r11 = interfaceinvoke $r9.<javax.inject.Provider: java.lang.Object get()>();

        $r12 = (androidx.test.espresso.base.IdleNotifier) $r11;

        specialinvoke r0.<androidx.test.espresso.base.UiControllerImpl: void loopUntil(androidx.test.espresso.base.UiControllerImpl$IdleCondition,androidx.test.espresso.base.IdleNotifier)>($r10, $r12);

        virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl: void loopMainThreadUntilIdle()>();

        return;

     label4:
        z4 = 0;

        goto label3;

     label5:
        z3 = 0;

        goto label2;

     label6:
        z2 = 0;

        goto label1;
    }

    public void loopMainThreadUntilIdle()
    {
        androidx.test.espresso.base.UiControllerImpl r0;
        androidx.test.espresso.base.UiControllerImpl$SignalingTask r1, r28, r30;
        androidx.test.espresso.base.UiControllerImpl$5 r2;
        android.os.Looper $r3, $r4;
        javax.inject.Provider $r5;
        java.lang.Object $r6;
        androidx.test.espresso.base.IdleNotifier $r7, $r8, $r9, $r10, $r11, $r22, $r23, r24, $r26, r27, r29, r33;
        boolean $z0, $z1, $z2, $z3, $z4, z8, $z9;
        int $i0, $i1, $i2;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition $r12, $r14, $r15, $r17, $r18, $r20;
        java.util.concurrent.Callable $r13, $r16, $r19;
        java.lang.Throwable $r21, r34;
        java.util.EnumSet r25;
        androidx.test.espresso.IdlingPolicy r31, r32;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r4 = r0.<androidx.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper>;

        if $r3 != $r4 goto label11;

        z8 = 1;

     label01:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>(z8, "Expecting to be on main thread!");

        $r5 = r0.<androidx.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider>;

        $r6 = interfaceinvoke $r5.<javax.inject.Provider: java.lang.Object get()>();

        r24 = (androidx.test.espresso.base.IdleNotifier) $r6;

     label02:
        r25 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class "Landroidx/test/espresso/base/UiControllerImpl$IdleCondition;");

        $r26 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier asyncIdle>;

        $z9 = interfaceinvoke $r26.<androidx.test.espresso.base.IdleNotifier: boolean isIdleNow()>();

        if $z9 != 0 goto label03;

        r27 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier asyncIdle>;

        r28 = new androidx.test.espresso.base.UiControllerImpl$SignalingTask;

        $r19 = <androidx.test.espresso.base.UiControllerImpl: java.util.concurrent.Callable NO_OP>;

        $r18 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition ASYNC_TASKS_HAVE_IDLED>;

        $i2 = r0.<androidx.test.espresso.base.UiControllerImpl: int generation>;

        specialinvoke r28.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: void <init>(androidx.test.espresso.base.UiControllerImpl,java.util.concurrent.Callable,androidx.test.espresso.base.UiControllerImpl$IdleCondition,int)>(r0, $r19, $r18, $i2);

        interfaceinvoke r27.<androidx.test.espresso.base.IdleNotifier: void registerNotificationCallback(java.lang.Object)>(r28);

        $r20 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition ASYNC_TASKS_HAVE_IDLED>;

        virtualinvoke r25.<java.util.EnumSet: boolean add(java.lang.Object)>($r20);

     label03:
        $r7 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier compatIdle>;

        $z0 = interfaceinvoke $r7.<androidx.test.espresso.base.IdleNotifier: boolean isIdleNow()>();

        if $z0 != 0 goto label04;

        r29 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier compatIdle>;

        r30 = new androidx.test.espresso.base.UiControllerImpl$SignalingTask;

        $r16 = <androidx.test.espresso.base.UiControllerImpl: java.util.concurrent.Callable NO_OP>;

        $r15 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition COMPAT_TASKS_HAVE_IDLED>;

        $i1 = r0.<androidx.test.espresso.base.UiControllerImpl: int generation>;

        specialinvoke r30.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: void <init>(androidx.test.espresso.base.UiControllerImpl,java.util.concurrent.Callable,androidx.test.espresso.base.UiControllerImpl$IdleCondition,int)>(r0, $r16, $r15, $i1);

        interfaceinvoke r29.<androidx.test.espresso.base.IdleNotifier: void registerNotificationCallback(java.lang.Object)>(r30);

        $r17 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition COMPAT_TASKS_HAVE_IDLED>;

        virtualinvoke r25.<java.util.EnumSet: boolean add(java.lang.Object)>($r17);

     label04:
        $z1 = interfaceinvoke r24.<androidx.test.espresso.base.IdleNotifier: boolean isIdleNow()>();

        if $z1 != 0 goto label05;

        r31 = staticinvoke <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy getDynamicIdlingResourceWarningPolicy()>();

        r32 = staticinvoke <androidx.test.espresso.IdlingPolicies: androidx.test.espresso.IdlingPolicy getDynamicIdlingResourceErrorPolicy()>();

        r1 = new androidx.test.espresso.base.UiControllerImpl$SignalingTask;

        $r13 = <androidx.test.espresso.base.UiControllerImpl: java.util.concurrent.Callable NO_OP>;

        $r12 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition DYNAMIC_TASKS_HAVE_IDLED>;

        $i0 = r0.<androidx.test.espresso.base.UiControllerImpl: int generation>;

        specialinvoke r1.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: void <init>(androidx.test.espresso.base.UiControllerImpl,java.util.concurrent.Callable,androidx.test.espresso.base.UiControllerImpl$IdleCondition,int)>(r0, $r13, $r12, $i0);

        r2 = new androidx.test.espresso.base.UiControllerImpl$5;

        specialinvoke r2.<androidx.test.espresso.base.UiControllerImpl$5: void <init>(androidx.test.espresso.base.UiControllerImpl,androidx.test.espresso.IdlingPolicy,androidx.test.espresso.IdlingPolicy,androidx.test.espresso.base.UiControllerImpl$SignalingTask)>(r0, r31, r32, r1);

        interfaceinvoke r24.<androidx.test.espresso.base.IdleNotifier: void registerNotificationCallback(java.lang.Object)>(r2);

        $r14 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition DYNAMIC_TASKS_HAVE_IDLED>;

        virtualinvoke r25.<java.util.EnumSet: boolean add(java.lang.Object)>($r14);

     label05:
        r33 = specialinvoke r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier loopUntil(java.util.EnumSet,androidx.test.espresso.base.IdleNotifier)>(r25, r24);

     label06:
        $r8 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier asyncIdle>;

        interfaceinvoke $r8.<androidx.test.espresso.base.IdleNotifier: void cancelCallback()>();

        $r9 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier compatIdle>;

        interfaceinvoke $r9.<androidx.test.espresso.base.IdleNotifier: void cancelCallback()>();

        interfaceinvoke r33.<androidx.test.espresso.base.IdleNotifier: void cancelCallback()>();

        $r10 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier asyncIdle>;

        $z2 = interfaceinvoke $r10.<androidx.test.espresso.base.IdleNotifier: boolean isIdleNow()>();

        if $z2 == 0 goto label09;

        $r11 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier compatIdle>;

        $z3 = interfaceinvoke $r11.<androidx.test.espresso.base.IdleNotifier: boolean isIdleNow()>();

        if $z3 == 0 goto label08;

        $z4 = interfaceinvoke r33.<androidx.test.espresso.base.IdleNotifier: boolean isIdleNow()>();

        if $z4 != 0 goto label07;

        r24 = r33;

        goto label02;

     label07:
        return;

     label08:
        r24 = r33;

        goto label02;

     label09:
        r24 = r33;

        goto label02;

     label10:
        $r21 := @caughtexception;

        r34 = $r21;

        $r22 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier asyncIdle>;

        interfaceinvoke $r22.<androidx.test.espresso.base.IdleNotifier: void cancelCallback()>();

        $r23 = r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier compatIdle>;

        interfaceinvoke $r23.<androidx.test.espresso.base.IdleNotifier: void cancelCallback()>();

        interfaceinvoke r24.<androidx.test.espresso.base.IdleNotifier: void cancelCallback()>();

        throw r34;

     label11:
        z8 = 0;

        goto label01;

        catch java.lang.Throwable from label05 to label06 with label10;
    }

    private void loopUntil(androidx.test.espresso.base.UiControllerImpl$IdleCondition, androidx.test.espresso.base.IdleNotifier)
    {
        androidx.test.espresso.base.UiControllerImpl r0;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition r1;
        androidx.test.espresso.base.IdleNotifier r2;
        java.util.EnumSet $r3;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl;

        r1 := @parameter0: androidx.test.espresso.base.UiControllerImpl$IdleCondition;

        r2 := @parameter1: androidx.test.espresso.base.IdleNotifier;

        $r3 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>(r1);

        specialinvoke r0.<androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.IdleNotifier loopUntil(java.util.EnumSet,androidx.test.espresso.base.IdleNotifier)>($r3, r2);

        return;
    }

    public boolean handleMessage(android.os.Message)
    {
        java.lang.StringBuilder r0, $r2, $r3;
        int $i0;
        java.util.BitSet $r1;
        boolean $z0;
        java.lang.String $r4, r7, r8;
        androidx.test.espresso.base.UiControllerImpl r5;
        android.os.Message r6;

        r5 := @this: androidx.test.espresso.base.UiControllerImpl;

        r6 := @parameter0: android.os.Message;

        $r1 = r5.<androidx.test.espresso.base.UiControllerImpl: java.util.BitSet conditionSet>;

        $i0 = r5.<androidx.test.espresso.base.UiControllerImpl: int generation>;

        $z0 = staticinvoke <androidx.test.espresso.base.UiControllerImpl$IdleCondition: boolean handleMessage(android.os.Message,java.util.BitSet,int)>(r6, $r1, $i0);

        if $z0 != 0 goto label1;

        r7 = <androidx.test.espresso.base.UiControllerImpl: java.lang.String TAG>;

        r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r6);

        r0 = new java.lang.StringBuilder;

        specialinvoke r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown message type: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(r7, $r4);

        return 0;

     label1:
        return 1;
    }

    public boolean injectKeyEvent(android.view.KeyEvent) throws androidx.test.espresso.InjectEventSecurityException
    {
        androidx.test.espresso.base.UiControllerImpl$2 r0, r26;
        android.os.Looper $r2, $r3;
        int $i0;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition $r4, $r8;
        java.util.concurrent.ExecutorService $r5;
        javax.inject.Provider $r7;
        java.lang.Object $r9, $r11;
        androidx.test.espresso.base.IdleNotifier $r10;
        boolean $z0, $z1, z2, z3;
        java.lang.Boolean $r12;
        java.lang.Throwable $r13, $r14, $r15, $r16, $r17, r23, r25, r31, r33;
        androidx.test.espresso.InjectEventSecurityException $r18;
        androidx.test.espresso.base.UiControllerImpl r19;
        android.view.KeyEvent r20;
        androidx.test.espresso.base.UiControllerImpl$SignalingTask r21, r27;
        java.lang.RuntimeException r22, r24, r28, r29;
        java.util.concurrent.ExecutionException r30, r32, r34;

        r19 := @this: androidx.test.espresso.base.UiControllerImpl;

        r20 := @parameter0: android.view.KeyEvent;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r20);

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r19.<androidx.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper>;

        if $r2 != $r3 goto label4;

        z2 = 1;

     label1:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>(z2, "Expecting to be on main thread!");

        virtualinvoke r19.<androidx.test.espresso.base.UiControllerImpl: void loopMainThreadUntilIdle()>();

        r27 = new androidx.test.espresso.base.UiControllerImpl$SignalingTask;

        r21 = r27;

        r26 = new androidx.test.espresso.base.UiControllerImpl$2;

        r0 = r26;

        specialinvoke r26.<androidx.test.espresso.base.UiControllerImpl$2: void <init>(androidx.test.espresso.base.UiControllerImpl,android.view.KeyEvent)>(r19, r20);

        $r4 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition KEY_INJECT_HAS_COMPLETED>;

        $i0 = r19.<androidx.test.espresso.base.UiControllerImpl: int generation>;

        specialinvoke r27.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: void <init>(androidx.test.espresso.base.UiControllerImpl,java.util.concurrent.Callable,androidx.test.espresso.base.UiControllerImpl$IdleCondition,int)>(r19, r0, $r4, $i0);

        $r5 = r19.<androidx.test.espresso.base.UiControllerImpl: java.util.concurrent.ExecutorService keyEventExecutor>;

        interfaceinvoke $r5.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r21);

        $r8 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition KEY_INJECT_HAS_COMPLETED>;

        $r7 = r19.<androidx.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider>;

        $r9 = interfaceinvoke $r7.<javax.inject.Provider: java.lang.Object get()>();

        $r10 = (androidx.test.espresso.base.IdleNotifier) $r9;

        specialinvoke r19.<androidx.test.espresso.base.UiControllerImpl: void loopUntil(androidx.test.espresso.base.UiControllerImpl$IdleCondition,androidx.test.espresso.base.IdleNotifier)>($r8, $r10);

     label2:
        $z0 = virtualinvoke r21.<java.util.concurrent.FutureTask: boolean isDone()>();

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Key injection was signaled - but it wasnt done.");

        $r11 = virtualinvoke r21.<java.util.concurrent.FutureTask: java.lang.Object get()>();

        $r12 = (java.lang.Boolean) $r11;

        z3 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

     label3:
        return z3;

     label4:
        z2 = 0;

        goto label1;

     label5:
        r28 = new java.lang.RuntimeException;

        r22 = r28;

        r30 = (java.util.concurrent.ExecutionException) r25;

        $r16 = virtualinvoke r30.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        specialinvoke r28.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16);

        r31 = (java.lang.Throwable) r22;

        throw r31;

     label6:
        r32 = (java.util.concurrent.ExecutionException) r25;

        $r17 = virtualinvoke r32.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r18 = (androidx.test.espresso.InjectEventSecurityException) $r17;

        throw $r18;

     label7:
        $r13 := @caughtexception;

        r23 = $r13;

        r29 = new java.lang.RuntimeException;

        r24 = r29;

        specialinvoke r29.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("impossible.", r23);

        r33 = (java.lang.Throwable) r24;

        throw r33;

     label8:
        $r14 := @caughtexception;

        r25 = $r14;

        r34 = (java.util.concurrent.ExecutionException) r25;

        $r15 = virtualinvoke r34.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $z1 = $r15 instanceof androidx.test.espresso.InjectEventSecurityException;

        if $z1 == 0 goto label5;

        goto label6;

        catch java.util.concurrent.ExecutionException from label2 to label3 with label8;
        catch java.lang.InterruptedException from label2 to label3 with label7;
    }

    public boolean injectMotionEvent(android.view.MotionEvent) throws androidx.test.espresso.InjectEventSecurityException
    {
        androidx.test.espresso.base.UiControllerImpl r0;
        android.os.Looper $r2, $r3;
        int $i0;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition $r4, $r8;
        java.util.concurrent.ExecutorService $r5;
        javax.inject.Provider $r7;
        java.lang.Object $r9, $r11;
        androidx.test.espresso.base.IdleNotifier $r10;
        boolean $z0, z1, z2, z3;
        java.lang.Boolean $r12;
        java.lang.Throwable $r13, $r14, $r15, $r16, $r18, r22, r23, r25, r26, r27, r29, r30, r37, r42;
        androidx.test.espresso.InjectEventSecurityException $r17;
        android.view.MotionEvent r19;
        androidx.test.espresso.base.UiControllerImpl$SignalingTask r20, r32;
        androidx.test.espresso.base.UiControllerImpl$3 r21, r31;
        java.lang.RuntimeException r24, r28, r33, r34;
        java.util.concurrent.ExecutionException r35, r36, r38, r39, r40, r41;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl;

        r19 := @parameter0: android.view.MotionEvent;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r19);

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<androidx.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper>;

        if $r2 != $r3 goto label04;

        z1 = 1;

     label01:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>(z1, "Expecting to be on main thread!");

        r32 = new androidx.test.espresso.base.UiControllerImpl$SignalingTask;

        r20 = r32;

        r31 = new androidx.test.espresso.base.UiControllerImpl$3;

        r21 = r31;

        specialinvoke r31.<androidx.test.espresso.base.UiControllerImpl$3: void <init>(androidx.test.espresso.base.UiControllerImpl,android.view.MotionEvent)>(r0, r19);

        $r4 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition MOTION_INJECTION_HAS_COMPLETED>;

        $i0 = r0.<androidx.test.espresso.base.UiControllerImpl: int generation>;

        specialinvoke r32.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: void <init>(androidx.test.espresso.base.UiControllerImpl,java.util.concurrent.Callable,androidx.test.espresso.base.UiControllerImpl$IdleCondition,int)>(r0, r21, $r4, $i0);

        $r5 = r0.<androidx.test.espresso.base.UiControllerImpl: java.util.concurrent.ExecutorService keyEventExecutor>;

        interfaceinvoke $r5.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r20);

        $r8 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition MOTION_INJECTION_HAS_COMPLETED>;

        $r7 = r0.<androidx.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider>;

        $r9 = interfaceinvoke $r7.<javax.inject.Provider: java.lang.Object get()>();

        $r10 = (androidx.test.espresso.base.IdleNotifier) $r9;

        specialinvoke r0.<androidx.test.espresso.base.UiControllerImpl: void loopUntil(androidx.test.espresso.base.UiControllerImpl$IdleCondition,androidx.test.espresso.base.IdleNotifier)>($r8, $r10);

     label02:
        $z0 = virtualinvoke r20.<java.util.concurrent.FutureTask: boolean isDone()>();

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Motion event injection was signaled - but it wasnt done.");

        $r11 = virtualinvoke r20.<java.util.concurrent.FutureTask: java.lang.Object get()>();

        $r12 = (java.lang.Boolean) $r11;

        z2 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

     label03:
        virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl: void loopMainThreadUntilIdle()>();

        return z2;

     label04:
        z1 = 0;

        goto label01;

     label05:
        $r14 := @caughtexception;

        r22 = $r14;

     label06:
        r35 = (java.util.concurrent.ExecutionException) r22;

        $r15 = virtualinvoke r35.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        z3 = $r15 instanceof androidx.test.espresso.InjectEventSecurityException;

     label07:
        if z3 == 0 goto label12;

     label08:
        r36 = (java.util.concurrent.ExecutionException) r22;

        $r16 = virtualinvoke r36.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r17 = (androidx.test.espresso.InjectEventSecurityException) $r16;

        throw $r17;

     label09:
        $r18 := @caughtexception;

        r23 = $r18;

     label10:
        r33 = new java.lang.RuntimeException;

        r24 = r33;

        specialinvoke r33.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r23);

        r37 = (java.lang.Throwable) r24;

        throw r37;

     label11:
        $r13 := @caughtexception;

        r25 = $r13;

        virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl: void loopMainThreadUntilIdle()>();

        throw r25;

     label12:
        r38 = (java.util.concurrent.ExecutionException) r22;

        r26 = virtualinvoke r38.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

     label13:
        if r26 == null goto label19;

     label14:
        r39 = (java.util.concurrent.ExecutionException) r22;

        r27 = virtualinvoke r39.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

     label15:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>(r27);

        r34 = new java.lang.RuntimeException;

        r28 = r34;

        r40 = (java.util.concurrent.ExecutionException) r22;

        r29 = virtualinvoke r40.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

     label16:
        if r29 == null goto label20;

     label17:
        r41 = (java.util.concurrent.ExecutionException) r22;

        r30 = virtualinvoke r41.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

     label18:
        specialinvoke r34.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r30);

        r42 = (java.lang.Throwable) r28;

        throw r42;

     label19:
        r27 = r22;

        goto label15;

     label20:
        r30 = r22;

        goto label18;

        catch java.util.concurrent.ExecutionException from label02 to label03 with label05;
        catch java.lang.InterruptedException from label02 to label03 with label09;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label14 to label15 with label11;
        catch java.lang.Throwable from label15 to label16 with label11;
        catch java.lang.Throwable from label17 to label19 with label11;
    }

    public boolean injectMotionEventSequence(java.lang.Iterable) throws androidx.test.espresso.InjectEventSecurityException
    {
        androidx.test.espresso.base.UiControllerImpl r0;
        long l0, l1, $l2;
        boolean $z0, $z1, z2, z3, z4, z5;
        android.os.Looper $r2, $r3;
        int $i3;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition $r4, $r8;
        java.util.concurrent.ExecutorService $r5;
        javax.inject.Provider $r7;
        java.lang.Object $r9, $r11, r21;
        androidx.test.espresso.base.IdleNotifier $r10;
        java.lang.Boolean $r12;
        java.lang.Throwable $r13, $r14, $r15, $r17, $r18, r25, r26, r28, r29, r30, r32, r33, r40, r45;
        androidx.test.espresso.InjectEventSecurityException $r16;
        java.lang.Iterable r19;
        java.util.Iterator r20;
        android.view.MotionEvent r22;
        androidx.test.espresso.base.UiControllerImpl$SignalingTask r23, r35;
        androidx.test.espresso.base.UiControllerImpl$4 r24, r34;
        java.lang.RuntimeException r27, r31, r36, r37;
        java.util.concurrent.ExecutionException r38, r39, r41, r42, r43, r44;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl;

        r19 := @parameter0: java.lang.Iterable;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r19);

        $z0 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Iterables: boolean isEmpty(java.lang.Iterable)>(r19);

        if $z0 != 0 goto label06;

        z2 = 1;

     label01:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>(z2, "Expecting non-empty events to inject");

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<androidx.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper>;

        if $r2 != $r3 goto label05;

        z3 = 1;

     label02:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>(z3, "Expecting to be on main thread!");

        r20 = interfaceinvoke r19.<java.lang.Iterable: java.util.Iterator iterator()>();

        r21 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Iterables: java.lang.Object getFirst(java.lang.Iterable,java.lang.Object)>(r19, null);

        r22 = (android.view.MotionEvent) r21;

        l0 = virtualinvoke r22.<android.view.MotionEvent: long getEventTime()>();

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r35 = new androidx.test.espresso.base.UiControllerImpl$SignalingTask;

        r23 = r35;

        r34 = new androidx.test.espresso.base.UiControllerImpl$4;

        r24 = r34;

        $l2 = l1 - l0;

        specialinvoke r34.<androidx.test.espresso.base.UiControllerImpl$4: void <init>(androidx.test.espresso.base.UiControllerImpl,java.util.Iterator,long)>(r0, r20, $l2);

        $r4 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition MOTION_INJECTION_HAS_COMPLETED>;

        $i3 = r0.<androidx.test.espresso.base.UiControllerImpl: int generation>;

        specialinvoke r35.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: void <init>(androidx.test.espresso.base.UiControllerImpl,java.util.concurrent.Callable,androidx.test.espresso.base.UiControllerImpl$IdleCondition,int)>(r0, r24, $r4, $i3);

        $r5 = r0.<androidx.test.espresso.base.UiControllerImpl: java.util.concurrent.ExecutorService keyEventExecutor>;

        interfaceinvoke $r5.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r23);

        $r8 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition MOTION_INJECTION_HAS_COMPLETED>;

        $r7 = r0.<androidx.test.espresso.base.UiControllerImpl: javax.inject.Provider dynamicIdleProvider>;

        $r9 = interfaceinvoke $r7.<javax.inject.Provider: java.lang.Object get()>();

        $r10 = (androidx.test.espresso.base.IdleNotifier) $r9;

        specialinvoke r0.<androidx.test.espresso.base.UiControllerImpl: void loopUntil(androidx.test.espresso.base.UiControllerImpl$IdleCondition,androidx.test.espresso.base.IdleNotifier)>($r8, $r10);

     label03:
        $z1 = virtualinvoke r23.<java.util.concurrent.FutureTask: boolean isDone()>();

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "MotionEvents injection was signaled - but it wasnt done.");

        $r11 = virtualinvoke r23.<java.util.concurrent.FutureTask: java.lang.Object get()>();

        $r12 = (java.lang.Boolean) $r11;

        z4 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

     label04:
        virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl: void loopMainThreadUntilIdle()>();

        return z4;

     label05:
        z3 = 0;

        goto label02;

     label06:
        z2 = 0;

        goto label01;

     label07:
        $r13 := @caughtexception;

        r25 = $r13;

     label08:
        r38 = (java.util.concurrent.ExecutionException) r25;

        $r14 = virtualinvoke r38.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        z5 = $r14 instanceof androidx.test.espresso.InjectEventSecurityException;

     label09:
        if z5 == 0 goto label14;

     label10:
        r39 = (java.util.concurrent.ExecutionException) r25;

        $r15 = virtualinvoke r39.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        $r16 = (androidx.test.espresso.InjectEventSecurityException) $r15;

        throw $r16;

     label11:
        $r18 := @caughtexception;

        r26 = $r18;

     label12:
        r36 = new java.lang.RuntimeException;

        r27 = r36;

        specialinvoke r36.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r26);

        r40 = (java.lang.Throwable) r27;

        throw r40;

     label13:
        $r17 := @caughtexception;

        r28 = $r17;

        virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl: void loopMainThreadUntilIdle()>();

        throw r28;

     label14:
        r41 = (java.util.concurrent.ExecutionException) r25;

        r29 = virtualinvoke r41.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

     label15:
        if r29 == null goto label21;

     label16:
        r42 = (java.util.concurrent.ExecutionException) r25;

        r30 = virtualinvoke r42.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

     label17:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Throwables: void throwIfUnchecked(java.lang.Throwable)>(r30);

        r37 = new java.lang.RuntimeException;

        r31 = r37;

        r43 = (java.util.concurrent.ExecutionException) r25;

        r32 = virtualinvoke r43.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

     label18:
        if r32 == null goto label22;

     label19:
        r44 = (java.util.concurrent.ExecutionException) r25;

        r33 = virtualinvoke r44.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

     label20:
        specialinvoke r37.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r33);

        r45 = (java.lang.Throwable) r31;

        throw r45;

     label21:
        r30 = r25;

        goto label17;

     label22:
        r33 = r25;

        goto label20;

        catch java.util.concurrent.ExecutionException from label03 to label04 with label07;
        catch java.lang.InterruptedException from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label16 to label17 with label13;
        catch java.lang.Throwable from label17 to label18 with label13;
        catch java.lang.Throwable from label19 to label21 with label13;
    }

    public boolean injectString(java.lang.String) throws androidx.test.espresso.InjectEventSecurityException
    {
        android.view.KeyEvent[] r0;
        int i0, $i2, $i3, $i4, $i5, i9, i10;
        android.os.Looper $r2, $r3;
        boolean $z0, z1, z2, z3;
        android.view.KeyCharacterMap $r4;
        char[] $r5;
        java.lang.String $r6, $r9, $r13, $r14, $r15, r17, r21, r27;
        java.lang.Integer $r7, $r8, $r11, $r12;
        long $l7;
        androidx.test.espresso.base.UiControllerImpl r16;
        java.lang.RuntimeException r18, r30;
        java.util.Locale r19, r22, r25, r28;
        java.lang.Object[] r20, r23, r26, r29;
        android.view.KeyEvent r24;
        java.lang.Throwable r31;

        r16 := @this: androidx.test.espresso.base.UiControllerImpl;

        r17 := @parameter0: java.lang.String;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r17);

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r16.<androidx.test.espresso.base.UiControllerImpl: android.os.Looper mainLooper>;

        if $r2 != $r3 goto label10;

        z1 = 1;

     label01:
        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: void checkState(boolean,java.lang.Object)>(z1, "Expecting to be on main thread!");

        $z0 = virtualinvoke r17.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label02;

        $r15 = <androidx.test.espresso.base.UiControllerImpl: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r15, "Supplied string is empty resulting in no-op (nothing is typed).");

        return 1;

     label02:
        $r4 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: android.view.KeyCharacterMap getKeyCharacterMap()>();

        $r5 = virtualinvoke r17.<java.lang.String: char[] toCharArray()>();

        r0 = virtualinvoke $r4.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>($r5);

        if r0 != null goto label03;

        r30 = new java.lang.RuntimeException;

        r18 = r30;

        r19 = <java.util.Locale: java.util.Locale ROOT>;

        r20 = newarray (java.lang.Object)[1];

        r20[0] = r17;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r19, "Failed to get key events for string %s (i.e. current IME does not understand how to translate the string into key events). As a workaround, you can use replaceText action to set the text directly in the EditText field.", r20);

        specialinvoke r30.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        r31 = (java.lang.Throwable) r18;

        throw r31;

     label03:
        r21 = <androidx.test.espresso.base.UiControllerImpl: java.lang.String TAG>;

        r22 = <java.util.Locale: java.util.Locale ROOT>;

        r23 = newarray (java.lang.Object)[1];

        r23[0] = r17;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r22, "Injecting string: \"%s\"", r23);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r21, $r6);

        i0 = lengthof r0;

        z2 = 0;

        i9 = 0;

     label04:
        if i9 >= i0 goto label09;

        r24 = r0[i9];

        r25 = <java.util.Locale: java.util.Locale ROOT>;

        r26 = newarray (java.lang.Object)[2];

        $i2 = virtualinvoke r24.<android.view.KeyEvent: int getKeyCode()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r26[0] = $r7;

        $i3 = virtualinvoke r24.<android.view.KeyEvent: int getUnicodeChar()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        r26[1] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r25, "Failed to get event for character (%c) with key code (%s)", r26);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r24, $r9);

        z2 = 0;

        i10 = 0;

     label05:
        if z2 != 0 goto label06;

        if i10 >= 4 goto label06;

        $l7 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r24 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>(r24, $l7, 0);

        z2 = virtualinvoke r16.<androidx.test.espresso.base.UiControllerImpl: boolean injectKeyEvent(android.view.KeyEvent)>(r24);

        i10 = i10 + 1;

        goto label05;

     label06:
        if z2 != 0 goto label08;

        r27 = <androidx.test.espresso.base.UiControllerImpl: java.lang.String TAG>;

        r28 = <java.util.Locale: java.util.Locale ROOT>;

        r29 = newarray (java.lang.Object)[2];

        $i4 = virtualinvoke r24.<android.view.KeyEvent: int getUnicodeChar()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r29[0] = $r11;

        $i5 = virtualinvoke r24.<android.view.KeyEvent: int getKeyCode()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        r29[1] = $r12;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r28, "Failed to inject event for character (%c) with key code (%s)", r29);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(r27, $r13);

        z3 = z2;

     label07:
        return z3;

     label08:
        i9 = i9 + 1;

        goto label04;

     label09:
        z3 = z2;

        goto label07;

     label10:
        z1 = 0;

        goto label01;
    }

androidx.test.espresso.base.UiControllerImpl$1
    public volatile java.lang.Object call() throws java.lang.Exception
    {
        androidx.test.espresso.base.UiControllerImpl$1 r0;
        java.lang.Void $r1;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$1;

        $r1 = virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl$1: java.lang.Void call()>();

        return $r1;
    }

    public java.lang.Void call()
    {
        androidx.test.espresso.base.UiControllerImpl$1 r0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$1;

        return null;
    }

    void <init>()
    {
        androidx.test.espresso.base.UiControllerImpl$1 r0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.base.UiControllerImpl$2
<androidx.test.espresso.base.UiControllerImpl$2: android.view.KeyEvent val$event>
<androidx.test.espresso.base.UiControllerImpl$2: androidx.test.espresso.base.UiControllerImpl this$0>
    public java.lang.Boolean call() throws java.lang.Exception
    {
        androidx.test.espresso.base.UiControllerImpl$2 r0;
        androidx.test.espresso.base.UiControllerImpl $r1;
        androidx.test.espresso.base.EventInjector $r2;
        android.view.KeyEvent $r3;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$2;

        $r1 = r0.<androidx.test.espresso.base.UiControllerImpl$2: androidx.test.espresso.base.UiControllerImpl this$0>;

        $r2 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.EventInjector '-$$Nest$fgeteventInjector'(androidx.test.espresso.base.UiControllerImpl)>($r1);

        $r3 = r0.<androidx.test.espresso.base.UiControllerImpl$2: android.view.KeyEvent val$event>;

        $z0 = virtualinvoke $r2.<androidx.test.espresso.base.EventInjector: boolean injectKeyEvent(android.view.KeyEvent)>($r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        androidx.test.espresso.base.UiControllerImpl$2 r0;
        java.lang.Boolean $r1;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$2;

        $r1 = virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl$2: java.lang.Boolean call()>();

        return $r1;
    }

    void <init>(androidx.test.espresso.base.UiControllerImpl, android.view.KeyEvent)
    {
        androidx.test.espresso.base.UiControllerImpl$2 r0;
        androidx.test.espresso.base.UiControllerImpl r1;
        android.view.KeyEvent r2;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$2;

        r1 := @parameter0: androidx.test.espresso.base.UiControllerImpl;

        r2 := @parameter1: android.view.KeyEvent;

        r0.<androidx.test.espresso.base.UiControllerImpl$2: androidx.test.espresso.base.UiControllerImpl this$0> = r1;

        r0.<androidx.test.espresso.base.UiControllerImpl$2: android.view.KeyEvent val$event> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.base.UiControllerImpl$3
<androidx.test.espresso.base.UiControllerImpl$3: android.view.MotionEvent val$event>
<androidx.test.espresso.base.UiControllerImpl$3: androidx.test.espresso.base.UiControllerImpl this$0>
    public java.lang.Boolean call() throws java.lang.Exception
    {
        androidx.test.espresso.base.UiControllerImpl$3 r0;
        androidx.test.espresso.base.UiControllerImpl $r1;
        androidx.test.espresso.base.EventInjector $r2;
        android.view.MotionEvent $r3;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$3;

        $r1 = r0.<androidx.test.espresso.base.UiControllerImpl$3: androidx.test.espresso.base.UiControllerImpl this$0>;

        $r2 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.EventInjector '-$$Nest$fgeteventInjector'(androidx.test.espresso.base.UiControllerImpl)>($r1);

        $r3 = r0.<androidx.test.espresso.base.UiControllerImpl$3: android.view.MotionEvent val$event>;

        $z0 = virtualinvoke $r2.<androidx.test.espresso.base.EventInjector: boolean injectMotionEvent(android.view.MotionEvent)>($r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r4;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        androidx.test.espresso.base.UiControllerImpl$3 r0;
        java.lang.Boolean $r1;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$3;

        $r1 = virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl$3: java.lang.Boolean call()>();

        return $r1;
    }

    void <init>(androidx.test.espresso.base.UiControllerImpl, android.view.MotionEvent)
    {
        androidx.test.espresso.base.UiControllerImpl$3 r0;
        androidx.test.espresso.base.UiControllerImpl r1;
        android.view.MotionEvent r2;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$3;

        r1 := @parameter0: androidx.test.espresso.base.UiControllerImpl;

        r2 := @parameter1: android.view.MotionEvent;

        r0.<androidx.test.espresso.base.UiControllerImpl$3: androidx.test.espresso.base.UiControllerImpl this$0> = r1;

        r0.<androidx.test.espresso.base.UiControllerImpl$3: android.view.MotionEvent val$event> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.base.UiControllerImpl$4
<androidx.test.espresso.base.UiControllerImpl$4: java.util.Iterator val$mei>
<androidx.test.espresso.base.UiControllerImpl$4: long val$shift>
<androidx.test.espresso.base.UiControllerImpl$4: androidx.test.espresso.base.UiControllerImpl this$0>
    public java.lang.Boolean call() throws java.lang.Exception
    {
        androidx.test.espresso.base.UiControllerImpl$4 r0;
        android.view.MotionEvent r1;
        long l0, $l1, $l2, $l3, $l4;
        java.lang.Boolean $r2;
        java.util.Iterator $r3, $r5, $r10;
        java.lang.Object $r4;
        byte $b5;
        boolean $z0, $z1, $z2, z3, $z4;
        androidx.test.espresso.base.UiControllerImpl $r6, $r8;
        androidx.test.espresso.base.EventInjector $r7, $r9;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$4;

        z3 = 1;

     label1:
        $r10 = r0.<androidx.test.espresso.base.UiControllerImpl$4: java.util.Iterator val$mei>;

        $z4 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r3 = r0.<androidx.test.espresso.base.UiControllerImpl$4: java.util.Iterator val$mei>;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r1 = (android.view.MotionEvent) $r4;

        $l1 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        $l2 = r0.<androidx.test.espresso.base.UiControllerImpl$4: long val$shift>;

        $l3 = $l1 + $l2;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l0 = $l3 - $l4;

        $b5 = l0 cmp 10L;

        if $b5 <= 0 goto label2;

        staticinvoke <android.os.SystemClock: void sleep(long)>(l0);

     label2:
        $r5 = r0.<androidx.test.espresso.base.UiControllerImpl$4: java.util.Iterator val$mei>;

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = r0.<androidx.test.espresso.base.UiControllerImpl$4: androidx.test.espresso.base.UiControllerImpl this$0>;

        $r9 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.EventInjector '-$$Nest$fgeteventInjector'(androidx.test.espresso.base.UiControllerImpl)>($r8);

        $z2 = virtualinvoke $r9.<androidx.test.espresso.base.EventInjector: boolean injectMotionEventAsync(android.view.MotionEvent)>(r1);

        z3 = z3 & $z2;

        goto label1;

     label3:
        $r6 = r0.<androidx.test.espresso.base.UiControllerImpl$4: androidx.test.espresso.base.UiControllerImpl this$0>;

        $r7 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.EventInjector '-$$Nest$fgeteventInjector'(androidx.test.espresso.base.UiControllerImpl)>($r6);

        $z1 = virtualinvoke $r7.<androidx.test.espresso.base.EventInjector: boolean injectMotionEvent(android.view.MotionEvent)>(r1);

        z3 = z3 & $z1;

        goto label1;

     label4:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z3);

        return $r2;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        androidx.test.espresso.base.UiControllerImpl$4 r0;
        java.lang.Boolean $r1;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$4;

        $r1 = virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl$4: java.lang.Boolean call()>();

        return $r1;
    }

    void <init>(androidx.test.espresso.base.UiControllerImpl, java.util.Iterator, long)
    {
        androidx.test.espresso.base.UiControllerImpl$4 r0;
        androidx.test.espresso.base.UiControllerImpl r1;
        java.util.Iterator r2;
        long l0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$4;

        r1 := @parameter0: androidx.test.espresso.base.UiControllerImpl;

        r2 := @parameter1: java.util.Iterator;

        l0 := @parameter2: long;

        r0.<androidx.test.espresso.base.UiControllerImpl$4: androidx.test.espresso.base.UiControllerImpl this$0> = r1;

        r0.<androidx.test.espresso.base.UiControllerImpl$4: java.util.Iterator val$mei> = r2;

        r0.<androidx.test.espresso.base.UiControllerImpl$4: long val$shift> = l0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.test.espresso.base.UiControllerImpl$5
<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.IdlingPolicy val$warning>
<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.IdlingPolicy val$error>
<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.base.UiControllerImpl$SignalingTask val$idleSignal>
<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.base.UiControllerImpl this$0>
    void <init>(androidx.test.espresso.base.UiControllerImpl, androidx.test.espresso.IdlingPolicy, androidx.test.espresso.IdlingPolicy, androidx.test.espresso.base.UiControllerImpl$SignalingTask)
    {
        androidx.test.espresso.base.UiControllerImpl$5 r0;
        androidx.test.espresso.base.UiControllerImpl r1;
        androidx.test.espresso.IdlingPolicy r2, r3;
        androidx.test.espresso.base.UiControllerImpl$SignalingTask r4;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$5;

        r1 := @parameter0: androidx.test.espresso.base.UiControllerImpl;

        r2 := @parameter1: androidx.test.espresso.IdlingPolicy;

        r3 := @parameter2: androidx.test.espresso.IdlingPolicy;

        r4 := @parameter3: androidx.test.espresso.base.UiControllerImpl$SignalingTask;

        r0.<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.base.UiControllerImpl this$0> = r1;

        r0.<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.IdlingPolicy val$warning> = r2;

        r0.<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.IdlingPolicy val$error> = r3;

        r0.<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.base.UiControllerImpl$SignalingTask val$idleSignal> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void allResourcesIdle()
    {
        androidx.test.espresso.base.UiControllerImpl$5 r0;
        androidx.test.espresso.base.UiControllerImpl $r1;
        android.os.Handler $r2;
        androidx.test.espresso.base.UiControllerImpl$SignalingTask $r3;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$5;

        $r1 = r0.<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.base.UiControllerImpl this$0>;

        $r2 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: android.os.Handler '-$$Nest$fgetcontrollerHandler'(androidx.test.espresso.base.UiControllerImpl)>($r1);

        $r3 = r0.<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.base.UiControllerImpl$SignalingTask val$idleSignal>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public void resourcesHaveTimedOut(java.util.List)
    {
        androidx.test.espresso.base.UiControllerImpl$5 r0;
        java.util.List r1;
        androidx.test.espresso.IdlingPolicy $r2;
        androidx.test.espresso.base.UiControllerImpl $r3;
        android.os.Handler $r4;
        androidx.test.espresso.base.UiControllerImpl$SignalingTask $r5;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$5;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.IdlingPolicy val$error>;

        virtualinvoke $r2.<androidx.test.espresso.IdlingPolicy: void handleTimeout(java.util.List,java.lang.String)>(r1, "IdlingResources have timed out!");

        $r3 = r0.<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.base.UiControllerImpl this$0>;

        $r4 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: android.os.Handler '-$$Nest$fgetcontrollerHandler'(androidx.test.espresso.base.UiControllerImpl)>($r3);

        $r5 = r0.<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.base.UiControllerImpl$SignalingTask val$idleSignal>;

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public void resourcesStillBusyWarning(java.util.List)
    {
        androidx.test.espresso.base.UiControllerImpl$5 r0;
        java.util.List r1;
        androidx.test.espresso.IdlingPolicy $r2;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$5;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<androidx.test.espresso.base.UiControllerImpl$5: androidx.test.espresso.IdlingPolicy val$warning>;

        virtualinvoke $r2.<androidx.test.espresso.IdlingPolicy: void handleTimeout(java.util.List,java.lang.String)>(r1, "IdlingResources are still busy!");

        return;
    }

androidx.test.espresso.base.UiControllerImpl$6
<androidx.test.espresso.base.UiControllerImpl$6: androidx.test.espresso.base.UiControllerImpl this$0>
    void <init>(androidx.test.espresso.base.UiControllerImpl)
    {
        androidx.test.espresso.base.UiControllerImpl$6 r0;
        androidx.test.espresso.base.UiControllerImpl r1;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$6;

        r1 := @parameter0: androidx.test.espresso.base.UiControllerImpl;

        r0.<androidx.test.espresso.base.UiControllerImpl$6: androidx.test.espresso.base.UiControllerImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.test.espresso.base.UiControllerImpl$6 r0;
        androidx.test.espresso.base.UiControllerImpl $r1, $r3, $r5, $r7;
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation $r2, $r4;
        android.os.Handler $r6;
        int $i0;
        java.lang.Integer $r8;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$6;

        $r1 = r0.<androidx.test.espresso.base.UiControllerImpl$6: androidx.test.espresso.base.UiControllerImpl this$0>;

        $r2 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation '-$$Nest$fgetinterrogation'(androidx.test.espresso.base.UiControllerImpl)>($r1);

        if $r2 == null goto label1;

        $r3 = r0.<androidx.test.espresso.base.UiControllerImpl$6: androidx.test.espresso.base.UiControllerImpl this$0>;

        $r4 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation '-$$Nest$fgetinterrogation'(androidx.test.espresso.base.UiControllerImpl)>($r3);

        virtualinvoke $r4.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: void interruptInterrogation()>();

        $r5 = r0.<androidx.test.espresso.base.UiControllerImpl$6: androidx.test.espresso.base.UiControllerImpl this$0>;

        $r6 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: android.os.Handler '-$$Nest$fgetcontrollerHandler'(androidx.test.espresso.base.UiControllerImpl)>($r5);

        $r7 = r0.<androidx.test.espresso.base.UiControllerImpl$6: androidx.test.espresso.base.UiControllerImpl this$0>;

        $i0 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: int '-$$Nest$fgetgeneration'(androidx.test.espresso.base.UiControllerImpl)>($r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r6.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>($r8);

        return;

     label1:
        return;
    }

androidx.test.espresso.base.UiControllerImpl$7
<androidx.test.espresso.base.UiControllerImpl$7: int[] $SwitchMap$androidx$test$espresso$base$UiControllerImpl$IdleCondition>
    static void <clinit>()
    {
        androidx.test.espresso.base.UiControllerImpl$IdleCondition[] $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1, $r3, $r5, $r9;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition $r2, $r4, $r10;
        java.lang.Throwable $r6, $r7, $r8;

        $r0 = staticinvoke <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.test.espresso.base.UiControllerImpl$7: int[] $SwitchMap$androidx$test$espresso$base$UiControllerImpl$IdleCondition> = $r1;

     label1:
        $r3 = <androidx.test.espresso.base.UiControllerImpl$7: int[] $SwitchMap$androidx$test$espresso$base$UiControllerImpl$IdleCondition>;

        $r2 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition ASYNC_TASKS_HAVE_IDLED>;

        $i1 = virtualinvoke $r2.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: int ordinal()>();

        $r3[$i1] = 1;

     label2:
        $r5 = <androidx.test.espresso.base.UiControllerImpl$7: int[] $SwitchMap$androidx$test$espresso$base$UiControllerImpl$IdleCondition>;

        $r4 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition COMPAT_TASKS_HAVE_IDLED>;

        $i2 = virtualinvoke $r4.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: int ordinal()>();

        $r5[$i2] = 2;

     label3:
        $r9 = <androidx.test.espresso.base.UiControllerImpl$7: int[] $SwitchMap$androidx$test$espresso$base$UiControllerImpl$IdleCondition>;

        $r10 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition DYNAMIC_TASKS_HAVE_IDLED>;

        $i3 = virtualinvoke $r10.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: int ordinal()>();

        $r9[$i3] = 3;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        goto label2;

     label6:
        $r7 := @caughtexception;

        goto label3;

     label7:
        $r6 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label5;
        catch java.lang.NoSuchFieldError from label2 to label3 with label6;
        catch java.lang.NoSuchFieldError from label3 to label4 with label7;
    }

androidx.test.espresso.base.UiControllerImpl$IdleCondition
<androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition DELAY_HAS_PAST>
<androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition ASYNC_TASKS_HAVE_IDLED>
<androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition COMPAT_TASKS_HAVE_IDLED>
<androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition KEY_INJECT_HAS_COMPLETED>
<androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition MOTION_INJECTION_HAS_COMPLETED>
<androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition DYNAMIC_TASKS_HAVE_IDLED>
<androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition[] $VALUES>
    public android.os.Message createSignal(android.os.Handler, int)
    {
        androidx.test.espresso.base.UiControllerImpl$IdleCondition r0;
        android.os.Handler r1;
        int i0, $i1;
        android.os.Message $r2;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$IdleCondition;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: int ordinal()>();

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>(r1, $i1, i0, 0, null);

        return $r2;
    }

    public static androidx.test.espresso.base.UiControllerImpl$IdleCondition valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/test/espresso/base/UiControllerImpl$IdleCondition;", r0);

        $r2 = (androidx.test.espresso.base.UiControllerImpl$IdleCondition) $r1;

        return $r2;
    }

    public static java.util.BitSet createConditionSet()
    {
        java.util.BitSet r0;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition[] $r1;
        int $i0;

        r0 = new java.util.BitSet;

        $r1 = staticinvoke <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition[] values()>();

        $i0 = lengthof $r1;

        specialinvoke r0.<java.util.BitSet: void <init>(int)>($i0);

        return r0;
    }

    static void <clinit>()
    {
        androidx.test.espresso.base.UiControllerImpl$IdleCondition[] $r0;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition r1, r2, r3, r4, r5, r6;

        r1 = new androidx.test.espresso.base.UiControllerImpl$IdleCondition;

        specialinvoke r1.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: void <init>(java.lang.String,int)>("DELAY_HAS_PAST", 0);

        <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition DELAY_HAS_PAST> = r1;

        r2 = new androidx.test.espresso.base.UiControllerImpl$IdleCondition;

        specialinvoke r2.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: void <init>(java.lang.String,int)>("ASYNC_TASKS_HAVE_IDLED", 1);

        <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition ASYNC_TASKS_HAVE_IDLED> = r2;

        r3 = new androidx.test.espresso.base.UiControllerImpl$IdleCondition;

        specialinvoke r3.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: void <init>(java.lang.String,int)>("COMPAT_TASKS_HAVE_IDLED", 2);

        <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition COMPAT_TASKS_HAVE_IDLED> = r3;

        r4 = new androidx.test.espresso.base.UiControllerImpl$IdleCondition;

        specialinvoke r4.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: void <init>(java.lang.String,int)>("KEY_INJECT_HAS_COMPLETED", 3);

        <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition KEY_INJECT_HAS_COMPLETED> = r4;

        r5 = new androidx.test.espresso.base.UiControllerImpl$IdleCondition;

        specialinvoke r5.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: void <init>(java.lang.String,int)>("MOTION_INJECTION_HAS_COMPLETED", 4);

        <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition MOTION_INJECTION_HAS_COMPLETED> = r5;

        r6 = new androidx.test.espresso.base.UiControllerImpl$IdleCondition;

        specialinvoke r6.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: void <init>(java.lang.String,int)>("DYNAMIC_TASKS_HAVE_IDLED", 5);

        <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition DYNAMIC_TASKS_HAVE_IDLED> = r6;

        $r0 = staticinvoke <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition[] $values()>();

        <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.test.espresso.base.UiControllerImpl$IdleCondition r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$IdleCondition;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public void reset(java.util.BitSet)
    {
        androidx.test.espresso.base.UiControllerImpl$IdleCondition r0;
        java.util.BitSet r1;
        int $i0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$IdleCondition;

        r1 := @parameter0: java.util.BitSet;

        $i0 = virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: int ordinal()>();

        virtualinvoke r1.<java.util.BitSet: void set(int,boolean)>($i0, 0);

        return;
    }

    protected void signal(java.util.BitSet)
    {
        androidx.test.espresso.base.UiControllerImpl$IdleCondition r0;
        java.util.BitSet r1;
        int $i0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$IdleCondition;

        r1 := @parameter0: java.util.BitSet;

        $i0 = virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: int ordinal()>();

        virtualinvoke r1.<java.util.BitSet: void set(int)>($i0);

        return;
    }

    public static boolean handleMessage(android.os.Message, java.util.BitSet, int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, i7;
        java.lang.StringBuilder r0, $r1, $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7, r12, r13;
        android.os.Message r8;
        java.util.BitSet r9;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition[] r10;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition r11;

        r8 := @parameter0: android.os.Message;

        r9 := @parameter1: java.util.BitSet;

        i0 := @parameter2: int;

        r10 = staticinvoke <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition[] values()>();

        $i1 = r8.<android.os.Message: int what>;

        if $i1 < 0 goto label1;

        $i3 = r8.<android.os.Message: int what>;

        $i2 = lengthof r10;

        if $i3 < $i2 goto label2;

     label1:
        return 0;

     label2:
        $i4 = r8.<android.os.Message: int what>;

        r11 = r10[$i4];

        $i5 = r8.<android.os.Message: int arg1>;

        if $i5 != i0 goto label4;

        virtualinvoke r11.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: void signal(java.util.BitSet)>(r9);

     label3:
        return 1;

     label4:
        r12 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: java.lang.String '-$$Nest$sfgetTAG'()>();

        r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r11);

        i7 = r8.<android.os.Message: int arg1>;

        r0 = new java.lang.StringBuilder;

        specialinvoke r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ignoring signal of: ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from previous generation: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" current generation: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r12, $r7);

        goto label3;
    }

    public boolean isSignaled(java.util.BitSet)
    {
        androidx.test.espresso.base.UiControllerImpl$IdleCondition r0;
        java.util.BitSet r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$IdleCondition;

        r1 := @parameter0: java.util.BitSet;

        $i0 = virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: int ordinal()>();

        $z0 = virtualinvoke r1.<java.util.BitSet: boolean get(int)>($i0);

        return $z0;
    }

    private static androidx.test.espresso.base.UiControllerImpl$IdleCondition[] $values()
    {
        androidx.test.espresso.base.UiControllerImpl$IdleCondition[] r0;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition $r1, $r2, $r3, $r4, $r5, $r6;

        r0 = newarray (androidx.test.espresso.base.UiControllerImpl$IdleCondition)[6];

        $r1 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition DELAY_HAS_PAST>;

        r0[0] = $r1;

        $r2 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition ASYNC_TASKS_HAVE_IDLED>;

        r0[1] = $r2;

        $r3 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition COMPAT_TASKS_HAVE_IDLED>;

        r0[2] = $r3;

        $r4 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition KEY_INJECT_HAS_COMPLETED>;

        r0[3] = $r4;

        $r5 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition MOTION_INJECTION_HAS_COMPLETED>;

        r0[4] = $r5;

        $r6 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition DYNAMIC_TASKS_HAVE_IDLED>;

        r0[5] = $r6;

        return r0;
    }

    public static androidx.test.espresso.base.UiControllerImpl$IdleCondition[] values()
    {
        androidx.test.espresso.base.UiControllerImpl$IdleCondition[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.test.espresso.base.UiControllerImpl$IdleCondition: androidx.test.espresso.base.UiControllerImpl$IdleCondition[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.test.espresso.base.UiControllerImpl$IdleCondition[]) $r1;

        return $r2;
    }

androidx.test.espresso.base.UiControllerImpl$InterrogationStatus
<androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus TIMED_OUT>
<androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus COMPLETED>
<androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED>
<androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus[] $VALUES>
    public static androidx.test.espresso.base.UiControllerImpl$InterrogationStatus valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/test/espresso/base/UiControllerImpl$InterrogationStatus;", r0);

        $r2 = (androidx.test.espresso.base.UiControllerImpl$InterrogationStatus) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus[] $r0;
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus r1, r2, r3;

        r1 = new androidx.test.espresso.base.UiControllerImpl$InterrogationStatus;

        specialinvoke r1.<androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: void <init>(java.lang.String,int)>("TIMED_OUT", 0);

        <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus TIMED_OUT> = r1;

        r2 = new androidx.test.espresso.base.UiControllerImpl$InterrogationStatus;

        specialinvoke r2.<androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: void <init>(java.lang.String,int)>("COMPLETED", 1);

        <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus COMPLETED> = r2;

        r3 = new androidx.test.espresso.base.UiControllerImpl$InterrogationStatus;

        specialinvoke r3.<androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: void <init>(java.lang.String,int)>("INTERRUPTED", 2);

        <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED> = r3;

        $r0 = staticinvoke <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus[] $values()>();

        <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    private static androidx.test.espresso.base.UiControllerImpl$InterrogationStatus[] $values()
    {
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus[] r0;
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus $r1, $r2, $r3;

        r0 = newarray (androidx.test.espresso.base.UiControllerImpl$InterrogationStatus)[3];

        $r1 = <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus TIMED_OUT>;

        r0[0] = $r1;

        $r2 = <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus COMPLETED>;

        r0[1] = $r2;

        $r3 = <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED>;

        r0[2] = $r3;

        return r0;
    }

    public static androidx.test.espresso.base.UiControllerImpl$InterrogationStatus[] values()
    {
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.test.espresso.base.UiControllerImpl$InterrogationStatus[]) $r1;

        return $r2;
    }

androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation
<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.util.EnumSet conditions>
<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.util.BitSet conditionSet>
<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: long giveUpAtMs>
<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.lang.String lastMessage>
<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus status>
<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount>
    static volatile int '-$$Nest$fgetexecCount'(androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation)
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        int $i0;

        r0 := @parameter0: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $i0 = r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount>;

        return $i0;
    }

    public androidx.test.espresso.base.UiControllerImpl$InterrogationStatus get()
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus $r1;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $r1 = r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus status>;

        return $r1;
    }

    public volatile java.lang.Object get()
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus $r1;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $r1 = virtualinvoke r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus get()>();

        return $r1;
    }

    public java.lang.String getMessage()
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $r1 = r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.lang.String lastMessage>;

        return $r1;
    }

    void <init>(java.util.EnumSet, java.util.BitSet, long)
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        java.util.EnumSet r1;
        java.util.BitSet r2;
        long l0;
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus $r3;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        r1 := @parameter0: java.util.EnumSet;

        r2 := @parameter1: java.util.BitSet;

        l0 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus COMPLETED>;

        r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus status> = $r3;

        r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount> = 0;

        r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.util.EnumSet conditions> = r1;

        r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.util.BitSet conditionSet> = r2;

        r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: long giveUpAtMs> = l0;

        return;
    }

    void interruptInterrogation()
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus $r1;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $r1 = <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED>;

        r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus status> = $r1;

        return;
    }

    public void quitting()
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        return;
    }

    public void setMessage(android.os.Message)
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        java.lang.StringBuilder r1, $r4, $r5;
        java.lang.String $r2, $r6, r9;
        java.lang.Throwable $r3, r8;
        android.os.Message r7;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        r7 := @parameter0: android.os.Message;

     label1:
        $r2 = virtualinvoke r7.<android.os.Message: java.lang.String toString()>();

        r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.lang.String lastMessage> = $r2;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r8 = $r3;

        r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r8);

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NPE calling message toString(): ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.lang.String lastMessage> = $r6;

        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public boolean barrierUp()
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $z0 = specialinvoke r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: boolean continueOrTimeout()>();

        return $z0;
    }

    public boolean beforeTaskDispatch()
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $i0 = r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount>;

        $i1 = $i0 + 1;

        r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount> = $i1;

        $z0 = specialinvoke r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: boolean continueOrTimeout()>();

        return $z0;
    }

    private boolean conditionsMet()
    {
        java.util.Iterator r0;
        int i0, $i1, $i3, $i4;
        java.lang.StringBuilder r1, $r7, $r8, $r9, $r10, $r11;
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus $r2, $r3;
        java.util.EnumSet $r4;
        java.lang.Object $r5;
        java.util.BitSet $r6;
        boolean $z0, z1, z2, $z3, z4;
        java.lang.String $r12, r15, r16;
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r13;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition r14;

        r13 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $r3 = <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED>;

        $r2 = r13.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus status>;

        if $r3 != $r2 goto label1;

        return 1;

     label1:
        $i1 = r13.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount>;

        if $i1 <= 0 goto label7;

        $i3 = r13.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount>;

        $i4 = $i3 % 100;

        if $i4 != 0 goto label7;

        z1 = 1;

     label2:
        $r4 = r13.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.util.EnumSet conditions>;

        r0 = virtualinvoke $r4.<java.util.EnumSet: java.util.Iterator iterator()>();

        z2 = 1;

     label3:
        $z3 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r5 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r14 = (androidx.test.espresso.base.UiControllerImpl$IdleCondition) $r5;

        $r6 = r13.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: java.util.BitSet conditionSet>;

        $z0 = virtualinvoke r14.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: boolean isSignaled(java.util.BitSet)>($r6);

        if $z0 != 0 goto label3;

        if z1 == 0 goto label4;

        r15 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: java.lang.String '-$$Nest$sfgetTAG'()>();

        r16 = virtualinvoke r14.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: java.lang.String name()>();

        i0 = r13.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: int execCount>;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting for: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" iterations.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(r15, $r12);

        z2 = 0;

        goto label3;

     label4:
        z4 = 0;

     label5:
        return z4;

     label6:
        z4 = z2;

        goto label5;

     label7:
        z1 = 0;

        goto label2;
    }

    private boolean continueOrTimeout()
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        androidx.test.espresso.base.UiControllerImpl$InterrogationStatus $r1, $r2, $r3;
        long $l0, $l1;
        byte $b2;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $r2 = <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus INTERRUPTED>;

        $r1 = r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus status>;

        if $r2 != $r1 goto label1;

        return 0;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: long giveUpAtMs>;

        $b2 = $l0 cmp $l1;

        if $b2 < 0 goto label2;

        $r3 = <androidx.test.espresso.base.UiControllerImpl$InterrogationStatus: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus TIMED_OUT>;

        r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: androidx.test.espresso.base.UiControllerImpl$InterrogationStatus status> = $r3;

        return 0;

     label2:
        return 1;
    }

    public boolean queueEmpty()
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $z0 = specialinvoke r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: boolean conditionsMet()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean taskDueLong()
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $z0 = specialinvoke r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: boolean conditionsMet()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean taskDueSoon()
    {
        androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation r0;
        boolean $z0;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation;

        $z0 = specialinvoke r0.<androidx.test.espresso.base.UiControllerImpl$MainThreadInterrogation: boolean continueOrTimeout()>();

        return $z0;
    }

androidx.test.espresso.base.UiControllerImpl$SignalingTask
<androidx.test.espresso.base.UiControllerImpl$SignalingTask: androidx.test.espresso.base.UiControllerImpl$IdleCondition condition>
<androidx.test.espresso.base.UiControllerImpl$SignalingTask: int myGeneration>
<androidx.test.espresso.base.UiControllerImpl$SignalingTask: androidx.test.espresso.base.UiControllerImpl this$0>
    public void <init>(androidx.test.espresso.base.UiControllerImpl, java.util.concurrent.Callable, androidx.test.espresso.base.UiControllerImpl$IdleCondition, int)
    {
        androidx.test.espresso.base.UiControllerImpl$SignalingTask r0;
        androidx.test.espresso.base.UiControllerImpl r1;
        java.util.concurrent.Callable r2;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition r3, $r5;
        int i0;
        java.lang.Object $r4;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$SignalingTask;

        r1 := @parameter0: androidx.test.espresso.base.UiControllerImpl;

        r2 := @parameter1: java.util.concurrent.Callable;

        r3 := @parameter2: androidx.test.espresso.base.UiControllerImpl$IdleCondition;

        i0 := @parameter3: int;

        r0.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: androidx.test.espresso.base.UiControllerImpl this$0> = r1;

        specialinvoke r0.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(r2);

        $r4 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r5 = (androidx.test.espresso.base.UiControllerImpl$IdleCondition) $r4;

        r0.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: androidx.test.espresso.base.UiControllerImpl$IdleCondition condition> = $r5;

        r0.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: int myGeneration> = i0;

        return;
    }

    protected void done()
    {
        androidx.test.espresso.base.UiControllerImpl$SignalingTask r0;
        androidx.test.espresso.base.UiControllerImpl $r1, $r3;
        android.os.Handler $r2, $r5;
        androidx.test.espresso.base.UiControllerImpl$IdleCondition $r4;
        int $i0;
        android.os.Message $r6;

        r0 := @this: androidx.test.espresso.base.UiControllerImpl$SignalingTask;

        $r1 = r0.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: androidx.test.espresso.base.UiControllerImpl this$0>;

        $r2 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: android.os.Handler '-$$Nest$fgetcontrollerHandler'(androidx.test.espresso.base.UiControllerImpl)>($r1);

        $r4 = r0.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: androidx.test.espresso.base.UiControllerImpl$IdleCondition condition>;

        $r3 = r0.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: androidx.test.espresso.base.UiControllerImpl this$0>;

        $r5 = staticinvoke <androidx.test.espresso.base.UiControllerImpl: android.os.Handler '-$$Nest$fgetcontrollerHandler'(androidx.test.espresso.base.UiControllerImpl)>($r3);

        $i0 = r0.<androidx.test.espresso.base.UiControllerImpl$SignalingTask: int myGeneration>;

        $r6 = virtualinvoke $r4.<androidx.test.espresso.base.UiControllerImpl$IdleCondition: android.os.Message createSignal(android.os.Handler,int)>($r5, $i0);

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r6);

        return;
    }

