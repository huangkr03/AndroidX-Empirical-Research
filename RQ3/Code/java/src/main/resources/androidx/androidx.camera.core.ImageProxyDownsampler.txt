androidx.camera.core.ImageProxyDownsampler
    private void <init>()
    {
        androidx.camera.core.ImageProxyDownsampler r0;

        r0 := @this: androidx.camera.core.ImageProxyDownsampler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static androidx.camera.core.ForwardingImageProxy downsample(androidx.camera.core.ImageProxy, int, int, androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod)
    {
        androidx.camera.core.ImageProxy r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, i40, $i41;
        androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod r1;
        int[] r2, r3, r4, r5, $r20, $r21, $r22, $r23, $r26;
        androidx.camera.core.ImageProxy$PlaneProxy[] r6, $r25, $r28;
        androidx.camera.core.ImageProxy$PlaneProxy r7, $r30;
        java.nio.ByteBuffer r8;
        byte[] r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r17, $r18;
        android.util.Size $r13, $r16;
        java.lang.String $r19;
        androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl $r24, $r27;
        java.lang.UnsupportedOperationException $r29;

        r0 := @parameter0: androidx.camera.core.ImageProxy;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod;

        $i2 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: int getFormat()>();

        if $i2 == 35 goto label1;

        $r29 = new java.lang.UnsupportedOperationException;

        specialinvoke $r29.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Only YUV_420_888 format is currently supported.");

        throw $r29;

     label1:
        $i3 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: int getWidth()>();

        if $i3 < i0 goto label2;

        $i6 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: int getHeight()>();

        if $i6 >= i1 goto label3;

     label2:
        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Downsampled dimension ");

        $r13 = new android.util.Size;

        specialinvoke $r13.<android.util.Size: void <init>(int,int)>(i0, i1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not <= original dimension ");

        $r16 = new android.util.Size;

        $i4 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: int getWidth()>();

        $i5 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: int getHeight()>();

        specialinvoke $r16.<android.util.Size: void <init>(int,int)>($i4, $i5);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r10;

     label3:
        $i7 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: int getWidth()>();

        if $i7 != i0 goto label4;

        $i39 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: int getHeight()>();

        if $i39 != i1 goto label4;

        $r27 = new androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl;

        $r28 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: androidx.camera.core.ImageProxy$PlaneProxy[] getPlanes()>();

        specialinvoke $r27.<androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl: void <init>(androidx.camera.core.ImageProxy,androidx.camera.core.ImageProxy$PlaneProxy[],int,int)>(r0, $r28, i0, i1);

        return $r27;

     label4:
        $r20 = newarray (int)[3];

        $i8 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: int getWidth()>();

        $r20[0] = $i8;

        $i9 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: int getWidth()>();

        $i10 = $i9 / 2;

        $r20[1] = $i10;

        $i11 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: int getWidth()>();

        $i12 = $i11 / 2;

        $r20[2] = $i12;

        r2 = $r20;

        $r21 = newarray (int)[3];

        $i13 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: int getHeight()>();

        $r21[0] = $i13;

        $i14 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: int getHeight()>();

        $i15 = $i14 / 2;

        $r21[1] = $i15;

        $i16 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: int getHeight()>();

        $i17 = $i16 / 2;

        $r21[2] = $i17;

        r3 = $r21;

        $r22 = newarray (int)[3];

        $r22[0] = i0;

        $i18 = i0 / 2;

        $r22[1] = $i18;

        $i19 = i0 / 2;

        $r22[2] = $i19;

        r4 = $r22;

        $r23 = newarray (int)[3];

        $r23[0] = i1;

        $i20 = i1 / 2;

        $r23[1] = $i20;

        $i21 = i1 / 2;

        $r23[2] = $i21;

        r5 = $r23;

        r6 = newarray (androidx.camera.core.ImageProxy$PlaneProxy)[3];

        i40 = 0;

     label5:
        if i40 >= 3 goto label9;

        $r25 = interfaceinvoke r0.<androidx.camera.core.ImageProxy: androidx.camera.core.ImageProxy$PlaneProxy[] getPlanes()>();

        r7 = $r25[i40];

        r8 = interfaceinvoke r7.<androidx.camera.core.ImageProxy$PlaneProxy: java.nio.ByteBuffer getBuffer()>();

        $i23 = r4[i40];

        $i22 = r5[i40];

        $i24 = $i23 * $i22;

        r9 = newarray (byte)[$i24];

        $r26 = <androidx.camera.core.ImageProxyDownsampler$2: int[] $SwitchMap$androidx$camera$core$ImageProxyDownsampler$DownsamplingMethod>;

        $i25 = virtualinvoke r1.<androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: int ordinal()>();

        $i26 = $r26[$i25];

        lookupswitch($i26)
        {
            case 1: goto label6;
            case 2: goto label7;
            default: goto label8;
        };

     label6:
        $i33 = r2[i40];

        $i34 = interfaceinvoke r7.<androidx.camera.core.ImageProxy$PlaneProxy: int getPixelStride()>();

        $i35 = interfaceinvoke r7.<androidx.camera.core.ImageProxy$PlaneProxy: int getRowStride()>();

        $i38 = r3[i40];

        $i37 = r4[i40];

        $i36 = r5[i40];

        staticinvoke <androidx.camera.core.ImageProxyDownsampler: void resizeNearestNeighbor(java.nio.ByteBuffer,int,int,int,int,byte[],int,int)>(r8, $i33, $i34, $i35, $i38, r9, $i37, $i36);

        goto label8;

     label7:
        $i27 = r2[i40];

        $i28 = interfaceinvoke r7.<androidx.camera.core.ImageProxy$PlaneProxy: int getPixelStride()>();

        $i29 = interfaceinvoke r7.<androidx.camera.core.ImageProxy$PlaneProxy: int getRowStride()>();

        $i32 = r3[i40];

        $i31 = r4[i40];

        $i30 = r5[i40];

        staticinvoke <androidx.camera.core.ImageProxyDownsampler: void resizeAveraging(java.nio.ByteBuffer,int,int,int,int,byte[],int,int)>(r8, $i27, $i28, $i29, $i32, r9, $i31, $i30);

     label8:
        $i41 = r4[i40];

        $r30 = staticinvoke <androidx.camera.core.ImageProxyDownsampler: androidx.camera.core.ImageProxy$PlaneProxy createPlaneProxy(int,int,byte[])>($i41, 1, r9);

        r6[i40] = $r30;

        i40 = i40 + 1;

        goto label5;

     label9:
        $r24 = new androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl;

        specialinvoke $r24.<androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl: void <init>(androidx.camera.core.ImageProxy,androidx.camera.core.ImageProxy$PlaneProxy[],int,int)>(r0, r6, i0, i1);

        return $r24;
    }

    private static void resizeNearestNeighbor(java.nio.ByteBuffer, int, int, int, int, byte[], int, int)
    {
        java.nio.ByteBuffer r0, r10;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, i17, i18, i19, i20;
        byte[] r1, r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, f8, f9;
        int[] r3;
        java.lang.Throwable r4, $r9;
        byte $b14;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r1 := @parameter5: byte[];

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        $f3 = (float) i0;

        $f2 = (float) i4;

        f0 = $f3 / $f2;

        $f5 = (float) i3;

        $f4 = (float) i5;

        f1 = $f5 / $f4;

        r2 = newarray (byte)[i2];

        r3 = newarray (int)[i4];

        i17 = 0;

     label01:
        if i17 >= i4 goto label02;

        $f7 = (float) i17;

        f8 = $f7 * f0;

        i18 = (int) f8;

        $i16 = i18 * i1;

        r3[i17] = $i16;

        i17 = i17 + 1;

        goto label01;

     label02:
        r10 = r0;

        entermonitor r0;

     label03:
        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        i19 = 0;

     label04:
        if i19 >= i5 goto label07;

        $f6 = (float) i19;

        f9 = $f6 * f1;

        i6 = (int) f9;

        $i9 = i3 - 1;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>(i6, $i9);

        i7 = $i10 * i2;

        i8 = i19 * i4;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i7);

        $i11 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i11);

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r2, 0, $i12);

        i20 = 0;

     label05:
        if i20 >= i4 goto label06;

        $i15 = i8 + i20;

        $i13 = r3[i20];

        $b14 = r2[$i13];

        r1[$i15] = $b14;

        i20 = i20 + 1;

        goto label05;

     label06:
        i19 = i19 + 1;

        goto label04;

     label07:
        exitmonitor r10;

     label08:
        goto label11;

     label09:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r10;

     label10:
        throw r4;

     label11:
        return;

        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private static void resizeAveraging(java.nio.ByteBuffer, int, int, int, int, byte[], int, int)
    {
        java.nio.ByteBuffer r0, r13;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i29, $i31, $i32, $i34, $i35, $i36, $i37, $i39, $i40, i41, i42, i43, i44;
        byte[] r1, r2, r3;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, f8, f9;
        int[] r4;
        short s10, s11, s12, s13;
        java.lang.Throwable r5, $r12;
        byte $b25, $b28, $b30, $b33, $b38;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r1 := @parameter5: byte[];

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        $f3 = (float) i0;

        $f2 = (float) i4;

        f0 = $f3 / $f2;

        $f5 = (float) i3;

        $f4 = (float) i5;

        f1 = $f5 / $f4;

        r2 = newarray (byte)[i2];

        r3 = newarray (byte)[i2];

        r4 = newarray (int)[i4];

        i41 = 0;

     label01:
        if i41 >= i4 goto label02;

        $f7 = (float) i41;

        f8 = $f7 * f0;

        i42 = (int) f8;

        $i40 = i42 * i1;

        r4[i41] = $i40;

        i41 = i41 + 1;

        goto label01;

     label02:
        r13 = r0;

        entermonitor r0;

     label03:
        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        i43 = 0;

     label04:
        if i43 >= i5 goto label07;

        $f6 = (float) i43;

        f9 = $f6 * f1;

        i6 = (int) f9;

        $i15 = i3 - 1;

        $i16 = staticinvoke <java.lang.Math: int min(int,int)>(i6, $i15);

        i7 = $i16 * i2;

        $i18 = i6 + 1;

        $i17 = i3 - 1;

        $i19 = staticinvoke <java.lang.Math: int min(int,int)>($i18, $i17);

        i8 = $i19 * i2;

        i9 = i43 * i4;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i7);

        $i20 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $i21 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i20);

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r2, 0, $i21);

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i8);

        $i22 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $i23 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i22);

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r3, 0, $i23);

        i44 = 0;

     label05:
        if i44 >= i4 goto label06;

        $i24 = r4[i44];

        $b25 = r2[$i24];

        s10 = $b25 & 255;

        $i26 = r4[i44];

        $i27 = $i26 + i1;

        $b28 = r2[$i27];

        s11 = $b28 & 255;

        $i29 = r4[i44];

        $b30 = r3[$i29];

        s12 = $b30 & 255;

        $i31 = r4[i44];

        $i32 = $i31 + i1;

        $b33 = r3[$i32];

        s13 = $b33 & 255;

        $i34 = s10 + s11;

        $i35 = $i34 + s12;

        $i36 = $i35 + s13;

        i14 = $i36 / 4;

        $i39 = i9 + i44;

        $i37 = i14 & 255;

        $b38 = (byte) $i37;

        r1[$i39] = $b38;

        i44 = i44 + 1;

        goto label05;

     label06:
        i43 = i43 + 1;

        goto label04;

     label07:
        exitmonitor r13;

     label08:
        goto label11;

     label09:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r13;

     label10:
        throw r5;

     label11:
        return;

        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private static androidx.camera.core.ImageProxy$PlaneProxy createPlaneProxy(int, int, byte[])
    {
        int i0, i1;
        byte[] r0;
        androidx.camera.core.ImageProxyDownsampler$1 $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: byte[];

        $r1 = new androidx.camera.core.ImageProxyDownsampler$1;

        specialinvoke $r1.<androidx.camera.core.ImageProxyDownsampler$1: void <init>(byte[],int,int)>(r0, i0, i1);

        return $r1;
    }

androidx.camera.core.ImageProxyDownsampler$1
<androidx.camera.core.ImageProxyDownsampler$1: java.nio.ByteBuffer mBuffer>
<androidx.camera.core.ImageProxyDownsampler$1: byte[] val$data>
<androidx.camera.core.ImageProxyDownsampler$1: int val$rowStride>
<androidx.camera.core.ImageProxyDownsampler$1: int val$pixelStride>
    void <init>(byte[], int, int)
    {
        androidx.camera.core.ImageProxyDownsampler$1 r0;
        byte[] r1, $r2;
        int i0, i1;
        java.nio.ByteBuffer $r3;

        r0 := @this: androidx.camera.core.ImageProxyDownsampler$1;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<androidx.camera.core.ImageProxyDownsampler$1: byte[] val$data> = r1;

        r0.<androidx.camera.core.ImageProxyDownsampler$1: int val$rowStride> = i0;

        r0.<androidx.camera.core.ImageProxyDownsampler$1: int val$pixelStride> = i1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<androidx.camera.core.ImageProxyDownsampler$1: byte[] val$data>;

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r2);

        r0.<androidx.camera.core.ImageProxyDownsampler$1: java.nio.ByteBuffer mBuffer> = $r3;

        return;
    }

    public int getRowStride()
    {
        androidx.camera.core.ImageProxyDownsampler$1 r0;
        int $i0;

        r0 := @this: androidx.camera.core.ImageProxyDownsampler$1;

        $i0 = r0.<androidx.camera.core.ImageProxyDownsampler$1: int val$rowStride>;

        return $i0;
    }

    public int getPixelStride()
    {
        androidx.camera.core.ImageProxyDownsampler$1 r0;
        int $i0;

        r0 := @this: androidx.camera.core.ImageProxyDownsampler$1;

        $i0 = r0.<androidx.camera.core.ImageProxyDownsampler$1: int val$pixelStride>;

        return $i0;
    }

    public java.nio.ByteBuffer getBuffer()
    {
        androidx.camera.core.ImageProxyDownsampler$1 r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: androidx.camera.core.ImageProxyDownsampler$1;

        $r1 = r0.<androidx.camera.core.ImageProxyDownsampler$1: java.nio.ByteBuffer mBuffer>;

        return $r1;
    }

androidx.camera.core.ImageProxyDownsampler$2
<androidx.camera.core.ImageProxyDownsampler$2: int[] $SwitchMap$androidx$camera$core$ImageProxyDownsampler$DownsamplingMethod>
    static void <clinit>()
    {
        androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod[] $r0;
        int $i0, $i1, $i2;
        int[] $r1, $r3, $r5;
        androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod $r2, $r4;
        java.lang.Throwable $r6, $r7, r8, r9;

        $r0 = staticinvoke <androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.camera.core.ImageProxyDownsampler$2: int[] $SwitchMap$androidx$camera$core$ImageProxyDownsampler$DownsamplingMethod> = $r1;

     label1:
        $r3 = <androidx.camera.core.ImageProxyDownsampler$2: int[] $SwitchMap$androidx$camera$core$ImageProxyDownsampler$DownsamplingMethod>;

        $r2 = <androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod NEAREST_NEIGHBOR>;

        $i1 = virtualinvoke $r2.<androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: int ordinal()>();

        $r3[$i1] = 1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r8 = $r7;

     label4:
        $r5 = <androidx.camera.core.ImageProxyDownsampler$2: int[] $SwitchMap$androidx$camera$core$ImageProxyDownsampler$DownsamplingMethod>;

        $r4 = <androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod AVERAGING>;

        $i2 = virtualinvoke $r4.<androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: int ordinal()>();

        $r5[$i2] = 2;

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        r9 = $r6;

     label7:
        return;

        catch java.lang.NoSuchFieldError from label1 to label2 with label3;
        catch java.lang.NoSuchFieldError from label4 to label5 with label6;
    }

androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod
<androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod NEAREST_NEIGHBOR>
<androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod AVERAGING>
<androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod[] $VALUES>
    public static androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod[] values()
    {
        androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod[]) $r1;

        return $r2;
    }

    public static androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/camera/core/ImageProxyDownsampler$DownsamplingMethod;", r0);

        $r2 = (androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod $r0, $r1, $r3, $r4;
        androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod[] $r2;

        $r0 = new androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod;

        specialinvoke $r0.<androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: void <init>(java.lang.String,int)>("NEAREST_NEIGHBOR", 0);

        <androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod NEAREST_NEIGHBOR> = $r0;

        $r1 = new androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod;

        specialinvoke $r1.<androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: void <init>(java.lang.String,int)>("AVERAGING", 1);

        <androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod AVERAGING> = $r1;

        $r2 = newarray (androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod)[2];

        $r3 = <androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod NEAREST_NEIGHBOR>;

        $r2[0] = $r3;

        $r4 = <androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod AVERAGING>;

        $r2[1] = $r4;

        <androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod[] $VALUES> = $r2;

        return;
    }

androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl
<androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl: androidx.camera.core.ImageProxy$PlaneProxy[] mDownsampledPlanes>
<androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl: int mDownsampledWidth>
<androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl: int mDownsampledHeight>
    void <init>(androidx.camera.core.ImageProxy, androidx.camera.core.ImageProxy$PlaneProxy[], int, int)
    {
        androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl r0;
        androidx.camera.core.ImageProxy r1;
        androidx.camera.core.ImageProxy$PlaneProxy[] r2;
        int i0, i1;

        r0 := @this: androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl;

        r1 := @parameter0: androidx.camera.core.ImageProxy;

        r2 := @parameter1: androidx.camera.core.ImageProxy$PlaneProxy[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<androidx.camera.core.ForwardingImageProxy: void <init>(androidx.camera.core.ImageProxy)>(r1);

        r0.<androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl: androidx.camera.core.ImageProxy$PlaneProxy[] mDownsampledPlanes> = r2;

        r0.<androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl: int mDownsampledWidth> = i0;

        r0.<androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl: int mDownsampledHeight> = i1;

        return;
    }

    public int getWidth()
    {
        androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl r0;
        int $i0;

        r0 := @this: androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl;

        $i0 = r0.<androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl: int mDownsampledWidth>;

        return $i0;
    }

    public int getHeight()
    {
        androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl r0;
        int $i0;

        r0 := @this: androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl;

        $i0 = r0.<androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl: int mDownsampledHeight>;

        return $i0;
    }

    public androidx.camera.core.ImageProxy$PlaneProxy[] getPlanes()
    {
        androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl r0;
        androidx.camera.core.ImageProxy$PlaneProxy[] $r1;

        r0 := @this: androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl;

        $r1 = r0.<androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl: androidx.camera.core.ImageProxy$PlaneProxy[] mDownsampledPlanes>;

        return $r1;
    }

