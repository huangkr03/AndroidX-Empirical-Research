kotlin.ranges.IntProgression
<kotlin.ranges.IntProgression: kotlin.ranges.IntProgression$Companion Companion>
<kotlin.ranges.IntProgression: int first>
<kotlin.ranges.IntProgression: int last>
<kotlin.ranges.IntProgression: int step>
    static void <clinit>()
    {
        kotlin.ranges.IntProgression$Companion $r0;

        $r0 = new kotlin.ranges.IntProgression$Companion;

        specialinvoke $r0.<kotlin.ranges.IntProgression$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <kotlin.ranges.IntProgression: kotlin.ranges.IntProgression$Companion Companion> = $r0;

        return;
    }

    public void <init>(int, int, int)
    {
        kotlin.ranges.IntProgression $r0;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;

        $r0 := @this: kotlin.ranges.IntProgression;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $i0 == 0 goto label2;

        if $i0 == -2147483648 goto label1;

        $r0.<kotlin.ranges.IntProgression: int first> = $i1;

        $i1 = staticinvoke <kotlin.internal.ProgressionUtilKt: int getProgressionLastElement(int,int,int)>($i1, $i2, $i0);

        $r0.<kotlin.ranges.IntProgression: int last> = $i1;

        $r0.<kotlin.ranges.IntProgression: int step> = $i0;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Step must be greater than Int.MIN_VALUE to avoid overflow on negation.");

        throw $r1;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Step must be non-zero.");

        throw $r1;
    }

    public boolean equals(java.lang.Object)
    {
        kotlin.ranges.IntProgression $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        int $i0, $i1;

        $r0 := @this: kotlin.ranges.IntProgression;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof kotlin.ranges.IntProgression;

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r0.<kotlin.ranges.IntProgression: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = (kotlin.ranges.IntProgression) $r1;

        $z0 = virtualinvoke $r2.<kotlin.ranges.IntProgression: boolean isEmpty()>();

        if $z0 != 0 goto label2;

     label1:
        $i0 = $r0.<kotlin.ranges.IntProgression: int first>;

        $r2 = (kotlin.ranges.IntProgression) $r1;

        $i1 = $r2.<kotlin.ranges.IntProgression: int first>;

        if $i0 != $i1 goto label3;

        $i0 = $r0.<kotlin.ranges.IntProgression: int last>;

        $r2 = (kotlin.ranges.IntProgression) $r1;

        $i1 = $r2.<kotlin.ranges.IntProgression: int last>;

        if $i0 != $i1 goto label3;

        $i0 = $r0.<kotlin.ranges.IntProgression: int step>;

        $r0 = (kotlin.ranges.IntProgression) $r1;

        $i1 = $r0.<kotlin.ranges.IntProgression: int step>;

        if $i0 != $i1 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public final int getFirst()
    {
        kotlin.ranges.IntProgression $r0;
        int i0;

        $r0 := @this: kotlin.ranges.IntProgression;

        i0 = $r0.<kotlin.ranges.IntProgression: int first>;

        return i0;
    }

    public final int getLast()
    {
        kotlin.ranges.IntProgression $r0;
        int i0;

        $r0 := @this: kotlin.ranges.IntProgression;

        i0 = $r0.<kotlin.ranges.IntProgression: int last>;

        return i0;
    }

    public final int getStep()
    {
        kotlin.ranges.IntProgression $r0;
        int i0;

        $r0 := @this: kotlin.ranges.IntProgression;

        i0 = $r0.<kotlin.ranges.IntProgression: int step>;

        return i0;
    }

    public int hashCode()
    {
        kotlin.ranges.IntProgression $r0;
        boolean $z0;
        int $i0, $i1;

        $r0 := @this: kotlin.ranges.IntProgression;

        $z0 = virtualinvoke $r0.<kotlin.ranges.IntProgression: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return -1;

     label1:
        $i0 = $r0.<kotlin.ranges.IntProgression: int first>;

        $i0 = $i0 * 31;

        $i1 = $r0.<kotlin.ranges.IntProgression: int last>;

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $i1 = $r0.<kotlin.ranges.IntProgression: int step>;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public boolean isEmpty()
    {
        kotlin.ranges.IntProgression $r0;
        int $i0, $i1;

        $r0 := @this: kotlin.ranges.IntProgression;

        $i0 = $r0.<kotlin.ranges.IntProgression: int step>;

        if $i0 <= 0 goto label1;

        $i0 = $r0.<kotlin.ranges.IntProgression: int first>;

        $i1 = $r0.<kotlin.ranges.IntProgression: int last>;

        if $i0 <= $i1 goto label3;

        goto label2;

     label1:
        $i0 = $r0.<kotlin.ranges.IntProgression: int first>;

        $i1 = $r0.<kotlin.ranges.IntProgression: int last>;

        if $i0 >= $i1 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public volatile java.util.Iterator iterator()
    {
        kotlin.ranges.IntProgression $r0;
        kotlin.collections.IntIterator $r1;

        $r0 := @this: kotlin.ranges.IntProgression;

        $r1 = virtualinvoke $r0.<kotlin.ranges.IntProgression: kotlin.collections.IntIterator iterator()>();

        return $r1;
    }

    public kotlin.collections.IntIterator iterator()
    {
        kotlin.ranges.IntProgression $r0;
        kotlin.ranges.IntProgressionIterator $r1;
        int $i0, $i1, $i2;

        $r0 := @this: kotlin.ranges.IntProgression;

        $r1 = new kotlin.ranges.IntProgressionIterator;

        $i0 = $r0.<kotlin.ranges.IntProgression: int first>;

        $i1 = $r0.<kotlin.ranges.IntProgression: int last>;

        $i2 = $r0.<kotlin.ranges.IntProgression: int step>;

        specialinvoke $r1.<kotlin.ranges.IntProgressionIterator: void <init>(int,int,int)>($i0, $i1, $i2);

        return $r1;
    }

    public java.lang.String toString()
    {
        kotlin.ranges.IntProgression $r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: kotlin.ranges.IntProgression;

        $i0 = $r0.<kotlin.ranges.IntProgression: int step>;

        if $i0 <= 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = $r0.<kotlin.ranges.IntProgression: int first>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        $i0 = $r0.<kotlin.ranges.IntProgression: int last>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" step ");

        $i0 = $r0.<kotlin.ranges.IntProgression: int step>;

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = $r0.<kotlin.ranges.IntProgression: int first>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" downTo ");

        $i0 = $r0.<kotlin.ranges.IntProgression: int last>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" step ");

        $i0 = $r0.<kotlin.ranges.IntProgression: int step>;

        $i0 = neg $i0;

     label2:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

kotlin.ranges.IntProgression$Companion
    private void <init>()
    {
        kotlin.ranges.IntProgression$Companion $r0;

        $r0 := @this: kotlin.ranges.IntProgression$Companion;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        kotlin.ranges.IntProgression$Companion $r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        $r0 := @this: kotlin.ranges.IntProgression$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke $r0.<kotlin.ranges.IntProgression$Companion: void <init>()>();

        return;
    }

    public final kotlin.ranges.IntProgression fromClosedRange(int, int, int)
    {
        kotlin.ranges.IntProgression$Companion $r0;
        int $i0, $i1, $i2;
        kotlin.ranges.IntProgression $r1;

        $r0 := @this: kotlin.ranges.IntProgression$Companion;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r1 = new kotlin.ranges.IntProgression;

        specialinvoke $r1.<kotlin.ranges.IntProgression: void <init>(int,int,int)>($i0, $i1, $i2);

        return $r1;
    }

