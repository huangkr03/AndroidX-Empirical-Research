androidx.compose.ui.text.font.FontFamily
<androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.FontFamily$Companion Companion>
<androidx.compose.ui.text.font.FontFamily: boolean canLoadSynchronously>
<androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.SystemFontFamily Default>
<androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily SansSerif>
<androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily Serif>
<androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily Monospace>
<androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily Cursive>
    private void <init>(boolean)
    {
        androidx.compose.ui.text.font.FontFamily r0;
        boolean z0;

        r0 := @this: androidx.compose.ui.text.font.FontFamily;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.text.font.FontFamily: boolean canLoadSynchronously> = z0;

        return;
    }

    public final boolean getCanLoadSynchronously()
    {
        androidx.compose.ui.text.font.FontFamily r0;
        boolean $z0;

        r0 := @this: androidx.compose.ui.text.font.FontFamily;

        $z0 = r0.<androidx.compose.ui.text.font.FontFamily: boolean canLoadSynchronously>;

        return $z0;
    }

    public static void getCanLoadSynchronously$annotations()
    {
        return;
    }

    public void <init>(boolean, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.text.font.FontFamily r0;
        boolean z0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.ui.text.font.FontFamily;

        z0 := @parameter0: boolean;

        $r1 := @parameter1: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.text.font.FontFamily: void <init>(boolean)>(z0);

        return;
    }

    public static final androidx.compose.ui.text.font.SystemFontFamily access$getDefault$cp()
    {
        androidx.compose.ui.text.font.SystemFontFamily $r0;

        $r0 = <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.SystemFontFamily Default>;

        return $r0;
    }

    public static final androidx.compose.ui.text.font.GenericFontFamily access$getSansSerif$cp()
    {
        androidx.compose.ui.text.font.GenericFontFamily $r0;

        $r0 = <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily SansSerif>;

        return $r0;
    }

    public static final androidx.compose.ui.text.font.GenericFontFamily access$getSerif$cp()
    {
        androidx.compose.ui.text.font.GenericFontFamily $r0;

        $r0 = <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily Serif>;

        return $r0;
    }

    public static final androidx.compose.ui.text.font.GenericFontFamily access$getMonospace$cp()
    {
        androidx.compose.ui.text.font.GenericFontFamily $r0;

        $r0 = <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily Monospace>;

        return $r0;
    }

    public static final androidx.compose.ui.text.font.GenericFontFamily access$getCursive$cp()
    {
        androidx.compose.ui.text.font.GenericFontFamily $r0;

        $r0 = <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily Cursive>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.compose.ui.text.font.FontFamily$Companion $r0;
        androidx.compose.ui.text.font.DefaultFontFamily $r1;
        androidx.compose.ui.text.font.SystemFontFamily $r2;
        androidx.compose.ui.text.font.GenericFontFamily $r3, $r4, $r5, $r6;

        $r0 = new androidx.compose.ui.text.font.FontFamily$Companion;

        specialinvoke $r0.<androidx.compose.ui.text.font.FontFamily$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.FontFamily$Companion Companion> = $r0;

        $r1 = new androidx.compose.ui.text.font.DefaultFontFamily;

        specialinvoke $r1.<androidx.compose.ui.text.font.DefaultFontFamily: void <init>()>();

        $r2 = (androidx.compose.ui.text.font.SystemFontFamily) $r1;

        <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.SystemFontFamily Default> = $r2;

        $r3 = new androidx.compose.ui.text.font.GenericFontFamily;

        specialinvoke $r3.<androidx.compose.ui.text.font.GenericFontFamily: void <init>(java.lang.String,java.lang.String)>("sans-serif", "FontFamily.SansSerif");

        <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily SansSerif> = $r3;

        $r4 = new androidx.compose.ui.text.font.GenericFontFamily;

        specialinvoke $r4.<androidx.compose.ui.text.font.GenericFontFamily: void <init>(java.lang.String,java.lang.String)>("serif", "FontFamily.Serif");

        <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily Serif> = $r4;

        $r5 = new androidx.compose.ui.text.font.GenericFontFamily;

        specialinvoke $r5.<androidx.compose.ui.text.font.GenericFontFamily: void <init>(java.lang.String,java.lang.String)>("monospace", "FontFamily.Monospace");

        <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily Monospace> = $r5;

        $r6 = new androidx.compose.ui.text.font.GenericFontFamily;

        specialinvoke $r6.<androidx.compose.ui.text.font.GenericFontFamily: void <init>(java.lang.String,java.lang.String)>("cursive", "FontFamily.Cursive");

        <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily Cursive> = $r6;

        return;
    }

androidx.compose.ui.text.font.FontFamily$Companion
    private void <init>()
    {
        androidx.compose.ui.text.font.FontFamily$Companion r0;

        r0 := @this: androidx.compose.ui.text.font.FontFamily$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.compose.ui.text.font.SystemFontFamily getDefault()
    {
        androidx.compose.ui.text.font.FontFamily$Companion r0;
        androidx.compose.ui.text.font.SystemFontFamily $r1;

        r0 := @this: androidx.compose.ui.text.font.FontFamily$Companion;

        $r1 = staticinvoke <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.SystemFontFamily access$getDefault$cp()>();

        return $r1;
    }

    public final androidx.compose.ui.text.font.GenericFontFamily getSansSerif()
    {
        androidx.compose.ui.text.font.FontFamily$Companion r0;
        androidx.compose.ui.text.font.GenericFontFamily $r1;

        r0 := @this: androidx.compose.ui.text.font.FontFamily$Companion;

        $r1 = staticinvoke <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily access$getSansSerif$cp()>();

        return $r1;
    }

    public final androidx.compose.ui.text.font.GenericFontFamily getSerif()
    {
        androidx.compose.ui.text.font.FontFamily$Companion r0;
        androidx.compose.ui.text.font.GenericFontFamily $r1;

        r0 := @this: androidx.compose.ui.text.font.FontFamily$Companion;

        $r1 = staticinvoke <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily access$getSerif$cp()>();

        return $r1;
    }

    public final androidx.compose.ui.text.font.GenericFontFamily getMonospace()
    {
        androidx.compose.ui.text.font.FontFamily$Companion r0;
        androidx.compose.ui.text.font.GenericFontFamily $r1;

        r0 := @this: androidx.compose.ui.text.font.FontFamily$Companion;

        $r1 = staticinvoke <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily access$getMonospace$cp()>();

        return $r1;
    }

    public final androidx.compose.ui.text.font.GenericFontFamily getCursive()
    {
        androidx.compose.ui.text.font.FontFamily$Companion r0;
        androidx.compose.ui.text.font.GenericFontFamily $r1;

        r0 := @this: androidx.compose.ui.text.font.FontFamily$Companion;

        $r1 = staticinvoke <androidx.compose.ui.text.font.FontFamily: androidx.compose.ui.text.font.GenericFontFamily access$getCursive$cp()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.ui.text.font.FontFamily$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.compose.ui.text.font.FontFamily$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.compose.ui.text.font.FontFamily$Companion: void <init>()>();

        return;
    }

androidx.compose.ui.text.font.FontFamily$Resolver
<androidx.compose.ui.text.font.FontFamily$Resolver: java.lang.Object preload(androidx.compose.ui.text.font.FontFamily,kotlin.coroutines.Continuation)>
<androidx.compose.ui.text.font.FontFamily$Resolver: androidx.compose.runtime.State resolve-DPcqOEQ(androidx.compose.ui.text.font.FontFamily,androidx.compose.ui.text.font.FontWeight,int,int)>
    public static androidx.compose.runtime.State resolve-DPcqOEQ$default(androidx.compose.ui.text.font.FontFamily$Resolver, androidx.compose.ui.text.font.FontFamily, androidx.compose.ui.text.font.FontWeight, int, int, int, java.lang.Object)
    {
        androidx.compose.ui.text.font.FontFamily$Resolver r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.Object r1;
        androidx.compose.runtime.State $r2;
        androidx.compose.ui.text.font.FontSynthesis$Companion $r3;
        androidx.compose.ui.text.font.FontStyle$Companion $r4;
        androidx.compose.ui.text.font.FontWeight$Companion $r5;
        java.lang.UnsupportedOperationException $r6;
        androidx.compose.ui.text.font.FontFamily r7;
        androidx.compose.ui.text.font.FontWeight r8;

        r0 := @parameter0: androidx.compose.ui.text.font.FontFamily$Resolver;

        r7 := @parameter1: androidx.compose.ui.text.font.FontFamily;

        r8 := @parameter2: androidx.compose.ui.text.font.FontWeight;

        i5 := @parameter3: int;

        i6 := @parameter4: int;

        i0 := @parameter5: int;

        r1 := @parameter6: java.lang.Object;

        if r1 == null goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: resolve-DPcqOEQ");

        throw $r6;

     label1:
        $i1 = i0 & 1;

        if $i1 == 0 goto label2;

        r7 = null;

     label2:
        $i2 = i0 & 2;

        if $i2 == 0 goto label3;

        $r5 = <androidx.compose.ui.text.font.FontWeight: androidx.compose.ui.text.font.FontWeight$Companion Companion>;

        r8 = virtualinvoke $r5.<androidx.compose.ui.text.font.FontWeight$Companion: androidx.compose.ui.text.font.FontWeight getNormal()>();

     label3:
        $i3 = i0 & 4;

        if $i3 == 0 goto label4;

        $r4 = <androidx.compose.ui.text.font.FontStyle: androidx.compose.ui.text.font.FontStyle$Companion Companion>;

        i5 = virtualinvoke $r4.<androidx.compose.ui.text.font.FontStyle$Companion: int getNormal-_-LCdwA()>();

     label4:
        $i4 = i0 & 8;

        if $i4 == 0 goto label5;

        $r3 = <androidx.compose.ui.text.font.FontSynthesis: androidx.compose.ui.text.font.FontSynthesis$Companion Companion>;

        i6 = virtualinvoke $r3.<androidx.compose.ui.text.font.FontSynthesis$Companion: int getAll-GVVA2EU()>();

     label5:
        $r2 = interfaceinvoke r0.<androidx.compose.ui.text.font.FontFamily$Resolver: androidx.compose.runtime.State resolve-DPcqOEQ(androidx.compose.ui.text.font.FontFamily,androidx.compose.ui.text.font.FontWeight,int,int)>(r7, r8, i5, i6);

        return $r2;
    }

