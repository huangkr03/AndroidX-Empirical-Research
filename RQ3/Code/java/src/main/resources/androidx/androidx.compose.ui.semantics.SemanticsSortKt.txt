androidx.compose.ui.semantics.SemanticsSortKt
    public static final java.util.List findOneLayerOfSemanticsWrappersSortedByBounds(androidx.compose.ui.node.LayoutNode, java.util.List)
    {
        androidx.compose.ui.node.LayoutNode $r0, $r10, r14, $r21;
        java.util.List r1, $r7, $r12, $r15, r17, $r19;
        java.util.ArrayList r2, $r6, $r8, r16;
        java.lang.Object r3, r13, r18, r20;
        androidx.compose.ui.semantics.NodeLocationHolder r4, $r11;
        java.util.Collection r5;
        boolean $z2, $z5, z9, z10, z11;
        int $i0, i1, i2, $i3, $i4, i5, i6;
        androidx.compose.ui.node.SemanticsModifierNode r22;

        $r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        r1 := @parameter1: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "list");

        $z2 = virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: boolean isAttached()>();

        if $z2 != 0 goto label01;

        return r1;

     label01:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        $r12 = virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: java.util.List getChildren$ui_release()>();

        i1 = 0;

        i2 = interfaceinvoke $r12.<java.util.List: int size()>();

     label02:
        if i1 >= i2 goto label04;

        r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i1);

        r14 = (androidx.compose.ui.node.LayoutNode) r13;

        $z5 = virtualinvoke r14.<androidx.compose.ui.node.LayoutNode: boolean isAttached()>();

        if $z5 == 0 goto label03;

        $r11 = new androidx.compose.ui.semantics.NodeLocationHolder;

        specialinvoke $r11.<androidx.compose.ui.semantics.NodeLocationHolder: void <init>(androidx.compose.ui.node.LayoutNode,androidx.compose.ui.node.LayoutNode)>($r0, r14);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label03:
        i1 = i1 + 1;

        goto label02;

     label04:
        $r7 = (java.util.List) r2;

        $r15 = staticinvoke <androidx.compose.ui.semantics.SemanticsSortKt: java.util.List findOneLayerOfSemanticsWrappersSortedByBounds$sortWithStrategy(java.util.List)>($r7);

        z9 = 0;

        $r8 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r15.<java.util.List: int size()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r16 = $r8;

        r17 = $r15;

        z10 = 0;

        $i3 = 0;

        $i4 = interfaceinvoke r17.<java.util.List: int size()>();

     label05:
        if $i3 >= $i4 goto label06;

        r18 = interfaceinvoke r17.<java.util.List: java.lang.Object get(int)>($i3);

        r3 = r18;

        r4 = (androidx.compose.ui.semantics.NodeLocationHolder) r3;

        r5 = (java.util.Collection) r16;

        $r10 = virtualinvoke r4.<androidx.compose.ui.semantics.NodeLocationHolder: androidx.compose.ui.node.LayoutNode getNode$ui_release()>();

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        $i3 = $i3 + 1;

        goto label05;

     label06:
        $r19 = (java.util.List) r16;

        z11 = 0;

        i5 = 0;

        i6 = interfaceinvoke $r19.<java.util.List: int size()>();

     label07:
        if i5 >= i6 goto label10;

        r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i5);

        $r21 = (androidx.compose.ui.node.LayoutNode) r20;

        r22 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterSemantics(androidx.compose.ui.node.LayoutNode)>($r21);

        if r22 == null goto label08;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r22);

        goto label09;

     label08:
        staticinvoke <androidx.compose.ui.semantics.SemanticsSortKt: java.util.List findOneLayerOfSemanticsWrappersSortedByBounds(androidx.compose.ui.node.LayoutNode,java.util.List)>($r21, r1);

     label09:
        i5 = i5 + 1;

        goto label07;

     label10:
        return r1;
    }

    public static java.util.List findOneLayerOfSemanticsWrappersSortedByBounds$default(androidx.compose.ui.node.LayoutNode, java.util.List, int, java.lang.Object)
    {
        androidx.compose.ui.node.LayoutNode r0;
        int i0, $i1;
        java.lang.Object r1;
        java.util.List $r2, r4;
        java.util.ArrayList $r3;

        r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        r4 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r4 = (java.util.List) $r3;

     label1:
        $r2 = staticinvoke <androidx.compose.ui.semantics.SemanticsSortKt: java.util.List findOneLayerOfSemanticsWrappersSortedByBounds(androidx.compose.ui.node.LayoutNode,java.util.List)>(r0, r4);

        return $r2;
    }

    public static final androidx.compose.ui.node.LayoutNode findNodeByPredicateTraversal(androidx.compose.ui.node.LayoutNode, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.LayoutNode $r0, r4, r5;
        kotlin.jvm.functions.Function1 r1;
        java.util.List $r2;
        int i0, i1;
        java.lang.Object r3, $r6;
        java.lang.Boolean $r7;
        boolean $z2;

        $r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "predicate");

        $r6 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r0);

        $r7 = (java.lang.Boolean) $r6;

        $z2 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label1;

        return $r0;

     label1:
        $r2 = virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: java.util.List getChildren$ui_release()>();

        i1 = 0;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label2:
        if i1 >= i0 goto label4;

        r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (androidx.compose.ui.node.LayoutNode) r3;

        r5 = staticinvoke <androidx.compose.ui.semantics.SemanticsSortKt: androidx.compose.ui.node.LayoutNode findNodeByPredicateTraversal(androidx.compose.ui.node.LayoutNode,kotlin.jvm.functions.Function1)>(r4, r1);

        if r5 == null goto label3;

        return r5;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return null;
    }

    public static final androidx.compose.ui.node.NodeCoordinator findCoordinatorToGetBounds(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.LayoutNode $r0;
        androidx.compose.ui.Modifier$Node $r1;
        androidx.compose.ui.node.NodeCoordinator $r2, $r4;
        androidx.compose.ui.node.SemanticsModifierNode $r3;

        $r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r3 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterMergingSemantics(androidx.compose.ui.node.LayoutNode)>($r0);

        if $r3 != null goto label1;

        $r3 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterSemantics(androidx.compose.ui.node.LayoutNode)>($r0);

     label1:
        if $r3 == null goto label2;

        $r1 = interfaceinvoke $r3.<androidx.compose.ui.node.SemanticsModifierNode: androidx.compose.ui.Modifier$Node getNode()>();

        if $r1 == null goto label2;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.node.NodeCoordinator getCoordinator$ui_release()>();

        $r4 = $r2;

        if $r2 != null goto label3;

     label2:
        $r4 = virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeCoordinator getInnerCoordinator$ui_release()>();

     label3:
        return $r4;
    }

    private static final java.util.List findOneLayerOfSemanticsWrappersSortedByBounds$sortWithStrategy(java.util.List)
    {
        java.util.List r0, r8, r9, $r11;
        androidx.compose.ui.semantics.NodeLocationHolder$ComparisonStrategy $r1, $r5;
        androidx.compose.ui.semantics.NodeLocationHolder$Companion $r2, $r6;
        java.util.Collection $r3, $r7;
        java.lang.Throwable $r4;

        r0 := @parameter0: java.util.List;

     label1:
        $r2 = <androidx.compose.ui.semantics.NodeLocationHolder: androidx.compose.ui.semantics.NodeLocationHolder$Companion Companion>;

        $r1 = <androidx.compose.ui.semantics.NodeLocationHolder$ComparisonStrategy: androidx.compose.ui.semantics.NodeLocationHolder$ComparisonStrategy Stripe>;

        virtualinvoke $r2.<androidx.compose.ui.semantics.NodeLocationHolder$Companion: void setComparisonStrategy$ui_release(androidx.compose.ui.semantics.NodeLocationHolder$ComparisonStrategy)>($r1);

        $r3 = (java.util.Collection) r0;

        r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toMutableList(java.util.Collection)>($r3);

        staticinvoke <kotlin.collections.CollectionsKt: void sort(java.util.List)>(r8);

        r9 = r8;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = <androidx.compose.ui.semantics.NodeLocationHolder: androidx.compose.ui.semantics.NodeLocationHolder$Companion Companion>;

        $r5 = <androidx.compose.ui.semantics.NodeLocationHolder$ComparisonStrategy: androidx.compose.ui.semantics.NodeLocationHolder$ComparisonStrategy Location>;

        virtualinvoke $r6.<androidx.compose.ui.semantics.NodeLocationHolder$Companion: void setComparisonStrategy$ui_release(androidx.compose.ui.semantics.NodeLocationHolder$ComparisonStrategy)>($r5);

        $r7 = (java.util.Collection) r0;

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toMutableList(java.util.Collection)>($r7);

        staticinvoke <kotlin.collections.CollectionsKt: void sort(java.util.List)>($r11);

        r9 = $r11;

     label4:
        return r9;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

