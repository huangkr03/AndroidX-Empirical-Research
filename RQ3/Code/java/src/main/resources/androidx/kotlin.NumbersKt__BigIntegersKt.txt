kotlin.NumbersKt__BigIntegersKt
    public void <init>()
    {
        kotlin.NumbersKt__BigIntegersKt $r0;

        $r0 := @this: kotlin.NumbersKt__BigIntegersKt;

        specialinvoke $r0.<kotlin.NumbersKt__BigDecimalsKt: void <init>()>();

        return;
    }

    private static final java.math.BigInteger and(java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r1;

        $r0 := @parameter0: java.math.BigInteger;

        $r1 := @parameter1: java.math.BigInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger and(java.math.BigInteger)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.and(other)");

        return $r0;
    }

    private static final java.math.BigInteger dec(java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r1;

        $r0 := @parameter0: java.math.BigInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.subtract(BigInteger.ONE)");

        return $r0;
    }

    private static final java.math.BigInteger div(java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r1;

        $r0 := @parameter0: java.math.BigInteger;

        $r1 := @parameter1: java.math.BigInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.divide(other)");

        return $r0;
    }

    private static final java.math.BigInteger inc(java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r1;

        $r0 := @parameter0: java.math.BigInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.add(BigInteger.ONE)");

        return $r0;
    }

    private static final java.math.BigInteger inv(java.math.BigInteger)
    {
        java.math.BigInteger $r0;

        $r0 := @parameter0: java.math.BigInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger not()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.not()");

        return $r0;
    }

    private static final java.math.BigInteger minus(java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r1;

        $r0 := @parameter0: java.math.BigInteger;

        $r1 := @parameter1: java.math.BigInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.subtract(other)");

        return $r0;
    }

    private static final java.math.BigInteger or(java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r1;

        $r0 := @parameter0: java.math.BigInteger;

        $r1 := @parameter1: java.math.BigInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger or(java.math.BigInteger)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.or(other)");

        return $r0;
    }

    private static final java.math.BigInteger plus(java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r1;

        $r0 := @parameter0: java.math.BigInteger;

        $r1 := @parameter1: java.math.BigInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.add(other)");

        return $r0;
    }

    private static final java.math.BigInteger rem(java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r1;

        $r0 := @parameter0: java.math.BigInteger;

        $r1 := @parameter1: java.math.BigInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger remainder(java.math.BigInteger)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.remainder(other)");

        return $r0;
    }

    private static final java.math.BigInteger shl(java.math.BigInteger, int)
    {
        java.math.BigInteger $r0;
        int $i0;

        $r0 := @parameter0: java.math.BigInteger;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>($i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.shiftLeft(n)");

        return $r0;
    }

    private static final java.math.BigInteger shr(java.math.BigInteger, int)
    {
        java.math.BigInteger $r0;
        int $i0;

        $r0 := @parameter0: java.math.BigInteger;

        $i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>($i0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.shiftRight(n)");

        return $r0;
    }

    private static final java.math.BigInteger times(java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r1;

        $r0 := @parameter0: java.math.BigInteger;

        $r1 := @parameter1: java.math.BigInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.multiply(other)");

        return $r0;
    }

    private static final java.math.BigDecimal toBigDecimal(java.math.BigInteger)
    {
        java.math.BigInteger $r0;
        java.math.BigDecimal $r1;

        $r0 := @parameter0: java.math.BigInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = new java.math.BigDecimal;

        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($r0);

        return $r1;
    }

    private static final java.math.BigDecimal toBigDecimal(java.math.BigInteger, int, java.math.MathContext)
    {
        java.math.BigInteger $r0;
        int $i0;
        java.math.MathContext $r1;
        java.math.BigDecimal $r2;

        $r0 := @parameter0: java.math.BigInteger;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.math.MathContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "mathContext");

        $r2 = new java.math.BigDecimal;

        specialinvoke $r2.<java.math.BigDecimal: void <init>(java.math.BigInteger,int,java.math.MathContext)>($r0, $i0, $r1);

        return $r2;
    }

    static java.math.BigDecimal toBigDecimal$default(java.math.BigInteger, int, java.math.MathContext, int, java.lang.Object)
    {
        java.math.BigInteger $r0;
        int $i0, $i1, $i2;
        java.math.MathContext $r1;
        java.lang.Object $r2;
        java.math.BigDecimal $r3;

        $r0 := @parameter0: java.math.BigInteger;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.math.MathContext;

        $i1 := @parameter3: int;

        $r2 := @parameter4: java.lang.Object;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $i0 = 0;

     label1:
        $i1 = $i1 & 2;

        if $i1 == 0 goto label2;

        $r1 = <java.math.MathContext: java.math.MathContext UNLIMITED>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "UNLIMITED");

     label2:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "mathContext");

        $r3 = new java.math.BigDecimal;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(java.math.BigInteger,int,java.math.MathContext)>($r0, $i0, $r1);

        return $r3;
    }

    private static final java.math.BigInteger toBigInteger(int)
    {
        java.math.BigInteger $r0;
        int $i0;
        long $l1;

        $i0 := @parameter0: int;

        $l1 = (long) $i0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "valueOf(this.toLong())");

        return $r0;
    }

    private static final java.math.BigInteger toBigInteger(long)
    {
        java.math.BigInteger $r0;
        long $l0;

        $l0 := @parameter0: long;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "valueOf(this)");

        return $r0;
    }

    private static final java.math.BigInteger unaryMinus(java.math.BigInteger)
    {
        java.math.BigInteger $r0;

        $r0 := @parameter0: java.math.BigInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger negate()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.negate()");

        return $r0;
    }

    private static final java.math.BigInteger xor(java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r1;

        $r0 := @parameter0: java.math.BigInteger;

        $r1 := @parameter1: java.math.BigInteger;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "other");

        $r0 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger xor(java.math.BigInteger)>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r0, "this.xor(other)");

        return $r0;
    }

