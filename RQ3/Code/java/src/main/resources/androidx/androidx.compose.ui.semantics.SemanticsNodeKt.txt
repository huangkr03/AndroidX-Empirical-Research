androidx.compose.ui.semantics.SemanticsNodeKt
    public static final androidx.compose.ui.node.SemanticsModifierNode getOuterSemantics(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.LayoutNode $r0;
        androidx.compose.ui.node.NodeChain r1, r2, r3, r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.compose.ui.Modifier$Node r5, r6, r7, r9, $r10;
        androidx.compose.ui.node.Nodes $r8;
        boolean $z7;
        androidx.compose.ui.node.SemanticsModifierNode $r11;

        $r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        $r8 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i0 = virtualinvoke $r8.<androidx.compose.ui.node.Nodes: int getSemantics-OLwlOKw()>();

        r2 = r1;

        r3 = r2;

        i1 = i0;

        $i2 = staticinvoke <androidx.compose.ui.node.NodeChain: int access$getAggregateChildKindSet(androidx.compose.ui.node.NodeChain)>(r3);

        $i3 = $i2 & i1;

        if $i3 == 0 goto label3;

        r4 = r3;

        r9 = virtualinvoke r4.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getHead$ui_release()>();

     label1:
        if r9 == null goto label3;

        r5 = r9;

        $i4 = virtualinvoke r5.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i5 = $i4 & i1;

        if $i5 == 0 goto label2;

        r6 = r5;

        $z7 = r6 instanceof androidx.compose.ui.node.SemanticsModifierNode;

        if $z7 == 0 goto label2;

        r7 = r6;

        $r10 = r7;

        goto label4;

     label2:
        $i6 = virtualinvoke r5.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i7 = $i6 & i1;

        if $i7 == 0 goto label3;

        r9 = virtualinvoke r9.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        goto label1;

     label3:
        $r10 = null;

     label4:
        $r11 = (androidx.compose.ui.node.SemanticsModifierNode) $r10;

        return $r11;
    }

    public static void getOuterSemantics$annotations(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.LayoutNode r0;

        r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        return;
    }

    public static final androidx.compose.ui.node.SemanticsModifierNode getOuterMergingSemantics(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.LayoutNode $r0;
        androidx.compose.ui.node.NodeChain r1, r2, r3, r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.compose.ui.Modifier$Node r5, r6, r7, r11, $r12;
        androidx.compose.ui.node.SemanticsModifierNode r8, $r13;
        androidx.compose.ui.node.Nodes $r9;
        boolean $z8, $z9;
        androidx.compose.ui.semantics.SemanticsConfiguration $r10;

        $r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.NodeChain getNodes$ui_release()>();

        $r9 = <androidx.compose.ui.node.Nodes: androidx.compose.ui.node.Nodes INSTANCE>;

        i0 = virtualinvoke $r9.<androidx.compose.ui.node.Nodes: int getSemantics-OLwlOKw()>();

        r2 = r1;

        r3 = r2;

        i1 = i0;

        $i2 = staticinvoke <androidx.compose.ui.node.NodeChain: int access$getAggregateChildKindSet(androidx.compose.ui.node.NodeChain)>(r3);

        $i3 = $i2 & i1;

        if $i3 == 0 goto label3;

        r4 = r3;

        r11 = virtualinvoke r4.<androidx.compose.ui.node.NodeChain: androidx.compose.ui.Modifier$Node getHead$ui_release()>();

     label1:
        if r11 == null goto label3;

        r5 = r11;

        $i4 = virtualinvoke r5.<androidx.compose.ui.Modifier$Node: int getKindSet$ui_release()>();

        $i5 = $i4 & i1;

        if $i5 == 0 goto label2;

        r6 = r5;

        $z8 = r6 instanceof androidx.compose.ui.node.SemanticsModifierNode;

        if $z8 == 0 goto label2;

        r7 = r6;

        r8 = (androidx.compose.ui.node.SemanticsModifierNode) r7;

        $r10 = interfaceinvoke r8.<androidx.compose.ui.node.SemanticsModifierNode: androidx.compose.ui.semantics.SemanticsConfiguration getSemanticsConfiguration()>();

        $z9 = virtualinvoke $r10.<androidx.compose.ui.semantics.SemanticsConfiguration: boolean isMergingSemanticsOfDescendants()>();

        if $z9 == 0 goto label2;

        $r12 = r7;

        goto label4;

     label2:
        $i6 = virtualinvoke r5.<androidx.compose.ui.Modifier$Node: int getAggregateChildKindSet$ui_release()>();

        $i7 = $i6 & i1;

        if $i7 == 0 goto label3;

        r11 = virtualinvoke r11.<androidx.compose.ui.Modifier$Node: androidx.compose.ui.Modifier$Node getChild$ui_release()>();

        goto label1;

     label3:
        $r12 = null;

     label4:
        $r13 = (androidx.compose.ui.node.SemanticsModifierNode) $r12;

        return $r13;
    }

    public static void getOuterMergingSemantics$annotations(androidx.compose.ui.node.LayoutNode)
    {
        androidx.compose.ui.node.LayoutNode r0;

        r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        return;
    }

    private static final java.util.List findOneLayerOfSemanticsWrappers(androidx.compose.ui.node.LayoutNode, java.util.List)
    {
        androidx.compose.ui.node.LayoutNode $r0, r4;
        java.util.List r1;
        androidx.compose.runtime.collection.MutableVector r2;
        int i0, i1;
        java.lang.Object[] r3, $r6;
        androidx.compose.ui.node.SemanticsModifierNode r5;
        java.lang.Object $r7;

        $r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        r1 := @parameter1: java.util.List;

        r2 = virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: androidx.compose.runtime.collection.MutableVector getZSortedChildren()>();

        i0 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: int getSize()>();

        if i0 <= 0 goto label4;

        i1 = 0;

        $r6 = virtualinvoke r2.<androidx.compose.runtime.collection.MutableVector: java.lang.Object[] getContent()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type kotlin.Array<T of androidx.compose.runtime.collection.MutableVector>");

        r3 = $r6;

     label1:
        $r7 = r3[i1];

        r4 = (androidx.compose.ui.node.LayoutNode) $r7;

        r5 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.SemanticsModifierNode getOuterSemantics(androidx.compose.ui.node.LayoutNode)>(r4);

        if r5 == null goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label3;

     label2:
        staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: java.util.List findOneLayerOfSemanticsWrappers(androidx.compose.ui.node.LayoutNode,java.util.List)>(r4, r1);

     label3:
        i1 = i1 + 1;

        if i1 < i0 goto label1;

     label4:
        return r1;
    }

    static java.util.List findOneLayerOfSemanticsWrappers$default(androidx.compose.ui.node.LayoutNode, java.util.List, int, java.lang.Object)
    {
        androidx.compose.ui.node.LayoutNode r0;
        int i0, $i1;
        java.lang.Object r1;
        java.util.List $r2, r4;
        java.util.ArrayList $r3;

        r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        r4 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r4 = (java.util.List) $r3;

     label1:
        $r2 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: java.util.List findOneLayerOfSemanticsWrappers(androidx.compose.ui.node.LayoutNode,java.util.List)>(r0, r4);

        return $r2;
    }

    private static final androidx.compose.ui.node.LayoutNode findClosestParentNode(androidx.compose.ui.node.LayoutNode, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.LayoutNode $r0, r4;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        r4 = virtualinvoke $r0.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.LayoutNode getParent$ui_release()>();

     label1:
        if r4 == null goto label3;

        $r2 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r4);

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        return r4;

     label2:
        r4 = virtualinvoke r4.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.LayoutNode getParent$ui_release()>();

        goto label1;

     label3:
        return null;
    }

    private static final androidx.compose.ui.semantics.Role getRole(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.semantics.SemanticsNode $r0;
        androidx.compose.ui.semantics.SemanticsConfiguration $r1;
        androidx.compose.ui.semantics.SemanticsProperties $r2;
        androidx.compose.ui.semantics.SemanticsPropertyKey $r3;
        java.lang.Object $r4;
        androidx.compose.ui.semantics.Role $r5;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: androidx.compose.ui.semantics.SemanticsConfiguration getUnmergedConfig$ui_release()>();

        $r2 = <androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsProperties INSTANCE>;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.semantics.SemanticsProperties: androidx.compose.ui.semantics.SemanticsPropertyKey getRole()>();

        $r4 = staticinvoke <androidx.compose.ui.semantics.SemanticsConfigurationKt: java.lang.Object getOrNull(androidx.compose.ui.semantics.SemanticsConfiguration,androidx.compose.ui.semantics.SemanticsPropertyKey)>($r1, $r3);

        $r5 = (androidx.compose.ui.semantics.Role) $r4;

        return $r5;
    }

    private static final int contentDescriptionFakeNodeId(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.semantics.SemanticsNode $r0;
        int $i0, $i1;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        $i0 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $i1 = $i0 + 2000000000;

        return $i1;
    }

    private static final int roleFakeNodeId(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.semantics.SemanticsNode $r0;
        int $i0, $i1;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        $i0 = virtualinvoke $r0.<androidx.compose.ui.semantics.SemanticsNode: int getId()>();

        $i1 = $i0 + 1000000000;

        return $i1;
    }

    public static final androidx.compose.ui.node.LayoutNode access$findClosestParentNode(androidx.compose.ui.node.LayoutNode, kotlin.jvm.functions.Function1)
    {
        androidx.compose.ui.node.LayoutNode $r0, $r2;
        kotlin.jvm.functions.Function1 r1;

        $r0 := @parameter0: androidx.compose.ui.node.LayoutNode;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.node.LayoutNode findClosestParentNode(androidx.compose.ui.node.LayoutNode,kotlin.jvm.functions.Function1)>($r0, r1);

        return $r2;
    }

    public static final androidx.compose.ui.semantics.Role access$getRole(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.semantics.SemanticsNode $r0;
        androidx.compose.ui.semantics.Role $r1;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        $r1 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: androidx.compose.ui.semantics.Role getRole(androidx.compose.ui.semantics.SemanticsNode)>($r0);

        return $r1;
    }

    public static final int access$roleFakeNodeId(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.semantics.SemanticsNode $r0;
        int $i0;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        $i0 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: int roleFakeNodeId(androidx.compose.ui.semantics.SemanticsNode)>($r0);

        return $i0;
    }

    public static final int access$contentDescriptionFakeNodeId(androidx.compose.ui.semantics.SemanticsNode)
    {
        androidx.compose.ui.semantics.SemanticsNode $r0;
        int $i0;

        $r0 := @parameter0: androidx.compose.ui.semantics.SemanticsNode;

        $i0 = staticinvoke <androidx.compose.ui.semantics.SemanticsNodeKt: int contentDescriptionFakeNodeId(androidx.compose.ui.semantics.SemanticsNode)>($r0);

        return $i0;
    }

