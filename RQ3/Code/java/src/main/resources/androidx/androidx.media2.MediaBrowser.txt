androidx.media2.MediaBrowser
<androidx.media2.MediaBrowser: java.lang.String TAG>
<androidx.media2.MediaBrowser: boolean DEBUG>
    public void <init>(android.content.Context, androidx.media2.SessionToken, java.util.concurrent.Executor, androidx.media2.MediaBrowser$BrowserCallback)
    {
        androidx.media2.MediaBrowser r0;
        android.content.Context r1;
        androidx.media2.SessionToken r2;
        java.util.concurrent.Executor r3;
        androidx.media2.MediaBrowser$BrowserCallback r4;

        r0 := @this: androidx.media2.MediaBrowser;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.SessionToken;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: androidx.media2.MediaBrowser$BrowserCallback;

        specialinvoke r0.<androidx.media2.MediaController: void <init>(android.content.Context,androidx.media2.SessionToken,java.util.concurrent.Executor,androidx.media2.MediaController$ControllerCallback)>(r1, r2, r3, r4);

        return;
    }

    androidx.media2.MediaBrowser$MediaBrowserImpl createImpl(android.content.Context, androidx.media2.SessionToken, java.util.concurrent.Executor, androidx.media2.MediaController$ControllerCallback)
    {
        androidx.media2.MediaBrowser r0;
        android.content.Context r1;
        androidx.media2.SessionToken r2;
        java.util.concurrent.Executor r3;
        androidx.media2.MediaController$ControllerCallback r4;
        boolean $z0;
        androidx.media2.MediaBrowserImplBase $r5;
        androidx.media2.MediaBrowser$BrowserCallback $r6, $r8;
        androidx.media2.MediaBrowserImplLegacy $r7;

        r0 := @this: androidx.media2.MediaBrowser;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.SessionToken;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: androidx.media2.MediaController$ControllerCallback;

        $z0 = virtualinvoke r2.<androidx.media2.SessionToken: boolean isLegacySession()>();

        if $z0 == 0 goto label1;

        $r7 = new androidx.media2.MediaBrowserImplLegacy;

        $r8 = (androidx.media2.MediaBrowser$BrowserCallback) r4;

        specialinvoke $r7.<androidx.media2.MediaBrowserImplLegacy: void <init>(android.content.Context,androidx.media2.MediaBrowser,androidx.media2.SessionToken,java.util.concurrent.Executor,androidx.media2.MediaBrowser$BrowserCallback)>(r1, r0, r2, r3, $r8);

        return $r7;

     label1:
        $r5 = new androidx.media2.MediaBrowserImplBase;

        $r6 = (androidx.media2.MediaBrowser$BrowserCallback) r4;

        specialinvoke $r5.<androidx.media2.MediaBrowserImplBase: void <init>(android.content.Context,androidx.media2.MediaController,androidx.media2.SessionToken,java.util.concurrent.Executor,androidx.media2.MediaBrowser$BrowserCallback)>(r1, r0, r2, r3, $r6);

        return $r5;
    }

    androidx.media2.MediaBrowser$MediaBrowserImpl getImpl()
    {
        androidx.media2.MediaBrowser r0;
        androidx.media2.MediaController$MediaControllerImpl $r1;
        androidx.media2.MediaBrowser$MediaBrowserImpl $r2;

        r0 := @this: androidx.media2.MediaBrowser;

        $r1 = specialinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$MediaControllerImpl getImpl()>();

        $r2 = (androidx.media2.MediaBrowser$MediaBrowserImpl) $r1;

        return $r2;
    }

    androidx.media2.MediaBrowser$BrowserCallback getCallback()
    {
        androidx.media2.MediaBrowser r0;
        androidx.media2.MediaController$ControllerCallback $r1;
        androidx.media2.MediaBrowser$BrowserCallback $r2;

        r0 := @this: androidx.media2.MediaBrowser;

        $r1 = specialinvoke r0.<androidx.media2.MediaController: androidx.media2.MediaController$ControllerCallback getCallback()>();

        $r2 = (androidx.media2.MediaBrowser$BrowserCallback) $r1;

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture getLibraryRoot(androidx.media2.MediaLibraryService$LibraryParams)
    {
        androidx.media2.MediaBrowser r0;
        androidx.media2.MediaLibraryService$LibraryParams r1;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r2, $r4;
        androidx.media2.MediaBrowser$MediaBrowserImpl $r3;

        r0 := @this: androidx.media2.MediaBrowser;

        r1 := @parameter0: androidx.media2.MediaLibraryService$LibraryParams;

        $z0 = virtualinvoke r0.<androidx.media2.MediaBrowser: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<androidx.media2.MediaBrowser: androidx.media2.MediaBrowser$MediaBrowserImpl getImpl()>();

        $r4 = interfaceinvoke $r3.<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getLibraryRoot(androidx.media2.MediaLibraryService$LibraryParams)>(r1);

        return $r4;

     label1:
        $r2 = staticinvoke <androidx.media2.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture subscribe(java.lang.String, androidx.media2.MediaLibraryService$LibraryParams)
    {
        androidx.media2.MediaBrowser r0;
        java.lang.String r1;
        androidx.media2.MediaLibraryService$LibraryParams r2;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media2.MediaBrowser$MediaBrowserImpl $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.media2.MediaBrowser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media2.MediaLibraryService$LibraryParams;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("parentId shouldn\'t be empty");

        throw $r6;

     label1:
        $z1 = virtualinvoke r0.<androidx.media2.MediaBrowser: boolean isConnected()>();

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r0.<androidx.media2.MediaBrowser: androidx.media2.MediaBrowser$MediaBrowserImpl getImpl()>();

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture subscribe(java.lang.String,androidx.media2.MediaLibraryService$LibraryParams)>(r1, r2);

        return $r5;

     label2:
        $r3 = staticinvoke <androidx.media2.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture unsubscribe(java.lang.String)
    {
        androidx.media2.MediaBrowser r0;
        java.lang.String r1;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r2, $r4;
        androidx.media2.MediaBrowser$MediaBrowserImpl $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: androidx.media2.MediaBrowser;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("parentId shouldn\'t be empty");

        throw $r5;

     label1:
        $z1 = virtualinvoke r0.<androidx.media2.MediaBrowser: boolean isConnected()>();

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke r0.<androidx.media2.MediaBrowser: androidx.media2.MediaBrowser$MediaBrowserImpl getImpl()>();

        $r4 = interfaceinvoke $r3.<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture unsubscribe(java.lang.String)>(r1);

        return $r4;

     label2:
        $r2 = staticinvoke <androidx.media2.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture getChildren(java.lang.String, int, int, androidx.media2.MediaLibraryService$LibraryParams)
    {
        androidx.media2.MediaBrowser r0;
        java.lang.String r1;
        int i0, i1;
        androidx.media2.MediaLibraryService$LibraryParams r2;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media2.MediaBrowser$MediaBrowserImpl $r4;
        java.lang.IllegalArgumentException $r6, $r7, $r8;

        r0 := @this: androidx.media2.MediaBrowser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media2.MediaLibraryService$LibraryParams;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("parentId shouldn\'t be empty");

        throw $r8;

     label1:
        if i0 >= 0 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("page shouldn\'t be negative");

        throw $r7;

     label2:
        if i1 >= 1 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("pageSize shouldn\'t be less than 1");

        throw $r6;

     label3:
        $z1 = virtualinvoke r0.<androidx.media2.MediaBrowser: boolean isConnected()>();

        if $z1 == 0 goto label4;

        $r4 = virtualinvoke r0.<androidx.media2.MediaBrowser: androidx.media2.MediaBrowser$MediaBrowserImpl getImpl()>();

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getChildren(java.lang.String,int,int,androidx.media2.MediaLibraryService$LibraryParams)>(r1, i0, i1, r2);

        return $r5;

     label4:
        $r3 = staticinvoke <androidx.media2.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture getItem(java.lang.String)
    {
        androidx.media2.MediaBrowser r0;
        java.lang.String r1;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r2, $r4;
        androidx.media2.MediaBrowser$MediaBrowserImpl $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: androidx.media2.MediaBrowser;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mediaId shouldn\'t be empty");

        throw $r5;

     label1:
        $z1 = virtualinvoke r0.<androidx.media2.MediaBrowser: boolean isConnected()>();

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke r0.<androidx.media2.MediaBrowser: androidx.media2.MediaBrowser$MediaBrowserImpl getImpl()>();

        $r4 = interfaceinvoke $r3.<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getItem(java.lang.String)>(r1);

        return $r4;

     label2:
        $r2 = staticinvoke <androidx.media2.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture search(java.lang.String, androidx.media2.MediaLibraryService$LibraryParams)
    {
        androidx.media2.MediaBrowser r0;
        java.lang.String r1;
        androidx.media2.MediaLibraryService$LibraryParams r2;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media2.MediaBrowser$MediaBrowserImpl $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.media2.MediaBrowser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media2.MediaLibraryService$LibraryParams;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("query shouldn\'t be empty");

        throw $r6;

     label1:
        $z1 = virtualinvoke r0.<androidx.media2.MediaBrowser: boolean isConnected()>();

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r0.<androidx.media2.MediaBrowser: androidx.media2.MediaBrowser$MediaBrowserImpl getImpl()>();

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture search(java.lang.String,androidx.media2.MediaLibraryService$LibraryParams)>(r1, r2);

        return $r5;

     label2:
        $r3 = staticinvoke <androidx.media2.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture getSearchResult(java.lang.String, int, int, androidx.media2.MediaLibraryService$LibraryParams)
    {
        androidx.media2.MediaBrowser r0;
        java.lang.String r1;
        int i0, i1;
        androidx.media2.MediaLibraryService$LibraryParams r2;
        boolean $z0, $z1;
        com.google.common.util.concurrent.ListenableFuture $r3, $r5;
        androidx.media2.MediaBrowser$MediaBrowserImpl $r4;
        java.lang.IllegalArgumentException $r6, $r7, $r8;

        r0 := @this: androidx.media2.MediaBrowser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media2.MediaLibraryService$LibraryParams;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("query shouldn\'t be empty");

        throw $r8;

     label1:
        if i0 >= 0 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("page shouldn\'t be negative");

        throw $r7;

     label2:
        if i1 >= 1 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("pageSize shouldn\'t be less than 1");

        throw $r6;

     label3:
        $z1 = virtualinvoke r0.<androidx.media2.MediaBrowser: boolean isConnected()>();

        if $z1 == 0 goto label4;

        $r4 = virtualinvoke r0.<androidx.media2.MediaBrowser: androidx.media2.MediaBrowser$MediaBrowserImpl getImpl()>();

        $r5 = interfaceinvoke $r4.<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getSearchResult(java.lang.String,int,int,androidx.media2.MediaLibraryService$LibraryParams)>(r1, i0, i1, r2);

        return $r5;

     label4:
        $r3 = staticinvoke <androidx.media2.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    private static com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()
    {
        com.google.common.util.concurrent.ListenableFuture $r0;

        $r0 = staticinvoke <androidx.media2.MediaBrowser$BrowserResult: com.google.common.util.concurrent.ListenableFuture createFutureWithResult(int)>(-100);

        return $r0;
    }

    volatile androidx.media2.MediaController$ControllerCallback getCallback()
    {
        androidx.media2.MediaBrowser r0;
        androidx.media2.MediaBrowser$BrowserCallback $r1;

        r0 := @this: androidx.media2.MediaBrowser;

        $r1 = virtualinvoke r0.<androidx.media2.MediaBrowser: androidx.media2.MediaBrowser$BrowserCallback getCallback()>();

        return $r1;
    }

    volatile androidx.media2.MediaController$MediaControllerImpl getImpl()
    {
        androidx.media2.MediaBrowser r0;
        androidx.media2.MediaBrowser$MediaBrowserImpl $r1;

        r0 := @this: androidx.media2.MediaBrowser;

        $r1 = virtualinvoke r0.<androidx.media2.MediaBrowser: androidx.media2.MediaBrowser$MediaBrowserImpl getImpl()>();

        return $r1;
    }

    volatile androidx.media2.MediaController$MediaControllerImpl createImpl(android.content.Context, androidx.media2.SessionToken, java.util.concurrent.Executor, androidx.media2.MediaController$ControllerCallback)
    {
        androidx.media2.MediaBrowser r0;
        android.content.Context r1;
        androidx.media2.SessionToken r2;
        java.util.concurrent.Executor r3;
        androidx.media2.MediaController$ControllerCallback r4;
        androidx.media2.MediaBrowser$MediaBrowserImpl $r5;

        r0 := @this: androidx.media2.MediaBrowser;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.SessionToken;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: androidx.media2.MediaController$ControllerCallback;

        $r5 = virtualinvoke r0.<androidx.media2.MediaBrowser: androidx.media2.MediaBrowser$MediaBrowserImpl createImpl(android.content.Context,androidx.media2.SessionToken,java.util.concurrent.Executor,androidx.media2.MediaController$ControllerCallback)>(r1, r2, r3, r4);

        return $r5;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MediaBrowser", 3);

        <androidx.media2.MediaBrowser: boolean DEBUG> = $z0;

        return;
    }

androidx.media2.MediaBrowser$BrowserCallback
    public void <init>()
    {
        androidx.media2.MediaBrowser$BrowserCallback r0;

        r0 := @this: androidx.media2.MediaBrowser$BrowserCallback;

        specialinvoke r0.<androidx.media2.MediaController$ControllerCallback: void <init>()>();

        return;
    }

    public void onChildrenChanged(androidx.media2.MediaBrowser, java.lang.String, int, androidx.media2.MediaLibraryService$LibraryParams)
    {
        androidx.media2.MediaBrowser$BrowserCallback r0;
        androidx.media2.MediaBrowser r1;
        java.lang.String r2;
        int i0;
        androidx.media2.MediaLibraryService$LibraryParams r3;

        r0 := @this: androidx.media2.MediaBrowser$BrowserCallback;

        r1 := @parameter0: androidx.media2.MediaBrowser;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media2.MediaLibraryService$LibraryParams;

        return;
    }

    public void onSearchResultChanged(androidx.media2.MediaBrowser, java.lang.String, int, androidx.media2.MediaLibraryService$LibraryParams)
    {
        androidx.media2.MediaBrowser$BrowserCallback r0;
        androidx.media2.MediaBrowser r1;
        java.lang.String r2;
        int i0;
        androidx.media2.MediaLibraryService$LibraryParams r3;

        r0 := @this: androidx.media2.MediaBrowser$BrowserCallback;

        r1 := @parameter0: androidx.media2.MediaBrowser;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media2.MediaLibraryService$LibraryParams;

        return;
    }

androidx.media2.MediaBrowser$BrowserResult$ResultCode
androidx.media2.MediaBrowser$BrowserResult
<androidx.media2.MediaBrowser$BrowserResult: int mResultCode>
<androidx.media2.MediaBrowser$BrowserResult: long mCompletionTime>
<androidx.media2.MediaBrowser$BrowserResult: androidx.media2.MediaItem mItem>
<androidx.media2.MediaBrowser$BrowserResult: androidx.media2.MediaLibraryService$LibraryParams mParams>
<androidx.media2.MediaBrowser$BrowserResult: java.util.List mItemList>
<androidx.media2.MediaBrowser$BrowserResult: androidx.media2.ParcelImplListSlice mItemListSlice>
    void <init>()
    {
        androidx.media2.MediaBrowser$BrowserResult r0;

        r0 := @this: androidx.media2.MediaBrowser$BrowserResult;

        specialinvoke r0.<androidx.versionedparcelable.CustomVersionedParcelable: void <init>()>();

        return;
    }

    void <init>(int)
    {
        androidx.media2.MediaBrowser$BrowserResult r0;
        int i0;

        r0 := @this: androidx.media2.MediaBrowser$BrowserResult;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.media2.MediaBrowser$BrowserResult: void <init>(int,androidx.media2.MediaItem,java.util.List,androidx.media2.MediaLibraryService$LibraryParams)>(i0, null, null, null);

        return;
    }

    void <init>(int, androidx.media2.MediaItem, androidx.media2.MediaLibraryService$LibraryParams)
    {
        androidx.media2.MediaBrowser$BrowserResult r0;
        int i0;
        androidx.media2.MediaItem r1;
        androidx.media2.MediaLibraryService$LibraryParams r2;

        r0 := @this: androidx.media2.MediaBrowser$BrowserResult;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media2.MediaItem;

        r2 := @parameter2: androidx.media2.MediaLibraryService$LibraryParams;

        specialinvoke r0.<androidx.media2.MediaBrowser$BrowserResult: void <init>(int,androidx.media2.MediaItem,java.util.List,androidx.media2.MediaLibraryService$LibraryParams)>(i0, r1, null, r2);

        return;
    }

    void <init>(int, java.util.List, androidx.media2.MediaLibraryService$LibraryParams)
    {
        androidx.media2.MediaBrowser$BrowserResult r0;
        int i0;
        java.util.List r1;
        androidx.media2.MediaLibraryService$LibraryParams r2;

        r0 := @this: androidx.media2.MediaBrowser$BrowserResult;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: androidx.media2.MediaLibraryService$LibraryParams;

        specialinvoke r0.<androidx.media2.MediaBrowser$BrowserResult: void <init>(int,androidx.media2.MediaItem,java.util.List,androidx.media2.MediaLibraryService$LibraryParams)>(i0, null, r1, r2);

        return;
    }

    void <init>(int, androidx.media2.MediaItem, java.util.List, androidx.media2.MediaLibraryService$LibraryParams)
    {
        androidx.media2.MediaBrowser$BrowserResult r0;
        int i0;
        androidx.media2.MediaItem r1;
        java.util.List r2;
        androidx.media2.MediaLibraryService$LibraryParams r3;
        long $l1;

        r0 := @this: androidx.media2.MediaBrowser$BrowserResult;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media2.MediaItem;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: androidx.media2.MediaLibraryService$LibraryParams;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        specialinvoke r0.<androidx.media2.MediaBrowser$BrowserResult: void <init>(int,androidx.media2.MediaItem,java.util.List,androidx.media2.MediaLibraryService$LibraryParams,long)>(i0, r1, r2, r3, $l1);

        return;
    }

    void <init>(int, androidx.media2.MediaItem, java.util.List, androidx.media2.MediaLibraryService$LibraryParams, long)
    {
        androidx.media2.MediaBrowser$BrowserResult r0;
        int i0;
        androidx.media2.MediaItem r1;
        java.util.List r2;
        androidx.media2.MediaLibraryService$LibraryParams r3;
        long l1;

        r0 := @this: androidx.media2.MediaBrowser$BrowserResult;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media2.MediaItem;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: androidx.media2.MediaLibraryService$LibraryParams;

        l1 := @parameter4: long;

        specialinvoke r0.<androidx.versionedparcelable.CustomVersionedParcelable: void <init>()>();

        r0.<androidx.media2.MediaBrowser$BrowserResult: int mResultCode> = i0;

        r0.<androidx.media2.MediaBrowser$BrowserResult: androidx.media2.MediaItem mItem> = r1;

        r0.<androidx.media2.MediaBrowser$BrowserResult: java.util.List mItemList> = r2;

        r0.<androidx.media2.MediaBrowser$BrowserResult: androidx.media2.MediaLibraryService$LibraryParams mParams> = r3;

        r0.<androidx.media2.MediaBrowser$BrowserResult: long mCompletionTime> = l1;

        return;
    }

    static com.google.common.util.concurrent.ListenableFuture createFutureWithResult(int)
    {
        int i0;
        androidx.concurrent.futures.ResolvableFuture r0;
        androidx.media2.MediaBrowser$BrowserResult $r1;

        i0 := @parameter0: int;

        r0 = staticinvoke <androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()>();

        $r1 = new androidx.media2.MediaBrowser$BrowserResult;

        specialinvoke $r1.<androidx.media2.MediaBrowser$BrowserResult: void <init>(int)>(i0);

        virtualinvoke r0.<androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)>($r1);

        return r0;
    }

    static androidx.media2.MediaBrowser$BrowserResult 'from'(androidx.media2.MediaLibraryService$LibraryResult)
    {
        androidx.media2.MediaLibraryService$LibraryResult r0;
        androidx.media2.MediaBrowser$BrowserResult $r1;
        int $i0;
        androidx.media2.MediaItem $r2;
        java.util.List $r3;
        androidx.media2.MediaLibraryService$LibraryParams $r4;
        long $l1;

        r0 := @parameter0: androidx.media2.MediaLibraryService$LibraryResult;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new androidx.media2.MediaBrowser$BrowserResult;

        $i0 = virtualinvoke r0.<androidx.media2.MediaLibraryService$LibraryResult: int getResultCode()>();

        $r2 = virtualinvoke r0.<androidx.media2.MediaLibraryService$LibraryResult: androidx.media2.MediaItem getMediaItem()>();

        $r3 = virtualinvoke r0.<androidx.media2.MediaLibraryService$LibraryResult: java.util.List getMediaItems()>();

        $r4 = virtualinvoke r0.<androidx.media2.MediaLibraryService$LibraryResult: androidx.media2.MediaLibraryService$LibraryParams getLibraryParams()>();

        $l1 = virtualinvoke r0.<androidx.media2.MediaLibraryService$LibraryResult: long getCompletionTime()>();

        specialinvoke $r1.<androidx.media2.MediaBrowser$BrowserResult: void <init>(int,androidx.media2.MediaItem,java.util.List,androidx.media2.MediaLibraryService$LibraryParams,long)>($i0, $r2, $r3, $r4, $l1);

        return $r1;
    }

    public int getResultCode()
    {
        androidx.media2.MediaBrowser$BrowserResult r0;
        int $i0;

        r0 := @this: androidx.media2.MediaBrowser$BrowserResult;

        $i0 = r0.<androidx.media2.MediaBrowser$BrowserResult: int mResultCode>;

        return $i0;
    }

    public long getCompletionTime()
    {
        androidx.media2.MediaBrowser$BrowserResult r0;
        long $l0;

        r0 := @this: androidx.media2.MediaBrowser$BrowserResult;

        $l0 = r0.<androidx.media2.MediaBrowser$BrowserResult: long mCompletionTime>;

        return $l0;
    }

    public androidx.media2.MediaItem getMediaItem()
    {
        androidx.media2.MediaBrowser$BrowserResult r0;
        androidx.media2.MediaItem $r1;

        r0 := @this: androidx.media2.MediaBrowser$BrowserResult;

        $r1 = r0.<androidx.media2.MediaBrowser$BrowserResult: androidx.media2.MediaItem mItem>;

        return $r1;
    }

    public java.util.List getMediaItems()
    {
        androidx.media2.MediaBrowser$BrowserResult r0;
        java.util.List $r1;

        r0 := @this: androidx.media2.MediaBrowser$BrowserResult;

        $r1 = r0.<androidx.media2.MediaBrowser$BrowserResult: java.util.List mItemList>;

        return $r1;
    }

    public androidx.media2.MediaLibraryService$LibraryParams getLibraryParams()
    {
        androidx.media2.MediaBrowser$BrowserResult r0;
        androidx.media2.MediaLibraryService$LibraryParams $r1;

        r0 := @this: androidx.media2.MediaBrowser$BrowserResult;

        $r1 = r0.<androidx.media2.MediaBrowser$BrowserResult: androidx.media2.MediaLibraryService$LibraryParams mParams>;

        return $r1;
    }

    public void onPreParceling(boolean)
    {
        androidx.media2.MediaBrowser$BrowserResult r0;
        boolean z0;
        java.util.List $r1;
        androidx.media2.ParcelImplListSlice $r2;

        r0 := @this: androidx.media2.MediaBrowser$BrowserResult;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.media2.MediaBrowser$BrowserResult: java.util.List mItemList>;

        $r2 = staticinvoke <androidx.media2.MediaUtils: androidx.media2.ParcelImplListSlice convertMediaItemListToParcelImplListSlice(java.util.List)>($r1);

        r0.<androidx.media2.MediaBrowser$BrowserResult: androidx.media2.ParcelImplListSlice mItemListSlice> = $r2;

        return;
    }

    public void onPostParceling()
    {
        androidx.media2.MediaBrowser$BrowserResult r0;
        androidx.media2.ParcelImplListSlice $r1;
        java.util.List $r2;

        r0 := @this: androidx.media2.MediaBrowser$BrowserResult;

        $r1 = r0.<androidx.media2.MediaBrowser$BrowserResult: androidx.media2.ParcelImplListSlice mItemListSlice>;

        $r2 = staticinvoke <androidx.media2.MediaUtils: java.util.List convertParcelImplListSliceToMediaItemList(androidx.media2.ParcelImplListSlice)>($r1);

        r0.<androidx.media2.MediaBrowser$BrowserResult: java.util.List mItemList> = $r2;

        r0.<androidx.media2.MediaBrowser$BrowserResult: androidx.media2.ParcelImplListSlice mItemListSlice> = null;

        return;
    }

androidx.media2.MediaBrowser$MediaBrowserImpl
<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getLibraryRoot(androidx.media2.MediaLibraryService$LibraryParams)>
<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture subscribe(java.lang.String,androidx.media2.MediaLibraryService$LibraryParams)>
<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture unsubscribe(java.lang.String)>
<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getChildren(java.lang.String,int,int,androidx.media2.MediaLibraryService$LibraryParams)>
<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getItem(java.lang.String)>
<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture search(java.lang.String,androidx.media2.MediaLibraryService$LibraryParams)>
<androidx.media2.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getSearchResult(java.lang.String,int,int,androidx.media2.MediaLibraryService$LibraryParams)>
