androidx.health.connect.client.records.CyclingPedalingCadenceRecord
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Companion Companion>
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.Instant startTime>
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.ZoneOffset startZoneOffset>
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.Instant endTime>
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.ZoneOffset endZoneOffset>
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.util.List samples>
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.records.metadata.Metadata metadata>
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.lang.String TYPE>
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.lang.String RPM_FIELD>
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.aggregate.AggregateMetric RPM_AVG>
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.aggregate.AggregateMetric RPM_MIN>
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.aggregate.AggregateMetric RPM_MAX>
    public void <init>(java.time.Instant, java.time.ZoneOffset, java.time.Instant, java.time.ZoneOffset, java.util.List, androidx.health.connect.client.records.metadata.Metadata)
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord r0;
        java.time.Instant r1, r3;
        java.time.ZoneOffset r2, r4;
        java.util.List r5;
        androidx.health.connect.client.records.metadata.Metadata r6;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord;

        r1 := @parameter0: java.time.Instant;

        r2 := @parameter1: java.time.ZoneOffset;

        r3 := @parameter2: java.time.Instant;

        r4 := @parameter3: java.time.ZoneOffset;

        r5 := @parameter4: java.util.List;

        r6 := @parameter5: androidx.health.connect.client.records.metadata.Metadata;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "startTime");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "endTime");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "samples");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "metadata");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.Instant startTime> = r1;

        r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.ZoneOffset startZoneOffset> = r2;

        r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.Instant endTime> = r3;

        r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.ZoneOffset endZoneOffset> = r4;

        r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.util.List samples> = r5;

        r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.records.metadata.Metadata metadata> = r6;

        return;
    }

    public void <init>(java.time.Instant, java.time.ZoneOffset, java.time.Instant, java.time.ZoneOffset, java.util.List, androidx.health.connect.client.records.metadata.Metadata, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord r0;
        java.time.Instant r1, r3;
        java.time.ZoneOffset r2, r4;
        java.util.List r5;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r6;
        androidx.health.connect.client.records.metadata.Metadata r7;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord;

        r1 := @parameter0: java.time.Instant;

        r2 := @parameter1: java.time.ZoneOffset;

        r3 := @parameter2: java.time.Instant;

        r4 := @parameter3: java.time.ZoneOffset;

        r5 := @parameter4: java.util.List;

        r7 := @parameter5: androidx.health.connect.client.records.metadata.Metadata;

        i0 := @parameter6: int;

        r6 := @parameter7: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 32;

        if $i1 == 0 goto label1;

        r7 = <androidx.health.connect.client.records.metadata.Metadata: androidx.health.connect.client.records.metadata.Metadata EMPTY>;

     label1:
        specialinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: void <init>(java.time.Instant,java.time.ZoneOffset,java.time.Instant,java.time.ZoneOffset,java.util.List,androidx.health.connect.client.records.metadata.Metadata)>(r1, r2, r3, r4, r5, r7);

        return;
    }

    public java.time.Instant getStartTime()
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord r0;
        java.time.Instant $r1;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord;

        $r1 = r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.Instant startTime>;

        return $r1;
    }

    public java.time.ZoneOffset getStartZoneOffset()
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord r0;
        java.time.ZoneOffset $r1;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord;

        $r1 = r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.ZoneOffset startZoneOffset>;

        return $r1;
    }

    public java.time.Instant getEndTime()
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord r0;
        java.time.Instant $r1;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord;

        $r1 = r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.Instant endTime>;

        return $r1;
    }

    public java.time.ZoneOffset getEndZoneOffset()
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord r0;
        java.time.ZoneOffset $r1;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord;

        $r1 = r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.ZoneOffset endZoneOffset>;

        return $r1;
    }

    public java.util.List getSamples()
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord r0;
        java.util.List $r1;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord;

        $r1 = r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.util.List samples>;

        return $r1;
    }

    public androidx.health.connect.client.records.metadata.Metadata getMetadata()
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord r0;
        androidx.health.connect.client.records.metadata.Metadata $r1;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord;

        $r1 = r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.records.metadata.Metadata metadata>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord r0, $r3, $r6, $r9, $r12, $r15, $r18;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.time.Instant $r2, $r4, $r8, $r10;
        java.time.ZoneOffset $r5, $r7, $r11, $r13;
        java.util.List $r14, $r16;
        androidx.health.connect.client.records.metadata.Metadata $r17, $r19;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.health.connect.client.records.CyclingPedalingCadenceRecord;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.Instant getStartTime()>();

        $r3 = (androidx.health.connect.client.records.CyclingPedalingCadenceRecord) r1;

        $r4 = virtualinvoke $r3.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.Instant getStartTime()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r5 = virtualinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.ZoneOffset getStartZoneOffset()>();

        $r6 = (androidx.health.connect.client.records.CyclingPedalingCadenceRecord) r1;

        $r7 = virtualinvoke $r6.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.ZoneOffset getStartZoneOffset()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r7);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r8 = virtualinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.Instant getEndTime()>();

        $r9 = (androidx.health.connect.client.records.CyclingPedalingCadenceRecord) r1;

        $r10 = virtualinvoke $r9.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.Instant getEndTime()>();

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, $r10);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        $r11 = virtualinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.ZoneOffset getEndZoneOffset()>();

        $r12 = (androidx.health.connect.client.records.CyclingPedalingCadenceRecord) r1;

        $r13 = virtualinvoke $r12.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.ZoneOffset getEndZoneOffset()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r11, $r13);

        if $z4 != 0 goto label6;

        return 0;

     label6:
        $r14 = virtualinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.util.List getSamples()>();

        $r15 = (androidx.health.connect.client.records.CyclingPedalingCadenceRecord) r1;

        $r16 = virtualinvoke $r15.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.util.List getSamples()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r14, $r16);

        if $z5 != 0 goto label7;

        return 0;

     label7:
        $r17 = virtualinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $r18 = (androidx.health.connect.client.records.CyclingPedalingCadenceRecord) r1;

        $r19 = virtualinvoke $r18.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r17, $r19);

        if $z6 != 0 goto label8;

        return 0;

     label8:
        return 1;
    }

    public int hashCode()
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord r0;
        java.time.Instant $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10, i11, $i12, i13, i14, i15;
        java.time.ZoneOffset $r2, $r4;
        java.util.List $r5;
        androidx.health.connect.client.records.metadata.Metadata $r6;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord;

        $r1 = virtualinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.Instant getStartTime()>();

        i8 = virtualinvoke $r1.<java.time.Instant: int hashCode()>();

        $i0 = 31 * i8;

        $r2 = virtualinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.ZoneOffset getStartZoneOffset()>();

        if $r2 == null goto label1;

        $i9 = virtualinvoke $r2.<java.time.ZoneOffset: int hashCode()>();

        goto label2;

     label1:
        $i9 = 0;

     label2:
        i10 = $i0 + $i9;

        $i1 = 31 * i10;

        $r3 = virtualinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.Instant getEndTime()>();

        $i2 = virtualinvoke $r3.<java.time.Instant: int hashCode()>();

        i11 = $i1 + $i2;

        $i3 = 31 * i11;

        $r4 = virtualinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.time.ZoneOffset getEndZoneOffset()>();

        if $r4 == null goto label3;

        $i12 = virtualinvoke $r4.<java.time.ZoneOffset: int hashCode()>();

        goto label4;

     label3:
        $i12 = 0;

     label4:
        i13 = $i3 + $i12;

        $i4 = 31 * i13;

        $r5 = virtualinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: java.util.List getSamples()>();

        $i5 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

        i14 = $i4 + $i5;

        $i6 = 31 * i14;

        $r6 = virtualinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.records.metadata.Metadata getMetadata()>();

        $i7 = virtualinvoke $r6.<androidx.health.connect.client.records.metadata.Metadata: int hashCode()>();

        i15 = $i6 + $i7;

        return i15;
    }

    static void <clinit>()
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Companion $r0;
        androidx.health.connect.client.aggregate.AggregateMetric$AggregationType $r1, $r4, $r7;
        androidx.health.connect.client.aggregate.AggregateMetric$Companion $r2, $r5, $r8;
        androidx.health.connect.client.aggregate.AggregateMetric $r3, $r6, $r9;

        $r0 = new androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Companion;

        specialinvoke $r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Companion Companion> = $r0;

        $r2 = <androidx.health.connect.client.aggregate.AggregateMetric: androidx.health.connect.client.aggregate.AggregateMetric$Companion Companion>;

        $r1 = <androidx.health.connect.client.aggregate.AggregateMetric$AggregationType: androidx.health.connect.client.aggregate.AggregateMetric$AggregationType AVERAGE>;

        $r3 = virtualinvoke $r2.<androidx.health.connect.client.aggregate.AggregateMetric$Companion: androidx.health.connect.client.aggregate.AggregateMetric doubleMetric$health_connect_client_release(java.lang.String,androidx.health.connect.client.aggregate.AggregateMetric$AggregationType,java.lang.String)>("CyclingPedalingCadence", $r1, "rpm");

        <androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.aggregate.AggregateMetric RPM_AVG> = $r3;

        $r5 = <androidx.health.connect.client.aggregate.AggregateMetric: androidx.health.connect.client.aggregate.AggregateMetric$Companion Companion>;

        $r4 = <androidx.health.connect.client.aggregate.AggregateMetric$AggregationType: androidx.health.connect.client.aggregate.AggregateMetric$AggregationType MINIMUM>;

        $r6 = virtualinvoke $r5.<androidx.health.connect.client.aggregate.AggregateMetric$Companion: androidx.health.connect.client.aggregate.AggregateMetric doubleMetric$health_connect_client_release(java.lang.String,androidx.health.connect.client.aggregate.AggregateMetric$AggregationType,java.lang.String)>("CyclingPedalingCadence", $r4, "rpm");

        <androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.aggregate.AggregateMetric RPM_MIN> = $r6;

        $r8 = <androidx.health.connect.client.aggregate.AggregateMetric: androidx.health.connect.client.aggregate.AggregateMetric$Companion Companion>;

        $r7 = <androidx.health.connect.client.aggregate.AggregateMetric$AggregationType: androidx.health.connect.client.aggregate.AggregateMetric$AggregationType MAXIMUM>;

        $r9 = virtualinvoke $r8.<androidx.health.connect.client.aggregate.AggregateMetric$Companion: androidx.health.connect.client.aggregate.AggregateMetric doubleMetric$health_connect_client_release(java.lang.String,androidx.health.connect.client.aggregate.AggregateMetric$AggregationType,java.lang.String)>("CyclingPedalingCadence", $r7, "rpm");

        <androidx.health.connect.client.records.CyclingPedalingCadenceRecord: androidx.health.connect.client.aggregate.AggregateMetric RPM_MAX> = $r9;

        return;
    }

androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Companion
    private void <init>()
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Companion r0;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Companion: void <init>()>();

        return;
    }

androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample: java.time.Instant time>
<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample: double revolutionsPerMinute>
    public void <init>(java.time.Instant, double)
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample r0;
        java.time.Instant r1;
        double d0, $d1;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample;

        r1 := @parameter0: java.time.Instant;

        d0 := @parameter1: double;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "time");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample: java.time.Instant time> = r1;

        r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample: double revolutionsPerMinute> = d0;

        $d1 = r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample: double revolutionsPerMinute>;

        staticinvoke <androidx.health.connect.client.records.UtilsKt: void requireNonNegative(double,java.lang.String)>($d1, "revolutionsPerMinute");

        return;
    }

    public final java.time.Instant getTime()
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample r0;
        java.time.Instant $r1;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample;

        $r1 = r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample: java.time.Instant time>;

        return $r1;
    }

    public final double getRevolutionsPerMinute()
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample r0;
        double $d0;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample;

        $d0 = r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample: double revolutionsPerMinute>;

        return $d0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample r0, $r2, $r5;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.time.Instant $r3, $r4;
        double $d0, $d1;
        byte $b0;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample: java.time.Instant time>;

        $r2 = (androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample) r1;

        $r3 = $r2.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample: java.time.Instant time>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $d1 = r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample: double revolutionsPerMinute>;

        $r5 = (androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample) r1;

        $d0 = $r5.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample: double revolutionsPerMinute>;

        $b0 = $d1 cmpg $d0;

        if $b0 != 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        if $z2 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample r0;
        java.time.Instant $r1;
        double $d0;
        int $i0, $i1, i2, i3;

        r0 := @this: androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample;

        $r1 = r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample: java.time.Instant time>;

        i2 = virtualinvoke $r1.<java.time.Instant: int hashCode()>();

        $i0 = 31 * i2;

        $d0 = r0.<androidx.health.connect.client.records.CyclingPedalingCadenceRecord$Sample: double revolutionsPerMinute>;

        $i1 = staticinvoke <java.lang.Double: int hashCode(double)>($d0);

        i3 = $i0 + $i1;

        return i3;
    }

