androidx.appcompat.widget.ResourceManagerInternal
<androidx.appcompat.widget.ResourceManagerInternal: java.lang.String TAG>
<androidx.appcompat.widget.ResourceManagerInternal: boolean DEBUG>
<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode DEFAULT_MODE>
<androidx.appcompat.widget.ResourceManagerInternal: java.lang.String SKIP_DRAWABLE_TAG>
<androidx.appcompat.widget.ResourceManagerInternal: java.lang.String PLATFORM_VD_CLAZZ>
<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE>
<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE>
<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists>
<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates>
<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags>
<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches>
<androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue>
<androidx.appcompat.widget.ResourceManagerInternal: boolean mHasCheckedVectorDrawableSetup>
<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>
    public void <init>()
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        java.util.WeakHashMap $r1;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>(int)>(0);

        r0.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches> = $r1;

        return;
    }

    public static synchronized androidx.appcompat.widget.ResourceManagerInternal get()
    {
        androidx.appcompat.widget.ResourceManagerInternal $r0, $r1, $r2, $r3;

        $r0 = <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE>;

        if $r0 != null goto label1;

        $r2 = new androidx.appcompat.widget.ResourceManagerInternal;

        specialinvoke $r2.<androidx.appcompat.widget.ResourceManagerInternal: void <init>()>();

        <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE> = $r2;

        $r3 = <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE>;

        staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)>($r3);

     label1:
        $r1 = <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE>;

        return $r1;
    }

    private static void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int $i0;
        androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate $r1;
        androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate $r2;
        androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate $r3;
        androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate $r4;

        r0 := @parameter0: androidx.appcompat.widget.ResourceManagerInternal;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 24 goto label1;

        $r1 = new androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate;

        specialinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: void <init>()>();

        specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>("vector", $r1);

        $r2 = new androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate;

        specialinvoke $r2.<androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: void <init>()>();

        specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>("animated-vector", $r2);

        $r3 = new androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate;

        specialinvoke $r3.<androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: void <init>()>();

        specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>("animated-selector", $r3);

        $r4 = new androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate;

        specialinvoke $r4.<androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: void <init>()>();

        specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)>("drawable", $r4);

     label1:
        return;
    }

    public synchronized void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks r1;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks;

        r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks> = r1;

        return;
    }

    public synchronized android.graphics.drawable.Drawable getDrawable(android.content.Context, int)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        int i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)>(r1, i0, 0);

        return $r2;
    }

    synchronized android.graphics.drawable.Drawable getDrawable(android.content.Context, int, boolean)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        int i0;
        boolean z0;
        android.graphics.drawable.Drawable r2;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)>(r1);

        r2 = specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>(r1, i0);

        if r2 != null goto label1;

        r2 = specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)>(r1, i0);

     label1:
        if r2 != null goto label2;

        r2 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>(r1, i0);

     label2:
        if r2 == null goto label3;

        r2 = specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>(r1, i0, z0, r2);

     label3:
        if r2 == null goto label4;

        staticinvoke <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)>(r2);

     label4:
        return r2;
    }

    public synchronized void onConfigurationChanged(android.content.Context)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        androidx.collection.LongSparseArray r2;
        java.util.WeakHashMap $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        $r3 = r0.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches>;

        $r4 = virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.collection.LongSparseArray) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<androidx.collection.LongSparseArray: void clear()>();

     label1:
        return;
    }

    private static long createCacheKey(android.util.TypedValue)
    {
        android.util.TypedValue r0;
        int $i0, $i2;
        long $l1, $l3, $l4, $l5;

        r0 := @parameter0: android.util.TypedValue;

        $i0 = r0.<android.util.TypedValue: int assetCookie>;

        $l1 = (long) $i0;

        $l4 = $l1 << 32;

        $i2 = r0.<android.util.TypedValue: int data>;

        $l3 = (long) $i2;

        $l5 = $l4 | $l3;

        return $l5;
    }

    private android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context, int)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        int i0, $i2;
        android.util.TypedValue r2, $r3, $r7;
        long l1;
        android.content.res.Resources $r4;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $r5, $r6;
        android.graphics.drawable.Drawable r8, $r9, r10;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue>;

        if $r3 != null goto label1;

        $r7 = new android.util.TypedValue;

        specialinvoke $r7.<android.util.TypedValue: void <init>()>();

        r0.<androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue> = $r7;

     label1:
        r2 = r0.<androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue>;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke $r4.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r2, 1);

        l1 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)>(r2);

        r8 = specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>(r1, l1);

        if r8 == null goto label2;

        return r8;

     label2:
        $r5 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        if $r5 != null goto label3;

        $r9 = null;

        goto label4;

     label3:
        $r6 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        $r9 = interfaceinvoke $r6.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)>(r0, r1, i0);

     label4:
        r10 = $r9;

        if r10 == null goto label5;

        $i2 = r2.<android.util.TypedValue: int changingConfigurations>;

        virtualinvoke r10.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i2);

        specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>(r1, l1, r10);

     label5:
        return r10;
    }

    private android.graphics.drawable.Drawable tintDrawable(android.content.Context, int, boolean, android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        int i0;
        boolean z0, $z1, $z2, z3;
        android.content.res.ColorStateList r2;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $r3, $r4;
        android.graphics.drawable.Drawable r5;
        android.graphics.PorterDuff$Mode r6;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r5 := @parameter3: android.graphics.drawable.Drawable;

        r2 = virtualinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)>(r1, i0);

        if r2 == null goto label3;

        $z2 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>(r5);

        if $z2 == 0 goto label1;

        r5 = virtualinvoke r5.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label1:
        r5 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>(r5);

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>(r5, r2);

        r6 = virtualinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode getTintMode(int)>(i0);

        if r6 == null goto label2;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>(r5, r6);

     label2:
        goto label5;

     label3:
        $r3 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        if $r3 == null goto label4;

        $r4 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        $z1 = interfaceinvoke $r4.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)>(r1, i0, r5);

        if $z1 == 0 goto label4;

        goto label5;

     label4:
        z3 = virtualinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)>(r1, i0, r5);

        if z3 != 0 goto label5;

        if z0 == 0 goto label5;

        r5 = null;

     label5:
        return r5;
    }

    private android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context, int)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        int i0, i2, $i3, $i4;
        android.content.res.Resources r2;
        long l1;
        android.util.AttributeSet r3;
        java.lang.String r4, $r14, $r23, r27;
        androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate r5;
        androidx.collection.SimpleArrayMap $r6, $r7, $r16, $r24;
        boolean $z0, $z1, $z2, $z3;
        androidx.collection.SparseArrayCompat $r8, $r9, $r12, $r15, $r21;
        android.util.TypedValue $r10, $r20, r28;
        java.lang.CharSequence $r11, $r13;
        java.lang.Object $r17, $r22, $r25;
        android.content.res.Resources$Theme $r18;
        org.xmlpull.v1.XmlPullParserException $r19;
        java.lang.Throwable $r26, r31;
        android.graphics.drawable.Drawable r29;
        android.content.res.XmlResourceParser r30;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r6 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates>;

        if $r6 == null goto label16;

        $r7 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates>;

        $z0 = virtualinvoke $r7.<androidx.collection.SimpleArrayMap: boolean isEmpty()>();

        if $z0 != 0 goto label16;

        $r8 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags>;

        if $r8 == null goto label03;

        $r21 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags>;

        $r22 = virtualinvoke $r21.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>(i0);

        r27 = (java.lang.String) $r22;

        $r23 = "appcompat_skip_skip";

        $z3 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r27);

        if $z3 != 0 goto label01;

        if r27 == null goto label02;

        $r24 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates>;

        $r25 = virtualinvoke $r24.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>(r27);

        if $r25 != null goto label02;

     label01:
        return null;

     label02:
        goto label04;

     label03:
        $r9 = new androidx.collection.SparseArrayCompat;

        specialinvoke $r9.<androidx.collection.SparseArrayCompat: void <init>()>();

        r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags> = $r9;

     label04:
        $r10 = r0.<androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue>;

        if $r10 != null goto label05;

        $r20 = new android.util.TypedValue;

        specialinvoke $r20.<android.util.TypedValue: void <init>()>();

        r0.<androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue> = $r20;

     label05:
        r28 = r0.<androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue>;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke r2.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(i0, r28, 1);

        l1 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)>(r28);

        r29 = specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>(r1, l1);

        if r29 == null goto label06;

        return r29;

     label06:
        $r11 = r28.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r11 == null goto label14;

        $r13 = r28.<android.util.TypedValue: java.lang.CharSequence string>;

        $r14 = interfaceinvoke $r13.<java.lang.CharSequence: java.lang.String toString()>();

        $z1 = virtualinvoke $r14.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z1 == 0 goto label14;

     label07:
        r30 = virtualinvoke r2.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r30);

     label08:
        $i3 = interfaceinvoke r30.<org.xmlpull.v1.XmlPullParser: int next()>();

        i2 = $i3;

        if $i3 == 2 goto label09;

        if i2 == 1 goto label09;

        goto label08;

     label09:
        if i2 == 2 goto label10;

        $r19 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r19.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r19;

     label10:
        r4 = interfaceinvoke r30.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r15 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags>;

        virtualinvoke $r15.<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>(i0, r4);

        $r16 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates>;

        $r17 = virtualinvoke $r16.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) $r17;

        if r5 == null goto label11;

        $r18 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        r29 = interfaceinvoke r5.<androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, r30, r3, $r18);

     label11:
        if r29 == null goto label12;

        $i4 = r28.<android.util.TypedValue: int changingConfigurations>;

        virtualinvoke r29.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i4);

        $z2 = specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>(r1, l1, r29);

        if $z2 == 0 goto label12;

     label12:
        goto label14;

     label13:
        $r26 := @caughtexception;

        r31 = $r26;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourceManagerInternal", "Exception while inflating drawable", r31);

     label14:
        if r29 != null goto label15;

        $r12 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags>;

        virtualinvoke $r12.<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>(i0, "appcompat_skip_skip");

     label15:
        return r29;

     label16:
        return null;

        catch java.lang.Exception from label07 to label12 with label13;
    }

    private synchronized android.graphics.drawable.Drawable getCachedDrawable(android.content.Context, long)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        long l0;
        androidx.collection.LongSparseArray r2;
        java.lang.ref.WeakReference r3;
        android.graphics.drawable.Drawable$ConstantState r4;
        java.util.WeakHashMap $r5;
        java.lang.Object $r6, $r7, $r8;
        android.content.res.Resources $r9;
        android.graphics.drawable.Drawable $r10;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r5 = r0.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches>;

        $r6 = virtualinvoke $r5.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.collection.LongSparseArray) $r6;

        if r2 != null goto label1;

        return null;

     label1:
        $r7 = virtualinvoke r2.<androidx.collection.LongSparseArray: java.lang.Object get(long)>(l0);

        r3 = (java.lang.ref.WeakReference) $r7;

        if r3 == null goto label3;

        $r8 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.graphics.drawable.Drawable$ConstantState) $r8;

        if r4 == null goto label2;

        $r9 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke r4.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r9);

        return $r10;

     label2:
        virtualinvoke r2.<androidx.collection.LongSparseArray: void remove(long)>(l0);

     label3:
        return null;
    }

    private synchronized boolean addDrawableToCache(android.content.Context, long, android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        long l0;
        android.graphics.drawable.Drawable r2;
        android.graphics.drawable.Drawable$ConstantState r3;
        java.util.WeakHashMap $r4, $r8;
        java.lang.Object $r5;
        java.lang.ref.WeakReference $r6;
        androidx.collection.LongSparseArray $r7, r10;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r2 := @parameter2: android.graphics.drawable.Drawable;

        r3 = virtualinvoke r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if r3 == null goto label2;

        $r4 = r0.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches>;

        $r5 = virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (androidx.collection.LongSparseArray) $r5;

        if r10 != null goto label1;

        $r7 = new androidx.collection.LongSparseArray;

        specialinvoke $r7.<androidx.collection.LongSparseArray: void <init>()>();

        r10 = $r7;

        $r8 = r0.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches>;

        virtualinvoke $r8.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r10);

     label1:
        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r3);

        virtualinvoke r10.<androidx.collection.LongSparseArray: void put(long,java.lang.Object)>(l0, $r6);

        return 1;

     label2:
        return 0;
    }

    synchronized android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context, androidx.appcompat.widget.VectorEnabledTintResources, int)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        androidx.appcompat.widget.VectorEnabledTintResources r2;
        int i0;
        android.graphics.drawable.Drawable $r3, r4;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.appcompat.widget.VectorEnabledTintResources;

        i0 := @parameter2: int;

        r4 = specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>(r1, i0);

        if r4 != null goto label1;

        r4 = virtualinvoke r2.<androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawableCanonical(int)>(i0);

     label1:
        if r4 == null goto label2;

        $r3 = specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>(r1, i0, 0, r4);

        return $r3;

     label2:
        return null;
    }

    boolean tintDrawableUsingColorFilter(android.content.Context, int, android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        int i0;
        android.graphics.drawable.Drawable r2;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.graphics.drawable.Drawable;

        $r3 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        if $r3 == null goto label1;

        $r4 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        $z0 = interfaceinvoke $r4.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)>(r1, i0, r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void addDelegate(java.lang.String, androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        java.lang.String r1;
        androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate r2;
        androidx.collection.SimpleArrayMap $r3, $r4, $r6;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate;

        $r3 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates>;

        if $r3 != null goto label1;

        $r6 = new androidx.collection.SimpleArrayMap;

        specialinvoke $r6.<androidx.collection.SimpleArrayMap: void <init>()>();

        r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates> = $r6;

     label1:
        $r4 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates>;

        virtualinvoke $r4.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    android.graphics.PorterDuff$Mode getTintMode(int)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int i0;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $r1, $r2;
        android.graphics.PorterDuff$Mode $r3;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        $r3 = interfaceinvoke $r2.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)>(i0);

     label2:
        return $r3;
    }

    synchronized android.content.res.ColorStateList getTintList(android.content.Context, int)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        int i0;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $r2, $r3;
        android.content.res.ColorStateList r4, $r5;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r4 = specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)>(r1, i0);

        if r4 != null goto label3;

        $r2 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        if $r2 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r3 = r0.<androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks>;

        $r5 = interfaceinvoke $r3.<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)>(r1, i0);

     label2:
        r4 = $r5;

        if r4 == null goto label3;

        specialinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)>(r1, i0, r4);

     label3:
        return r4;
    }

    private android.content.res.ColorStateList getTintListFromCache(android.content.Context, int)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        int i0;
        androidx.collection.SparseArrayCompat r2;
        java.util.WeakHashMap $r3, $r4;
        java.lang.Object $r5, $r6;
        android.content.res.ColorStateList $r7;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r3 = r0.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists>;

        if $r3 == null goto label3;

        $r4 = r0.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists>;

        $r5 = virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (androidx.collection.SparseArrayCompat) $r5;

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>(i0);

        $r7 = (android.content.res.ColorStateList) $r6;

        goto label2;

     label1:
        $r7 = null;

     label2:
        return $r7;

     label3:
        return null;
    }

    private void addTintListToCache(android.content.Context, int, android.content.res.ColorStateList)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        int i0;
        android.content.res.ColorStateList r2;
        java.util.WeakHashMap $r3, $r4, $r7, $r9;
        java.lang.Object $r5;
        androidx.collection.SparseArrayCompat $r6, r10;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.res.ColorStateList;

        $r3 = r0.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists>;

        if $r3 != null goto label1;

        $r9 = new java.util.WeakHashMap;

        specialinvoke $r9.<java.util.WeakHashMap: void <init>()>();

        r0.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists> = $r9;

     label1:
        $r4 = r0.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists>;

        $r5 = virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (androidx.collection.SparseArrayCompat) $r5;

        if r10 != null goto label2;

        $r6 = new androidx.collection.SparseArrayCompat;

        specialinvoke $r6.<androidx.collection.SparseArrayCompat: void <init>()>();

        r10 = $r6;

        $r7 = r0.<androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists>;

        virtualinvoke $r7.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r10);

     label2:
        virtualinvoke r10.<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>(i0, r2);

        return;
    }

    static void tintDrawable(android.graphics.drawable.Drawable, androidx.appcompat.widget.TintInfo, int[])
    {
        android.graphics.drawable.Drawable r0, $r5;
        androidx.appcompat.widget.TintInfo r1;
        int[] r2, r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z8, $z9, z10, $z11;
        int $i0;
        android.content.res.ColorStateList $r7;
        android.graphics.PorterDuff$Mode $r8;
        android.graphics.PorterDuffColorFilter $r9;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        r1 := @parameter1: androidx.appcompat.widget.TintInfo;

        r2 := @parameter2: int[];

        r3 = virtualinvoke r0.<android.graphics.drawable.Drawable: int[] getState()>();

        z8 = 0;

        $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>(r0);

        if $z0 == 0 goto label03;

        $r5 = virtualinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r5 != r0 goto label01;

        $z9 = 1;

        goto label02;

     label01:
        $z9 = 0;

     label02:
        z10 = $z9;

        if z10 != 0 goto label03;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ResourceManagerInternal", "Mutated drawable is not the same instance as the input.");

        return;

     label03:
        $z1 = r0 instanceof android.graphics.drawable.LayerDrawable;

        if $z1 == 0 goto label04;

        $z5 = virtualinvoke r0.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z5 == 0 goto label04;

        $r4 = newarray (int)[0];

        virtualinvoke r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r4);

        virtualinvoke r0.<android.graphics.drawable.Drawable: boolean setState(int[])>(r3);

     label04:
        $z11 = r1.<androidx.appcompat.widget.TintInfo: boolean mHasTintList>;

        if $z11 != 0 goto label05;

        $z4 = r1.<androidx.appcompat.widget.TintInfo: boolean mHasTintMode>;

        if $z4 == 0 goto label10;

     label05:
        $z2 = r1.<androidx.appcompat.widget.TintInfo: boolean mHasTintList>;

        if $z2 == 0 goto label06;

        $r7 = r1.<androidx.appcompat.widget.TintInfo: android.content.res.ColorStateList mTintList>;

        goto label07;

     label06:
        $r7 = null;

     label07:
        $z3 = r1.<androidx.appcompat.widget.TintInfo: boolean mHasTintMode>;

        if $z3 == 0 goto label08;

        $r8 = r1.<androidx.appcompat.widget.TintInfo: android.graphics.PorterDuff$Mode mTintMode>;

        goto label09;

     label08:
        $r8 = <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

     label09:
        $r9 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])>($r7, $r8, r2);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r9);

        goto label11;

     label10:
        virtualinvoke r0.<android.graphics.drawable.Drawable: void clearColorFilter()>();

     label11:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 23 goto label12;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

     label12:
        return;
    }

    private static android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList, android.graphics.PorterDuff$Mode, int[])
    {
        android.content.res.ColorStateList r0;
        android.graphics.PorterDuff$Mode r1;
        int[] r2;
        int i0;
        android.graphics.PorterDuffColorFilter $r3;

        r0 := @parameter0: android.content.res.ColorStateList;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        r2 := @parameter2: int[];

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        i0 = virtualinvoke r0.<android.content.res.ColorStateList: int getColorForState(int[],int)>(r2, 0);

        $r3 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>(i0, r1);

        return $r3;
    }

    public static synchronized android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        int i0;
        android.graphics.PorterDuff$Mode r0;
        androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache $r1, $r3;
        android.graphics.PorterDuffColorFilter $r2, r5;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.PorterDuff$Mode;

        $r1 = <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE>;

        r5 = virtualinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)>(i0, r0);

        if r5 != null goto label1;

        $r2 = new android.graphics.PorterDuffColorFilter;

        specialinvoke $r2.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>(i0, r0);

        r5 = $r2;

        $r3 = <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE>;

        virtualinvoke $r3.<androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)>(i0, r0, r5);

     label1:
        return r5;
    }

    private void checkVectorDrawableSetup(android.content.Context)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        android.content.Context r1;
        android.graphics.drawable.Drawable r2;
        boolean $z0, $z1;
        int $i0;
        java.lang.IllegalStateException $r3;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal;

        r1 := @parameter0: android.content.Context;

        $z0 = r0.<androidx.appcompat.widget.ResourceManagerInternal: boolean mHasCheckedVectorDrawableSetup>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<androidx.appcompat.widget.ResourceManagerInternal: boolean mHasCheckedVectorDrawableSetup> = 1;

        $i0 = <androidx.appcompat.resources.R$drawable: int abc_vector_test>;

        r2 = virtualinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>(r1, $i0);

        if r2 == null goto label2;

        $z1 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)>(r2);

        if $z1 != 0 goto label3;

     label2:
        r0.<androidx.appcompat.widget.ResourceManagerInternal: boolean mHasCheckedVectorDrawableSetup> = 0;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This app has been built with an incorrect configuration. Please configure your build for VectorDrawableCompat.");

        throw $r3;

     label3:
        return;
    }

    private static boolean isVectorDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r3;
        java.lang.Class $r2;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = r0 instanceof androidx.vectordrawable.graphics.drawable.VectorDrawableCompat;

        if $z0 != 0 goto label1;

        $r1 = "android.graphics.drawable.VectorDrawable";

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    static void <clinit>()
    {
        android.graphics.PorterDuff$Mode $r0;
        androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache $r1;

        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        <androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode DEFAULT_MODE> = $r0;

        $r1 = new androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache;

        specialinvoke $r1.<androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: void <init>(int)>(6);

        <androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE> = $r1;

        return;
    }

androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate
    void <init>()
    {
        androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate r0;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.graphics.drawable.Drawable createFromXmlInner(android.content.Context, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme)
    {
        androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate r0;
        android.content.Context r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        java.lang.Throwable r5, $r8;
        android.content.res.Resources $r6;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat $r7;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

     label1:
        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = staticinvoke <androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, $r6, r2, r3, r4);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AsldcInflateDelegate", "Exception while inflating <animated-selector>", r5);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate
    void <init>()
    {
        androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate r0;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.graphics.drawable.Drawable createFromXmlInner(android.content.Context, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme)
    {
        androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate r0;
        android.content.Context r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        java.lang.Throwable r5, $r8;
        android.content.res.Resources $r6;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat $r7;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

     label1:
        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = staticinvoke <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r1, $r6, r2, r3, r4);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AvdcInflateDelegate", "Exception while inflating <animated-vector>", r5);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache
    public void <init>(int)
    {
        androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache r0;
        int i0;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.collection.LruCache: void <init>(int)>(i0);

        return;
    }

    android.graphics.PorterDuffColorFilter get(int, android.graphics.PorterDuff$Mode)
    {
        androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache r0;
        int i0, $i1;
        android.graphics.PorterDuff$Mode r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        android.graphics.PorterDuffColorFilter $r4;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $i1 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)>(i0, r1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r3 = virtualinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (android.graphics.PorterDuffColorFilter) $r3;

        return $r4;
    }

    android.graphics.PorterDuffColorFilter put(int, android.graphics.PorterDuff$Mode, android.graphics.PorterDuffColorFilter)
    {
        androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache r0;
        int i0, $i1;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.PorterDuffColorFilter r2, $r5;
        java.lang.Integer $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        r2 := @parameter2: android.graphics.PorterDuffColorFilter;

        $i1 = staticinvoke <androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)>(i0, r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = virtualinvoke r0.<androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2);

        $r5 = (android.graphics.PorterDuffColorFilter) $r4;

        return $r5;
    }

    private static int generateCacheKey(int, android.graphics.PorterDuff$Mode)
    {
        int i0, $i1, $i2, $i3, i5, i6;
        android.graphics.PorterDuff$Mode r0;
        byte b4;

        i0 := @parameter0: int;

        r0 := @parameter1: android.graphics.PorterDuff$Mode;

        b4 = 1;

        $i1 = 31 * b4;

        i5 = $i1 + i0;

        $i2 = 31 * i5;

        $i3 = virtualinvoke r0.<android.graphics.PorterDuff$Mode: int hashCode()>();

        i6 = $i2 + $i3;

        return i6;
    }

androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate
    void <init>()
    {
        androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate r0;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.graphics.drawable.Drawable createFromXmlInner(android.content.Context, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme)
    {
        androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate r0;
        android.content.Context r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        java.lang.String r5;
        android.graphics.drawable.Drawable r6;
        java.lang.Class $r7, $r9, r18;
        java.lang.ClassLoader $r8;
        java.lang.Class[] $r10;
        java.lang.reflect.Constructor $r11;
        java.lang.Object[] $r12;
        java.lang.Object $r13;
        int $i0;
        android.content.res.Resources $r14, $r15;
        java.lang.Throwable $r17, r19;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

        r5 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getClassAttribute()>();

        if r5 == null goto label5;

     label1:
        $r7 = class "Landroidx/appcompat/widget/ResourceManagerInternal$DrawableDelegate;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r9 = virtualinvoke $r8.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r5);

        r18 = virtualinvoke $r9.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Landroid/graphics/drawable/Drawable;");

        $r10 = newarray (java.lang.Class)[0];

        $r11 = virtualinvoke r18.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r10);

        $r12 = newarray (java.lang.Object)[0];

        $r13 = virtualinvoke $r11.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r12);

        r6 = (android.graphics.drawable.Drawable) $r13;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label2;

        $r15 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        staticinvoke <androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r6, $r15, r2, r3, r4);

        goto label3;

     label2:
        $r14 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke r6.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r14, r2, r3);

     label3:
        return r6;

     label4:
        $r17 := @caughtexception;

        r19 = $r17;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableDelegate", "Exception while inflating <drawable>", r19);

        return null;

     label5:
        return null;

        catch java.lang.Exception from label1 to label3 with label4;
    }

androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate
<androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks
<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)>
<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)>
<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)>
<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)>
<androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)>
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate
    void <init>()
    {
        androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate r0;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.graphics.drawable.Drawable createFromXmlInner(android.content.Context, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme)
    {
        androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate r0;
        android.content.Context r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        java.lang.Throwable r5, $r8;
        android.content.res.Resources $r6;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r7;

        r0 := @this: androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 := @parameter3: android.content.res.Resources$Theme;

     label1:
        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r6, r2, r3, r4);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("VdcInflateDelegate", "Exception while inflating <vector>", r5);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

