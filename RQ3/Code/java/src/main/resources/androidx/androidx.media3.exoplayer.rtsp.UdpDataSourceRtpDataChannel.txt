androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel
<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: java.lang.String DEFAULT_UDP_TRANSPORT_FORMAT>
<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: androidx.media3.datasource.UdpDataSource dataSource>
<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel rtcpChannel>
    public void <init>(long)
    {
        androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel r0;
        long l0;
        androidx.media3.datasource.UdpDataSource $r1;
        int $i1;

        r0 := @this: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.media3.datasource.UdpDataSource;

        $i1 = staticinvoke <com.google.common.primitives.Ints: int checkedCast(long)>(l0);

        specialinvoke $r1.<androidx.media3.datasource.UdpDataSource: void <init>(int,int)>(2000, $i1);

        r0.<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: androidx.media3.datasource.UdpDataSource dataSource> = $r1;

        return;
    }

    public java.lang.String getTransport()
    {
        androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        java.lang.Integer $r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel;

        i0 = virtualinvoke r0.<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: int getLocalPort()>();

        if i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $r1 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $i1 = i0 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $r4 = staticinvoke <androidx.media3.common.util.Util: java.lang.String formatInvariant(java.lang.String,java.lang.Object[])>("RTP/AVP;unicast;client_port=%d-%d", $r1);

        return $r4;
    }

    public int getLocalPort()
    {
        androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel r0;
        int i0, $i1;
        androidx.media3.datasource.UdpDataSource $r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel;

        $r1 = r0.<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: androidx.media3.datasource.UdpDataSource dataSource>;

        i0 = virtualinvoke $r1.<androidx.media3.datasource.UdpDataSource: int getLocalPort()>();

        if i0 != -1 goto label1;

        $i1 = -1;

        goto label2;

     label1:
        $i1 = i0;

     label2:
        return $i1;
    }

    public androidx.media3.exoplayer.rtsp.RtspMessageChannel$InterleavedBinaryDataListener getInterleavedBinaryDataListener()
    {
        androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel r0;

        r0 := @this: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel;

        return null;
    }

    public void addTransferListener(androidx.media3.datasource.TransferListener)
    {
        androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel r0;
        androidx.media3.datasource.TransferListener r1;
        androidx.media3.datasource.UdpDataSource $r2;

        r0 := @this: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel;

        r1 := @parameter0: androidx.media3.datasource.TransferListener;

        $r2 = r0.<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: androidx.media3.datasource.UdpDataSource dataSource>;

        virtualinvoke $r2.<androidx.media3.datasource.UdpDataSource: void addTransferListener(androidx.media3.datasource.TransferListener)>(r1);

        return;
    }

    public long open(androidx.media3.datasource.DataSpec) throws java.io.IOException
    {
        androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel r0;
        androidx.media3.datasource.DataSpec r1;
        androidx.media3.datasource.UdpDataSource $r2;
        long $l0;

        r0 := @this: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel;

        r1 := @parameter0: androidx.media3.datasource.DataSpec;

        $r2 = r0.<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: androidx.media3.datasource.UdpDataSource dataSource>;

        $l0 = virtualinvoke $r2.<androidx.media3.datasource.UdpDataSource: long open(androidx.media3.datasource.DataSpec)>(r1);

        return $l0;
    }

    public android.net.Uri getUri()
    {
        androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel r0;
        androidx.media3.datasource.UdpDataSource $r1;
        android.net.Uri $r2;

        r0 := @this: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel;

        $r1 = r0.<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: androidx.media3.datasource.UdpDataSource dataSource>;

        $r2 = virtualinvoke $r1.<androidx.media3.datasource.UdpDataSource: android.net.Uri getUri()>();

        return $r2;
    }

    public void close()
    {
        androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel r0, $r2, $r3;
        androidx.media3.datasource.UdpDataSource $r1;

        r0 := @this: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel;

        $r1 = r0.<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: androidx.media3.datasource.UdpDataSource dataSource>;

        virtualinvoke $r1.<androidx.media3.datasource.UdpDataSource: void close()>();

        $r2 = r0.<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel rtcpChannel>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel rtcpChannel>;

        virtualinvoke $r3.<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: void close()>();

     label1:
        return;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel r0;
        byte[] r1;
        int i0, i1, $i2, $i3;
        java.lang.Throwable r2, $r4;
        androidx.media3.datasource.UdpDataSource $r3;

        r0 := @this: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: androidx.media3.datasource.UdpDataSource dataSource>;

        $i2 = virtualinvoke $r3.<androidx.media3.datasource.UdpDataSource: int read(byte[],int,int)>(r1, i0, i1);

     label2:
        return $i2;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $i3 = r2.<androidx.media3.datasource.UdpDataSource$UdpDataSourceException: int reason>;

        if $i3 != 2002 goto label4;

        return -1;

     label4:
        throw r2;

        catch androidx.media3.datasource.UdpDataSource$UdpDataSourceException from label1 to label2 with label3;
    }

    public void setRtcpChannel(androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel)
    {
        androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel r0, r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel;

        r1 := @parameter0: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel;

        if r0 == r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        r0.<androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel: androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel rtcpChannel> = r1;

        return;
    }

