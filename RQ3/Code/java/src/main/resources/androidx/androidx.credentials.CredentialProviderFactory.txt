androidx.credentials.CredentialProviderFactory
<androidx.credentials.CredentialProviderFactory: androidx.credentials.CredentialProviderFactory$Companion Companion>
<androidx.credentials.CredentialProviderFactory: java.lang.String TAG>
<androidx.credentials.CredentialProviderFactory: int MAX_CRED_MAN_PRE_FRAMEWORK_API_LEVEL>
<androidx.credentials.CredentialProviderFactory: java.lang.String CREDENTIAL_PROVIDER_KEY>
    public void <init>()
    {
        androidx.credentials.CredentialProviderFactory r0;

        r0 := @this: androidx.credentials.CredentialProviderFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.credentials.CredentialProviderFactory$Companion $r0;

        $r0 = new androidx.credentials.CredentialProviderFactory$Companion;

        specialinvoke $r0.<androidx.credentials.CredentialProviderFactory$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.CredentialProviderFactory: androidx.credentials.CredentialProviderFactory$Companion Companion> = $r0;

        return;
    }

androidx.credentials.CredentialProviderFactory$Companion
    private void <init>()
    {
        androidx.credentials.CredentialProviderFactory$Companion r0;

        r0 := @this: androidx.credentials.CredentialProviderFactory$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.credentials.CredentialProvider getBestAvailableProvider(android.content.Context)
    {
        androidx.credentials.CredentialProviderFactory$Companion r0;
        android.content.Context r1;
        boolean $z0;
        int $i0;
        androidx.credentials.CredentialProvider $r2, $r4;
        androidx.credentials.CredentialProviderFrameworkImpl $r3;

        r0 := @this: androidx.credentials.CredentialProviderFactory$Companion;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $z0 = staticinvoke <androidx.core.os.BuildCompat: boolean isAtLeastU()>();

        if $z0 == 0 goto label1;

        $r3 = new androidx.credentials.CredentialProviderFrameworkImpl;

        specialinvoke $r3.<androidx.credentials.CredentialProviderFrameworkImpl: void <init>(android.content.Context)>(r1);

        $r4 = (androidx.credentials.CredentialProvider) $r3;

        return $r4;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 33 goto label2;

        $r2 = specialinvoke r0.<androidx.credentials.CredentialProviderFactory$Companion: androidx.credentials.CredentialProvider tryCreatePreUOemProvider(android.content.Context)>(r1);

        return $r2;

     label2:
        return null;
    }

    private final androidx.credentials.CredentialProvider tryCreatePreUOemProvider(android.content.Context)
    {
        androidx.credentials.CredentialProviderFactory$Companion r0;
        android.content.Context r1;
        java.util.List r2;
        boolean $z0;
        androidx.credentials.CredentialProvider $r3;

        r0 := @this: androidx.credentials.CredentialProviderFactory$Companion;

        r1 := @parameter0: android.content.Context;

        r2 = specialinvoke r0.<androidx.credentials.CredentialProviderFactory$Companion: java.util.List getAllowedProvidersFromManifest(android.content.Context)>(r1);

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = specialinvoke r0.<androidx.credentials.CredentialProviderFactory$Companion: androidx.credentials.CredentialProvider instantiatePreUProvider(java.util.List,android.content.Context)>(r2, r1);

        return $r3;
    }

    private final androidx.credentials.CredentialProvider instantiatePreUProvider(java.util.List, android.content.Context)
    {
        androidx.credentials.CredentialProviderFactory$Companion r0;
        java.util.List r1;
        android.content.Context r2;
        java.util.Iterator r3;
        java.lang.String r4;
        androidx.credentials.CredentialProvider r5, r10;
        java.lang.Object $r6, $r8;
        java.lang.reflect.Constructor $r7;
        boolean $z0, $z1;
        java.lang.Throwable $r9, r14;
        java.lang.Class r11;
        java.lang.Class[] r12;
        java.lang.Object[] r13;

        r0 := @this: androidx.credentials.CredentialProviderFactory$Companion;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.content.Context;

        r10 = null;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r6;

     label2:
        r11 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r4);

        r12 = newarray (java.lang.Class)[1];

        r12[0] = class "Landroid/content/Context;";

        $r7 = virtualinvoke r11.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r12);

        r13 = newarray (java.lang.Object)[1];

        r13[0] = r2;

        $r8 = virtualinvoke $r7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r13);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r8, "null cannot be cast to non-null type androidx.credentials.CredentialProvider");

        r5 = (androidx.credentials.CredentialProvider) $r8;

        $z0 = interfaceinvoke r5.<androidx.credentials.CredentialProvider: boolean isAvailableOnDevice()>();

        if $z0 == 0 goto label1;

        if r10 == null goto label3;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CredProviderFactory", "Only one active OEM CredentialProvider allowed");

        return null;

     label3:
        r10 = r5;

     label4:
        goto label1;

     label5:
        $r9 := @caughtexception;

        r14 = $r9;

        goto label1;

     label6:
        return r10;

        catch java.lang.Throwable from label2 to label4 with label5;
    }

    private final java.util.List getAllowedProvidersFromManifest(android.content.Context)
    {
        androidx.credentials.CredentialProviderFactory$Companion r0;
        android.content.Context r1;
        android.content.pm.PackageInfo r2;
        java.util.List r3, $r12;
        android.content.pm.ServiceInfo[] r4, $r10, $r13;
        int i0, i1;
        android.content.pm.ServiceInfo r5;
        java.lang.String r6, $r8;
        android.content.pm.PackageManager $r7;
        java.util.ArrayList $r9;
        java.lang.Iterable $r11;
        android.os.Bundle $r14, $r15;

        r0 := @this: androidx.credentials.CredentialProviderFactory$Companion;

        r1 := @parameter0: android.content.Context;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        r2 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r8, 132);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) $r9;

        $r10 = r2.<android.content.pm.PackageInfo: android.content.pm.ServiceInfo[] services>;

        if $r10 == null goto label3;

        $r13 = r2.<android.content.pm.PackageInfo: android.content.pm.ServiceInfo[] services>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "packageInfo.services");

        r4 = $r13;

        i1 = 0;

        i0 = lengthof r4;

     label1:
        if i1 >= i0 goto label3;

        r5 = r4[i1];

        $r14 = r5.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        if $r14 == null goto label2;

        $r15 = r5.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        r6 = virtualinvoke $r15.<android.os.Bundle: java.lang.String getString(java.lang.String)>("androidx.credentials.CREDENTIAL_PROVIDER_KEY");

        if r6 == null goto label2;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r11 = (java.lang.Iterable) r3;

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toList(java.lang.Iterable)>($r11);

        return $r12;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.CredentialProviderFactory$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.CredentialProviderFactory$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.CredentialProviderFactory$Companion: void <init>()>();

        return;
    }

