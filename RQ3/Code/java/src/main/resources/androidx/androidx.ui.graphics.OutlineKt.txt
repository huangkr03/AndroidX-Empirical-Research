androidx.ui.graphics.OutlineKt
    public static final void addOutline(androidx.ui.graphics.Path, androidx.ui.graphics.Outline)
    {
        androidx.ui.graphics.Path $r0, $r5;
        androidx.ui.graphics.Outline r1, r2;
        boolean $z0, $z1, $z2;
        kotlin.NoWhenBranchMatchedException $r3;
        androidx.ui.graphics.Outline$Generic $r4;
        androidx.ui.graphics.Outline$Rounded $r6;
        androidx.ui.geometry.RRect $r7;
        androidx.ui.graphics.Outline$Rectangle $r8;
        androidx.ui.geometry.Rect $r9;

        $r0 := @parameter0: androidx.ui.graphics.Path;

        r1 := @parameter1: androidx.ui.graphics.Outline;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "outline");

        r2 = r1;

        $z0 = r2 instanceof androidx.ui.graphics.Outline$Rectangle;

        if $z0 == 0 goto label1;

        $r8 = (androidx.ui.graphics.Outline$Rectangle) r1;

        $r9 = virtualinvoke $r8.<androidx.ui.graphics.Outline$Rectangle: androidx.ui.geometry.Rect getRect()>();

        interfaceinvoke $r0.<androidx.ui.graphics.Path: void addRect(androidx.ui.geometry.Rect)>($r9);

        goto label4;

     label1:
        $z1 = r2 instanceof androidx.ui.graphics.Outline$Rounded;

        if $z1 == 0 goto label2;

        $r6 = (androidx.ui.graphics.Outline$Rounded) r1;

        $r7 = virtualinvoke $r6.<androidx.ui.graphics.Outline$Rounded: androidx.ui.geometry.RRect getRrect()>();

        interfaceinvoke $r0.<androidx.ui.graphics.Path: void addRRect(androidx.ui.geometry.RRect)>($r7);

        goto label4;

     label2:
        $z2 = r2 instanceof androidx.ui.graphics.Outline$Generic;

        if $z2 == 0 goto label3;

        $r4 = (androidx.ui.graphics.Outline$Generic) r1;

        $r5 = virtualinvoke $r4.<androidx.ui.graphics.Outline$Generic: androidx.ui.graphics.Path getPath()>();

        staticinvoke <androidx.ui.graphics.Path$DefaultImpls: void addPath$default(androidx.ui.graphics.Path,androidx.ui.graphics.Path,androidx.ui.geometry.Offset,int,java.lang.Object)>($r0, $r5, null, 2, null);

        goto label4;

     label3:
        $r3 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r3.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r3;

     label4:
        return;
    }

    public static final void drawOutline-2ddATRk(androidx.ui.graphics.drawscope.DrawScope, androidx.ui.graphics.Outline, long, float, androidx.ui.graphics.drawscope.DrawStyle, androidx.ui.graphics.ColorFilter, androidx.ui.graphics.BlendMode)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        androidx.ui.graphics.Outline r1, r6;
        long l0, l1, l2, l3, l4, $l7, $l8, $l9;
        float f0, f1, f2, f3, f4, f5;
        androidx.ui.graphics.drawscope.DrawStyle r2, r10;
        androidx.ui.graphics.ColorFilter r3, r11;
        androidx.ui.graphics.BlendMode r4;
        androidx.ui.graphics.Path r7, r20, r22;
        androidx.ui.geometry.Offset r8, $r17;
        androidx.ui.geometry.Size r9, $r18;
        boolean z2, z3, $z4, $z5, $z6;
        kotlin.NoWhenBranchMatchedException $r12;
        androidx.ui.graphics.Outline$Generic $r13;
        androidx.ui.graphics.Outline$Rounded $r14, $r15;
        int $i5, $i6;
        androidx.ui.graphics.Outline$Rectangle $r16;
        androidx.ui.geometry.Rect r19;
        androidx.ui.geometry.RRect r21;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        r1 := @parameter1: androidx.ui.graphics.Outline;

        l0 := @parameter2: long;

        f0 := @parameter3: float;

        r2 := @parameter4: androidx.ui.graphics.drawscope.DrawStyle;

        r3 := @parameter5: androidx.ui.graphics.ColorFilter;

        r4 := @parameter6: androidx.ui.graphics.BlendMode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$receiver");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "outline");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "style");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "blendMode");

        r6 = r1;

        $z4 = r6 instanceof androidx.ui.graphics.Outline$Rectangle;

        if $z4 == 0 goto label1;

        $r16 = (androidx.ui.graphics.Outline$Rectangle) r1;

        r19 = virtualinvoke $r16.<androidx.ui.graphics.Outline$Rectangle: androidx.ui.geometry.Rect getRect()>();

        $r17 = staticinvoke <androidx.ui.graphics.OutlineKt: androidx.ui.geometry.Offset topLeft(androidx.ui.geometry.Rect)>(r19);

        $r18 = staticinvoke <androidx.ui.graphics.OutlineKt: androidx.ui.geometry.Size size(androidx.ui.geometry.Rect)>(r19);

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void drawRect-5gW23P0(long,androidx.ui.geometry.Offset,androidx.ui.geometry.Size,float,androidx.ui.graphics.drawscope.DrawStyle,androidx.ui.graphics.ColorFilter,androidx.ui.graphics.BlendMode)>(l0, $r17, $r18, f0, r2, r3, r4);

        goto label6;

     label1:
        $z5 = r6 instanceof androidx.ui.graphics.Outline$Rounded;

        if $z5 == 0 goto label4;

        $r14 = (androidx.ui.graphics.Outline$Rounded) r1;

        r7 = virtualinvoke $r14.<androidx.ui.graphics.Outline$Rounded: androidx.ui.graphics.Path getRoundRectPath$ui_graphics_release()>();

        if r7 == null goto label2;

        r20 = r7;

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void drawPath-u5ZPEDk(androidx.ui.graphics.Path,long,float,androidx.ui.graphics.drawscope.DrawStyle,androidx.ui.graphics.ColorFilter,androidx.ui.graphics.BlendMode)>(r20, l0, f0, r2, r3, r4);

        goto label3;

     label2:
        $r15 = (androidx.ui.graphics.Outline$Rounded) r1;

        r21 = virtualinvoke $r15.<androidx.ui.graphics.Outline$Rounded: androidx.ui.geometry.RRect getRrect()>();

        f1 = virtualinvoke r21.<androidx.ui.geometry.RRect: float getBottomLeftRadiusX()>();

        l1 = l0;

        r8 = staticinvoke <androidx.ui.graphics.OutlineKt: androidx.ui.geometry.Offset topLeft(androidx.ui.geometry.RRect)>(r21);

        r9 = staticinvoke <androidx.ui.graphics.OutlineKt: androidx.ui.geometry.Size size(androidx.ui.geometry.RRect)>(r21);

        f4 = f1;

        f2 = f1;

        z2 = 0;

        $i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2);

        l2 = (long) $i5;

        f3 = f4;

        z3 = 0;

        $i6 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f3);

        l3 = (long) $i6;

        $l8 = l2 << 32;

        $l7 = l3 & 4294967295L;

        $l9 = $l8 | $l7;

        l4 = staticinvoke <androidx.ui.geometry.Radius: long constructor-impl(long)>($l9);

        f5 = f0;

        r10 = r2;

        r11 = r3;

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void drawRoundRect-J_jAawI(long,androidx.ui.geometry.Offset,androidx.ui.geometry.Size,long,androidx.ui.graphics.drawscope.DrawStyle,float,androidx.ui.graphics.ColorFilter,androidx.ui.graphics.BlendMode)>(l1, r8, r9, l4, r10, f5, r11, r4);

     label3:
        goto label6;

     label4:
        $z6 = r6 instanceof androidx.ui.graphics.Outline$Generic;

        if $z6 == 0 goto label5;

        $r13 = (androidx.ui.graphics.Outline$Generic) r1;

        r22 = virtualinvoke $r13.<androidx.ui.graphics.Outline$Generic: androidx.ui.graphics.Path getPath()>();

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void drawPath-u5ZPEDk(androidx.ui.graphics.Path,long,float,androidx.ui.graphics.drawscope.DrawStyle,androidx.ui.graphics.ColorFilter,androidx.ui.graphics.BlendMode)>(r22, l0, f0, r2, r3, r4);

        goto label6;

     label5:
        $r12 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r12.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r12;

     label6:
        return;
    }

    public static void drawOutline-2ddATRk$default(androidx.ui.graphics.drawscope.DrawScope, androidx.ui.graphics.Outline, long, float, androidx.ui.graphics.drawscope.DrawStyle, androidx.ui.graphics.ColorFilter, androidx.ui.graphics.BlendMode, int, java.lang.Object)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        androidx.ui.graphics.Outline r1;
        long l0;
        int i1, $i2, $i3, $i4, $i5;
        java.lang.Object r2;
        androidx.ui.graphics.drawscope.DrawScope$Companion $r3;
        androidx.ui.graphics.drawscope.Fill $r4;
        float f0;
        androidx.ui.graphics.drawscope.DrawStyle r5;
        androidx.ui.graphics.ColorFilter r6;
        androidx.ui.graphics.BlendMode r7;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        r1 := @parameter1: androidx.ui.graphics.Outline;

        l0 := @parameter2: long;

        f0 := @parameter3: float;

        r5 := @parameter4: androidx.ui.graphics.drawscope.DrawStyle;

        r6 := @parameter5: androidx.ui.graphics.ColorFilter;

        r7 := @parameter6: androidx.ui.graphics.BlendMode;

        i1 := @parameter7: int;

        r2 := @parameter8: java.lang.Object;

        $i2 = i1 & 4;

        if $i2 == 0 goto label1;

        f0 = 1.0F;

     label1:
        $i3 = i1 & 8;

        if $i3 == 0 goto label2;

        $r4 = <androidx.ui.graphics.drawscope.Fill: androidx.ui.graphics.drawscope.Fill INSTANCE>;

        r5 = (androidx.ui.graphics.drawscope.DrawStyle) $r4;

     label2:
        $i4 = i1 & 16;

        if $i4 == 0 goto label3;

        r6 = (androidx.ui.graphics.ColorFilter) null;

     label3:
        $i5 = i1 & 32;

        if $i5 == 0 goto label4;

        $r3 = <androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawScope$Companion Companion>;

        r7 = virtualinvoke $r3.<androidx.ui.graphics.drawscope.DrawScope$Companion: androidx.ui.graphics.BlendMode getDefaultBlendMode()>();

     label4:
        staticinvoke <androidx.ui.graphics.OutlineKt: void drawOutline-2ddATRk(androidx.ui.graphics.drawscope.DrawScope,androidx.ui.graphics.Outline,long,float,androidx.ui.graphics.drawscope.DrawStyle,androidx.ui.graphics.ColorFilter,androidx.ui.graphics.BlendMode)>($r0, r1, l0, f0, r5, r6, r7);

        return;
    }

    public static final void drawOutline(androidx.ui.graphics.drawscope.DrawScope, androidx.ui.graphics.Outline, androidx.ui.graphics.Brush, float, androidx.ui.graphics.drawscope.DrawStyle, androidx.ui.graphics.ColorFilter, androidx.ui.graphics.BlendMode)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0, r12;
        androidx.ui.graphics.Outline r1, r7;
        androidx.ui.graphics.Brush r2, r11;
        float f0, f1, f2, f3, f4;
        androidx.ui.graphics.drawscope.DrawStyle r3;
        androidx.ui.graphics.ColorFilter r4;
        androidx.ui.graphics.BlendMode r5;
        androidx.ui.graphics.Path r8, r22, r24;
        androidx.ui.geometry.Size r9, $r20;
        androidx.ui.geometry.Offset r10, $r17, $r19;
        boolean z3, z4, $z5, $z6, $z7;
        long l0, l1, l2, $l5, $l6, $l7;
        kotlin.NoWhenBranchMatchedException $r13;
        androidx.ui.graphics.Outline$Generic $r14;
        androidx.ui.graphics.Outline$Rounded $r15, $r16;
        int $i3, $i4;
        androidx.ui.graphics.Outline$Rectangle $r18;
        androidx.ui.geometry.Rect r21;
        androidx.ui.geometry.RRect r23;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        r1 := @parameter1: androidx.ui.graphics.Outline;

        r2 := @parameter2: androidx.ui.graphics.Brush;

        f0 := @parameter3: float;

        r3 := @parameter4: androidx.ui.graphics.drawscope.DrawStyle;

        r4 := @parameter5: androidx.ui.graphics.ColorFilter;

        r5 := @parameter6: androidx.ui.graphics.BlendMode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "outline");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "brush");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "style");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "blendMode");

        r7 = r1;

        $z5 = r7 instanceof androidx.ui.graphics.Outline$Rectangle;

        if $z5 == 0 goto label1;

        $r18 = (androidx.ui.graphics.Outline$Rectangle) r1;

        r21 = virtualinvoke $r18.<androidx.ui.graphics.Outline$Rectangle: androidx.ui.geometry.Rect getRect()>();

        $r19 = staticinvoke <androidx.ui.graphics.OutlineKt: androidx.ui.geometry.Offset topLeft(androidx.ui.geometry.Rect)>(r21);

        $r20 = staticinvoke <androidx.ui.graphics.OutlineKt: androidx.ui.geometry.Size size(androidx.ui.geometry.Rect)>(r21);

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void drawRect(androidx.ui.graphics.Brush,androidx.ui.geometry.Offset,androidx.ui.geometry.Size,float,androidx.ui.graphics.drawscope.DrawStyle,androidx.ui.graphics.ColorFilter,androidx.ui.graphics.BlendMode)>(r2, $r19, $r20, f0, r3, r4, r5);

        goto label6;

     label1:
        $z6 = r7 instanceof androidx.ui.graphics.Outline$Rounded;

        if $z6 == 0 goto label4;

        $r15 = (androidx.ui.graphics.Outline$Rounded) r1;

        r8 = virtualinvoke $r15.<androidx.ui.graphics.Outline$Rounded: androidx.ui.graphics.Path getRoundRectPath$ui_graphics_release()>();

        if r8 == null goto label2;

        r22 = r8;

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void drawPath(androidx.ui.graphics.Path,androidx.ui.graphics.Brush,float,androidx.ui.graphics.drawscope.DrawStyle,androidx.ui.graphics.ColorFilter,androidx.ui.graphics.BlendMode)>(r22, r2, f0, r3, r4, r5);

        goto label3;

     label2:
        $r16 = (androidx.ui.graphics.Outline$Rounded) r1;

        r23 = virtualinvoke $r16.<androidx.ui.graphics.Outline$Rounded: androidx.ui.geometry.RRect getRrect()>();

        f1 = virtualinvoke r23.<androidx.ui.geometry.RRect: float getBottomLeftRadiusX()>();

        $r17 = staticinvoke <androidx.ui.graphics.OutlineKt: androidx.ui.geometry.Offset topLeft(androidx.ui.geometry.RRect)>(r23);

        r9 = staticinvoke <androidx.ui.graphics.OutlineKt: androidx.ui.geometry.Size size(androidx.ui.geometry.RRect)>(r23);

        r10 = $r17;

        r11 = r2;

        r12 = $r0;

        f2 = f1;

        f3 = f1;

        z3 = 0;

        $i3 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f3);

        l0 = (long) $i3;

        f4 = f2;

        z4 = 0;

        $i4 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f4);

        l1 = (long) $i4;

        $l6 = l0 << 32;

        $l5 = l1 & 4294967295L;

        $l7 = $l6 | $l5;

        l2 = staticinvoke <androidx.ui.geometry.Radius: long constructor-impl(long)>($l7);

        virtualinvoke r12.<androidx.ui.graphics.drawscope.DrawScope: void drawRoundRect-TLscAYA(androidx.ui.graphics.Brush,androidx.ui.geometry.Offset,androidx.ui.geometry.Size,long,float,androidx.ui.graphics.drawscope.DrawStyle,androidx.ui.graphics.ColorFilter,androidx.ui.graphics.BlendMode)>(r11, r10, r9, l2, f0, r3, r4, r5);

     label3:
        goto label6;

     label4:
        $z7 = r7 instanceof androidx.ui.graphics.Outline$Generic;

        if $z7 == 0 goto label5;

        $r14 = (androidx.ui.graphics.Outline$Generic) r1;

        r24 = virtualinvoke $r14.<androidx.ui.graphics.Outline$Generic: androidx.ui.graphics.Path getPath()>();

        virtualinvoke $r0.<androidx.ui.graphics.drawscope.DrawScope: void drawPath(androidx.ui.graphics.Path,androidx.ui.graphics.Brush,float,androidx.ui.graphics.drawscope.DrawStyle,androidx.ui.graphics.ColorFilter,androidx.ui.graphics.BlendMode)>(r24, r2, f0, r3, r4, r5);

        goto label6;

     label5:
        $r13 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r13.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r13;

     label6:
        return;
    }

    public static void drawOutline$default(androidx.ui.graphics.drawscope.DrawScope, androidx.ui.graphics.Outline, androidx.ui.graphics.Brush, float, androidx.ui.graphics.drawscope.DrawStyle, androidx.ui.graphics.ColorFilter, androidx.ui.graphics.BlendMode, int, java.lang.Object)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        androidx.ui.graphics.Outline r1;
        androidx.ui.graphics.Brush r2;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r3;
        androidx.ui.graphics.drawscope.DrawScope$Companion $r4;
        androidx.ui.graphics.drawscope.Fill $r5;
        float f0;
        androidx.ui.graphics.drawscope.DrawStyle r6;
        androidx.ui.graphics.ColorFilter r7;
        androidx.ui.graphics.BlendMode r8;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        r1 := @parameter1: androidx.ui.graphics.Outline;

        r2 := @parameter2: androidx.ui.graphics.Brush;

        f0 := @parameter3: float;

        r6 := @parameter4: androidx.ui.graphics.drawscope.DrawStyle;

        r7 := @parameter5: androidx.ui.graphics.ColorFilter;

        r8 := @parameter6: androidx.ui.graphics.BlendMode;

        i0 := @parameter7: int;

        r3 := @parameter8: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        f0 = 1.0F;

     label1:
        $i2 = i0 & 8;

        if $i2 == 0 goto label2;

        $r5 = <androidx.ui.graphics.drawscope.Fill: androidx.ui.graphics.drawscope.Fill INSTANCE>;

        r6 = (androidx.ui.graphics.drawscope.DrawStyle) $r5;

     label2:
        $i3 = i0 & 16;

        if $i3 == 0 goto label3;

        r7 = (androidx.ui.graphics.ColorFilter) null;

     label3:
        $i4 = i0 & 32;

        if $i4 == 0 goto label4;

        $r4 = <androidx.ui.graphics.drawscope.DrawScope: androidx.ui.graphics.drawscope.DrawScope$Companion Companion>;

        r8 = virtualinvoke $r4.<androidx.ui.graphics.drawscope.DrawScope$Companion: androidx.ui.graphics.BlendMode getDefaultBlendMode()>();

     label4:
        staticinvoke <androidx.ui.graphics.OutlineKt: void drawOutline(androidx.ui.graphics.drawscope.DrawScope,androidx.ui.graphics.Outline,androidx.ui.graphics.Brush,float,androidx.ui.graphics.drawscope.DrawStyle,androidx.ui.graphics.ColorFilter,androidx.ui.graphics.BlendMode)>($r0, r1, r2, f0, r6, r7, r8);

        return;
    }

    private static final androidx.ui.geometry.Offset topLeft(androidx.ui.geometry.Rect)
    {
        androidx.ui.geometry.Rect $r0;
        float f0, f1, f2, f3;
        boolean z2, z3;
        long l0, l1, l2, l3, $l6, $l7;
        int $i4, $i5;
        androidx.ui.geometry.Offset $r1;

        $r0 := @parameter0: androidx.ui.geometry.Rect;

        f0 = virtualinvoke $r0.<androidx.ui.geometry.Rect: float getLeft()>();

        f1 = virtualinvoke $r0.<androidx.ui.geometry.Rect: float getTop()>();

        f2 = f0;

        z2 = 0;

        $i4 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2);

        l0 = (long) $i4;

        f3 = f1;

        z3 = 0;

        $i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f3);

        l1 = (long) $i5;

        $l7 = l0 << 32;

        $l6 = l1 & 4294967295L;

        l2 = $l7 | $l6;

        l3 = l2;

        $r1 = new androidx.ui.geometry.Offset;

        specialinvoke $r1.<androidx.ui.geometry.Offset: void <init>(long)>(l3);

        return $r1;
    }

    private static final androidx.ui.geometry.Size size(androidx.ui.geometry.Rect)
    {
        androidx.ui.geometry.Rect $r0;
        float $f0, $f1;
        androidx.ui.geometry.Size $r1;

        $r0 := @parameter0: androidx.ui.geometry.Rect;

        $f0 = virtualinvoke $r0.<androidx.ui.geometry.Rect: float getWidth()>();

        $f1 = virtualinvoke $r0.<androidx.ui.geometry.Rect: float getHeight()>();

        $r1 = staticinvoke <androidx.ui.geometry.SizeKt: androidx.ui.geometry.Size Size(float,float)>($f0, $f1);

        return $r1;
    }

    private static final androidx.ui.geometry.Offset topLeft(androidx.ui.geometry.RRect)
    {
        androidx.ui.geometry.RRect $r0;
        float f0, f1, f2, f3;
        boolean z2, z3;
        long l0, l1, l2, l3, $l6, $l7;
        int $i4, $i5;
        androidx.ui.geometry.Offset $r1;

        $r0 := @parameter0: androidx.ui.geometry.RRect;

        f0 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getLeft()>();

        f1 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getTop()>();

        f2 = f0;

        z2 = 0;

        $i4 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f2);

        l0 = (long) $i4;

        f3 = f1;

        z3 = 0;

        $i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f3);

        l1 = (long) $i5;

        $l7 = l0 << 32;

        $l6 = l1 & 4294967295L;

        l2 = $l7 | $l6;

        l3 = l2;

        $r1 = new androidx.ui.geometry.Offset;

        specialinvoke $r1.<androidx.ui.geometry.Offset: void <init>(long)>(l3);

        return $r1;
    }

    private static final androidx.ui.geometry.Size size(androidx.ui.geometry.RRect)
    {
        androidx.ui.geometry.RRect $r0;
        float $f0, $f1;
        androidx.ui.geometry.Size $r1;

        $r0 := @parameter0: androidx.ui.geometry.RRect;

        $f0 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getWidth()>();

        $f1 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getHeight()>();

        $r1 = staticinvoke <androidx.ui.geometry.SizeKt: androidx.ui.geometry.Size Size(float,float)>($f0, $f1);

        return $r1;
    }

    private static final void drawOutlineHelper(androidx.ui.graphics.drawscope.DrawScope, androidx.ui.graphics.Outline, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function2)
    {
        androidx.ui.graphics.drawscope.DrawScope $r0;
        androidx.ui.graphics.Outline r1, r5;
        kotlin.jvm.functions.Function2 r2, r3, r4;
        androidx.ui.graphics.Path r6, $r9;
        boolean $z1, $z2, $z3;
        kotlin.NoWhenBranchMatchedException $r7;
        androidx.ui.graphics.Outline$Generic $r8;
        androidx.ui.graphics.Outline$Rounded $r11, $r12;
        androidx.ui.geometry.RRect $r13;
        androidx.ui.graphics.Outline$Rectangle $r16;
        androidx.ui.geometry.Rect $r17;

        $r0 := @parameter0: androidx.ui.graphics.drawscope.DrawScope;

        r1 := @parameter1: androidx.ui.graphics.Outline;

        r2 := @parameter2: kotlin.jvm.functions.Function2;

        r3 := @parameter3: kotlin.jvm.functions.Function2;

        r4 := @parameter4: kotlin.jvm.functions.Function2;

        r5 = r1;

        $z1 = r5 instanceof androidx.ui.graphics.Outline$Rectangle;

        if $z1 == 0 goto label1;

        $r16 = (androidx.ui.graphics.Outline$Rectangle) r1;

        $r17 = virtualinvoke $r16.<androidx.ui.graphics.Outline$Rectangle: androidx.ui.geometry.Rect getRect()>();

        interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r0, $r17);

        goto label6;

     label1:
        $z2 = r5 instanceof androidx.ui.graphics.Outline$Rounded;

        if $z2 == 0 goto label4;

        $r11 = (androidx.ui.graphics.Outline$Rounded) r1;

        r6 = virtualinvoke $r11.<androidx.ui.graphics.Outline$Rounded: androidx.ui.graphics.Path getRoundRectPath$ui_graphics_release()>();

        if r6 == null goto label2;

        interfaceinvoke r4.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r0, r6);

        goto label3;

     label2:
        $r12 = (androidx.ui.graphics.Outline$Rounded) r1;

        $r13 = virtualinvoke $r12.<androidx.ui.graphics.Outline$Rounded: androidx.ui.geometry.RRect getRrect()>();

        interfaceinvoke r3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r0, $r13);

     label3:
        goto label6;

     label4:
        $z3 = r5 instanceof androidx.ui.graphics.Outline$Generic;

        if $z3 == 0 goto label5;

        $r8 = (androidx.ui.graphics.Outline$Generic) r1;

        $r9 = virtualinvoke $r8.<androidx.ui.graphics.Outline$Generic: androidx.ui.graphics.Path getPath()>();

        interfaceinvoke r4.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r0, $r9);

        goto label6;

     label5:
        $r7 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r7.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r7;

     label6:
        return;
    }

    public static final void drawOutline(androidx.ui.graphics.Canvas, androidx.ui.graphics.Outline, androidx.ui.graphics.Paint)
    {
        androidx.ui.graphics.Canvas $r0;
        androidx.ui.graphics.Outline r1, r3;
        androidx.ui.graphics.Paint r2;
        androidx.ui.graphics.Path r4, $r7;
        boolean $z0, $z1, $z2;
        kotlin.NoWhenBranchMatchedException $r5;
        androidx.ui.graphics.Outline$Generic $r6;
        androidx.ui.graphics.Outline$Rounded $r8, $r9, $r11, $r13, $r15, $r17, $r19;
        androidx.ui.geometry.RRect $r10, $r12, $r14, $r16, $r18, $r20;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        androidx.ui.graphics.Outline$Rectangle $r21;
        androidx.ui.geometry.Rect $r22;

        $r0 := @parameter0: androidx.ui.graphics.Canvas;

        r1 := @parameter1: androidx.ui.graphics.Outline;

        r2 := @parameter2: androidx.ui.graphics.Paint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "outline");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paint");

        r3 = r1;

        $z0 = r3 instanceof androidx.ui.graphics.Outline$Rectangle;

        if $z0 == 0 goto label1;

        $r21 = (androidx.ui.graphics.Outline$Rectangle) r1;

        $r22 = virtualinvoke $r21.<androidx.ui.graphics.Outline$Rectangle: androidx.ui.geometry.Rect getRect()>();

        interfaceinvoke $r0.<androidx.ui.graphics.Canvas: void drawRect(androidx.ui.geometry.Rect,androidx.ui.graphics.Paint)>($r22, r2);

        goto label6;

     label1:
        $z1 = r3 instanceof androidx.ui.graphics.Outline$Rounded;

        if $z1 == 0 goto label4;

        $r8 = (androidx.ui.graphics.Outline$Rounded) r1;

        r4 = virtualinvoke $r8.<androidx.ui.graphics.Outline$Rounded: androidx.ui.graphics.Path getRoundRectPath$ui_graphics_release()>();

        if r4 == null goto label2;

        interfaceinvoke $r0.<androidx.ui.graphics.Canvas: void drawPath(androidx.ui.graphics.Path,androidx.ui.graphics.Paint)>(r4, r2);

        goto label3;

     label2:
        $r9 = (androidx.ui.graphics.Outline$Rounded) r1;

        $r10 = virtualinvoke $r9.<androidx.ui.graphics.Outline$Rounded: androidx.ui.geometry.RRect getRrect()>();

        $f0 = virtualinvoke $r10.<androidx.ui.geometry.RRect: float getLeft()>();

        $r11 = (androidx.ui.graphics.Outline$Rounded) r1;

        $r12 = virtualinvoke $r11.<androidx.ui.graphics.Outline$Rounded: androidx.ui.geometry.RRect getRrect()>();

        $f1 = virtualinvoke $r12.<androidx.ui.geometry.RRect: float getTop()>();

        $r13 = (androidx.ui.graphics.Outline$Rounded) r1;

        $r14 = virtualinvoke $r13.<androidx.ui.graphics.Outline$Rounded: androidx.ui.geometry.RRect getRrect()>();

        $f2 = virtualinvoke $r14.<androidx.ui.geometry.RRect: float getRight()>();

        $r15 = (androidx.ui.graphics.Outline$Rounded) r1;

        $r16 = virtualinvoke $r15.<androidx.ui.graphics.Outline$Rounded: androidx.ui.geometry.RRect getRrect()>();

        $f3 = virtualinvoke $r16.<androidx.ui.geometry.RRect: float getBottom()>();

        $r17 = (androidx.ui.graphics.Outline$Rounded) r1;

        $r18 = virtualinvoke $r17.<androidx.ui.graphics.Outline$Rounded: androidx.ui.geometry.RRect getRrect()>();

        $f4 = virtualinvoke $r18.<androidx.ui.geometry.RRect: float getBottomLeftRadiusX()>();

        $r19 = (androidx.ui.graphics.Outline$Rounded) r1;

        $r20 = virtualinvoke $r19.<androidx.ui.graphics.Outline$Rounded: androidx.ui.geometry.RRect getRrect()>();

        $f5 = virtualinvoke $r20.<androidx.ui.geometry.RRect: float getBottomLeftRadiusY()>();

        interfaceinvoke $r0.<androidx.ui.graphics.Canvas: void drawRoundRect(float,float,float,float,float,float,androidx.ui.graphics.Paint)>($f0, $f1, $f2, $f3, $f4, $f5, r2);

     label3:
        goto label6;

     label4:
        $z2 = r3 instanceof androidx.ui.graphics.Outline$Generic;

        if $z2 == 0 goto label5;

        $r6 = (androidx.ui.graphics.Outline$Generic) r1;

        $r7 = virtualinvoke $r6.<androidx.ui.graphics.Outline$Generic: androidx.ui.graphics.Path getPath()>();

        interfaceinvoke $r0.<androidx.ui.graphics.Canvas: void drawPath(androidx.ui.graphics.Path,androidx.ui.graphics.Paint)>($r7, r2);

        goto label6;

     label5:
        $r5 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r5.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r5;

     label6:
        return;
    }

    private static final boolean hasSameCornerRadius(androidx.ui.geometry.RRect)
    {
        androidx.ui.geometry.RRect $r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b0, $b1, $b2, $b3, $b4, $b5;

        $r0 := @parameter0: androidx.ui.geometry.RRect;

        $f0 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getBottomLeftRadiusX()>();

        $f1 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getBottomRightRadiusX()>();

        $b0 = $f0 cmpg $f1;

        if $b0 != 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        if $z2 == 0 goto label07;

        $f6 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getBottomRightRadiusX()>();

        $f7 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getTopRightRadiusX()>();

        $b3 = $f6 cmpg $f7;

        if $b3 != 0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        if $z3 == 0 goto label07;

        $f8 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getTopRightRadiusX()>();

        $f9 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getTopLeftRadiusX()>();

        $b4 = $f8 cmpg $f9;

        if $b4 != 0 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        if $z4 == 0 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        z0 = $z5;

        $f10 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getBottomLeftRadiusY()>();

        $f11 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getBottomRightRadiusY()>();

        $b5 = $f10 cmpg $f11;

        if $b5 != 0 goto label09;

        $z6 = 1;

        goto label10;

     label09:
        $z6 = 0;

     label10:
        if $z6 == 0 goto label15;

        $f2 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getBottomRightRadiusY()>();

        $f3 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getTopRightRadiusY()>();

        $b1 = $f2 cmpg $f3;

        if $b1 != 0 goto label11;

        $z7 = 1;

        goto label12;

     label11:
        $z7 = 0;

     label12:
        if $z7 == 0 goto label15;

        $f4 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getTopRightRadiusY()>();

        $f5 = virtualinvoke $r0.<androidx.ui.geometry.RRect: float getTopLeftRadiusY()>();

        $b2 = $f4 cmpg $f5;

        if $b2 != 0 goto label13;

        $z8 = 1;

        goto label14;

     label13:
        $z8 = 0;

     label14:
        if $z8 == 0 goto label15;

        $z9 = 1;

        goto label16;

     label15:
        $z9 = 0;

     label16:
        z1 = $z9;

        if z0 == 0 goto label17;

        if z1 == 0 goto label17;

        $z10 = 1;

        goto label18;

     label17:
        $z10 = 0;

     label18:
        return $z10;
    }

    public static final boolean access$hasSameCornerRadius(androidx.ui.geometry.RRect)
    {
        androidx.ui.geometry.RRect $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.ui.geometry.RRect;

        $z0 = staticinvoke <androidx.ui.graphics.OutlineKt: boolean hasSameCornerRadius(androidx.ui.geometry.RRect)>($r0);

        return $z0;
    }

