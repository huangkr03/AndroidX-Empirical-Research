androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion Companion>
    public void <init>()
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures r0;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures: com.google.common.util.concurrent.ListenableFuture deleteRegistrationsAsync(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest)>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures: com.google.common.util.concurrent.ListenableFuture registerSourceAsync(android.net.Uri,android.view.InputEvent)>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures: com.google.common.util.concurrent.ListenableFuture registerTriggerAsync(android.net.Uri)>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures: com.google.common.util.concurrent.ListenableFuture registerWebSourceAsync(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest)>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures: com.google.common.util.concurrent.ListenableFuture registerWebTriggerAsync(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest)>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures: com.google.common.util.concurrent.ListenableFuture getMeasurementApiStatusAsync()>
    public static final androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures 'from'(android.content.Context)
    {
        android.content.Context r0;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion $r1;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = <androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures 'from'(android.content.Context)>(r0);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion $r0;

        $r0 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion;

        specialinvoke $r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion Companion> = $r0;

        return;
    }

androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: int label>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: androidx.privacysandbox.ads.adservices.measurement.DeletionRequest $deletionRequest>
    void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl, androidx.privacysandbox.ads.adservices.measurement.DeletionRequest, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1 r0;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r1;
        androidx.privacysandbox.ads.adservices.measurement.DeletionRequest $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1;

        $r1 := @parameter0: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        $r2 := @parameter1: androidx.privacysandbox.ads.adservices.measurement.DeletionRequest;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0> = $r1;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: androidx.privacysandbox.ads.adservices.measurement.DeletionRequest $deletionRequest> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1 r0;
        java.lang.Object $r1, r2, $r8;
        int $i0;
        kotlin.Unit $r3;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r4;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager $r5;
        androidx.privacysandbox.ads.adservices.measurement.DeletionRequest $r6;
        kotlin.coroutines.Continuation $r7;
        java.lang.IllegalStateException $r9;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>;

        $r5 = staticinvoke <androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl)>($r4);

        $r6 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: androidx.privacysandbox.ads.adservices.measurement.DeletionRequest $deletionRequest>;

        $r7 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: int label> = 1;

        $r8 = virtualinvoke $r5.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: java.lang.Object deleteRegistrations(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest,kotlin.coroutines.Continuation)>($r6, $r7);

        if $r8 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r9;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.privacysandbox.ads.adservices.measurement.DeletionRequest $r4;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r5;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1;

        $r5 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>;

        $r4 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: androidx.privacysandbox.ads.adservices.measurement.DeletionRequest $deletionRequest>;

        specialinvoke $r3.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl,androidx.privacysandbox.ads.adservices.measurement.DeletionRequest,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1: int label>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>
    void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1 r0;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1;

        $r1 := @parameter0: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1 r0;
        java.lang.Object $r1, r2, $r7;
        int $i0;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r3;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager $r4;
        kotlin.coroutines.Continuation $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r3 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>;

        $r4 = staticinvoke <androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl)>($r3);

        $r5 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1: int label> = 1;

        $r7 = virtualinvoke $r4.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: java.lang.Object getMeasurementApiStatus(kotlin.coroutines.Continuation)>($r5);

        if $r7 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r7 = $r1;

     label3:
        return $r7;

     label4:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r6;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r4;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1;

        $r4 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>;

        specialinvoke $r3.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1: void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: int label>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: android.net.Uri $attributionSource>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: android.view.InputEvent $inputEvent>
    void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl, android.net.Uri, android.view.InputEvent, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1 r0;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r1;
        android.net.Uri $r2;
        android.view.InputEvent $r3;
        kotlin.coroutines.Continuation $r4;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1;

        $r1 := @parameter0: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        $r2 := @parameter1: android.net.Uri;

        $r3 := @parameter2: android.view.InputEvent;

        $r4 := @parameter3: kotlin.coroutines.Continuation;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0> = $r1;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: android.net.Uri $attributionSource> = $r2;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: android.view.InputEvent $inputEvent> = $r3;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r4);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1 r0;
        java.lang.Object $r1, r2, $r9;
        int $i0;
        kotlin.Unit $r3;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r4;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager $r5;
        android.net.Uri $r6;
        android.view.InputEvent $r7;
        kotlin.coroutines.Continuation $r8;
        java.lang.IllegalStateException $r10;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>;

        $r5 = staticinvoke <androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl)>($r4);

        $r6 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: android.net.Uri $attributionSource>;

        $r7 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: android.view.InputEvent $inputEvent>;

        $r8 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: int label> = 1;

        $r9 = virtualinvoke $r5.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: java.lang.Object registerSource(android.net.Uri,android.view.InputEvent,kotlin.coroutines.Continuation)>($r6, $r7, $r8);

        if $r9 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r10;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r7;
        android.view.InputEvent $r4;
        android.net.Uri $r5;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r6;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1;

        $r6 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>;

        $r5 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: android.net.Uri $attributionSource>;

        $r4 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: android.view.InputEvent $inputEvent>;

        specialinvoke $r3.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl,android.net.Uri,android.view.InputEvent,kotlin.coroutines.Continuation)>($r6, $r5, $r4, $r2);

        $r7 = (kotlin.coroutines.Continuation) $r3;

        return $r7;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: int label>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: android.net.Uri $trigger>
    void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl, android.net.Uri, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1 r0;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r1;
        android.net.Uri $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1;

        $r1 := @parameter0: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        $r2 := @parameter1: android.net.Uri;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0> = $r1;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: android.net.Uri $trigger> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1 r0;
        java.lang.Object $r1, r2, $r8;
        int $i0;
        kotlin.Unit $r3;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r4;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager $r5;
        android.net.Uri $r6;
        kotlin.coroutines.Continuation $r7;
        java.lang.IllegalStateException $r9;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>;

        $r5 = staticinvoke <androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl)>($r4);

        $r6 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: android.net.Uri $trigger>;

        $r7 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: int label> = 1;

        $r8 = virtualinvoke $r5.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: java.lang.Object registerTrigger(android.net.Uri,kotlin.coroutines.Continuation)>($r6, $r7);

        if $r8 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r9;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        android.net.Uri $r4;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r5;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1;

        $r5 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>;

        $r4 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: android.net.Uri $trigger>;

        specialinvoke $r3.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl,android.net.Uri,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: int label>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest $request>
    void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl, androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1 r0;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r1;
        androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1;

        $r1 := @parameter0: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        $r2 := @parameter1: androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0> = $r1;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest $request> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1 r0;
        java.lang.Object $r1, r2, $r8;
        int $i0;
        kotlin.Unit $r3;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r4;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager $r5;
        androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest $r6;
        kotlin.coroutines.Continuation $r7;
        java.lang.IllegalStateException $r9;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>;

        $r5 = staticinvoke <androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl)>($r4);

        $r6 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest $request>;

        $r7 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: int label> = 1;

        $r8 = virtualinvoke $r5.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: java.lang.Object registerWebSource(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest,kotlin.coroutines.Continuation)>($r6, $r7);

        if $r8 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r9;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest $r4;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r5;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1;

        $r5 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>;

        $r4 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest $request>;

        specialinvoke $r3.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl,androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: int label>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest $request>
    void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl, androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1 r0;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r1;
        androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1;

        $r1 := @parameter0: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        $r2 := @parameter1: androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0> = $r1;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest $request> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1 r0;
        java.lang.Object $r1, r2, $r8;
        int $i0;
        kotlin.Unit $r3;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r4;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager $r5;
        androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest $r6;
        kotlin.coroutines.Continuation $r7;
        java.lang.IllegalStateException $r9;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>;

        $r5 = staticinvoke <androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl)>($r4);

        $r6 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest $request>;

        $r7 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: int label> = 1;

        $r8 = virtualinvoke $r5.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: java.lang.Object registerWebTrigger(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest,kotlin.coroutines.Continuation)>($r6, $r7);

        if $r8 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r9;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest $r4;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r5;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1;

        $r5 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl this$0>;

        $r4 = r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest $request>;

        specialinvoke $r3.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl,androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest,kotlin.coroutines.Continuation)>($r5, $r4, $r2);

        $r6 = (kotlin.coroutines.Continuation) $r3;

        return $r6;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl
<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager mMeasurementManager>
    public void <init>(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl r0;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager r1;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        r1 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "mMeasurementManager");

        specialinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures: void <init>()>();

        r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager mMeasurementManager> = r1;

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture deleteRegistrationsAsync(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl r0;
        androidx.privacysandbox.ads.adservices.measurement.DeletionRequest r1;
        kotlinx.coroutines.MainCoroutineDispatcher $r2;
        kotlin.coroutines.CoroutineContext $r3;
        kotlinx.coroutines.CoroutineScope $r4;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1 $r5;
        kotlin.jvm.functions.Function2 $r6;
        kotlinx.coroutines.Deferred $r7;
        com.google.common.util.concurrent.ListenableFuture $r8;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        r1 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.DeletionRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "deletionRequest");

        $r2 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r3 = (kotlin.coroutines.CoroutineContext) $r2;

        $r4 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r3);

        $r5 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1;

        specialinvoke $r5.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$deleteRegistrationsAsync$1: void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl,androidx.privacysandbox.ads.adservices.measurement.DeletionRequest,kotlin.coroutines.Continuation)>(r0, r1, null);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        $r7 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r4, null, null, $r6, 3, null);

        $r8 = staticinvoke <androidx.privacysandbox.ads.adservices.java.internal.CoroutineAdapterKt: com.google.common.util.concurrent.ListenableFuture asListenableFuture$default(kotlinx.coroutines.Deferred,java.lang.Object,int,java.lang.Object)>($r7, null, 1, null);

        return $r8;
    }

    public com.google.common.util.concurrent.ListenableFuture registerSourceAsync(android.net.Uri, android.view.InputEvent)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl r0;
        android.net.Uri r1;
        android.view.InputEvent r2;
        kotlinx.coroutines.MainCoroutineDispatcher $r3;
        kotlin.coroutines.CoroutineContext $r4;
        kotlinx.coroutines.CoroutineScope $r5;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1 $r6;
        kotlin.jvm.functions.Function2 $r7;
        kotlinx.coroutines.Deferred $r8;
        com.google.common.util.concurrent.ListenableFuture $r9;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.view.InputEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "attributionSource");

        $r3 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r4 = (kotlin.coroutines.CoroutineContext) $r3;

        $r5 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r4);

        $r6 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1;

        specialinvoke $r6.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerSourceAsync$1: void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl,android.net.Uri,android.view.InputEvent,kotlin.coroutines.Continuation)>(r0, r1, r2, null);

        $r7 = (kotlin.jvm.functions.Function2) $r6;

        $r8 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r5, null, null, $r7, 3, null);

        $r9 = staticinvoke <androidx.privacysandbox.ads.adservices.java.internal.CoroutineAdapterKt: com.google.common.util.concurrent.ListenableFuture asListenableFuture$default(kotlinx.coroutines.Deferred,java.lang.Object,int,java.lang.Object)>($r8, null, 1, null);

        return $r9;
    }

    public com.google.common.util.concurrent.ListenableFuture registerTriggerAsync(android.net.Uri)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl r0;
        android.net.Uri r1;
        kotlinx.coroutines.MainCoroutineDispatcher $r2;
        kotlin.coroutines.CoroutineContext $r3;
        kotlinx.coroutines.CoroutineScope $r4;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1 $r5;
        kotlin.jvm.functions.Function2 $r6;
        kotlinx.coroutines.Deferred $r7;
        com.google.common.util.concurrent.ListenableFuture $r8;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        r1 := @parameter0: android.net.Uri;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "trigger");

        $r2 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r3 = (kotlin.coroutines.CoroutineContext) $r2;

        $r4 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r3);

        $r5 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1;

        specialinvoke $r5.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerTriggerAsync$1: void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl,android.net.Uri,kotlin.coroutines.Continuation)>(r0, r1, null);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        $r7 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r4, null, null, $r6, 3, null);

        $r8 = staticinvoke <androidx.privacysandbox.ads.adservices.java.internal.CoroutineAdapterKt: com.google.common.util.concurrent.ListenableFuture asListenableFuture$default(kotlinx.coroutines.Deferred,java.lang.Object,int,java.lang.Object)>($r7, null, 1, null);

        return $r8;
    }

    public com.google.common.util.concurrent.ListenableFuture registerWebSourceAsync(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl r0;
        androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest r1;
        kotlinx.coroutines.MainCoroutineDispatcher $r2;
        kotlin.coroutines.CoroutineContext $r3;
        kotlinx.coroutines.CoroutineScope $r4;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1 $r5;
        kotlin.jvm.functions.Function2 $r6;
        kotlinx.coroutines.Deferred $r7;
        com.google.common.util.concurrent.ListenableFuture $r8;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        r1 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        $r2 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r3 = (kotlin.coroutines.CoroutineContext) $r2;

        $r4 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r3);

        $r5 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1;

        specialinvoke $r5.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebSourceAsync$1: void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl,androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest,kotlin.coroutines.Continuation)>(r0, r1, null);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        $r7 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r4, null, null, $r6, 3, null);

        $r8 = staticinvoke <androidx.privacysandbox.ads.adservices.java.internal.CoroutineAdapterKt: com.google.common.util.concurrent.ListenableFuture asListenableFuture$default(kotlinx.coroutines.Deferred,java.lang.Object,int,java.lang.Object)>($r7, null, 1, null);

        return $r8;
    }

    public com.google.common.util.concurrent.ListenableFuture registerWebTriggerAsync(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl r0;
        androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest r1;
        kotlinx.coroutines.MainCoroutineDispatcher $r2;
        kotlin.coroutines.CoroutineContext $r3;
        kotlinx.coroutines.CoroutineScope $r4;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1 $r5;
        kotlin.jvm.functions.Function2 $r6;
        kotlinx.coroutines.Deferred $r7;
        com.google.common.util.concurrent.ListenableFuture $r8;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        r1 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        $r2 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r3 = (kotlin.coroutines.CoroutineContext) $r2;

        $r4 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r3);

        $r5 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1;

        specialinvoke $r5.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$registerWebTriggerAsync$1: void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl,androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest,kotlin.coroutines.Continuation)>(r0, r1, null);

        $r6 = (kotlin.jvm.functions.Function2) $r5;

        $r7 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r4, null, null, $r6, 3, null);

        $r8 = staticinvoke <androidx.privacysandbox.ads.adservices.java.internal.CoroutineAdapterKt: com.google.common.util.concurrent.ListenableFuture asListenableFuture$default(kotlinx.coroutines.Deferred,java.lang.Object,int,java.lang.Object)>($r7, null, 1, null);

        return $r8;
    }

    public com.google.common.util.concurrent.ListenableFuture getMeasurementApiStatusAsync()
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl r0;
        kotlinx.coroutines.MainCoroutineDispatcher $r1;
        kotlin.coroutines.CoroutineContext $r2;
        kotlinx.coroutines.CoroutineScope $r3;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1 $r4;
        kotlin.jvm.functions.Function2 $r5;
        kotlinx.coroutines.Deferred $r6;
        com.google.common.util.concurrent.ListenableFuture $r7;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        $r1 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        $r2 = (kotlin.coroutines.CoroutineContext) $r1;

        $r3 = staticinvoke <kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)>($r2);

        $r4 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1;

        specialinvoke $r4.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl$getMeasurementApiStatusAsync$1: void <init>(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl,kotlin.coroutines.Continuation)>(r0, null);

        $r5 = (kotlin.jvm.functions.Function2) $r4;

        $r6 = staticinvoke <kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)>($r3, null, null, $r5, 3, null);

        $r7 = staticinvoke <androidx.privacysandbox.ads.adservices.java.internal.CoroutineAdapterKt: com.google.common.util.concurrent.ListenableFuture asListenableFuture$default(kotlinx.coroutines.Deferred,java.lang.Object,int,java.lang.Object)>($r6, null, 1, null);

        return $r7;
    }

    public static final androidx.privacysandbox.ads.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r0;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager $r1;

        $r0 := @parameter0: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        $r1 = $r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager mMeasurementManager>;

        return $r1;
    }

androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion
    private void <init>()
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion r0;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures 'from'(android.content.Context)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion r0;
        android.content.Context r1;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager r2, $r4;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion $r3;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures $r5;
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl $r6;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r3 = <androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager obtain(android.content.Context)>(r1);

        if $r4 == null goto label1;

        r2 = $r4;

        $r6 = new androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl;

        specialinvoke $r6.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext4JavaImpl: void <init>(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager)>(r2);

        return $r6;

     label1:
        $r5 = (androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures) null;

        return $r5;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Companion: void <init>()>();

        return;
    }

