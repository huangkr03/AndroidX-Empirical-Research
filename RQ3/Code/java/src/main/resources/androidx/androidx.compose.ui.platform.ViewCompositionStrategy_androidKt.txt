androidx.compose.ui.platform.ViewCompositionStrategy_androidKt
    private static final kotlin.jvm.functions.Function0 installForLifecycle(androidx.compose.ui.platform.AbstractComposeView, androidx.lifecycle.Lifecycle)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        androidx.lifecycle.Lifecycle r1;
        androidx.lifecycle.LifecycleEventObserver r2;
        androidx.lifecycle.Lifecycle$State $r3, $r4;
        java.lang.Enum $r5;
        int $i0;
        androidx.lifecycle.LifecycleObserver $r6;
        androidx.compose.ui.platform.ViewCompositionStrategy_androidKt$installForLifecycle$2 $r7;
        kotlin.jvm.functions.Function0 $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.IllegalStateException $r15;
        java.lang.String $r16, $r17;
        boolean $z0;

        r0 := @parameter0: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter1: androidx.lifecycle.Lifecycle;

        $r3 = virtualinvoke r1.<androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()>();

        $r4 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        $r5 = (java.lang.Enum) $r4;

        $i0 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r5);

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot configure ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to disposeComposition at Lifecycle ON_DESTROY: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is already destroyed");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.IllegalStateException;

        $r16 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label3:
        r2 = dynamicinvoke "onStateChanged" <androidx.lifecycle.LifecycleEventObserver (androidx.compose.ui.platform.AbstractComposeView)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event), methodhandle: "REF_INVOKE_STATIC" <androidx.compose.ui.platform.ViewCompositionStrategy_androidKt: void installForLifecycle$lambda-1(androidx.compose.ui.platform.AbstractComposeView,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>, methodtype: void __METHODTYPE__(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event));

        $r6 = (androidx.lifecycle.LifecycleObserver) r2;

        virtualinvoke r1.<androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>($r6);

        $r7 = new androidx.compose.ui.platform.ViewCompositionStrategy_androidKt$installForLifecycle$2;

        specialinvoke $r7.<androidx.compose.ui.platform.ViewCompositionStrategy_androidKt$installForLifecycle$2: void <init>(androidx.lifecycle.Lifecycle,androidx.lifecycle.LifecycleEventObserver)>(r1, r2);

        $r8 = (kotlin.jvm.functions.Function0) $r7;

        return $r8;
    }

    private static final void installForLifecycle$lambda-1(androidx.compose.ui.platform.AbstractComposeView, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.compose.ui.platform.AbstractComposeView $r0;
        androidx.lifecycle.LifecycleOwner r1;
        androidx.lifecycle.Lifecycle$Event r2, $r3;

        $r0 := @parameter0: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter1: androidx.lifecycle.LifecycleOwner;

        r2 := @parameter2: androidx.lifecycle.Lifecycle$Event;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$view");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<anonymous parameter 0>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "event");

        $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        if r2 != $r3 goto label1;

        virtualinvoke $r0.<androidx.compose.ui.platform.AbstractComposeView: void disposeComposition()>();

     label1:
        return;
    }

    public static final kotlin.jvm.functions.Function0 access$installForLifecycle(androidx.compose.ui.platform.AbstractComposeView, androidx.lifecycle.Lifecycle)
    {
        androidx.compose.ui.platform.AbstractComposeView r0;
        androidx.lifecycle.Lifecycle r1;
        kotlin.jvm.functions.Function0 $r2;

        r0 := @parameter0: androidx.compose.ui.platform.AbstractComposeView;

        r1 := @parameter1: androidx.lifecycle.Lifecycle;

        $r2 = staticinvoke <androidx.compose.ui.platform.ViewCompositionStrategy_androidKt: kotlin.jvm.functions.Function0 installForLifecycle(androidx.compose.ui.platform.AbstractComposeView,androidx.lifecycle.Lifecycle)>(r0, r1);

        return $r2;
    }

