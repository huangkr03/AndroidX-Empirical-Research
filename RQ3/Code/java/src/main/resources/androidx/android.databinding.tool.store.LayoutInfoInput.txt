android.databinding.tool.store.LayoutInfoInput
<android.databinding.tool.store.LayoutInfoInput: kotlin.reflect.KProperty[] $$delegatedProperties>
<android.databinding.tool.store.LayoutInfoInput: java.io.File baseBinderOutFile>
<android.databinding.tool.store.LayoutInfoInput: java.io.File depsLogOutFile>
<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoLog baseBinderLog>
<android.databinding.tool.store.LayoutInfoInput: java.lang.String packageName>
<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy allInfoFiles$delegate>
<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy groupedInfoFiles$delegate>
<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy deps$delegate>
<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy updatedDeps$delegate>
<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy existingBindingClasses$delegate>
<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy invalidatedClasses$delegate>
<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy filesToConsider$delegate>
<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy unchangedLog$delegate>
<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy invalidOutputs$delegate>
<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoInput$Args args>
<android.databinding.tool.store.LayoutInfoInput: java.lang.String LOG_FILE_NAME>
<android.databinding.tool.store.LayoutInfoInput: java.lang.String DEPS_LOG_FILE_NAME>
<android.databinding.tool.store.LayoutInfoInput: java.lang.String LAYOUT_KEY>
<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoInput$Companion Companion>
    static void <clinit>()
    {
        kotlin.reflect.KProperty[] $r0;
        kotlin.jvm.internal.PropertyReference1Impl $r1, $r5, $r9, $r13, $r17, $r21, $r25, $r29, $r33;
        kotlin.reflect.KClass $r2, $r6, $r10, $r14, $r18, $r22, $r26, $r30, $r34;
        kotlin.reflect.KProperty1 $r3, $r7, $r11, $r15, $r19, $r23, $r27, $r31, $r35;
        kotlin.reflect.KProperty $r4, $r8, $r12, $r16, $r20, $r24, $r28, $r32, $r36;
        android.databinding.tool.store.LayoutInfoInput$Companion $r37;

        $r0 = newarray (kotlin.reflect.KProperty)[9];

        $r1 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroid/databinding/tool/store/LayoutInfoInput;");

        specialinvoke $r1.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r2, "allInfoFiles", "getAllInfoFiles()Ljava/util/List;");

        $r3 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r1);

        $r4 = (kotlin.reflect.KProperty) $r3;

        $r0[0] = $r4;

        $r5 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r6 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroid/databinding/tool/store/LayoutInfoInput;");

        specialinvoke $r5.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r6, "groupedInfoFiles", "getGroupedInfoFiles()Ljava/util/Map;");

        $r7 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r5);

        $r8 = (kotlin.reflect.KProperty) $r7;

        $r0[1] = $r8;

        $r9 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r10 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroid/databinding/tool/store/LayoutInfoInput;");

        specialinvoke $r9.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r10, "deps", "getDeps()Landroid/databinding/tool/store/GenClassInfoLog;");

        $r11 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r9);

        $r12 = (kotlin.reflect.KProperty) $r11;

        $r0[2] = $r12;

        $r13 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r14 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroid/databinding/tool/store/LayoutInfoInput;");

        specialinvoke $r13.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r14, "updatedDeps", "getUpdatedDeps()Ljava/util/Set;");

        $r15 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r13);

        $r16 = (kotlin.reflect.KProperty) $r15;

        $r0[3] = $r16;

        $r17 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r18 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroid/databinding/tool/store/LayoutInfoInput;");

        specialinvoke $r17.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r18, "existingBindingClasses", "getExistingBindingClasses()Landroid/databinding/tool/store/GenClassInfoLog;");

        $r19 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r17);

        $r20 = (kotlin.reflect.KProperty) $r19;

        $r0[4] = $r20;

        $r21 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r22 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroid/databinding/tool/store/LayoutInfoInput;");

        specialinvoke $r21.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r22, "invalidatedClasses", "getInvalidatedClasses()Ljava/util/Set;");

        $r23 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r21);

        $r24 = (kotlin.reflect.KProperty) $r23;

        $r0[5] = $r24;

        $r25 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r26 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroid/databinding/tool/store/LayoutInfoInput;");

        specialinvoke $r25.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r26, "filesToConsider", "getFilesToConsider()Ljava/util/Set;");

        $r27 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r25);

        $r28 = (kotlin.reflect.KProperty) $r27;

        $r0[6] = $r28;

        $r29 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r30 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroid/databinding/tool/store/LayoutInfoInput;");

        specialinvoke $r29.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r30, "unchangedLog", "getUnchangedLog()Landroid/databinding/tool/store/LayoutInfoLog;");

        $r31 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r29);

        $r32 = (kotlin.reflect.KProperty) $r31;

        $r0[7] = $r32;

        $r33 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r34 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroid/databinding/tool/store/LayoutInfoInput;");

        specialinvoke $r33.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r34, "invalidOutputs", "getInvalidOutputs()Ljava/util/Set;");

        $r35 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r33);

        $r36 = (kotlin.reflect.KProperty) $r35;

        $r0[8] = $r36;

        <android.databinding.tool.store.LayoutInfoInput: kotlin.reflect.KProperty[] $$delegatedProperties> = $r0;

        $r37 = new android.databinding.tool.store.LayoutInfoInput$Companion;

        specialinvoke $r37.<android.databinding.tool.store.LayoutInfoInput$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoInput$Companion Companion> = $r37;

        <android.databinding.tool.store.LayoutInfoInput: java.lang.String LAYOUT_KEY> = "-layout";

        return;
    }

    public final android.databinding.tool.store.LayoutInfoLog getBaseBinderLog()
    {
        android.databinding.tool.store.LayoutInfoInput r0;
        android.databinding.tool.store.LayoutInfoLog $r1;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        $r1 = r0.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoLog baseBinderLog>;

        return $r1;
    }

    public final java.lang.String getPackageName()
    {
        android.databinding.tool.store.LayoutInfoInput r0;
        java.lang.String $r1;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        $r1 = r0.<android.databinding.tool.store.LayoutInfoInput: java.lang.String packageName>;

        return $r1;
    }

    private final java.util.List getAllInfoFiles()
    {
        android.databinding.tool.store.LayoutInfoInput r0, r2;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        java.util.List $r6;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        r1 = r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy allInfoFiles$delegate>;

        r2 = r0;

        $r4 = <android.databinding.tool.store.LayoutInfoInput: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[0];

        $r5 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r6 = (java.util.List) $r5;

        return $r6;
    }

    private final java.util.Map getGroupedInfoFiles()
    {
        android.databinding.tool.store.LayoutInfoInput r0, r2;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        java.util.Map $r6;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        r1 = r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy groupedInfoFiles$delegate>;

        r2 = r0;

        $r4 = <android.databinding.tool.store.LayoutInfoInput: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[1];

        $r5 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r6 = (java.util.Map) $r5;

        return $r6;
    }

    public final android.databinding.tool.store.GenClassInfoLog getDeps()
    {
        android.databinding.tool.store.LayoutInfoInput r0, r2;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        android.databinding.tool.store.GenClassInfoLog $r6;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        r1 = r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy deps$delegate>;

        r2 = r0;

        $r4 = <android.databinding.tool.store.LayoutInfoInput: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[2];

        $r5 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r6 = (android.databinding.tool.store.GenClassInfoLog) $r5;

        return $r6;
    }

    public final java.util.Set getUpdatedDeps()
    {
        android.databinding.tool.store.LayoutInfoInput r0, r2;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        java.util.Set $r6;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        r1 = r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy updatedDeps$delegate>;

        r2 = r0;

        $r4 = <android.databinding.tool.store.LayoutInfoInput: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[3];

        $r5 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r6 = (java.util.Set) $r5;

        return $r6;
    }

    public final android.databinding.tool.store.GenClassInfoLog getExistingBindingClasses()
    {
        android.databinding.tool.store.LayoutInfoInput r0, r2;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        android.databinding.tool.store.GenClassInfoLog $r6;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        r1 = r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy existingBindingClasses$delegate>;

        r2 = r0;

        $r4 = <android.databinding.tool.store.LayoutInfoInput: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[4];

        $r5 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r6 = (android.databinding.tool.store.GenClassInfoLog) $r5;

        return $r6;
    }

    public final java.util.Set getInvalidatedClasses()
    {
        android.databinding.tool.store.LayoutInfoInput r0, r2;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        java.util.Set $r6;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        r1 = r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy invalidatedClasses$delegate>;

        r2 = r0;

        $r4 = <android.databinding.tool.store.LayoutInfoInput: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[5];

        $r5 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r6 = (java.util.Set) $r5;

        return $r6;
    }

    public final java.util.Set getFilesToConsider()
    {
        android.databinding.tool.store.LayoutInfoInput r0, r2;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        java.util.Set $r6;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        r1 = r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy filesToConsider$delegate>;

        r2 = r0;

        $r4 = <android.databinding.tool.store.LayoutInfoInput: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[6];

        $r5 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r6 = (java.util.Set) $r5;

        return $r6;
    }

    public final android.databinding.tool.store.LayoutInfoLog getUnchangedLog()
    {
        android.databinding.tool.store.LayoutInfoInput r0, r2;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        android.databinding.tool.store.LayoutInfoLog $r6;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        r1 = r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy unchangedLog$delegate>;

        r2 = r0;

        $r4 = <android.databinding.tool.store.LayoutInfoInput: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[7];

        $r5 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r6 = (android.databinding.tool.store.LayoutInfoLog) $r5;

        return $r6;
    }

    private final java.util.Set getInvalidOutputs()
    {
        android.databinding.tool.store.LayoutInfoInput r0, r2;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        java.util.Set $r6;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        r1 = r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy invalidOutputs$delegate>;

        r2 = r0;

        $r4 = <android.databinding.tool.store.LayoutInfoInput: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r3 = $r4[8];

        $r5 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r6 = (java.util.Set) $r5;

        return $r6;
    }

    public final void saveLog$compilerCommon(android.databinding.tool.store.LayoutInfoLog)
    {
        android.databinding.tool.store.LayoutInfoInput r0;
        android.databinding.tool.store.LayoutInfoLog r1;
        android.databinding.tool.store.GenClassInfoLog r2, $r6, $r7, $r8;
        java.io.File $r3, $r5, $r9, $r11;
        android.databinding.tool.store.LayoutInfoInput$Args $r4, $r10, $r14;
        java.lang.StringBuilder $r12, $r13, $r16, $r17;
        java.lang.String $r15, $r18;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        r1 := @parameter0: android.databinding.tool.store.LayoutInfoLog;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "myLog");

        $r3 = r0.<android.databinding.tool.store.LayoutInfoInput: java.io.File baseBinderOutFile>;

        virtualinvoke r1.<android.databinding.tool.store.LayoutInfoLog: void serialize(java.io.File)>($r3);

        $r4 = r0.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoInput$Args args>;

        $r5 = virtualinvoke $r4.<android.databinding.tool.store.LayoutInfoInput$Args: java.io.File getArtifactFolder()>();

        staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r5);

        $r6 = new android.databinding.tool.store.GenClassInfoLog;

        specialinvoke $r6.<android.databinding.tool.store.GenClassInfoLog: void <init>(java.util.Map,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        r2 = $r6;

        $r7 = virtualinvoke r0.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.GenClassInfoLog getDeps()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)>($r7, "deps");

        virtualinvoke r2.<android.databinding.tool.store.GenClassInfoLog: void addAll(android.databinding.tool.store.GenClassInfoLog)>($r7);

        $r8 = virtualinvoke r1.<android.databinding.tool.store.LayoutInfoLog: android.databinding.tool.store.GenClassInfoLog getClassInfoLog()>();

        virtualinvoke r2.<android.databinding.tool.store.GenClassInfoLog: void addAll(android.databinding.tool.store.GenClassInfoLog)>($r8);

        $r9 = new java.io.File;

        $r10 = r0.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoInput$Args args>;

        $r11 = virtualinvoke $r10.<android.databinding.tool.store.LayoutInfoInput$Args: java.io.File getArtifactFolder()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r14 = r0.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoInput$Args args>;

        $r15 = virtualinvoke $r14.<android.databinding.tool.store.LayoutInfoInput$Args: java.lang.String getPackageName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-binding_classes.json");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, $r18);

        virtualinvoke r2.<android.databinding.tool.store.GenClassInfoLog: void serialize(java.io.File)>($r9);

        return;
    }

    public final android.databinding.tool.store.LayoutInfoInput$Args getArgs()
    {
        android.databinding.tool.store.LayoutInfoInput r0;
        android.databinding.tool.store.LayoutInfoInput$Args $r1;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        $r1 = r0.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoInput$Args args>;

        return $r1;
    }

    public void <init>(android.databinding.tool.store.LayoutInfoInput$Args)
    {
        android.databinding.tool.store.LayoutInfoInput r0;
        android.databinding.tool.store.LayoutInfoInput$Args r1, $r3, $r6, $r11;
        java.io.File $r2, $r4, $r5, $r7, $r8;
        android.databinding.tool.store.LayoutInfoLog$Companion $r9;
        android.databinding.tool.store.LayoutInfoLog $r10;
        java.lang.String $r12;
        android.databinding.tool.store.LayoutInfoInput$allInfoFiles$2 $r13;
        kotlin.LazyThreadSafetyMode $r14, $r18, $r22, $r26, $r30, $r34, $r41, $r45;
        kotlin.jvm.functions.Function0 $r15, $r19, $r23, $r27, $r31, $r35, $r38, $r42, $r46;
        kotlin.Lazy $r16, $r20, $r24, $r28, $r32, $r36, $r39, $r43, $r47;
        android.databinding.tool.store.LayoutInfoInput$groupedInfoFiles$2 $r17;
        android.databinding.tool.store.LayoutInfoInput$deps$2 $r21;
        android.databinding.tool.store.LayoutInfoInput$updatedDeps$2 $r25;
        android.databinding.tool.store.LayoutInfoInput$existingBindingClasses$2 $r29;
        android.databinding.tool.store.LayoutInfoInput$invalidatedClasses$2 $r33;
        android.databinding.tool.store.LayoutInfoInput$filesToConsider$2 $r37;
        android.databinding.tool.store.LayoutInfoInput$unchangedLog$2 $r40;
        android.databinding.tool.store.LayoutInfoInput$invalidOutputs$2 $r44;

        r0 := @this: android.databinding.tool.store.LayoutInfoInput;

        r1 := @parameter0: android.databinding.tool.store.LayoutInfoInput$Args;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)>(r1, "args");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoInput$Args args> = r1;

        $r2 = new java.io.File;

        $r3 = r0.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoInput$Args args>;

        $r4 = virtualinvoke $r3.<android.databinding.tool.store.LayoutInfoInput$Args: java.io.File getLogFolder()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "base_builder_log.json");

        r0.<android.databinding.tool.store.LayoutInfoInput: java.io.File baseBinderOutFile> = $r2;

        $r5 = new java.io.File;

        $r6 = r0.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoInput$Args args>;

        $r7 = virtualinvoke $r6.<android.databinding.tool.store.LayoutInfoInput$Args: java.io.File getLogFolder()>();

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "deps_log.json");

        r0.<android.databinding.tool.store.LayoutInfoInput: java.io.File depsLogOutFile> = $r5;

        $r9 = <android.databinding.tool.store.LayoutInfoLog: android.databinding.tool.store.LayoutInfoLog$Companion Companion>;

        $r8 = r0.<android.databinding.tool.store.LayoutInfoInput: java.io.File baseBinderOutFile>;

        $r10 = virtualinvoke $r9.<android.databinding.tool.store.LayoutInfoLog$Companion: android.databinding.tool.store.LayoutInfoLog fromFile(java.io.File)>($r8);

        r0.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoLog baseBinderLog> = $r10;

        $r11 = r0.<android.databinding.tool.store.LayoutInfoInput: android.databinding.tool.store.LayoutInfoInput$Args args>;

        $r12 = virtualinvoke $r11.<android.databinding.tool.store.LayoutInfoInput$Args: java.lang.String getPackageName()>();

        r0.<android.databinding.tool.store.LayoutInfoInput: java.lang.String packageName> = $r12;

        $r14 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r13 = new android.databinding.tool.store.LayoutInfoInput$allInfoFiles$2;

        specialinvoke $r13.<android.databinding.tool.store.LayoutInfoInput$allInfoFiles$2: void <init>(android.databinding.tool.store.LayoutInfoInput)>(r0);

        $r15 = (kotlin.jvm.functions.Function0) $r13;

        $r16 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r14, $r15);

        r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy allInfoFiles$delegate> = $r16;

        $r18 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r17 = new android.databinding.tool.store.LayoutInfoInput$groupedInfoFiles$2;

        specialinvoke $r17.<android.databinding.tool.store.LayoutInfoInput$groupedInfoFiles$2: void <init>(android.databinding.tool.store.LayoutInfoInput)>(r0);

        $r19 = (kotlin.jvm.functions.Function0) $r17;

        $r20 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r18, $r19);

        r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy groupedInfoFiles$delegate> = $r20;

        $r22 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r21 = new android.databinding.tool.store.LayoutInfoInput$deps$2;

        specialinvoke $r21.<android.databinding.tool.store.LayoutInfoInput$deps$2: void <init>(android.databinding.tool.store.LayoutInfoInput)>(r0);

        $r23 = (kotlin.jvm.functions.Function0) $r21;

        $r24 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r22, $r23);

        r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy deps$delegate> = $r24;

        $r26 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r25 = new android.databinding.tool.store.LayoutInfoInput$updatedDeps$2;

        specialinvoke $r25.<android.databinding.tool.store.LayoutInfoInput$updatedDeps$2: void <init>(android.databinding.tool.store.LayoutInfoInput)>(r0);

        $r27 = (kotlin.jvm.functions.Function0) $r25;

        $r28 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r26, $r27);

        r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy updatedDeps$delegate> = $r28;

        $r30 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r29 = new android.databinding.tool.store.LayoutInfoInput$existingBindingClasses$2;

        specialinvoke $r29.<android.databinding.tool.store.LayoutInfoInput$existingBindingClasses$2: void <init>(android.databinding.tool.store.LayoutInfoInput)>(r0);

        $r31 = (kotlin.jvm.functions.Function0) $r29;

        $r32 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r30, $r31);

        r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy existingBindingClasses$delegate> = $r32;

        $r34 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r33 = new android.databinding.tool.store.LayoutInfoInput$invalidatedClasses$2;

        specialinvoke $r33.<android.databinding.tool.store.LayoutInfoInput$invalidatedClasses$2: void <init>(android.databinding.tool.store.LayoutInfoInput)>(r0);

        $r35 = (kotlin.jvm.functions.Function0) $r33;

        $r36 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r34, $r35);

        r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy invalidatedClasses$delegate> = $r36;

        $r37 = new android.databinding.tool.store.LayoutInfoInput$filesToConsider$2;

        specialinvoke $r37.<android.databinding.tool.store.LayoutInfoInput$filesToConsider$2: void <init>(android.databinding.tool.store.LayoutInfoInput)>(r0);

        $r38 = (kotlin.jvm.functions.Function0) $r37;

        $r39 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r38);

        r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy filesToConsider$delegate> = $r39;

        $r41 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r40 = new android.databinding.tool.store.LayoutInfoInput$unchangedLog$2;

        specialinvoke $r40.<android.databinding.tool.store.LayoutInfoInput$unchangedLog$2: void <init>(android.databinding.tool.store.LayoutInfoInput)>(r0);

        $r42 = (kotlin.jvm.functions.Function0) $r40;

        $r43 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r41, $r42);

        r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy unchangedLog$delegate> = $r43;

        $r45 = <kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE>;

        $r44 = new android.databinding.tool.store.LayoutInfoInput$invalidOutputs$2;

        specialinvoke $r44.<android.databinding.tool.store.LayoutInfoInput$invalidOutputs$2: void <init>(android.databinding.tool.store.LayoutInfoInput)>(r0);

        $r46 = (kotlin.jvm.functions.Function0) $r44;

        $r47 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)>($r45, $r46);

        r0.<android.databinding.tool.store.LayoutInfoInput: kotlin.Lazy invalidOutputs$delegate> = $r47;

        return;
    }

    public static final java.util.List access$getAllInfoFiles$p(android.databinding.tool.store.LayoutInfoInput)
    {
        android.databinding.tool.store.LayoutInfoInput $r0;
        java.util.List $r1;

        $r0 := @parameter0: android.databinding.tool.store.LayoutInfoInput;

        $r1 = specialinvoke $r0.<android.databinding.tool.store.LayoutInfoInput: java.util.List getAllInfoFiles()>();

        return $r1;
    }

    public static final java.io.File access$getDepsLogOutFile$p(android.databinding.tool.store.LayoutInfoInput)
    {
        android.databinding.tool.store.LayoutInfoInput $r0;
        java.io.File $r1;

        $r0 := @parameter0: android.databinding.tool.store.LayoutInfoInput;

        $r1 = $r0.<android.databinding.tool.store.LayoutInfoInput: java.io.File depsLogOutFile>;

        return $r1;
    }

    public static final java.util.Set access$getInvalidOutputs$p(android.databinding.tool.store.LayoutInfoInput)
    {
        android.databinding.tool.store.LayoutInfoInput $r0;
        java.util.Set $r1;

        $r0 := @parameter0: android.databinding.tool.store.LayoutInfoInput;

        $r1 = specialinvoke $r0.<android.databinding.tool.store.LayoutInfoInput: java.util.Set getInvalidOutputs()>();

        return $r1;
    }

    public static final java.util.Map access$getGroupedInfoFiles$p(android.databinding.tool.store.LayoutInfoInput)
    {
        android.databinding.tool.store.LayoutInfoInput $r0;
        java.util.Map $r1;

        $r0 := @parameter0: android.databinding.tool.store.LayoutInfoInput;

        $r1 = specialinvoke $r0.<android.databinding.tool.store.LayoutInfoInput: java.util.Map getGroupedInfoFiles()>();

        return $r1;
    }

    public static final java.lang.String access$getLAYOUT_KEY$cp()
    {
        java.lang.String $r0;

        $r0 = <android.databinding.tool.store.LayoutInfoInput: java.lang.String LAYOUT_KEY>;

        return $r0;
    }

