androidx.wear.watchface.WatchFaceImpl
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceImpl$Companion Companion>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.style.CurrentUserStyleRepository currentUserStyleRepository>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.BroadcastsObserver broadcastsObserver>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.BroadcastsReceiver broadcastsReceiver>
<androidx.wear.watchface.WatchFaceImpl: java.util.HashMap defaultRenderParametersForDrawMode>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$SystemTimeProvider systemTimeProvider>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$LegacyWatchFaceOverlayStyle legacyWatchFaceStyle>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$TapListener tapListener>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.MockTime mockTime>
<androidx.wear.watchface.WatchFaceImpl: java.lang.Integer lastTappedComplicationId>
<androidx.wear.watchface.WatchFaceImpl: boolean muteMode>
<androidx.wear.watchface.WatchFaceImpl: long nextDrawTimeMillis>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.CancellableUniqueTask pendingUpdateTime>
<androidx.wear.watchface.WatchFaceImpl: android.content.ComponentName componentName>
<androidx.wear.watchface.WatchFaceImpl: java.time.Instant previewReferenceInstant>
<androidx.wear.watchface.WatchFaceImpl: boolean inOnSetStyle>
<androidx.wear.watchface.WatchFaceImpl: boolean initComplete>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer ambientObserver>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer interruptionFilterObserver>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer visibilityObserver>
<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer batteryLowAndNotChargingObserver>
<androidx.wear.watchface.WatchFaceImpl: int NO_DEFAULT_DATA_SOURCE>
<androidx.wear.watchface.WatchFaceImpl: java.lang.String MOCK_TIME_INTENT>
<androidx.wear.watchface.WatchFaceImpl: java.lang.String EXTRA_MOCK_TIME_SPEED_MULTIPLIER>
<androidx.wear.watchface.WatchFaceImpl: float MOCK_TIME_DEFAULT_SPEED_MULTIPLIER>
<androidx.wear.watchface.WatchFaceImpl: java.lang.String EXTRA_MOCK_TIME_WRAPPING_MIN_TIME>
<androidx.wear.watchface.WatchFaceImpl: long MOCK_TIME_WRAPPING_MIN_TIME_DEFAULT>
<androidx.wear.watchface.WatchFaceImpl: java.lang.String EXTRA_MOCK_TIME_WRAPPING_MAX_TIME>
<androidx.wear.watchface.WatchFaceImpl: long MAX_LOW_POWER_INTERACTIVE_UPDATE_RATE_MS>
<androidx.wear.watchface.WatchFaceImpl: float INITIAL_LOW_BATTERY_THRESHOLD>
    public void <init>(androidx.wear.watchface.WatchFace, androidx.wear.watchface.WatchFaceHostApi, androidx.wear.watchface.WatchState, androidx.wear.watchface.style.CurrentUserStyleRepository, androidx.wear.watchface.ComplicationSlotsManager, androidx.wear.watchface.BroadcastsObserver, androidx.wear.watchface.BroadcastsReceiver)
    {
        androidx.wear.watchface.WatchFaceImpl r0, r9;
        androidx.wear.watchface.WatchFace r1;
        androidx.wear.watchface.WatchFaceHostApi r2, $r46, $r49, $r52, $r64, $r69, $r83;
        androidx.wear.watchface.WatchState r3, $r71, $r72, $r75, $r76, $r84, $r86, $r94, $r97;
        androidx.wear.watchface.style.CurrentUserStyleRepository r4;
        androidx.wear.watchface.ComplicationSlotsManager r5, $r12, $r19, $r26, $r33;
        androidx.wear.watchface.BroadcastsObserver r6;
        androidx.wear.watchface.BroadcastsReceiver r7;
        android.content.IntentFilter r8, $r68, r93;
        android.content.Intent r10;
        androidx.wear.watchface.RenderParameters $r11, $r18, $r25, $r32;
        androidx.wear.watchface.DrawMode $r13, $r14, $r20, $r21, $r27, $r28, $r34, $r35;
        java.util.Set $r15, $r22, $r29, $r36;
        java.util.Map $r16, $r23, $r30, $r37;
        kotlin.Pair $r17, $r24, $r31, $r38;
        java.util.HashMap $r39;
        androidx.wear.watchface.WatchFace$SystemTimeProvider $r40;
        androidx.wear.watchface.WatchFace$LegacyWatchFaceOverlayStyle $r41;
        androidx.wear.watchface.Renderer $r42, $r65, $r66, $r67;
        androidx.wear.watchface.WatchFace$TapListener $r43;
        androidx.wear.watchface.MockTime $r44;
        androidx.wear.watchface.CancellableUniqueTask $r45;
        android.os.Handler $r47;
        android.content.ComponentName $r48, $r81;
        android.content.Context $r50, $r53, $r70;
        java.lang.String $r51, $r55;
        java.lang.Class $r54;
        androidx.wear.watchface.WatchFaceImpl$ambientObserver$1 $r56;
        androidx.wear.watchface.Observer $r57, $r59, $r61, $r63, $r74, $r78, $r96, $r99;
        androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1 $r58;
        androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1 $r60;
        androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1 $r62;
        boolean $z1, $z2, $z3, z4, $z5, z6, z7;
        androidx.wear.watchface.ObservableWatchData $r73, $r77, $r95, $r98;
        int $i0, i1;
        androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate $r79;
        androidx.wear.watchface.WatchFace$Companion $r80;
        androidx.wear.watchface.WatchFace$EditorDelegate $r82;
        java.security.InvalidParameterException $r87;
        kotlin.Pair[] r88;
        java.time.Instant r89, r90, $r91;
        long $l2;
        java.util.Collection r92;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        r1 := @parameter0: androidx.wear.watchface.WatchFace;

        r2 := @parameter1: androidx.wear.watchface.WatchFaceHostApi;

        r3 := @parameter2: androidx.wear.watchface.WatchState;

        r4 := @parameter3: androidx.wear.watchface.style.CurrentUserStyleRepository;

        r5 := @parameter4: androidx.wear.watchface.ComplicationSlotsManager;

        r6 := @parameter5: androidx.wear.watchface.BroadcastsObserver;

        r7 := @parameter6: androidx.wear.watchface.BroadcastsReceiver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "watchface");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "watchFaceHostApi");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "watchState");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "currentUserStyleRepository");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "complicationSlotsManager");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "broadcastsObserver");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi> = r2;

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState> = r3;

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.style.CurrentUserStyleRepository currentUserStyleRepository> = r4;

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager> = r5;

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.BroadcastsObserver broadcastsObserver> = r6;

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.BroadcastsReceiver broadcastsReceiver> = r7;

        r88 = newarray (kotlin.Pair)[4];

        $r13 = <androidx.wear.watchface.DrawMode: androidx.wear.watchface.DrawMode AMBIENT>;

        $r11 = new androidx.wear.watchface.RenderParameters;

        $r14 = <androidx.wear.watchface.DrawMode: androidx.wear.watchface.DrawMode AMBIENT>;

        $r15 = <androidx.wear.watchface.style.WatchFaceLayer: java.util.Set ALL_WATCH_FACE_LAYERS>;

        $r12 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>;

        $r16 = virtualinvoke $r12.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map getLastComplicationTapDownEvents()>();

        specialinvoke $r11.<androidx.wear.watchface.RenderParameters: void <init>(androidx.wear.watchface.DrawMode,java.util.Set,androidx.wear.watchface.RenderParameters$HighlightLayer,java.util.Map)>($r14, $r15, null, $r16);

        $r17 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r13, $r11);

        r88[0] = $r17;

        $r20 = <androidx.wear.watchface.DrawMode: androidx.wear.watchface.DrawMode INTERACTIVE>;

        $r18 = new androidx.wear.watchface.RenderParameters;

        $r21 = <androidx.wear.watchface.DrawMode: androidx.wear.watchface.DrawMode INTERACTIVE>;

        $r22 = <androidx.wear.watchface.style.WatchFaceLayer: java.util.Set ALL_WATCH_FACE_LAYERS>;

        $r19 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>;

        $r23 = virtualinvoke $r19.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map getLastComplicationTapDownEvents()>();

        specialinvoke $r18.<androidx.wear.watchface.RenderParameters: void <init>(androidx.wear.watchface.DrawMode,java.util.Set,androidx.wear.watchface.RenderParameters$HighlightLayer,java.util.Map)>($r21, $r22, null, $r23);

        $r24 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r20, $r18);

        r88[1] = $r24;

        $r27 = <androidx.wear.watchface.DrawMode: androidx.wear.watchface.DrawMode LOW_BATTERY_INTERACTIVE>;

        $r25 = new androidx.wear.watchface.RenderParameters;

        $r28 = <androidx.wear.watchface.DrawMode: androidx.wear.watchface.DrawMode LOW_BATTERY_INTERACTIVE>;

        $r29 = <androidx.wear.watchface.style.WatchFaceLayer: java.util.Set ALL_WATCH_FACE_LAYERS>;

        $r26 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>;

        $r30 = virtualinvoke $r26.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map getLastComplicationTapDownEvents()>();

        specialinvoke $r25.<androidx.wear.watchface.RenderParameters: void <init>(androidx.wear.watchface.DrawMode,java.util.Set,androidx.wear.watchface.RenderParameters$HighlightLayer,java.util.Map)>($r28, $r29, null, $r30);

        $r31 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r27, $r25);

        r88[2] = $r31;

        $r34 = <androidx.wear.watchface.DrawMode: androidx.wear.watchface.DrawMode MUTE>;

        $r32 = new androidx.wear.watchface.RenderParameters;

        $r35 = <androidx.wear.watchface.DrawMode: androidx.wear.watchface.DrawMode MUTE>;

        $r36 = <androidx.wear.watchface.style.WatchFaceLayer: java.util.Set ALL_WATCH_FACE_LAYERS>;

        $r33 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>;

        $r37 = virtualinvoke $r33.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map getLastComplicationTapDownEvents()>();

        specialinvoke $r32.<androidx.wear.watchface.RenderParameters: void <init>(androidx.wear.watchface.DrawMode,java.util.Set,androidx.wear.watchface.RenderParameters$HighlightLayer,java.util.Map)>($r35, $r36, null, $r37);

        $r38 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r34, $r32);

        r88[3] = $r38;

        $r39 = staticinvoke <kotlin.collections.MapsKt: java.util.HashMap hashMapOf(kotlin.Pair[])>(r88);

        r0.<androidx.wear.watchface.WatchFaceImpl: java.util.HashMap defaultRenderParametersForDrawMode> = $r39;

        $r40 = virtualinvoke r1.<androidx.wear.watchface.WatchFace: androidx.wear.watchface.WatchFace$SystemTimeProvider getSystemTimeProvider$wear_watchface_release()>();

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$SystemTimeProvider systemTimeProvider> = $r40;

        $r41 = virtualinvoke r1.<androidx.wear.watchface.WatchFace: androidx.wear.watchface.WatchFace$LegacyWatchFaceOverlayStyle getLegacyWatchFaceStyle()>();

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$LegacyWatchFaceOverlayStyle legacyWatchFaceStyle> = $r41;

        $r42 = virtualinvoke r1.<androidx.wear.watchface.WatchFace: androidx.wear.watchface.Renderer getRenderer()>();

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer> = $r42;

        $r43 = virtualinvoke r1.<androidx.wear.watchface.WatchFace: androidx.wear.watchface.WatchFace$TapListener getTapListener$wear_watchface_release()>();

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$TapListener tapListener> = $r43;

        $r44 = new androidx.wear.watchface.MockTime;

        specialinvoke $r44.<androidx.wear.watchface.MockTime: void <init>(double,long,long)>(1.0, 0L, 9223372036854775807L);

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.MockTime mockTime> = $r44;

        $r45 = new androidx.wear.watchface.CancellableUniqueTask;

        $r46 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        $r47 = interfaceinvoke $r46.<androidx.wear.watchface.WatchFaceHostApi: android.os.Handler getUiThreadHandler()>();

        specialinvoke $r45.<androidx.wear.watchface.CancellableUniqueTask: void <init>(android.os.Handler)>($r47);

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.CancellableUniqueTask pendingUpdateTime> = $r45;

        $r48 = new android.content.ComponentName;

        $r49 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        $r50 = interfaceinvoke $r49.<androidx.wear.watchface.WatchFaceHostApi: android.content.Context getContext()>();

        $r51 = virtualinvoke $r50.<android.content.Context: java.lang.String getPackageName()>();

        $r52 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        $r53 = interfaceinvoke $r52.<androidx.wear.watchface.WatchFaceHostApi: android.content.Context getContext()>();

        $r54 = virtualinvoke $r53.<java.lang.Object: java.lang.Class getClass()>();

        $r55 = virtualinvoke $r54.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r48.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r51, $r55);

        r0.<androidx.wear.watchface.WatchFaceImpl: android.content.ComponentName componentName> = $r48;

        r89 = virtualinvoke r1.<androidx.wear.watchface.WatchFace: java.time.Instant getOverridePreviewReferenceInstant()>();

        if r89 != null goto label05;

        i1 = virtualinvoke r1.<androidx.wear.watchface.WatchFace: int getWatchFaceType()>();

        tableswitch(i1)
        {
            case 0: goto label01;
            case 1: goto label02;
            default: goto label03;
        };

     label01:
        $r86 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $l2 = virtualinvoke $r86.<androidx.wear.watchface.WatchState: long getAnalogPreviewReferenceTimeMillis()>();

        goto label04;

     label02:
        $r84 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $l2 = virtualinvoke $r84.<androidx.wear.watchface.WatchState: long getDigitalPreviewReferenceTimeMillis()>();

        goto label04;

     label03:
        $r87 = new java.security.InvalidParameterException;

        specialinvoke $r87.<java.security.InvalidParameterException: void <init>(java.lang.String)>("Unrecognized watchFaceType");

        throw $r87;

     label04:
        r90 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>($l2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r90, "ofEpochMilli(\n          \u2026)\n            }\n        )");

        $r91 = r90;

        goto label06;

     label05:
        $r91 = r89;

     label06:
        r0.<androidx.wear.watchface.WatchFaceImpl: java.time.Instant previewReferenceInstant> = $r91;

        $r56 = new androidx.wear.watchface.WatchFaceImpl$ambientObserver$1;

        specialinvoke $r56.<androidx.wear.watchface.WatchFaceImpl$ambientObserver$1: void <init>(androidx.wear.watchface.WatchFaceImpl)>(r0);

        $r57 = (androidx.wear.watchface.Observer) $r56;

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer ambientObserver> = $r57;

        $r58 = new androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1;

        specialinvoke $r58.<androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1: void <init>(androidx.wear.watchface.WatchFaceImpl)>(r0);

        $r59 = (androidx.wear.watchface.Observer) $r58;

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer interruptionFilterObserver> = $r59;

        $r60 = new androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1;

        specialinvoke $r60.<androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1: void <init>(androidx.wear.watchface.WatchFaceImpl)>(r0);

        $r61 = (androidx.wear.watchface.Observer) $r60;

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer visibilityObserver> = $r61;

        $r62 = new androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1;

        specialinvoke $r62.<androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1: void <init>(androidx.wear.watchface.WatchFaceImpl)>(r0);

        $r63 = (androidx.wear.watchface.Observer) $r62;

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer batteryLowAndNotChargingObserver> = $r63;

        $r65 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        $r64 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        virtualinvoke $r65.<androidx.wear.watchface.Renderer: void setWatchFaceHostApi$wear_watchface_release(androidx.wear.watchface.WatchFaceHostApi)>($r64);

        $r66 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        virtualinvoke $r66.<androidx.wear.watchface.Renderer: void uiThreadInitInternal$wear_watchface_release()>();

        $r67 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        r92 = virtualinvoke $r67.<androidx.wear.watchface.Renderer: java.util.Collection getAdditionalContentDescriptionLabels()>();

        z4 = 0;

        $z1 = interfaceinvoke r92.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        if $z5 == 0 goto label09;

        $r83 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        interfaceinvoke $r83.<androidx.wear.watchface.WatchFaceHostApi: void updateContentDescriptionLabels()>();

     label09:
        $r68 = new android.content.IntentFilter;

        specialinvoke $r68.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.BATTERY_CHANGED");

        r93 = $r68;

        z6 = 0;

        z7 = 0;

        r8 = r93;

        r9 = r0;

        $r69 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        $r70 = interfaceinvoke $r69.<androidx.wear.watchface.WatchFaceHostApi: android.content.Context getContext()>();

        r10 = virtualinvoke $r70.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(null, r8);

        virtualinvoke r9.<androidx.wear.watchface.WatchFaceImpl: void setIsBatteryLowAndNotChargingFromBatteryStatus$wear_watchface_release(android.content.Intent)>(r10);

        $r71 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $z2 = virtualinvoke $r71.<androidx.wear.watchface.WatchState: boolean isHeadless()>();

        if $z2 != 0 goto label10;

        $r80 = <androidx.wear.watchface.WatchFace: androidx.wear.watchface.WatchFace$Companion Companion>;

        $r81 = r0.<androidx.wear.watchface.WatchFaceImpl: android.content.ComponentName componentName>;

        $r79 = new androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate;

        specialinvoke $r79.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: void <init>(androidx.wear.watchface.WatchFaceImpl)>(r0);

        $r82 = (androidx.wear.watchface.WatchFace$EditorDelegate) $r79;

        virtualinvoke $r80.<androidx.wear.watchface.WatchFace$Companion: void registerEditorDelegate(android.content.ComponentName,androidx.wear.watchface.WatchFace$EditorDelegate)>($r81, $r82);

     label10:
        $r72 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r73 = virtualinvoke $r72.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isAmbient()>();

        $r74 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer ambientObserver>;

        virtualinvoke $r73.<androidx.wear.watchface.ObservableWatchData: void addObserver(androidx.wear.watchface.Observer)>($r74);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 30 goto label11;

        $r75 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $z3 = virtualinvoke $r75.<androidx.wear.watchface.WatchState: boolean isHeadless()>();

        if $z3 != 0 goto label11;

        $r76 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r77 = virtualinvoke $r76.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isBatteryLowAndNotCharging()>();

        $r78 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer batteryLowAndNotChargingObserver>;

        virtualinvoke $r77.<androidx.wear.watchface.ObservableWatchData: void addObserver(androidx.wear.watchface.Observer)>($r78);

     label11:
        $r94 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r95 = virtualinvoke $r94.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData getInterruptionFilter()>();

        $r96 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer interruptionFilterObserver>;

        virtualinvoke $r95.<androidx.wear.watchface.ObservableWatchData: void addObserver(androidx.wear.watchface.Observer)>($r96);

        $r97 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r98 = virtualinvoke $r97.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isVisible()>();

        $r99 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer visibilityObserver>;

        virtualinvoke $r98.<androidx.wear.watchface.ObservableWatchData: void addObserver(androidx.wear.watchface.Observer)>($r99);

        return;
    }

    public final androidx.wear.watchface.style.CurrentUserStyleRepository getCurrentUserStyleRepository$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.style.CurrentUserStyleRepository $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.style.CurrentUserStyleRepository currentUserStyleRepository>;

        return $r1;
    }

    public final androidx.wear.watchface.ComplicationSlotsManager getComplicationSlotsManager()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.ComplicationSlotsManager $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>;

        return $r1;
    }

    public final void setComplicationSlotsManager(androidx.wear.watchface.ComplicationSlotsManager)
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.ComplicationSlotsManager r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        r1 := @parameter0: androidx.wear.watchface.ComplicationSlotsManager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager> = r1;

        return;
    }

    public final androidx.wear.watchface.BroadcastsReceiver getBroadcastsReceiver$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.BroadcastsReceiver $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.BroadcastsReceiver broadcastsReceiver>;

        return $r1;
    }

    public final void setBroadcastsReceiver$wear_watchface_release(androidx.wear.watchface.BroadcastsReceiver)
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.BroadcastsReceiver r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        r1 := @parameter0: androidx.wear.watchface.BroadcastsReceiver;

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.BroadcastsReceiver broadcastsReceiver> = r1;

        return;
    }

    public final androidx.wear.watchface.WatchFace$SystemTimeProvider getSystemTimeProvider$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.WatchFace$SystemTimeProvider $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$SystemTimeProvider systemTimeProvider>;

        return $r1;
    }

    public final androidx.wear.watchface.Renderer getRenderer$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.Renderer $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        return $r1;
    }

    public final android.content.ComponentName getComponentName$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        android.content.ComponentName $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: android.content.ComponentName componentName>;

        return $r1;
    }

    public final android.support.wearable.watchface.WatchFaceStyle getWatchFaceStyle$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        android.support.wearable.watchface.WatchFaceStyle $r1;
        androidx.wear.watchface.WatchFace$LegacyWatchFaceOverlayStyle $r2, $r4, $r5, $r6;
        android.content.ComponentName $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = new android.support.wearable.watchface.WatchFaceStyle;

        $r3 = r0.<androidx.wear.watchface.WatchFaceImpl: android.content.ComponentName componentName>;

        $r2 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$LegacyWatchFaceOverlayStyle legacyWatchFaceStyle>;

        $i0 = virtualinvoke $r2.<androidx.wear.watchface.WatchFace$LegacyWatchFaceOverlayStyle: int getViewProtectionMode()>();

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$LegacyWatchFaceOverlayStyle legacyWatchFaceStyle>;

        $i1 = virtualinvoke $r4.<androidx.wear.watchface.WatchFace$LegacyWatchFaceOverlayStyle: int getStatusBarGravity()>();

        $r5 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$LegacyWatchFaceOverlayStyle legacyWatchFaceStyle>;

        $i2 = virtualinvoke $r5.<androidx.wear.watchface.WatchFace$LegacyWatchFaceOverlayStyle: int getAccentColor()>();

        $r6 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$LegacyWatchFaceOverlayStyle legacyWatchFaceStyle>;

        $z0 = virtualinvoke $r6.<androidx.wear.watchface.WatchFace$LegacyWatchFaceOverlayStyle: boolean isTapEventsAccepted()>();

        specialinvoke $r1.<android.support.wearable.watchface.WatchFaceStyle: void <init>(android.content.ComponentName,int,int,int,boolean,boolean,boolean,android.os.Bundle,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r3, $i0, $i1, $i2, 0, 0, $z0, null, 128, null);

        return $r1;
    }

    public final void onActionTimeZoneChanged$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.Renderer $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        virtualinvoke $r1.<androidx.wear.watchface.Renderer: void invalidate()>();

        return;
    }

    public final void onActionTimeChanged$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.WatchFace$SystemTimeProvider $r1;
        long $l0;
        androidx.wear.watchface.Renderer $r2;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$SystemTimeProvider systemTimeProvider>;

        $l0 = interfaceinvoke $r1.<androidx.wear.watchface.WatchFace$SystemTimeProvider: long getSystemTimeMillis()>();

        r0.<androidx.wear.watchface.WatchFaceImpl: long nextDrawTimeMillis> = $l0;

        $r2 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        virtualinvoke $r2.<androidx.wear.watchface.Renderer: void invalidate()>();

        return;
    }

    public final void onMockTime$wear_watchface_release(android.content.Intent)
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        android.content.Intent r1;
        androidx.wear.watchface.MockTime $r2, $r3, $r4, $r5, $r7;
        float $f0;
        double $d0;
        long $l0, $l1, $l3, $l4;
        byte $b2;
        androidx.wear.watchface.WatchFace$SystemTimeProvider $r6;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        r1 := @parameter0: android.content.Intent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intent");

        $r2 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.MockTime mockTime>;

        $f0 = virtualinvoke r1.<android.content.Intent: float getFloatExtra(java.lang.String,float)>("androidx.wear.watchface.extra.MOCK_TIME_SPEED_MULTIPLIER", 1.0F);

        $d0 = (double) $f0;

        virtualinvoke $r2.<androidx.wear.watchface.MockTime: void setSpeed(double)>($d0);

        $r3 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.MockTime mockTime>;

        $l0 = virtualinvoke r1.<android.content.Intent: long getLongExtra(java.lang.String,long)>("androidx.wear.watchface.extra.MOCK_TIME_WRAPPING_MIN_TIME", -1L);

        virtualinvoke $r3.<androidx.wear.watchface.MockTime: void setMinTime(long)>($l0);

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.MockTime mockTime>;

        $l1 = virtualinvoke $r4.<androidx.wear.watchface.MockTime: long getMinTime()>();

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label1;

        $r7 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.MockTime mockTime>;

        $r6 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$SystemTimeProvider systemTimeProvider>;

        $l4 = interfaceinvoke $r6.<androidx.wear.watchface.WatchFace$SystemTimeProvider: long getSystemTimeMillis()>();

        virtualinvoke $r7.<androidx.wear.watchface.MockTime: void setMinTime(long)>($l4);

     label1:
        $r5 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.MockTime mockTime>;

        $l3 = virtualinvoke r1.<android.content.Intent: long getLongExtra(java.lang.String,long)>("androidx.wear.watchface.extra.MOCK_TIME_WRAPPING_MAX_TIME", 9223372036854775807L);

        virtualinvoke $r5.<androidx.wear.watchface.MockTime: void setMaxTime(long)>($l3);

        return;
    }

    public final java.time.Instant getPreviewReferenceInstant()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        java.time.Instant $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: java.time.Instant previewReferenceInstant>;

        return $r1;
    }

    public final boolean getInitComplete$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $z0 = r0.<androidx.wear.watchface.WatchFaceImpl: boolean initComplete>;

        return $z0;
    }

    public final void setInitComplete$wear_watchface_release(boolean)
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.WatchFaceImpl: boolean initComplete> = z0;

        return;
    }

    public final void invalidateIfNotAnimating$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.Renderer $r1;
        boolean $z0;
        androidx.wear.watchface.WatchFaceHostApi $r2;
        androidx.wear.watchface.WatchFace$SystemTimeProvider $r3;
        long $l0, $l1, $l2;
        byte $b3;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        $z0 = virtualinvoke $r1.<androidx.wear.watchface.Renderer: boolean shouldAnimate()>();

        if $z0 == 0 goto label1;

        $l0 = r0.<androidx.wear.watchface.WatchFaceImpl: long nextDrawTimeMillis>;

        $r3 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$SystemTimeProvider systemTimeProvider>;

        $l1 = interfaceinvoke $r3.<androidx.wear.watchface.WatchFace$SystemTimeProvider: long getSystemTimeMillis()>();

        $l2 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: long computeDelayTillNextFrame$wear_watchface_release(long,long)>($l0, $l1);

        $b3 = $l2 cmp 100L;

        if $b3 <= 0 goto label2;

     label1:
        $r2 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        interfaceinvoke $r2.<androidx.wear.watchface.WatchFaceHostApi: void invalidate()>();

     label2:
        return;
    }

    public final void setIsBatteryLowAndNotChargingFromBatteryStatus$wear_watchface_release(android.content.Intent)
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        android.content.Intent r1, r2, r3, r6, r7;
        int i0, i1, i2, $i3, $i5, i6;
        float f0, $f1, $f2, $f3, f4;
        boolean z0, z1, $z3, z4, $z5;
        androidx.wear.watchface.WatchState $r4;
        androidx.wear.watchface.ObservableWatchData $r5;
        byte $b4;
        androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData r8;
        java.lang.Boolean $r10;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        r1 := @parameter0: android.content.Intent;

        r6 = r1;

        if r6 != null goto label1;

        $i5 = -1;

        goto label2;

     label1:
        i6 = virtualinvoke r6.<android.content.Intent: int getIntExtra(java.lang.String,int)>("status", -1);

        $i5 = i6;

     label2:
        i0 = $i5;

        if i0 == 2 goto label3;

        if i0 != 5 goto label4;

     label3:
        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        z4 = $z3;

        r7 = r1;

        if r7 != null goto label6;

        $f3 = 100.0F;

        goto label7;

     label6:
        r2 = r7;

        z0 = 0;

        z1 = 0;

        r3 = r2;

        i1 = virtualinvoke r3.<android.content.Intent: int getIntExtra(java.lang.String,int)>("level", -1);

        i2 = virtualinvoke r3.<android.content.Intent: int getIntExtra(java.lang.String,int)>("scale", -1);

        $i3 = i1 * 100;

        $f2 = (float) $i3;

        $f1 = (float) i2;

        f0 = $f2 / $f1;

        $f3 = f0;

     label7:
        f4 = $f3;

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r5 = virtualinvoke $r4.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isBatteryLowAndNotCharging()>();

        r8 = (androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData) $r5;

        $b4 = f4 cmpg 15.0F;

        if $b4 >= 0 goto label8;

        if z4 != 0 goto label8;

        $z5 = 1;

        goto label9;

     label8:
        $z5 = 0;

     label9:
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        virtualinvoke r8.<androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData: void setValue(java.lang.Object)>($r10);

        return;
    }

    public final void onSetStyleInternal$wear_watchface_release(androidx.wear.watchface.style.UserStyle)
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.style.UserStyle r1;
        androidx.wear.watchface.style.CurrentUserStyleRepository $r2;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        r1 := @parameter0: androidx.wear.watchface.style.UserStyle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "style");

        r0.<androidx.wear.watchface.WatchFaceImpl: boolean inOnSetStyle> = 1;

        $r2 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.style.CurrentUserStyleRepository currentUserStyleRepository>;

        virtualinvoke $r2.<androidx.wear.watchface.style.CurrentUserStyleRepository: void setUserStyle(androidx.wear.watchface.style.UserStyle)>(r1);

        r0.<androidx.wear.watchface.WatchFaceImpl: boolean inOnSetStyle> = 0;

        return;
    }

    public final void onDestroy$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.CancellableUniqueTask $r1;
        androidx.wear.watchface.Renderer $r2;
        androidx.wear.watchface.WatchState $r3, $r8, $r9, $r12, $r15, $r18;
        androidx.wear.watchface.ObservableWatchData $r4, $r10, $r13, $r16;
        androidx.wear.watchface.Observer $r5, $r11, $r14, $r17;
        int $i0;
        android.content.ComponentName $r6;
        androidx.wear.watchface.WatchFace$Companion $r7;
        boolean $z0, $z1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.CancellableUniqueTask pendingUpdateTime>;

        virtualinvoke $r1.<androidx.wear.watchface.CancellableUniqueTask: void cancel()>();

        $r2 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        virtualinvoke $r2.<androidx.wear.watchface.Renderer: void onDestroy()>();

        $r3 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r4 = virtualinvoke $r3.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isAmbient()>();

        $r5 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer ambientObserver>;

        virtualinvoke $r4.<androidx.wear.watchface.ObservableWatchData: void removeObserver(androidx.wear.watchface.Observer)>($r5);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 30 goto label1;

        $r8 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $z0 = virtualinvoke $r8.<androidx.wear.watchface.WatchState: boolean isHeadless()>();

        if $z0 != 0 goto label1;

        $r9 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r10 = virtualinvoke $r9.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isBatteryLowAndNotCharging()>();

        $r11 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer batteryLowAndNotChargingObserver>;

        virtualinvoke $r10.<androidx.wear.watchface.ObservableWatchData: void removeObserver(androidx.wear.watchface.Observer)>($r11);

     label1:
        $r12 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r13 = virtualinvoke $r12.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData getInterruptionFilter()>();

        $r14 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer interruptionFilterObserver>;

        virtualinvoke $r13.<androidx.wear.watchface.ObservableWatchData: void removeObserver(androidx.wear.watchface.Observer)>($r14);

        $r15 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r16 = virtualinvoke $r15.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isVisible()>();

        $r17 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Observer visibilityObserver>;

        virtualinvoke $r16.<androidx.wear.watchface.ObservableWatchData: void removeObserver(androidx.wear.watchface.Observer)>($r17);

        $r18 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $z1 = virtualinvoke $r18.<androidx.wear.watchface.WatchState: boolean isHeadless()>();

        if $z1 != 0 goto label2;

        $r7 = <androidx.wear.watchface.WatchFace: androidx.wear.watchface.WatchFace$Companion Companion>;

        $r6 = r0.<androidx.wear.watchface.WatchFaceImpl: android.content.ComponentName componentName>;

        virtualinvoke $r7.<androidx.wear.watchface.WatchFace$Companion: void unregisterEditorDelegate$wear_watchface_release(android.content.ComponentName)>($r6);

     label2:
        specialinvoke r0.<androidx.wear.watchface.WatchFaceImpl: void unregisterReceivers()>();

        return;
    }

    private final void registerReceivers()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        boolean z0, z1, $z3, z4;
        androidx.wear.watchface.WatchFaceHostApi $r1, $r7;
        android.os.Handler $r2;
        android.os.Looper $r3;
        androidx.wear.watchface.BroadcastsReceiver $r4, $r6;
        androidx.wear.watchface.WatchState $r5;
        android.content.Context $r8;
        androidx.wear.watchface.BroadcastsObserver $r9;
        androidx.wear.watchface.BroadcastsReceiver$BroadcastEventObserver $r10;
        java.lang.IllegalArgumentException $r11;
        java.lang.String $r12, r14;
        java.lang.Throwable $r13;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        $r2 = interfaceinvoke $r1.<androidx.wear.watchface.WatchFaceHostApi: android.os.Handler getUiThreadHandler()>();

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        z0 = virtualinvoke $r3.<android.os.Looper: boolean isCurrentThread()>();

        z1 = 0;

        z4 = 0;

        if z0 != 0 goto label1;

        r14 = "registerReceivers must be called the UiThread";

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        $r13 = (java.lang.Throwable) $r11;

        throw $r13;

     label1:
        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.BroadcastsReceiver broadcastsReceiver>;

        if $r4 != null goto label2;

        $r5 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $z3 = virtualinvoke $r5.<androidx.wear.watchface.WatchState: boolean isHeadless()>();

        if $z3 != 0 goto label2;

        $r6 = new androidx.wear.watchface.BroadcastsReceiver;

        $r7 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        $r8 = interfaceinvoke $r7.<androidx.wear.watchface.WatchFaceHostApi: android.content.Context getContext()>();

        $r9 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.BroadcastsObserver broadcastsObserver>;

        $r10 = (androidx.wear.watchface.BroadcastsReceiver$BroadcastEventObserver) $r9;

        specialinvoke $r6.<androidx.wear.watchface.BroadcastsReceiver: void <init>(android.content.Context,androidx.wear.watchface.BroadcastsReceiver$BroadcastEventObserver)>($r8, $r10);

        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.BroadcastsReceiver broadcastsReceiver> = $r6;

     label2:
        return;
    }

    private final void unregisterReceivers()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        boolean z0, z2, z3;
        androidx.wear.watchface.WatchFaceHostApi $r1;
        android.os.Handler $r2;
        android.os.Looper $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5, r7;
        java.lang.Throwable $r6;
        androidx.wear.watchface.BroadcastsReceiver r8;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        $r2 = interfaceinvoke $r1.<androidx.wear.watchface.WatchFaceHostApi: android.os.Handler getUiThreadHandler()>();

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        z2 = virtualinvoke $r3.<android.os.Looper: boolean isCurrentThread()>();

        z0 = 0;

        z3 = 0;

        if z2 != 0 goto label1;

        r7 = "unregisterReceivers must be called the UiThread";

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        $r6 = (java.lang.Throwable) $r4;

        throw $r6;

     label1:
        r8 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.BroadcastsReceiver broadcastsReceiver>;

        if r8 != null goto label2;

        goto label3;

     label2:
        virtualinvoke r8.<androidx.wear.watchface.BroadcastsReceiver: void onDestroy()>();

     label3:
        r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.BroadcastsReceiver broadcastsReceiver> = null;

        return;
    }

    private final void scheduleDraw()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.WatchState $r1, $r3;
        androidx.wear.watchface.ObservableWatchData $r2, $r4;
        boolean $z0, $z1, $z2;
        androidx.wear.watchface.Renderer $r5;
        androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1 $r6;
        androidx.wear.watchface.CancellableUniqueTask $r7;
        kotlin.jvm.functions.Function0 $r8;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r2 = virtualinvoke $r1.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isAmbient()>();

        $z0 = virtualinvoke $r2.<androidx.wear.watchface.ObservableWatchData: boolean hasValue()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r4 = virtualinvoke $r3.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isVisible()>();

        $z1 = virtualinvoke $r4.<androidx.wear.watchface.ObservableWatchData: boolean hasValue()>();

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        $r5 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        $z2 = virtualinvoke $r5.<androidx.wear.watchface.Renderer: boolean shouldAnimate()>();

        if $z2 == 0 goto label3;

        $r7 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.CancellableUniqueTask pendingUpdateTime>;

        $r6 = new androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1;

        specialinvoke $r6.<androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1: void <init>(androidx.wear.watchface.WatchFaceImpl)>(r0);

        $r8 = (kotlin.jvm.functions.Function0) $r6;

        virtualinvoke $r7.<androidx.wear.watchface.CancellableUniqueTask: void postUnique(kotlin.jvm.functions.Function0)>($r8);

     label3:
        return;
    }

    private final java.time.ZonedDateTime getZonedDateTime()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.WatchFace$SystemTimeProvider $r1, $r4;
        androidx.wear.watchface.MockTime $r2;
        long $l0, $l1;
        java.time.Instant $r3;
        java.time.ZoneId $r5;
        java.time.ZonedDateTime $r6;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r2 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.MockTime mockTime>;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$SystemTimeProvider systemTimeProvider>;

        $l0 = interfaceinvoke $r1.<androidx.wear.watchface.WatchFace$SystemTimeProvider: long getSystemTimeMillis()>();

        $l1 = virtualinvoke $r2.<androidx.wear.watchface.MockTime: long applyMockTime(long)>($l0);

        $r3 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>($l1);

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$SystemTimeProvider systemTimeProvider>;

        $r5 = interfaceinvoke $r4.<androidx.wear.watchface.WatchFace$SystemTimeProvider: java.time.ZoneId getSystemTimeZoneId()>();

        $r6 = staticinvoke <java.time.ZonedDateTime: java.time.ZonedDateTime ofInstant(java.time.Instant,java.time.ZoneId)>($r3, $r5);

        return $r6;
    }

    public final void maybeUpdateDrawMode$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        java.lang.Object r1, $r5, $r9, $r13;
        androidx.wear.watchface.WatchState $r2, $r7;
        androidx.wear.watchface.ObservableWatchData $r3, $r8;
        java.lang.Boolean $r4, $r6, $r10;
        boolean $z0, $z1, $z2, $z3;
        java.util.HashMap $r11;
        androidx.wear.watchface.Renderer $r12, $r15, $r18;
        androidx.wear.watchface.RenderParameters $r14, $r19;
        androidx.wear.watchface.DrawMode $r16, r17, $r20;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r2 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r3 = virtualinvoke $r2.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isBatteryLowAndNotCharging()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r5 = virtualinvoke $r3.<androidx.wear.watchface.ObservableWatchData: java.lang.Object getValueOr(java.lang.Object)>($r4);

        $r6 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $r16 = <androidx.wear.watchface.DrawMode: androidx.wear.watchface.DrawMode LOW_BATTERY_INTERACTIVE>;

        goto label2;

     label1:
        $r16 = <androidx.wear.watchface.DrawMode: androidx.wear.watchface.DrawMode INTERACTIVE>;

     label2:
        r17 = $r16;

        $r7 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r8 = virtualinvoke $r7.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isAmbient()>();

        $r9 = virtualinvoke $r8.<androidx.wear.watchface.ObservableWatchData: java.lang.Object getValue()>();

        $r10 = (java.lang.Boolean) $r9;

        $z1 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        $r15 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        $z3 = virtualinvoke $r15.<androidx.wear.watchface.Renderer: boolean shouldAnimate()>();

        if $z3 != 0 goto label3;

        r17 = <androidx.wear.watchface.DrawMode: androidx.wear.watchface.DrawMode AMBIENT>;

        goto label4;

     label3:
        $z2 = r0.<androidx.wear.watchface.WatchFaceImpl: boolean muteMode>;

        if $z2 == 0 goto label4;

        r17 = <androidx.wear.watchface.DrawMode: androidx.wear.watchface.DrawMode MUTE>;

     label4:
        $r18 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        $r19 = virtualinvoke $r18.<androidx.wear.watchface.Renderer: androidx.wear.watchface.RenderParameters getRenderParameters()>();

        $r20 = virtualinvoke $r19.<androidx.wear.watchface.RenderParameters: androidx.wear.watchface.DrawMode getDrawMode()>();

        if $r20 == r17 goto label5;

        $r12 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        $r11 = r0.<androidx.wear.watchface.WatchFaceImpl: java.util.HashMap defaultRenderParametersForDrawMode>;

        $r13 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r17);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r13);

        r1 = $r13;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "defaultRenderParametersForDrawMode[newDrawMode]!!");

        $r14 = (androidx.wear.watchface.RenderParameters) r1;

        virtualinvoke $r12.<androidx.wear.watchface.Renderer: void setRenderParameters$wear_watchface_release(androidx.wear.watchface.RenderParameters)>($r14);

     label5:
        return;
    }

    public final void onDraw$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        long l0, $l1, $l2, l3;
        androidx.wear.watchface.Renderer $r1, $r3;
        androidx.wear.watchface.WatchFace$SystemTimeProvider $r2;
        boolean $z0;
        androidx.wear.watchface.WatchFaceImpl$onDraw$1 $r4;
        androidx.wear.watchface.CancellableUniqueTask $r5;
        kotlin.jvm.functions.Function0 $r6;
        java.time.ZonedDateTime r7;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: void maybeUpdateDrawMode$wear_watchface_release()>();

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        r7 = specialinvoke r0.<androidx.wear.watchface.WatchFaceImpl: java.time.ZonedDateTime getZonedDateTime()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r7, "getZonedDateTime()");

        virtualinvoke $r1.<androidx.wear.watchface.Renderer: void renderInternal$wear_watchface_release(java.time.ZonedDateTime)>(r7);

        $r2 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$SystemTimeProvider systemTimeProvider>;

        l3 = interfaceinvoke $r2.<androidx.wear.watchface.WatchFace$SystemTimeProvider: long getSystemTimeMillis()>();

        $r3 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        $z0 = virtualinvoke $r3.<androidx.wear.watchface.Renderer: boolean shouldAnimate()>();

        if $z0 == 0 goto label1;

        $l1 = r0.<androidx.wear.watchface.WatchFaceImpl: long nextDrawTimeMillis>;

        l0 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: long computeDelayTillNextFrame$wear_watchface_release(long,long)>($l1, l3);

        $l2 = l3 + l0;

        r0.<androidx.wear.watchface.WatchFaceImpl: long nextDrawTimeMillis> = $l2;

        $r5 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.CancellableUniqueTask pendingUpdateTime>;

        $r4 = new androidx.wear.watchface.WatchFaceImpl$onDraw$1;

        specialinvoke $r4.<androidx.wear.watchface.WatchFaceImpl$onDraw$1: void <init>(androidx.wear.watchface.WatchFaceImpl)>(r0);

        $r6 = (kotlin.jvm.functions.Function0) $r4;

        virtualinvoke $r5.<androidx.wear.watchface.CancellableUniqueTask: void postDelayedUnique(long,kotlin.jvm.functions.Function0)>(l0, $r6);

     label1:
        return;
    }

    public final void onSurfaceRedrawNeeded$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        java.time.ZonedDateTime r1;
        androidx.wear.watchface.Renderer $r2;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: void maybeUpdateDrawMode$wear_watchface_release()>();

        $r2 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        r1 = specialinvoke r0.<androidx.wear.watchface.WatchFaceImpl: java.time.ZonedDateTime getZonedDateTime()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "getZonedDateTime()");

        virtualinvoke $r2.<androidx.wear.watchface.Renderer: void renderInternal$wear_watchface_release(java.time.ZonedDateTime)>(r1);

        return;
    }

    public final long computeDelayTillNextFrame$wear_watchface_release(long, long)
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        long l0, l1, l2, $l3, $l5, $l6, $l7, l8, l9, $l10, l11, l12;
        boolean z0, $z1;
        androidx.wear.watchface.WatchState $r1;
        androidx.wear.watchface.ObservableWatchData $r2;
        java.lang.Boolean $r3, $r5;
        java.lang.Object $r4;
        androidx.wear.watchface.Renderer $r6, $r7;
        byte $b4;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        $r2 = virtualinvoke $r1.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isBatteryLowAndNotCharging()>();

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r4 = virtualinvoke $r2.<androidx.wear.watchface.ObservableWatchData: java.lang.Object getValueOr(java.lang.Object)>($r3);

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label1;

        $r7 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        l8 = virtualinvoke $r7.<androidx.wear.watchface.Renderer: long getInteractiveDrawModeUpdateDelayMillis()>();

        l9 = 100L;

        z0 = 0;

        $l10 = staticinvoke <java.lang.Math: long max(long,long)>(l8, l9);

        goto label2;

     label1:
        $r6 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        $l10 = virtualinvoke $r6.<androidx.wear.watchface.Renderer: long getInteractiveDrawModeUpdateDelayMillis()>();

     label2:
        l2 = $l10;

        $l3 = staticinvoke <java.lang.Math: long min(long,long)>(l0, l1);

        l11 = $l3 + l2;

        $b4 = l11 cmp l1;

        if $b4 > 0 goto label3;

        $l6 = l11 - l1;

        $l7 = $l6 % l2;

        l12 = l2 + $l7;

        l11 = l1 + l12;

     label3:
        $l5 = l11 - l1;

        return $l5;
    }

    public final void onComplicationSlotDataUpdate$wear_watchface_release(int, androidx.wear.complications.data.ComplicationData)
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        int i0;
        androidx.wear.complications.data.ComplicationData r1;
        androidx.wear.watchface.ComplicationSlotsManager $r2;
        androidx.wear.watchface.WatchFaceHostApi $r3;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.wear.complications.data.ComplicationData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "data");

        $r2 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>;

        virtualinvoke $r2.<androidx.wear.watchface.ComplicationSlotsManager: void onComplicationDataUpdate$wear_watchface_release(int,androidx.wear.complications.data.ComplicationData)>(i0, r1);

        $r3 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        interfaceinvoke $r3.<androidx.wear.watchface.WatchFaceHostApi: void invalidate()>();

        return;
    }

    public final void onTapCommand$wear_watchface_release(int, androidx.wear.watchface.TapEvent)
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        androidx.wear.watchface.TapEvent r1;
        androidx.wear.watchface.ComplicationSlot r2;
        androidx.wear.watchface.ComplicationSlotsManager $r3, $r5, $r8;
        java.lang.Integer $r4, $r7, $r9;
        androidx.wear.watchface.WatchFaceHostApi $r6;
        androidx.wear.watchface.WatchFace$TapListener r10;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.wear.watchface.TapEvent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tapEvent");

        $r3 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>;

        $i1 = virtualinvoke r1.<androidx.wear.watchface.TapEvent: int getXPos()>();

        $i2 = virtualinvoke r1.<androidx.wear.watchface.TapEvent: int getYPos()>();

        r2 = virtualinvoke $r3.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.ComplicationSlot getComplicationSlotAt(int,int)>($i1, $i2);

        if r2 != null goto label03;

        r0.<androidx.wear.watchface.WatchFaceImpl: java.lang.Integer lastTappedComplicationId> = null;

        r10 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFace$TapListener tapListener>;

        if r10 != null goto label01;

        goto label02;

     label01:
        interfaceinvoke r10.<androidx.wear.watchface.WatchFace$TapListener: void onTapEvent(int,androidx.wear.watchface.TapEvent)>(i0, r1);

     label02:
        return;

     label03:
        i8 = i0;

        tableswitch(i8)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label04;
            default: goto label09;
        };

     label04:
        $i3 = virtualinvoke r2.<androidx.wear.watchface.ComplicationSlot: int getId()>();

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl: java.lang.Integer lastTappedComplicationId>;

        if $r4 != null goto label05;

        goto label06;

     label05:
        $i4 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        if $i3 == $i4 goto label07;

     label06:
        $r7 = r0.<androidx.wear.watchface.WatchFaceImpl: java.lang.Integer lastTappedComplicationId>;

        if $r7 == null goto label07;

        r0.<androidx.wear.watchface.WatchFaceImpl: java.lang.Integer lastTappedComplicationId> = null;

        return;

     label07:
        $r5 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>;

        $i5 = virtualinvoke r2.<androidx.wear.watchface.ComplicationSlot: int getId()>();

        virtualinvoke $r5.<androidx.wear.watchface.ComplicationSlotsManager: void onComplicationSlotSingleTapped$wear_watchface_release(int)>($i5);

        $r6 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        interfaceinvoke $r6.<androidx.wear.watchface.WatchFaceHostApi: void invalidate()>();

        r0.<androidx.wear.watchface.WatchFaceImpl: java.lang.Integer lastTappedComplicationId> = null;

        goto label10;

     label08:
        $r8 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>;

        $i6 = virtualinvoke r2.<androidx.wear.watchface.ComplicationSlot: int getId()>();

        virtualinvoke $r8.<androidx.wear.watchface.ComplicationSlotsManager: void onTapDown$wear_watchface_release(int,androidx.wear.watchface.TapEvent)>($i6, r1);

        $i7 = virtualinvoke r2.<androidx.wear.watchface.ComplicationSlot: int getId()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        r0.<androidx.wear.watchface.WatchFaceImpl: java.lang.Integer lastTappedComplicationId> = $r9;

        goto label10;

     label09:
        r0.<androidx.wear.watchface.WatchFaceImpl: java.lang.Integer lastTappedComplicationId> = null;

     label10:
        return;
    }

    public final java.util.List getComplicationState$wear_watchface_release()
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        java.util.Map $r1, r3;
        java.util.Collection r2, r7, $r29;
        boolean z2, $z4, $z5, $z6, $z7;
        java.util.Iterator r4;
        java.util.Map$Entry r5, r6;
        androidx.wear.watchface.data.IdAndComplicationStateWireFormat r8, $r14;
        androidx.wear.watchface.ComplicationSlotsManager $r9;
        java.util.ArrayList $r10, $r34;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.Set $r11;
        java.util.List $r12, $r28, $r35;
        java.lang.Object $r13, $r15, $r18, $r23, $r26, $r31, $r36, $r39, $r42, $r44, $r46, $r51, $r53;
        java.lang.Number $r16;
        androidx.wear.watchface.data.ComplicationStateWireFormat $r17;
        androidx.wear.watchface.ComplicationSlot $r19, $r24, $r27, $r32, $r37, $r40, $r43, $r45, $r47, $r52, $r54;
        androidx.wear.watchface.Renderer $r20;
        android.graphics.Rect $r21, $r22;
        androidx.wear.complications.data.ComplicationType$Companion $r25;
        int[] $r30;
        androidx.wear.complications.DefaultComplicationDataSourcePolicy $r33, $r38;
        androidx.wear.complications.data.ComplicationType $r41, $r50;
        androidx.wear.watchface.CanvasComplication $r48;
        androidx.wear.complications.data.ComplicationData $r49;
        android.os.Bundle $r55;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        $r9 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>;

        $r1 = virtualinvoke $r9.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map getComplicationSlots()>();

        $r10 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = (java.util.Collection) $r10;

        r3 = $r1;

        z2 = 0;

        $r11 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label2;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r13;

        r6 = r5;

        r7 = r2;

        $r14 = new androidx.wear.watchface.data.IdAndComplicationStateWireFormat;

        $r15 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.Number) $r15;

        $i1 = virtualinvoke $r16.<java.lang.Number: int intValue()>();

        $r17 = new androidx.wear.watchface.data.ComplicationStateWireFormat;

        $r18 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (androidx.wear.watchface.ComplicationSlot) $r18;

        $r20 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer getRenderer$wear_watchface_release()>();

        $r21 = virtualinvoke $r20.<androidx.wear.watchface.Renderer: android.graphics.Rect getScreenBounds()>();

        $r22 = virtualinvoke $r19.<androidx.wear.watchface.ComplicationSlot: android.graphics.Rect computeBounds(android.graphics.Rect)>($r21);

        $r23 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (androidx.wear.watchface.ComplicationSlot) $r23;

        $i2 = virtualinvoke $r24.<androidx.wear.watchface.ComplicationSlot: int getBoundsType()>();

        $r25 = <androidx.wear.complications.data.ComplicationType: androidx.wear.complications.data.ComplicationType$Companion Companion>;

        $r26 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r27 = (androidx.wear.watchface.ComplicationSlot) $r26;

        $r28 = virtualinvoke $r27.<androidx.wear.watchface.ComplicationSlot: java.util.List getSupportedTypes()>();

        $r29 = (java.util.Collection) $r28;

        $r30 = virtualinvoke $r25.<androidx.wear.complications.data.ComplicationType$Companion: int[] toWireTypes(java.util.Collection)>($r29);

        $r31 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r32 = (androidx.wear.watchface.ComplicationSlot) $r31;

        $r33 = virtualinvoke $r32.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy getDefaultDataSourcePolicy()>();

        $r34 = virtualinvoke $r33.<androidx.wear.complications.DefaultComplicationDataSourcePolicy: java.util.ArrayList dataSourcesAsList()>();

        $r35 = (java.util.List) $r34;

        $r36 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r37 = (androidx.wear.watchface.ComplicationSlot) $r36;

        $r38 = virtualinvoke $r37.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.DefaultComplicationDataSourcePolicy getDefaultDataSourcePolicy()>();

        $i3 = virtualinvoke $r38.<androidx.wear.complications.DefaultComplicationDataSourcePolicy: int getSystemDataSourceFallback()>();

        $r39 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r40 = (androidx.wear.watchface.ComplicationSlot) $r39;

        $r41 = virtualinvoke $r40.<androidx.wear.watchface.ComplicationSlot: androidx.wear.complications.data.ComplicationType getDefaultDataSourceType()>();

        $i4 = virtualinvoke $r41.<androidx.wear.complications.data.ComplicationType: int toWireComplicationType()>();

        $r42 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r43 = (androidx.wear.watchface.ComplicationSlot) $r42;

        $z5 = virtualinvoke $r43.<androidx.wear.watchface.ComplicationSlot: boolean isEnabled()>();

        $r44 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r45 = (androidx.wear.watchface.ComplicationSlot) $r44;

        $z6 = virtualinvoke $r45.<androidx.wear.watchface.ComplicationSlot: boolean isInitiallyEnabled()>();

        $r46 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r47 = (androidx.wear.watchface.ComplicationSlot) $r46;

        $r48 = virtualinvoke $r47.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        $r49 = interfaceinvoke $r48.<androidx.wear.watchface.CanvasComplication: androidx.wear.complications.data.ComplicationData getData()>();

        $r50 = virtualinvoke $r49.<androidx.wear.complications.data.ComplicationData: androidx.wear.complications.data.ComplicationType getType()>();

        $i5 = virtualinvoke $r50.<androidx.wear.complications.data.ComplicationType: int toWireComplicationType()>();

        $r51 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r52 = (androidx.wear.watchface.ComplicationSlot) $r51;

        $z7 = virtualinvoke $r52.<androidx.wear.watchface.ComplicationSlot: boolean isFixedComplicationDataSource()>();

        $r53 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r54 = (androidx.wear.watchface.ComplicationSlot) $r53;

        $r55 = virtualinvoke $r54.<androidx.wear.watchface.ComplicationSlot: android.os.Bundle getConfigExtras()>();

        specialinvoke $r17.<androidx.wear.watchface.data.ComplicationStateWireFormat: void <init>(android.graphics.Rect,int,int[],java.util.List,int,int,boolean,boolean,int,boolean,android.os.Bundle)>($r22, $i2, $r30, $r35, $i3, $i4, $z5, $z6, $i5, $z7, $r55);

        specialinvoke $r14.<androidx.wear.watchface.data.IdAndComplicationStateWireFormat: void <init>(int,androidx.wear.watchface.data.ComplicationStateWireFormat)>($i1, $r17);

        r8 = $r14;

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>(r8);

        goto label1;

     label2:
        $r12 = (java.util.List) r2;

        return $r12;
    }

    public final android.os.Bundle renderWatchFaceToBitmap$wear_watchface_release(androidx.wear.watchface.control.data.WatchFaceRenderParams)
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.control.data.WatchFaceRenderParams r1;
        java.io.Closeable r2;
        boolean z0, $z2, $z3, z4, z6, $z10, z13, z14, z16, z18;
        androidx.wear.watchface.style.UserStyle r3, $r8;
        androidx.wear.complications.data.ComplicationData r4, $r31, $r62;
        android.os.Bundle r5;
        androidx.wear.utility.TraceEvent $r6, r37;
        androidx.wear.watchface.style.CurrentUserStyleRepository $r7, $r10;
        androidx.wear.watchface.style.UserStyleData $r9;
        androidx.wear.watchface.style.UserStyleSchema $r11;
        androidx.wear.watchface.ComplicationSlotsManager $r12, $r28, $r30;
        java.util.Map $r13, $r42, r46, r50, r51, r59;
        java.util.Collection $r14;
        int $i0, $i1, $i3, $i4, i5, i6;
        java.util.LinkedHashMap $r15;
        androidx.wear.watchface.Renderer $r16;
        long $l2;
        java.time.Instant $r17;
        java.time.ZoneId $r18;
        androidx.wear.watchface.RenderParameters $r19;
        androidx.wear.watchface.style.data.UserStyleWireFormat $r20, r38, r39;
        java.util.List $r21, $r52;
        android.support.wearable.watchface.SharedMemoryImage$Companion $r22;
        java.util.Set $r23;
        java.lang.Object $r24, $r25, $r27, $r29, r44;
        java.lang.Number $r26;
        androidx.wear.watchface.CanvasComplication $r32;
        java.lang.Throwable $r34, $r35, r36, r63, r64, r65;
        java.lang.Iterable $r40, r41;
        java.util.Iterator r43, r53, $r60;
        androidx.wear.watchface.ComplicationSlot r45, r48;
        java.lang.Integer r47, r49;
        androidx.wear.watchface.data.IdAndComplicationDataWireFormat r54;
        android.support.wearable.complications.ComplicationData r55;
        java.time.ZonedDateTime $r56;
        androidx.wear.watchface.data.RenderParametersWireFormat $r57;
        android.graphics.Bitmap $r58;
        java.util.Map$Entry r61;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        r1 := @parameter0: androidx.wear.watchface.control.data.WatchFaceRenderParams;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "params");

        $r6 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r6.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>("WatchFaceImpl.renderWatchFaceToBitmap");

        r2 = (java.io.Closeable) $r6;

        z0 = 0;

        z4 = 0;

        r36 = (java.lang.Throwable) null;

     label01:
        r37 = (androidx.wear.utility.TraceEvent) r2;

        $r7 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.style.CurrentUserStyleRepository getCurrentUserStyleRepository$wear_watchface_release()>();

        r3 = virtualinvoke $r7.<androidx.wear.watchface.style.CurrentUserStyleRepository: androidx.wear.watchface.style.UserStyle getUserStyle()>();

        r38 = virtualinvoke r1.<androidx.wear.watchface.control.data.WatchFaceRenderParams: androidx.wear.watchface.style.data.UserStyleWireFormat getUserStyle()>();

        if r38 != null goto label02;

        goto label03;

     label02:
        z6 = 0;

        r39 = r38;

        $r8 = new androidx.wear.watchface.style.UserStyle;

        $r9 = new androidx.wear.watchface.style.UserStyleData;

        specialinvoke $r9.<androidx.wear.watchface.style.UserStyleData: void <init>(androidx.wear.watchface.style.data.UserStyleWireFormat)>(r39);

        $r10 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.style.CurrentUserStyleRepository getCurrentUserStyleRepository$wear_watchface_release()>();

        $r11 = virtualinvoke $r10.<androidx.wear.watchface.style.CurrentUserStyleRepository: androidx.wear.watchface.style.UserStyleSchema getSchema()>();

        specialinvoke $r8.<androidx.wear.watchface.style.UserStyle: void <init>(androidx.wear.watchface.style.UserStyleData,androidx.wear.watchface.style.UserStyleSchema)>($r9, $r11);

        virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: void onSetStyleInternal$wear_watchface_release(androidx.wear.watchface.style.UserStyle)>($r8);

     label03:
        $r12 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager getComplicationSlotsManager()>();

        $r13 = virtualinvoke $r12.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map getComplicationSlots()>();

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Collection values()>();

        $r40 = (java.lang.Iterable) $r14;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r40, 10);

        $i1 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        i5 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i1, 16);

        r41 = $r40;

        $r15 = new java.util.LinkedHashMap;

        specialinvoke $r15.<java.util.LinkedHashMap: void <init>(int)>(i5);

        $r42 = (java.util.Map) $r15;

        r43 = interfaceinvoke r41.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z10 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label05;

        r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r45 = (androidx.wear.watchface.ComplicationSlot) r44;

        r46 = $r42;

        $i4 = virtualinvoke r45.<androidx.wear.watchface.ComplicationSlot: int getId()>();

        r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r48 = (androidx.wear.watchface.ComplicationSlot) r44;

        r49 = r47;

        r50 = r46;

        $r32 = virtualinvoke r48.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        r4 = interfaceinvoke $r32.<androidx.wear.watchface.CanvasComplication: androidx.wear.complications.data.ComplicationData getData()>();

        interfaceinvoke r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r49, r4);

        goto label04;

     label05:
        r51 = $r42;

        $r52 = virtualinvoke r1.<androidx.wear.watchface.control.data.WatchFaceRenderParams: java.util.List getIdAndComplicationDatumWireFormats()>();

        if $r52 != null goto label06;

        goto label08;

     label06:
        z13 = 0;

        z14 = 0;

        r53 = interfaceinvoke $r52.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r29 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>();

        r54 = (androidx.wear.watchface.data.IdAndComplicationDataWireFormat) $r29;

        $r30 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager getComplicationSlotsManager()>();

        $i3 = virtualinvoke r54.<androidx.wear.watchface.data.IdAndComplicationDataWireFormat: int getId()>();

        r55 = virtualinvoke r54.<androidx.wear.watchface.data.IdAndComplicationDataWireFormat: android.support.wearable.complications.ComplicationData getComplicationData()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r55, "idAndData.complicationData");

        $r31 = staticinvoke <androidx.wear.complications.data.DataKt: androidx.wear.complications.data.ComplicationData toApiComplicationData(android.support.wearable.complications.ComplicationData)>(r55);

        virtualinvoke $r30.<androidx.wear.watchface.ComplicationSlotsManager: void setComplicationDataUpdateSync$wear_watchface_release(int,androidx.wear.complications.data.ComplicationData)>($i3, $r31);

        goto label07;

     label08:
        $r16 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer getRenderer$wear_watchface_release()>();

        $l2 = virtualinvoke r1.<androidx.wear.watchface.control.data.WatchFaceRenderParams: long getCalendarTimeMillis()>();

        $r17 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>($l2);

        $r18 = staticinvoke <java.time.ZoneId: java.time.ZoneId of(java.lang.String)>("UTC");

        $r56 = staticinvoke <java.time.ZonedDateTime: java.time.ZonedDateTime ofInstant(java.time.Instant,java.time.ZoneId)>($r17, $r18);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r56, "ofInstant(\n             \u2026d.of(\"UTC\")\n            )");

        $r19 = new androidx.wear.watchface.RenderParameters;

        $r57 = virtualinvoke r1.<androidx.wear.watchface.control.data.WatchFaceRenderParams: androidx.wear.watchface.data.RenderParametersWireFormat getRenderParametersWireFormat()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r57, "params.renderParametersWireFormat");

        specialinvoke $r19.<androidx.wear.watchface.RenderParameters: void <init>(androidx.wear.watchface.data.RenderParametersWireFormat)>($r57);

        $r58 = virtualinvoke $r16.<androidx.wear.watchface.Renderer: android.graphics.Bitmap takeScreenshot$wear_watchface_release(java.time.ZonedDateTime,androidx.wear.watchface.RenderParameters)>($r56, $r19);

        $r20 = virtualinvoke r1.<androidx.wear.watchface.control.data.WatchFaceRenderParams: androidx.wear.watchface.style.data.UserStyleWireFormat getUserStyle()>();

        if $r20 == null goto label09;

        virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: void onSetStyleInternal$wear_watchface_release(androidx.wear.watchface.style.UserStyle)>(r3);

     label09:
        $r21 = virtualinvoke r1.<androidx.wear.watchface.control.data.WatchFaceRenderParams: java.util.List getIdAndComplicationDatumWireFormats()>();

        if $r21 == null goto label11;

        r59 = r51;

        z16 = 0;

        $r23 = interfaceinvoke r59.<java.util.Map: java.util.Set entrySet()>();

        $r60 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z3 = interfaceinvoke $r60.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r24 = interfaceinvoke $r60.<java.util.Iterator: java.lang.Object next()>();

        r61 = (java.util.Map$Entry) $r24;

        $r25 = interfaceinvoke r61.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r26 = (java.lang.Number) $r25;

        i6 = virtualinvoke $r26.<java.lang.Number: int intValue()>();

        z18 = 0;

        $r27 = interfaceinvoke r61.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r62 = (androidx.wear.complications.data.ComplicationData) $r27;

        $r28 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager getComplicationSlotsManager()>();

        virtualinvoke $r28.<androidx.wear.watchface.ComplicationSlotsManager: void setComplicationDataUpdateSync$wear_watchface_release(int,androidx.wear.complications.data.ComplicationData)>(i6, $r62);

        goto label10;

     label11:
        $r22 = <android.support.wearable.watchface.SharedMemoryImage: android.support.wearable.watchface.SharedMemoryImage$Companion Companion>;

        r5 = virtualinvoke $r22.<android.support.wearable.watchface.SharedMemoryImage$Companion: android.os.Bundle ashmemWriteImageBundle(android.graphics.Bitmap)>($r58);

     label12:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r2, r36);

        return r5;

     label13:
        $r35 := @caughtexception;

        r63 = $r35;

        r64 = r63;

        throw r63;

     label14:
        $r34 := @caughtexception;

        r65 = $r34;

     label15:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r2, r64);

        throw r65;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public final android.os.Bundle renderComplicationToBitmap$wear_watchface_release(androidx.wear.watchface.control.data.ComplicationRenderParams)
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.control.data.ComplicationRenderParams r1;
        java.io.Closeable r2;
        boolean z0, z2, z3, z5;
        java.time.ZonedDateTime r3;
        androidx.wear.watchface.ComplicationSlot r4, r5, r6;
        androidx.wear.watchface.style.UserStyle r7, $r31;
        androidx.wear.watchface.style.data.UserStyleWireFormat r8;
        android.graphics.Rect r9, $r20, $r24;
        android.graphics.Bitmap r10;
        android.support.wearable.complications.ComplicationData r11;
        androidx.wear.watchface.data.RenderParametersWireFormat r12;
        android.os.Bundle r13, $r39;
        androidx.wear.utility.TraceEvent $r14, r38;
        long $l0;
        java.time.Instant $r15;
        java.time.ZoneId $r16;
        androidx.wear.watchface.ComplicationSlotsManager $r17, $r27, $r29;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        androidx.wear.watchface.style.CurrentUserStyleRepository $r18, $r33;
        androidx.wear.watchface.Renderer $r19;
        android.graphics.Bitmap$Config $r21;
        androidx.wear.watchface.CanvasComplication $r22, $r28;
        android.graphics.Canvas $r23;
        androidx.wear.watchface.RenderParameters $r25;
        android.support.wearable.watchface.SharedMemoryImage$Companion $r26;
        androidx.wear.complications.data.ComplicationData $r30, r40;
        androidx.wear.watchface.style.UserStyleData $r32;
        androidx.wear.watchface.style.UserStyleSchema $r34;
        java.lang.Throwable $r35, $r36, r37, r41, r42, r43;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        r1 := @parameter0: androidx.wear.watchface.control.data.ComplicationRenderParams;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "params");

        $r14 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r14.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>("WatchFaceImpl.renderComplicationToBitmap");

        r2 = (java.io.Closeable) $r14;

        z0 = 0;

        z5 = 0;

        r37 = (java.lang.Throwable) null;

     label01:
        r38 = (androidx.wear.utility.TraceEvent) r2;

        $l0 = virtualinvoke r1.<androidx.wear.watchface.control.data.ComplicationRenderParams: long getCalendarTimeMillis()>();

        $r15 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>($l0);

        $r16 = staticinvoke <java.time.ZoneId: java.time.ZoneId of(java.lang.String)>("UTC");

        r3 = staticinvoke <java.time.ZonedDateTime: java.time.ZonedDateTime ofInstant(java.time.Instant,java.time.ZoneId)>($r15, $r16);

        $r17 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager getComplicationSlotsManager()>();

        $i1 = virtualinvoke r1.<androidx.wear.watchface.control.data.ComplicationRenderParams: int getComplicationSlotId()>();

        r4 = virtualinvoke $r17.<androidx.wear.watchface.ComplicationSlotsManager: androidx.wear.watchface.ComplicationSlot get(int)>($i1);

        if r4 != null goto label02;

        $r39 = null;

        goto label07;

     label02:
        r5 = r4;

        z2 = 0;

        z3 = 0;

        r6 = r5;

        $r18 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.style.CurrentUserStyleRepository getCurrentUserStyleRepository$wear_watchface_release()>();

        r7 = virtualinvoke $r18.<androidx.wear.watchface.style.CurrentUserStyleRepository: androidx.wear.watchface.style.UserStyle getUserStyle()>();

        r8 = virtualinvoke r1.<androidx.wear.watchface.control.data.ComplicationRenderParams: androidx.wear.watchface.style.data.UserStyleWireFormat getUserStyle()>();

        if r8 == null goto label03;

        $r31 = new androidx.wear.watchface.style.UserStyle;

        $r32 = new androidx.wear.watchface.style.UserStyleData;

        specialinvoke $r32.<androidx.wear.watchface.style.UserStyleData: void <init>(androidx.wear.watchface.style.data.UserStyleWireFormat)>(r8);

        $r33 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.style.CurrentUserStyleRepository getCurrentUserStyleRepository$wear_watchface_release()>();

        $r34 = virtualinvoke $r33.<androidx.wear.watchface.style.CurrentUserStyleRepository: androidx.wear.watchface.style.UserStyleSchema getSchema()>();

        specialinvoke $r31.<androidx.wear.watchface.style.UserStyle: void <init>(androidx.wear.watchface.style.UserStyleData,androidx.wear.watchface.style.UserStyleSchema)>($r32, $r34);

        virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: void onSetStyleInternal$wear_watchface_release(androidx.wear.watchface.style.UserStyle)>($r31);

     label03:
        $r19 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer getRenderer$wear_watchface_release()>();

        $r20 = virtualinvoke $r19.<androidx.wear.watchface.Renderer: android.graphics.Rect getScreenBounds()>();

        r9 = virtualinvoke r6.<androidx.wear.watchface.ComplicationSlot: android.graphics.Rect computeBounds(android.graphics.Rect)>($r20);

        $i2 = virtualinvoke r9.<android.graphics.Rect: int width()>();

        $i3 = virtualinvoke r9.<android.graphics.Rect: int height()>();

        $r21 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r10 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i2, $i3, $r21);

        r40 = null;

        r11 = virtualinvoke r1.<androidx.wear.watchface.control.data.ComplicationRenderParams: android.support.wearable.complications.ComplicationData getComplicationData()>();

        if r11 == null goto label04;

        $r28 = virtualinvoke r6.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        r40 = interfaceinvoke $r28.<androidx.wear.watchface.CanvasComplication: androidx.wear.complications.data.ComplicationData getData()>();

        $r29 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager getComplicationSlotsManager()>();

        $i8 = virtualinvoke r1.<androidx.wear.watchface.control.data.ComplicationRenderParams: int getComplicationSlotId()>();

        $r30 = staticinvoke <androidx.wear.complications.data.DataKt: androidx.wear.complications.data.ComplicationData toApiComplicationData(android.support.wearable.complications.ComplicationData)>(r11);

        virtualinvoke $r29.<androidx.wear.watchface.ComplicationSlotsManager: void setComplicationDataUpdateSync$wear_watchface_release(int,androidx.wear.complications.data.ComplicationData)>($i8, $r30);

     label04:
        $r22 = virtualinvoke r6.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        $r23 = new android.graphics.Canvas;

        specialinvoke $r23.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r10);

        $r24 = new android.graphics.Rect;

        $i4 = virtualinvoke r9.<android.graphics.Rect: int width()>();

        $i5 = virtualinvoke r9.<android.graphics.Rect: int height()>();

        specialinvoke $r24.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i4, $i5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "zonedDateTime");

        $r25 = new androidx.wear.watchface.RenderParameters;

        r12 = virtualinvoke r1.<androidx.wear.watchface.control.data.ComplicationRenderParams: androidx.wear.watchface.data.RenderParametersWireFormat getRenderParametersWireFormat()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r12, "params.renderParametersWireFormat");

        specialinvoke $r25.<androidx.wear.watchface.RenderParameters: void <init>(androidx.wear.watchface.data.RenderParametersWireFormat)>(r12);

        $i6 = virtualinvoke r1.<androidx.wear.watchface.control.data.ComplicationRenderParams: int getComplicationSlotId()>();

        interfaceinvoke $r22.<androidx.wear.watchface.CanvasComplication: void render(android.graphics.Canvas,android.graphics.Rect,java.time.ZonedDateTime,androidx.wear.watchface.RenderParameters,int)>($r23, $r24, r3, $r25, $i6);

        if r40 == null goto label05;

        $r27 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager getComplicationSlotsManager()>();

        $i7 = virtualinvoke r1.<androidx.wear.watchface.control.data.ComplicationRenderParams: int getComplicationSlotId()>();

        virtualinvoke $r27.<androidx.wear.watchface.ComplicationSlotsManager: void setComplicationDataUpdateSync$wear_watchface_release(int,androidx.wear.complications.data.ComplicationData)>($i7, r40);

     label05:
        if r8 == null goto label06;

        virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl: void onSetStyleInternal$wear_watchface_release(androidx.wear.watchface.style.UserStyle)>(r7);

     label06:
        $r26 = <android.support.wearable.watchface.SharedMemoryImage: android.support.wearable.watchface.SharedMemoryImage$Companion Companion>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r10, "complicationBitmap");

        $r39 = virtualinvoke $r26.<android.support.wearable.watchface.SharedMemoryImage$Companion: android.os.Bundle ashmemWriteImageBundle(android.graphics.Bitmap)>(r10);

     label07:
        r13 = $r39;

     label08:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r2, r37);

        return r13;

     label09:
        $r35 := @caughtexception;

        r41 = $r35;

        r42 = r41;

        throw r41;

     label10:
        $r36 := @caughtexception;

        r43 = $r36;

     label11:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r2, r42);

        throw r43;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public final void dump$wear_watchface_release(androidx.wear.watchface.IndentingPrintWriter)
    {
        androidx.wear.watchface.WatchFaceImpl r0;
        androidx.wear.watchface.IndentingPrintWriter r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        android.content.ComponentName $r4;
        java.lang.String $r7, $r10, $r13, $r16, $r18, $r20, $r23, $r25, $r28, $r31;
        androidx.wear.watchface.MockTime $r8, $r11, $r14;
        long $l0, $l1, $l2;
        java.lang.Long $r9, $r12, $r17;
        double $d0;
        java.lang.Double $r15;
        boolean $z0, $z1;
        java.lang.Boolean $r19, $r22;
        androidx.wear.watchface.CancellableUniqueTask $r21;
        java.lang.Integer $r24;
        androidx.wear.watchface.style.CurrentUserStyleRepository $r26, $r29;
        androidx.wear.watchface.style.UserStyle $r27;
        androidx.wear.watchface.style.UserStyleSchema $r30;
        androidx.wear.watchface.WatchState $r32;
        androidx.wear.watchface.ComplicationSlotsManager $r33;
        androidx.wear.watchface.Renderer $r34;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl;

        r1 := @parameter0: androidx.wear.watchface.IndentingPrintWriter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WatchFaceImpl (");

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl: android.content.ComponentName componentName>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r7);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void increaseIndent()>();

        $r8 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.MockTime mockTime>;

        $l0 = virtualinvoke $r8.<androidx.wear.watchface.MockTime: long getMaxTime()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r10 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("mockTime.maxTime=", $r9);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r10);

        $r11 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.MockTime mockTime>;

        $l1 = virtualinvoke $r11.<androidx.wear.watchface.MockTime: long getMinTime()>();

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r13 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("mockTime.minTime=", $r12);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r13);

        $r14 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.MockTime mockTime>;

        $d0 = virtualinvoke $r14.<androidx.wear.watchface.MockTime: double getSpeed()>();

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r16 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("mockTime.speed=", $r15);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r16);

        $l2 = r0.<androidx.wear.watchface.WatchFaceImpl: long nextDrawTimeMillis>;

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r18 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("nextDrawTimeMillis=", $r17);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r18);

        $z0 = r0.<androidx.wear.watchface.WatchFaceImpl: boolean muteMode>;

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r20 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("muteMode=", $r19);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r20);

        $r21 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.CancellableUniqueTask pendingUpdateTime>;

        $z1 = virtualinvoke $r21.<androidx.wear.watchface.CancellableUniqueTask: boolean isPending()>();

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r23 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("pendingUpdateTime=", $r22);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r23);

        $r24 = r0.<androidx.wear.watchface.WatchFaceImpl: java.lang.Integer lastTappedComplicationId>;

        $r25 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("lastTappedComplicationId=", $r24);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r25);

        $r26 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.style.CurrentUserStyleRepository currentUserStyleRepository>;

        $r27 = virtualinvoke $r26.<androidx.wear.watchface.style.CurrentUserStyleRepository: androidx.wear.watchface.style.UserStyle getUserStyle()>();

        $r28 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("currentUserStyleRepository.userStyle=", $r27);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r28);

        $r29 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.style.CurrentUserStyleRepository currentUserStyleRepository>;

        $r30 = virtualinvoke $r29.<androidx.wear.watchface.style.CurrentUserStyleRepository: androidx.wear.watchface.style.UserStyleSchema getSchema()>();

        $r31 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("currentUserStyleRepository.schema=", $r30);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r31);

        $r32 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        virtualinvoke $r32.<androidx.wear.watchface.WatchState: void dump$wear_watchface_release(androidx.wear.watchface.IndentingPrintWriter)>(r1);

        $r33 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager complicationSlotsManager>;

        virtualinvoke $r33.<androidx.wear.watchface.ComplicationSlotsManager: void dump$wear_watchface_release(androidx.wear.watchface.IndentingPrintWriter)>(r1);

        $r34 = r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer renderer>;

        virtualinvoke $r34.<androidx.wear.watchface.Renderer: void dump$wear_watchface_release(androidx.wear.watchface.IndentingPrintWriter)>(r1);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void decreaseIndent()>();

        return;
    }

    public static final androidx.wear.watchface.WatchFaceHostApi access$getWatchFaceHostApi$p(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl $r0;
        androidx.wear.watchface.WatchFaceHostApi $r1;

        $r0 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        $r1 = $r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi watchFaceHostApi>;

        return $r1;
    }

    public static final androidx.wear.watchface.WatchState access$getWatchState$p(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl $r0;
        androidx.wear.watchface.WatchState $r1;

        $r0 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        $r1 = $r0.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState watchState>;

        return $r1;
    }

    public static final void access$scheduleDraw(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl $r0;

        $r0 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        specialinvoke $r0.<androidx.wear.watchface.WatchFaceImpl: void scheduleDraw()>();

        return;
    }

    public static final boolean access$getMuteMode$p(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl $r0;
        boolean $z0;

        $r0 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        $z0 = $r0.<androidx.wear.watchface.WatchFaceImpl: boolean muteMode>;

        return $z0;
    }

    public static final void access$setMuteMode$p(androidx.wear.watchface.WatchFaceImpl, boolean)
    {
        androidx.wear.watchface.WatchFaceImpl $r0;
        boolean z0;

        $r0 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        z0 := @parameter1: boolean;

        $r0.<androidx.wear.watchface.WatchFaceImpl: boolean muteMode> = z0;

        return;
    }

    public static final void access$registerReceivers(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl $r0;

        $r0 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        specialinvoke $r0.<androidx.wear.watchface.WatchFaceImpl: void registerReceivers()>();

        return;
    }

    public static final void access$unregisterReceivers(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl $r0;

        $r0 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        specialinvoke $r0.<androidx.wear.watchface.WatchFaceImpl: void unregisterReceivers()>();

        return;
    }

    static void <clinit>()
    {
        androidx.wear.watchface.WatchFaceImpl$Companion $r0;

        $r0 = new androidx.wear.watchface.WatchFaceImpl$Companion;

        specialinvoke $r0.<androidx.wear.watchface.WatchFaceImpl$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceImpl$Companion Companion> = $r0;

        return;
    }

androidx.wear.watchface.WatchFaceImpl$1$1
<androidx.wear.watchface.WatchFaceImpl$1$1: androidx.wear.watchface.WatchFaceImpl this$0>
    void <init>(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl$1$1 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$1$1;

        $r1 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        r0.<androidx.wear.watchface.WatchFaceImpl$1$1: androidx.wear.watchface.WatchFaceImpl this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.lang.Boolean, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$1$1 r0;
        java.lang.Boolean r1;
        kotlin.coroutines.Continuation $r2;
        java.io.Closeable r3;
        androidx.wear.watchface.WatchFaceImpl r4;
        androidx.wear.watchface.utility.TraceEvent $r5, r10;
        boolean $z0;
        java.lang.Object $r6;
        kotlin.Unit $r7, r11;
        java.lang.Throwable $r8, $r9, r12, r13, r14;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$1$1;

        r1 := @parameter0: java.lang.Boolean;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r5 = new androidx.wear.watchface.utility.TraceEvent;

        specialinvoke $r5.<androidx.wear.watchface.utility.TraceEvent: void <init>(java.lang.String)>("WatchFaceImpl.ambient");

        r3 = (java.io.Closeable) $r5;

        r4 = r0.<androidx.wear.watchface.WatchFaceImpl$1$1: androidx.wear.watchface.WatchFaceImpl this$0>;

     label1:
        r10 = (androidx.wear.watchface.utility.TraceEvent) r3;

        $z0 = virtualinvoke r4.<androidx.wear.watchface.WatchFaceImpl: boolean getInitComplete$watchface_release()>();

        if $z0 == 0 goto label2;

        virtualinvoke r4.<androidx.wear.watchface.WatchFaceImpl: void onDraw$watchface_release()>();

     label2:
        staticinvoke <androidx.wear.watchface.WatchFaceImpl: void access$scheduleDraw(androidx.wear.watchface.WatchFaceImpl)>(r4);

        r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r3, null);

        goto label7;

     label4:
        $r9 := @caughtexception;

        r12 = $r9;

        r13 = r12;

        throw r12;

     label5:
        $r8 := @caughtexception;

        r14 = $r8;

     label6:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r3, r13);

        throw r14;

     label7:
        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if r11 != $r6 goto label8;

        return r11;

     label8:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public volatile java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$1$1 r0;
        java.lang.Object r1, $r4;
        kotlin.coroutines.Continuation $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = (java.lang.Boolean) r1;

        $r4 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$1$1: java.lang.Object emit(java.lang.Boolean,kotlin.coroutines.Continuation)>($r3, $r2);

        return $r4;
    }

androidx.wear.watchface.WatchFaceImpl$1
<androidx.wear.watchface.WatchFaceImpl$1: int label>
<androidx.wear.watchface.WatchFaceImpl$1: androidx.wear.watchface.WatchFaceImpl this$0>
    void <init>(androidx.wear.watchface.WatchFaceImpl, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$1 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$1;

        $r1 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.watchface.WatchFaceImpl$1: androidx.wear.watchface.WatchFaceImpl this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.watchface.WatchFaceImpl$1 r0;
        java.lang.Object $r1, r2, $r11;
        int $i0;
        kotlin.KotlinNothingValueException $r3;
        androidx.wear.watchface.WatchFaceImpl $r4, $r8;
        androidx.wear.watchface.WatchState $r5;
        kotlinx.coroutines.flow.StateFlow $r6;
        androidx.wear.watchface.WatchFaceImpl$1$1 $r7;
        kotlinx.coroutines.flow.FlowCollector $r9;
        kotlin.coroutines.Continuation $r10;
        java.lang.IllegalStateException $r12;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.watchface.WatchFaceImpl$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r5 = staticinvoke <androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState access$getWatchState$p(androidx.wear.watchface.WatchFaceImpl)>($r4);

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.WatchState: kotlinx.coroutines.flow.StateFlow isAmbient()>();

        $r7 = new androidx.wear.watchface.WatchFaceImpl$1$1;

        $r8 = r0.<androidx.wear.watchface.WatchFaceImpl$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        specialinvoke $r7.<androidx.wear.watchface.WatchFaceImpl$1$1: void <init>(androidx.wear.watchface.WatchFaceImpl)>($r8);

        $r9 = (kotlinx.coroutines.flow.FlowCollector) $r7;

        $r10 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.wear.watchface.WatchFaceImpl$1: int label> = 1;

        $r11 = interfaceinvoke $r6.<kotlinx.coroutines.flow.StateFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r9, $r10);

        if $r11 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;

     label4:
        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r12;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$1 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.wear.watchface.WatchFaceImpl $r4;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.wear.watchface.WatchFaceImpl$1;

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        specialinvoke $r3.<androidx.wear.watchface.WatchFaceImpl$1: void <init>(androidx.wear.watchface.WatchFaceImpl,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$1 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$1;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.wear.watchface.WatchFaceImpl$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.WatchFaceImpl$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.watchface.WatchFaceImpl$1 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.wear.watchface.WatchFaceImpl$2$1
<androidx.wear.watchface.WatchFaceImpl$2$1: androidx.wear.watchface.WatchFaceImpl this$0>
    void <init>(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl$2$1 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$2$1;

        $r1 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        r0.<androidx.wear.watchface.WatchFaceImpl$2$1: androidx.wear.watchface.WatchFaceImpl this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.lang.Boolean, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$2$1 r0;
        java.lang.Boolean r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        androidx.wear.watchface.WatchFaceImpl $r4;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$2$1;

        r1 := @parameter0: java.lang.Boolean;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        if r1 == null goto label1;

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl$2$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        $z0 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <androidx.wear.watchface.WatchFaceImpl: void access$batteryLowAndNotCharging(androidx.wear.watchface.WatchFaceImpl,boolean)>($r4, $z0);

     label1:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    public volatile java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$2$1 r0;
        java.lang.Object r1, $r4;
        kotlin.coroutines.Continuation $r2;
        java.lang.Boolean $r3;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = (java.lang.Boolean) r1;

        $r4 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$2$1: java.lang.Object emit(java.lang.Boolean,kotlin.coroutines.Continuation)>($r3, $r2);

        return $r4;
    }

androidx.wear.watchface.WatchFaceImpl$2
<androidx.wear.watchface.WatchFaceImpl$2: int label>
<androidx.wear.watchface.WatchFaceImpl$2: androidx.wear.watchface.WatchFaceImpl this$0>
    void <init>(androidx.wear.watchface.WatchFaceImpl, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$2 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$2;

        $r1 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.watchface.WatchFaceImpl$2: androidx.wear.watchface.WatchFaceImpl this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.watchface.WatchFaceImpl$2 r0;
        java.lang.Object $r1, r2, $r11;
        int $i0;
        kotlin.KotlinNothingValueException $r3;
        androidx.wear.watchface.WatchFaceImpl $r4, $r8;
        androidx.wear.watchface.WatchState $r5;
        kotlinx.coroutines.flow.StateFlow $r6;
        androidx.wear.watchface.WatchFaceImpl$2$1 $r7;
        kotlinx.coroutines.flow.FlowCollector $r9;
        kotlin.coroutines.Continuation $r10;
        java.lang.IllegalStateException $r12;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$2;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.watchface.WatchFaceImpl$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl$2: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r5 = staticinvoke <androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState access$getWatchState$p(androidx.wear.watchface.WatchFaceImpl)>($r4);

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.WatchState: kotlinx.coroutines.flow.StateFlow isBatteryLowAndNotCharging()>();

        $r7 = new androidx.wear.watchface.WatchFaceImpl$2$1;

        $r8 = r0.<androidx.wear.watchface.WatchFaceImpl$2: androidx.wear.watchface.WatchFaceImpl this$0>;

        specialinvoke $r7.<androidx.wear.watchface.WatchFaceImpl$2$1: void <init>(androidx.wear.watchface.WatchFaceImpl)>($r8);

        $r9 = (kotlinx.coroutines.flow.FlowCollector) $r7;

        $r10 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.wear.watchface.WatchFaceImpl$2: int label> = 1;

        $r11 = interfaceinvoke $r6.<kotlinx.coroutines.flow.StateFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r9, $r10);

        if $r11 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;

     label4:
        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r12;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$2 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.wear.watchface.WatchFaceImpl $r4;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.wear.watchface.WatchFaceImpl$2;

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl$2: androidx.wear.watchface.WatchFaceImpl this$0>;

        specialinvoke $r3.<androidx.wear.watchface.WatchFaceImpl$2: void <init>(androidx.wear.watchface.WatchFaceImpl,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$2 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$2;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.wear.watchface.WatchFaceImpl$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.WatchFaceImpl$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.watchface.WatchFaceImpl$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.wear.watchface.WatchFaceImpl$3$1
<androidx.wear.watchface.WatchFaceImpl$3$1: androidx.wear.watchface.WatchFaceImpl this$0>
    void <init>(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl$3$1 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$3$1;

        $r1 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        r0.<androidx.wear.watchface.WatchFaceImpl$3$1: androidx.wear.watchface.WatchFaceImpl this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.lang.Integer, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$3$1 r0;
        java.lang.Integer r1;
        kotlin.coroutines.Continuation $r2;
        kotlin.Unit $r3;
        androidx.wear.watchface.WatchFaceImpl $r4;
        int $i0;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$3$1;

        r1 := @parameter0: java.lang.Integer;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        if r1 == null goto label1;

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl$3$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        staticinvoke <androidx.wear.watchface.WatchFaceImpl: void access$interruptionFilter(androidx.wear.watchface.WatchFaceImpl,int)>($r4, $i0);

     label1:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

    public volatile java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$3$1 r0;
        java.lang.Object r1, $r4;
        kotlin.coroutines.Continuation $r2;
        java.lang.Integer $r3;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$3$1;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = (java.lang.Integer) r1;

        $r4 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$3$1: java.lang.Object emit(java.lang.Integer,kotlin.coroutines.Continuation)>($r3, $r2);

        return $r4;
    }

androidx.wear.watchface.WatchFaceImpl$3
<androidx.wear.watchface.WatchFaceImpl$3: int label>
<androidx.wear.watchface.WatchFaceImpl$3: androidx.wear.watchface.WatchFaceImpl this$0>
    void <init>(androidx.wear.watchface.WatchFaceImpl, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$3 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$3;

        $r1 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.watchface.WatchFaceImpl$3: androidx.wear.watchface.WatchFaceImpl this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.watchface.WatchFaceImpl$3 r0;
        java.lang.Object $r1, r2, $r11;
        int $i0;
        kotlin.KotlinNothingValueException $r3;
        androidx.wear.watchface.WatchFaceImpl $r4, $r8;
        androidx.wear.watchface.WatchState $r5;
        kotlinx.coroutines.flow.StateFlow $r6;
        androidx.wear.watchface.WatchFaceImpl$3$1 $r7;
        kotlinx.coroutines.flow.FlowCollector $r9;
        kotlin.coroutines.Continuation $r10;
        java.lang.IllegalStateException $r12;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$3;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.watchface.WatchFaceImpl$3: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl$3: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r5 = staticinvoke <androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState access$getWatchState$p(androidx.wear.watchface.WatchFaceImpl)>($r4);

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.WatchState: kotlinx.coroutines.flow.StateFlow getInterruptionFilter()>();

        $r7 = new androidx.wear.watchface.WatchFaceImpl$3$1;

        $r8 = r0.<androidx.wear.watchface.WatchFaceImpl$3: androidx.wear.watchface.WatchFaceImpl this$0>;

        specialinvoke $r7.<androidx.wear.watchface.WatchFaceImpl$3$1: void <init>(androidx.wear.watchface.WatchFaceImpl)>($r8);

        $r9 = (kotlinx.coroutines.flow.FlowCollector) $r7;

        $r10 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.wear.watchface.WatchFaceImpl$3: int label> = 1;

        $r11 = interfaceinvoke $r6.<kotlinx.coroutines.flow.StateFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r9, $r10);

        if $r11 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = new kotlin.KotlinNothingValueException;

        specialinvoke $r3.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r3;

     label4:
        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r12;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$3 r0, $r3;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r5;
        androidx.wear.watchface.WatchFaceImpl $r4;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$3;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = new androidx.wear.watchface.WatchFaceImpl$3;

        $r4 = r0.<androidx.wear.watchface.WatchFaceImpl$3: androidx.wear.watchface.WatchFaceImpl this$0>;

        specialinvoke $r3.<androidx.wear.watchface.WatchFaceImpl$3: void <init>(androidx.wear.watchface.WatchFaceImpl,kotlin.coroutines.Continuation)>($r4, $r2);

        $r5 = (kotlin.coroutines.Continuation) $r3;

        return $r5;
    }

    public final java.lang.Object invoke(kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation)
    {
        androidx.wear.watchface.WatchFaceImpl$3 r0, $r5;
        kotlinx.coroutines.CoroutineScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$3;

        r1 := @parameter0: kotlinx.coroutines.CoroutineScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.wear.watchface.WatchFaceImpl$3) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.WatchFaceImpl$3: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.watchface.WatchFaceImpl$3 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        kotlinx.coroutines.CoroutineScope $r4;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (kotlinx.coroutines.CoroutineScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$3: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.wear.watchface.WatchFaceImpl$ambientObserver$1
<androidx.wear.watchface.WatchFaceImpl$ambientObserver$1: androidx.wear.watchface.WatchFaceImpl this$0>
    void <init>(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl$ambientObserver$1 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$ambientObserver$1;

        $r1 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        r0.<androidx.wear.watchface.WatchFaceImpl$ambientObserver$1: androidx.wear.watchface.WatchFaceImpl this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void onChanged(boolean)
    {
        androidx.wear.watchface.WatchFaceImpl$ambientObserver$1 r0;
        boolean z0, z1, $z3, z4;
        java.io.Closeable r1;
        androidx.wear.watchface.WatchFaceImpl r2;
        androidx.wear.utility.TraceEvent $r3, r7;
        java.lang.Throwable $r4, $r5, r6, r9, r10, r11;
        kotlin.Unit r8;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$ambientObserver$1;

        z0 := @parameter0: boolean;

        $r3 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r3.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>("WatchFaceImpl.ambientObserver");

        r1 = (java.io.Closeable) $r3;

        r2 = r0.<androidx.wear.watchface.WatchFaceImpl$ambientObserver$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        z1 = 0;

        z4 = 0;

        r6 = (java.lang.Throwable) null;

     label1:
        r7 = (androidx.wear.utility.TraceEvent) r1;

        $z3 = virtualinvoke r2.<androidx.wear.watchface.WatchFaceImpl: boolean getInitComplete$wear_watchface_release()>();

        if $z3 == 0 goto label2;

        virtualinvoke r2.<androidx.wear.watchface.WatchFaceImpl: void onDraw$wear_watchface_release()>();

     label2:
        staticinvoke <androidx.wear.watchface.WatchFaceImpl: void access$scheduleDraw(androidx.wear.watchface.WatchFaceImpl)>(r2);

        r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r1, r6);

        goto label7;

     label4:
        $r5 := @caughtexception;

        r9 = $r5;

        r10 = r9;

        throw r9;

     label5:
        $r4 := @caughtexception;

        r11 = $r4;

     label6:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r1, r10);

        throw r11;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public volatile void onChanged(java.lang.Object)
    {
        androidx.wear.watchface.WatchFaceImpl$ambientObserver$1 r0;
        java.lang.Object r1;
        java.lang.Boolean $r2;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$ambientObserver$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Boolean) r1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$ambientObserver$1: void onChanged(boolean)>($z0);

        return;
    }

androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1
<androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1: androidx.wear.watchface.WatchFaceImpl this$0>
    void <init>(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1;

        $r1 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        r0.<androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1: androidx.wear.watchface.WatchFaceImpl this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void onChanged(boolean)
    {
        androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1 r0;
        boolean z0, $z1;
        androidx.wear.watchface.WatchFaceImpl $r1, $r5;
        androidx.wear.watchface.Renderer $r2, $r6;
        android.view.SurfaceHolder $r3, $r7;
        android.view.Surface $r4, $r8;
        float $f0;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r2 = virtualinvoke $r1.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer getRenderer$wear_watchface_release()>();

        $r3 = virtualinvoke $r2.<androidx.wear.watchface.Renderer: android.view.SurfaceHolder getSurfaceHolder()>();

        $r4 = interfaceinvoke $r3.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        $z1 = virtualinvoke $r4.<android.view.Surface: boolean isValid()>();

        if $z1 == 0 goto label3;

        $r5 = r0.<androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r6 = virtualinvoke $r5.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer getRenderer$wear_watchface_release()>();

        $r7 = virtualinvoke $r6.<androidx.wear.watchface.Renderer: android.view.SurfaceHolder getSurfaceHolder()>();

        $r8 = interfaceinvoke $r7.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        if z0 == 0 goto label1;

        $f0 = 10.0F;

        goto label2;

     label1:
        $f0 = 0.0F;

     label2:
        virtualinvoke $r8.<android.view.Surface: void setFrameRate(float,int)>($f0, 0);

     label3:
        return;
    }

    public volatile void onChanged(java.lang.Object)
    {
        androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1 r0;
        java.lang.Object r1;
        java.lang.Boolean $r2;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Boolean) r1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$batteryLowAndNotChargingObserver$1: void onChanged(boolean)>($z0);

        return;
    }

androidx.wear.watchface.WatchFaceImpl$Companion
    private void <init>()
    {
        androidx.wear.watchface.WatchFaceImpl$Companion r0;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.wear.watchface.WatchFaceImpl$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.wear.watchface.WatchFaceImpl$Companion: void <init>()>();

        return;
    }

androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1
<androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1: androidx.wear.watchface.WatchFaceImpl this$0>
    void <init>(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1;

        $r1 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        r0.<androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1: androidx.wear.watchface.WatchFaceImpl this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void onChanged(int)
    {
        androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1 r0;
        int i0;
        boolean z0, $z1, $z2;
        androidx.wear.watchface.WatchFaceImpl $r1, $r2, $r3;
        androidx.wear.watchface.WatchFaceHostApi $r4;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1;

        i0 := @parameter0: int;

        if i0 == 3 goto label1;

        if i0 == 2 goto label1;

        if i0 != 4 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        $z1 = staticinvoke <androidx.wear.watchface.WatchFaceImpl: boolean access$getMuteMode$p(androidx.wear.watchface.WatchFaceImpl)>($r1);

        if $z1 == z0 goto label4;

        $r2 = r0.<androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        staticinvoke <androidx.wear.watchface.WatchFaceImpl: void access$setMuteMode$p(androidx.wear.watchface.WatchFaceImpl,boolean)>($r2, z0);

        $r3 = r0.<androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r4 = staticinvoke <androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi access$getWatchFaceHostApi$p(androidx.wear.watchface.WatchFaceImpl)>($r3);

        interfaceinvoke $r4.<androidx.wear.watchface.WatchFaceHostApi: void invalidate()>();

     label4:
        return;
    }

    public volatile void onChanged(java.lang.Object)
    {
        androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        int $i0;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$interruptionFilterObserver$1: void onChanged(int)>($i0);

        return;
    }

androidx.wear.watchface.WatchFaceImpl$onDraw$1
<androidx.wear.watchface.WatchFaceImpl$onDraw$1: androidx.wear.watchface.WatchFaceImpl this$0>
    void <init>(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl$onDraw$1 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$onDraw$1;

        $r1 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        r0.<androidx.wear.watchface.WatchFaceImpl$onDraw$1: androidx.wear.watchface.WatchFaceImpl this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.wear.watchface.WatchFaceImpl$onDraw$1 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;
        androidx.wear.watchface.WatchFaceHostApi $r2;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$onDraw$1;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl$onDraw$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r2 = staticinvoke <androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi access$getWatchFaceHostApi$p(androidx.wear.watchface.WatchFaceImpl)>($r1);

        interfaceinvoke $r2.<androidx.wear.watchface.WatchFaceHostApi: void invalidate()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.wear.watchface.WatchFaceImpl$onDraw$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$onDraw$1;

        virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$onDraw$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1
<androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1: androidx.wear.watchface.WatchFaceImpl this$0>
    void <init>(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1;

        $r1 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        r0.<androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1: androidx.wear.watchface.WatchFaceImpl this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;
        androidx.wear.watchface.WatchFaceHostApi $r2;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r2 = staticinvoke <androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi access$getWatchFaceHostApi$p(androidx.wear.watchface.WatchFaceImpl)>($r1);

        interfaceinvoke $r2.<androidx.wear.watchface.WatchFaceHostApi: void invalidate()>();

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1;

        virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$scheduleDraw$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1
<androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1: androidx.wear.watchface.WatchFaceImpl this$0>
    void <init>(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1 r0;
        androidx.wear.watchface.WatchFaceImpl $r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1;

        $r1 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        r0.<androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1: androidx.wear.watchface.WatchFaceImpl this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void onChanged(boolean)
    {
        androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1 r0;
        boolean z0, z1, $z3, z4;
        java.io.Closeable r1;
        androidx.wear.watchface.WatchFaceImpl r2;
        androidx.wear.utility.TraceEvent $r3, r8;
        androidx.wear.watchface.WatchFaceHostApi $r4;
        java.lang.Throwable $r5, $r6, r7, r10, r11, r12;
        kotlin.Unit r9;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1;

        z0 := @parameter0: boolean;

        $r3 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r3.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>("WatchFaceImpl.visibilityObserver");

        r1 = (java.io.Closeable) $r3;

        r2 = r0.<androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1: androidx.wear.watchface.WatchFaceImpl this$0>;

        z1 = 0;

        z4 = 0;

        r7 = (java.lang.Throwable) null;

     label1:
        r8 = (androidx.wear.utility.TraceEvent) r1;

        if z0 == 0 goto label3;

        staticinvoke <androidx.wear.watchface.WatchFaceImpl: void access$registerReceivers(androidx.wear.watchface.WatchFaceImpl)>(r2);

        $r4 = staticinvoke <androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi access$getWatchFaceHostApi$p(androidx.wear.watchface.WatchFaceImpl)>(r2);

        interfaceinvoke $r4.<androidx.wear.watchface.WatchFaceHostApi: void invalidate()>();

        $z3 = virtualinvoke r2.<androidx.wear.watchface.WatchFaceImpl: boolean getInitComplete$wear_watchface_release()>();

        if $z3 == 0 goto label2;

        virtualinvoke r2.<androidx.wear.watchface.WatchFaceImpl: void onDraw$wear_watchface_release()>();

     label2:
        staticinvoke <androidx.wear.watchface.WatchFaceImpl: void access$scheduleDraw(androidx.wear.watchface.WatchFaceImpl)>(r2);

        goto label4;

     label3:
        staticinvoke <androidx.wear.watchface.WatchFaceImpl: void access$unregisterReceivers(androidx.wear.watchface.WatchFaceImpl)>(r2);

     label4:
        r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label5:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r1, r7);

        goto label9;

     label6:
        $r6 := @caughtexception;

        r10 = $r6;

        r11 = r10;

        throw r10;

     label7:
        $r5 := @caughtexception;

        r12 = $r5;

     label8:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r1, r11);

        throw r12;

     label9:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public volatile void onChanged(java.lang.Object)
    {
        androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1 r0;
        java.lang.Object r1;
        java.lang.Boolean $r2;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Boolean) r1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$visibilityObserver$1: void onChanged(boolean)>($z0);

        return;
    }

androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate
<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.WatchFaceImpl this$0>
    public void <init>(androidx.wear.watchface.WatchFaceImpl)
    {
        androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate r0;
        androidx.wear.watchface.WatchFaceImpl r1;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate;

        r1 := @parameter0: androidx.wear.watchface.WatchFaceImpl;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "this$0");

        r0.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.WatchFaceImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.wear.watchface.style.UserStyleSchema getUserStyleSchema()
    {
        androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate r0;
        androidx.wear.watchface.WatchFaceImpl $r1;
        androidx.wear.watchface.style.CurrentUserStyleRepository $r2;
        androidx.wear.watchface.style.UserStyleSchema $r3;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r2 = virtualinvoke $r1.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.style.CurrentUserStyleRepository getCurrentUserStyleRepository$wear_watchface_release()>();

        $r3 = virtualinvoke $r2.<androidx.wear.watchface.style.CurrentUserStyleRepository: androidx.wear.watchface.style.UserStyleSchema getSchema()>();

        return $r3;
    }

    public androidx.wear.watchface.style.UserStyle getUserStyle()
    {
        androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate r0;
        androidx.wear.watchface.WatchFaceImpl $r1;
        androidx.wear.watchface.style.CurrentUserStyleRepository $r2;
        androidx.wear.watchface.style.UserStyle $r3;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r2 = virtualinvoke $r1.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.style.CurrentUserStyleRepository getCurrentUserStyleRepository$wear_watchface_release()>();

        $r3 = virtualinvoke $r2.<androidx.wear.watchface.style.CurrentUserStyleRepository: androidx.wear.watchface.style.UserStyle getUserStyle()>();

        return $r3;
    }

    public void setUserStyle(androidx.wear.watchface.style.UserStyle)
    {
        androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate r0;
        androidx.wear.watchface.style.UserStyle r1;
        androidx.wear.watchface.WatchFaceImpl $r2;
        androidx.wear.watchface.style.CurrentUserStyleRepository $r3;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate;

        r1 := @parameter0: androidx.wear.watchface.style.UserStyle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r2 = r0.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r3 = virtualinvoke $r2.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.style.CurrentUserStyleRepository getCurrentUserStyleRepository$wear_watchface_release()>();

        virtualinvoke $r3.<androidx.wear.watchface.style.CurrentUserStyleRepository: void setUserStyle(androidx.wear.watchface.style.UserStyle)>(r1);

        return;
    }

    public androidx.wear.watchface.ComplicationSlotsManager getComplicationSlotsManager()
    {
        androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate r0;
        androidx.wear.watchface.WatchFaceImpl $r1;
        androidx.wear.watchface.ComplicationSlotsManager $r2;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r2 = virtualinvoke $r1.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.ComplicationSlotsManager getComplicationSlotsManager()>();

        return $r2;
    }

    public android.graphics.Rect getScreenBounds()
    {
        androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate r0;
        androidx.wear.watchface.WatchFaceImpl $r1;
        androidx.wear.watchface.Renderer $r2;
        android.graphics.Rect $r3;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r2 = virtualinvoke $r1.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer getRenderer$wear_watchface_release()>();

        $r3 = virtualinvoke $r2.<androidx.wear.watchface.Renderer: android.graphics.Rect getScreenBounds()>();

        return $r3;
    }

    public java.time.Instant getPreviewReferenceInstant()
    {
        androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate r0;
        androidx.wear.watchface.WatchFaceImpl $r1;
        java.time.Instant $r2;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r2 = virtualinvoke $r1.<androidx.wear.watchface.WatchFaceImpl: java.time.Instant getPreviewReferenceInstant()>();

        return $r2;
    }

    public android.os.Handler getBackgroundThreadHandler()
    {
        androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate r0;
        androidx.wear.watchface.WatchFaceImpl $r1;
        androidx.wear.watchface.WatchFaceHostApi $r2;
        android.os.Handler $r3;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate;

        $r1 = r0.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.WatchFaceImpl this$0>;

        $r2 = staticinvoke <androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchFaceHostApi access$getWatchFaceHostApi$p(androidx.wear.watchface.WatchFaceImpl)>($r1);

        $r3 = interfaceinvoke $r2.<androidx.wear.watchface.WatchFaceHostApi: android.os.Handler getBackgroundThreadHandler()>();

        return $r3;
    }

    public android.graphics.Bitmap renderWatchFaceToBitmap(androidx.wear.watchface.RenderParameters, java.time.Instant, java.util.Map)
    {
        androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate r0;
        androidx.wear.watchface.RenderParameters r1;
        java.time.Instant r2;
        java.util.Map r3, r7, $r11, r35, r39, r43, r45, r46, r53;
        java.io.Closeable r4;
        androidx.wear.watchface.WatchFaceImpl r5;
        boolean z0, z2, $z3, $z4, $z5, z6, z11, z14, z15, z18;
        androidx.wear.complications.data.ComplicationData r6, $r50, r57;
        android.graphics.Bitmap r8, $r52;
        androidx.wear.utility.TraceEvent $r9, r33;
        androidx.wear.watchface.ComplicationSlotsManager $r10, $r22, $r27;
        java.util.Collection $r12;
        int $i0, $i1, $i2, i3, i4, $i5;
        java.util.LinkedHashMap $r13;
        java.util.Set $r14, $r17;
        androidx.wear.watchface.Renderer $r15;
        java.time.ZoneId $r16;
        java.lang.Object $r18, $r19, $r21, $r23, $r24, $r26, r37;
        java.lang.Number $r20, $r25;
        androidx.wear.watchface.CanvasComplication $r28;
        java.lang.Throwable $r30, $r31, r32, r58, r59, r60;
        java.lang.Iterable $r34;
        java.util.Iterator r36, r47, $r54;
        androidx.wear.watchface.ComplicationSlot r38, r41;
        java.lang.Integer r40, r42;
        java.util.Map$Entry r48, r49, r55, r56;
        java.time.ZonedDateTime $r51;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate;

        r1 := @parameter0: androidx.wear.watchface.RenderParameters;

        r2 := @parameter1: java.time.Instant;

        r3 := @parameter2: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "renderParameters");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "instant");

        $r9 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r9.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>("WFEditorDelegate.takeScreenshot");

        r4 = (java.io.Closeable) $r9;

        r5 = r0.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.WatchFaceImpl this$0>;

        z0 = 0;

        z6 = 0;

        r32 = (java.lang.Throwable) null;

     label01:
        r33 = (androidx.wear.utility.TraceEvent) r4;

        $r10 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.ComplicationSlotsManager getComplicationSlotsManager()>();

        $r11 = virtualinvoke $r10.<androidx.wear.watchface.ComplicationSlotsManager: java.util.Map getComplicationSlots()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>();

        $r34 = (java.lang.Iterable) $r12;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r34, 10);

        $i1 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        i3 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i1, 16);

        $r13 = new java.util.LinkedHashMap;

        specialinvoke $r13.<java.util.LinkedHashMap: void <init>(int)>(i3);

        r35 = (java.util.Map) $r13;

        r36 = interfaceinvoke $r34.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label03;

        r37 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r38 = (androidx.wear.watchface.ComplicationSlot) r37;

        r39 = r35;

        $i2 = virtualinvoke r38.<androidx.wear.watchface.ComplicationSlot: int getId()>();

        r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        r41 = (androidx.wear.watchface.ComplicationSlot) r37;

        r42 = r40;

        r43 = r39;

        $r28 = virtualinvoke r41.<androidx.wear.watchface.ComplicationSlot: androidx.wear.watchface.CanvasComplication getRenderer()>();

        r6 = interfaceinvoke $r28.<androidx.wear.watchface.CanvasComplication: androidx.wear.complications.data.ComplicationData getData()>();

        interfaceinvoke r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r42, r6);

        goto label02;

     label03:
        r7 = r35;

        if r3 != null goto label04;

        goto label06;

     label04:
        z11 = 0;

        r45 = r3;

        r46 = r45;

        z14 = 0;

        $r14 = interfaceinvoke r46.<java.util.Map: java.util.Set entrySet()>();

        r47 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r23 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        r48 = (java.util.Map$Entry) $r23;

        z15 = 0;

        $r24 = interfaceinvoke r48.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r25 = (java.lang.Number) $r24;

        i4 = virtualinvoke $r25.<java.lang.Number: int intValue()>();

        r49 = r48;

        z2 = 0;

        $r26 = interfaceinvoke r49.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r50 = (androidx.wear.complications.data.ComplicationData) $r26;

        $r27 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.ComplicationSlotsManager getComplicationSlotsManager()>();

        virtualinvoke $r27.<androidx.wear.watchface.ComplicationSlotsManager: void setComplicationDataUpdateSync$wear_watchface_release(int,androidx.wear.complications.data.ComplicationData)>(i4, $r50);

        goto label05;

     label06:
        $r15 = virtualinvoke r5.<androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.Renderer getRenderer$wear_watchface_release()>();

        $r16 = staticinvoke <java.time.ZoneId: java.time.ZoneId of(java.lang.String)>("UTC");

        $r51 = staticinvoke <java.time.ZonedDateTime: java.time.ZonedDateTime ofInstant(java.time.Instant,java.time.ZoneId)>(r2, $r16);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r51, "ofInstant(instant, ZoneId.of(\"UTC\"))");

        $r52 = virtualinvoke $r15.<androidx.wear.watchface.Renderer: android.graphics.Bitmap takeScreenshot$wear_watchface_release(java.time.ZonedDateTime,androidx.wear.watchface.RenderParameters)>($r51, r1);

        if r3 == null goto label08;

        r53 = r7;

        $r17 = interfaceinvoke r53.<java.util.Map: java.util.Set entrySet()>();

        $r54 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z5 = interfaceinvoke $r54.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label08;

        $r18 = interfaceinvoke $r54.<java.util.Iterator: java.lang.Object next()>();

        r55 = (java.util.Map$Entry) $r18;

        r56 = r55;

        $r19 = interfaceinvoke r56.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r20 = (java.lang.Number) $r19;

        $i5 = virtualinvoke $r20.<java.lang.Number: int intValue()>();

        z18 = 0;

        $r21 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getValue()>();

        r57 = (androidx.wear.complications.data.ComplicationData) $r21;

        $r22 = virtualinvoke r0.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.ComplicationSlotsManager getComplicationSlotsManager()>();

        virtualinvoke $r22.<androidx.wear.watchface.ComplicationSlotsManager: void setComplicationDataUpdateSync$wear_watchface_release(int,androidx.wear.complications.data.ComplicationData)>($i5, r57);

        goto label07;

     label08:
        r8 = $r52;

     label09:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r4, r32);

        return r8;

     label10:
        $r31 := @caughtexception;

        r58 = $r31;

        r59 = r58;

        throw r58;

     label11:
        $r30 := @caughtexception;

        r60 = $r30;

     label12:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r4, r59);

        throw r60;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void onDestroy()
    {
        androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate r0;
        java.io.Closeable r1;
        androidx.wear.watchface.WatchFaceImpl r2;
        boolean z0, $z2, z3;
        androidx.wear.utility.TraceEvent $r3, r8;
        androidx.wear.watchface.WatchState $r4;
        java.lang.Throwable $r5, $r6, r7, r10, r11, r12;
        kotlin.Unit r9;

        r0 := @this: androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate;

        $r3 = new androidx.wear.utility.TraceEvent;

        specialinvoke $r3.<androidx.wear.utility.TraceEvent: void <init>(java.lang.String)>("WFEditorDelegate.onDestroy");

        r1 = (java.io.Closeable) $r3;

        r2 = r0.<androidx.wear.watchface.WatchFaceImpl$WFEditorDelegate: androidx.wear.watchface.WatchFaceImpl this$0>;

        z0 = 0;

        z3 = 0;

        r7 = (java.lang.Throwable) null;

     label1:
        r8 = (androidx.wear.utility.TraceEvent) r1;

        $r4 = staticinvoke <androidx.wear.watchface.WatchFaceImpl: androidx.wear.watchface.WatchState access$getWatchState$p(androidx.wear.watchface.WatchFaceImpl)>(r2);

        $z2 = virtualinvoke $r4.<androidx.wear.watchface.WatchState: boolean isHeadless()>();

        if $z2 == 0 goto label2;

        virtualinvoke r2.<androidx.wear.watchface.WatchFaceImpl: void onDestroy$wear_watchface_release()>();

     label2:
        r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label3:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r1, r7);

        goto label7;

     label4:
        $r6 := @caughtexception;

        r10 = $r6;

        r11 = r10;

        throw r10;

     label5:
        $r5 := @caughtexception;

        r12 = $r5;

     label6:
        staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>(r1, r11);

        throw r12;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

