androidx.compose.ui.layout.FixedCountSubcomposeSlotReusePolicy
<androidx.compose.ui.layout.FixedCountSubcomposeSlotReusePolicy: int maxSlotsToRetainForReuse>
    public void <init>(int)
    {
        androidx.compose.ui.layout.FixedCountSubcomposeSlotReusePolicy r0;
        int i0;

        r0 := @this: androidx.compose.ui.layout.FixedCountSubcomposeSlotReusePolicy;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.ui.layout.FixedCountSubcomposeSlotReusePolicy: int maxSlotsToRetainForReuse> = i0;

        return;
    }

    public void getSlotsToRetain(androidx.compose.ui.layout.SubcomposeSlotReusePolicy$SlotIdsSet)
    {
        androidx.compose.ui.layout.FixedCountSubcomposeSlotReusePolicy r0;
        androidx.compose.ui.layout.SubcomposeSlotReusePolicy$SlotIdsSet r1;
        java.util.Iterator $r2;
        int $i0, $i1, $i2, i3;
        boolean $z1;

        r0 := @this: androidx.compose.ui.layout.FixedCountSubcomposeSlotReusePolicy;

        r1 := @parameter0: androidx.compose.ui.layout.SubcomposeSlotReusePolicy$SlotIdsSet;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "slotIds");

        $i0 = virtualinvoke r1.<androidx.compose.ui.layout.SubcomposeSlotReusePolicy$SlotIdsSet: int size()>();

        $i1 = r0.<androidx.compose.ui.layout.FixedCountSubcomposeSlotReusePolicy: int maxSlotsToRetainForReuse>;

        if $i0 <= $i1 goto label2;

        i3 = 0;

        $r2 = virtualinvoke r1.<androidx.compose.ui.layout.SubcomposeSlotReusePolicy$SlotIdsSet: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        i3 = i3 + 1;

        $i2 = r0.<androidx.compose.ui.layout.FixedCountSubcomposeSlotReusePolicy: int maxSlotsToRetainForReuse>;

        if i3 <= $i2 goto label1;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    public boolean areCompatible(java.lang.Object, java.lang.Object)
    {
        androidx.compose.ui.layout.FixedCountSubcomposeSlotReusePolicy r0;
        java.lang.Object r1, r2;

        r0 := @this: androidx.compose.ui.layout.FixedCountSubcomposeSlotReusePolicy;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        return 1;
    }

