androidx.media3.exoplayer.RendererCapabilities
<androidx.media3.exoplayer.RendererCapabilities: int FORMAT_SUPPORT_MASK>
<androidx.media3.exoplayer.RendererCapabilities: int FORMAT_HANDLED>
<androidx.media3.exoplayer.RendererCapabilities: int FORMAT_EXCEEDS_CAPABILITIES>
<androidx.media3.exoplayer.RendererCapabilities: int FORMAT_UNSUPPORTED_DRM>
<androidx.media3.exoplayer.RendererCapabilities: int FORMAT_UNSUPPORTED_SUBTYPE>
<androidx.media3.exoplayer.RendererCapabilities: int FORMAT_UNSUPPORTED_TYPE>
<androidx.media3.exoplayer.RendererCapabilities: int ADAPTIVE_SUPPORT_MASK>
<androidx.media3.exoplayer.RendererCapabilities: int ADAPTIVE_SEAMLESS>
<androidx.media3.exoplayer.RendererCapabilities: int ADAPTIVE_NOT_SEAMLESS>
<androidx.media3.exoplayer.RendererCapabilities: int ADAPTIVE_NOT_SUPPORTED>
<androidx.media3.exoplayer.RendererCapabilities: int TUNNELING_SUPPORT_MASK>
<androidx.media3.exoplayer.RendererCapabilities: int TUNNELING_SUPPORTED>
<androidx.media3.exoplayer.RendererCapabilities: int TUNNELING_NOT_SUPPORTED>
<androidx.media3.exoplayer.RendererCapabilities: int HARDWARE_ACCELERATION_SUPPORT_MASK>
<androidx.media3.exoplayer.RendererCapabilities: int HARDWARE_ACCELERATION_SUPPORTED>
<androidx.media3.exoplayer.RendererCapabilities: int HARDWARE_ACCELERATION_NOT_SUPPORTED>
<androidx.media3.exoplayer.RendererCapabilities: int MODE_SUPPORT_MASK>
<androidx.media3.exoplayer.RendererCapabilities: int DECODER_SUPPORT_FALLBACK_MIMETYPE>
<androidx.media3.exoplayer.RendererCapabilities: int DECODER_SUPPORT_PRIMARY>
<androidx.media3.exoplayer.RendererCapabilities: int DECODER_SUPPORT_FALLBACK>
    public static int create(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int create(int,int,int)>(i0, 0, 0);

        return $i1;
    }

    public static int create(int, int, int)
    {
        int i0, i1, i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = staticinvoke <androidx.media3.exoplayer.RendererCapabilities: int create(int,int,int,int,int)>(i0, i1, i2, 0, 128);

        return $i3;
    }

    public static int create(int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $i5 = i0 | i1;

        $i6 = $i5 | i2;

        $i7 = $i6 | i3;

        $i8 = $i7 | i4;

        return $i8;
    }

    public static int getFormatSupport(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 7;

        return $i1;
    }

    public static int getAdaptiveSupport(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 24;

        return $i1;
    }

    public static int getTunnelingSupport(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 32;

        return $i1;
    }

    public static int getHardwareAccelerationSupport(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 64;

        return $i1;
    }

    public static int getDecoderSupport(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 384;

        return $i1;
    }

<androidx.media3.exoplayer.RendererCapabilities: java.lang.String getName()>
<androidx.media3.exoplayer.RendererCapabilities: int getTrackType()>
<androidx.media3.exoplayer.RendererCapabilities: int supportsFormat(androidx.media3.common.Format)>
<androidx.media3.exoplayer.RendererCapabilities: int supportsMixedMimeTypeAdaptation()>
androidx.media3.exoplayer.RendererCapabilities$AdaptiveSupport
androidx.media3.exoplayer.RendererCapabilities$Capabilities
androidx.media3.exoplayer.RendererCapabilities$DecoderSupport
androidx.media3.exoplayer.RendererCapabilities$FormatSupport
androidx.media3.exoplayer.RendererCapabilities$HardwareAccelerationSupport
androidx.media3.exoplayer.RendererCapabilities$TunnelingSupport
