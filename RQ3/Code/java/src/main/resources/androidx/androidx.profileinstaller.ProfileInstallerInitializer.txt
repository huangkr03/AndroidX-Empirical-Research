androidx.profileinstaller.ProfileInstallerInitializer
<androidx.profileinstaller.ProfileInstallerInitializer: int DELAY_MS>
    public void <init>()
    {
        androidx.profileinstaller.ProfileInstallerInitializer r0;

        r0 := @this: androidx.profileinstaller.ProfileInstallerInitializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context)
    {
        androidx.profileinstaller.ProfileInstallerInitializer r0;
        android.content.Context r1, $r2;
        int $i0;
        androidx.profileinstaller.ProfileInstallerInitializer$Result $r3, $r4;

        r0 := @this: androidx.profileinstaller.ProfileInstallerInitializer;

        r1 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 24 goto label1;

        $r4 = new androidx.profileinstaller.ProfileInstallerInitializer$Result;

        specialinvoke $r4.<androidx.profileinstaller.ProfileInstallerInitializer$Result: void <init>()>();

        return $r4;

     label1:
        $r2 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        virtualinvoke r0.<androidx.profileinstaller.ProfileInstallerInitializer: void delayAfterFirstFrame(android.content.Context)>($r2);

        $r3 = new androidx.profileinstaller.ProfileInstallerInitializer$Result;

        specialinvoke $r3.<androidx.profileinstaller.ProfileInstallerInitializer$Result: void <init>()>();

        return $r3;
    }

    void delayAfterFirstFrame(android.content.Context)
    {
        androidx.profileinstaller.ProfileInstallerInitializer r0;
        android.content.Context r1;
        java.lang.Runnable $r2;

        r0 := @this: androidx.profileinstaller.ProfileInstallerInitializer;

        r1 := @parameter0: android.content.Context;

        $r2 = dynamicinvoke "run" <java.lang.Runnable (androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.profileinstaller.ProfileInstallerInitializer: void lambda$delayAfterFirstFrame$0(android.content.Context)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)>($r2);

        return;
    }

    void installAfterDelay(android.content.Context)
    {
        androidx.profileinstaller.ProfileInstallerInitializer r0;
        android.content.Context r1;
        java.util.Random r2, $r5;
        int i0, $i1, $i2, $i3;
        android.os.Handler $r3, r8;
        android.os.Looper $r4, $r7;
        java.lang.Runnable $r6;
        long $l4;

        r0 := @this: androidx.profileinstaller.ProfileInstallerInitializer;

        r1 := @parameter0: android.content.Context;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 28 goto label1;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        r8 = staticinvoke <androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)>($r7);

        goto label2;

     label1:
        $r3 = new android.os.Handler;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        r8 = $r3;

     label2:
        $r5 = new java.util.Random;

        specialinvoke $r5.<java.util.Random: void <init>()>();

        r2 = $r5;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(1000, 1);

        i0 = virtualinvoke r2.<java.util.Random: int nextInt(int)>($i2);

        $r6 = dynamicinvoke "run" <java.lang.Runnable (android.content.Context)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.profileinstaller.ProfileInstallerInitializer: void lambda$installAfterDelay$1(android.content.Context)>, methodtype: void __METHODTYPE__());

        $i3 = 5000 + i0;

        $l4 = (long) $i3;

        virtualinvoke r8.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, $l4);

        return;
    }

    public java.util.List dependencies()
    {
        androidx.profileinstaller.ProfileInstallerInitializer r0;
        java.util.List $r1;

        r0 := @this: androidx.profileinstaller.ProfileInstallerInitializer;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r1;
    }

    private static void writeInBackground(android.content.Context)
    {
        android.content.Context r0;
        java.util.concurrent.ThreadPoolExecutor r1, $r2;
        java.util.concurrent.LinkedBlockingQueue $r3;
        java.util.concurrent.TimeUnit $r4;
        java.lang.Runnable $r5;

        r0 := @parameter0: android.content.Context;

        $r2 = new java.util.concurrent.ThreadPoolExecutor;

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r3 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        specialinvoke $r2.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)>(0, 1, 0L, $r4, $r3);

        r1 = $r2;

        $r5 = dynamicinvoke "run" <java.lang.Runnable (android.content.Context)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.profileinstaller.ProfileInstallerInitializer: void lambda$writeInBackground$2(android.content.Context)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r5);

        return;
    }

    public volatile java.lang.Object create(android.content.Context)
    {
        androidx.profileinstaller.ProfileInstallerInitializer r0;
        android.content.Context r1;
        androidx.profileinstaller.ProfileInstallerInitializer$Result $r2;

        r0 := @this: androidx.profileinstaller.ProfileInstallerInitializer;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<androidx.profileinstaller.ProfileInstallerInitializer: androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context)>(r1);

        return $r2;
    }

    private static void lambda$writeInBackground$2(android.content.Context)
    {
        android.content.Context r0;

        r0 := @parameter0: android.content.Context;

        staticinvoke <androidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context)>(r0);

        return;
    }

    private static void lambda$installAfterDelay$1(android.content.Context)
    {
        android.content.Context r0;

        r0 := @parameter0: android.content.Context;

        staticinvoke <androidx.profileinstaller.ProfileInstallerInitializer: void writeInBackground(android.content.Context)>(r0);

        return;
    }

    private void lambda$delayAfterFirstFrame$0(android.content.Context)
    {
        androidx.profileinstaller.ProfileInstallerInitializer r0;
        android.content.Context r1;

        r0 := @this: androidx.profileinstaller.ProfileInstallerInitializer;

        r1 := @parameter0: android.content.Context;

        virtualinvoke r0.<androidx.profileinstaller.ProfileInstallerInitializer: void installAfterDelay(android.content.Context)>(r1);

        return;
    }

androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl
    private void <init>()
    {
        androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl r0;

        r0 := @this: androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void postFrameCallback(java.lang.Runnable)
    {
        java.lang.Runnable r0;
        android.view.Choreographer $r1;
        android.view.Choreographer$FrameCallback $r2;

        r0 := @parameter0: java.lang.Runnable;

        $r1 = staticinvoke <android.view.Choreographer: android.view.Choreographer getInstance()>();

        $r2 = dynamicinvoke "doFrame" <android.view.Choreographer$FrameCallback (java.lang.Runnable)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(long), methodhandle: "REF_INVOKE_STATIC" <androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void lambda$postFrameCallback$0(java.lang.Runnable,long)>, methodtype: void __METHODTYPE__(long));

        virtualinvoke $r1.<android.view.Choreographer: void postFrameCallback(android.view.Choreographer$FrameCallback)>($r2);

        return;
    }

    private static void lambda$postFrameCallback$0(java.lang.Runnable, long)
    {
        java.lang.Runnable r0;
        long l0;

        r0 := @parameter0: java.lang.Runnable;

        l0 := @parameter1: long;

        interfaceinvoke r0.<java.lang.Runnable: void run()>();

        return;
    }

androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl
    private void <init>()
    {
        androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl r0;

        r0 := @this: androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.os.Handler createAsync(android.os.Looper)
    {
        android.os.Looper r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.os.Looper;

        $r1 = staticinvoke <android.os.Handler: android.os.Handler createAsync(android.os.Looper)>(r0);

        return $r1;
    }

androidx.profileinstaller.ProfileInstallerInitializer$Result
    public void <init>()
    {
        androidx.profileinstaller.ProfileInstallerInitializer$Result r0;

        r0 := @this: androidx.profileinstaller.ProfileInstallerInitializer$Result;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

