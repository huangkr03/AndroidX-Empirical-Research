androidx.compose.material.FabPlacement
<androidx.compose.material.FabPlacement: boolean isDocked>
<androidx.compose.material.FabPlacement: int left>
<androidx.compose.material.FabPlacement: int width>
<androidx.compose.material.FabPlacement: int height>
    public void <init>(boolean, int, int, int)
    {
        androidx.compose.material.FabPlacement r0;
        boolean z0;
        int i0, i1, i2;

        r0 := @this: androidx.compose.material.FabPlacement;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.material.FabPlacement: boolean isDocked> = z0;

        r0.<androidx.compose.material.FabPlacement: int left> = i0;

        r0.<androidx.compose.material.FabPlacement: int width> = i1;

        r0.<androidx.compose.material.FabPlacement: int height> = i2;

        return;
    }

    public final boolean isDocked()
    {
        androidx.compose.material.FabPlacement r0;
        boolean $z0;

        r0 := @this: androidx.compose.material.FabPlacement;

        $z0 = r0.<androidx.compose.material.FabPlacement: boolean isDocked>;

        return $z0;
    }

    public final int getLeft()
    {
        androidx.compose.material.FabPlacement r0;
        int $i0;

        r0 := @this: androidx.compose.material.FabPlacement;

        $i0 = r0.<androidx.compose.material.FabPlacement: int left>;

        return $i0;
    }

    public final int getWidth()
    {
        androidx.compose.material.FabPlacement r0;
        int $i0;

        r0 := @this: androidx.compose.material.FabPlacement;

        $i0 = r0.<androidx.compose.material.FabPlacement: int width>;

        return $i0;
    }

    public final int getHeight()
    {
        androidx.compose.material.FabPlacement r0;
        int $i0;

        r0 := @this: androidx.compose.material.FabPlacement;

        $i0 = r0.<androidx.compose.material.FabPlacement: int height>;

        return $i0;
    }

