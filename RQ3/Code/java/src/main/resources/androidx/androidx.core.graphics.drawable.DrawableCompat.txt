androidx.core.graphics.drawable.DrawableCompat
<androidx.core.graphics.drawable.DrawableCompat: java.lang.String TAG>
<androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod>
<androidx.core.graphics.drawable.DrawableCompat: boolean sSetLayoutDirectionMethodFetched>
<androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod>
<androidx.core.graphics.drawable.DrawableCompat: boolean sGetLayoutDirectionMethodFetched>
    public static void jumpToCurrentState(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        return;
    }

    public static void setAutoMirrored(android.graphics.drawable.Drawable, boolean)
    {
        android.graphics.drawable.Drawable r0;
        boolean z0;
        int $i0;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        z0 := @parameter1: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>(r0, z0);

     label1:
        return;
    }

    public static boolean isAutoMirrored(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        $z0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)>(r0);

        return $z0;

     label1:
        return 0;
    }

    public static void setHotspot(android.graphics.drawable.Drawable, float, float)
    {
        android.graphics.drawable.Drawable r0;
        float f0, f1;
        int $i0;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)>(r0, f0, f1);

     label1:
        return;
    }

    public static void setHotspotBounds(android.graphics.drawable.Drawable, int, int, int, int)
    {
        android.graphics.drawable.Drawable r0;
        int i0, i1, i2, i3, $i4;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 21 goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>(r0, i0, i1, i2, i3);

     label1:
        return;
    }

    public static void setTint(android.graphics.drawable.Drawable, int)
    {
        android.graphics.drawable.Drawable r0;
        int i0, $i1;
        boolean $z0;
        androidx.core.graphics.drawable.TintAwareDrawable $r1;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)>(r0, i0);

        goto label2;

     label1:
        $z0 = r0 instanceof androidx.core.graphics.drawable.TintAwareDrawable;

        if $z0 == 0 goto label2;

        $r1 = (androidx.core.graphics.drawable.TintAwareDrawable) r0;

        interfaceinvoke $r1.<androidx.core.graphics.drawable.TintAwareDrawable: void setTint(int)>(i0);

     label2:
        return;
    }

    public static void setTintList(android.graphics.drawable.Drawable, android.content.res.ColorStateList)
    {
        android.graphics.drawable.Drawable r0;
        android.content.res.ColorStateList r1;
        int $i0;
        boolean $z0;
        androidx.core.graphics.drawable.TintAwareDrawable $r2;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        r1 := @parameter1: android.content.res.ColorStateList;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>(r0, r1);

        goto label2;

     label1:
        $z0 = r0 instanceof androidx.core.graphics.drawable.TintAwareDrawable;

        if $z0 == 0 goto label2;

        $r2 = (androidx.core.graphics.drawable.TintAwareDrawable) r0;

        interfaceinvoke $r2.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintList(android.content.res.ColorStateList)>(r1);

     label2:
        return;
    }

    public static void setTintMode(android.graphics.drawable.Drawable, android.graphics.PorterDuff$Mode)
    {
        android.graphics.drawable.Drawable r0;
        android.graphics.PorterDuff$Mode r1;
        int $i0;
        boolean $z0;
        androidx.core.graphics.drawable.TintAwareDrawable $r2;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>(r0, r1);

        goto label2;

     label1:
        $z0 = r0 instanceof androidx.core.graphics.drawable.TintAwareDrawable;

        if $z0 == 0 goto label2;

        $r2 = (androidx.core.graphics.drawable.TintAwareDrawable) r0;

        interfaceinvoke $r2.<androidx.core.graphics.drawable.TintAwareDrawable: void setTintMode(android.graphics.PorterDuff$Mode)>(r1);

     label2:
        return;
    }

    public static int getAlpha(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        int $i0, $i1;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        $i1 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)>(r0);

        return $i1;

     label1:
        return 0;
    }

    public static void applyTheme(android.graphics.drawable.Drawable, android.content.res.Resources$Theme)
    {
        android.graphics.drawable.Drawable r0;
        android.content.res.Resources$Theme r1;
        int $i0;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        r1 := @parameter1: android.content.res.Resources$Theme;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)>(r0, r1);

     label1:
        return;
    }

    public static boolean canApplyTheme(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $z0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)>(r0);

        return $z0;

     label1:
        return 0;
    }

    public static android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        int $i0;
        android.graphics.ColorFilter $r1;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r1 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)>(r0);

        return $r1;

     label1:
        return null;
    }

    public static void clearColorFilter(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0, r3, $r6, $r8;
        android.graphics.drawable.DrawableContainer r1;
        android.graphics.drawable.DrawableContainer$DrawableContainerState r2;
        int i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2;
        android.graphics.drawable.Drawable$ConstantState $r4;
        androidx.core.graphics.drawable.WrappedDrawable $r5;
        android.graphics.drawable.InsetDrawable $r7;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        goto label8;

     label1:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label7;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        $z0 = r0 instanceof android.graphics.drawable.InsetDrawable;

        if $z0 == 0 goto label2;

        $r7 = (android.graphics.drawable.InsetDrawable) r0;

        $r8 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)>($r7);

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>($r8);

        goto label8;

     label2:
        $z1 = r0 instanceof androidx.core.graphics.drawable.WrappedDrawable;

        if $z1 == 0 goto label3;

        $r5 = (androidx.core.graphics.drawable.WrappedDrawable) r0;

        $r6 = interfaceinvoke $r5.<androidx.core.graphics.drawable.WrappedDrawable: android.graphics.drawable.Drawable getWrappedDrawable()>();

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>($r6);

        goto label8;

     label3:
        $z2 = r0 instanceof android.graphics.drawable.DrawableContainer;

        if $z2 == 0 goto label8;

        r1 = (android.graphics.drawable.DrawableContainer) r0;

        $r4 = virtualinvoke r1.<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        r2 = (android.graphics.drawable.DrawableContainer$DrawableContainerState) $r4;

        if r2 == null goto label6;

        i3 = 0;

        i0 = virtualinvoke r2.<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>();

     label4:
        if i3 >= i0 goto label6;

        r3 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)>(r2, i3);

        if r3 == null goto label5;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>(r3);

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        goto label8;

     label7:
        virtualinvoke r0.<android.graphics.drawable.Drawable: void clearColorFilter()>();

     label8:
        return;
    }

    public static void inflate(android.graphics.drawable.Drawable, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.Drawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.Resources$Theme r4;
        int $i0;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        r1 := @parameter1: android.content.res.Resources;

        r2 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter3: android.util.AttributeSet;

        r4 := @parameter4: android.content.res.Resources$Theme;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>(r0, r1, r2, r3, r4);

        goto label2;

     label1:
        virtualinvoke r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r1, r2, r3);

     label2:
        return;
    }

    public static android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        int $i0, $i1;
        boolean $z0, $z1;
        androidx.core.graphics.drawable.WrappedDrawableApi14 $r1;
        androidx.core.graphics.drawable.WrappedDrawableApi21 $r2;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        return r0;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label3;

        $z1 = r0 instanceof androidx.core.graphics.drawable.TintAwareDrawable;

        if $z1 != 0 goto label2;

        $r2 = new androidx.core.graphics.drawable.WrappedDrawableApi21;

        specialinvoke $r2.<androidx.core.graphics.drawable.WrappedDrawableApi21: void <init>(android.graphics.drawable.Drawable)>(r0);

        return $r2;

     label2:
        return r0;

     label3:
        $z0 = r0 instanceof androidx.core.graphics.drawable.TintAwareDrawable;

        if $z0 != 0 goto label4;

        $r1 = new androidx.core.graphics.drawable.WrappedDrawableApi14;

        specialinvoke $r1.<androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(android.graphics.drawable.Drawable)>(r0);

        return $r1;

     label4:
        return r0;
    }

    public static android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0, $r2;
        boolean $z0;
        androidx.core.graphics.drawable.WrappedDrawable $r1;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = r0 instanceof androidx.core.graphics.drawable.WrappedDrawable;

        if $z0 == 0 goto label1;

        $r1 = (androidx.core.graphics.drawable.WrappedDrawable) r0;

        $r2 = interfaceinvoke $r1.<androidx.core.graphics.drawable.WrappedDrawable: android.graphics.drawable.Drawable getWrappedDrawable()>();

        return $r2;

     label1:
        return r0;
    }

    public static boolean setLayoutDirection(android.graphics.drawable.Drawable, int)
    {
        android.graphics.drawable.Drawable r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.Object[] $r1;
        java.lang.reflect.Method $r2, $r8, $r9, $r13;
        java.lang.Integer $r3;
        java.lang.Class[] $r5;
        java.lang.Class $r6, $r7;
        java.lang.Throwable $r10, $r11, r12, r14;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label01;

        $z1 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>(r0, i0);

        return $z1;

     label01:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 17 goto label11;

        $z0 = <androidx.core.graphics.drawable.DrawableCompat: boolean sSetLayoutDirectionMethodFetched>;

        if $z0 != 0 goto label06;

     label02:
        $r7 = class "Landroid/graphics/drawable/Drawable;";

        $r5 = newarray (java.lang.Class)[1];

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5[0] = $r6;

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setLayoutDirection", $r5);

        <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod> = $r8;

        $r9 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod>;

        virtualinvoke $r9.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label03:
        goto label05;

     label04:
        $r10 := @caughtexception;

        r12 = $r10;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to retrieve setLayoutDirection(int) method", r12);

     label05:
        <androidx.core.graphics.drawable.DrawableCompat: boolean sSetLayoutDirectionMethodFetched> = 1;

     label06:
        $r13 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod>;

        if $r13 == null goto label10;

     label07:
        $r2 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod>;

        $r1 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r3;

        virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r1);

     label08:
        return 1;

     label09:
        $r11 := @caughtexception;

        r14 = $r11;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to invoke setLayoutDirection(int) via reflection", r14);

        <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod> = null;

     label10:
        return 0;

     label11:
        return 0;

        catch java.lang.NoSuchMethodException from label02 to label03 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public static int getLayoutDirection(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.reflect.Method $r2, $r7, $r8, $r12;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        java.lang.Class[] $r5;
        java.lang.Class $r6;
        java.lang.Throwable $r9, $r10, r11, r13;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label01;

        $i3 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)>(r0);

        return $i3;

     label01:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label11;

        $z0 = <androidx.core.graphics.drawable.DrawableCompat: boolean sGetLayoutDirectionMethodFetched>;

        if $z0 != 0 goto label06;

     label02:
        $r6 = class "Landroid/graphics/drawable/Drawable;";

        $r5 = newarray (java.lang.Class)[0];

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getLayoutDirection", $r5);

        <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod> = $r7;

        $r8 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod>;

        virtualinvoke $r8.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label03:
        goto label05;

     label04:
        $r9 := @caughtexception;

        r11 = $r9;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to retrieve getLayoutDirection() method", r11);

     label05:
        <androidx.core.graphics.drawable.DrawableCompat: boolean sGetLayoutDirectionMethodFetched> = 1;

     label06:
        $r12 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod>;

        if $r12 == null goto label10;

     label07:
        $r2 = <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod>;

        $r1 = newarray (java.lang.Object)[0];

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r1);

        $r4 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

     label08:
        return $i2;

     label09:
        $r10 := @caughtexception;

        r13 = $r10;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("DrawableCompat", "Failed to invoke getLayoutDirection() via reflection", r13);

        <androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod> = null;

     label10:
        return 0;

     label11:
        return 0;

        catch java.lang.NoSuchMethodException from label02 to label03 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private void <init>()
    {
        androidx.core.graphics.drawable.DrawableCompat r0;

        r0 := @this: androidx.core.graphics.drawable.DrawableCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

