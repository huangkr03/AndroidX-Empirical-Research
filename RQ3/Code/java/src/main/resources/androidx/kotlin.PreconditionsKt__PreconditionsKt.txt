kotlin.PreconditionsKt__PreconditionsKt
    public void <init>()
    {
        kotlin.PreconditionsKt__PreconditionsKt $r0;

        $r0 := @this: kotlin.PreconditionsKt__PreconditionsKt;

        specialinvoke $r0.<kotlin.PreconditionsKt__AssertionsJVMKt: void <init>()>();

        return;
    }

    private static final void check(boolean)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r0 = "Check failed.";

        $r0 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r1;
    }

    private static final void check(boolean, kotlin.jvm.functions.Function0)
    {
        boolean $z0;
        kotlin.jvm.functions.Function0 $r0;
        java.lang.Object $r1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "lazyMessage");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = interfaceinvoke $r0.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r2;
    }

    private static final java.lang.Object checkNotNull(java.lang.Object)
    {
        java.lang.String $r0;
        java.lang.Object $r1;
        java.lang.IllegalStateException $r2;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r0 = "Required value was null.";

        $r0 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    private static final java.lang.Object checkNotNull(java.lang.Object, kotlin.jvm.functions.Function0)
    {
        java.lang.Object $r0;
        kotlin.jvm.functions.Function0 $r1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "lazyMessage");

        if $r0 == null goto label1;

        return $r0;

     label1:
        $r0 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r2;
    }

    private static final java.lang.Void error(java.lang.Object)
    {
        java.lang.String $r0;
        java.lang.Object $r1;
        java.lang.IllegalStateException $r2;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "message");

        $r2 = new java.lang.IllegalStateException;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    private static final void require(boolean)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r0 = "Failed requirement.";

        $r0 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r1;
    }

    private static final void require(boolean, kotlin.jvm.functions.Function0)
    {
        boolean $z0;
        kotlin.jvm.functions.Function0 $r0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "lazyMessage");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = interfaceinvoke $r0.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;
    }

    private static final java.lang.Object requireNotNull(java.lang.Object)
    {
        java.lang.String $r0;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r2;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r0 = "Required value was null.";

        $r0 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r2;
    }

    private static final java.lang.Object requireNotNull(java.lang.Object, kotlin.jvm.functions.Function0)
    {
        java.lang.Object $r0;
        kotlin.jvm.functions.Function0 $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "lazyMessage");

        if $r0 == null goto label1;

        return $r0;

     label1:
        $r0 = interfaceinvoke $r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;
    }

