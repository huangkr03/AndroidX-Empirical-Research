androidx.room.compiler.processing.javac.JavacProcessingEnv
<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacProcessingEnv$Companion Companion>
<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment delegate>
<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.XProcessingEnvConfig config>
<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.XProcessingEnv$Backend backend>
<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Elements elementUtils>
<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types typeUtils>
<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.XTypeElementStore typeElementStore>
<androidx.room.compiler.processing.javac.JavacProcessingEnv: kotlin.Lazy messager$delegate>
<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacFiler filer>
<androidx.room.compiler.processing.javac.JavacProcessingEnv: int jvmVersion>
<androidx.room.compiler.processing.javac.JavacProcessingEnv: java.util.Map PRIMITIVE_TYPES>
    public void <init>(javax.'annotation'.processing.ProcessingEnvironment, androidx.room.compiler.processing.XProcessingEnvConfig)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        javax.'annotation'.processing.ProcessingEnvironment r1, $r4, $r6, $r19, $r22, $r30;
        androidx.room.compiler.processing.XProcessingEnvConfig r2;
        androidx.room.compiler.processing.XProcessingEnv$Backend $r3;
        javax.lang.model.util.Elements $r5;
        javax.lang.model.util.Types $r7;
        androidx.room.compiler.processing.javac.XTypeElementStore $r8;
        androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1 $r9;
        androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2 $r10;
        androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3 $r11;
        kotlin.jvm.functions.Function1 $r12, $r13, $r14;
        androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2 $r15;
        kotlin.jvm.functions.Function0 $r16;
        kotlin.Lazy $r17;
        androidx.room.compiler.processing.javac.JavacFiler $r18;
        androidx.room.compiler.processing.XProcessingEnv $r20;
        javax.'annotation'.processing.Filer $r21;
        javax.lang.model.SourceVersion $r23, $r31;
        java.lang.String $r24, $r25, $r33, $r34;
        java.lang.Integer $r26;
        java.lang.IllegalStateException $r27;
        java.lang.StringBuilder $r28, $r29, $r32;
        int $i0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;

        r2 := @parameter1: androidx.room.compiler.processing.XProcessingEnvConfig;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "delegate");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "config");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment delegate> = r1;

        r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.XProcessingEnvConfig config> = r2;

        $r3 = <androidx.room.compiler.processing.XProcessingEnv$Backend: androidx.room.compiler.processing.XProcessingEnv$Backend JAVAC>;

        r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.XProcessingEnv$Backend backend> = $r3;

        $r4 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment delegate>;

        $r5 = interfaceinvoke $r4.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "delegate.elementUtils");

        r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Elements elementUtils> = $r5;

        $r6 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment delegate>;

        $r7 = interfaceinvoke $r6.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Types getTypeUtils()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "delegate.typeUtils");

        r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types typeUtils> = $r7;

        $r8 = new androidx.room.compiler.processing.javac.XTypeElementStore;

        $r9 = new androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1;

        specialinvoke $r9.<androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r0);

        $r12 = (kotlin.jvm.functions.Function1) $r9;

        $r10 = <androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2: androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2 INSTANCE>;

        $r13 = (kotlin.jvm.functions.Function1) $r10;

        $r11 = new androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3;

        specialinvoke $r11.<androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r0);

        $r14 = (kotlin.jvm.functions.Function1) $r11;

        specialinvoke $r8.<androidx.room.compiler.processing.javac.XTypeElementStore: void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>($r12, $r13, $r14);

        r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.XTypeElementStore typeElementStore> = $r8;

        $r15 = new androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2;

        specialinvoke $r15.<androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv)>(r0);

        $r16 = (kotlin.jvm.functions.Function0) $r15;

        $r17 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r16);

        r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: kotlin.Lazy messager$delegate> = $r17;

        $r18 = new androidx.room.compiler.processing.javac.JavacFiler;

        $r20 = (androidx.room.compiler.processing.XProcessingEnv) r0;

        $r19 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment delegate>;

        $r21 = interfaceinvoke $r19.<javax.'annotation'.processing.ProcessingEnvironment: javax.'annotation'.processing.Filer getFiler()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r21, "delegate.filer");

        specialinvoke $r18.<androidx.room.compiler.processing.javac.JavacFiler: void <init>(androidx.room.compiler.processing.XProcessingEnv,javax.'annotation'.processing.Filer)>($r20, $r21);

        r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacFiler filer> = $r18;

        $r22 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment delegate>;

        $r23 = interfaceinvoke $r22.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.SourceVersion getSourceVersion()>();

        $r24 = virtualinvoke $r23.<javax.lang.model.SourceVersion: java.lang.String name()>();

        $r25 = staticinvoke <kotlin.text.StringsKt: java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>($r24, "RELEASE_", null, 2, null);

        $r26 = staticinvoke <kotlin.text.StringsKt: java.lang.Integer toIntOrNull(java.lang.String)>($r25);

        if $r26 == null goto label1;

        $i0 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $r27 = new java.lang.IllegalStateException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid source version: ");

        $r30 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment delegate>;

        $r31 = interfaceinvoke $r30.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.SourceVersion getSourceVersion()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = virtualinvoke $r33.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r34);

        throw $r27;

     label2:
        r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: int jvmVersion> = $i0;

        return;
    }

    public final javax.'annotation'.processing.ProcessingEnvironment getDelegate()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        javax.'annotation'.processing.ProcessingEnvironment $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment delegate>;

        return $r1;
    }

    public androidx.room.compiler.processing.XProcessingEnvConfig getConfig()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        androidx.room.compiler.processing.XProcessingEnvConfig $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.XProcessingEnvConfig config>;

        return $r1;
    }

    public androidx.room.compiler.processing.XProcessingEnv$Backend getBackend()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        androidx.room.compiler.processing.XProcessingEnv$Backend $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.XProcessingEnv$Backend backend>;

        return $r1;
    }

    public final javax.lang.model.util.Elements getElementUtils()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        javax.lang.model.util.Elements $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Elements elementUtils>;

        return $r1;
    }

    public final javax.lang.model.util.Types getTypeUtils()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        javax.lang.model.util.Types $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types typeUtils>;

        return $r1;
    }

    public androidx.room.compiler.processing.XMessager getMessager()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        kotlin.Lazy r1;
        java.lang.Object $r2;
        androidx.room.compiler.processing.XMessager $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: kotlin.Lazy messager$delegate>;

        $r2 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r3 = (androidx.room.compiler.processing.XMessager) $r2;

        return $r3;
    }

    public androidx.room.compiler.processing.javac.JavacFiler getFiler()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        androidx.room.compiler.processing.javac.JavacFiler $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacFiler filer>;

        return $r1;
    }

    public java.util.Map getOptions()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        javax.'annotation'.processing.ProcessingEnvironment $r1;
        java.util.Map $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment delegate>;

        $r2 = interfaceinvoke $r1.<javax.'annotation'.processing.ProcessingEnvironment: java.util.Map getOptions()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "delegate.options");

        return $r2;
    }

    public int getJvmVersion()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        int $i0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        $i0 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: int jvmVersion>;

        return $i0;
    }

    public androidx.room.compiler.processing.javac.JavacTypeElement findTypeElement(java.lang.String)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        java.lang.String r1;
        androidx.room.compiler.processing.javac.XTypeElementStore $r2;
        androidx.room.compiler.processing.XTypeElement $r3;
        androidx.room.compiler.processing.javac.JavacTypeElement $r4;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "qName");

        $r2 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.XTypeElementStore typeElementStore>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.javac.XTypeElementStore: androidx.room.compiler.processing.XTypeElement get(java.lang.String)>(r1);

        $r4 = (androidx.room.compiler.processing.javac.JavacTypeElement) $r3;

        return $r4;
    }

    public java.util.List getTypeElementsFromPackage(java.lang.String)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        java.lang.String r1;
        javax.lang.model.element.PackageElement r2, $r15;
        javax.lang.model.element.TypeElement r3;
        java.util.Collection r4, r17, r21;
        javax.'annotation'.processing.ProcessingEnvironment $r5;
        javax.lang.model.util.Elements $r6;
        java.lang.CharSequence $r7;
        java.util.List $r8, $r10, $r12, $r14;
        java.util.ArrayList $r9, $r11;
        int $i0;
        boolean $z1, $z3, $z7;
        androidx.room.compiler.processing.javac.JavacTypeElement $r13;
        java.lang.Iterable $r16, $r20;
        java.util.Iterator r18, r22;
        java.lang.Object r19, r23;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "packageName");

        $r5 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment delegate>;

        $r6 = interfaceinvoke $r5.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        $r7 = (java.lang.CharSequence) r1;

        $r15 = interfaceinvoke $r6.<javax.lang.model.util.Elements: javax.lang.model.element.PackageElement getPackageElement(java.lang.CharSequence)>($r7);

        if $r15 != null goto label1;

        $r14 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r14;

     label1:
        r2 = $r15;

        $r8 = interfaceinvoke r2.<javax.lang.model.element.PackageElement: java.util.List getEnclosedElements()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "packageElement.enclosedElements");

        $r16 = (java.lang.Iterable) $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r17 = (java.util.Collection) $r9;

        r18 = interfaceinvoke $r16.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z7 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label3;

        r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        $z3 = r19 instanceof javax.lang.model.element.TypeElement;

        if $z3 == 0 goto label2;

        interfaceinvoke r17.<java.util.Collection: boolean add(java.lang.Object)>(r19);

        goto label2;

     label3:
        $r10 = (java.util.List) r17;

        $r20 = (java.lang.Iterable) $r10;

        $r11 = new java.util.ArrayList;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r20, 10);

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i0);

        r21 = (java.util.Collection) $r11;

        r22 = interfaceinvoke $r20.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r3 = (javax.lang.model.element.TypeElement) r23;

        r4 = r21;

        $r13 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacTypeElement wrapTypeElement(javax.lang.model.element.TypeElement)>(r3);

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r13);

        goto label4;

     label5:
        $r12 = (java.util.List) r21;

        return $r12;
    }

    public androidx.room.compiler.processing.XType findType(java.lang.String)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0, r3;
        java.lang.String r1;
        javax.lang.model.type.TypeKind r2, $r8, $r13;
        javax.lang.model.type.TypeMirror r4;
        androidx.room.compiler.processing.XNullability r5;
        java.util.Map $r6;
        java.lang.Object $r7;
        androidx.room.compiler.processing.javac.JavacTypeElement $r9;
        javax.lang.model.util.Types $r11;
        javax.lang.model.type.PrimitiveType $r12;
        int[] $r14;
        int $i0, $i1;
        javax.lang.model.type.DeclaredType $r15, $r16;
        javax.lang.model.type.ArrayType $r17, $r18;
        androidx.room.compiler.processing.javac.JavacArrayType $r19;
        androidx.room.compiler.processing.javac.JavacType $r20;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r21, $r24;
        androidx.room.compiler.processing.javac.DefaultJavacType $r22;
        androidx.room.compiler.processing.XType $r23;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "qName");

        $r6 = <androidx.room.compiler.processing.javac.JavacProcessingEnv: java.util.Map PRIMITIVE_TYPES>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = (javax.lang.model.type.TypeKind) $r7;

        if $r8 == null goto label13;

        r2 = $r8;

        r3 = r0;

        $r11 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types typeUtils>;

        $r12 = interfaceinvoke $r11.<javax.lang.model.util.Types: javax.lang.model.type.PrimitiveType getPrimitiveType(javax.lang.model.type.TypeKind)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "typeUtils.getPrimitiveType(it)");

        r4 = (javax.lang.model.type.TypeMirror) $r12;

        r5 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability NONNULL>;

        $r13 = interfaceinvoke r4.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        if $r13 != null goto label01;

        $i1 = -1;

        goto label02;

     label01:
        $r14 = <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r13.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i1 = $r14[$i0];

     label02:
        tableswitch($i1)
        {
            case 1: goto label03;
            case 2: goto label06;
            default: goto label09;
        };

     label03:
        if r5 == null goto label04;

        $r19 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r18 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "asArray(typeMirror)");

        specialinvoke $r19.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.XNullability,androidx.room.compiler.processing.XNullability)>(r3, $r18, r5, null);

        goto label05;

     label04:
        $r19 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r17 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "asArray(typeMirror)");

        specialinvoke $r19.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType)>(r3, $r17);

     label05:
        $r20 = (androidx.room.compiler.processing.javac.JavacType) $r19;

        goto label12;

     label06:
        if r5 == null goto label07;

        $r21 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r16 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r16, "asDeclared(typeMirror)");

        specialinvoke $r21.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.XNullability)>(r3, $r16, r5);

        goto label08;

     label07:
        $r21 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r15 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "asDeclared(typeMirror)");

        specialinvoke $r21.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType)>(r3, $r15);

     label08:
        $r20 = (androidx.room.compiler.processing.javac.JavacType) $r21;

        goto label12;

     label09:
        if r5 == null goto label10;

        $r22 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r22.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.XNullability)>(r3, r4, r5);

        goto label11;

     label10:
        $r22 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r22.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror)>(r3, r4);

     label11:
        $r20 = (androidx.room.compiler.processing.javac.JavacType) $r22;

     label12:
        $r23 = (androidx.room.compiler.processing.XType) $r20;

        return $r23;

     label13:
        $r9 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacTypeElement findTypeElement(java.lang.String)>(r1);

        if $r9 == null goto label14;

        $r24 = virtualinvoke $r9.<androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacDeclaredType getType()>();

        return $r24;

     label14:
        return null;
    }

    public androidx.room.compiler.processing.XTypeElement findGeneratedAnnotation()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        java.util.Optional r1;
        javax.'annotation'.processing.ProcessingEnvironment $r2;
        javax.lang.model.util.Elements $r3;
        javax.lang.model.SourceVersion $r4;
        boolean $z0;
        java.lang.Object $r5;
        javax.lang.model.element.TypeElement $r6;
        androidx.room.compiler.processing.javac.JavacTypeElement $r7;
        androidx.room.compiler.processing.XTypeElement $r8;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        $r3 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Elements elementUtils>;

        $r2 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment delegate>;

        $r4 = interfaceinvoke $r2.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.SourceVersion getSourceVersion()>();

        r1 = staticinvoke <com.google.auto.common.GeneratedAnnotations: java.util.Optional generatedAnnotation(javax.lang.model.util.Elements,javax.lang.model.SourceVersion)>($r3, $r4);

        $z0 = virtualinvoke r1.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r1.<java.util.Optional: java.lang.Object get()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "element.get()");

        $r6 = (javax.lang.model.element.TypeElement) $r5;

        $r7 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacTypeElement wrapTypeElement(javax.lang.model.element.TypeElement)>($r6);

        $r8 = (androidx.room.compiler.processing.XTypeElement) $r7;

        goto label2;

     label1:
        $r8 = (androidx.room.compiler.processing.XTypeElement) null;

     label2:
        return $r8;
    }

    public androidx.room.compiler.processing.javac.JavacArrayType getArrayType(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        androidx.room.compiler.processing.XType r1;
        boolean $z0;
        androidx.room.compiler.processing.javac.JavacArrayType $r2;
        androidx.room.compiler.processing.javac.JavacType $r3;
        javax.lang.model.util.Types $r4;
        javax.lang.model.type.TypeMirror $r5;
        javax.lang.model.type.ArrayType $r6;
        androidx.room.compiler.processing.XNullability $r7, $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        java.lang.IllegalStateException $r13;
        java.lang.String $r14, $r15;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacType;

        if $z0 != 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("given type must be from java, ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.IllegalStateException;

        $r14 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label1:
        $r2 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r4 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types typeUtils>;

        $r3 = (androidx.room.compiler.processing.javac.JavacType) r1;

        $r5 = virtualinvoke $r3.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        $r6 = interfaceinvoke $r4.<javax.lang.model.util.Types: javax.lang.model.type.ArrayType getArrayType(javax.lang.model.type.TypeMirror)>($r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "typeUtils.getArrayType(type.typeMirror)");

        $r7 = <androidx.room.compiler.processing.XNullability: androidx.room.compiler.processing.XNullability UNKNOWN>;

        $r8 = interfaceinvoke r1.<androidx.room.compiler.processing.XType: androidx.room.compiler.processing.XNullability getNullability()>();

        specialinvoke $r2.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.XNullability,androidx.room.compiler.processing.XNullability)>(r0, $r6, $r7, $r8);

        return $r2;
    }

    public transient androidx.room.compiler.processing.javac.JavacType getDeclaredType(androidx.room.compiler.processing.XTypeElement, androidx.room.compiler.processing.XType[])
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        androidx.room.compiler.processing.XTypeElement r1;
        androidx.room.compiler.processing.XType[] r2;
        javax.lang.model.type.TypeMirror[] r3, $r10, $r16;
        androidx.room.compiler.processing.XType r4, r5, r41;
        java.lang.String r6, $r28, $r32, $r34, $r35, $r42;
        java.util.Collection r7, r38, $r39;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r8;
        int $i0, $i1, $i2, i3, $i4, $i5, i6, $i7;
        java.util.List $r9;
        java.lang.Object[] $r11, $r15;
        androidx.room.compiler.processing.javac.JavacTypeElement $r12, $r18;
        javax.lang.model.util.Types $r13;
        javax.lang.model.element.TypeElement $r14, $r19;
        javax.lang.model.type.DeclaredType $r17, $r23, $r24;
        javax.lang.model.element.Element $r20;
        javax.lang.model.type.TypeKind $r21;
        int[] $r22;
        javax.lang.model.type.ArrayType $r25, $r26;
        java.lang.IllegalStateException $r27, $r31, $r33;
        androidx.room.compiler.processing.javac.JavacType $r29, $r47, $r51;
        javax.lang.model.type.TypeMirror $r30, $r44;
        androidx.room.compiler.processing.XNullability r45;
        androidx.room.compiler.processing.javac.JavacArrayType $r46;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r48, $r50;
        androidx.room.compiler.processing.javac.DefaultJavacType $r49;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: androidx.room.compiler.processing.XTypeElement;

        r2 := @parameter1: androidx.room.compiler.processing.XType[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "types");

        $z0 = r1 instanceof androidx.room.compiler.processing.javac.JavacTypeElement;

        if $z0 != 0 goto label01;

        $r35 = "Check failed.";

        $r33 = new java.lang.IllegalStateException;

        $r34 = virtualinvoke $r35.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r34);

        throw $r33;

     label01:
        $r8 = new java.util.ArrayList;

        $i0 = lengthof r2;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r38 = (java.util.Collection) $r8;

        i3 = 0;

        $i4 = lengthof r2;

     label02:
        if i3 >= $i4 goto label04;

        r4 = r2[i3];

        r5 = r4;

        r7 = r38;

        $z2 = r5 instanceof androidx.room.compiler.processing.javac.JavacType;

        if $z2 != 0 goto label03;

        r6 = "Check failed.";

        $r31 = new java.lang.IllegalStateException;

        $r32 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r32);

        throw $r31;

     label03:
        $r29 = (androidx.room.compiler.processing.javac.JavacType) r5;

        $r30 = virtualinvoke $r29.<androidx.room.compiler.processing.javac.JavacType: javax.lang.model.type.TypeMirror getTypeMirror()>();

        interfaceinvoke r7.<java.util.Collection: boolean add(java.lang.Object)>($r30);

        i3 = i3 + 1;

        goto label02;

     label04:
        $r9 = (java.util.List) r38;

        $r39 = (java.util.Collection) $r9;

        $r10 = newarray (javax.lang.model.type.TypeMirror)[0];

        $r11 = interfaceinvoke $r39.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r11, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");

        r3 = (javax.lang.model.type.TypeMirror[]) $r11;

        $i5 = 0;

        i6 = lengthof r2;

     label05:
        if $i5 >= i6 goto label07;

        r41 = r2[$i5];

        $z1 = r41 instanceof androidx.room.compiler.processing.javac.JavacType;

        if $z1 != 0 goto label06;

        $z3 = 0;

        goto label08;

     label06:
        $i5 = $i5 + 1;

        goto label05;

     label07:
        $z3 = 1;

     label08:
        if $z3 != 0 goto label09;

        $r42 = "Check failed.";

        $r27 = new java.lang.IllegalStateException;

        $r28 = virtualinvoke $r42.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label09:
        $r13 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.lang.model.util.Types typeUtils>;

        $r12 = (androidx.room.compiler.processing.javac.JavacTypeElement) r1;

        $r14 = virtualinvoke $r12.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $i1 = lengthof r3;

        $r15 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r3, $i1);

        $r16 = (javax.lang.model.type.TypeMirror[]) $r15;

        $r17 = interfaceinvoke $r13.<javax.lang.model.util.Types: javax.lang.model.type.DeclaredType getDeclaredType(javax.lang.model.element.TypeElement,javax.lang.model.type.TypeMirror[])>($r14, $r16);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "typeUtils.getDeclaredType(type.element, *args)");

        $r44 = (javax.lang.model.type.TypeMirror) $r17;

        $r18 = (androidx.room.compiler.processing.javac.JavacTypeElement) r1;

        $r19 = virtualinvoke $r18.<androidx.room.compiler.processing.javac.JavacTypeElement: javax.lang.model.element.TypeElement getElement()>();

        $r20 = (javax.lang.model.element.Element) $r19;

        r45 = staticinvoke <androidx.room.compiler.processing.javac.ElementExtKt: androidx.room.compiler.processing.XNullability getNullability(javax.lang.model.element.Element)>($r20);

        $r21 = interfaceinvoke $r44.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        if $r21 != null goto label10;

        $i7 = -1;

        goto label11;

     label10:
        $r22 = <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i2 = virtualinvoke $r21.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i7 = $r22[$i2];

     label11:
        tableswitch($i7)
        {
            case 1: goto label12;
            case 2: goto label15;
            default: goto label18;
        };

     label12:
        if r45 == null goto label13;

        $r46 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r26 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>($r44);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r26, "asArray(typeMirror)");

        specialinvoke $r46.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.XNullability,androidx.room.compiler.processing.XNullability)>(r0, $r26, r45, null);

        goto label14;

     label13:
        $r46 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r25 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>($r44);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r25, "asArray(typeMirror)");

        specialinvoke $r46.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType)>(r0, $r25);

     label14:
        $r47 = (androidx.room.compiler.processing.javac.JavacType) $r46;

        goto label21;

     label15:
        if r45 == null goto label16;

        $r48 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r24 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>($r44);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r24, "asDeclared(typeMirror)");

        specialinvoke $r48.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.XNullability)>(r0, $r24, r45);

        goto label17;

     label16:
        $r48 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r23 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>($r44);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "asDeclared(typeMirror)");

        specialinvoke $r48.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType)>(r0, $r23);

     label17:
        $r47 = (androidx.room.compiler.processing.javac.JavacType) $r48;

        goto label21;

     label18:
        if r45 == null goto label19;

        $r49 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r49.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.XNullability)>(r0, $r44, r45);

        goto label20;

     label19:
        $r49 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r49.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror)>(r0, $r44);

     label20:
        $r47 = (androidx.room.compiler.processing.javac.JavacType) $r49;

     label21:
        $r50 = (androidx.room.compiler.processing.javac.JavacDeclaredType) $r47;

        $r51 = (androidx.room.compiler.processing.javac.JavacType) $r50;

        return $r51;
    }

    public final androidx.room.compiler.processing.javac.JavacTypeElement wrapTypeElement(javax.lang.model.element.TypeElement)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        javax.lang.model.element.TypeElement r1;
        androidx.room.compiler.processing.javac.XTypeElementStore $r2;
        androidx.room.compiler.processing.XTypeElement $r3;
        androidx.room.compiler.processing.javac.JavacTypeElement $r4;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: javax.lang.model.element.TypeElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        $r2 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.XTypeElementStore typeElementStore>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.javac.XTypeElementStore: androidx.room.compiler.processing.XTypeElement get(java.lang.Object)>(r1);

        $r4 = (androidx.room.compiler.processing.javac.JavacTypeElement) $r3;

        return $r4;
    }

    public final androidx.room.compiler.processing.javac.JavacType wrap(javax.lang.model.type.TypeMirror, androidx.room.compiler.processing.javac.kotlin.KmType, androidx.room.compiler.processing.XNullability)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        javax.lang.model.type.TypeMirror r1;
        androidx.room.compiler.processing.javac.kotlin.KmType r2;
        androidx.room.compiler.processing.XNullability r3;
        javax.lang.model.type.TypeKind $r4;
        int[] $r5;
        int $i0, $i1;
        javax.lang.model.type.DeclaredType $r6, $r7, $r8, $r9, $r11, $r12;
        androidx.room.compiler.processing.javac.JavacDeclaredType $r10, $r24;
        javax.lang.model.type.ArrayType $r13, $r14, $r15, $r16, $r18, $r19;
        androidx.room.compiler.processing.javac.JavacArrayType $r17, $r22;
        androidx.room.compiler.processing.javac.JavacType $r20, $r23, $r28;
        androidx.room.compiler.processing.javac.DefaultJavacType $r21, $r25;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: javax.lang.model.type.TypeMirror;

        r2 := @parameter1: androidx.room.compiler.processing.javac.kotlin.KmType;

        r3 := @parameter2: androidx.room.compiler.processing.XNullability;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "typeMirror");

        $r4 = interfaceinvoke r1.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();

        if $r4 != null goto label01;

        $i1 = -1;

        goto label02;

     label01:
        $r5 = <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r4.<javax.lang.model.type.TypeKind: int ordinal()>();

        $i1 = $r5[$i0];

     label02:
        tableswitch($i1)
        {
            case 1: goto label03;
            case 2: goto label07;
            default: goto label11;
        };

     label03:
        if r2 == null goto label04;

        $r17 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r22 = $r17;

        $r18 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r18, "asArray(typeMirror)");

        $r19 = (javax.lang.model.type.ArrayType) $r18;

        specialinvoke $r17.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r0, $r19, r2);

        goto label06;

     label04:
        if r3 == null goto label05;

        $r22 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r15 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "asArray(typeMirror)");

        $r16 = (javax.lang.model.type.ArrayType) $r15;

        specialinvoke $r22.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType,androidx.room.compiler.processing.XNullability,androidx.room.compiler.processing.XNullability)>(r0, $r16, r3, null);

        goto label06;

     label05:
        $r22 = new androidx.room.compiler.processing.javac.JavacArrayType;

        $r13 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.ArrayType asArray(javax.lang.model.type.TypeMirror)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "asArray(typeMirror)");

        $r14 = (javax.lang.model.type.ArrayType) $r13;

        specialinvoke $r22.<androidx.room.compiler.processing.javac.JavacArrayType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.ArrayType)>(r0, $r14);

     label06:
        $r23 = (androidx.room.compiler.processing.javac.JavacType) $r22;

        goto label15;

     label07:
        if r2 == null goto label08;

        $r10 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r24 = $r10;

        $r11 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r11, "asDeclared(typeMirror)");

        $r12 = (javax.lang.model.type.DeclaredType) $r11;

        specialinvoke $r10.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.javac.kotlin.KmType)>(r0, $r12, r2);

        goto label10;

     label08:
        if r3 == null goto label09;

        $r24 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r8 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "asDeclared(typeMirror)");

        $r9 = (javax.lang.model.type.DeclaredType) $r8;

        specialinvoke $r24.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType,androidx.room.compiler.processing.XNullability)>(r0, $r9, r3);

        goto label10;

     label09:
        $r24 = new androidx.room.compiler.processing.javac.JavacDeclaredType;

        $r6 = staticinvoke <com.google.auto.common.MoreTypes: javax.lang.model.type.DeclaredType asDeclared(javax.lang.model.type.TypeMirror)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "asDeclared(typeMirror)");

        $r7 = (javax.lang.model.type.DeclaredType) $r6;

        specialinvoke $r24.<androidx.room.compiler.processing.javac.JavacDeclaredType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.DeclaredType)>(r0, $r7);

     label10:
        $r23 = (androidx.room.compiler.processing.javac.JavacType) $r24;

        goto label15;

     label11:
        if r2 == null goto label12;

        $r21 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        $r25 = $r21;

        specialinvoke $r21.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.javac.kotlin.KmType)>(r0, r1, r2);

        goto label14;

     label12:
        if r3 == null goto label13;

        $r25 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r25.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror,androidx.room.compiler.processing.XNullability)>(r0, r1, r3);

        goto label14;

     label13:
        $r25 = new androidx.room.compiler.processing.javac.DefaultJavacType;

        specialinvoke $r25.<androidx.room.compiler.processing.javac.DefaultJavacType: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.type.TypeMirror)>(r0, r1);

     label14:
        $r20 = (androidx.room.compiler.processing.javac.JavacType) $r25;

        $r23 = $r20;

     label15:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(1, "T");

        $r28 = (androidx.room.compiler.processing.javac.JavacType) $r23;

        return $r28;
    }

    public final androidx.room.compiler.processing.XElement wrapAnnotatedElement$room_compiler_processing(javax.lang.model.element.Element, java.lang.String)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        javax.lang.model.element.Element r1, r3;
        java.lang.String r2, $r10, $r11, $r17, $r18;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalStateException $r4, $r12;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r13, $r14, $r15, $r16;
        javax.lang.model.element.ExecutableElement $r19;
        androidx.room.compiler.processing.javac.JavacExecutableElement $r20;
        javax.lang.model.element.TypeElement $r21;
        androidx.room.compiler.processing.javac.JavacTypeElement $r22;
        javax.lang.model.element.VariableElement $r23;
        androidx.room.compiler.processing.javac.JavacVariableElement $r24;
        androidx.room.compiler.processing.XElement $r25;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: javax.lang.model.element.Element;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "annotationName");

        r3 = r1;

        $z0 = r3 instanceof javax.lang.model.element.VariableElement;

        if $z0 == 0 goto label1;

        $r23 = (javax.lang.model.element.VariableElement) r1;

        $r24 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacVariableElement wrapVariableElement(javax.lang.model.element.VariableElement)>($r23);

        $r25 = (androidx.room.compiler.processing.XElement) $r24;

        goto label5;

     label1:
        $z1 = r3 instanceof javax.lang.model.element.TypeElement;

        if $z1 == 0 goto label2;

        $r21 = (javax.lang.model.element.TypeElement) r1;

        $r22 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacTypeElement wrapTypeElement(javax.lang.model.element.TypeElement)>($r21);

        $r25 = (androidx.room.compiler.processing.XElement) $r22;

        goto label5;

     label2:
        $z2 = r3 instanceof javax.lang.model.element.ExecutableElement;

        if $z2 == 0 goto label3;

        $r19 = (javax.lang.model.element.ExecutableElement) r1;

        $r20 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacExecutableElement wrapExecutableElement(javax.lang.model.element.ExecutableElement)>($r19);

        $r25 = (androidx.room.compiler.processing.XElement) $r20;

        goto label5;

     label3:
        $z3 = r3 instanceof javax.lang.model.element.PackageElement;

        if $z3 == 0 goto label4;

        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get elements with annotation ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Package elements are not supported by XProcessing.");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label4:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported element ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with annotation ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r4;

     label5:
        return $r25;
    }

    public final androidx.room.compiler.processing.javac.JavacExecutableElement wrapExecutableElement(javax.lang.model.element.ExecutableElement)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        javax.lang.model.element.ExecutableElement r1;
        javax.lang.model.element.ElementKind $r2, $r9;
        int[] $r3;
        int $i0, $i1;
        androidx.room.compiler.processing.javac.JavacMethodElement $r4;
        androidx.room.compiler.processing.javac.JavacConstructorElement $r5;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r13, $r14;
        androidx.room.compiler.processing.javac.JavacExecutableElement $r15;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: javax.lang.model.element.ExecutableElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        $r2 = interfaceinvoke r1.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.ElementKind getKind()>();

        if $r2 != null goto label1;

        $i1 = -1;

        goto label2;

     label1:
        $r3 = <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$1>;

        $i0 = virtualinvoke $r2.<javax.lang.model.element.ElementKind: int ordinal()>();

        $i1 = $r3[$i0];

     label2:
        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            default: goto label5;
        };

     label3:
        $r5 = new androidx.room.compiler.processing.javac.JavacConstructorElement;

        specialinvoke $r5.<androidx.room.compiler.processing.javac.JavacConstructorElement: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.element.ExecutableElement)>(r0, r1);

        $r15 = (androidx.room.compiler.processing.javac.JavacExecutableElement) $r5;

        goto label6;

     label4:
        $r4 = new androidx.room.compiler.processing.javac.JavacMethodElement;

        specialinvoke $r4.<androidx.room.compiler.processing.javac.JavacMethodElement: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.element.ExecutableElement)>(r0, r1);

        $r15 = (androidx.room.compiler.processing.javac.JavacExecutableElement) $r4;

        goto label6;

     label5:
        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported kind ");

        $r9 = interfaceinvoke r1.<javax.lang.model.element.ExecutableElement: javax.lang.model.element.ElementKind getKind()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of executable element ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r6;

     label6:
        return $r15;
    }

    public final androidx.room.compiler.processing.javac.JavacVariableElement wrapVariableElement(javax.lang.model.element.VariableElement)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        javax.lang.model.element.VariableElement r1, $r26;
        javax.lang.model.element.Element r2;
        androidx.room.compiler.processing.javac.JavacExecutableElement r3;
        java.lang.Iterable r4;
        java.util.Iterator r5;
        java.lang.Object r6, $r29;
        androidx.room.compiler.processing.javac.JavacMethodParameter r7, $r19;
        boolean $z1, $z2, $z3, $z4;
        java.lang.IllegalStateException $r8, $r20;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r21, $r22, $r23;
        java.lang.String $r14, $r15, $r24, $r25;
        androidx.room.compiler.processing.javac.JavacFieldElement $r16;
        javax.lang.model.element.ExecutableElement $r17;
        java.util.List $r18;
        javax.lang.model.element.Name $r27, $r28;
        androidx.room.compiler.processing.javac.JavacVariableElement $r30;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: javax.lang.model.element.VariableElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        r2 = interfaceinvoke r1.<javax.lang.model.element.VariableElement: javax.lang.model.element.Element getEnclosingElement()>();

        $z1 = r2 instanceof javax.lang.model.element.ExecutableElement;

        if $z1 == 0 goto label5;

        $r17 = (javax.lang.model.element.ExecutableElement) r2;

        r3 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacExecutableElement wrapExecutableElement(javax.lang.model.element.ExecutableElement)>($r17);

        $r18 = virtualinvoke r3.<androidx.room.compiler.processing.javac.JavacExecutableElement: java.util.List getParameters()>();

        r4 = (java.lang.Iterable) $r18;

        r5 = interfaceinvoke r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (androidx.room.compiler.processing.javac.JavacMethodParameter) r6;

        $r26 = virtualinvoke r7.<androidx.room.compiler.processing.javac.JavacMethodParameter: javax.lang.model.element.VariableElement getElement()>();

        $r27 = interfaceinvoke $r26.<javax.lang.model.element.VariableElement: javax.lang.model.element.Name getSimpleName()>();

        $r28 = interfaceinvoke r1.<javax.lang.model.element.VariableElement: javax.lang.model.element.Name getSimpleName()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r27, $r28);

        if $z4 == 0 goto label1;

        $r29 = r6;

        goto label3;

     label2:
        $r29 = null;

     label3:
        $r19 = (androidx.room.compiler.processing.javac.JavacMethodParameter) $r29;

        if $r19 != null goto label4;

        $r20 = new java.lang.IllegalStateException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create variable element for ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = virtualinvoke $r24.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label4:
        $r30 = (androidx.room.compiler.processing.javac.JavacVariableElement) $r19;

        goto label7;

     label5:
        $z2 = r2 instanceof javax.lang.model.element.TypeElement;

        if $z2 == 0 goto label6;

        $r16 = new androidx.room.compiler.processing.javac.JavacFieldElement;

        specialinvoke $r16.<androidx.room.compiler.processing.javac.JavacFieldElement: void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.element.VariableElement)>(r0, r1);

        $r30 = (androidx.room.compiler.processing.javac.JavacVariableElement) $r16;

        goto label7;

     label6:
        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported enclosing type ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r8;

     label7:
        return $r30;
    }

    public final void clearCache$room_compiler_processing()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        androidx.room.compiler.processing.javac.XTypeElementStore $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        $r1 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.XTypeElementStore typeElementStore>;

        virtualinvoke $r1.<androidx.room.compiler.processing.javac.XTypeElementStore: void clear$room_compiler_processing()>();

        return;
    }

    public volatile androidx.room.compiler.processing.XFiler getFiler()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        androidx.room.compiler.processing.javac.JavacFiler $r1;
        androidx.room.compiler.processing.XFiler $r2;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacFiler getFiler()>();

        $r2 = (androidx.room.compiler.processing.XFiler) $r1;

        return $r2;
    }

    public volatile androidx.room.compiler.processing.XTypeElement findTypeElement(java.lang.String)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        java.lang.String r1;
        androidx.room.compiler.processing.javac.JavacTypeElement $r2;
        androidx.room.compiler.processing.XTypeElement $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacTypeElement findTypeElement(java.lang.String)>(r1);

        $r3 = (androidx.room.compiler.processing.XTypeElement) $r2;

        return $r3;
    }

    public volatile androidx.room.compiler.processing.XArrayType getArrayType(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        androidx.room.compiler.processing.XType r1;
        androidx.room.compiler.processing.javac.JavacArrayType $r2;
        androidx.room.compiler.processing.XArrayType $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        $r2 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacArrayType getArrayType(androidx.room.compiler.processing.XType)>(r1);

        $r3 = (androidx.room.compiler.processing.XArrayType) $r2;

        return $r3;
    }

    public volatile androidx.room.compiler.processing.XType getDeclaredType(androidx.room.compiler.processing.XTypeElement, androidx.room.compiler.processing.XType[])
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv r0;
        androidx.room.compiler.processing.XTypeElement r1;
        androidx.room.compiler.processing.XType[] r2;
        androidx.room.compiler.processing.javac.JavacType $r3;
        androidx.room.compiler.processing.XType $r4;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r1 := @parameter0: androidx.room.compiler.processing.XTypeElement;

        r2 := @parameter1: androidx.room.compiler.processing.XType[];

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacType getDeclaredType(androidx.room.compiler.processing.XTypeElement,androidx.room.compiler.processing.XType[])>(r1, r2);

        $r4 = (androidx.room.compiler.processing.XType) $r3;

        return $r4;
    }

    public static final java.util.Map access$getPRIMITIVE_TYPES$cp()
    {
        java.util.Map $r0;

        $r0 = <androidx.room.compiler.processing.javac.JavacProcessingEnv: java.util.Map PRIMITIVE_TYPES>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String r0, $r7;
        java.util.Map r1, $r15;
        androidx.room.compiler.processing.javac.JavacProcessingEnv$Companion $r2;
        java.util.ArrayList $r3;
        java.util.List $r4;
        int $i0, $i1, $i2, i3, $i4;
        java.util.LinkedHashMap $r5;
        boolean $z0, $z1;
        java.util.Locale $r6;
        javax.lang.model.type.TypeKind[] $r9;
        java.util.Collection r10;
        javax.lang.model.type.TypeKind r11, r12, r18;
        java.lang.Iterable $r13, r14;
        java.util.Iterator r16;
        java.lang.Object r17;

        $r2 = new androidx.room.compiler.processing.javac.JavacProcessingEnv$Companion;

        specialinvoke $r2.<androidx.room.compiler.processing.javac.JavacProcessingEnv$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.room.compiler.processing.javac.JavacProcessingEnv: androidx.room.compiler.processing.javac.JavacProcessingEnv$Companion Companion> = $r2;

        $r9 = staticinvoke <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind[] values()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r10 = (java.util.Collection) $r3;

        $i2 = 0;

        i3 = lengthof $r9;

     label1:
        if $i2 >= i3 goto label3;

        r11 = $r9[$i2];

        r12 = r11;

        $z1 = virtualinvoke r12.<javax.lang.model.type.TypeKind: boolean isPrimitive()>();

        if $z1 == 0 goto label2;

        interfaceinvoke r10.<java.util.Collection: boolean add(java.lang.Object)>(r11);

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        $r4 = (java.util.List) r10;

        $r13 = (java.lang.Iterable) $r4;

        $i0 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r13, 10);

        $i1 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i0);

        $i4 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i1, 16);

        r14 = $r13;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>(int)>($i4);

        $r15 = (java.util.Map) $r5;

        r16 = interfaceinvoke r14.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (javax.lang.model.type.TypeKind) r17;

        r1 = $r15;

        r0 = virtualinvoke r18.<javax.lang.model.type.TypeKind: java.lang.String name()>();

        $r6 = <java.util.Locale: java.util.Locale US>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "US");

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "this as java.lang.String).toLowerCase(locale)");

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r17);

        goto label4;

     label5:
        <androidx.room.compiler.processing.javac.JavacProcessingEnv: java.util.Map PRIMITIVE_TYPES> = $r15;

        return;
    }

androidx.room.compiler.processing.javac.JavacProcessingEnv$Companion
    private void <init>()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$Companion r0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.Map getPRIMITIVE_TYPES()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$Companion r0;
        java.util.Map $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$Companion;

        $r1 = staticinvoke <androidx.room.compiler.processing.javac.JavacProcessingEnv: java.util.Map access$getPRIMITIVE_TYPES$cp()>();

        return $r1;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv$Companion: void <init>()>();

        return;
    }

androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2
<androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2: androidx.room.compiler.processing.javac.JavacProcessingEnv this$0>
    void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2 r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2: androidx.room.compiler.processing.javac.JavacProcessingEnv this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.room.compiler.processing.javac.JavacProcessingEnvMessager invoke()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2 r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnvMessager $r1;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r2;
        javax.'annotation'.processing.ProcessingEnvironment $r3;
        javax.'annotation'.processing.Messager $r4;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2;

        $r1 = new androidx.room.compiler.processing.javac.JavacProcessingEnvMessager;

        $r2 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2: androidx.room.compiler.processing.javac.JavacProcessingEnv this$0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment getDelegate()>();

        $r4 = interfaceinvoke $r3.<javax.'annotation'.processing.ProcessingEnvironment: javax.'annotation'.processing.Messager getMessager()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "delegate.messager");

        specialinvoke $r1.<androidx.room.compiler.processing.javac.JavacProcessingEnvMessager: void <init>(javax.'annotation'.processing.Messager)>($r4);

        return $r1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2 r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnvMessager $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2;

        $r1 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv$messager$2: androidx.room.compiler.processing.javac.JavacProcessingEnvMessager invoke()>();

        return $r1;
    }

androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1
<androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1: androidx.room.compiler.processing.javac.JavacProcessingEnv this$0>
    void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1 r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1: androidx.room.compiler.processing.javac.JavacProcessingEnv this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final javax.lang.model.element.TypeElement invoke(java.lang.String)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1 r0;
        java.lang.String r1;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r2;
        javax.'annotation'.processing.ProcessingEnvironment $r3;
        javax.lang.model.util.Elements $r4;
        java.lang.CharSequence $r5;
        javax.lang.model.element.TypeElement $r6;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "qName");

        $r2 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1: androidx.room.compiler.processing.javac.JavacProcessingEnv this$0>;

        $r3 = virtualinvoke $r2.<androidx.room.compiler.processing.javac.JavacProcessingEnv: javax.'annotation'.processing.ProcessingEnvironment getDelegate()>();

        $r4 = interfaceinvoke $r3.<javax.'annotation'.processing.ProcessingEnvironment: javax.lang.model.util.Elements getElementUtils()>();

        $r5 = (java.lang.CharSequence) r1;

        $r6 = interfaceinvoke $r4.<javax.lang.model.util.Elements: javax.lang.model.element.TypeElement getTypeElement(java.lang.CharSequence)>($r5);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1 r0;
        java.lang.Object r1;
        java.lang.String $r2;
        javax.lang.model.element.TypeElement $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$1: javax.lang.model.element.TypeElement invoke(java.lang.String)>($r2);

        return $r3;
    }

androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2
<androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2: androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2 INSTANCE>
    void <init>()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2 r0;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.String invoke(javax.lang.model.element.TypeElement)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2 r0;
        javax.lang.model.element.TypeElement r1;
        javax.lang.model.element.Name $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2;

        r1 := @parameter0: javax.lang.model.element.TypeElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = interfaceinvoke r1.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2 r0;
        java.lang.Object r1;
        javax.lang.model.element.TypeElement $r2;
        java.lang.String $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (javax.lang.model.element.TypeElement) r1;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2: java.lang.String invoke(javax.lang.model.element.TypeElement)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2 $r0;

        $r0 = new androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2;

        specialinvoke $r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2: void <init>()>();

        <androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2: androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$2 INSTANCE> = $r0;

        return;
    }

androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3
<androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3: androidx.room.compiler.processing.javac.JavacProcessingEnv this$0>
    void <init>(androidx.room.compiler.processing.javac.JavacProcessingEnv)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3 r0;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r1;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.JavacProcessingEnv;

        r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3: androidx.room.compiler.processing.javac.JavacProcessingEnv this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.room.compiler.processing.javac.JavacTypeElement invoke(javax.lang.model.element.TypeElement)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3 r0;
        javax.lang.model.element.TypeElement r1;
        androidx.room.compiler.processing.javac.JavacProcessingEnv $r2;
        androidx.room.compiler.processing.javac.JavacTypeElement$Companion $r3;
        androidx.room.compiler.processing.javac.JavacTypeElement $r4;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3;

        r1 := @parameter0: javax.lang.model.element.TypeElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "typeElement");

        $r3 = <androidx.room.compiler.processing.javac.JavacTypeElement: androidx.room.compiler.processing.javac.JavacTypeElement$Companion Companion>;

        $r2 = r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3: androidx.room.compiler.processing.javac.JavacProcessingEnv this$0>;

        $r4 = virtualinvoke $r3.<androidx.room.compiler.processing.javac.JavacTypeElement$Companion: androidx.room.compiler.processing.javac.JavacTypeElement create(androidx.room.compiler.processing.javac.JavacProcessingEnv,javax.lang.model.element.TypeElement)>($r2, r1);

        return $r4;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3 r0;
        java.lang.Object r1;
        javax.lang.model.element.TypeElement $r2;
        androidx.room.compiler.processing.javac.JavacTypeElement $r3;

        r0 := @this: androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (javax.lang.model.element.TypeElement) r1;

        $r3 = virtualinvoke r0.<androidx.room.compiler.processing.javac.JavacProcessingEnv$typeElementStore$3: androidx.room.compiler.processing.javac.JavacTypeElement invoke(javax.lang.model.element.TypeElement)>($r2);

        return $r3;
    }

androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings
<androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$0>
<androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$1>
    static void <clinit>()
    {
        javax.lang.model.type.TypeKind[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        javax.lang.model.type.TypeKind $r1, $r2;
        javax.lang.model.element.ElementKind[] $r3;
        javax.lang.model.element.ElementKind $r4, $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, r11, r12, r14, r15;
        int[] r10, r13;

        $r0 = staticinvoke <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind[] values()>();

        $i0 = lengthof $r0;

        r10 = newarray (int)[$i0];

     label01:
        $r1 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind ARRAY>;

        $i1 = virtualinvoke $r1.<javax.lang.model.type.TypeKind: int ordinal()>();

        r10[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r6 := @caughtexception;

        r11 = $r6;

     label04:
        $r2 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind DECLARED>;

        $i2 = virtualinvoke $r2.<javax.lang.model.type.TypeKind: int ordinal()>();

        r10[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r7 := @caughtexception;

        r12 = $r7;

     label07:
        <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$0> = r10;

        $r3 = staticinvoke <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind[] values()>();

        $i3 = lengthof $r3;

        r13 = newarray (int)[$i3];

     label08:
        $r4 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind CONSTRUCTOR>;

        $i4 = virtualinvoke $r4.<javax.lang.model.element.ElementKind: int ordinal()>();

        r13[$i4] = 1;

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

        r14 = $r9;

     label11:
        $r5 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind METHOD>;

        $i5 = virtualinvoke $r5.<javax.lang.model.element.ElementKind: int ordinal()>();

        r13[$i5] = 2;

     label12:
        goto label14;

     label13:
        $r8 := @caughtexception;

        r15 = $r8;

     label14:
        <androidx.room.compiler.processing.javac.JavacProcessingEnv$WhenMappings: int[] $EnumSwitchMapping$1> = r13;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label08 to label09 with label10;
        catch java.lang.NoSuchFieldError from label11 to label12 with label13;
    }

