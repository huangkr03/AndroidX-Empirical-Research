androidx.camera.core.impl.SurfaceConfig
    void <init>()
    {
        androidx.camera.core.impl.SurfaceConfig r0;

        r0 := @this: androidx.camera.core.impl.SurfaceConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.camera.core.impl.SurfaceConfig create(androidx.camera.core.impl.SurfaceConfig$ConfigType, androidx.camera.core.impl.SurfaceConfig$ConfigSize)
    {
        androidx.camera.core.impl.SurfaceConfig$ConfigType r0;
        androidx.camera.core.impl.SurfaceConfig$ConfigSize r1;
        androidx.camera.core.impl.AutoValue_SurfaceConfig $r2;

        r0 := @parameter0: androidx.camera.core.impl.SurfaceConfig$ConfigType;

        r1 := @parameter1: androidx.camera.core.impl.SurfaceConfig$ConfigSize;

        $r2 = new androidx.camera.core.impl.AutoValue_SurfaceConfig;

        specialinvoke $r2.<androidx.camera.core.impl.AutoValue_SurfaceConfig: void <init>(androidx.camera.core.impl.SurfaceConfig$ConfigType,androidx.camera.core.impl.SurfaceConfig$ConfigSize)>(r0, r1);

        return $r2;
    }

<androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig$ConfigType getConfigType()>
<androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig$ConfigSize getConfigSize()>
    public final boolean isSupported(androidx.camera.core.impl.SurfaceConfig)
    {
        androidx.camera.core.impl.SurfaceConfig r0, r1;
        androidx.camera.core.impl.SurfaceConfig$ConfigType r2, $r5;
        androidx.camera.core.impl.SurfaceConfig$ConfigSize r3, $r4;
        int $i0, $i1;
        boolean z0;

        r0 := @this: androidx.camera.core.impl.SurfaceConfig;

        r1 := @parameter0: androidx.camera.core.impl.SurfaceConfig;

        z0 = 0;

        r2 = virtualinvoke r1.<androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig$ConfigType getConfigType()>();

        r3 = virtualinvoke r1.<androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig$ConfigSize getConfigSize()>();

        $i0 = virtualinvoke r3.<androidx.camera.core.impl.SurfaceConfig$ConfigSize: int getId()>();

        $r4 = virtualinvoke r0.<androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig$ConfigSize getConfigSize()>();

        $i1 = virtualinvoke $r4.<androidx.camera.core.impl.SurfaceConfig$ConfigSize: int getId()>();

        if $i0 > $i1 goto label1;

        $r5 = virtualinvoke r0.<androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig$ConfigType getConfigType()>();

        if r2 != $r5 goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    public static androidx.camera.core.impl.SurfaceConfig$ConfigType getConfigType(int)
    {
        int i0;
        androidx.camera.core.impl.SurfaceConfig$ConfigType $r0, $r1, $r2, $r3;

        i0 := @parameter0: int;

        if i0 != 35 goto label1;

        $r3 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType YUV>;

        return $r3;

     label1:
        if i0 != 256 goto label2;

        $r2 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType JPEG>;

        return $r2;

     label2:
        if i0 != 32 goto label3;

        $r1 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType RAW>;

        return $r1;

     label3:
        $r0 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType PRIV>;

        return $r0;
    }

    public static androidx.camera.core.impl.SurfaceConfig transformSurfaceConfig(int, android.util.Size, androidx.camera.core.impl.SurfaceSizeDefinition)
    {
        int i0, i1, $i2, $i3, $i4;
        android.util.Size r0, $r3, $r4, $r5;
        androidx.camera.core.impl.SurfaceSizeDefinition r1;
        androidx.camera.core.impl.SurfaceConfig$ConfigType r2;
        androidx.camera.core.impl.SurfaceConfig$ConfigSize r6, r7;
        androidx.camera.core.impl.SurfaceConfig $r8;

        i0 := @parameter0: int;

        r0 := @parameter1: android.util.Size;

        r1 := @parameter2: androidx.camera.core.impl.SurfaceSizeDefinition;

        r2 = staticinvoke <androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig$ConfigType getConfigType(int)>(i0);

        r6 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize NOT_SUPPORT>;

        i1 = staticinvoke <androidx.camera.core.internal.utils.SizeUtil: int getArea(android.util.Size)>(r0);

        $r3 = virtualinvoke r1.<androidx.camera.core.impl.SurfaceSizeDefinition: android.util.Size getAnalysisSize()>();

        $i2 = staticinvoke <androidx.camera.core.internal.utils.SizeUtil: int getArea(android.util.Size)>($r3);

        if i1 > $i2 goto label1;

        r7 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize VGA>;

        goto label4;

     label1:
        $r4 = virtualinvoke r1.<androidx.camera.core.impl.SurfaceSizeDefinition: android.util.Size getPreviewSize()>();

        $i3 = staticinvoke <androidx.camera.core.internal.utils.SizeUtil: int getArea(android.util.Size)>($r4);

        if i1 > $i3 goto label2;

        r7 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize PREVIEW>;

        goto label4;

     label2:
        $r5 = virtualinvoke r1.<androidx.camera.core.impl.SurfaceSizeDefinition: android.util.Size getRecordSize()>();

        $i4 = staticinvoke <androidx.camera.core.internal.utils.SizeUtil: int getArea(android.util.Size)>($r5);

        if i1 > $i4 goto label3;

        r7 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize RECORD>;

        goto label4;

     label3:
        r7 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize MAXIMUM>;

     label4:
        $r8 = staticinvoke <androidx.camera.core.impl.SurfaceConfig: androidx.camera.core.impl.SurfaceConfig create(androidx.camera.core.impl.SurfaceConfig$ConfigType,androidx.camera.core.impl.SurfaceConfig$ConfigSize)>(r2, r7);

        return $r8;
    }

androidx.camera.core.impl.SurfaceConfig$ConfigSize
<androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize VGA>
<androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize PREVIEW>
<androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize RECORD>
<androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize MAXIMUM>
<androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize NOT_SUPPORT>
<androidx.camera.core.impl.SurfaceConfig$ConfigSize: int mId>
<androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize[] $VALUES>
    public static androidx.camera.core.impl.SurfaceConfig$ConfigSize[] values()
    {
        androidx.camera.core.impl.SurfaceConfig$ConfigSize[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.camera.core.impl.SurfaceConfig$ConfigSize[]) $r1;

        return $r2;
    }

    public static androidx.camera.core.impl.SurfaceConfig$ConfigSize valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.camera.core.impl.SurfaceConfig$ConfigSize $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/camera/core/impl/SurfaceConfig$ConfigSize;", r0);

        $r2 = (androidx.camera.core.impl.SurfaceConfig$ConfigSize) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        androidx.camera.core.impl.SurfaceConfig$ConfigSize r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: androidx.camera.core.impl.SurfaceConfig$ConfigSize;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<androidx.camera.core.impl.SurfaceConfig$ConfigSize: int mId> = i1;

        return;
    }

    int getId()
    {
        androidx.camera.core.impl.SurfaceConfig$ConfigSize r0;
        int $i0;

        r0 := @this: androidx.camera.core.impl.SurfaceConfig$ConfigSize;

        $i0 = r0.<androidx.camera.core.impl.SurfaceConfig$ConfigSize: int mId>;

        return $i0;
    }

    static void <clinit>()
    {
        androidx.camera.core.impl.SurfaceConfig$ConfigSize $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        androidx.camera.core.impl.SurfaceConfig$ConfigSize[] $r5;

        $r0 = new androidx.camera.core.impl.SurfaceConfig$ConfigSize;

        specialinvoke $r0.<androidx.camera.core.impl.SurfaceConfig$ConfigSize: void <init>(java.lang.String,int,int)>("VGA", 0, 0);

        <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize VGA> = $r0;

        $r1 = new androidx.camera.core.impl.SurfaceConfig$ConfigSize;

        specialinvoke $r1.<androidx.camera.core.impl.SurfaceConfig$ConfigSize: void <init>(java.lang.String,int,int)>("PREVIEW", 1, 1);

        <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize PREVIEW> = $r1;

        $r2 = new androidx.camera.core.impl.SurfaceConfig$ConfigSize;

        specialinvoke $r2.<androidx.camera.core.impl.SurfaceConfig$ConfigSize: void <init>(java.lang.String,int,int)>("RECORD", 2, 2);

        <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize RECORD> = $r2;

        $r3 = new androidx.camera.core.impl.SurfaceConfig$ConfigSize;

        specialinvoke $r3.<androidx.camera.core.impl.SurfaceConfig$ConfigSize: void <init>(java.lang.String,int,int)>("MAXIMUM", 3, 3);

        <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize MAXIMUM> = $r3;

        $r4 = new androidx.camera.core.impl.SurfaceConfig$ConfigSize;

        specialinvoke $r4.<androidx.camera.core.impl.SurfaceConfig$ConfigSize: void <init>(java.lang.String,int,int)>("NOT_SUPPORT", 4, 4);

        <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize NOT_SUPPORT> = $r4;

        $r5 = newarray (androidx.camera.core.impl.SurfaceConfig$ConfigSize)[5];

        $r6 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize VGA>;

        $r5[0] = $r6;

        $r7 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize PREVIEW>;

        $r5[1] = $r7;

        $r8 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize RECORD>;

        $r5[2] = $r8;

        $r9 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize MAXIMUM>;

        $r5[3] = $r9;

        $r10 = <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize NOT_SUPPORT>;

        $r5[4] = $r10;

        <androidx.camera.core.impl.SurfaceConfig$ConfigSize: androidx.camera.core.impl.SurfaceConfig$ConfigSize[] $VALUES> = $r5;

        return;
    }

androidx.camera.core.impl.SurfaceConfig$ConfigType
<androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType PRIV>
<androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType YUV>
<androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType JPEG>
<androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType RAW>
<androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType[] $VALUES>
    public static androidx.camera.core.impl.SurfaceConfig$ConfigType[] values()
    {
        androidx.camera.core.impl.SurfaceConfig$ConfigType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.camera.core.impl.SurfaceConfig$ConfigType[]) $r1;

        return $r2;
    }

    public static androidx.camera.core.impl.SurfaceConfig$ConfigType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.camera.core.impl.SurfaceConfig$ConfigType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/camera/core/impl/SurfaceConfig$ConfigType;", r0);

        $r2 = (androidx.camera.core.impl.SurfaceConfig$ConfigType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.camera.core.impl.SurfaceConfig$ConfigType r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.camera.core.impl.SurfaceConfig$ConfigType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        androidx.camera.core.impl.SurfaceConfig$ConfigType $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        androidx.camera.core.impl.SurfaceConfig$ConfigType[] $r4;

        $r0 = new androidx.camera.core.impl.SurfaceConfig$ConfigType;

        specialinvoke $r0.<androidx.camera.core.impl.SurfaceConfig$ConfigType: void <init>(java.lang.String,int)>("PRIV", 0);

        <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType PRIV> = $r0;

        $r1 = new androidx.camera.core.impl.SurfaceConfig$ConfigType;

        specialinvoke $r1.<androidx.camera.core.impl.SurfaceConfig$ConfigType: void <init>(java.lang.String,int)>("YUV", 1);

        <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType YUV> = $r1;

        $r2 = new androidx.camera.core.impl.SurfaceConfig$ConfigType;

        specialinvoke $r2.<androidx.camera.core.impl.SurfaceConfig$ConfigType: void <init>(java.lang.String,int)>("JPEG", 2);

        <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType JPEG> = $r2;

        $r3 = new androidx.camera.core.impl.SurfaceConfig$ConfigType;

        specialinvoke $r3.<androidx.camera.core.impl.SurfaceConfig$ConfigType: void <init>(java.lang.String,int)>("RAW", 3);

        <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType RAW> = $r3;

        $r4 = newarray (androidx.camera.core.impl.SurfaceConfig$ConfigType)[4];

        $r5 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType PRIV>;

        $r4[0] = $r5;

        $r6 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType YUV>;

        $r4[1] = $r6;

        $r7 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType JPEG>;

        $r4[2] = $r7;

        $r8 = <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType RAW>;

        $r4[3] = $r8;

        <androidx.camera.core.impl.SurfaceConfig$ConfigType: androidx.camera.core.impl.SurfaceConfig$ConfigType[] $VALUES> = $r4;

        return;
    }

