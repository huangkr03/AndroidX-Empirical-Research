kotlin.collections.ByteIterator
    public void <init>()
    {
        kotlin.collections.ByteIterator $r0;

        $r0 := @this: kotlin.collections.ByteIterator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Byte next()
    {
        kotlin.collections.ByteIterator $r0;
        byte $b0;
        java.lang.Byte $r1;

        $r0 := @this: kotlin.collections.ByteIterator;

        $b0 = virtualinvoke $r0.<kotlin.collections.ByteIterator: byte nextByte()>();

        $r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        return $r1;
    }

    public volatile java.lang.Object next()
    {
        kotlin.collections.ByteIterator $r0;
        byte $b0;
        java.lang.Byte $r1;

        $r0 := @this: kotlin.collections.ByteIterator;

        $b0 = virtualinvoke $r0.<kotlin.collections.ByteIterator: byte nextByte()>();

        $r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        return $r1;
    }

<kotlin.collections.ByteIterator: byte nextByte()>
    public void remove()
    {
        kotlin.collections.ByteIterator $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: kotlin.collections.ByteIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }

