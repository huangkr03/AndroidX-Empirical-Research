androidx.test.internal.runner.junit4.statement.RunAfters
<androidx.test.internal.runner.junit4.statement.RunAfters: java.util.List afters>
<androidx.test.internal.runner.junit4.statement.RunAfters: org.junit.runners.model.Statement next>
<androidx.test.internal.runner.junit4.statement.RunAfters: java.lang.Object target>
    static volatile java.lang.Object '-$$Nest$fgettarget'(androidx.test.internal.runner.junit4.statement.RunAfters)
    {
        androidx.test.internal.runner.junit4.statement.RunAfters $r0;
        java.lang.Object r1;

        $r0 := @parameter0: androidx.test.internal.runner.junit4.statement.RunAfters;

        r1 = $r0.<androidx.test.internal.runner.junit4.statement.RunAfters: java.lang.Object target>;

        return r1;
    }

    public void <init>(org.junit.runners.model.FrameworkMethod, org.junit.runners.model.Statement, java.util.List, java.lang.Object)
    {
        androidx.test.internal.runner.junit4.statement.RunAfters $r0;
        org.junit.runners.model.Statement $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        boolean $z0;
        org.junit.runners.model.FrameworkMethod $r4;

        $r0 := @this: androidx.test.internal.runner.junit4.statement.RunAfters;

        $r4 := @parameter0: org.junit.runners.model.FrameworkMethod;

        $r1 := @parameter1: org.junit.runners.model.Statement;

        $r2 := @parameter2: java.util.List;

        $r3 := @parameter3: java.lang.Object;

        $z0 = staticinvoke <androidx.test.internal.runner.junit4.statement.RunAfters: boolean shouldRunOnUiThread(org.junit.runners.model.FrameworkMethod)>($r4);

        specialinvoke $r0.<androidx.test.internal.runner.junit4.statement.UiThreadStatement: void <init>(org.junit.runners.model.Statement,boolean)>($r1, $z0);

        $r0.<androidx.test.internal.runner.junit4.statement.RunAfters: org.junit.runners.model.Statement next> = $r1;

        $r0.<androidx.test.internal.runner.junit4.statement.RunAfters: java.util.List afters> = $r2;

        $r0.<androidx.test.internal.runner.junit4.statement.RunAfters: java.lang.Object target> = $r3;

        return;
    }

    public void evaluate() throws java.lang.Throwable
    {
        androidx.test.internal.runner.junit4.statement.RunAfters $r0;
        java.util.concurrent.CopyOnWriteArrayList $r1, r13;
        java.lang.Object[] $r2;
        org.junit.runners.model.Statement $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.junit.runners.model.FrameworkMethod $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12;
        androidx.test.internal.runner.junit4.statement.RunAfters$1 r14;

        $r0 := @this: androidx.test.internal.runner.junit4.statement.RunAfters;

        r13 = new java.util.concurrent.CopyOnWriteArrayList;

        $r1 = r13;

        specialinvoke r13.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        $r3 = $r0.<androidx.test.internal.runner.junit4.statement.RunAfters: org.junit.runners.model.Statement next>;

     label01:
        virtualinvoke $r3.<org.junit.runners.model.Statement: void evaluate()>();

     label02:
        $r4 = $r0.<androidx.test.internal.runner.junit4.statement.RunAfters: java.util.List afters>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.junit.runners.model.FrameworkMethod) $r6;

        $z0 = staticinvoke <androidx.test.internal.runner.junit4.statement.RunAfters: boolean shouldRunOnUiThread(org.junit.runners.model.FrameworkMethod)>($r7);

        if $z0 == 0 goto label04;

        r14 = new androidx.test.internal.runner.junit4.statement.RunAfters$1;

        $r4 = (java.util.List) $r1;

        specialinvoke r14.<androidx.test.internal.runner.junit4.statement.RunAfters$1: void <init>(androidx.test.internal.runner.junit4.statement.RunAfters,org.junit.runners.model.FrameworkMethod,java.util.List)>($r0, $r7, $r4);

        staticinvoke <androidx.test.internal.runner.junit4.statement.RunAfters: void runOnUiThread(java.lang.Runnable)>(r14);

        goto label03;

     label04:
        $r6 = $r0.<androidx.test.internal.runner.junit4.statement.RunAfters: java.lang.Object target>;

        $r2 = newarray (java.lang.Object)[0];

     label05:
        virtualinvoke $r7.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r6, $r2);

     label06:
        goto label03;

     label07:
        $r8 := @caughtexception;

        $r4 = (java.util.List) $r1;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label03;

     label08:
        $r9 := @caughtexception;

        $r4 = (java.util.List) $r1;

     label09:
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r9);

     label10:
        $r4 = $r0.<androidx.test.internal.runner.junit4.statement.RunAfters: java.util.List afters>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.junit.runners.model.FrameworkMethod) $r6;

        $z0 = staticinvoke <androidx.test.internal.runner.junit4.statement.RunAfters: boolean shouldRunOnUiThread(org.junit.runners.model.FrameworkMethod)>($r7);

        if $z0 == 0 goto label12;

        r14 = new androidx.test.internal.runner.junit4.statement.RunAfters$1;

        $r4 = (java.util.List) $r1;

        specialinvoke r14.<androidx.test.internal.runner.junit4.statement.RunAfters$1: void <init>(androidx.test.internal.runner.junit4.statement.RunAfters,org.junit.runners.model.FrameworkMethod,java.util.List)>($r0, $r7, $r4);

        staticinvoke <androidx.test.internal.runner.junit4.statement.RunAfters: void runOnUiThread(java.lang.Runnable)>(r14);

        goto label11;

     label12:
        $r6 = $r0.<androidx.test.internal.runner.junit4.statement.RunAfters: java.lang.Object target>;

        $r2 = newarray (java.lang.Object)[0];

     label13:
        virtualinvoke $r7.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r6, $r2);

     label14:
        goto label11;

     label15:
        $r10 := @caughtexception;

        $r4 = (java.util.List) $r1;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label11;

     label16:
        $r4 = (java.util.List) $r1;

        staticinvoke <org.junit.runners.model.MultipleFailureException: void assertEmpty(java.util.List)>($r4);

        return;

     label17:
        $r11 := @caughtexception;

        $r4 = $r0.<androidx.test.internal.runner.junit4.statement.RunAfters: java.util.List afters>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label23;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.junit.runners.model.FrameworkMethod) $r6;

        $z0 = staticinvoke <androidx.test.internal.runner.junit4.statement.RunAfters: boolean shouldRunOnUiThread(org.junit.runners.model.FrameworkMethod)>($r7);

        if $z0 == 0 goto label19;

        r14 = new androidx.test.internal.runner.junit4.statement.RunAfters$1;

        $r4 = (java.util.List) $r1;

        specialinvoke r14.<androidx.test.internal.runner.junit4.statement.RunAfters$1: void <init>(androidx.test.internal.runner.junit4.statement.RunAfters,org.junit.runners.model.FrameworkMethod,java.util.List)>($r0, $r7, $r4);

        staticinvoke <androidx.test.internal.runner.junit4.statement.RunAfters: void runOnUiThread(java.lang.Runnable)>(r14);

        goto label18;

     label19:
        $r6 = $r0.<androidx.test.internal.runner.junit4.statement.RunAfters: java.lang.Object target>;

        $r2 = newarray (java.lang.Object)[0];

     label20:
        virtualinvoke $r7.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r6, $r2);

     label21:
        goto label18;

     label22:
        $r12 := @caughtexception;

        $r4 = (java.util.List) $r1;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label18;

     label23:
        goto label24;

     label24:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label20 to label21 with label22;
    }

androidx.test.internal.runner.junit4.statement.RunAfters$1
<androidx.test.internal.runner.junit4.statement.RunAfters$1: androidx.test.internal.runner.junit4.statement.RunAfters this$0>
<androidx.test.internal.runner.junit4.statement.RunAfters$1: org.junit.runners.model.FrameworkMethod val$each>
<androidx.test.internal.runner.junit4.statement.RunAfters$1: java.util.List val$errors>
    void <init>(androidx.test.internal.runner.junit4.statement.RunAfters, org.junit.runners.model.FrameworkMethod, java.util.List)
    {
        androidx.test.internal.runner.junit4.statement.RunAfters$1 $r0;
        androidx.test.internal.runner.junit4.statement.RunAfters $r1;
        org.junit.runners.model.FrameworkMethod $r2;
        java.util.List $r3;

        $r0 := @this: androidx.test.internal.runner.junit4.statement.RunAfters$1;

        $r1 := @parameter0: androidx.test.internal.runner.junit4.statement.RunAfters;

        $r2 := @parameter1: org.junit.runners.model.FrameworkMethod;

        $r3 := @parameter2: java.util.List;

        $r0.<androidx.test.internal.runner.junit4.statement.RunAfters$1: androidx.test.internal.runner.junit4.statement.RunAfters this$0> = $r1;

        $r0.<androidx.test.internal.runner.junit4.statement.RunAfters$1: org.junit.runners.model.FrameworkMethod val$each> = $r2;

        $r0.<androidx.test.internal.runner.junit4.statement.RunAfters$1: java.util.List val$errors> = $r3;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.test.internal.runner.junit4.statement.RunAfters$1 $r0;
        java.lang.Object $r1;
        org.junit.runners.model.FrameworkMethod $r2;
        androidx.test.internal.runner.junit4.statement.RunAfters $r3;
        java.lang.Object[] $r4;
        java.lang.Throwable $r5;
        java.util.List $r6;

        $r0 := @this: androidx.test.internal.runner.junit4.statement.RunAfters$1;

        $r2 = $r0.<androidx.test.internal.runner.junit4.statement.RunAfters$1: org.junit.runners.model.FrameworkMethod val$each>;

        $r3 = $r0.<androidx.test.internal.runner.junit4.statement.RunAfters$1: androidx.test.internal.runner.junit4.statement.RunAfters this$0>;

        $r1 = staticinvoke <androidx.test.internal.runner.junit4.statement.RunAfters: java.lang.Object '-$$Nest$fgettarget'(androidx.test.internal.runner.junit4.statement.RunAfters)>($r3);

        $r4 = newarray (java.lang.Object)[0];

     label1:
        virtualinvoke $r2.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r1, $r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = $r0.<androidx.test.internal.runner.junit4.statement.RunAfters$1: java.util.List val$errors>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

