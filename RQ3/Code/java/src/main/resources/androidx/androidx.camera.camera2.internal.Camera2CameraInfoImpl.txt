androidx.camera.camera2.internal.Camera2CameraInfoImpl
<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.String TAG>
<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.String mCameraId>
<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>
<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.interop.Camera2CameraInfo mCamera2CameraInfo>
<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.Object mLock>
<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>
<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectTorchStateLiveData>
<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectZoomStateLiveData>
<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mCameraStateLiveData>
<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.util.List mCameraCaptureCallbacks>
<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.core.impl.Quirks mCameraQuirks>
<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.core.impl.CamcorderProfileProvider mCamera2CamcorderProfileProvider>
<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraManagerCompat mCameraManager>
    void <init>(java.lang.String, androidx.camera.camera2.internal.compat.CameraManagerCompat) throws androidx.camera.camera2.internal.compat.CameraAccessExceptionCompat
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        java.lang.String r1, $r5, $r6;
        androidx.camera.camera2.internal.compat.CameraManagerCompat r2;
        java.lang.Object $r3, $r4;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat $r7, $r9, $r12;
        androidx.camera.camera2.interop.Camera2CameraInfo $r8;
        androidx.camera.core.impl.Quirks $r10;
        androidx.camera.camera2.internal.Camera2CamcorderProfileProvider $r11;
        androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData $r13;
        androidx.camera.core.CameraState$Type $r14;
        androidx.camera.core.CameraState $r15;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.camera.camera2.internal.compat.CameraManagerCompat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.Object mLock> = $r3;

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectTorchStateLiveData> = null;

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectZoomStateLiveData> = null;

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.util.List mCameraCaptureCallbacks> = null;

        $r4 = staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = (java.lang.String) $r4;

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.String mCameraId> = $r5;

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraManagerCompat mCameraManager> = r2;

        $r6 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.String mCameraId>;

        $r7 = virtualinvoke r2.<androidx.camera.camera2.internal.compat.CameraManagerCompat: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat getCameraCharacteristicsCompat(java.lang.String)>($r6);

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat> = $r7;

        $r8 = new androidx.camera.camera2.interop.Camera2CameraInfo;

        specialinvoke $r8.<androidx.camera.camera2.interop.Camera2CameraInfo: void <init>(androidx.camera.camera2.internal.Camera2CameraInfoImpl)>(r0);

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.interop.Camera2CameraInfo mCamera2CameraInfo> = $r8;

        $r9 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>;

        $r10 = staticinvoke <androidx.camera.camera2.internal.compat.quirk.CameraQuirks: androidx.camera.core.impl.Quirks get(java.lang.String,androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)>(r1, $r9);

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.core.impl.Quirks mCameraQuirks> = $r10;

        $r11 = new androidx.camera.camera2.internal.Camera2CamcorderProfileProvider;

        $r12 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>;

        specialinvoke $r11.<androidx.camera.camera2.internal.Camera2CamcorderProfileProvider: void <init>(java.lang.String,androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)>(r1, $r12);

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.core.impl.CamcorderProfileProvider mCamera2CamcorderProfileProvider> = $r11;

        $r13 = new androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData;

        $r14 = <androidx.camera.core.CameraState$Type: androidx.camera.core.CameraState$Type CLOSED>;

        $r15 = staticinvoke <androidx.camera.core.CameraState: androidx.camera.core.CameraState create(androidx.camera.core.CameraState$Type)>($r14);

        specialinvoke $r13.<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: void <init>(java.lang.Object)>($r15);

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mCameraStateLiveData> = $r13;

        return;
    }

    void linkWithCameraControl(androidx.camera.camera2.internal.Camera2CameraControlImpl)
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        androidx.camera.camera2.internal.Camera2CameraControlImpl r1, $r16, $r17, $r21;
        java.lang.Object r2, $r6, $r11, $r12, $r13;
        java.util.Iterator r3;
        android.util.Pair r4;
        java.lang.Throwable r5, $r25;
        androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData $r7, $r8, $r18, $r22;
        java.util.List $r9, $r10;
        boolean $z0;
        androidx.camera.core.impl.CameraCaptureCallback $r14;
        java.util.concurrent.Executor $r15;
        androidx.camera.camera2.internal.TorchControl $r19;
        androidx.lifecycle.LiveData $r20, $r24;
        androidx.camera.camera2.internal.ZoomControl $r23;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        r1 := @parameter0: androidx.camera.camera2.internal.Camera2CameraControlImpl;

        $r6 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl> = r1;

        $r7 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectZoomStateLiveData>;

        if $r7 == null goto label02;

        $r22 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectZoomStateLiveData>;

        $r21 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        $r23 = virtualinvoke $r21.<androidx.camera.camera2.internal.Camera2CameraControlImpl: androidx.camera.camera2.internal.ZoomControl getZoomControl()>();

        $r24 = virtualinvoke $r23.<androidx.camera.camera2.internal.ZoomControl: androidx.lifecycle.LiveData getZoomState()>();

        virtualinvoke $r22.<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: void redirectTo(androidx.lifecycle.LiveData)>($r24);

     label02:
        $r8 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectTorchStateLiveData>;

        if $r8 == null goto label03;

        $r18 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectTorchStateLiveData>;

        $r17 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        $r19 = virtualinvoke $r17.<androidx.camera.camera2.internal.Camera2CameraControlImpl: androidx.camera.camera2.internal.TorchControl getTorchControl()>();

        $r20 = virtualinvoke $r19.<androidx.camera.camera2.internal.TorchControl: androidx.lifecycle.LiveData getTorchState()>();

        virtualinvoke $r18.<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: void redirectTo(androidx.lifecycle.LiveData)>($r20);

     label03:
        $r9 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.util.List mCameraCaptureCallbacks>;

        if $r9 == null goto label06;

        $r10 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.util.List mCameraCaptureCallbacks>;

        r3 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.util.Pair) $r11;

        $r16 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        $r12 = r4.<android.util.Pair: java.lang.Object second>;

        $r15 = (java.util.concurrent.Executor) $r12;

        $r13 = r4.<android.util.Pair: java.lang.Object first>;

        $r14 = (androidx.camera.core.impl.CameraCaptureCallback) $r13;

        virtualinvoke $r16.<androidx.camera.camera2.internal.Camera2CameraControlImpl: void addSessionCameraCaptureCallback(java.util.concurrent.Executor,androidx.camera.core.impl.CameraCaptureCallback)>($r15, $r14);

        goto label04;

     label05:
        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.util.List mCameraCaptureCallbacks> = null;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r25 := @caughtexception;

        r5 = $r25;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        specialinvoke r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: void logDeviceInfo()>();

        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void setCameraStateSource(androidx.lifecycle.LiveData)
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        androidx.lifecycle.LiveData r1;
        androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData $r2;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        r1 := @parameter0: androidx.lifecycle.LiveData;

        $r2 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mCameraStateLiveData>;

        virtualinvoke $r2.<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: void redirectTo(androidx.lifecycle.LiveData)>(r1);

        return;
    }

    public java.lang.String getCameraId()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        java.lang.String $r1;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r1 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.String mCameraId>;

        return $r1;
    }

    public androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat getCameraCharacteristicsCompat()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat $r1;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r1 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>;

        return $r1;
    }

    public java.lang.Integer getLensFacing()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        java.lang.Integer r1, $r6, $r7;
        android.hardware.camera2.CameraCharacteristics$Key $r2;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat $r3;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r3 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>;

        $r2 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_FACING>;

        $r4 = virtualinvoke $r3.<androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r2);

        r1 = (java.lang.Integer) $r4;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        return $r7;

     label2:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        return $r6;

     label3:
        return null;
    }

    public int getSensorRotationDegrees(int)
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        int i0, i1, i2, $i3, $i4;
        java.lang.Integer r1;
        boolean z0, $z1;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: int getSensorOrientation()>();

        i2 = staticinvoke <androidx.camera.core.impl.utils.CameraOrientationUtil: int surfaceRotationToDegrees(int)>(i0);

        r1 = virtualinvoke r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.Integer getLensFacing()>();

        if r1 == null goto label1;

        $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if 1 != $i3 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $i4 = staticinvoke <androidx.camera.core.impl.utils.CameraOrientationUtil: int getRelativeImageRotation(int,int,boolean)>(i2, i1, z0);

        return $i4;
    }

    int getSensorOrientation()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        java.lang.Integer r1;
        android.hardware.camera2.CameraCharacteristics$Key $r2;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat $r3;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r3 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>;

        $r2 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_ORIENTATION>;

        $r4 = virtualinvoke $r3.<androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r2);

        r1 = (java.lang.Integer) $r4;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    int getSupportedHardwareLevel()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        java.lang.Integer r1;
        android.hardware.camera2.CameraCharacteristics$Key $r2;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat $r3;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r3 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>;

        $r2 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key INFO_SUPPORTED_HARDWARE_LEVEL>;

        $r4 = virtualinvoke $r3.<androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r2);

        r1 = (java.lang.Integer) $r4;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int getSensorRotationDegrees()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        int $i0;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $i0 = virtualinvoke r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: int getSensorRotationDegrees(int)>(0);

        return $i0;
    }

    private void logDeviceInfo()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        specialinvoke r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: void logDeviceLevel()>();

        return;
    }

    private void logDeviceLevel()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7;
        java.lang.String r4, $r8;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        i0 = virtualinvoke r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: int getSupportedHardwareLevel()>();

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label1;
            case 3: goto label5;
            case 4: goto label2;
            default: goto label6;
        };

     label1:
        r4 = "INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY";

        goto label7;

     label2:
        r4 = "INFO_SUPPORTED_HARDWARE_LEVEL_EXTERNAL";

        goto label7;

     label3:
        r4 = "INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED";

        goto label7;

     label4:
        r4 = "INFO_SUPPORTED_HARDWARE_LEVEL_FULL";

        goto label7;

     label5:
        r4 = "INFO_SUPPORTED_HARDWARE_LEVEL_3";

        goto label7;

     label6:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown value: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Device Level: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void i(java.lang.String,java.lang.String)>("Camera2CameraInfo", $r8);

        return;
    }

    public boolean hasFlashUnit()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat $r1;
        boolean $z0;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r1 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>;

        $z0 = staticinvoke <androidx.camera.camera2.internal.compat.workaround.FlashAvailabilityChecker: boolean isFlashAvailable(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)>($r1);

        return $z0;
    }

    public androidx.lifecycle.LiveData getTorchState()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r14;
        androidx.camera.camera2.internal.Camera2CameraControlImpl $r4, $r6;
        androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData $r5, $r9, $r10, $r11, r15;
        androidx.camera.camera2.internal.TorchControl $r7;
        androidx.lifecycle.LiveData $r8, r16, r17;
        java.lang.Integer $r13;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r3 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        if $r4 != null goto label4;

        $r10 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectTorchStateLiveData>;

        if $r10 != null goto label2;

        r15 = new androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke r15.<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: void <init>(java.lang.Object)>($r13);

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectTorchStateLiveData> = r15;

     label2:
        $r11 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectTorchStateLiveData>;

        exitmonitor r1;

     label3:
        r16 = (androidx.lifecycle.LiveData) $r11;

        return r16;

     label4:
        $r5 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectTorchStateLiveData>;

        if $r5 == null goto label6;

        $r9 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectTorchStateLiveData>;

        exitmonitor r1;

     label5:
        r17 = (androidx.lifecycle.LiveData) $r9;

        return r17;

     label6:
        $r6 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        $r7 = virtualinvoke $r6.<androidx.camera.camera2.internal.Camera2CameraControlImpl: androidx.camera.camera2.internal.TorchControl getTorchControl()>();

        $r8 = virtualinvoke $r7.<androidx.camera.camera2.internal.TorchControl: androidx.lifecycle.LiveData getTorchState()>();

        exitmonitor r1;

     label7:
        return $r8;

     label8:
        $r14 := @caughtexception;

        r2 = $r14;

        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public androidx.lifecycle.LiveData getZoomState()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r15;
        androidx.camera.camera2.internal.Camera2CameraControlImpl $r4, $r6;
        androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData $r5, $r9, $r10, $r11, r16;
        androidx.camera.camera2.internal.ZoomControl $r7;
        androidx.lifecycle.LiveData $r8, r17, r18;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat $r13;
        androidx.camera.core.ZoomState $r14;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r3 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        if $r4 != null goto label4;

        $r10 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectZoomStateLiveData>;

        if $r10 != null goto label2;

        r16 = new androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData;

        $r13 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>;

        $r14 = staticinvoke <androidx.camera.camera2.internal.ZoomControl: androidx.camera.core.ZoomState getDefaultZoomState(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)>($r13);

        specialinvoke r16.<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: void <init>(java.lang.Object)>($r14);

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectZoomStateLiveData> = r16;

     label2:
        $r11 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectZoomStateLiveData>;

        exitmonitor r1;

     label3:
        r17 = (androidx.lifecycle.LiveData) $r11;

        return r17;

     label4:
        $r5 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectZoomStateLiveData>;

        if $r5 == null goto label6;

        $r9 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mRedirectZoomStateLiveData>;

        exitmonitor r1;

     label5:
        r18 = (androidx.lifecycle.LiveData) $r9;

        return r18;

     label6:
        $r6 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        $r7 = virtualinvoke $r6.<androidx.camera.camera2.internal.Camera2CameraControlImpl: androidx.camera.camera2.internal.ZoomControl getZoomControl()>();

        $r8 = virtualinvoke $r7.<androidx.camera.camera2.internal.ZoomControl: androidx.lifecycle.LiveData getZoomState()>();

        exitmonitor r1;

     label7:
        return $r8;

     label8:
        $r15 := @caughtexception;

        r2 = $r15;

        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public androidx.camera.core.ExposureState getExposureState()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r10;
        androidx.camera.camera2.internal.Camera2CameraControlImpl $r4, $r5;
        androidx.camera.camera2.internal.ExposureControl $r6;
        androidx.camera.core.ExposureState $r7, $r9;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat $r8;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r3 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        if $r4 != null goto label3;

        $r8 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>;

        $r9 = staticinvoke <androidx.camera.camera2.internal.ExposureControl: androidx.camera.core.ExposureState getDefaultExposureState(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat)>($r8);

        exitmonitor r1;

     label2:
        return $r9;

     label3:
        $r5 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        $r6 = virtualinvoke $r5.<androidx.camera.camera2.internal.Camera2CameraControlImpl: androidx.camera.camera2.internal.ExposureControl getExposureControl()>();

        $r7 = virtualinvoke $r6.<androidx.camera.camera2.internal.ExposureControl: androidx.camera.core.ExposureState getExposureState()>();

        exitmonitor r1;

     label4:
        return $r7;

     label5:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public androidx.lifecycle.LiveData getCameraState()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData $r1;
        androidx.lifecycle.LiveData r2;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r1 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData mCameraStateLiveData>;

        r2 = (androidx.lifecycle.LiveData) $r1;

        return r2;
    }

    public java.lang.String getImplementationType()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        i0 = virtualinvoke r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: int getSupportedHardwareLevel()>();

        if i0 != 2 goto label1;

        $r1 = "androidx.camera.camera2.legacy";

        goto label2;

     label1:
        $r1 = "androidx.camera.camera2";

     label2:
        return $r1;
    }

    public boolean isFocusMeteringSupported(androidx.camera.core.FocusMeteringAction)
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        androidx.camera.core.FocusMeteringAction r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        androidx.camera.camera2.internal.Camera2CameraControlImpl $r5, $r6;
        androidx.camera.camera2.internal.FocusMeteringControl $r7;
        boolean $z0;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        r1 := @parameter0: androidx.camera.core.FocusMeteringAction;

        $r4 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        if $r5 != null goto label3;

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $r6 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        $r7 = virtualinvoke $r6.<androidx.camera.camera2.internal.Camera2CameraControlImpl: androidx.camera.camera2.internal.FocusMeteringControl getFocusMeteringControl()>();

        $z0 = virtualinvoke $r7.<androidx.camera.camera2.internal.FocusMeteringControl: boolean isFocusMeteringSupported(androidx.camera.core.FocusMeteringAction)>(r1);

        exitmonitor r2;

     label4:
        return $z0;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isZslSupported()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $z0 = virtualinvoke r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: boolean isPrivateReprocessingSupported()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isPrivateReprocessingSupported()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat $r1;
        boolean $z0;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r1 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>;

        $z0 = staticinvoke <androidx.camera.camera2.internal.ZslUtil: boolean isCapabilitySupported(androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat,int)>($r1, 4);

        return $z0;
    }

    public androidx.camera.core.impl.CamcorderProfileProvider getCamcorderProfileProvider()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        androidx.camera.core.impl.CamcorderProfileProvider $r1;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r1 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.core.impl.CamcorderProfileProvider mCamera2CamcorderProfileProvider>;

        return $r1;
    }

    public androidx.camera.core.impl.Timebase getTimebase()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        java.lang.Integer r1;
        android.hardware.camera2.CameraCharacteristics$Key $r2;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat $r3;
        java.lang.Object $r4;
        int $i0;
        androidx.camera.core.impl.Timebase $r6, $r7;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r3 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>;

        $r2 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_TIMESTAMP_SOURCE>;

        $r4 = virtualinvoke $r3.<androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r2);

        r1 = (java.lang.Integer) $r4;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label2;
        };

     label1:
        $r6 = <androidx.camera.core.impl.Timebase: androidx.camera.core.impl.Timebase REALTIME>;

        return $r6;

     label2:
        $r7 = <androidx.camera.core.impl.Timebase: androidx.camera.core.impl.Timebase UPTIME>;

        return $r7;
    }

    public void addSessionCaptureCallback(java.util.concurrent.Executor, androidx.camera.core.impl.CameraCaptureCallback)
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        java.util.concurrent.Executor r1;
        androidx.camera.core.impl.CameraCaptureCallback r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r12;
        androidx.camera.camera2.internal.Camera2CameraControlImpl $r6, $r7;
        java.util.List $r8, $r10;
        android.util.Pair $r9;
        java.util.ArrayList $r11;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.camera.core.impl.CameraCaptureCallback;

        $r5 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        if $r6 != null goto label4;

        $r8 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.util.List mCameraCaptureCallbacks>;

        if $r8 != null goto label2;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.util.List mCameraCaptureCallbacks> = $r11;

     label2:
        $r10 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.util.List mCameraCaptureCallbacks>;

        $r9 = new android.util.Pair;

        specialinvoke $r9.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r2, r1);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

        exitmonitor r3;

     label3:
        return;

     label4:
        $r7 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        virtualinvoke $r7.<androidx.camera.camera2.internal.Camera2CameraControlImpl: void addSessionCameraCaptureCallback(java.util.concurrent.Executor,androidx.camera.core.impl.CameraCaptureCallback)>(r1, r2);

        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r3;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void removeSessionCaptureCallback(androidx.camera.core.impl.CameraCaptureCallback)
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        androidx.camera.core.impl.CameraCaptureCallback r1;
        java.lang.Object r2, $r6, $r11, $r12;
        java.util.Iterator r3;
        android.util.Pair r4;
        java.lang.Throwable r5, $r13;
        androidx.camera.camera2.internal.Camera2CameraControlImpl $r7, $r8;
        java.util.List $r9, $r10;
        boolean $z0;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        r1 := @parameter0: androidx.camera.core.impl.CameraCaptureCallback;

        $r6 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        if $r7 != null goto label08;

        $r9 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.util.List mCameraCaptureCallbacks>;

        if $r9 != null goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        $r10 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.util.List mCameraCaptureCallbacks>;

        r3 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.util.Pair) $r11;

        $r12 = r4.<android.util.Pair: java.lang.Object first>;

        if $r12 != r1 goto label05;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

     label05:
        goto label04;

     label06:
        exitmonitor r2;

     label07:
        return;

     label08:
        $r8 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.Camera2CameraControlImpl mCamera2CameraControlImpl>;

        virtualinvoke $r8.<androidx.camera.camera2.internal.Camera2CameraControlImpl: void removeSessionCameraCaptureCallback(androidx.camera.core.impl.CameraCaptureCallback)>(r1);

        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r2;

     label11:
        throw r5;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public androidx.camera.core.impl.Quirks getCameraQuirks()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        androidx.camera.core.impl.Quirks $r1;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r1 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.core.impl.Quirks mCameraQuirks>;

        return $r1;
    }

    public androidx.camera.camera2.interop.Camera2CameraInfo getCamera2CameraInfo()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        androidx.camera.camera2.interop.Camera2CameraInfo $r1;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r1 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.interop.Camera2CameraInfo mCamera2CameraInfo>;

        return $r1;
    }

    public java.util.Map getCameraCharacteristicsMap()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl r0;
        java.util.LinkedHashMap r1, $r4;
        java.util.Iterator r2;
        java.lang.String r3, $r6, $r12;
        androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat $r5, $r9, $r14;
        android.hardware.camera2.CameraCharacteristics $r7, $r15;
        java.util.Set $r10;
        java.lang.Object $r11;
        boolean $z0, $z1;
        androidx.camera.camera2.internal.compat.CameraManagerCompat $r13;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r1 = $r4;

        $r6 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.String mCameraId>;

        $r5 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>;

        $r7 = virtualinvoke $r5.<androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat: android.hardware.camera2.CameraCharacteristics toCameraCharacteristics()>();

        virtualinvoke r1.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r9 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat mCameraCharacteristicsCompat>;

        $r10 = virtualinvoke $r9.<androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat: java.util.Set getPhysicalCameraIds()>();

        r2 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r11;

        $r12 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: java.lang.String mCameraId>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r3, $r12);

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r13 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl: androidx.camera.camera2.internal.compat.CameraManagerCompat mCameraManager>;

        $r14 = virtualinvoke $r13.<androidx.camera.camera2.internal.compat.CameraManagerCompat: androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat getCameraCharacteristicsCompat(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<androidx.camera.camera2.internal.compat.CameraCharacteristicsCompat: android.hardware.camera2.CameraCharacteristics toCameraCharacteristics()>();

        virtualinvoke r1.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r15);

        goto label3;

     label3:
        goto label1;

     label4:
        return r1;
    }

androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData
<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: androidx.lifecycle.LiveData mLiveDataSource>
<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: java.lang.Object mInitialValue>
    void <init>(java.lang.Object)
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData r0;
        java.lang.Object r1;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<androidx.lifecycle.MediatorLiveData: void <init>()>();

        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: java.lang.Object mInitialValue> = r1;

        return;
    }

    void redirectTo(androidx.lifecycle.LiveData)
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData r0;
        androidx.lifecycle.LiveData r1, $r2, $r4;
        androidx.lifecycle.Observer $r3;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData;

        r1 := @parameter0: androidx.lifecycle.LiveData;

        $r2 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: androidx.lifecycle.LiveData mLiveDataSource>;

        if $r2 == null goto label1;

        $r4 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: androidx.lifecycle.LiveData mLiveDataSource>;

        specialinvoke r0.<androidx.lifecycle.MediatorLiveData: void removeSource(androidx.lifecycle.LiveData)>($r4);

     label1:
        r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: androidx.lifecycle.LiveData mLiveDataSource> = r1;

        $r3 = dynamicinvoke "onChanged" <androidx.lifecycle.Observer (androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>, methodtype: void __METHODTYPE__(java.lang.Object));

        specialinvoke r0.<androidx.lifecycle.MediatorLiveData: void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)>(r1, $r3);

        return;
    }

    public void addSource(androidx.lifecycle.LiveData, androidx.lifecycle.Observer)
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData r0;
        androidx.lifecycle.LiveData r1;
        androidx.lifecycle.Observer r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData;

        r1 := @parameter0: androidx.lifecycle.LiveData;

        r2 := @parameter1: androidx.lifecycle.Observer;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public java.lang.Object getValue()
    {
        androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData r0;
        androidx.lifecycle.LiveData $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData;

        $r1 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: androidx.lifecycle.LiveData mLiveDataSource>;

        if $r1 != null goto label1;

        $r3 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: java.lang.Object mInitialValue>;

        goto label2;

     label1:
        $r2 = r0.<androidx.camera.camera2.internal.Camera2CameraInfoImpl$RedirectableLiveData: androidx.lifecycle.LiveData mLiveDataSource>;

        $r3 = virtualinvoke $r2.<androidx.lifecycle.LiveData: java.lang.Object getValue()>();

     label2:
        return $r3;
    }

