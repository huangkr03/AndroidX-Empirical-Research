kotlin.random.FallbackThreadLocalRandom
<kotlin.random.FallbackThreadLocalRandom: kotlin.random.FallbackThreadLocalRandom$implStorage$1 implStorage>
    public void <init>()
    {
        kotlin.random.FallbackThreadLocalRandom $r0;
        kotlin.random.FallbackThreadLocalRandom$implStorage$1 $r1;

        $r0 := @this: kotlin.random.FallbackThreadLocalRandom;

        specialinvoke $r0.<kotlin.random.AbstractPlatformRandom: void <init>()>();

        $r1 = new kotlin.random.FallbackThreadLocalRandom$implStorage$1;

        specialinvoke $r1.<kotlin.random.FallbackThreadLocalRandom$implStorage$1: void <init>()>();

        $r0.<kotlin.random.FallbackThreadLocalRandom: kotlin.random.FallbackThreadLocalRandom$implStorage$1 implStorage> = $r1;

        return;
    }

    public java.util.Random getImpl()
    {
        kotlin.random.FallbackThreadLocalRandom $r0;
        java.lang.Object $r1;
        kotlin.random.FallbackThreadLocalRandom$implStorage$1 $r2;
        java.util.Random $r3;

        $r0 := @this: kotlin.random.FallbackThreadLocalRandom;

        $r2 = $r0.<kotlin.random.FallbackThreadLocalRandom: kotlin.random.FallbackThreadLocalRandom$implStorage$1 implStorage>;

        $r1 = virtualinvoke $r2.<kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.lang.Object get()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r1, "implStorage.get()");

        $r3 = (java.util.Random) $r1;

        return $r3;
    }

kotlin.random.FallbackThreadLocalRandom$implStorage$1
    void <init>()
    {
        kotlin.random.FallbackThreadLocalRandom$implStorage$1 $r0;

        $r0 := @this: kotlin.random.FallbackThreadLocalRandom$implStorage$1;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        return;
    }

    public volatile java.lang.Object initialValue()
    {
        kotlin.random.FallbackThreadLocalRandom$implStorage$1 $r0;
        java.util.Random $r1;

        $r0 := @this: kotlin.random.FallbackThreadLocalRandom$implStorage$1;

        $r1 = virtualinvoke $r0.<kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()>();

        return $r1;
    }

    protected java.util.Random initialValue()
    {
        kotlin.random.FallbackThreadLocalRandom$implStorage$1 $r0;
        java.util.Random $r1;

        $r0 := @this: kotlin.random.FallbackThreadLocalRandom$implStorage$1;

        $r1 = new java.util.Random;

        specialinvoke $r1.<java.util.Random: void <init>()>();

        return $r1;
    }

