androidx.resourceinspection.processor.InspectionCompanionGenerationKt
<androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName INSPECTION_COMPANION>
<androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName PROPERTY_MAPPER>
<androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName PROPERTY_READER>
<androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName UNINITIALIZED_EXCEPTION>
<androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName INT_FUNCTION>
<androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName STRING>
<androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName SET>
<androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName HASH_SET>
<androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec NON_NULL>
<androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec OVERRIDE>
<androidx.resourceinspection.processor.InspectionCompanionGenerationKt: int MIN_SDK>
<androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec REQUIRES_API>
<androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec RESTRICT_TO>
    public static final com.squareup.javapoet.JavaFile generateInspectionCompanion(androidx.resourceinspection.processor.View, com.squareup.javapoet.AnnotationSpec)
    {
        androidx.resourceinspection.processor.View r0;
        com.squareup.javapoet.AnnotationSpec r1, $r21, $r23, $r39, $r43, $r55, $r60, $r64, r137, r138, r139;
        com.squareup.javapoet.TypeSpec r2, $r99, $r104;
        boolean z0, z1, z3, z4, $z5, z6, z9, z10, z11, z12, $z15, z16, z17, $z18, z20, z21, $z24, z25, z28, z29, $z30, z31, z32, z33, z34, z35, $z36;
        java.lang.String r4, r5, r6, $r11, $r78, $r81, $r85, $r86, $r87, $r90, $r92, $r96, $r97, $r101, $r102, $r106, $r108, $r109, $r114, $r122, $r126, $r127, $r129, r150, r153, $r154, r174, r175, $r179, r180, $r181, r182, r185;
        com.squareup.javapoet.ClassName $r7, $r15, $r16, $r29, $r44, $r53, $r59, $r65, $r71, $r77;
        java.lang.CharSequence $r8, $r9, $r80, r151, r176;
        java.lang.Iterable $r10;
        javax.lang.model.element.Modifier $r12, $r13, $r31, $r41, $r57, $r115;
        com.squareup.javapoet.TypeName $r17, $r19, $r32, $r45, $r61, $r66, $r113;
        com.squareup.javapoet.ParameterizedTypeName $r18;
        javax.lang.model.element.TypeElement $r26;
        javax.lang.model.element.Element $r27;
        java.lang.Object[] $r33, $r49, $r69, r140, r167, r168, r169, r189, r192;
        com.squareup.javapoet.NameAllocator $r36, r146, r147, r155, r183, r184;
        java.util.List $r37, $r38, $r48, $r74, r133;
        javax.lang.model.element.Modifier[] $r46, $r62, $r67, r135, r141, $r158, r162, r186;
        com.squareup.javapoet.MethodSpec $r51, $r75;
        int $i0, $i1, $i2, i6;
        com.squareup.javapoet.JavaFile$Builder $r79, $r82;
        java.lang.Object $r83, $r94, $r112, $r117;
        androidx.resourceinspection.processor.AttributeType $r84, $r107, r166;
        java.lang.StringBuilder $r89, $r91, $r93, $r118, $r119, $r120, $r121, $r124, $r128, $r130, r152, r177;
        int[] $r95;
        com.squareup.javapoet.CodeBlock $r98, $r103, $r110;
        java.util.Locale $r125, r178;
        java.lang.NullPointerException $r131, $r132;
        com.squareup.javapoet.TypeSpec$Builder r134, r144, r161, r173;
        com.squareup.javapoet.TypeName[] r136;
        com.squareup.javapoet.FieldSpec$Builder r142;
        com.squareup.javapoet.FieldSpec r145;
        java.util.Iterator r148, r156, r164, r190;
        androidx.resourceinspection.processor.Attribute r149, r157, r165, r191;
        char c3, c4, c7;
        byte b5, b8;
        com.squareup.javapoet.MethodSpec$Builder r159, r160, r171, r172;
        com.squareup.javapoet.AnnotationSpec[] r163, r187, r188;
        kotlin.Unit r170, r193;
        com.squareup.javapoet.JavaFile r194;

        r0 := @parameter0: androidx.resourceinspection.processor.View;

        r1 := @parameter1: com.squareup.javapoet.AnnotationSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "view");

        $r7 = virtualinvoke r0.<androidx.resourceinspection.processor.View: com.squareup.javapoet.ClassName getClassName()>();

        r133 = virtualinvoke $r7.<com.squareup.javapoet.ClassName: java.util.List simpleNames()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r133, "view.className.simpleNames()");

        $r10 = (java.lang.Iterable) r133;

        $r9 = (java.lang.CharSequence) "$";

        $r8 = (java.lang.CharSequence) "$InspectionCompanion";

        $r11 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r10, $r9, null, $r8, 0, null, null, 58, null);

        r134 = staticinvoke <com.squareup.javapoet.TypeSpec: com.squareup.javapoet.TypeSpec$Builder classBuilder(java.lang.String)>($r11);

        z0 = 0;

        z1 = 0;

        r135 = newarray (javax.lang.model.element.Modifier)[2];

        $r12 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PUBLIC>;

        r135[0] = $r12;

        $r13 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier FINAL>;

        r135[1] = $r13;

        virtualinvoke r134.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>(r135);

        $r15 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName INSPECTION_COMPANION>;

        r136 = newarray (com.squareup.javapoet.TypeName)[1];

        $r16 = virtualinvoke r0.<androidx.resourceinspection.processor.View: com.squareup.javapoet.ClassName getClassName()>();

        $r17 = (com.squareup.javapoet.TypeName) $r16;

        r136[0] = $r17;

        $r18 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ParameterizedTypeName parameterized(com.squareup.javapoet.ClassName,com.squareup.javapoet.TypeName[])>($r15, r136);

        $r19 = (com.squareup.javapoet.TypeName) $r18;

        virtualinvoke r134.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addSuperinterface(com.squareup.javapoet.TypeName)>($r19);

        $r21 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec REQUIRES_API>;

        virtualinvoke r134.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addAnnotation(com.squareup.javapoet.AnnotationSpec)>($r21);

        $r23 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec RESTRICT_TO>;

        virtualinvoke r134.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addAnnotation(com.squareup.javapoet.AnnotationSpec)>($r23);

        r137 = r1;

        if r137 != null goto label01;

        goto label02;

     label01:
        r138 = r137;

        z6 = 0;

        r139 = r138;

        virtualinvoke r134.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addAnnotation(com.squareup.javapoet.AnnotationSpec)>(r139);

     label02:
        $r26 = virtualinvoke r0.<androidx.resourceinspection.processor.View: javax.lang.model.element.TypeElement getType()>();

        $r27 = (javax.lang.model.element.Element) $r26;

        virtualinvoke r134.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addOriginatingElement(javax.lang.model.element.Element)>($r27);

        r140 = newarray (java.lang.Object)[1];

        $r29 = virtualinvoke r0.<androidx.resourceinspection.processor.View: com.squareup.javapoet.ClassName getClassName()>();

        r140[0] = $r29;

        virtualinvoke r134.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addJavadoc(java.lang.String,java.lang.Object[])>("Inspection companion for {@link $T}.\n\n@hide", r140);

        $r32 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName BOOLEAN>;

        r141 = newarray (javax.lang.model.element.Modifier)[1];

        $r31 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PRIVATE>;

        r141[0] = $r31;

        r142 = staticinvoke <com.squareup.javapoet.FieldSpec: com.squareup.javapoet.FieldSpec$Builder builder(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>($r32, "mPropertiesMapped", r141);

        z9 = 0;

        z10 = 0;

        r144 = r134;

        z11 = 0;

        $r33 = newarray (java.lang.Object)[0];

        virtualinvoke r142.<com.squareup.javapoet.FieldSpec$Builder: com.squareup.javapoet.FieldSpec$Builder initializer(java.lang.String,java.lang.Object[])>("false", $r33);

        r145 = virtualinvoke r142.<com.squareup.javapoet.FieldSpec$Builder: com.squareup.javapoet.FieldSpec build()>();

        virtualinvoke r144.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addField(com.squareup.javapoet.FieldSpec)>(r145);

        $r36 = new com.squareup.javapoet.NameAllocator;

        specialinvoke $r36.<com.squareup.javapoet.NameAllocator: void <init>()>();

        r146 = $r36;

        z12 = 0;

        r147 = r146;

        $r37 = virtualinvoke r0.<androidx.resourceinspection.processor.View: java.util.List getAttributes()>();

        r148 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z15 = interfaceinvoke r148.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label10;

        $r117 = interfaceinvoke r148.<java.util.Iterator: java.lang.Object next()>();

        r149 = (androidx.resourceinspection.processor.Attribute) $r117;

        r150 = interfaceinvoke r149.<androidx.resourceinspection.processor.Attribute: java.lang.String getName()>();

        z16 = 0;

        r151 = (java.lang.CharSequence) r150;

        z17 = 0;

        $i2 = interfaceinvoke r151.<java.lang.CharSequence: int length()>();

        if $i2 <= 0 goto label04;

        $z18 = 1;

        goto label05;

     label04:
        $z18 = 0;

     label05:
        if $z18 == 0 goto label08;

        $r124 = new java.lang.StringBuilder;

        specialinvoke $r124.<java.lang.StringBuilder: void <init>()>();

        c3 = virtualinvoke r150.<java.lang.String: char charAt(int)>(0);

        r152 = $r124;

        c4 = c3;

        z3 = 0;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c4);

        z4 = 0;

        if r4 != null goto label06;

        $r132 = new java.lang.NullPointerException;

        specialinvoke $r132.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r132;

     label06:
        $r125 = <java.util.Locale: java.util.Locale ROOT>;

        $r126 = virtualinvoke r4.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r125);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r126, "(this as java.lang.Strin\u2026.toUpperCase(Locale.ROOT)");

        r5 = $r126;

        $r127 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        $r128 = virtualinvoke r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r127);

        r153 = r150;

        b5 = 1;

        z20 = 0;

        if r153 != null goto label07;

        $r131 = new java.lang.NullPointerException;

        specialinvoke $r131.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r131;

     label07:
        $r129 = virtualinvoke r153.<java.lang.String: java.lang.String substring(int)>(b5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r129, "(this as java.lang.String).substring(startIndex)");

        $r130 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r129);

        $r154 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label09;

     label08:
        $r154 = r150;

     label09:
        r6 = $r154;

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(109);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Id");

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r147.<com.squareup.javapoet.NameAllocator: java.lang.String newName(java.lang.String,java.lang.Object)>($r122, r149);

        goto label03;

     label10:
        r155 = r146;

        $r38 = virtualinvoke r0.<androidx.resourceinspection.processor.View: java.util.List getAttributes()>();

        r156 = interfaceinvoke $r38.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z5 = interfaceinvoke r156.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label12;

        $r112 = interfaceinvoke r156.<java.util.Iterator: java.lang.Object next()>();

        r157 = (androidx.resourceinspection.processor.Attribute) $r112;

        $r113 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName INT>;

        $r114 = virtualinvoke r155.<com.squareup.javapoet.NameAllocator: java.lang.String get(java.lang.Object)>(r157);

        $r158 = newarray (javax.lang.model.element.Modifier)[1];

        $r115 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PRIVATE>;

        $r158[0] = $r115;

        virtualinvoke r134.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addField(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>($r113, $r114, $r158);

        goto label11;

     label12:
        r159 = staticinvoke <com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder methodBuilder(java.lang.String)>("mapProperties");

        z21 = 0;

        r160 = r159;

        r161 = r134;

        $r39 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec OVERRIDE>;

        virtualinvoke r160.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addAnnotation(com.squareup.javapoet.AnnotationSpec)>($r39);

        r162 = newarray (javax.lang.model.element.Modifier)[1];

        $r41 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PUBLIC>;

        r162[0] = $r41;

        virtualinvoke r160.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>(r162);

        $r44 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName PROPERTY_MAPPER>;

        r163 = newarray (com.squareup.javapoet.AnnotationSpec)[1];

        $r43 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec NON_NULL>;

        r163[0] = $r43;

        $r45 = virtualinvoke $r44.<com.squareup.javapoet.ClassName: com.squareup.javapoet.TypeName annotated(com.squareup.javapoet.AnnotationSpec[])>(r163);

        $r46 = newarray (javax.lang.model.element.Modifier)[0];

        virtualinvoke r160.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addParameter(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>($r45, "propertyMapper", $r46);

        $r48 = virtualinvoke r0.<androidx.resourceinspection.processor.View: java.util.List getAttributes()>();

        r164 = interfaceinvoke $r48.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z24 = interfaceinvoke r164.<java.util.Iterator: boolean hasNext()>();

        if $z24 == 0 goto label17;

        $r94 = interfaceinvoke r164.<java.util.Iterator: java.lang.Object next()>();

        r165 = (androidx.resourceinspection.processor.Attribute) $r94;

        r166 = interfaceinvoke r165.<androidx.resourceinspection.processor.Attribute: androidx.resourceinspection.processor.AttributeType getType()>();

        $r95 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i1 = virtualinvoke r166.<androidx.resourceinspection.processor.AttributeType: int ordinal()>();

        i6 = $r95[$i1];

        tableswitch(i6)
        {
            case 1: goto label14;
            case 2: goto label15;
            default: goto label16;
        };

     label14:
        r167 = newarray (java.lang.Object)[4];

        $r101 = virtualinvoke r155.<com.squareup.javapoet.NameAllocator: java.lang.String get(java.lang.Object)>(r165);

        r167[0] = $r101;

        $r102 = interfaceinvoke r165.<androidx.resourceinspection.processor.Attribute: java.lang.String getName()>();

        r167[1] = $r102;

        $r103 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.CodeBlock getAttrReference(androidx.resourceinspection.processor.Attribute)>(r165);

        r167[2] = $r103;

        $r104 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.TypeSpec intEnumLambda(androidx.resourceinspection.processor.Attribute)>(r165);

        r167[3] = $r104;

        virtualinvoke r160.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>("$N = propertyMapper.mapIntEnum($S, $L, $L)", r167);

        goto label13;

     label15:
        r168 = newarray (java.lang.Object)[4];

        $r96 = virtualinvoke r155.<com.squareup.javapoet.NameAllocator: java.lang.String get(java.lang.Object)>(r165);

        r168[0] = $r96;

        $r97 = interfaceinvoke r165.<androidx.resourceinspection.processor.Attribute: java.lang.String getName()>();

        r168[1] = $r97;

        $r98 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.CodeBlock getAttrReference(androidx.resourceinspection.processor.Attribute)>(r165);

        r168[2] = $r98;

        $r99 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.TypeSpec intFlagLambda(androidx.resourceinspection.processor.Attribute)>(r165);

        r168[3] = $r99;

        virtualinvoke r160.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>("$N = propertyMapper.mapIntFlag($S, $L, $L)", r168);

        goto label13;

     label16:
        r169 = newarray (java.lang.Object)[4];

        $r106 = virtualinvoke r155.<com.squareup.javapoet.NameAllocator: java.lang.String get(java.lang.Object)>(r165);

        r169[0] = $r106;

        $r107 = interfaceinvoke r165.<androidx.resourceinspection.processor.Attribute: androidx.resourceinspection.processor.AttributeType getType()>();

        $r108 = virtualinvoke $r107.<androidx.resourceinspection.processor.AttributeType: java.lang.String getApiSuffix()>();

        r169[1] = $r108;

        $r109 = interfaceinvoke r165.<androidx.resourceinspection.processor.Attribute: java.lang.String getName()>();

        r169[2] = $r109;

        $r110 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.CodeBlock getAttrReference(androidx.resourceinspection.processor.Attribute)>(r165);

        r169[3] = $r110;

        virtualinvoke r160.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>("$N = propertyMapper.map$L($S, $L)", r169);

        goto label13;

     label17:
        $r49 = newarray (java.lang.Object)[0];

        virtualinvoke r160.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>("mPropertiesMapped = true", $r49);

        r170 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r51 = virtualinvoke r159.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec build()>();

        virtualinvoke r161.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addMethod(com.squareup.javapoet.MethodSpec)>($r51);

        r171 = staticinvoke <com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder methodBuilder(java.lang.String)>("readProperties");

        z25 = 0;

        r172 = r171;

        r173 = r134;

        $r53 = virtualinvoke r0.<androidx.resourceinspection.processor.View: com.squareup.javapoet.ClassName getClassName()>();

        r174 = virtualinvoke $r53.<com.squareup.javapoet.ClassName: java.lang.String simpleName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r174, "view.className.simpleName()");

        r175 = r174;

        z28 = 0;

        r176 = (java.lang.CharSequence) r175;

        z29 = 0;

        $i0 = interfaceinvoke r176.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label18;

        $z30 = 1;

        goto label19;

     label18:
        $z30 = 0;

     label19:
        if $z30 == 0 goto label20;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        c7 = virtualinvoke r175.<java.lang.String: char charAt(int)>(0);

        r177 = $r89;

        z31 = 0;

        r178 = <java.util.Locale: java.util.Locale US>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r178, "US");

        $r179 = staticinvoke <kotlin.text.CharsKt: java.lang.String lowercase(char,java.util.Locale)>(c7, r178);

        $r90 = virtualinvoke $r179.<java.lang.Object: java.lang.String toString()>();

        $r91 = virtualinvoke r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        r180 = r175;

        b8 = 1;

        z32 = 0;

        $r92 = virtualinvoke r180.<java.lang.String: java.lang.String substring(int)>(b8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r92, "(this as java.lang.String).substring(startIndex)");

        $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r181 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label21;

     label20:
        $r181 = r175;

     label21:
        r182 = $r181;

        r183 = virtualinvoke r155.<com.squareup.javapoet.NameAllocator: com.squareup.javapoet.NameAllocator clone()>();

        z33 = 0;

        z34 = 0;

        r184 = r183;

        z35 = 0;

        virtualinvoke r184.<com.squareup.javapoet.NameAllocator: java.lang.String newName(java.lang.String)>("propertyReader");

        r185 = virtualinvoke r183.<com.squareup.javapoet.NameAllocator: java.lang.String newName(java.lang.String)>(r182);

        $r55 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec OVERRIDE>;

        virtualinvoke r172.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addAnnotation(com.squareup.javapoet.AnnotationSpec)>($r55);

        r186 = newarray (javax.lang.model.element.Modifier)[1];

        $r57 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PUBLIC>;

        r186[0] = $r57;

        virtualinvoke r172.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>(r186);

        $r59 = virtualinvoke r0.<androidx.resourceinspection.processor.View: com.squareup.javapoet.ClassName getClassName()>();

        r187 = newarray (com.squareup.javapoet.AnnotationSpec)[1];

        $r60 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec NON_NULL>;

        r187[0] = $r60;

        $r61 = virtualinvoke $r59.<com.squareup.javapoet.ClassName: com.squareup.javapoet.TypeName annotated(com.squareup.javapoet.AnnotationSpec[])>(r187);

        $r62 = newarray (javax.lang.model.element.Modifier)[0];

        virtualinvoke r172.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addParameter(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>($r61, r185, $r62);

        $r65 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName PROPERTY_READER>;

        r188 = newarray (com.squareup.javapoet.AnnotationSpec)[1];

        $r64 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec NON_NULL>;

        r188[0] = $r64;

        $r66 = virtualinvoke $r65.<com.squareup.javapoet.ClassName: com.squareup.javapoet.TypeName annotated(com.squareup.javapoet.AnnotationSpec[])>(r188);

        $r67 = newarray (javax.lang.model.element.Modifier)[0];

        virtualinvoke r172.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addParameter(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>($r66, "propertyReader", $r67);

        $r69 = newarray (java.lang.Object)[0];

        virtualinvoke r172.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder beginControlFlow(java.lang.String,java.lang.Object[])>("if (!mPropertiesMapped)", $r69);

        r189 = newarray (java.lang.Object)[1];

        $r71 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName UNINITIALIZED_EXCEPTION>;

        r189[0] = $r71;

        virtualinvoke r172.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>("throw new $T()", r189);

        virtualinvoke r172.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder endControlFlow()>();

        $r74 = virtualinvoke r0.<androidx.resourceinspection.processor.View: java.util.List getAttributes()>();

        r190 = interfaceinvoke $r74.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $z36 = interfaceinvoke r190.<java.util.Iterator: boolean hasNext()>();

        if $z36 == 0 goto label23;

        $r83 = interfaceinvoke r190.<java.util.Iterator: java.lang.Object next()>();

        r191 = (androidx.resourceinspection.processor.Attribute) $r83;

        r192 = newarray (java.lang.Object)[4];

        $r84 = interfaceinvoke r191.<androidx.resourceinspection.processor.Attribute: androidx.resourceinspection.processor.AttributeType getType()>();

        $r85 = virtualinvoke $r84.<androidx.resourceinspection.processor.AttributeType: java.lang.String getApiSuffix()>();

        r192[0] = $r85;

        $r86 = virtualinvoke r155.<com.squareup.javapoet.NameAllocator: java.lang.String get(java.lang.Object)>(r191);

        r192[1] = $r86;

        r192[2] = r185;

        $r87 = interfaceinvoke r191.<androidx.resourceinspection.processor.Attribute: java.lang.String getInvocation()>();

        r192[3] = $r87;

        virtualinvoke r172.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>("propertyReader.read$L($N, $N.$L)", r192);

        goto label22;

     label23:
        r193 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r75 = virtualinvoke r171.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec build()>();

        virtualinvoke r173.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addMethod(com.squareup.javapoet.MethodSpec)>($r75);

        r2 = virtualinvoke r134.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec build()>();

        $r77 = virtualinvoke r0.<androidx.resourceinspection.processor.View: com.squareup.javapoet.ClassName getClassName()>();

        $r78 = virtualinvoke $r77.<com.squareup.javapoet.ClassName: java.lang.String packageName()>();

        $r79 = staticinvoke <com.squareup.javapoet.JavaFile: com.squareup.javapoet.JavaFile$Builder builder(java.lang.String,com.squareup.javapoet.TypeSpec)>($r78, r2);

        $r80 = (java.lang.CharSequence) " ";

        $r81 = staticinvoke <kotlin.text.StringsKt: java.lang.String repeat(java.lang.CharSequence,int)>($r80, 4);

        $r82 = virtualinvoke $r79.<com.squareup.javapoet.JavaFile$Builder: com.squareup.javapoet.JavaFile$Builder indent(java.lang.String)>($r81);

        r194 = virtualinvoke $r82.<com.squareup.javapoet.JavaFile$Builder: com.squareup.javapoet.JavaFile build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r194, "builder(view.className.p\u2026peat(4))\n        .build()");

        return r194;
    }

    private static final com.squareup.javapoet.TypeSpec intEnumLambda(androidx.resourceinspection.processor.Attribute)
    {
        androidx.resourceinspection.processor.Attribute r0;
        com.squareup.javapoet.TypeSpec r1;
        com.squareup.javapoet.TypeSpec$Builder r2, r5;
        boolean z0, z1, z3, z4, $z8;
        java.util.Iterator r6;
        java.lang.Object r7;
        androidx.resourceinspection.processor.IntMap $r8;
        java.lang.String r9;
        int i0;
        java.lang.Object[] r10, $r12, $r29, $r43;
        kotlin.Unit r11;
        com.squareup.javapoet.ClassName $r13, $r15, $r23, $r32;
        com.squareup.javapoet.TypeName $r14, $r17, $r24, $r27;
        com.squareup.javapoet.ParameterizedTypeName $r16;
        com.squareup.javapoet.AnnotationSpec $r19;
        javax.lang.model.element.Modifier $r21;
        javax.lang.model.element.Modifier[] $r26, $r41;
        java.util.List $r31;
        com.squareup.javapoet.MethodSpec $r35;
        java.lang.Integer $r37;
        com.squareup.javapoet.TypeName[] r39;
        com.squareup.javapoet.MethodSpec$Builder r40;
        java.lang.Iterable $r42;

        r0 := @parameter0: androidx.resourceinspection.processor.Attribute;

        $r12 = newarray (java.lang.Object)[0];

        r2 = staticinvoke <com.squareup.javapoet.TypeSpec: com.squareup.javapoet.TypeSpec$Builder anonymousClassBuilder(java.lang.String,java.lang.Object[])>("", $r12);

        z0 = 0;

        z1 = 0;

        $r15 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName INT_FUNCTION>;

        r39 = newarray (com.squareup.javapoet.TypeName)[1];

        $r13 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName STRING>;

        $r14 = (com.squareup.javapoet.TypeName) $r13;

        r39[0] = $r14;

        $r16 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ParameterizedTypeName parameterized(com.squareup.javapoet.ClassName,com.squareup.javapoet.TypeName[])>($r15, r39);

        $r17 = (com.squareup.javapoet.TypeName) $r16;

        virtualinvoke r2.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addSuperinterface(com.squareup.javapoet.TypeName)>($r17);

        r40 = staticinvoke <com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder methodBuilder(java.lang.String)>("apply");

        z3 = 0;

        z4 = 0;

        r5 = r2;

        $r19 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec OVERRIDE>;

        virtualinvoke r40.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addAnnotation(com.squareup.javapoet.AnnotationSpec)>($r19);

        $r41 = newarray (javax.lang.model.element.Modifier)[1];

        $r21 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PUBLIC>;

        $r41[0] = $r21;

        virtualinvoke r40.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>($r41);

        $r23 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName STRING>;

        $r24 = (com.squareup.javapoet.TypeName) $r23;

        virtualinvoke r40.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder returns(com.squareup.javapoet.TypeName)>($r24);

        $r27 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName INT>;

        $r26 = newarray (javax.lang.model.element.Modifier)[0];

        virtualinvoke r40.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addParameter(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>($r27, "value", $r26);

        $r29 = newarray (java.lang.Object)[0];

        virtualinvoke r40.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder beginControlFlow(java.lang.String,java.lang.Object[])>("switch (value)", $r29);

        $r31 = interfaceinvoke r0.<androidx.resourceinspection.processor.Attribute: java.util.List getIntMapping()>();

        $r42 = (java.lang.Iterable) $r31;

        r6 = interfaceinvoke $r42.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z8 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label2;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (androidx.resourceinspection.processor.IntMap) r7;

        r9 = virtualinvoke $r8.<androidx.resourceinspection.processor.IntMap: java.lang.String component1()>();

        i0 = virtualinvoke $r8.<androidx.resourceinspection.processor.IntMap: int component2()>();

        r10 = newarray (java.lang.Object)[2];

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r10[0] = $r37;

        r10[1] = r9;

        virtualinvoke r40.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addCode(java.lang.String,java.lang.Object[])>("case $L:\n$>return $S;\n$<", r10);

        goto label1;

     label2:
        $r43 = newarray (java.lang.Object)[1];

        $r32 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName STRING>;

        $r43[0] = $r32;

        virtualinvoke r40.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addCode(java.lang.String,java.lang.Object[])>("default:\n$>return $T.valueOf(value);\n$<", $r43);

        virtualinvoke r40.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder endControlFlow()>();

        r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r35 = virtualinvoke r40.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec build()>();

        virtualinvoke r5.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addMethod(com.squareup.javapoet.MethodSpec)>($r35);

        r1 = virtualinvoke r2.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "anonymousClassBuilder(\"\"\u2026)\n        )\n    }.build()");

        return r1;
    }

    private static final com.squareup.javapoet.TypeSpec intFlagLambda(androidx.resourceinspection.processor.Attribute)
    {
        androidx.resourceinspection.processor.Attribute r0;
        com.squareup.javapoet.ParameterizedTypeName r1, $r20, r47;
        com.squareup.javapoet.TypeSpec$Builder r2, r5;
        boolean z0, z1, z3, z4, $z8;
        java.util.Iterator r6;
        java.lang.Object r7;
        androidx.resourceinspection.processor.IntMap $r8;
        java.lang.String r9;
        int i0, i1;
        kotlin.Unit r10;
        com.squareup.javapoet.ClassName $r11, $r13, $r14, $r16, $r19;
        com.squareup.javapoet.TypeName $r12, $r15, $r18, $r21, $r27, $r30;
        java.lang.Object[] $r17, $r34, $r51, r53, r54, r55;
        com.squareup.javapoet.AnnotationSpec $r23;
        javax.lang.model.element.Modifier $r25;
        javax.lang.model.element.Modifier[] $r29, $r50;
        java.util.List $r33;
        com.squareup.javapoet.MethodSpec $r36;
        java.lang.Integer $r38, $r42, $r43;
        com.squareup.javapoet.TypeName[] r45, r46, r48;
        com.squareup.javapoet.MethodSpec$Builder r49;
        java.lang.Iterable $r52;
        com.squareup.javapoet.TypeSpec r56;

        r0 := @parameter0: androidx.resourceinspection.processor.Attribute;

        $r13 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName SET>;

        r45 = newarray (com.squareup.javapoet.TypeName)[1];

        $r11 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName STRING>;

        $r12 = (com.squareup.javapoet.TypeName) $r11;

        r45[0] = $r12;

        r1 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ParameterizedTypeName parameterized(com.squareup.javapoet.ClassName,com.squareup.javapoet.TypeName[])>($r13, r45);

        $r16 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName HASH_SET>;

        r46 = newarray (com.squareup.javapoet.TypeName)[1];

        $r14 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName STRING>;

        $r15 = (com.squareup.javapoet.TypeName) $r14;

        r46[0] = $r15;

        r47 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ParameterizedTypeName parameterized(com.squareup.javapoet.ClassName,com.squareup.javapoet.TypeName[])>($r16, r46);

        $r17 = newarray (java.lang.Object)[0];

        r2 = staticinvoke <com.squareup.javapoet.TypeSpec: com.squareup.javapoet.TypeSpec$Builder anonymousClassBuilder(java.lang.String,java.lang.Object[])>("", $r17);

        z0 = 0;

        z1 = 0;

        $r19 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName INT_FUNCTION>;

        r48 = newarray (com.squareup.javapoet.TypeName)[1];

        $r18 = (com.squareup.javapoet.TypeName) r1;

        r48[0] = $r18;

        $r20 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ParameterizedTypeName parameterized(com.squareup.javapoet.ClassName,com.squareup.javapoet.TypeName[])>($r19, r48);

        $r21 = (com.squareup.javapoet.TypeName) $r20;

        virtualinvoke r2.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addSuperinterface(com.squareup.javapoet.TypeName)>($r21);

        r49 = staticinvoke <com.squareup.javapoet.MethodSpec: com.squareup.javapoet.MethodSpec$Builder methodBuilder(java.lang.String)>("apply");

        z3 = 0;

        z4 = 0;

        r5 = r2;

        $r23 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec OVERRIDE>;

        virtualinvoke r49.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addAnnotation(com.squareup.javapoet.AnnotationSpec)>($r23);

        $r50 = newarray (javax.lang.model.element.Modifier)[1];

        $r25 = <javax.lang.model.element.Modifier: javax.lang.model.element.Modifier PUBLIC>;

        $r50[0] = $r25;

        virtualinvoke r49.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addModifiers(javax.lang.model.element.Modifier[])>($r50);

        $r27 = (com.squareup.javapoet.TypeName) r1;

        virtualinvoke r49.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder returns(com.squareup.javapoet.TypeName)>($r27);

        $r30 = <com.squareup.javapoet.TypeName: com.squareup.javapoet.TypeName INT>;

        $r29 = newarray (javax.lang.model.element.Modifier)[0];

        virtualinvoke r49.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addParameter(com.squareup.javapoet.TypeName,java.lang.String,javax.lang.model.element.Modifier[])>($r30, "value", $r29);

        $r51 = newarray (java.lang.Object)[2];

        $r51[0] = r1;

        $r51[1] = r47;

        virtualinvoke r49.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>("final $T flags = new $T()", $r51);

        $r33 = interfaceinvoke r0.<androidx.resourceinspection.processor.Attribute: java.util.List getIntMapping()>();

        $r52 = (java.lang.Iterable) $r33;

        r6 = interfaceinvoke $r52.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z8 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label5;

        r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (androidx.resourceinspection.processor.IntMap) r7;

        r9 = virtualinvoke $r8.<androidx.resourceinspection.processor.IntMap: java.lang.String component1()>();

        i0 = virtualinvoke $r8.<androidx.resourceinspection.processor.IntMap: int component2()>();

        i1 = virtualinvoke $r8.<androidx.resourceinspection.processor.IntMap: int component3()>();

        if i0 == i1 goto label2;

        if i1 != 0 goto label3;

     label2:
        r53 = newarray (java.lang.Object)[1];

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r53[0] = $r38;

        virtualinvoke r49.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder beginControlFlow(java.lang.String,java.lang.Object[])>("if (value == $L)", r53);

        goto label4;

     label3:
        r54 = newarray (java.lang.Object)[2];

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r54[0] = $r42;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r54[1] = $r43;

        virtualinvoke r49.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder beginControlFlow(java.lang.String,java.lang.Object[])>("if ((value & $L) == $L)", r54);

     label4:
        r55 = newarray (java.lang.Object)[1];

        r55[0] = r9;

        virtualinvoke r49.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>("flags.add($S)", r55);

        virtualinvoke r49.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder endControlFlow()>();

        goto label1;

     label5:
        $r34 = newarray (java.lang.Object)[0];

        virtualinvoke r49.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec$Builder addStatement(java.lang.String,java.lang.Object[])>("return flags", $r34);

        r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r36 = virtualinvoke r49.<com.squareup.javapoet.MethodSpec$Builder: com.squareup.javapoet.MethodSpec build()>();

        virtualinvoke r5.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec$Builder addMethod(com.squareup.javapoet.MethodSpec)>($r36);

        r56 = virtualinvoke r2.<com.squareup.javapoet.TypeSpec$Builder: com.squareup.javapoet.TypeSpec build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r56, "anonymousClassBuilder(\"\"\u2026)\n        )\n    }.build()");

        return r56;
    }

    private static final com.squareup.javapoet.CodeBlock getAttrReference(androidx.resourceinspection.processor.Attribute)
    {
        androidx.resourceinspection.processor.Attribute $r0;
        com.squareup.javapoet.CodeBlock r1;
        java.lang.Object[] r2;
        java.lang.String $r3, $r6;
        java.lang.String[] $r4;
        com.squareup.javapoet.ClassName $r5;

        $r0 := @parameter0: androidx.resourceinspection.processor.Attribute;

        r2 = newarray (java.lang.Object)[2];

        $r3 = interfaceinvoke $r0.<androidx.resourceinspection.processor.Attribute: java.lang.String getNamespace()>();

        $r4 = newarray (java.lang.String)[0];

        $r5 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>($r3, "R", $r4);

        r2[0] = $r5;

        $r6 = interfaceinvoke $r0.<androidx.resourceinspection.processor.Attribute: java.lang.String getName()>();

        r2[1] = $r6;

        r1 = staticinvoke <com.squareup.javapoet.CodeBlock: com.squareup.javapoet.CodeBlock of(java.lang.String,java.lang.Object[])>("$T.attr.$N", r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "of(\"\\$T.attr.\\$N\", Class\u2026et(namespace, \"R\"), name)");

        return r1;
    }

    private static final com.squareup.javapoet.ClassName className(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        com.squareup.javapoet.ClassName r2;
        java.lang.String[] $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r3 = newarray (java.lang.String)[0];

        r2 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>(r0, r1, $r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "get(packageName, simpleName)");

        return r2;
    }

    private static final transient com.squareup.javapoet.ParameterizedTypeName parameterized(com.squareup.javapoet.ClassName, com.squareup.javapoet.TypeName[])
    {
        com.squareup.javapoet.ClassName $r0;
        com.squareup.javapoet.TypeName[] r1, $r4;
        com.squareup.javapoet.ParameterizedTypeName r2;
        int $i0;
        java.lang.Object[] $r3;

        $r0 := @parameter0: com.squareup.javapoet.ClassName;

        r1 := @parameter1: com.squareup.javapoet.TypeName[];

        $i0 = lengthof r1;

        $r3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r1, $i0);

        $r4 = (com.squareup.javapoet.TypeName[]) $r3;

        r2 = staticinvoke <com.squareup.javapoet.ParameterizedTypeName: com.squareup.javapoet.ParameterizedTypeName get(com.squareup.javapoet.ClassName,com.squareup.javapoet.TypeName[])>($r0, $r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "get(this, *types)");

        return r2;
    }

    static void <clinit>()
    {
        java.lang.String[] r0, $r9, $r12, $r15, $r20;
        com.squareup.javapoet.ClassName $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r13, $r16, $r21, $r23, r25;
        com.squareup.javapoet.AnnotationSpec$Builder $r11, $r14, $r17, $r19, $r22, $r24;
        java.lang.Integer $r18;
        com.squareup.javapoet.AnnotationSpec r26, r27, r29, r31;
        java.lang.Object[] r28, r30;

        $r1 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName className(java.lang.String,java.lang.String)>("android.view.inspector", "InspectionCompanion");

        <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName INSPECTION_COMPANION> = $r1;

        $r2 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName className(java.lang.String,java.lang.String)>("android.view.inspector", "PropertyMapper");

        <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName PROPERTY_MAPPER> = $r2;

        $r3 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName className(java.lang.String,java.lang.String)>("android.view.inspector", "PropertyReader");

        <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName PROPERTY_READER> = $r3;

        $r4 = <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName INSPECTION_COMPANION>;

        r25 = virtualinvoke $r4.<com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName nestedClass(java.lang.String)>("UninitializedPropertyMapException");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r25, "INSPECTION_COMPANION.nes\u2026zedPropertyMapException\")");

        <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName UNINITIALIZED_EXCEPTION> = r25;

        $r5 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName className(java.lang.String,java.lang.String)>("java.util.function", "IntFunction");

        <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName INT_FUNCTION> = $r5;

        $r6 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName className(java.lang.String,java.lang.String)>("java.lang", "String");

        <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName STRING> = $r6;

        $r7 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName className(java.lang.String,java.lang.String)>("java.util", "Set");

        <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName SET> = $r7;

        $r8 = staticinvoke <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName className(java.lang.String,java.lang.String)>("java.util", "HashSet");

        <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.ClassName HASH_SET> = $r8;

        $r9 = newarray (java.lang.String)[0];

        $r10 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("androidx.annotation", "NonNull", $r9);

        $r11 = staticinvoke <com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec$Builder builder(com.squareup.javapoet.ClassName)>($r10);

        r26 = virtualinvoke $r11.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r26, "builder(ClassName.get(\"a\u2026ion\", \"NonNull\")).build()");

        <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec NON_NULL> = r26;

        $r12 = newarray (java.lang.String)[0];

        $r13 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("java.lang", "Override", $r12);

        $r14 = staticinvoke <com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec$Builder builder(com.squareup.javapoet.ClassName)>($r13);

        r27 = virtualinvoke $r14.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r27, "builder(ClassName.get(\"j\u2026ng\", \"Override\")).build()");

        <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec OVERRIDE> = r27;

        $r15 = newarray (java.lang.String)[0];

        $r16 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("androidx.annotation", "RequiresApi", $r15);

        $r17 = staticinvoke <com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec$Builder builder(com.squareup.javapoet.ClassName)>($r16);

        r28 = newarray (java.lang.Object)[1];

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(29);

        r28[0] = $r18;

        $r19 = virtualinvoke $r17.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec$Builder addMember(java.lang.String,java.lang.String,java.lang.Object[])>("value", "$L", r28);

        r29 = virtualinvoke $r19.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r29, "builder(ClassName.get(\"a\u2026MIN_SDK)\n        .build()");

        <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec REQUIRES_API> = r29;

        $r20 = newarray (java.lang.String)[0];

        $r21 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("androidx.annotation", "RestrictTo", $r20);

        $r22 = staticinvoke <com.squareup.javapoet.AnnotationSpec: com.squareup.javapoet.AnnotationSpec$Builder builder(com.squareup.javapoet.ClassName)>($r21);

        r30 = newarray (java.lang.Object)[1];

        r0 = newarray (java.lang.String)[1];

        r0[0] = "Scope";

        $r23 = staticinvoke <com.squareup.javapoet.ClassName: com.squareup.javapoet.ClassName get(java.lang.String,java.lang.String,java.lang.String[])>("androidx.annotation", "RestrictTo", r0);

        r30[0] = $r23;

        $r24 = virtualinvoke $r22.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec$Builder addMember(java.lang.String,java.lang.String,java.lang.Object[])>("value", "$T.LIBRARY", r30);

        r31 = virtualinvoke $r24.<com.squareup.javapoet.AnnotationSpec$Builder: com.squareup.javapoet.AnnotationSpec build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r31, "<clinit>");

        <androidx.resourceinspection.processor.InspectionCompanionGenerationKt: com.squareup.javapoet.AnnotationSpec RESTRICT_TO> = r31;

        return;
    }

