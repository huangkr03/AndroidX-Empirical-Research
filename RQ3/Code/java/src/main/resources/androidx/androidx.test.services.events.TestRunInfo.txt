androidx.test.services.events.TestRunInfo
<androidx.test.services.events.TestRunInfo: android.os.Parcelable$Creator CREATOR>
<androidx.test.services.events.TestRunInfo: java.lang.String testRunName>
<androidx.test.services.events.TestRunInfo: java.util.List testCases>
    public int describeContents()
    {
        androidx.test.services.events.TestRunInfo r0;

        r0 := @this: androidx.test.services.events.TestRunInfo;

        return 0;
    }

    static void <clinit>()
    {
        androidx.test.services.events.TestRunInfo$1 $r0;

        $r0 = new androidx.test.services.events.TestRunInfo$1;

        specialinvoke $r0.<androidx.test.services.events.TestRunInfo$1: void <init>()>();

        <androidx.test.services.events.TestRunInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        androidx.test.services.events.TestRunInfo r0;
        android.os.Parcel r1;
        java.lang.String $r3, $r5;
        java.lang.Object $r4;
        java.util.ArrayList $r6;
        android.os.Parcelable$Creator $r7;
        java.util.List $r8;

        r0 := @this: androidx.test.services.events.TestRunInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "source cannot be null");

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r4 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, "className cannot be null");

        $r5 = (java.lang.String) $r4;

        r0.<androidx.test.services.events.TestRunInfo: java.lang.String testRunName> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<androidx.test.services.events.TestRunInfo: java.util.List testCases> = $r6;

        $r8 = r0.<androidx.test.services.events.TestRunInfo: java.util.List testCases>;

        $r7 = <androidx.test.services.events.TestCaseInfo: android.os.Parcelable$Creator CREATOR>;

        virtualinvoke r1.<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>($r8, $r7);

        return;
    }

    public void <init>(java.lang.String, java.util.List)
    {
        androidx.test.services.events.TestRunInfo r0;
        java.lang.String r1, $r4;
        java.util.List r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: androidx.test.services.events.TestRunInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "testRunName cannot be null");

        $r4 = (java.lang.String) $r3;

        r0.<androidx.test.services.events.TestRunInfo: java.lang.String testRunName> = $r4;

        $r5 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "testCases cannot be null");

        $r6 = (java.util.List) $r5;

        r0.<androidx.test.services.events.TestRunInfo: java.util.List testCases> = $r6;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.test.services.events.TestRunInfo r0;
        android.os.Parcel r1;
        int i0;
        java.lang.String $r2;
        java.util.List $r3;

        r0 := @this: androidx.test.services.events.TestRunInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.test.services.events.TestRunInfo: java.lang.String testRunName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<androidx.test.services.events.TestRunInfo: java.util.List testCases>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedList(java.util.List)>($r3);

        return;
    }

androidx.test.services.events.TestRunInfo$1
    public androidx.test.services.events.TestRunInfo createFromParcel(android.os.Parcel)
    {
        androidx.test.services.events.TestRunInfo$1 r0;
        android.os.Parcel r1;
        androidx.test.services.events.TestRunInfo $r2;

        r0 := @this: androidx.test.services.events.TestRunInfo$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new androidx.test.services.events.TestRunInfo;

        specialinvoke $r2.<androidx.test.services.events.TestRunInfo: void <init>(android.os.Parcel)>(r1);

        return $r2;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.test.services.events.TestRunInfo$1 r0;
        android.os.Parcel r1;
        androidx.test.services.events.TestRunInfo $r2;

        r0 := @this: androidx.test.services.events.TestRunInfo$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.test.services.events.TestRunInfo$1: androidx.test.services.events.TestRunInfo createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    void <init>()
    {
        androidx.test.services.events.TestRunInfo$1 r0;

        r0 := @this: androidx.test.services.events.TestRunInfo$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.test.services.events.TestRunInfo[] newArray(int)
    {
        androidx.test.services.events.TestRunInfo$1 r0;
        int i0;
        androidx.test.services.events.TestRunInfo[] $r1;

        r0 := @this: androidx.test.services.events.TestRunInfo$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.test.services.events.TestRunInfo)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.test.services.events.TestRunInfo$1 r0;
        int i0;
        androidx.test.services.events.TestRunInfo[] $r1;

        r0 := @this: androidx.test.services.events.TestRunInfo$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.test.services.events.TestRunInfo$1: androidx.test.services.events.TestRunInfo[] newArray(int)>(i0);

        return $r1;
    }

