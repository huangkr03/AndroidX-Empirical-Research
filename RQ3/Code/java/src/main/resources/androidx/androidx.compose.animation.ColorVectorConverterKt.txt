androidx.compose.animation.ColorVectorConverterKt
<androidx.compose.animation.ColorVectorConverterKt: kotlin.jvm.functions.Function1 ColorToVector>
<androidx.compose.animation.ColorVectorConverterKt: float[] M1>
<androidx.compose.animation.ColorVectorConverterKt: float[] InverseM1>
    public static final kotlin.jvm.functions.Function1 getVectorConverter(androidx.compose.ui.graphics.Color$Companion)
    {
        androidx.compose.ui.graphics.Color$Companion $r0;
        kotlin.jvm.functions.Function1 $r1;

        $r0 := @parameter0: androidx.compose.ui.graphics.Color$Companion;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = <androidx.compose.animation.ColorVectorConverterKt: kotlin.jvm.functions.Function1 ColorToVector>;

        return $r1;
    }

    private static final float multiplyColumn(int, float, float, float, float[])
    {
        int i0, $i1, $i2;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        float[] r0;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        r0 := @parameter4: float[];

        $f3 = r0[i0];

        $f6 = f0 * $f3;

        $i1 = 3 + i0;

        $f4 = r0[$i1];

        $f5 = f1 * $f4;

        $f9 = $f6 + $f5;

        $i2 = 6 + i0;

        $f7 = r0[$i2];

        $f8 = f2 * $f7;

        $f10 = $f9 + $f8;

        return $f10;
    }

    public static final float access$multiplyColumn(int, float, float, float, float[])
    {
        int i0;
        float f0, f1, f2, $f3;
        float[] r0;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        r0 := @parameter4: float[];

        $f3 = staticinvoke <androidx.compose.animation.ColorVectorConverterKt: float multiplyColumn(int,float,float,float,float[])>(i0, f0, f1, f2, r0);

        return $f3;
    }

    public static final float[] access$getM1$p()
    {
        float[] $r0;

        $r0 = <androidx.compose.animation.ColorVectorConverterKt: float[] M1>;

        return $r0;
    }

    public static final float[] access$getInverseM1$p()
    {
        float[] $r0;

        $r0 = <androidx.compose.animation.ColorVectorConverterKt: float[] InverseM1>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.compose.animation.ColorVectorConverterKt$ColorToVector$1 $r0;
        kotlin.jvm.functions.Function1 $r1;
        float[] r2, r3;

        $r0 = <androidx.compose.animation.ColorVectorConverterKt$ColorToVector$1: androidx.compose.animation.ColorVectorConverterKt$ColorToVector$1 INSTANCE>;

        $r1 = (kotlin.jvm.functions.Function1) $r0;

        <androidx.compose.animation.ColorVectorConverterKt: kotlin.jvm.functions.Function1 ColorToVector> = $r1;

        r2 = newarray (float)[9];

        r2[0] = 0.80405736F;

        r2[1] = 0.026893456F;

        r2[2] = 0.04586542F;

        r2[3] = 0.3188387F;

        r2[4] = 0.9319606F;

        r2[5] = 0.26299807F;

        r2[6] = -0.11419419F;

        r2[7] = 0.05105356F;

        r2[8] = 0.83999807F;

        <androidx.compose.animation.ColorVectorConverterKt: float[] M1> = r2;

        r3 = newarray (float)[9];

        r3[0] = 1.2485008F;

        r3[1] = -0.032856926F;

        r3[2] = -0.057883114F;

        r3[3] = -0.48331892F;

        r3[4] = 1.1044513F;

        r3[5] = -0.3194066F;

        r3[6] = 0.19910365F;

        r3[7] = -0.07159331F;

        r3[8] = 1.202023F;

        <androidx.compose.animation.ColorVectorConverterKt: float[] InverseM1> = r3;

        return;
    }

