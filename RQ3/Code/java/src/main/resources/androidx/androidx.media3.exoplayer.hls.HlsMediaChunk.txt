androidx.media3.exoplayer.hls.HlsMediaChunk
<androidx.media3.exoplayer.hls.HlsMediaChunk: java.lang.String PRIV_TIMESTAMP_FRAME_OWNER>
<androidx.media3.exoplayer.hls.HlsMediaChunk: java.util.concurrent.atomic.AtomicInteger uidSource>
<androidx.media3.exoplayer.hls.HlsMediaChunk: int uid>
<androidx.media3.exoplayer.hls.HlsMediaChunk: int discontinuitySequenceNumber>
<androidx.media3.exoplayer.hls.HlsMediaChunk: android.net.Uri playlistUrl>
<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean shouldSpliceIn>
<androidx.media3.exoplayer.hls.HlsMediaChunk: int partIndex>
<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSource initDataSource>
<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSpec initDataSpec>
<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor previousExtractor>
<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isMasterTimestampSource>
<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean hasGapTag>
<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.TimestampAdjuster timestampAdjuster>
<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory>
<androidx.media3.exoplayer.hls.HlsMediaChunk: java.util.List muxedCaptionFormats>
<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.DrmInitData drmInitData>
<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.extractor.metadata.id3.Id3Decoder id3Decoder>
<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>
<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean mediaSegmentEncrypted>
<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean initSegmentEncrypted>
<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.analytics.PlayerId playerId>
<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor extractor>
<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper output>
<androidx.media3.exoplayer.hls.HlsMediaChunk: int nextLoadPosition>
<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean initDataLoadRequired>
<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean loadCanceled>
<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean loadCompleted>
<androidx.media3.exoplayer.hls.HlsMediaChunk: com.google.common.collect.ImmutableList sampleQueueFirstSampleIndices>
<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean extractorInvalidated>
<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isPublished>
    public static androidx.media3.exoplayer.hls.HlsMediaChunk createInstance(androidx.media3.exoplayer.hls.HlsExtractorFactory, androidx.media3.datasource.DataSource, androidx.media3.common.Format, long, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder, android.net.Uri, java.util.List, int, java.lang.Object, boolean, androidx.media3.exoplayer.hls.TimestampAdjusterProvider, androidx.media3.exoplayer.hls.HlsMediaChunk, byte[], byte[], boolean, androidx.media3.exoplayer.analytics.PlayerId)
    {
        androidx.media3.exoplayer.hls.HlsExtractorFactory r0;
        androidx.media3.datasource.DataSource r1, r16, $r36, r58;
        androidx.media3.common.Format r2;
        long l0, l2, $l4, $l5, $l6, $l12, $l13, $l15, $l16, $l18, l19, $l20;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r3;
        androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder r4;
        android.net.Uri r5, r18, $r22, $r44, $r45, $r62;
        java.util.List r6;
        int i1, i3, $i7, $i11, $i21, $i22;
        java.lang.Object r7, $r51, $r54;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z9, $z10, $z11, $z12, $z13, z14, $z15, $z16, $z17, $z18, $z19;
        androidx.media3.exoplayer.hls.TimestampAdjusterProvider r8;
        androidx.media3.exoplayer.hls.HlsMediaChunk r9, $r29;
        byte[] r10, r11, r15, $r56, $r59, r60;
        androidx.media3.exoplayer.analytics.PlayerId r12;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase r13;
        androidx.media3.datasource.DataSpec r14, $r37, $r41, $r42, $r43, $r46, $r49, r57;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment r17;
        androidx.media3.datasource.DataSpec$Builder $r19, $r23, $r24, $r25, $r26;
        java.lang.String $r20, $r21, $r47, $r48, $r50, $r52, $r53, $r55;
        androidx.media3.extractor.metadata.id3.Id3Decoder $r27, r63;
        androidx.media3.common.util.ParsableByteArray $r28, r64;
        androidx.media3.common.util.TimestampAdjuster $r30;
        androidx.media3.common.DrmInitData $r31;
        byte $b14, $b17;
        androidx.media3.exoplayer.hls.HlsMediaChunkExtractor r61, $r65;

        r0 := @parameter0: androidx.media3.exoplayer.hls.HlsExtractorFactory;

        r1 := @parameter1: androidx.media3.datasource.DataSource;

        r2 := @parameter2: androidx.media3.common.Format;

        l0 := @parameter3: long;

        r3 := @parameter4: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        r4 := @parameter5: androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder;

        r5 := @parameter6: android.net.Uri;

        r6 := @parameter7: java.util.List;

        i1 := @parameter8: int;

        r7 := @parameter9: java.lang.Object;

        z0 := @parameter10: boolean;

        r8 := @parameter11: androidx.media3.exoplayer.hls.TimestampAdjusterProvider;

        r9 := @parameter12: androidx.media3.exoplayer.hls.HlsMediaChunk;

        r10 := @parameter13: byte[];

        r11 := @parameter14: byte[];

        z1 := @parameter15: boolean;

        r12 := @parameter16: androidx.media3.exoplayer.analytics.PlayerId;

        r13 = r4.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase segmentBase>;

        $r19 = new androidx.media3.datasource.DataSpec$Builder;

        specialinvoke $r19.<androidx.media3.datasource.DataSpec$Builder: void <init>()>();

        $r21 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.lang.String baseUri>;

        $r20 = r13.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: java.lang.String url>;

        $r22 = staticinvoke <androidx.media3.common.util.UriUtil: android.net.Uri resolveToUri(java.lang.String,java.lang.String)>($r21, $r20);

        $r23 = virtualinvoke $r19.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setUri(android.net.Uri)>($r22);

        $l4 = r13.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: long byteRangeOffset>;

        $r24 = virtualinvoke $r23.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setPosition(long)>($l4);

        $l5 = r13.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: long byteRangeLength>;

        $r25 = virtualinvoke $r24.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setLength(long)>($l5);

        $z5 = r4.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: boolean isPreload>;

        if $z5 == 0 goto label01;

        $b17 = 8;

        goto label02;

     label01:
        $b17 = 0;

     label02:
        $r26 = virtualinvoke $r25.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec$Builder setFlags(int)>($b17);

        r14 = virtualinvoke $r26.<androidx.media3.datasource.DataSpec$Builder: androidx.media3.datasource.DataSpec build()>();

        if r10 == null goto label03;

        $z13 = 1;

        goto label04;

     label03:
        $z13 = 0;

     label04:
        z2 = $z13;

        if z2 == 0 goto label05;

        $r53 = r13.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: java.lang.String encryptionIV>;

        $r54 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r53);

        $r55 = (java.lang.String) $r54;

        $r56 = staticinvoke <androidx.media3.exoplayer.hls.HlsMediaChunk: byte[] getEncryptionIvArray(java.lang.String)>($r55);

        goto label06;

     label05:
        $r56 = null;

     label06:
        r15 = $r56;

        r16 = staticinvoke <androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSource buildDataSource(androidx.media3.datasource.DataSource,byte[],byte[])>(r1, r10, r15);

        r17 = r13.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment initializationSegment>;

        r57 = null;

        z14 = 0;

        r58 = null;

        if r17 == null goto label11;

        if r11 == null goto label07;

        $z15 = 1;

        goto label08;

     label07:
        $z15 = 0;

     label08:
        z14 = $z15;

        if z14 == 0 goto label09;

        $r50 = r17.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.lang.String encryptionIV>;

        $r51 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r50);

        $r52 = (java.lang.String) $r51;

        $r59 = staticinvoke <androidx.media3.exoplayer.hls.HlsMediaChunk: byte[] getEncryptionIvArray(java.lang.String)>($r52);

        goto label10;

     label09:
        $r59 = null;

     label10:
        r60 = $r59;

        $r48 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: java.lang.String baseUri>;

        $r47 = r17.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: java.lang.String url>;

        r18 = staticinvoke <androidx.media3.common.util.UriUtil: android.net.Uri resolveToUri(java.lang.String,java.lang.String)>($r48, $r47);

        $r49 = new androidx.media3.datasource.DataSpec;

        $l16 = r17.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long byteRangeOffset>;

        $l15 = r17.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment: long byteRangeLength>;

        specialinvoke $r49.<androidx.media3.datasource.DataSpec: void <init>(android.net.Uri,long,long)>(r18, $l16, $l15);

        r57 = $r49;

        r58 = staticinvoke <androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSource buildDataSource(androidx.media3.datasource.DataSource,byte[],byte[])>(r1, r11, r60);

     label11:
        $l18 = r13.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: long relativeStartTimeUs>;

        l19 = l0 + $l18;

        $l20 = r13.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: long durationUs>;

        l2 = l19 + $l20;

        $i21 = r3.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: int discontinuitySequence>;

        $i22 = r13.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: int relativeDiscontinuitySequence>;

        i3 = $i21 + $i22;

        r61 = null;

        if r9 == null goto label19;

        $r41 = r9.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSpec initDataSpec>;

        if r57 == $r41 goto label12;

        if r57 == null goto label13;

        $r42 = r9.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSpec initDataSpec>;

        if $r42 == null goto label13;

        $r45 = r57.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $r43 = r9.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSpec initDataSpec>;

        $r44 = $r43.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $z12 = virtualinvoke $r45.<android.net.Uri: boolean equals(java.lang.Object)>($r44);

        if $z12 == 0 goto label13;

        $l13 = r57.<androidx.media3.datasource.DataSpec: long position>;

        $r46 = r9.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSpec initDataSpec>;

        $l12 = $r46.<androidx.media3.datasource.DataSpec: long position>;

        $b14 = $l13 cmp $l12;

        if $b14 != 0 goto label13;

     label12:
        $z16 = 1;

        goto label14;

     label13:
        $z16 = 0;

     label14:
        z3 = $z16;

        $r62 = r9.<androidx.media3.exoplayer.hls.HlsMediaChunk: android.net.Uri playlistUrl>;

        $z17 = virtualinvoke r5.<android.net.Uri: boolean equals(java.lang.Object)>($r62);

        if $z17 == 0 goto label15;

        $z11 = r9.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean loadCompleted>;

        if $z11 == 0 goto label15;

        $z18 = 1;

        goto label16;

     label15:
        $z18 = 0;

     label16:
        z4 = $z18;

        r63 = r9.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.extractor.metadata.id3.Id3Decoder id3Decoder>;

        r64 = r9.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        if z3 == 0 goto label17;

        if z4 == 0 goto label17;

        $z10 = r9.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean extractorInvalidated>;

        if $z10 != 0 goto label17;

        $i11 = r9.<androidx.media3.exoplayer.hls.HlsMediaChunk: int discontinuitySequenceNumber>;

        if $i11 != i3 goto label17;

        $r65 = r9.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor extractor>;

        goto label18;

     label17:
        $r65 = null;

     label18:
        r61 = $r65;

        goto label20;

     label19:
        $r27 = new androidx.media3.extractor.metadata.id3.Id3Decoder;

        specialinvoke $r27.<androidx.media3.extractor.metadata.id3.Id3Decoder: void <init>()>();

        r63 = $r27;

        $r28 = new androidx.media3.common.util.ParsableByteArray;

        specialinvoke $r28.<androidx.media3.common.util.ParsableByteArray: void <init>(int)>(10);

        r64 = $r28;

     label20:
        $r29 = new androidx.media3.exoplayer.hls.HlsMediaChunk;

        $r36 = r58;

        $r37 = r57;

        $z9 = z14;

        $l6 = r4.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: long mediaSequence>;

        $i7 = r4.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: int partIndex>;

        $z6 = r4.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: boolean isPreload>;

        if $z6 != 0 goto label21;

        $z19 = 1;

        goto label22;

     label21:
        $z19 = 0;

     label22:
        $z7 = r13.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: boolean hasGapTag>;

        $r30 = virtualinvoke r8.<androidx.media3.exoplayer.hls.TimestampAdjusterProvider: androidx.media3.common.util.TimestampAdjuster getAdjuster(int)>(i3);

        $r31 = r13.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: androidx.media3.common.DrmInitData drmInitData>;

        specialinvoke $r29.<androidx.media3.exoplayer.hls.HlsMediaChunk: void <init>(androidx.media3.exoplayer.hls.HlsExtractorFactory,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,boolean,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean,android.net.Uri,java.util.List,int,java.lang.Object,long,long,long,int,boolean,int,boolean,boolean,androidx.media3.common.util.TimestampAdjuster,androidx.media3.common.DrmInitData,androidx.media3.exoplayer.hls.HlsMediaChunkExtractor,androidx.media3.extractor.metadata.id3.Id3Decoder,androidx.media3.common.util.ParsableByteArray,boolean,androidx.media3.exoplayer.analytics.PlayerId)>(r0, r16, r14, r2, z2, $r36, $r37, $z9, r5, r6, i1, r7, l19, l2, $l6, $i7, $z19, i3, $z7, z0, $r30, $r31, r61, r63, r64, z1, r12);

        return $r29;
    }

    public static boolean shouldSpliceIn(androidx.media3.exoplayer.hls.HlsMediaChunk, android.net.Uri, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist, androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder, long)
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;
        android.net.Uri r1, $r4;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r2;
        androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder r3;
        long l0, l1, $l2, $l3;
        boolean $z0, $z1, $z2, $z3;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase $r5;
        byte $b4;

        r0 := @parameter0: androidx.media3.exoplayer.hls.HlsMediaChunk;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        r3 := @parameter3: androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder;

        l0 := @parameter4: long;

        if r0 != null goto label1;

        return 0;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: android.net.Uri playlistUrl>;

        $z0 = virtualinvoke r1.<android.net.Uri: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $z2 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean loadCompleted>;

        if $z2 == 0 goto label2;

        return 0;

     label2:
        $r5 = r3.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase segmentBase>;

        $l2 = $r5.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase: long relativeStartTimeUs>;

        l1 = l0 + $l2;

        $z1 = staticinvoke <androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isIndependent(androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)>(r3, r2);

        if $z1 == 0 goto label3;

        $l3 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: long endTimeUs>;

        $b4 = l1 cmp $l3;

        if $b4 >= 0 goto label4;

     label3:
        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    private void <init>(androidx.media3.exoplayer.hls.HlsExtractorFactory, androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSpec, androidx.media3.common.Format, boolean, androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSpec, boolean, android.net.Uri, java.util.List, int, java.lang.Object, long, long, long, int, boolean, int, boolean, boolean, androidx.media3.common.util.TimestampAdjuster, androidx.media3.common.DrmInitData, androidx.media3.exoplayer.hls.HlsMediaChunkExtractor, androidx.media3.extractor.metadata.id3.Id3Decoder, androidx.media3.common.util.ParsableByteArray, boolean, androidx.media3.exoplayer.analytics.PlayerId)
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;
        androidx.media3.exoplayer.hls.HlsExtractorFactory r1;
        androidx.media3.datasource.DataSource r2, r5;
        androidx.media3.datasource.DataSpec r3, r6;
        androidx.media3.common.Format r4;
        boolean z0, z1, z2, z3, z4, z5, $z6;
        android.net.Uri r7;
        java.util.List r8;
        int i0, i4, i5, $i6;
        java.lang.Object r9;
        long l1, l2, l3;
        androidx.media3.common.util.TimestampAdjuster r10;
        androidx.media3.common.DrmInitData r11;
        androidx.media3.exoplayer.hls.HlsMediaChunkExtractor r12;
        androidx.media3.extractor.metadata.id3.Id3Decoder r13;
        androidx.media3.common.util.ParsableByteArray r14;
        androidx.media3.exoplayer.analytics.PlayerId r15;
        com.google.common.collect.ImmutableList $r16;
        java.util.concurrent.atomic.AtomicInteger $r17;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        r1 := @parameter0: androidx.media3.exoplayer.hls.HlsExtractorFactory;

        r2 := @parameter1: androidx.media3.datasource.DataSource;

        r3 := @parameter2: androidx.media3.datasource.DataSpec;

        r4 := @parameter3: androidx.media3.common.Format;

        z0 := @parameter4: boolean;

        r5 := @parameter5: androidx.media3.datasource.DataSource;

        r6 := @parameter6: androidx.media3.datasource.DataSpec;

        z1 := @parameter7: boolean;

        r7 := @parameter8: android.net.Uri;

        r8 := @parameter9: java.util.List;

        i0 := @parameter10: int;

        r9 := @parameter11: java.lang.Object;

        l1 := @parameter12: long;

        l2 := @parameter13: long;

        l3 := @parameter14: long;

        i4 := @parameter15: int;

        z2 := @parameter16: boolean;

        i5 := @parameter17: int;

        z3 := @parameter18: boolean;

        z4 := @parameter19: boolean;

        r10 := @parameter20: androidx.media3.common.util.TimestampAdjuster;

        r11 := @parameter21: androidx.media3.common.DrmInitData;

        r12 := @parameter22: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor;

        r13 := @parameter23: androidx.media3.extractor.metadata.id3.Id3Decoder;

        r14 := @parameter24: androidx.media3.common.util.ParsableByteArray;

        z5 := @parameter25: boolean;

        r15 := @parameter26: androidx.media3.exoplayer.analytics.PlayerId;

        specialinvoke r0.<androidx.media3.exoplayer.source.chunk.MediaChunk: void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,int,java.lang.Object,long,long,long)>(r2, r3, r4, i0, r9, l1, l2, l3);

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean mediaSegmentEncrypted> = z0;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: int partIndex> = i4;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isPublished> = z2;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: int discontinuitySequenceNumber> = i5;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSpec initDataSpec> = r6;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSource initDataSource> = r5;

        if r6 == null goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean initDataLoadRequired> = $z6;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean initSegmentEncrypted> = z1;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: android.net.Uri playlistUrl> = r7;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isMasterTimestampSource> = z4;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.TimestampAdjuster timestampAdjuster> = r10;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean hasGapTag> = z3;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory> = r1;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: java.util.List muxedCaptionFormats> = r8;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.DrmInitData drmInitData> = r11;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor previousExtractor> = r12;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.extractor.metadata.id3.Id3Decoder id3Decoder> = r13;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data> = r14;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean shouldSpliceIn> = z5;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.analytics.PlayerId playerId> = r15;

        $r16 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: com.google.common.collect.ImmutableList sampleQueueFirstSampleIndices> = $r16;

        $r17 = <androidx.media3.exoplayer.hls.HlsMediaChunk: java.util.concurrent.atomic.AtomicInteger uidSource>;

        $i6 = virtualinvoke $r17.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: int uid> = $i6;

        return;
    }

    public void init(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper, com.google.common.collect.ImmutableList)
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper r1;
        com.google.common.collect.ImmutableList r2;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        r1 := @parameter0: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper;

        r2 := @parameter1: com.google.common.collect.ImmutableList;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper output> = r1;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: com.google.common.collect.ImmutableList sampleQueueFirstSampleIndices> = r2;

        return;
    }

    public int getFirstSampleIndex(int)
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        com.google.common.collect.ImmutableList $r1, $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        i0 := @parameter0: int;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean shouldSpliceIn>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z1);

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: com.google.common.collect.ImmutableList sampleQueueFirstSampleIndices>;

        $i1 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: int size()>();

        if i0 < $i1 goto label3;

        return 0;

     label3:
        $r2 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: com.google.common.collect.ImmutableList sampleQueueFirstSampleIndices>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(i0);

        $r4 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i2;
    }

    public void invalidateExtractor()
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean extractorInvalidated> = 1;

        return;
    }

    public boolean isLoadCompleted()
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean loadCompleted>;

        return $z0;
    }

    public void cancelLoad()
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean loadCanceled> = 1;

        return;
    }

    public void load() throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper $r1;
        androidx.media3.exoplayer.hls.HlsMediaChunkExtractor $r3, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper output>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor extractor>;

        if $r3 != null goto label1;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor previousExtractor>;

        if $r5 == null goto label1;

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor previousExtractor>;

        $z2 = interfaceinvoke $r6.<androidx.media3.exoplayer.hls.HlsMediaChunkExtractor: boolean isReusable()>();

        if $z2 == 0 goto label1;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor previousExtractor>;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor extractor> = $r7;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean initDataLoadRequired> = 0;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: void maybeLoadInitData()>();

        $z3 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean loadCanceled>;

        if $z3 != 0 goto label5;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean hasGapTag>;

        if $z0 != 0 goto label2;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: void loadMedia()>();

     label2:
        $z1 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean loadCanceled>;

        if $z1 != 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean loadCompleted> = $z4;

     label5:
        return;
    }

    public boolean isPublished()
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isPublished>;

        return $z0;
    }

    public void publish()
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isPublished> = 1;

        return;
    }

    private void maybeLoadInitData() throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;
        boolean $z0, $z1;
        androidx.media3.datasource.DataSource $r1, $r6;
        androidx.media3.datasource.DataSpec $r3, $r5;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean initDataLoadRequired>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSource initDataSource>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSpec initDataSpec>;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r6 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSource initDataSource>;

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSpec initDataSpec>;

        $z1 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean initSegmentEncrypted>;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: void feedDataToExtractor(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean,boolean)>($r6, $r5, $z1, 0);

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: int nextLoadPosition> = 0;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean initDataLoadRequired> = 0;

        return;
    }

    private void loadMedia() throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;
        boolean $z0;
        androidx.media3.datasource.DataSpec $r1;
        androidx.media3.datasource.StatsDataSource $r2;
        androidx.media3.datasource.DataSource r3;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.StatsDataSource dataSource>;

        $r1 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.datasource.DataSpec dataSpec>;

        $z0 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean mediaSegmentEncrypted>;

        r3 = (androidx.media3.datasource.DataSource) $r2;

        specialinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: void feedDataToExtractor(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean,boolean)>(r3, $r1, $z0, 1);

        return;
    }

    private void feedDataToExtractor(androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSpec, boolean, boolean) throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;
        androidx.media3.datasource.DataSource r1;
        androidx.media3.datasource.DataSpec r2, r13;
        boolean z0, z1, $z2, $z3, z4, $z5;
        androidx.media3.extractor.DefaultExtractorInput r3;
        java.lang.Throwable r4, r5, r6, $r8, $r11, $r12;
        int $i0, $i5, $i6, $i7, $i8, $i9, $i13, $i17;
        long $l1, $l2, $l3, $l4, $l10, $l11, $l12, $l14, $l15, $l16;
        androidx.media3.exoplayer.hls.HlsMediaChunkExtractor $r7, $r10;
        androidx.media3.common.Format $r9;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        if z0 == 0 goto label03;

        r13 = r2;

        $i7 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: int nextLoadPosition>;

        if $i7 == 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        z4 = $z3;

        goto label04;

     label03:
        $i0 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: int nextLoadPosition>;

        $l1 = (long) $i0;

        r13 = virtualinvoke r2.<androidx.media3.datasource.DataSpec: androidx.media3.datasource.DataSpec subrange(long)>($l1);

        z4 = 0;

     label04:
        r3 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.extractor.DefaultExtractorInput prepareExtraction(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean)>(r1, r13, z1);

        if z4 == 0 goto label05;

        $i6 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: int nextLoadPosition>;

        interfaceinvoke r3.<androidx.media3.extractor.ExtractorInput: void skipFully(int)>($i6);

     label05:
        $z5 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean loadCanceled>;

        if $z5 != 0 goto label06;

        $r7 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor extractor>;

        $z2 = interfaceinvoke $r7.<androidx.media3.exoplayer.hls.HlsMediaChunkExtractor: boolean read(androidx.media3.extractor.ExtractorInput)>(r3);

        if $z2 == 0 goto label06;

        goto label05;

     label06:
        $l2 = interfaceinvoke r3.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l3 = r2.<androidx.media3.datasource.DataSpec: long position>;

        $l4 = $l2 - $l3;

        $i5 = (int) $l4;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: int nextLoadPosition> = $i5;

        goto label12;

     label07:
        $r8 := @caughtexception;

        r4 = $r8;

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.Format trackFormat>;

        $i8 = $r9.<androidx.media3.common.Format: int roleFlags>;

        $i9 = $i8 & 16384;

        if $i9 == 0 goto label08;

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor extractor>;

        interfaceinvoke $r10.<androidx.media3.exoplayer.hls.HlsMediaChunkExtractor: void onTruncatedSegmentParsed()>();

        goto label09;

     label08:
        throw r4;

     label09:
        $l10 = interfaceinvoke r3.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l11 = r2.<androidx.media3.datasource.DataSpec: long position>;

        $l12 = $l10 - $l11;

        $i13 = (int) $l12;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: int nextLoadPosition> = $i13;

        goto label12;

     label10:
        $r11 := @caughtexception;

        r5 = $r11;

     label11:
        $l14 = interfaceinvoke r3.<androidx.media3.extractor.ExtractorInput: long getPosition()>();

        $l15 = r2.<androidx.media3.datasource.DataSpec: long position>;

        $l16 = $l14 - $l15;

        $i17 = (int) $l16;

        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: int nextLoadPosition> = $i17;

        throw r5;

     label12:
        staticinvoke <androidx.media3.datasource.DataSourceUtil: void closeQuietly(androidx.media3.datasource.DataSource)>(r1);

        goto label15;

     label13:
        $r12 := @caughtexception;

        r6 = $r12;

     label14:
        staticinvoke <androidx.media3.datasource.DataSourceUtil: void closeQuietly(androidx.media3.datasource.DataSource)>(r1);

        throw r6;

     label15:
        return;

        catch java.io.EOFException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label04 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private androidx.media3.extractor.DefaultExtractorInput prepareExtraction(androidx.media3.datasource.DataSource, androidx.media3.datasource.DataSpec, boolean) throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;
        androidx.media3.datasource.DataSource r1;
        androidx.media3.datasource.DataSpec r2;
        boolean z0, $z1, $z2;
        long l0, l1, $l2, $l4, $l5;
        androidx.media3.exoplayer.hls.HlsMediaChunkExtractor $r4, $r5, $r13, $r17, $r20, $r27;
        androidx.media3.exoplayer.hls.HlsExtractorFactory $r6;
        android.net.Uri $r7;
        androidx.media3.common.Format $r8;
        java.util.List $r9;
        androidx.media3.common.util.TimestampAdjuster $r10, $r19, $r22;
        java.util.Map $r11;
        androidx.media3.exoplayer.analytics.PlayerId $r12;
        androidx.media3.exoplayer.hls.HlsSampleStreamWrapper $r14, $r15, $r16, $r18, $r28;
        byte $b3;
        java.lang.Throwable $r23, r25;
        androidx.media3.extractor.DefaultExtractorInput r26, r31;
        androidx.media3.common.DrmInitData $r29;
        java.io.InterruptedIOException r30;
        androidx.media3.common.DataReader r32;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        r1 := @parameter0: androidx.media3.datasource.DataSource;

        r2 := @parameter1: androidx.media3.datasource.DataSpec;

        z0 := @parameter2: boolean;

        l0 = interfaceinvoke r1.<androidx.media3.datasource.DataSource: long open(androidx.media3.datasource.DataSpec)>(r2);

        if z0 == 0 goto label04;

     label01:
        $r22 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.TimestampAdjuster timestampAdjuster>;

        $z2 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: boolean isMasterTimestampSource>;

        $l4 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: long startTimeUs>;

        virtualinvoke $r22.<androidx.media3.common.util.TimestampAdjuster: void sharedInitializeOrWait(boolean,long)>($z2, $l4);

     label02:
        goto label04;

     label03:
        $r23 := @caughtexception;

        r25 = $r23;

        r30 = new java.io.InterruptedIOException;

        specialinvoke r30.<java.io.InterruptedIOException: void <init>()>();

        throw r30;

     label04:
        r31 = new androidx.media3.extractor.DefaultExtractorInput;

        $l2 = r2.<androidx.media3.datasource.DataSpec: long position>;

        r32 = (androidx.media3.common.DataReader) r1;

        specialinvoke r31.<androidx.media3.extractor.DefaultExtractorInput: void <init>(androidx.media3.common.DataReader,long,long)>(r32, $l2, l0);

        r26 = r31;

        $r4 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor extractor>;

        if $r4 != null goto label11;

        l1 = specialinvoke r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: long peekId3PrivTimestamp(androidx.media3.extractor.ExtractorInput)>(r26);

        virtualinvoke r26.<androidx.media3.extractor.DefaultExtractorInput: void resetPeekPosition()>();

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor previousExtractor>;

        if $r5 == null goto label05;

        $r20 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor previousExtractor>;

        $r27 = interfaceinvoke $r20.<androidx.media3.exoplayer.hls.HlsMediaChunkExtractor: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor recreate()>();

        goto label06;

     label05:
        $r6 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory>;

        $r7 = r2.<androidx.media3.datasource.DataSpec: android.net.Uri uri>;

        $r8 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.Format trackFormat>;

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: java.util.List muxedCaptionFormats>;

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.TimestampAdjuster timestampAdjuster>;

        $r11 = interfaceinvoke r1.<androidx.media3.datasource.DataSource: java.util.Map getResponseHeaders()>();

        $r12 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.analytics.PlayerId playerId>;

        $r27 = interfaceinvoke $r6.<androidx.media3.exoplayer.hls.HlsExtractorFactory: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor createExtractor(android.net.Uri,androidx.media3.common.Format,java.util.List,androidx.media3.common.util.TimestampAdjuster,java.util.Map,androidx.media3.extractor.ExtractorInput,androidx.media3.exoplayer.analytics.PlayerId)>($r7, $r8, $r9, $r10, $r11, r26, $r12);

     label06:
        r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor extractor> = $r27;

        $r13 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor extractor>;

        $z1 = interfaceinvoke $r13.<androidx.media3.exoplayer.hls.HlsMediaChunkExtractor: boolean isPackedAudioExtractor()>();

        if $z1 == 0 goto label09;

        $r18 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper output>;

        $b3 = l1 cmp -9223372036854775807L;

        if $b3 == 0 goto label07;

        $r19 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.TimestampAdjuster timestampAdjuster>;

        $l5 = virtualinvoke $r19.<androidx.media3.common.util.TimestampAdjuster: long adjustTsTimestamp(long)>(l1);

        goto label08;

     label07:
        $l5 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: long startTimeUs>;

     label08:
        virtualinvoke $r18.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void setSampleOffsetUs(long)>($l5);

        goto label10;

     label09:
        $r14 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper output>;

        virtualinvoke $r14.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void setSampleOffsetUs(long)>(0L);

     label10:
        $r15 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper output>;

        virtualinvoke $r15.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void onNewExtractor()>();

        $r17 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsMediaChunkExtractor extractor>;

        $r16 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper output>;

        interfaceinvoke $r17.<androidx.media3.exoplayer.hls.HlsMediaChunkExtractor: void init(androidx.media3.extractor.ExtractorOutput)>($r16);

     label11:
        $r28 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.exoplayer.hls.HlsSampleStreamWrapper output>;

        $r29 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.DrmInitData drmInitData>;

        virtualinvoke $r28.<androidx.media3.exoplayer.hls.HlsSampleStreamWrapper: void setDrmInitData(androidx.media3.common.DrmInitData)>($r29);

        return r26;

        catch java.lang.InterruptedException from label01 to label02 with label03;
    }

    private long peekId3PrivTimestamp(androidx.media3.extractor.ExtractorInput) throws java.io.IOException
    {
        androidx.media3.exoplayer.hls.HlsMediaChunk r0;
        androidx.media3.extractor.ExtractorInput r1;
        int i0, i1, i2, $i3, i6, i7;
        androidx.media3.common.Metadata$Entry r2;
        androidx.media3.extractor.metadata.id3.PrivFrame r3;
        androidx.media3.common.util.ParsableByteArray $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r13, $r18, $r21, $r22, $r23, $r24, $r25, $r26;
        byte[] $r6, $r12, $r15, $r19, $r20, $r27, r30;
        androidx.media3.extractor.metadata.id3.Id3Decoder $r14;
        boolean $z0, $z1;
        java.lang.String $r16, $r17;
        long $l4, $l5;
        java.lang.Throwable $r28, r29;
        androidx.media3.common.Metadata r31;

        r0 := @this: androidx.media3.exoplayer.hls.HlsMediaChunk;

        r1 := @parameter0: androidx.media3.extractor.ExtractorInput;

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void resetPeekPosition()>();

     label01:
        $r4 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        virtualinvoke $r4.<androidx.media3.common.util.ParsableByteArray: void reset(int)>(10);

        $r5 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        $r6 = virtualinvoke $r5.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r6, 0, 10);

     label02:
        goto label04;

     label03:
        $r28 := @caughtexception;

        r29 = $r28;

        return -9223372036854775807L;

     label04:
        $r7 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        i6 = virtualinvoke $r7.<androidx.media3.common.util.ParsableByteArray: int readUnsignedInt24()>();

        if i6 == 4801587 goto label05;

        return -9223372036854775807L;

     label05:
        $r8 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        virtualinvoke $r8.<androidx.media3.common.util.ParsableByteArray: void skipBytes(int)>(3);

        $r9 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        i0 = virtualinvoke $r9.<androidx.media3.common.util.ParsableByteArray: int readSynchSafeInt()>();

        i1 = i0 + 10;

        $r10 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        $i3 = virtualinvoke $r10.<androidx.media3.common.util.ParsableByteArray: int capacity()>();

        if i1 <= $i3 goto label06;

        $r24 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        r30 = virtualinvoke $r24.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        $r25 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        virtualinvoke $r25.<androidx.media3.common.util.ParsableByteArray: void reset(int)>(i1);

        $r26 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        $r27 = virtualinvoke $r26.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r30, 0, $r27, 0, 10);

     label06:
        $r11 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        $r12 = virtualinvoke $r11.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        interfaceinvoke r1.<androidx.media3.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r12, 10, i0);

        $r14 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.extractor.metadata.id3.Id3Decoder id3Decoder>;

        $r13 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        $r15 = virtualinvoke $r13.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        r31 = virtualinvoke $r14.<androidx.media3.extractor.metadata.id3.Id3Decoder: androidx.media3.common.Metadata decode(byte[],int)>($r15, i0);

        if r31 != null goto label07;

        return -9223372036854775807L;

     label07:
        i2 = virtualinvoke r31.<androidx.media3.common.Metadata: int length()>();

        i7 = 0;

     label08:
        if i7 >= i2 goto label10;

        r2 = virtualinvoke r31.<androidx.media3.common.Metadata: androidx.media3.common.Metadata$Entry get(int)>(i7);

        $z0 = r2 instanceof androidx.media3.extractor.metadata.id3.PrivFrame;

        if $z0 == 0 goto label09;

        r3 = (androidx.media3.extractor.metadata.id3.PrivFrame) r2;

        $r17 = "com.apple.streaming.transportStreamTimestamp";

        $r16 = r3.<androidx.media3.extractor.metadata.id3.PrivFrame: java.lang.String owner>;

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z1 == 0 goto label09;

        $r19 = r3.<androidx.media3.extractor.metadata.id3.PrivFrame: byte[] privateData>;

        $r18 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        $r20 = virtualinvoke $r18.<androidx.media3.common.util.ParsableByteArray: byte[] getData()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r19, 0, $r20, 0, 8);

        $r21 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        virtualinvoke $r21.<androidx.media3.common.util.ParsableByteArray: void setPosition(int)>(0);

        $r22 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        virtualinvoke $r22.<androidx.media3.common.util.ParsableByteArray: void setLimit(int)>(8);

        $r23 = r0.<androidx.media3.exoplayer.hls.HlsMediaChunk: androidx.media3.common.util.ParsableByteArray scratchId3Data>;

        $l4 = virtualinvoke $r23.<androidx.media3.common.util.ParsableByteArray: long readLong()>();

        $l5 = $l4 & 8589934591L;

        return $l5;

     label09:
        i7 = i7 + 1;

        goto label08;

     label10:
        return -9223372036854775807L;

        catch java.io.EOFException from label01 to label02 with label03;
    }

    private static byte[] getEncryptionIvArray(java.lang.String)
    {
        java.lang.String r0, $r3, r5;
        byte[] r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;
        java.math.BigInteger $r4;

        r0 := @parameter0: java.lang.String;

        $r3 = staticinvoke <com.google.common.base.Ascii: java.lang.String toLowerCase(java.lang.String)>(r0);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("0x");

        if $z0 == 0 goto label1;

        r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(2);

        goto label2;

     label1:
        r5 = r0;

     label2:
        $r4 = new java.math.BigInteger;

        specialinvoke $r4.<java.math.BigInteger: void <init>(java.lang.String,int)>(r5, 16);

        r1 = virtualinvoke $r4.<java.math.BigInteger: byte[] toByteArray()>();

        r2 = newarray (byte)[16];

        $i1 = lengthof r1;

        if $i1 <= 16 goto label3;

        $i8 = lengthof r1;

        $i9 = $i8 - 16;

        goto label4;

     label3:
        $i9 = 0;

     label4:
        i0 = $i9;

        $i3 = lengthof r2;

        $i2 = lengthof r1;

        $i4 = $i3 - $i2;

        $i7 = $i4 + i0;

        $i5 = lengthof r1;

        $i6 = $i5 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r2, $i7, $i6);

        return r2;
    }

    private static androidx.media3.datasource.DataSource buildDataSource(androidx.media3.datasource.DataSource, byte[], byte[])
    {
        androidx.media3.datasource.DataSource r0;
        byte[] r1, r2;
        androidx.media3.exoplayer.hls.Aes128DataSource $r4;

        r0 := @parameter0: androidx.media3.datasource.DataSource;

        r1 := @parameter1: byte[];

        r2 := @parameter2: byte[];

        if r1 == null goto label1;

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = new androidx.media3.exoplayer.hls.Aes128DataSource;

        specialinvoke $r4.<androidx.media3.exoplayer.hls.Aes128DataSource: void <init>(androidx.media3.datasource.DataSource,byte[],byte[])>(r0, r1, r2);

        return $r4;

     label1:
        return r0;
    }

    private static boolean isIndependent(androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder, androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist)
    {
        androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder r0;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist r1;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part $r4;
        int $i0;

        r0 := @parameter0: androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder;

        r1 := @parameter1: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist;

        $r2 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase segmentBase>;

        $z0 = $r2 instanceof androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part;

        if $z0 == 0 goto label4;

        $r3 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase segmentBase>;

        $r4 = (androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part) $r3;

        $z2 = $r4.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part: boolean isIndependent>;

        if $z2 != 0 goto label1;

        $i0 = r0.<androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder: int partIndex>;

        if $i0 != 0 goto label2;

        $z3 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasIndependentSegments>;

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;

     label4:
        $z1 = r1.<androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist: boolean hasIndependentSegments>;

        return $z1;
    }

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicInteger $r0;

        $r0 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        <androidx.media3.exoplayer.hls.HlsMediaChunk: java.util.concurrent.atomic.AtomicInteger uidSource> = $r0;

        return;
    }

