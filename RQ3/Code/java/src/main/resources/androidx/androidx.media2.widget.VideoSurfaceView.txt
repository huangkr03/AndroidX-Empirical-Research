androidx.media2.widget.VideoSurfaceView
<androidx.media2.widget.VideoSurfaceView: java.lang.String TAG>
<androidx.media2.widget.VideoSurfaceView: boolean DEBUG>
<androidx.media2.widget.VideoSurfaceView: android.view.Surface mSurface>
<androidx.media2.widget.VideoSurfaceView: androidx.media2.widget.VideoViewInterface$SurfaceListener mSurfaceListener>
<androidx.media2.widget.VideoSurfaceView: androidx.media2.MediaPlayer mMediaPlayer>
<androidx.media2.widget.VideoSurfaceView: boolean mIsTakingOverOldView>
    void <init>(android.content.Context)
    {
        androidx.media2.widget.VideoSurfaceView r0;
        android.content.Context r1;
        android.view.SurfaceHolder $r2;

        r0 := @this: androidx.media2.widget.VideoSurfaceView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        r0.<androidx.media2.widget.VideoSurfaceView: android.view.Surface mSurface> = null;

        r0.<androidx.media2.widget.VideoSurfaceView: androidx.media2.widget.VideoViewInterface$SurfaceListener mSurfaceListener> = null;

        $r2 = virtualinvoke r0.<androidx.media2.widget.VideoSurfaceView: android.view.SurfaceHolder getHolder()>();

        interfaceinvoke $r2.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r0);

        return;
    }

    public boolean assignSurfaceToMediaPlayer(androidx.media2.MediaPlayer)
    {
        androidx.media2.widget.VideoSurfaceView r0;
        androidx.media2.MediaPlayer r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        android.view.Surface $r4, $r7;
        java.lang.String $r6;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r8;
        androidx.media2.widget.VideoSurfaceView$1 $r9;
        android.content.Context $r10;
        java.util.concurrent.Executor $r11;

        r0 := @this: androidx.media2.widget.VideoSurfaceView;

        r1 := @parameter0: androidx.media2.MediaPlayer;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("assignSurfaceToMediaPlayer(): mSurface: ");

        $r4 = r0.<androidx.media2.widget.VideoSurfaceView: android.view.Surface mSurface>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoSurfaceView", $r6);

        if r1 == null goto label1;

        $z0 = virtualinvoke r0.<androidx.media2.widget.VideoSurfaceView: boolean hasAvailableSurface()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r7 = r0.<androidx.media2.widget.VideoSurfaceView: android.view.Surface mSurface>;

        $r8 = virtualinvoke r1.<androidx.media2.MediaPlayer: com.google.common.util.concurrent.ListenableFuture setSurface(android.view.Surface)>($r7);

        $r9 = new androidx.media2.widget.VideoSurfaceView$1;

        specialinvoke $r9.<androidx.media2.widget.VideoSurfaceView$1: void <init>(androidx.media2.widget.VideoSurfaceView)>(r0);

        $r10 = virtualinvoke r0.<androidx.media2.widget.VideoSurfaceView: android.content.Context getContext()>();

        $r11 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r10);

        interfaceinvoke $r8.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r9, $r11);

        return 1;
    }

    public void setSurfaceListener(androidx.media2.widget.VideoViewInterface$SurfaceListener)
    {
        androidx.media2.widget.VideoSurfaceView r0;
        androidx.media2.widget.VideoViewInterface$SurfaceListener r1;

        r0 := @this: androidx.media2.widget.VideoSurfaceView;

        r1 := @parameter0: androidx.media2.widget.VideoViewInterface$SurfaceListener;

        r0.<androidx.media2.widget.VideoSurfaceView: androidx.media2.widget.VideoViewInterface$SurfaceListener mSurfaceListener> = r1;

        return;
    }

    public int getViewType()
    {
        androidx.media2.widget.VideoSurfaceView r0;

        r0 := @this: androidx.media2.widget.VideoSurfaceView;

        return 0;
    }

    public void setMediaPlayer(androidx.media2.MediaPlayer)
    {
        androidx.media2.widget.VideoSurfaceView r0;
        androidx.media2.MediaPlayer r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.media2.widget.VideoSurfaceView;

        r1 := @parameter0: androidx.media2.MediaPlayer;

        r0.<androidx.media2.widget.VideoSurfaceView: androidx.media2.MediaPlayer mMediaPlayer> = r1;

        $z0 = r0.<androidx.media2.widget.VideoSurfaceView: boolean mIsTakingOverOldView>;

        if $z0 == 0 goto label3;

        $r2 = r0.<androidx.media2.widget.VideoSurfaceView: androidx.media2.MediaPlayer mMediaPlayer>;

        $z1 = virtualinvoke r0.<androidx.media2.widget.VideoSurfaceView: boolean assignSurfaceToMediaPlayer(androidx.media2.MediaPlayer)>($r2);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<androidx.media2.widget.VideoSurfaceView: boolean mIsTakingOverOldView> = $z2;

     label3:
        return;
    }

    public void takeOver()
    {
        androidx.media2.widget.VideoSurfaceView r0;
        androidx.media2.MediaPlayer $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.media2.widget.VideoSurfaceView;

        $r1 = r0.<androidx.media2.widget.VideoSurfaceView: androidx.media2.MediaPlayer mMediaPlayer>;

        $z0 = virtualinvoke r0.<androidx.media2.widget.VideoSurfaceView: boolean assignSurfaceToMediaPlayer(androidx.media2.MediaPlayer)>($r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<androidx.media2.widget.VideoSurfaceView: boolean mIsTakingOverOldView> = $z1;

        return;
    }

    public boolean hasAvailableSurface()
    {
        androidx.media2.widget.VideoSurfaceView r0;
        android.view.Surface $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.media2.widget.VideoSurfaceView;

        $r1 = r0.<androidx.media2.widget.VideoSurfaceView: android.view.Surface mSurface>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.media2.widget.VideoSurfaceView: android.view.Surface mSurface>;

        $z0 = virtualinvoke $r2.<android.view.Surface: boolean isValid()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        androidx.media2.widget.VideoSurfaceView r0;
        android.view.SurfaceHolder r1;
        android.graphics.Rect r2;
        android.view.Surface $r3;
        androidx.media2.widget.VideoViewInterface$SurfaceListener $r4, $r5;
        int $i0, $i1;
        android.view.View r6;

        r0 := @this: androidx.media2.widget.VideoSurfaceView;

        r1 := @parameter0: android.view.SurfaceHolder;

        $r3 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        r0.<androidx.media2.widget.VideoSurfaceView: android.view.Surface mSurface> = $r3;

        $r4 = r0.<androidx.media2.widget.VideoSurfaceView: androidx.media2.widget.VideoViewInterface$SurfaceListener mSurfaceListener>;

        if $r4 == null goto label1;

        r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.graphics.Rect getSurfaceFrame()>();

        $r5 = r0.<androidx.media2.widget.VideoSurfaceView: androidx.media2.widget.VideoViewInterface$SurfaceListener mSurfaceListener>;

        $i0 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i1 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        r6 = (android.view.View) r0;

        interfaceinvoke $r5.<androidx.media2.widget.VideoViewInterface$SurfaceListener: void onSurfaceCreated(android.view.View,int,int)>(r6, $i0, $i1);

     label1:
        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        androidx.media2.widget.VideoSurfaceView r0;
        android.view.SurfaceHolder r1;
        int i0, i1, i2;
        androidx.media2.widget.VideoViewInterface$SurfaceListener $r2, $r3;
        android.view.View r4;

        r0 := @this: androidx.media2.widget.VideoSurfaceView;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<androidx.media2.widget.VideoSurfaceView: androidx.media2.widget.VideoViewInterface$SurfaceListener mSurfaceListener>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media2.widget.VideoSurfaceView: androidx.media2.widget.VideoViewInterface$SurfaceListener mSurfaceListener>;

        r4 = (android.view.View) r0;

        interfaceinvoke $r3.<androidx.media2.widget.VideoViewInterface$SurfaceListener: void onSurfaceChanged(android.view.View,int,int)>(r4, i1, i2);

     label1:
        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        androidx.media2.widget.VideoSurfaceView r0;
        android.view.SurfaceHolder r1;
        androidx.media2.widget.VideoViewInterface$SurfaceListener $r2, $r3;
        android.view.View r4;

        r0 := @this: androidx.media2.widget.VideoSurfaceView;

        r1 := @parameter0: android.view.SurfaceHolder;

        r0.<androidx.media2.widget.VideoSurfaceView: android.view.Surface mSurface> = null;

        $r2 = r0.<androidx.media2.widget.VideoSurfaceView: androidx.media2.widget.VideoViewInterface$SurfaceListener mSurfaceListener>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media2.widget.VideoSurfaceView: androidx.media2.widget.VideoViewInterface$SurfaceListener mSurfaceListener>;

        r4 = (android.view.View) r0;

        interfaceinvoke $r3.<androidx.media2.widget.VideoViewInterface$SurfaceListener: void onSurfaceDestroyed(android.view.View)>(r4);

     label1:
        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.media2.widget.VideoSurfaceView r0;
        int i0, i1, i2, i3, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i14, $i17, $i18, $i20, $i21, i24, i25, i26, i27;
        androidx.media2.MediaPlayer $r1, $r43;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r40, $r41;
        java.lang.String $r7, $r11, $r15, $r18, $r21, $r24, $r30, $r36, $r42;
        androidx.media2.VideoSize r44;

        r0 := @this: androidx.media2.widget.VideoSurfaceView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i24 = 0;

        i25 = 0;

        $r1 = r0.<androidx.media2.widget.VideoSurfaceView: androidx.media2.MediaPlayer mMediaPlayer>;

        if $r1 == null goto label1;

        $r43 = r0.<androidx.media2.widget.VideoSurfaceView: androidx.media2.MediaPlayer mMediaPlayer>;

        r44 = virtualinvoke $r43.<androidx.media2.MediaPlayer: androidx.media2.VideoSize getVideoSize()>();

        i24 = virtualinvoke r44.<androidx.media2.VideoSize: int getWidth()>();

        i25 = virtualinvoke r44.<androidx.media2.VideoSize: int getHeight()>();

     label1:
        $z0 = <androidx.media2.widget.VideoSurfaceView: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onMeasure(");

        $r18 = staticinvoke <android.view.View$MeasureSpec: java.lang.String toString(int)>(i0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r21 = staticinvoke <android.view.View$MeasureSpec: java.lang.String toString(int)>(i1);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoSurfaceView", $r24);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" measuredSize: ");

        $i17 = virtualinvoke r0.<androidx.media2.widget.VideoSurfaceView: int getMeasuredWidth()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i18 = virtualinvoke r0.<androidx.media2.widget.VideoSurfaceView: int getMeasuredHeight()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VideoSurfaceView", $r30);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" viewSize: ");

        $i20 = virtualinvoke r0.<androidx.media2.widget.VideoSurfaceView: int getWidth()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i21 = virtualinvoke r0.<androidx.media2.widget.VideoSurfaceView: int getHeight()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VideoSurfaceView", $r36);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVideoWidth/height: ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i24);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i25);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VideoSurfaceView", $r42);

     label2:
        i26 = staticinvoke <androidx.media2.widget.VideoSurfaceView: int getDefaultSize(int,int)>(i24, i0);

        i27 = staticinvoke <androidx.media2.widget.VideoSurfaceView: int getDefaultSize(int,int)>(i25, i1);

        if i24 <= 0 goto label4;

        if i25 <= 0 goto label4;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        i26 = i2;

        i27 = i3;

        $i9 = i24 * i27;

        $i8 = i26 * i25;

        if $i9 >= $i8 goto label3;

        $i14 = i27 * i24;

        i26 = $i14 / i25;

        $z2 = <androidx.media2.widget.VideoSurfaceView: boolean DEBUG>;

        if $z2 == 0 goto label4;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("image too wide, correcting. width: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i26);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoSurfaceView", $r15);

        goto label4;

     label3:
        $i11 = i24 * i27;

        $i10 = i26 * i25;

        if $i11 <= $i10 goto label4;

        $i12 = i26 * i25;

        i27 = $i12 / i24;

        $z1 = <androidx.media2.widget.VideoSurfaceView: boolean DEBUG>;

        if $z1 == 0 goto label4;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("image too tall, correcting. height: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoSurfaceView", $r11);

     label4:
        virtualinvoke r0.<androidx.media2.widget.VideoSurfaceView: void setMeasuredDimension(int,int)>(i26, i27);

        $z3 = <androidx.media2.widget.VideoSurfaceView: boolean DEBUG>;

        if $z3 == 0 goto label5;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VideoSurfaceView", "end of onMeasure()");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" measuredSize: ");

        $i5 = virtualinvoke r0.<androidx.media2.widget.VideoSurfaceView: int getMeasuredWidth()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i6 = virtualinvoke r0.<androidx.media2.widget.VideoSurfaceView: int getMeasuredHeight()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("VideoSurfaceView", $r7);

     label5:
        return;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("VideoSurfaceView", 3);

        <androidx.media2.widget.VideoSurfaceView: boolean DEBUG> = $z0;

        return;
    }

androidx.media2.widget.VideoSurfaceView$1
<androidx.media2.widget.VideoSurfaceView$1: androidx.media2.widget.VideoSurfaceView this$0>
    void <init>(androidx.media2.widget.VideoSurfaceView)
    {
        androidx.media2.widget.VideoSurfaceView$1 r0;
        androidx.media2.widget.VideoSurfaceView r1;

        r0 := @this: androidx.media2.widget.VideoSurfaceView$1;

        r1 := @parameter0: androidx.media2.widget.VideoSurfaceView;

        r0.<androidx.media2.widget.VideoSurfaceView$1: androidx.media2.widget.VideoSurfaceView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        androidx.media2.widget.VideoSurfaceView$1 r0;
        androidx.media2.widget.VideoSurfaceView $r1, $r3, $r4;
        androidx.media2.widget.VideoViewInterface$SurfaceListener $r2, $r5;

        r0 := @this: androidx.media2.widget.VideoSurfaceView$1;

        $r1 = r0.<androidx.media2.widget.VideoSurfaceView$1: androidx.media2.widget.VideoSurfaceView this$0>;

        $r2 = $r1.<androidx.media2.widget.VideoSurfaceView: androidx.media2.widget.VideoViewInterface$SurfaceListener mSurfaceListener>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.media2.widget.VideoSurfaceView$1: androidx.media2.widget.VideoSurfaceView this$0>;

        $r5 = $r3.<androidx.media2.widget.VideoSurfaceView: androidx.media2.widget.VideoViewInterface$SurfaceListener mSurfaceListener>;

        $r4 = r0.<androidx.media2.widget.VideoSurfaceView$1: androidx.media2.widget.VideoSurfaceView this$0>;

        interfaceinvoke $r5.<androidx.media2.widget.VideoViewInterface$SurfaceListener: void onSurfaceTakeOverDone(androidx.media2.widget.VideoViewInterface)>($r4);

     label1:
        return;
    }

