androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig
    public void <init>()
    {
        androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig r0;

        r0 := @this: androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig;

        specialinvoke r0.<org.junit.rules.ExternalResource: void <init>()>();

        return;
    }

    public static androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig forAllSupportedMimeTypes()
    {
        androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig $r0;

        $r0 = new androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig;

        specialinvoke $r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void <init>()>();

        return $r0;
    }

    protected void before() throws java.lang.Throwable
    {
        androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig r0;
        android.media.MediaCodecInfo$CodecProfileLevel r1, r2;
        com.google.common.collect.ImmutableList $r3, $r5, $r6, $r8, $r9, $r11;
        java.lang.Integer $r4, $r7, $r10;

        r0 := @this: androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig;

        r1 = staticinvoke <androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: android.media.MediaCodecInfo$CodecProfileLevel createProfileLevel(int,int)>(8, 524288);

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2135033992);

        $r5 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r4);

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String,java.util.List,java.util.List)>("exotest.video.avc", "video/avc", $r3, $r5);

        r2 = staticinvoke <androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: android.media.MediaCodecInfo$CodecProfileLevel createProfileLevel(int,int)>(1, 1);

        $r6 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r2);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2135033992);

        $r8 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r7);

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String,java.util.List,java.util.List)>("exotest.video.mpeg2", "video/mpeg2", $r6, $r8);

        $r9 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2135033992);

        $r11 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r10);

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String,java.util.List,java.util.List)>("exotest.video.vp9", "video/x-vnd.on2.vp9", $r9, $r11);

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String)>("exotest.audio.aac", "audio/mp4a-latm");

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String)>("exotest.audio.ac3", "audio/ac3");

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String)>("exotest.audio.ac4", "audio/ac4");

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String)>("exotest.audio.eac3", "audio/eac3");

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String)>("exotest.audio.eac3joc", "audio/eac3-joc");

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String)>("exotest.audio.flac", "audio/flac");

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String)>("exotest.audio.mpeg", "audio/mpeg");

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String)>("exotest.audio.mpegl2", "audio/mpeg-L2");

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String)>("exotest.audio.opus", "audio/opus");

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String)>("exotest.audio.vorbis", "audio/vorbis");

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String)>("exotest.audio.raw", "audio/raw");

        return;
    }

    protected void after()
    {
        androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig r0;

        r0 := @this: androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig;

        staticinvoke <androidx.media3.exoplayer.mediacodec.MediaCodecUtil: void clearDecoderInfoCache()>();

        staticinvoke <org.robolectric.shadows.ShadowMediaCodecList: void reset()>();

        staticinvoke <org.robolectric.shadows.ShadowMediaCodec: void clearCodecs()>();

        return;
    }

    private void configureCodec(java.lang.String, java.lang.String)
    {
        androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig r0;
        java.lang.String r1, r2;
        com.google.common.collect.ImmutableList $r3, $r4;

        r0 := @this: androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        $r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        specialinvoke r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig: void configureCodec(java.lang.String,java.lang.String,java.util.List,java.util.List)>(r1, r2, $r3, $r4);

        return;
    }

    private void configureCodec(java.lang.String, java.lang.String, java.util.List, java.util.List)
    {
        androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig r0;
        java.lang.String r1, r2;
        java.util.List r3, r4;
        android.media.MediaFormat r5, $r8;
        org.robolectric.shadows.MediaCodecInfoBuilder$CodecCapabilitiesBuilder r6, $r9;
        androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig$CodecImpl r7, $r16;
        boolean $z0, $z1;
        org.robolectric.shadows.MediaCodecInfoBuilder $r10, $r11, $r14;
        android.media.MediaCodecInfo$CodecCapabilities[] $r12;
        android.media.MediaCodecInfo$CodecCapabilities $r13;
        android.media.MediaCodecInfo $r15;
        org.robolectric.shadows.ShadowMediaCodec$CodecConfig $r17;
        int[] $r18;
        android.media.MediaCodecInfo$CodecProfileLevel[] $r20, $r22;
        java.lang.Object[] $r21;

        r0 := @this: androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        $r8 = new android.media.MediaFormat;

        specialinvoke $r8.<android.media.MediaFormat: void <init>()>();

        r5 = $r8;

        virtualinvoke r5.<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>("mime", r2);

        $r9 = staticinvoke <org.robolectric.shadows.MediaCodecInfoBuilder$CodecCapabilitiesBuilder: org.robolectric.shadows.MediaCodecInfoBuilder$CodecCapabilitiesBuilder newBuilder()>();

        r6 = virtualinvoke $r9.<org.robolectric.shadows.MediaCodecInfoBuilder$CodecCapabilitiesBuilder: org.robolectric.shadows.MediaCodecInfoBuilder$CodecCapabilitiesBuilder setMediaFormat(android.media.MediaFormat)>(r5);

        $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r20 = newarray (android.media.MediaCodecInfo$CodecProfileLevel)[0];

        $r21 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r20);

        $r22 = (android.media.MediaCodecInfo$CodecProfileLevel[]) $r21;

        virtualinvoke r6.<org.robolectric.shadows.MediaCodecInfoBuilder$CodecCapabilitiesBuilder: org.robolectric.shadows.MediaCodecInfoBuilder$CodecCapabilitiesBuilder setProfileLevels(android.media.MediaCodecInfo$CodecProfileLevel[])>($r22);

     label1:
        $z1 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $r18 = staticinvoke <com.google.common.primitives.Ints: int[] toArray(java.util.Collection)>(r4);

        virtualinvoke r6.<org.robolectric.shadows.MediaCodecInfoBuilder$CodecCapabilitiesBuilder: org.robolectric.shadows.MediaCodecInfoBuilder$CodecCapabilitiesBuilder setColorFormats(int[])>($r18);

     label2:
        $r10 = staticinvoke <org.robolectric.shadows.MediaCodecInfoBuilder: org.robolectric.shadows.MediaCodecInfoBuilder newBuilder()>();

        $r11 = virtualinvoke $r10.<org.robolectric.shadows.MediaCodecInfoBuilder: org.robolectric.shadows.MediaCodecInfoBuilder setName(java.lang.String)>(r1);

        $r12 = newarray (android.media.MediaCodecInfo$CodecCapabilities)[1];

        $r13 = virtualinvoke r6.<org.robolectric.shadows.MediaCodecInfoBuilder$CodecCapabilitiesBuilder: android.media.MediaCodecInfo$CodecCapabilities build()>();

        $r12[0] = $r13;

        $r14 = virtualinvoke $r11.<org.robolectric.shadows.MediaCodecInfoBuilder: org.robolectric.shadows.MediaCodecInfoBuilder setCapabilities(android.media.MediaCodecInfo$CodecCapabilities[])>($r12);

        $r15 = virtualinvoke $r14.<org.robolectric.shadows.MediaCodecInfoBuilder: android.media.MediaCodecInfo build()>();

        staticinvoke <org.robolectric.shadows.ShadowMediaCodecList: void addCodec(android.media.MediaCodecInfo)>($r15);

        $r16 = new androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig$CodecImpl;

        specialinvoke $r16.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig$CodecImpl: void <init>(java.lang.String)>(r2);

        r7 = $r16;

        $r17 = new org.robolectric.shadows.ShadowMediaCodec$CodecConfig;

        specialinvoke $r17.<org.robolectric.shadows.ShadowMediaCodec$CodecConfig: void <init>(int,int,org.robolectric.shadows.ShadowMediaCodec$CodecConfig$Codec)>(100000, 100000, r7);

        staticinvoke <org.robolectric.shadows.ShadowMediaCodec: void addDecoder(java.lang.String,org.robolectric.shadows.ShadowMediaCodec$CodecConfig)>(r1, $r17);

        return;
    }

    private static android.media.MediaCodecInfo$CodecProfileLevel createProfileLevel(int, int)
    {
        int i0, i1;
        android.media.MediaCodecInfo$CodecProfileLevel r0, $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.media.MediaCodecInfo$CodecProfileLevel;

        specialinvoke $r1.<android.media.MediaCodecInfo$CodecProfileLevel: void <init>()>();

        r0 = $r1;

        r0.<android.media.MediaCodecInfo$CodecProfileLevel: int profile> = i0;

        r0.<android.media.MediaCodecInfo$CodecProfileLevel: int level> = i1;

        return r0;
    }

androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig$CodecImpl
<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig$CodecImpl: java.lang.String mimeType>
    public void <init>(java.lang.String)
    {
        androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig$CodecImpl r0;
        java.lang.String r1;

        r0 := @this: androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig$CodecImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig$CodecImpl: java.lang.String mimeType> = r1;

        return;
    }

    public void process(java.nio.ByteBuffer, java.nio.ByteBuffer)
    {
        androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig$CodecImpl r0;
        java.nio.ByteBuffer r1, r2;
        byte[] r3;
        int $i0;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig$CodecImpl;

        r1 := @parameter0: java.nio.ByteBuffer;

        r2 := @parameter1: java.nio.ByteBuffer;

        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        r3 = newarray (byte)[$i0];

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r3);

        $r5 = r0.<androidx.media3.test.utils.robolectric.ShadowMediaCodecConfig$CodecImpl: java.lang.String mimeType>;

        $z0 = staticinvoke <androidx.media3.common.MimeTypes: boolean isAudio(java.lang.String)>($r5);

        if $z0 != 0 goto label1;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(r3);

     label1:
        return;
    }

