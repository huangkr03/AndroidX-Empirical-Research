androidx.room.MultiInstanceInvalidationService
<androidx.room.MultiInstanceInvalidationService: int maxClientId>
<androidx.room.MultiInstanceInvalidationService: java.util.Map clientNames>
<androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList callbackList>
<androidx.room.MultiInstanceInvalidationService: androidx.room.IMultiInstanceInvalidationService$Stub binder>
    public void <init>()
    {
        androidx.room.MultiInstanceInvalidationService r0;
        java.util.LinkedHashMap $r1;
        java.util.Map $r2;
        androidx.room.MultiInstanceInvalidationService$callbackList$1 $r3;
        android.os.RemoteCallbackList $r4;
        androidx.room.MultiInstanceInvalidationService$binder$1 $r5;
        androidx.room.IMultiInstanceInvalidationService$Stub $r6;

        r0 := @this: androidx.room.MultiInstanceInvalidationService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        $r2 = (java.util.Map) $r1;

        r0.<androidx.room.MultiInstanceInvalidationService: java.util.Map clientNames> = $r2;

        $r3 = new androidx.room.MultiInstanceInvalidationService$callbackList$1;

        specialinvoke $r3.<androidx.room.MultiInstanceInvalidationService$callbackList$1: void <init>(androidx.room.MultiInstanceInvalidationService)>(r0);

        $r4 = (android.os.RemoteCallbackList) $r3;

        r0.<androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList callbackList> = $r4;

        $r5 = new androidx.room.MultiInstanceInvalidationService$binder$1;

        specialinvoke $r5.<androidx.room.MultiInstanceInvalidationService$binder$1: void <init>(androidx.room.MultiInstanceInvalidationService)>(r0);

        $r6 = (androidx.room.IMultiInstanceInvalidationService$Stub) $r5;

        r0.<androidx.room.MultiInstanceInvalidationService: androidx.room.IMultiInstanceInvalidationService$Stub binder> = $r6;

        return;
    }

    public final int getMaxClientId$room_runtime_release()
    {
        androidx.room.MultiInstanceInvalidationService r0;
        int $i0;

        r0 := @this: androidx.room.MultiInstanceInvalidationService;

        $i0 = r0.<androidx.room.MultiInstanceInvalidationService: int maxClientId>;

        return $i0;
    }

    public final void setMaxClientId$room_runtime_release(int)
    {
        androidx.room.MultiInstanceInvalidationService r0;
        int i0;

        r0 := @this: androidx.room.MultiInstanceInvalidationService;

        i0 := @parameter0: int;

        r0.<androidx.room.MultiInstanceInvalidationService: int maxClientId> = i0;

        return;
    }

    public final java.util.Map getClientNames$room_runtime_release()
    {
        androidx.room.MultiInstanceInvalidationService r0;
        java.util.Map $r1;

        r0 := @this: androidx.room.MultiInstanceInvalidationService;

        $r1 = r0.<androidx.room.MultiInstanceInvalidationService: java.util.Map clientNames>;

        return $r1;
    }

    public final android.os.RemoteCallbackList getCallbackList$room_runtime_release()
    {
        androidx.room.MultiInstanceInvalidationService r0;
        android.os.RemoteCallbackList $r1;

        r0 := @this: androidx.room.MultiInstanceInvalidationService;

        $r1 = r0.<androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList callbackList>;

        return $r1;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        androidx.room.MultiInstanceInvalidationService r0;
        android.content.Intent r1;
        androidx.room.IMultiInstanceInvalidationService$Stub $r2;
        android.os.IBinder $r3;

        r0 := @this: androidx.room.MultiInstanceInvalidationService;

        r1 := @parameter0: android.content.Intent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "intent");

        $r2 = r0.<androidx.room.MultiInstanceInvalidationService: androidx.room.IMultiInstanceInvalidationService$Stub binder>;

        $r3 = (android.os.IBinder) $r2;

        return $r3;
    }

androidx.room.MultiInstanceInvalidationService$binder$1
<androidx.room.MultiInstanceInvalidationService$binder$1: androidx.room.MultiInstanceInvalidationService this$0>
    void <init>(androidx.room.MultiInstanceInvalidationService)
    {
        androidx.room.MultiInstanceInvalidationService$binder$1 r0;
        androidx.room.MultiInstanceInvalidationService $r1;

        r0 := @this: androidx.room.MultiInstanceInvalidationService$binder$1;

        $r1 := @parameter0: androidx.room.MultiInstanceInvalidationService;

        r0.<androidx.room.MultiInstanceInvalidationService$binder$1: androidx.room.MultiInstanceInvalidationService this$0> = $r1;

        specialinvoke r0.<androidx.room.IMultiInstanceInvalidationService$Stub: void <init>()>();

        return;
    }

    public int registerCallback(androidx.room.IMultiInstanceInvalidationCallback, java.lang.String)
    {
        androidx.room.MultiInstanceInvalidationService$binder$1 r0;
        androidx.room.IMultiInstanceInvalidationCallback r1;
        java.lang.String r2;
        android.os.RemoteCallbackList r3, r5, $r8;
        androidx.room.MultiInstanceInvalidationService r4, $r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.Integer r6, $r10;
        android.os.IInterface $r9;
        boolean $z0;
        java.util.Map $r11;
        java.lang.Throwable $r13;

        r0 := @this: androidx.room.MultiInstanceInvalidationService$binder$1;

        r1 := @parameter0: androidx.room.IMultiInstanceInvalidationCallback;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        if r2 != null goto label1;

        return 0;

     label1:
        $r7 = r0.<androidx.room.MultiInstanceInvalidationService$binder$1: androidx.room.MultiInstanceInvalidationService this$0>;

        r3 = virtualinvoke $r7.<androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList getCallbackList$room_runtime_release()>();

        r4 = r0.<androidx.room.MultiInstanceInvalidationService$binder$1: androidx.room.MultiInstanceInvalidationService this$0>;

        r5 = r3;

        entermonitor r5;

     label2:
        $i2 = virtualinvoke r4.<androidx.room.MultiInstanceInvalidationService: int getMaxClientId$room_runtime_release()>();

        $i3 = $i2 + 1;

        virtualinvoke r4.<androidx.room.MultiInstanceInvalidationService: void setMaxClientId$room_runtime_release(int)>($i3);

        i0 = virtualinvoke r4.<androidx.room.MultiInstanceInvalidationService: int getMaxClientId$room_runtime_release()>();

        $r8 = virtualinvoke r4.<androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList getCallbackList$room_runtime_release()>();

        $r9 = (android.os.IInterface) r1;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = virtualinvoke $r8.<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)>($r9, $r10);

        if $z0 == 0 goto label3;

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11 = virtualinvoke r4.<androidx.room.MultiInstanceInvalidationService: java.util.Map getClientNames$room_runtime_release()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r2);

        $i7 = i0;

        goto label4;

     label3:
        $i4 = virtualinvoke r4.<androidx.room.MultiInstanceInvalidationService: int getMaxClientId$room_runtime_release()>();

        $i5 = $i4 + -1;

        virtualinvoke r4.<androidx.room.MultiInstanceInvalidationService: void setMaxClientId$room_runtime_release(int)>($i5);

        virtualinvoke r4.<androidx.room.MultiInstanceInvalidationService: int getMaxClientId$room_runtime_release()>();

        $i7 = 0;

     label4:
        i1 = $i7;

     label5:
        exitmonitor r5;

        return i1;

     label6:
        $r13 := @caughtexception;

     label7:
        exitmonitor r5;

        throw $r13;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback, int)
    {
        androidx.room.MultiInstanceInvalidationService$binder$1 r0;
        androidx.room.IMultiInstanceInvalidationCallback r1;
        int i0;
        android.os.RemoteCallbackList r2, r4, $r6;
        androidx.room.MultiInstanceInvalidationService r3, $r5;
        android.os.IInterface $r7;
        java.util.Map $r8;
        java.lang.Integer $r9;
        java.lang.Object $r10;
        java.lang.Throwable $r11;
        java.lang.String $r12;

        r0 := @this: androidx.room.MultiInstanceInvalidationService$binder$1;

        r1 := @parameter0: androidx.room.IMultiInstanceInvalidationCallback;

        i0 := @parameter1: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        $r5 = r0.<androidx.room.MultiInstanceInvalidationService$binder$1: androidx.room.MultiInstanceInvalidationService this$0>;

        r2 = virtualinvoke $r5.<androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList getCallbackList$room_runtime_release()>();

        r3 = r0.<androidx.room.MultiInstanceInvalidationService$binder$1: androidx.room.MultiInstanceInvalidationService this$0>;

        r4 = r2;

        entermonitor r4;

     label1:
        $r6 = virtualinvoke r3.<androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList getCallbackList$room_runtime_release()>();

        $r7 = (android.os.IInterface) r1;

        virtualinvoke $r6.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>($r7);

        $r8 = virtualinvoke r3.<androidx.room.MultiInstanceInvalidationService: java.util.Map getClientNames$room_runtime_release()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r9);

        $r12 = (java.lang.String) $r10;

     label2:
        exitmonitor r4;

        goto label5;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor r4;

        throw $r11;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void broadcastInvalidation(int, java.lang.String[])
    {
        androidx.room.MultiInstanceInvalidationService$binder$1 r0;
        int i0, i1, i2, i5;
        java.lang.String[] r1;
        android.os.RemoteCallbackList r2, r4, $r12, $r13, $r14, $r20, $r24;
        androidx.room.MultiInstanceInvalidationService r3, $r8;
        java.lang.String r5, r6;
        java.lang.Throwable r7, $r23, $r25, $r26, $r27, r28;
        java.util.Map $r9, $r17;
        java.lang.Integer $r10, $r16, $r18;
        java.lang.Object $r11, $r15, $r19;
        boolean $z0;
        android.os.IInterface $r21;
        androidx.room.IMultiInstanceInvalidationCallback $r22;
        kotlin.Unit $r29;

        r0 := @this: androidx.room.MultiInstanceInvalidationService$binder$1;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "tables");

        $r8 = r0.<androidx.room.MultiInstanceInvalidationService$binder$1: androidx.room.MultiInstanceInvalidationService this$0>;

        r2 = virtualinvoke $r8.<androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList getCallbackList$room_runtime_release()>();

        r3 = r0.<androidx.room.MultiInstanceInvalidationService$binder$1: androidx.room.MultiInstanceInvalidationService this$0>;

        r4 = r2;

        entermonitor r4;

     label01:
        $r9 = virtualinvoke r3.<androidx.room.MultiInstanceInvalidationService: java.util.Map getClientNames$room_runtime_release()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        r5 = (java.lang.String) $r11;

        if r5 != null goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ROOM", "Remote invalidation client ID not registered");

     label02:
        exitmonitor r4;

        return;

     label03:
        $r12 = virtualinvoke r3.<androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList getCallbackList$room_runtime_release()>();

        i1 = virtualinvoke $r12.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label04:
        i5 = 0;

     label05:
        if i5 >= i1 goto label11;

        $r14 = virtualinvoke r3.<androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList getCallbackList$room_runtime_release()>();

        $r15 = virtualinvoke $r14.<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>(i5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r15, "null cannot be cast to non-null type kotlin.Int");

        $r16 = (java.lang.Integer) $r15;

        i2 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r17 = virtualinvoke r3.<androidx.room.MultiInstanceInvalidationService: java.util.Map getClientNames$room_runtime_release()>();

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r19 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18);

        r6 = (java.lang.String) $r19;

        if i0 == i2 goto label06;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r5, r6);

        if $z0 != 0 goto label07;

     label06:
        goto label10;

     label07:
        $r20 = virtualinvoke r3.<androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList getCallbackList$room_runtime_release()>();

        $r21 = virtualinvoke $r20.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i5);

        $r22 = (androidx.room.IMultiInstanceInvalidationCallback) $r21;

        interfaceinvoke $r22.<androidx.room.IMultiInstanceInvalidationCallback: void onInvalidation(java.lang.String[])>(r1);

     label08:
        goto label10;

     label09:
        $r26 := @caughtexception;

        r7 = $r26;

        $r27 = (java.lang.Throwable) r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ROOM", "Error invoking a remote callback", $r27);

     label10:
        i5 = i5 + 1;

        goto label05;

     label11:
        $r13 = virtualinvoke r3.<androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList getCallbackList$room_runtime_release()>();

        virtualinvoke $r13.<android.os.RemoteCallbackList: void finishBroadcast()>();

        goto label14;

     label12:
        $r23 := @caughtexception;

        r28 = $r23;

     label13:
        $r24 = virtualinvoke r3.<androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList getCallbackList$room_runtime_release()>();

        virtualinvoke $r24.<android.os.RemoteCallbackList: void finishBroadcast()>();

        throw r28;

     label14:
        $r29 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label15:
        exitmonitor r4;

        goto label18;

     label16:
        $r25 := @caughtexception;

     label17:
        exitmonitor r4;

        throw $r25;

     label18:
        return;

        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label04 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

androidx.room.MultiInstanceInvalidationService$callbackList$1
<androidx.room.MultiInstanceInvalidationService$callbackList$1: androidx.room.MultiInstanceInvalidationService this$0>
    void <init>(androidx.room.MultiInstanceInvalidationService)
    {
        androidx.room.MultiInstanceInvalidationService$callbackList$1 r0;
        androidx.room.MultiInstanceInvalidationService $r1;

        r0 := @this: androidx.room.MultiInstanceInvalidationService$callbackList$1;

        $r1 := @parameter0: androidx.room.MultiInstanceInvalidationService;

        r0.<androidx.room.MultiInstanceInvalidationService$callbackList$1: androidx.room.MultiInstanceInvalidationService this$0> = $r1;

        specialinvoke r0.<android.os.RemoteCallbackList: void <init>()>();

        return;
    }

    public void onCallbackDied(androidx.room.IMultiInstanceInvalidationCallback, java.lang.Object)
    {
        androidx.room.MultiInstanceInvalidationService$callbackList$1 r0;
        androidx.room.IMultiInstanceInvalidationCallback r1;
        java.lang.Object r2;
        androidx.room.MultiInstanceInvalidationService $r3;
        java.util.Map $r4;
        java.lang.Integer $r5;

        r0 := @this: androidx.room.MultiInstanceInvalidationService$callbackList$1;

        r1 := @parameter0: androidx.room.IMultiInstanceInvalidationCallback;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "cookie");

        $r3 = r0.<androidx.room.MultiInstanceInvalidationService$callbackList$1: androidx.room.MultiInstanceInvalidationService this$0>;

        $r4 = virtualinvoke $r3.<androidx.room.MultiInstanceInvalidationService: java.util.Map getClientNames$room_runtime_release()>();

        $r5 = (java.lang.Integer) r2;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5);

        return;
    }

    public volatile void onCallbackDied(android.os.IInterface, java.lang.Object)
    {
        androidx.room.MultiInstanceInvalidationService$callbackList$1 r0;
        android.os.IInterface r1;
        java.lang.Object r2;
        androidx.room.IMultiInstanceInvalidationCallback $r3;

        r0 := @this: androidx.room.MultiInstanceInvalidationService$callbackList$1;

        r1 := @parameter0: android.os.IInterface;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.room.IMultiInstanceInvalidationCallback) r1;

        virtualinvoke r0.<androidx.room.MultiInstanceInvalidationService$callbackList$1: void onCallbackDied(androidx.room.IMultiInstanceInvalidationCallback,java.lang.Object)>($r3, r2);

        return;
    }

