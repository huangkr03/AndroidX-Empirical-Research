androidx.camera.view.TextureViewImplementation
<androidx.camera.view.TextureViewImplementation: java.lang.String TAG>
<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView>
<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mSurfaceTexture>
<androidx.camera.view.TextureViewImplementation: com.google.common.util.concurrent.ListenableFuture mSurfaceReleaseFuture>
<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest>
<androidx.camera.view.TextureViewImplementation: boolean mIsSurfaceTextureDetachedFromView>
<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mDetachedSurfaceTexture>
<androidx.camera.view.TextureViewImplementation: java.util.concurrent.atomic.AtomicReference mNextFrameCompleter>
<androidx.camera.view.TextureViewImplementation: androidx.camera.view.PreviewViewImplementation$OnSurfaceNotInUseListener mOnSurfaceNotInUseListener>
<androidx.camera.view.TextureViewImplementation: androidx.camera.view.PreviewView$OnFrameUpdateListener mOnFrameUpdateListener>
<androidx.camera.view.TextureViewImplementation: java.util.concurrent.Executor mFrameUpdateExecutor>
    void <init>(android.widget.FrameLayout, androidx.camera.view.PreviewTransformation)
    {
        androidx.camera.view.TextureViewImplementation r0;
        android.widget.FrameLayout r1;
        androidx.camera.view.PreviewTransformation r2;
        java.util.concurrent.atomic.AtomicReference $r3;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        r1 := @parameter0: android.widget.FrameLayout;

        r2 := @parameter1: androidx.camera.view.PreviewTransformation;

        specialinvoke r0.<androidx.camera.view.PreviewViewImplementation: void <init>(android.widget.FrameLayout,androidx.camera.view.PreviewTransformation)>(r1, r2);

        r0.<androidx.camera.view.TextureViewImplementation: boolean mIsSurfaceTextureDetachedFromView> = 0;

        $r3 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        r0.<androidx.camera.view.TextureViewImplementation: java.util.concurrent.atomic.AtomicReference mNextFrameCompleter> = $r3;

        return;
    }

    android.view.View getPreview()
    {
        androidx.camera.view.TextureViewImplementation r0;
        android.view.TextureView $r1;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        $r1 = r0.<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView>;

        return $r1;
    }

    void onAttachedToWindow()
    {
        androidx.camera.view.TextureViewImplementation r0;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        specialinvoke r0.<androidx.camera.view.TextureViewImplementation: void reattachSurfaceTexture()>();

        return;
    }

    void onDetachedFromWindow()
    {
        androidx.camera.view.TextureViewImplementation r0;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        r0.<androidx.camera.view.TextureViewImplementation: boolean mIsSurfaceTextureDetachedFromView> = 1;

        return;
    }

    void onSurfaceRequested(androidx.camera.core.SurfaceRequest, androidx.camera.view.PreviewViewImplementation$OnSurfaceNotInUseListener)
    {
        androidx.camera.view.TextureViewImplementation r0;
        androidx.camera.core.SurfaceRequest r1, $r4, $r9;
        androidx.camera.view.PreviewViewImplementation$OnSurfaceNotInUseListener r2;
        android.util.Size $r3;
        android.view.TextureView $r5;
        android.content.Context $r6;
        java.util.concurrent.Executor $r7;
        java.lang.Runnable $r8;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        r1 := @parameter0: androidx.camera.core.SurfaceRequest;

        r2 := @parameter1: androidx.camera.view.PreviewViewImplementation$OnSurfaceNotInUseListener;

        $r3 = virtualinvoke r1.<androidx.camera.core.SurfaceRequest: android.util.Size getResolution()>();

        r0.<androidx.camera.view.TextureViewImplementation: android.util.Size mResolution> = $r3;

        r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.view.PreviewViewImplementation$OnSurfaceNotInUseListener mOnSurfaceNotInUseListener> = r2;

        virtualinvoke r0.<androidx.camera.view.TextureViewImplementation: void initializePreview()>();

        $r4 = r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest>;

        if $r4 == null goto label1;

        $r9 = r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest>;

        virtualinvoke $r9.<androidx.camera.core.SurfaceRequest: boolean willNotProvideSurface()>();

     label1:
        r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest> = r1;

        $r5 = r0.<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView>;

        $r6 = virtualinvoke $r5.<android.view.TextureView: android.content.Context getContext()>();

        $r7 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r6);

        $r8 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.view.TextureViewImplementation,androidx.camera.core.SurfaceRequest)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.view.TextureViewImplementation: void lambda$onSurfaceRequested$0(androidx.camera.core.SurfaceRequest)>, methodtype: void __METHODTYPE__());

        virtualinvoke r1.<androidx.camera.core.SurfaceRequest: void addRequestCancellationListener(java.util.concurrent.Executor,java.lang.Runnable)>($r7, $r8);

        virtualinvoke r0.<androidx.camera.view.TextureViewImplementation: void tryToProvidePreviewSurface()>();

        return;
    }

    private void notifySurfaceNotInUse()
    {
        androidx.camera.view.TextureViewImplementation r0;
        androidx.camera.view.PreviewViewImplementation$OnSurfaceNotInUseListener $r1, $r2;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        $r1 = r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.view.PreviewViewImplementation$OnSurfaceNotInUseListener mOnSurfaceNotInUseListener>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.view.PreviewViewImplementation$OnSurfaceNotInUseListener mOnSurfaceNotInUseListener>;

        interfaceinvoke $r2.<androidx.camera.view.PreviewViewImplementation$OnSurfaceNotInUseListener: void onSurfaceNotInUse()>();

        r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.view.PreviewViewImplementation$OnSurfaceNotInUseListener mOnSurfaceNotInUseListener> = null;

     label1:
        return;
    }

    public void initializePreview()
    {
        androidx.camera.view.TextureViewImplementation r0;
        android.widget.FrameLayout $r1, $r6, $r14, $r16;
        android.util.Size $r3, $r9, $r11;
        android.view.TextureView $r5, $r10, $r13, $r15;
        android.content.Context $r7;
        android.widget.FrameLayout$LayoutParams $r8;
        int $i0, $i1;
        androidx.camera.view.TextureViewImplementation$1 $r12;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        $r1 = r0.<androidx.camera.view.TextureViewImplementation: android.widget.FrameLayout mParent>;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $r3 = r0.<androidx.camera.view.TextureViewImplementation: android.util.Size mResolution>;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = new android.view.TextureView;

        $r6 = r0.<androidx.camera.view.TextureViewImplementation: android.widget.FrameLayout mParent>;

        $r7 = virtualinvoke $r6.<android.widget.FrameLayout: android.content.Context getContext()>();

        specialinvoke $r5.<android.view.TextureView: void <init>(android.content.Context)>($r7);

        r0.<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView> = $r5;

        $r10 = r0.<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView>;

        $r8 = new android.widget.FrameLayout$LayoutParams;

        $r9 = r0.<androidx.camera.view.TextureViewImplementation: android.util.Size mResolution>;

        $i0 = virtualinvoke $r9.<android.util.Size: int getWidth()>();

        $r11 = r0.<androidx.camera.view.TextureViewImplementation: android.util.Size mResolution>;

        $i1 = virtualinvoke $r11.<android.util.Size: int getHeight()>();

        specialinvoke $r8.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        virtualinvoke $r10.<android.view.TextureView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r8);

        $r13 = r0.<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView>;

        $r12 = new androidx.camera.view.TextureViewImplementation$1;

        specialinvoke $r12.<androidx.camera.view.TextureViewImplementation$1: void <init>(androidx.camera.view.TextureViewImplementation)>(r0);

        virtualinvoke $r13.<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)>($r12);

        $r14 = r0.<androidx.camera.view.TextureViewImplementation: android.widget.FrameLayout mParent>;

        virtualinvoke $r14.<android.widget.FrameLayout: void removeAllViews()>();

        $r16 = r0.<androidx.camera.view.TextureViewImplementation: android.widget.FrameLayout mParent>;

        $r15 = r0.<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView>;

        virtualinvoke $r16.<android.widget.FrameLayout: void addView(android.view.View)>($r15);

        return;
    }

    void tryToProvidePreviewSurface()
    {
        androidx.camera.view.TextureViewImplementation r0;
        android.view.Surface r1, $r10;
        androidx.camera.core.SurfaceRequest r2, $r6;
        com.google.common.util.concurrent.ListenableFuture r3, $r13;
        android.util.Size $r4, $r7, $r9;
        android.graphics.SurfaceTexture $r5, $r8, $r11;
        int $i0, $i1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r12;
        java.lang.Runnable $r14;
        android.view.TextureView $r15;
        android.content.Context $r16;
        java.util.concurrent.Executor $r17;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        $r4 = r0.<androidx.camera.view.TextureViewImplementation: android.util.Size mResolution>;

        if $r4 == null goto label1;

        $r5 = r0.<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mSurfaceTexture>;

        if $r5 == null goto label1;

        $r6 = r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest>;

        if $r6 != null goto label2;

     label1:
        return;

     label2:
        $r8 = r0.<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mSurfaceTexture>;

        $r7 = r0.<androidx.camera.view.TextureViewImplementation: android.util.Size mResolution>;

        $i0 = virtualinvoke $r7.<android.util.Size: int getWidth()>();

        $r9 = r0.<androidx.camera.view.TextureViewImplementation: android.util.Size mResolution>;

        $i1 = virtualinvoke $r9.<android.util.Size: int getHeight()>();

        virtualinvoke $r8.<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)>($i0, $i1);

        $r10 = new android.view.Surface;

        $r11 = r0.<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mSurfaceTexture>;

        specialinvoke $r10.<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>($r11);

        r1 = $r10;

        r2 = r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest>;

        $r12 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (androidx.camera.view.TextureViewImplementation,android.view.Surface)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.view.TextureViewImplementation: java.lang.Object lambda$tryToProvidePreviewSurface$1(android.view.Surface,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        r3 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r12);

        r0.<androidx.camera.view.TextureViewImplementation: com.google.common.util.concurrent.ListenableFuture mSurfaceReleaseFuture> = r3;

        $r13 = r0.<androidx.camera.view.TextureViewImplementation: com.google.common.util.concurrent.ListenableFuture mSurfaceReleaseFuture>;

        $r14 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.view.TextureViewImplementation,android.view.Surface,com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.SurfaceRequest)>(r0, r1, r3, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.view.TextureViewImplementation: void lambda$tryToProvidePreviewSurface$2(android.view.Surface,com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.SurfaceRequest)>, methodtype: void __METHODTYPE__());

        $r15 = r0.<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView>;

        $r16 = virtualinvoke $r15.<android.view.TextureView: android.content.Context getContext()>();

        $r17 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r16);

        interfaceinvoke $r13.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r14, $r17);

        virtualinvoke r0.<androidx.camera.view.TextureViewImplementation: void onSurfaceProvided()>();

        return;
    }

    private void reattachSurfaceTexture()
    {
        androidx.camera.view.TextureViewImplementation r0;
        boolean $z0;
        android.graphics.SurfaceTexture $r1, $r3, $r4, $r5;
        android.view.TextureView $r2, $r6;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        $z0 = r0.<androidx.camera.view.TextureViewImplementation: boolean mIsSurfaceTextureDetachedFromView>;

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mDetachedSurfaceTexture>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView>;

        $r3 = virtualinvoke $r2.<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()>();

        $r4 = r0.<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mDetachedSurfaceTexture>;

        if $r3 == $r4 goto label1;

        $r6 = r0.<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView>;

        $r5 = r0.<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mDetachedSurfaceTexture>;

        virtualinvoke $r6.<android.view.TextureView: void setSurfaceTexture(android.graphics.SurfaceTexture)>($r5);

        r0.<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mDetachedSurfaceTexture> = null;

        r0.<androidx.camera.view.TextureViewImplementation: boolean mIsSurfaceTextureDetachedFromView> = 0;

     label1:
        return;
    }

    com.google.common.util.concurrent.ListenableFuture waitForNextFrame()
    {
        androidx.camera.view.TextureViewImplementation r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Resolver $r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        $r1 = dynamicinvoke "attachCompleter" <androidx.concurrent.futures.CallbackToFutureAdapter$Resolver (androidx.camera.view.TextureViewImplementation)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer), methodhandle: "REF_INVOKE_SPECIAL" <androidx.camera.view.TextureViewImplementation: java.lang.Object lambda$waitForNextFrame$3(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>, methodtype: java.lang.Object __METHODTYPE__(androidx.concurrent.futures.CallbackToFutureAdapter$Completer));

        $r2 = staticinvoke <androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)>($r1);

        return $r2;
    }

    android.graphics.Bitmap getPreviewBitmap()
    {
        androidx.camera.view.TextureViewImplementation r0;
        android.view.TextureView $r1, $r2, $r3;
        boolean $z0;
        android.graphics.Bitmap $r4;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        $r1 = r0.<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView>;

        $z0 = virtualinvoke $r2.<android.view.TextureView: boolean isAvailable()>();

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = r0.<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView>;

        $r4 = virtualinvoke $r3.<android.view.TextureView: android.graphics.Bitmap getBitmap()>();

        return $r4;
    }

    void setFrameUpdateListener(java.util.concurrent.Executor, androidx.camera.view.PreviewView$OnFrameUpdateListener)
    {
        androidx.camera.view.TextureViewImplementation r0;
        java.util.concurrent.Executor r1;
        androidx.camera.view.PreviewView$OnFrameUpdateListener r2;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        r1 := @parameter0: java.util.concurrent.Executor;

        r2 := @parameter1: androidx.camera.view.PreviewView$OnFrameUpdateListener;

        r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.view.PreviewView$OnFrameUpdateListener mOnFrameUpdateListener> = r2;

        r0.<androidx.camera.view.TextureViewImplementation: java.util.concurrent.Executor mFrameUpdateExecutor> = r1;

        return;
    }

    private java.lang.Object lambda$waitForNextFrame$3(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        androidx.camera.view.TextureViewImplementation r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        java.util.concurrent.atomic.AtomicReference $r2;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        r1 := @parameter0: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        $r2 = r0.<androidx.camera.view.TextureViewImplementation: java.util.concurrent.atomic.AtomicReference mNextFrameCompleter>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r1);

        return "textureViewImpl_waitForNextFrame";
    }

    private void lambda$tryToProvidePreviewSurface$2(android.view.Surface, com.google.common.util.concurrent.ListenableFuture, androidx.camera.core.SurfaceRequest)
    {
        androidx.camera.view.TextureViewImplementation r0;
        android.view.Surface r1;
        com.google.common.util.concurrent.ListenableFuture r2, $r4;
        androidx.camera.core.SurfaceRequest r3, $r5;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        r1 := @parameter0: android.view.Surface;

        r2 := @parameter1: com.google.common.util.concurrent.ListenableFuture;

        r3 := @parameter2: androidx.camera.core.SurfaceRequest;

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("TextureViewImpl", "Safe to release surface.");

        specialinvoke r0.<androidx.camera.view.TextureViewImplementation: void notifySurfaceNotInUse()>();

        virtualinvoke r1.<android.view.Surface: void release()>();

        $r4 = r0.<androidx.camera.view.TextureViewImplementation: com.google.common.util.concurrent.ListenableFuture mSurfaceReleaseFuture>;

        if $r4 != r2 goto label1;

        r0.<androidx.camera.view.TextureViewImplementation: com.google.common.util.concurrent.ListenableFuture mSurfaceReleaseFuture> = null;

     label1:
        $r5 = r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest>;

        if $r5 != r3 goto label2;

        r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest> = null;

     label2:
        return;
    }

    private java.lang.Object lambda$tryToProvidePreviewSurface$1(android.view.Surface, androidx.concurrent.futures.CallbackToFutureAdapter$Completer) throws java.lang.Exception
    {
        androidx.camera.view.TextureViewImplementation r0;
        android.view.Surface r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r2;
        androidx.camera.core.SurfaceRequest $r3, $r9;
        java.util.concurrent.Executor $r4;
        androidx.core.util.Consumer $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r12, $r13;
        java.lang.String $r14;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        r1 := @parameter0: android.view.Surface;

        r2 := @parameter1: androidx.concurrent.futures.CallbackToFutureAdapter$Completer;

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("TextureViewImpl", "Surface set on Preview.");

        $r3 = r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest>;

        $r4 = staticinvoke <androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor directExecutor()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r6 = dynamicinvoke "accept" <androidx.core.util.Consumer (androidx.concurrent.futures.CallbackToFutureAdapter$Completer)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>, methodtype: void __METHODTYPE__(androidx.camera.core.SurfaceRequest$Result));

        virtualinvoke $r3.<androidx.camera.core.SurfaceRequest: void provideSurface(android.view.Surface,java.util.concurrent.Executor,androidx.core.util.Consumer)>(r1, $r4, $r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("provideSurface[request=");

        $r9 = r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" surface=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    private void lambda$onSurfaceRequested$0(androidx.camera.core.SurfaceRequest)
    {
        androidx.camera.view.TextureViewImplementation r0;
        androidx.camera.core.SurfaceRequest r1, $r2, $r3;

        r0 := @this: androidx.camera.view.TextureViewImplementation;

        r1 := @parameter0: androidx.camera.core.SurfaceRequest;

        $r2 = r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest>;

        if $r3 != r1 goto label1;

        r0.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest> = null;

        r0.<androidx.camera.view.TextureViewImplementation: com.google.common.util.concurrent.ListenableFuture mSurfaceReleaseFuture> = null;

     label1:
        specialinvoke r0.<androidx.camera.view.TextureViewImplementation: void notifySurfaceNotInUse()>();

        return;
    }

androidx.camera.view.TextureViewImplementation$1$1
<androidx.camera.view.TextureViewImplementation$1$1: android.graphics.SurfaceTexture val$surfaceTexture>
<androidx.camera.view.TextureViewImplementation$1$1: androidx.camera.view.TextureViewImplementation$1 this$1>
    void <init>(androidx.camera.view.TextureViewImplementation$1, android.graphics.SurfaceTexture)
    {
        androidx.camera.view.TextureViewImplementation$1$1 r0;
        androidx.camera.view.TextureViewImplementation$1 r1;
        android.graphics.SurfaceTexture r2;

        r0 := @this: androidx.camera.view.TextureViewImplementation$1$1;

        r1 := @parameter0: androidx.camera.view.TextureViewImplementation$1;

        r2 := @parameter1: android.graphics.SurfaceTexture;

        r0.<androidx.camera.view.TextureViewImplementation$1$1: androidx.camera.view.TextureViewImplementation$1 this$1> = r1;

        r0.<androidx.camera.view.TextureViewImplementation$1$1: android.graphics.SurfaceTexture val$surfaceTexture> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSuccess(androidx.camera.core.SurfaceRequest$Result)
    {
        androidx.camera.view.TextureViewImplementation$1$1 r0;
        androidx.camera.core.SurfaceRequest$Result r1;
        int $i0;
        android.graphics.SurfaceTexture $r2, $r5;
        androidx.camera.view.TextureViewImplementation$1 $r3, $r6;
        androidx.camera.view.TextureViewImplementation $r4, $r7;
        boolean $z0;

        r0 := @this: androidx.camera.view.TextureViewImplementation$1$1;

        r1 := @parameter0: androidx.camera.core.SurfaceRequest$Result;

        $i0 = virtualinvoke r1.<androidx.camera.core.SurfaceRequest$Result: int getResultCode()>();

        if $i0 == 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>($z0, "Unexpected result from SurfaceRequest. Surface was provided twice.");

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("TextureViewImpl", "SurfaceTexture about to manually be destroyed");

        $r2 = r0.<androidx.camera.view.TextureViewImplementation$1$1: android.graphics.SurfaceTexture val$surfaceTexture>;

        virtualinvoke $r2.<android.graphics.SurfaceTexture: void release()>();

        $r3 = r0.<androidx.camera.view.TextureViewImplementation$1$1: androidx.camera.view.TextureViewImplementation$1 this$1>;

        $r4 = $r3.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        $r5 = $r4.<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mDetachedSurfaceTexture>;

        if $r5 == null goto label3;

        $r6 = r0.<androidx.camera.view.TextureViewImplementation$1$1: androidx.camera.view.TextureViewImplementation$1 this$1>;

        $r7 = $r6.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        $r7.<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mDetachedSurfaceTexture> = null;

     label3:
        return;
    }

    public void onFailure(java.lang.Throwable)
    {
        androidx.camera.view.TextureViewImplementation$1$1 r0;
        java.lang.Throwable r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: androidx.camera.view.TextureViewImplementation$1$1;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("SurfaceReleaseFuture did not complete nicely.", r1);

        throw $r2;
    }

    public volatile void onSuccess(java.lang.Object)
    {
        androidx.camera.view.TextureViewImplementation$1$1 r0;
        java.lang.Object r1;
        androidx.camera.core.SurfaceRequest$Result $r2;

        r0 := @this: androidx.camera.view.TextureViewImplementation$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.camera.core.SurfaceRequest$Result) r1;

        virtualinvoke r0.<androidx.camera.view.TextureViewImplementation$1$1: void onSuccess(androidx.camera.core.SurfaceRequest$Result)>($r2);

        return;
    }

androidx.camera.view.TextureViewImplementation$1
<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>
    void <init>(androidx.camera.view.TextureViewImplementation)
    {
        androidx.camera.view.TextureViewImplementation$1 r0;
        androidx.camera.view.TextureViewImplementation r1;

        r0 := @this: androidx.camera.view.TextureViewImplementation$1;

        r1 := @parameter0: androidx.camera.view.TextureViewImplementation;

        r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSurfaceTextureAvailable(android.graphics.SurfaceTexture, int, int)
    {
        androidx.camera.view.TextureViewImplementation$1 r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r15, $r16, $r19;
        java.lang.String $r7, $r20;
        androidx.camera.view.TextureViewImplementation $r8, $r9, $r11, $r12, $r17, $r21;
        com.google.common.util.concurrent.ListenableFuture $r10;
        androidx.camera.core.SurfaceRequest $r13, $r18, $r22;
        androidx.camera.core.impl.DeferrableSurface $r23;

        r0 := @this: androidx.camera.view.TextureViewImplementation$1;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SurfaceTexture available. Size: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("TextureViewImpl", $r7);

        $r8 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        $r8.<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mSurfaceTexture> = r1;

        $r9 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        $r10 = $r9.<androidx.camera.view.TextureViewImplementation: com.google.common.util.concurrent.ListenableFuture mSurfaceReleaseFuture>;

        if $r10 == null goto label1;

        $r12 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        $r13 = $r12.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest>;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r13);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Surface invalidated ");

        $r17 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        $r18 = $r17.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest>;

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("TextureViewImpl", $r20);

        $r21 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        $r22 = $r21.<androidx.camera.view.TextureViewImplementation: androidx.camera.core.SurfaceRequest mSurfaceRequest>;

        $r23 = virtualinvoke $r22.<androidx.camera.core.SurfaceRequest: androidx.camera.core.impl.DeferrableSurface getDeferrableSurface()>();

        virtualinvoke $r23.<androidx.camera.core.impl.DeferrableSurface: void close()>();

        goto label2;

     label1:
        $r11 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        virtualinvoke $r11.<androidx.camera.view.TextureViewImplementation: void tryToProvidePreviewSurface()>();

     label2:
        return;
    }

    public void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture, int, int)
    {
        androidx.camera.view.TextureViewImplementation$1 r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: androidx.camera.view.TextureViewImplementation$1;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SurfaceTexture size changed: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("TextureViewImpl", $r7);

        return;
    }

    public boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
    {
        androidx.camera.view.TextureViewImplementation$1 r0;
        android.graphics.SurfaceTexture r1;
        androidx.camera.view.TextureViewImplementation $r2, $r3, $r5, $r8, $r12;
        com.google.common.util.concurrent.ListenableFuture $r4, $r7;
        androidx.camera.view.TextureViewImplementation$1$1 $r6;
        android.view.TextureView $r9;
        android.content.Context $r10;
        java.util.concurrent.Executor $r11;

        r0 := @this: androidx.camera.view.TextureViewImplementation$1;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $r2 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        $r2.<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mSurfaceTexture> = null;

        $r3 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        $r4 = $r3.<androidx.camera.view.TextureViewImplementation: com.google.common.util.concurrent.ListenableFuture mSurfaceReleaseFuture>;

        if $r4 == null goto label1;

        $r5 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        $r7 = $r5.<androidx.camera.view.TextureViewImplementation: com.google.common.util.concurrent.ListenableFuture mSurfaceReleaseFuture>;

        $r6 = new androidx.camera.view.TextureViewImplementation$1$1;

        specialinvoke $r6.<androidx.camera.view.TextureViewImplementation$1$1: void <init>(androidx.camera.view.TextureViewImplementation$1,android.graphics.SurfaceTexture)>(r0, r1);

        $r8 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        $r9 = $r8.<androidx.camera.view.TextureViewImplementation: android.view.TextureView mTextureView>;

        $r10 = virtualinvoke $r9.<android.view.TextureView: android.content.Context getContext()>();

        $r11 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r10);

        staticinvoke <androidx.camera.core.impl.utils.futures.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.impl.utils.futures.FutureCallback,java.util.concurrent.Executor)>($r7, $r6, $r11);

        $r12 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        $r12.<androidx.camera.view.TextureViewImplementation: android.graphics.SurfaceTexture mDetachedSurfaceTexture> = r1;

        return 0;

     label1:
        staticinvoke <androidx.camera.core.Logger: void d(java.lang.String,java.lang.String)>("TextureViewImpl", "SurfaceTexture about to be destroyed");

        return 1;
    }

    public void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
    {
        androidx.camera.view.TextureViewImplementation$1 r0;
        android.graphics.SurfaceTexture r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r2;
        androidx.camera.view.PreviewView$OnFrameUpdateListener r3;
        java.util.concurrent.Executor r4;
        androidx.camera.view.TextureViewImplementation $r5, $r8, $r9;
        java.util.concurrent.atomic.AtomicReference $r6;
        java.lang.Object $r7;
        java.lang.Runnable $r10;

        r0 := @this: androidx.camera.view.TextureViewImplementation$1;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $r5 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        $r6 = $r5.<androidx.camera.view.TextureViewImplementation: java.util.concurrent.atomic.AtomicReference mNextFrameCompleter>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)>(null);

        r2 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r7;

        if r2 == null goto label1;

        virtualinvoke r2.<androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)>(null);

     label1:
        $r8 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        r3 = $r8.<androidx.camera.view.TextureViewImplementation: androidx.camera.view.PreviewView$OnFrameUpdateListener mOnFrameUpdateListener>;

        $r9 = r0.<androidx.camera.view.TextureViewImplementation$1: androidx.camera.view.TextureViewImplementation this$0>;

        r4 = $r9.<androidx.camera.view.TextureViewImplementation: java.util.concurrent.Executor mFrameUpdateExecutor>;

        if r3 == null goto label2;

        if r4 == null goto label2;

        $r10 = dynamicinvoke "run" <java.lang.Runnable (androidx.camera.view.PreviewView$OnFrameUpdateListener,android.graphics.SurfaceTexture)>(r3, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.camera.view.TextureViewImplementation$1: void lambda$onSurfaceTextureUpdated$0(androidx.camera.view.PreviewView$OnFrameUpdateListener,android.graphics.SurfaceTexture)>, methodtype: void __METHODTYPE__());

        interfaceinvoke r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r10);

     label2:
        return;
    }

    private static void lambda$onSurfaceTextureUpdated$0(androidx.camera.view.PreviewView$OnFrameUpdateListener, android.graphics.SurfaceTexture)
    {
        androidx.camera.view.PreviewView$OnFrameUpdateListener r0;
        android.graphics.SurfaceTexture r1;
        long $l0;

        r0 := @parameter0: androidx.camera.view.PreviewView$OnFrameUpdateListener;

        r1 := @parameter1: android.graphics.SurfaceTexture;

        $l0 = virtualinvoke r1.<android.graphics.SurfaceTexture: long getTimestamp()>();

        interfaceinvoke r0.<androidx.camera.view.PreviewView$OnFrameUpdateListener: void onFrameUpdate(long)>($l0);

        return;
    }

