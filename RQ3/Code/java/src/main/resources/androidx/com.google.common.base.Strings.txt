com.google.common.base.Strings
    public static java.lang.String emptyToNull(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.google.common.base.Platform: java.lang.String emptyToNull(java.lang.String)>($r0);

        return $r0;
    }

    public static boolean isNullOrEmpty(java.lang.String)
    {
        boolean $z0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.google.common.base.Platform: boolean stringIsNullOrEmpty(java.lang.String)>($r0);

        return $z0;
    }

    public static transient java.lang.String lenientFormat(java.lang.String, java.lang.Object[])
    {
        java.lang.String $r0, $r3;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object[];

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        $i0 = 0;

        if $r1 != null goto label1;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "(Object[])null";

        goto label3;

     label1:
        $i1 = 0;

     label2:
        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label3;

        $r2 = $r1[$i1];

        $r3 = staticinvoke <com.google.common.base.Strings: java.lang.String lenientToString(java.lang.Object)>($r2);

        $r1[$i1] = $r3;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r4 = new java.lang.StringBuilder;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = lengthof $r1;

        $i2 = $i2 * 16;

        $i1 = $i1 + $i2;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i1);

        $i1 = 0;

     label4:
        $i2 = lengthof $r1;

        if $i0 >= $i2 goto label6;

        $i3 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String,int)>("%s", $i1);

        if $i3 != -1 goto label5;

        goto label6;

     label5:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r0, $i1, $i3);

        $r2 = $r1[$i0];

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $i1 = $i3 + 2;

        $i0 = $i0 + 1;

        goto label4;

     label6:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>($r0, $i1, $i2);

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label9;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $i1 = $i0 + 1;

        $r2 = $r1[$i0];

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

     label7:
        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label8;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = $r1[$i1];

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $i1 = $i1 + 1;

        goto label7;

     label8:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

     label9:
        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    private static java.lang.String lenientToString(java.lang.Object)
    {
        java.lang.Throwable $r0;
        java.lang.Object $r1;
        java.lang.String $r2, $r7;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        int $i0;
        java.util.logging.Logger $r5;
        java.util.logging.Level $r6;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return "null";

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r2;

     label3:
        $r0 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>("com.google.common.base.Strings");

        $r6 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception during lenientFormat for ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "com.google.common.base.Strings", "lenientToString", $r7, $r0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" threw ");

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

