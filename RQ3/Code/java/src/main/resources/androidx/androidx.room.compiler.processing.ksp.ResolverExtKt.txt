androidx.room.compiler.processing.ksp.ResolverExtKt
    public static final com.google.devtools.ksp.symbol.KSClassDeclaration findClass(com.google.devtools.ksp.processing.Resolver, java.lang.String)
    {
        com.google.devtools.ksp.processing.Resolver $r0;
        java.lang.String r1;
        com.google.devtools.ksp.symbol.KSName $r2;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r3;

        $r0 := @parameter0: com.google.devtools.ksp.processing.Resolver;

        r1 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "qName");

        $r2 = interfaceinvoke $r0.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.symbol.KSName getKSNameFromString(java.lang.String)>(r1);

        $r3 = interfaceinvoke $r0.<com.google.devtools.ksp.processing.Resolver: com.google.devtools.ksp.symbol.KSClassDeclaration getClassDeclarationByName(com.google.devtools.ksp.symbol.KSName)>($r2);

        return $r3;
    }

    public static final com.google.devtools.ksp.symbol.KSClassDeclaration requireClass(com.google.devtools.ksp.processing.Resolver, java.lang.String)
    {
        com.google.devtools.ksp.processing.Resolver $r0;
        java.lang.String r1, $r7, $r8;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.IllegalStateException $r6;

        $r0 := @parameter0: com.google.devtools.ksp.processing.Resolver;

        r1 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "qName");

        $r2 = staticinvoke <androidx.room.compiler.processing.ksp.ResolverExtKt: com.google.devtools.ksp.symbol.KSClassDeclaration findClass(com.google.devtools.ksp.processing.Resolver,java.lang.String)>($r0, r1);

        if $r2 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot find class ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label1:
        return $r2;
    }

    public static final com.google.devtools.ksp.symbol.KSType requireType(com.google.devtools.ksp.processing.Resolver, java.lang.String)
    {
        com.google.devtools.ksp.processing.Resolver $r0;
        java.lang.String r1;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r2;
        java.util.List $r3;
        com.google.devtools.ksp.symbol.KSType $r4;

        $r0 := @parameter0: com.google.devtools.ksp.processing.Resolver;

        r1 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "qName");

        $r2 = staticinvoke <androidx.room.compiler.processing.ksp.ResolverExtKt: com.google.devtools.ksp.symbol.KSClassDeclaration requireClass(com.google.devtools.ksp.processing.Resolver,java.lang.String)>($r0, r1);

        $r3 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        $r4 = interfaceinvoke $r2.<com.google.devtools.ksp.symbol.KSClassDeclaration: com.google.devtools.ksp.symbol.KSType asType(java.util.List)>($r3);

        return $r4;
    }

    public static final com.google.devtools.ksp.symbol.KSClassDeclaration requireContinuationClass(com.google.devtools.ksp.processing.Resolver)
    {
        com.google.devtools.ksp.processing.Resolver $r0;
        com.google.devtools.ksp.symbol.KSClassDeclaration $r1;

        $r0 := @parameter0: com.google.devtools.ksp.processing.Resolver;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <androidx.room.compiler.processing.ksp.ResolverExtKt: com.google.devtools.ksp.symbol.KSClassDeclaration requireClass(com.google.devtools.ksp.processing.Resolver,java.lang.String)>($r0, "kotlin.coroutines.Continuation");

        return $r1;
    }

    private static final com.google.devtools.ksp.symbol.KSDeclaration getDeclarationForOverride(androidx.room.compiler.processing.XExecutableElement)
    {
        androidx.room.compiler.processing.XExecutableElement $r0, r1;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement $r7;
        androidx.room.compiler.processing.ksp.KspFieldElement $r8;
        com.google.devtools.ksp.symbol.KSPropertyDeclaration $r9;
        androidx.room.compiler.processing.ksp.KspExecutableElement $r10;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r11;
        com.google.devtools.ksp.symbol.KSDeclaration $r12;

        $r0 := @parameter0: androidx.room.compiler.processing.XExecutableElement;

        r1 = $r0;

        $z0 = r1 instanceof androidx.room.compiler.processing.ksp.KspExecutableElement;

        if $z0 == 0 goto label1;

        $r10 = (androidx.room.compiler.processing.ksp.KspExecutableElement) $r0;

        $r11 = virtualinvoke $r10.<androidx.room.compiler.processing.ksp.KspExecutableElement: com.google.devtools.ksp.symbol.KSFunctionDeclaration getDeclaration()>();

        $r12 = (com.google.devtools.ksp.symbol.KSDeclaration) $r11;

        goto label3;

     label1:
        $z1 = r1 instanceof androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement;

        if $z1 == 0 goto label2;

        $r7 = (androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement) $r0;

        $r8 = virtualinvoke $r7.<androidx.room.compiler.processing.ksp.synthetic.KspSyntheticPropertyMethodElement: androidx.room.compiler.processing.ksp.KspFieldElement getField()>();

        $r9 = virtualinvoke $r8.<androidx.room.compiler.processing.ksp.KspFieldElement: com.google.devtools.ksp.symbol.KSPropertyDeclaration getDeclaration()>();

        $r12 = (com.google.devtools.ksp.symbol.KSDeclaration) $r9;

        goto label3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected XExecutableElement type. ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label3:
        return $r12;
    }

    public static final boolean overrides(com.google.devtools.ksp.processing.Resolver, androidx.room.compiler.processing.XMethodElement, androidx.room.compiler.processing.XMethodElement)
    {
        com.google.devtools.ksp.processing.Resolver $r0;
        androidx.room.compiler.processing.XMethodElement r1, r2;
        com.google.devtools.ksp.symbol.KSDeclaration r3, r4;
        java.util.List $r5, $r6;
        int $i0, $i1;
        androidx.room.compiler.processing.XExecutableElement $r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r9, $r10;

        $r0 := @parameter0: com.google.devtools.ksp.processing.Resolver;

        r1 := @parameter1: androidx.room.compiler.processing.XMethodElement;

        r2 := @parameter2: androidx.room.compiler.processing.XMethodElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "overriderElement");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "overrideeElement");

        $r5 = interfaceinvoke r1.<androidx.room.compiler.processing.XMethodElement: java.util.List getParameters()>();

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = interfaceinvoke r2.<androidx.room.compiler.processing.XMethodElement: java.util.List getParameters()>();

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $r7 = (androidx.room.compiler.processing.XExecutableElement) r1;

        r3 = staticinvoke <androidx.room.compiler.processing.ksp.ResolverExtKt: com.google.devtools.ksp.symbol.KSDeclaration getDeclarationForOverride(androidx.room.compiler.processing.XExecutableElement)>($r7);

        $r8 = (androidx.room.compiler.processing.XExecutableElement) r2;

        r4 = staticinvoke <androidx.room.compiler.processing.ksp.ResolverExtKt: com.google.devtools.ksp.symbol.KSDeclaration getDeclarationForOverride(androidx.room.compiler.processing.XExecutableElement)>($r8);

        $z0 = interfaceinvoke $r0.<com.google.devtools.ksp.processing.Resolver: boolean overrides(com.google.devtools.ksp.symbol.KSDeclaration,com.google.devtools.ksp.symbol.KSDeclaration)>(r3, r4);

        if $z0 == 0 goto label3;

        $z1 = r4 instanceof com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        if $z1 == 0 goto label2;

        $z2 = r3 instanceof com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        if $z2 == 0 goto label2;

        $r10 = (com.google.devtools.ksp.symbol.KSFunctionDeclaration) r3;

        $r9 = (com.google.devtools.ksp.symbol.KSFunctionDeclaration) r4;

        $z3 = staticinvoke <androidx.room.compiler.processing.ksp.ResolverExtKt: boolean overridesInJvm(com.google.devtools.ksp.symbol.KSFunctionDeclaration,com.google.devtools.ksp.symbol.KSFunctionDeclaration)>($r10, $r9);

        return $z3;

     label2:
        return 1;

     label3:
        return 0;
    }

    private static final boolean overridesInJvm(com.google.devtools.ksp.symbol.KSFunctionDeclaration, com.google.devtools.ksp.symbol.KSFunctionDeclaration)
    {
        com.google.devtools.ksp.symbol.KSFunctionDeclaration $r0, r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4, $r18;
        int i0, i1, $i2, i3;
        com.google.devtools.ksp.symbol.KSValueParameter r5, $r19;
        com.google.devtools.ksp.symbol.KSType r6, $r21;
        com.google.devtools.ksp.symbol.KSDeclaration r7, r9, $r23;
        java.lang.String r8, $r22;
        java.util.List $r10, $r17;
        boolean $z2, $z3;
        com.google.devtools.ksp.symbol.KSTypeReference $r11, $r20;
        com.google.devtools.ksp.symbol.Nullability $r12, $r13;
        com.google.devtools.ksp.symbol.KSName $r14;
        androidx.room.compiler.processing.ksp.KspTypeMapper $r15;
        com.squareup.javapoet.TypeName $r16;

        $r0 := @parameter0: com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        r1 := @parameter1: com.google.devtools.ksp.symbol.KSFunctionDeclaration;

        $r10 = interfaceinvoke $r0.<com.google.devtools.ksp.symbol.KSFunctionDeclaration: java.util.List getParameters()>();

        $r2 = (java.lang.Iterable) $r10;

        i3 = 0;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $i2 = i3;

        i3 = i3 + 1;

        i0 = $i2;

        if i0 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        r5 = (com.google.devtools.ksp.symbol.KSValueParameter) r4;

        i1 = i0;

        $r11 = interfaceinvoke r5.<com.google.devtools.ksp.symbol.KSValueParameter: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        r6 = interfaceinvoke $r11.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        $r12 = interfaceinvoke r6.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.Nullability getNullability()>();

        $r13 = <com.google.devtools.ksp.symbol.Nullability: com.google.devtools.ksp.symbol.Nullability NOT_NULL>;

        if $r12 != $r13 goto label7;

        r7 = interfaceinvoke r6.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        $r14 = interfaceinvoke r7.<com.google.devtools.ksp.symbol.KSDeclaration: com.google.devtools.ksp.symbol.KSName getQualifiedName()>();

        if $r14 == null goto label3;

        $r22 = interfaceinvoke $r14.<com.google.devtools.ksp.symbol.KSName: java.lang.String asString()>();

        goto label4;

     label3:
        $r22 = null;

     label4:
        r8 = $r22;

        if r8 == null goto label7;

        $r15 = <androidx.room.compiler.processing.ksp.KspTypeMapper: androidx.room.compiler.processing.ksp.KspTypeMapper INSTANCE>;

        $r16 = virtualinvoke $r15.<androidx.room.compiler.processing.ksp.KspTypeMapper: com.squareup.javapoet.TypeName getPrimitiveJavaTypeName(java.lang.String)>(r8);

        if $r16 == null goto label7;

        $r17 = interfaceinvoke r1.<com.google.devtools.ksp.symbol.KSFunctionDeclaration: java.util.List getParameters()>();

        $r18 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object getOrNull(java.util.List,int)>($r17, i1);

        $r19 = (com.google.devtools.ksp.symbol.KSValueParameter) $r18;

        if $r19 == null goto label5;

        $r20 = interfaceinvoke $r19.<com.google.devtools.ksp.symbol.KSValueParameter: com.google.devtools.ksp.symbol.KSTypeReference getType()>();

        if $r20 == null goto label5;

        $r21 = interfaceinvoke $r20.<com.google.devtools.ksp.symbol.KSTypeReference: com.google.devtools.ksp.symbol.KSType resolve()>();

        if $r21 == null goto label5;

        $r23 = interfaceinvoke $r21.<com.google.devtools.ksp.symbol.KSType: com.google.devtools.ksp.symbol.KSDeclaration getDeclaration()>();

        goto label6;

     label5:
        $r23 = null;

     label6:
        r9 = $r23;

        $z3 = r9 instanceof com.google.devtools.ksp.symbol.KSTypeParameter;

        if $z3 == 0 goto label7;

        return 0;

     label7:
        goto label1;

     label8:
        return 1;
    }

