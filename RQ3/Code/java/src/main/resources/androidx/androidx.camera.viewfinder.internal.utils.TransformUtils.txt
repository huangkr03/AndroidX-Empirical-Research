androidx.camera.viewfinder.internal.utils.TransformUtils
<androidx.camera.viewfinder.internal.utils.TransformUtils: android.graphics.RectF NORMALIZED_RECT>
    private void <init>()
    {
        androidx.camera.viewfinder.internal.utils.TransformUtils r0;

        r0 := @this: androidx.camera.viewfinder.internal.utils.TransformUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int surfaceRotationToRotationDegrees(int)
    {
        int i0;
        java.lang.IllegalStateException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        return 0;

     label2:
        return 90;

     label3:
        return 180;

     label4:
        return 270;

     label5:
        $r0 = new java.lang.IllegalStateException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected rotation value ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public static boolean is90or270(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        if i0 == 90 goto label1;

        if i0 != 270 goto label2;

     label1:
        return 1;

     label2:
        if i0 == 0 goto label3;

        if i0 != 180 goto label4;

     label3:
        return 0;

     label4:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid rotation degrees: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public static float[] sizeToVertices(android.util.Size)
    {
        android.util.Size r0;
        float[] $r1;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;

        r0 := @parameter0: android.util.Size;

        $r1 = newarray (float)[8];

        $r1[0] = 0.0F;

        $r1[1] = 0.0F;

        $i0 = virtualinvoke r0.<android.util.Size: int getWidth()>();

        $f0 = (float) $i0;

        $r1[2] = $f0;

        $r1[3] = 0.0F;

        $i1 = virtualinvoke r0.<android.util.Size: int getWidth()>();

        $f1 = (float) $i1;

        $r1[4] = $f1;

        $i2 = virtualinvoke r0.<android.util.Size: int getHeight()>();

        $f2 = (float) $i2;

        $r1[5] = $f2;

        $r1[6] = 0.0F;

        $i3 = virtualinvoke r0.<android.util.Size: int getHeight()>();

        $f3 = (float) $i3;

        $r1[7] = $f3;

        return $r1;
    }

    public static boolean isAspectRatioMatchingWithRoundingError(android.util.Size, boolean, android.util.Size, boolean)
    {
        android.util.Size r0, r1;
        boolean z0, z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, f20, f21, f22, f23;
        byte $b8, $b9;

        r0 := @parameter0: android.util.Size;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.util.Size;

        z1 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $i12 = virtualinvoke r0.<android.util.Size: int getWidth()>();

        $f18 = (float) $i12;

        $i13 = virtualinvoke r0.<android.util.Size: int getHeight()>();

        $f19 = (float) $i13;

        f20 = $f18 / $f19;

        f21 = f20;

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<android.util.Size: int getWidth()>();

        $f0 = (float) $i0;

        $f1 = $f0 + 1.0F;

        $i1 = virtualinvoke r0.<android.util.Size: int getHeight()>();

        $f2 = (float) $i1;

        $f3 = $f2 - 1.0F;

        f20 = $f1 / $f3;

        $i2 = virtualinvoke r0.<android.util.Size: int getWidth()>();

        $f4 = (float) $i2;

        $f5 = $f4 - 1.0F;

        $i3 = virtualinvoke r0.<android.util.Size: int getHeight()>();

        $f6 = (float) $i3;

        $f7 = $f6 + 1.0F;

        f21 = $f5 / $f7;

     label2:
        if z1 == 0 goto label3;

        $i10 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $f16 = (float) $i10;

        $i11 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $f17 = (float) $i11;

        f22 = $f16 / $f17;

        f23 = f22;

        goto label4;

     label3:
        $i4 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $f8 = (float) $i4;

        $f9 = $f8 + 1.0F;

        $i5 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $f10 = (float) $i5;

        $f11 = $f10 - 1.0F;

        f22 = $f9 / $f11;

        $i6 = virtualinvoke r1.<android.util.Size: int getWidth()>();

        $f12 = (float) $i6;

        $f13 = $f12 - 1.0F;

        $i7 = virtualinvoke r1.<android.util.Size: int getHeight()>();

        $f14 = (float) $i7;

        $f15 = $f14 + 1.0F;

        f23 = $f13 / $f15;

     label4:
        $b8 = f20 cmpl f23;

        if $b8 < 0 goto label5;

        $b9 = f22 cmpl f21;

        if $b9 < 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    public static android.graphics.Matrix getRectToRect(android.graphics.RectF, android.graphics.RectF, int)
    {
        android.graphics.RectF r0, r1, $r5;
        int i0;
        android.graphics.Matrix r2, $r3, $r6;
        android.graphics.Matrix$ScaleToFit $r4;
        float $f0;

        r0 := @parameter0: android.graphics.RectF;

        r1 := @parameter1: android.graphics.RectF;

        i0 := @parameter2: int;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r2 = $r3;

        $r5 = <androidx.camera.viewfinder.internal.utils.TransformUtils: android.graphics.RectF NORMALIZED_RECT>;

        $r4 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit FILL>;

        virtualinvoke r2.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>(r0, $r5, $r4);

        $f0 = (float) i0;

        virtualinvoke r2.<android.graphics.Matrix: boolean postRotate(float)>($f0);

        $r6 = staticinvoke <androidx.camera.viewfinder.internal.utils.TransformUtils: android.graphics.Matrix getNormalizedToBuffer(android.graphics.RectF)>(r1);

        virtualinvoke r2.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>($r6);

        return r2;
    }

    public static androidx.camera.viewfinder.internal.transform.TransformationInfo createTransformInfo(android.util.Size, android.view.Display, boolean, int)
    {
        android.util.Size r0;
        android.view.Display r1;
        boolean z0, $z1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Rect r2, $r3;
        androidx.camera.viewfinder.internal.transform.TransformationInfo $r4;

        r0 := @parameter0: android.util.Size;

        r1 := @parameter1: android.view.Display;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        $r3 = new android.graphics.Rect;

        $i2 = virtualinvoke r0.<android.util.Size: int getWidth()>();

        $i3 = virtualinvoke r0.<android.util.Size: int getHeight()>();

        specialinvoke $r3.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i2, $i3);

        r2 = $r3;

        $i4 = virtualinvoke r1.<android.view.Display: int getRotation()>();

        i1 = staticinvoke <androidx.camera.viewfinder.internal.utils.CameraOrientationUtil: int surfaceRotationToDegrees(int)>($i4);

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $i5 = staticinvoke <androidx.camera.viewfinder.internal.utils.CameraOrientationUtil: int getRelativeImageRotation(int,int,boolean)>(i1, i0, $z1);

        $i6 = virtualinvoke r1.<android.view.Display: int getRotation()>();

        $r4 = staticinvoke <androidx.camera.viewfinder.internal.transform.TransformationInfo: androidx.camera.viewfinder.internal.transform.TransformationInfo of(android.graphics.Rect,int,int)>(r2, $i5, $i6);

        return $r4;
    }

    private static android.graphics.Matrix getNormalizedToBuffer(android.graphics.RectF)
    {
        android.graphics.RectF r0, $r4;
        android.graphics.Matrix r1, $r2;
        android.graphics.Matrix$ScaleToFit $r3;

        r0 := @parameter0: android.graphics.RectF;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r1 = $r2;

        $r4 = <androidx.camera.viewfinder.internal.utils.TransformUtils: android.graphics.RectF NORMALIZED_RECT>;

        $r3 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit FILL>;

        virtualinvoke r1.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>($r4, r0, $r3);

        return r1;
    }

    static void <clinit>()
    {
        android.graphics.RectF $r0;

        $r0 = new android.graphics.RectF;

        specialinvoke $r0.<android.graphics.RectF: void <init>(float,float,float,float)>(-1.0F, -1.0F, 1.0F, 1.0F);

        <androidx.camera.viewfinder.internal.utils.TransformUtils: android.graphics.RectF NORMALIZED_RECT> = $r0;

        return;
    }

