androidx.constraintlayout.core.widgets.analyzer.DependencyNode
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.Dependency updateDelegate>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean delegateToWidgetRun>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean readyToSolve>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.WidgetRun run>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type type>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: int margin>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: int value>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: int marginFactor>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.DimensionDependency marginDependency>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean resolved>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: java.util.List dependencies>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: java.util.List targets>
    public void <init>(androidx.constraintlayout.core.widgets.analyzer.WidgetRun)
    {
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode r0;
        androidx.constraintlayout.core.widgets.analyzer.WidgetRun r1;
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type $r2;
        java.util.ArrayList $r3, $r4;

        r0 := @this: androidx.constraintlayout.core.widgets.analyzer.DependencyNode;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.analyzer.WidgetRun;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.Dependency updateDelegate> = null;

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean delegateToWidgetRun> = 0;

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean readyToSolve> = 0;

        $r2 = <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type UNKNOWN>;

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type type> = $r2;

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: int marginFactor> = 1;

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.DimensionDependency marginDependency> = null;

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean resolved> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: java.util.List dependencies> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: java.util.List targets> = $r4;

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.WidgetRun run> = r1;

        return;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode r0;
        java.lang.StringBuilder $r1, $r5, $r6, $r8, $r9, $r10, $r11, $r13, $r14, $r16, $r17;
        androidx.constraintlayout.core.widgets.analyzer.WidgetRun $r2;
        androidx.constraintlayout.core.widgets.ConstraintWidget $r3;
        java.lang.String $r4, $r18;
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type $r7;
        boolean $z0;
        java.util.List $r12, $r15;
        int $i0, $i1, $i2;
        java.lang.Object $r19;

        r0 := @this: androidx.constraintlayout.core.widgets.analyzer.DependencyNode;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.WidgetRun run>;

        $r3 = $r2.<androidx.constraintlayout.core.widgets.analyzer.WidgetRun: androidx.constraintlayout.core.widgets.ConstraintWidget widget>;

        $r4 = virtualinvoke $r3.<androidx.constraintlayout.core.widgets.ConstraintWidget: java.lang.String getDebugName()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type type>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $z0 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean resolved>;

        if $z0 == 0 goto label1;

        $i2 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: int value>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        goto label2;

     label1:
        $r19 = "unresolved";

     label2:
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") <t=");

        $r12 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: java.util.List targets>;

        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":d=");

        $r15 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: java.util.List dependencies>;

        $i1 = interfaceinvoke $r15.<java.util.List: int size()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    public void resolve(int)
    {
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode r0;
        int i0;
        java.util.Iterator r1;
        androidx.constraintlayout.core.widgets.analyzer.Dependency r2;
        boolean $z0, $z1;
        java.util.List $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.constraintlayout.core.widgets.analyzer.DependencyNode;

        i0 := @parameter0: int;

        $z0 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean resolved>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean resolved> = 1;

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: int value> = i0;

        $r3 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: java.util.List dependencies>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (androidx.constraintlayout.core.widgets.analyzer.Dependency) $r4;

        interfaceinvoke r2.<androidx.constraintlayout.core.widgets.analyzer.Dependency: void update(androidx.constraintlayout.core.widgets.analyzer.Dependency)>(r2);

        goto label2;

     label3:
        return;
    }

    public void update(androidx.constraintlayout.core.widgets.analyzer.Dependency)
    {
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode r0, r3, r16, r17;
        androidx.constraintlayout.core.widgets.analyzer.Dependency r1, $r5, $r7, $r13, $r18;
        java.util.Iterator r2, r15;
        java.util.List $r4, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        androidx.constraintlayout.core.widgets.analyzer.DimensionDependency $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Object $r11, $r14;
        androidx.constraintlayout.core.widgets.analyzer.WidgetRun $r12;

        r0 := @this: androidx.constraintlayout.core.widgets.analyzer.DependencyNode;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.analyzer.Dependency;

        $r4 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: java.util.List targets>;

        r15 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r14 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (androidx.constraintlayout.core.widgets.analyzer.DependencyNode) $r14;

        $z5 = r16.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean resolved>;

        if $z5 != 0 goto label02;

        return;

     label02:
        goto label01;

     label03:
        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean readyToSolve> = 1;

        $r5 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.Dependency updateDelegate>;

        if $r5 == null goto label04;

        $r13 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.Dependency updateDelegate>;

        interfaceinvoke $r13.<androidx.constraintlayout.core.widgets.analyzer.Dependency: void update(androidx.constraintlayout.core.widgets.analyzer.Dependency)>(r0);

     label04:
        $z1 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean delegateToWidgetRun>;

        if $z1 == 0 goto label05;

        $r12 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.WidgetRun run>;

        virtualinvoke $r12.<androidx.constraintlayout.core.widgets.analyzer.WidgetRun: void update(androidx.constraintlayout.core.widgets.analyzer.Dependency)>(r0);

        return;

     label05:
        r17 = null;

        i6 = 0;

        $r6 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: java.util.List targets>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label08;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (androidx.constraintlayout.core.widgets.analyzer.DependencyNode) $r11;

        $z4 = r3 instanceof androidx.constraintlayout.core.widgets.analyzer.DimensionDependency;

        if $z4 == 0 goto label07;

        goto label06;

     label07:
        r17 = r3;

        i6 = i6 + 1;

        goto label06;

     label08:
        if r17 == null goto label11;

        if i6 != 1 goto label11;

        $z2 = r17.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean resolved>;

        if $z2 == 0 goto label11;

        $r8 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.DimensionDependency marginDependency>;

        if $r8 == null goto label10;

        $r9 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.DimensionDependency marginDependency>;

        $z3 = $r9.<androidx.constraintlayout.core.widgets.analyzer.DimensionDependency: boolean resolved>;

        if $z3 == 0 goto label09;

        $i4 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: int marginFactor>;

        $r10 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.DimensionDependency marginDependency>;

        $i3 = $r10.<androidx.constraintlayout.core.widgets.analyzer.DimensionDependency: int value>;

        $i5 = $i4 * $i3;

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: int margin> = $i5;

        goto label10;

     label09:
        return;

     label10:
        $i1 = r17.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: int value>;

        $i0 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: int margin>;

        $i2 = $i1 + $i0;

        virtualinvoke r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: void resolve(int)>($i2);

     label11:
        $r18 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.Dependency updateDelegate>;

        if $r18 == null goto label12;

        $r7 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.Dependency updateDelegate>;

        interfaceinvoke $r7.<androidx.constraintlayout.core.widgets.analyzer.Dependency: void update(androidx.constraintlayout.core.widgets.analyzer.Dependency)>(r0);

     label12:
        return;
    }

    public void addDependency(androidx.constraintlayout.core.widgets.analyzer.Dependency)
    {
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode r0;
        androidx.constraintlayout.core.widgets.analyzer.Dependency r1;
        java.util.List $r2;
        boolean $z1;

        r0 := @this: androidx.constraintlayout.core.widgets.analyzer.DependencyNode;

        r1 := @parameter0: androidx.constraintlayout.core.widgets.analyzer.Dependency;

        $r2 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: java.util.List dependencies>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $z1 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean resolved>;

        if $z1 == 0 goto label1;

        interfaceinvoke r1.<androidx.constraintlayout.core.widgets.analyzer.Dependency: void update(androidx.constraintlayout.core.widgets.analyzer.Dependency)>(r1);

     label1:
        return;
    }

    public java.lang.String name()
    {
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode r0;
        androidx.constraintlayout.core.widgets.analyzer.WidgetRun $r1;
        androidx.constraintlayout.core.widgets.ConstraintWidget $r2;
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type $r3, $r4, $r11, $r14, $r15;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r16, $r17, $r18;
        java.lang.String $r12, r19, r20, r21;

        r0 := @this: androidx.constraintlayout.core.widgets.analyzer.DependencyNode;

        $r1 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.WidgetRun run>;

        $r2 = $r1.<androidx.constraintlayout.core.widgets.analyzer.WidgetRun: androidx.constraintlayout.core.widgets.ConstraintWidget widget>;

        r19 = virtualinvoke $r2.<androidx.constraintlayout.core.widgets.ConstraintWidget: java.lang.String getDebugName()>();

        $r4 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type type>;

        $r3 = <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type LEFT>;

        if $r4 == $r3 goto label1;

        $r15 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type type>;

        $r14 = <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type RIGHT>;

        if $r15 != $r14 goto label2;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_HORIZONTAL");

        r20 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_VERTICAL");

        r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r11 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type type>;

        $r12 = virtualinvoke $r11.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: java.lang.String name()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r21 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return r21;
    }

    public void clear()
    {
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode r0;
        java.util.List $r1, $r2;

        r0 := @this: androidx.constraintlayout.core.widgets.analyzer.DependencyNode;

        $r1 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: java.util.List targets>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: java.util.List dependencies>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean resolved> = 0;

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: int value> = 0;

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean readyToSolve> = 0;

        r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode: boolean delegateToWidgetRun> = 0;

        return;
    }

androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type UNKNOWN>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type HORIZONTAL_DIMENSION>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type VERTICAL_DIMENSION>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type LEFT>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type RIGHT>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type TOP>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type BOTTOM>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type BASELINE>
<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] $VALUES>
    public static androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] values()
    {
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[]) $r1;

        return $r2;
    }

    public static androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/constraintlayout/core/widgets/analyzer/DependencyNode$Type;", r0);

        $r2 = (androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] $r8;

        $r0 = new androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type;

        specialinvoke $r0.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: void <init>(java.lang.String,int)>("UNKNOWN", 0);

        <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type UNKNOWN> = $r0;

        $r1 = new androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type;

        specialinvoke $r1.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: void <init>(java.lang.String,int)>("HORIZONTAL_DIMENSION", 1);

        <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type HORIZONTAL_DIMENSION> = $r1;

        $r2 = new androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type;

        specialinvoke $r2.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: void <init>(java.lang.String,int)>("VERTICAL_DIMENSION", 2);

        <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type VERTICAL_DIMENSION> = $r2;

        $r3 = new androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type;

        specialinvoke $r3.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: void <init>(java.lang.String,int)>("LEFT", 3);

        <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type LEFT> = $r3;

        $r4 = new androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type;

        specialinvoke $r4.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: void <init>(java.lang.String,int)>("RIGHT", 4);

        <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type RIGHT> = $r4;

        $r5 = new androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type;

        specialinvoke $r5.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: void <init>(java.lang.String,int)>("TOP", 5);

        <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type TOP> = $r5;

        $r6 = new androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type;

        specialinvoke $r6.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: void <init>(java.lang.String,int)>("BOTTOM", 6);

        <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type BOTTOM> = $r6;

        $r7 = new androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type;

        specialinvoke $r7.<androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: void <init>(java.lang.String,int)>("BASELINE", 7);

        <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type BASELINE> = $r7;

        $r8 = newarray (androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type)[8];

        $r9 = <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type UNKNOWN>;

        $r8[0] = $r9;

        $r10 = <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type HORIZONTAL_DIMENSION>;

        $r8[1] = $r10;

        $r11 = <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type VERTICAL_DIMENSION>;

        $r8[2] = $r11;

        $r12 = <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type LEFT>;

        $r8[3] = $r12;

        $r13 = <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type RIGHT>;

        $r8[4] = $r13;

        $r14 = <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type TOP>;

        $r8[5] = $r14;

        $r15 = <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type BOTTOM>;

        $r8[6] = $r15;

        $r16 = <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type BASELINE>;

        $r8[7] = $r16;

        <androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] $VALUES> = $r8;

        return;
    }

