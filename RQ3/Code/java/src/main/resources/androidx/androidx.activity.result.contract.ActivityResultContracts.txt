androidx.activity.result.contract.ActivityResultContracts
    private void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$CaptureVideo
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$CaptureVideo r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CaptureVideo;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, android.net.Uri)
    {
        androidx.activity.result.contract.ActivityResultContracts$CaptureVideo r0;
        android.content.Context r1;
        android.net.Uri r2;
        android.content.Intent $r3, $r5;
        android.os.Parcelable $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CaptureVideo;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.media.action.VIDEO_CAPTURE");

        $r4 = (android.os.Parcelable) r2;

        $r5 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("output", $r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "Intent(MediaStore.ACTION\u2026tore.EXTRA_OUTPUT, input)");

        return $r5;
    }

    public final androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, android.net.Uri)
    {
        androidx.activity.result.contract.ActivityResultContracts$CaptureVideo r0;
        android.content.Context r1;
        android.net.Uri r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CaptureVideo;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        return null;
    }

    public final java.lang.Boolean parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$CaptureVideo r0;
        int i0;
        android.content.Intent r1;
        java.lang.Boolean $r2;
        boolean $z0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CaptureVideo;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        if i0 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$CaptureVideo r0;
        android.content.Context r1;
        java.lang.Object r2;
        android.net.Uri $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CaptureVideo;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.net.Uri) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$CaptureVideo: android.content.Intent createIntent(android.content.Context,android.net.Uri)>(r1, $r3);

        return $r4;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$CaptureVideo r0;
        android.content.Context r1;
        java.lang.Object r2;
        android.net.Uri $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CaptureVideo;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.net.Uri) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$CaptureVideo: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,android.net.Uri)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$CaptureVideo r0;
        int i0;
        android.content.Intent r1;
        java.lang.Boolean $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CaptureVideo;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$CaptureVideo: java.lang.Boolean parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

androidx.activity.result.contract.ActivityResultContracts$CreateDocument
<androidx.activity.result.contract.ActivityResultContracts$CreateDocument: java.lang.String mimeType>
    public void <init>(java.lang.String)
    {
        androidx.activity.result.contract.ActivityResultContracts$CreateDocument r0;
        java.lang.String r1;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CreateDocument;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "mimeType");

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        r0.<androidx.activity.result.contract.ActivityResultContracts$CreateDocument: java.lang.String mimeType> = r1;

        return;
    }

    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$CreateDocument r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CreateDocument;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$CreateDocument: void <init>(java.lang.String)>("*/*");

        return;
    }

    public android.content.Intent createIntent(android.content.Context, java.lang.String)
    {
        androidx.activity.result.contract.ActivityResultContracts$CreateDocument r0;
        android.content.Context r1;
        java.lang.String r2, $r4;
        android.content.Intent $r3, $r5, $r6;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CreateDocument;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CREATE_DOCUMENT");

        $r4 = r0.<androidx.activity.result.contract.ActivityResultContracts$CreateDocument: java.lang.String mimeType>;

        $r5 = virtualinvoke $r3.<android.content.Intent: android.content.Intent setType(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.TITLE", r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "Intent(Intent.ACTION_CRE\u2026ntent.EXTRA_TITLE, input)");

        return $r6;
    }

    public final androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.String)
    {
        androidx.activity.result.contract.ActivityResultContracts$CreateDocument r0;
        android.content.Context r1;
        java.lang.String r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CreateDocument;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        return null;
    }

    public final android.net.Uri parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$CreateDocument r0;
        int i0;
        android.content.Intent r1, r2, r3, $r4;
        boolean $z1;
        android.net.Uri $r5;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CreateDocument;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 = r1;

        r3 = r2;

        if i0 != -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r4 = r2;

        goto label4;

     label3:
        $r4 = null;

     label4:
        if $r4 == null goto label5;

        $r5 = virtualinvoke $r4.<android.content.Intent: android.net.Uri getData()>();

        goto label6;

     label5:
        $r5 = null;

     label6:
        return $r5;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$CreateDocument r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CreateDocument;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$CreateDocument: android.content.Intent createIntent(android.content.Context,java.lang.String)>(r1, $r3);

        return $r4;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$CreateDocument r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CreateDocument;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$CreateDocument: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$CreateDocument r0;
        int i0;
        android.content.Intent r1;
        android.net.Uri $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$CreateDocument;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$CreateDocument: android.net.Uri parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

androidx.activity.result.contract.ActivityResultContracts$GetContent
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$GetContent r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetContent;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, java.lang.String)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetContent r0;
        android.content.Context r1;
        java.lang.String r2;
        android.content.Intent $r3, $r4, $r5;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetContent;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.GET_CONTENT");

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.OPENABLE");

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.Intent setType(java.lang.String)>(r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "Intent(Intent.ACTION_GET\u2026          .setType(input)");

        return $r5;
    }

    public final androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.String)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetContent r0;
        android.content.Context r1;
        java.lang.String r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetContent;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        return null;
    }

    public final android.net.Uri parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetContent r0;
        int i0;
        android.content.Intent r1, r2, r3, $r4;
        boolean $z1;
        android.net.Uri $r5;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetContent;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 = r1;

        r3 = r2;

        if i0 != -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r4 = r2;

        goto label4;

     label3:
        $r4 = null;

     label4:
        if $r4 == null goto label5;

        $r5 = virtualinvoke $r4.<android.content.Intent: android.net.Uri getData()>();

        goto label6;

     label5:
        $r5 = null;

     label6:
        return $r5;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetContent r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetContent;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$GetContent: android.content.Intent createIntent(android.content.Context,java.lang.String)>(r1, $r3);

        return $r4;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetContent r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetContent;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$GetContent: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetContent r0;
        int i0;
        android.content.Intent r1;
        android.net.Uri $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetContent;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$GetContent: android.net.Uri parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion
    private void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.List getClipDataUris$activity_release(android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion r0;
        android.content.Intent $r1;
        java.util.LinkedHashSet r2, $r4;
        android.content.ClipData r3;
        android.net.Uri $r5, r11, $r12;
        java.util.ArrayList $r6;
        java.util.Collection $r7;
        java.util.List $r8, $r10;
        android.content.ClipData$Item $r9;
        boolean $z1;
        int i0, i1;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion;

        $r1 := @parameter0: android.content.Intent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        $r4 = new java.util.LinkedHashSet;

        specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>();

        r2 = $r4;

        $r5 = virtualinvoke $r1.<android.content.Intent: android.net.Uri getData()>();

        if $r5 == null goto label1;

        r11 = $r5;

        virtualinvoke r2.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r11);

        goto label1;

     label1:
        r3 = virtualinvoke $r1.<android.content.Intent: android.content.ClipData getClipData()>();

        if r3 != null goto label2;

        $z1 = virtualinvoke r2.<java.util.LinkedHashSet: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        return $r10;

     label2:
        if r3 == null goto label5;

        i0 = 0;

        i1 = virtualinvoke r3.<android.content.ClipData: int getItemCount()>();

     label3:
        if i0 >= i1 goto label5;

        $r9 = virtualinvoke r3.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i0);

        $r12 = virtualinvoke $r9.<android.content.ClipData$Item: android.net.Uri getUri()>();

        if $r12 == null goto label4;

        virtualinvoke r2.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r12);

     label4:
        i0 = i0 + 1;

        goto label3;

     label5:
        $r6 = new java.util.ArrayList;

        $r7 = (java.util.Collection) r2;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        $r8 = (java.util.List) $r6;

        return $r8;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion: void <init>()>();

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents
<androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion Companion>
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, java.lang.String)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents r0;
        android.content.Context r1;
        java.lang.String r2;
        android.content.Intent $r3, $r4, $r5, $r6;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.GET_CONTENT");

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.OPENABLE");

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.Intent setType(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.ALLOW_MULTIPLE", 1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "Intent(Intent.ACTION_GET\u2026TRA_ALLOW_MULTIPLE, true)");

        return $r6;
    }

    public final androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.String)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents r0;
        android.content.Context r1;
        java.lang.String r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        return null;
    }

    public final java.util.List parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents r0;
        int i0;
        android.content.Intent r1, r2, r3, r5, $r6;
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion $r4;
        boolean $z1;
        java.util.List r7, $r8;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r5 = r1;

        r3 = r5;

        if i0 != -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r6 = r5;

        goto label4;

     label3:
        $r6 = null;

     label4:
        r2 = $r6;

        if r2 == null goto label5;

        $r4 = <androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion Companion>;

        r7 = virtualinvoke $r4.<androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion: java.util.List getClipDataUris$activity_release(android.content.Intent)>(r2);

        if r7 == null goto label5;

        $r8 = r7;

        goto label6;

     label5:
        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label6:
        return $r8;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: android.content.Intent createIntent(android.content.Context,java.lang.String)>(r1, $r3);

        return $r4;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents r0;
        int i0;
        android.content.Intent r1;
        java.util.List $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: java.util.List parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion $r0;

        $r0 = new androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion;

        specialinvoke $r0.<androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion Companion> = $r0;

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$OpenDocument
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocument r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocument;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, java.lang.String[])
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocument r0;
        android.content.Context r1;
        java.lang.String[] r2;
        android.content.Intent $r3, $r4, $r5;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocument;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.OPEN_DOCUMENT");

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("android.intent.extra.MIME_TYPES", r2);

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.Intent setType(java.lang.String)>("*/*");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "Intent(Intent.ACTION_OPE\u2026          .setType(\"*/*\")");

        return $r5;
    }

    public final androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.String[])
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocument r0;
        android.content.Context r1;
        java.lang.String[] r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocument;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        return null;
    }

    public final android.net.Uri parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocument r0;
        int i0;
        android.content.Intent r1, r2, r3, $r4;
        boolean $z1;
        android.net.Uri $r5;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocument;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 = r1;

        r3 = r2;

        if i0 != -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r4 = r2;

        goto label4;

     label3:
        $r4 = null;

     label4:
        if $r4 == null goto label5;

        $r5 = virtualinvoke $r4.<android.content.Intent: android.net.Uri getData()>();

        goto label6;

     label5:
        $r5 = null;

     label6:
        return $r5;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocument r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String[] $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocument;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String[]) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$OpenDocument: android.content.Intent createIntent(android.content.Context,java.lang.String[])>(r1, $r3);

        return $r4;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocument r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String[] $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocument;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String[]) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$OpenDocument: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[])>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocument r0;
        int i0;
        android.content.Intent r1;
        android.net.Uri $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocument;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$OpenDocument: android.net.Uri parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, android.net.Uri)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree r0;
        android.content.Context r1;
        android.net.Uri r2;
        android.content.Intent r3, $r4;
        int $i0;
        android.os.Parcelable $r5;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.OPEN_DOCUMENT_TREE");

        r3 = $r4;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label1;

        if r2 == null goto label1;

        $r5 = (android.os.Parcelable) r2;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.provider.extra.INITIAL_URI", $r5);

     label1:
        return r3;
    }

    public final androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, android.net.Uri)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree r0;
        android.content.Context r1;
        android.net.Uri r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        return null;
    }

    public final android.net.Uri parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree r0;
        int i0;
        android.content.Intent r1, r2, r3, $r4;
        boolean $z1;
        android.net.Uri $r5;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 = r1;

        r3 = r2;

        if i0 != -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r4 = r2;

        goto label4;

     label3:
        $r4 = null;

     label4:
        if $r4 == null goto label5;

        $r5 = virtualinvoke $r4.<android.content.Intent: android.net.Uri getData()>();

        goto label6;

     label5:
        $r5 = null;

     label6:
        return $r5;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree r0;
        android.content.Context r1;
        java.lang.Object r2;
        android.net.Uri $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.net.Uri) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree: android.content.Intent createIntent(android.content.Context,android.net.Uri)>(r1, $r3);

        return $r4;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree r0;
        android.content.Context r1;
        java.lang.Object r2;
        android.net.Uri $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.net.Uri) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,android.net.Uri)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree r0;
        int i0;
        android.content.Intent r1;
        android.net.Uri $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree: android.net.Uri parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, java.lang.String[])
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments r0;
        android.content.Context r1;
        java.lang.String[] r2;
        android.content.Intent $r3, $r4, $r5, $r6;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.OPEN_DOCUMENT");

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("android.intent.extra.MIME_TYPES", r2);

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.ALLOW_MULTIPLE", 1);

        $r6 = virtualinvoke $r5.<android.content.Intent: android.content.Intent setType(java.lang.String)>("*/*");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "Intent(Intent.ACTION_OPE\u2026          .setType(\"*/*\")");

        return $r6;
    }

    public final androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.String[])
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments r0;
        android.content.Context r1;
        java.lang.String[] r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        return null;
    }

    public final java.util.List parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments r0;
        int i0;
        android.content.Intent r1, r2, r3, r5, $r6;
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion $r4;
        boolean $z1;
        java.util.List r7, $r8;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r5 = r1;

        r3 = r5;

        if i0 != -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r6 = r5;

        goto label4;

     label3:
        $r6 = null;

     label4:
        r2 = $r6;

        if r2 == null goto label5;

        $r4 = <androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion Companion>;

        r7 = virtualinvoke $r4.<androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion: java.util.List getClipDataUris$activity_release(android.content.Intent)>(r2);

        if r7 == null goto label5;

        $r8 = r7;

        goto label6;

     label5:
        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label6:
        return $r8;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String[] $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String[]) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments: android.content.Intent createIntent(android.content.Context,java.lang.String[])>(r1, $r3);

        return $r4;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String[] $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String[]) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[])>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments r0;
        int i0;
        android.content.Intent r1;
        java.util.List $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments: java.util.List parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

androidx.activity.result.contract.ActivityResultContracts$PickContact
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickContact r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickContact;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, java.lang.Void)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickContact r0;
        android.content.Context r1;
        java.lang.Void r2;
        android.content.Intent $r3, $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickContact;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PICK");

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent setType(java.lang.String)>("vnd.android.cursor.dir/contact");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "Intent(Intent.ACTION_PIC\u2026ct.Contacts.CONTENT_TYPE)");

        return $r4;
    }

    public android.net.Uri parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickContact r0;
        int i0;
        android.content.Intent r1, r2, r3, $r4;
        boolean $z1;
        android.net.Uri $r5;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickContact;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 = r1;

        r3 = r2;

        if i0 != -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r4 = r2;

        goto label4;

     label3:
        $r4 = null;

     label4:
        if $r4 == null goto label5;

        $r5 = virtualinvoke $r4.<android.content.Intent: android.net.Uri getData()>();

        goto label6;

     label5:
        $r5 = null;

     label6:
        return $r5;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickContact r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickContact;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$PickContact: android.content.Intent createIntent(android.content.Context,java.lang.Void)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickContact r0;
        int i0;
        android.content.Intent r1;
        android.net.Uri $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickContact;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$PickContact: android.net.Uri parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion
    private void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final int getMaxItems$activity_release()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion r0;
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion $r1;
        boolean $z0;
        int $i0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion;

        $r1 = <androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion Companion>;

        $z0 = virtualinvoke $r1.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: boolean isPhotoPickerAvailable()>();

        if $z0 == 0 goto label1;

        $i0 = staticinvoke <android.provider.MediaStore: int getPickImagesMaxLimit()>();

        goto label2;

     label1:
        $i0 = 2147483647;

     label2:
        return $i0;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion: void <init>()>();

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia
<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion Companion>
<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: int maxItems>
    public void <init>(int)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia r0;
        int i0, $i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        r0.<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: int maxItems> = i0;

        $i1 = r0.<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: int maxItems>;

        if $i1 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 != 0 goto label3;

        $r3 = "Max items must be higher than 1";

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r1;

     label3:
        return;
    }

    public void <init>(int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia r0;
        int i0, $i1, i2;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r2 = <androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion Companion>;

        i2 = virtualinvoke $r2.<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion: int getMaxItems$activity_release()>();

     label1:
        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: void <init>(int)>(i2);

        return;
    }

    public android.content.Intent createIntent(android.content.Context, androidx.activity.result.PickVisualMediaRequest)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia r0;
        android.content.Context r1;
        androidx.activity.result.PickVisualMediaRequest r2;
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion $r3, $r5, $r14;
        boolean $z0, $z2;
        android.content.Intent $r4, $r13, r21, $r24, r25;
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType $r6, $r15;
        java.lang.String $r7, $r10, $r16, $r20, $r23;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r19;
        java.lang.String[] $r27;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.activity.result.PickVisualMediaRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r3 = <androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion Companion>;

        $z0 = virtualinvoke $r3.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: boolean isPhotoPickerAvailable()>();

        if $z0 == 0 goto label4;

        $r13 = new android.content.Intent;

        specialinvoke $r13.<android.content.Intent: void <init>(java.lang.String)>("android.provider.action.PICK_IMAGES");

        r21 = $r13;

        $r14 = <androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion Companion>;

        $r15 = virtualinvoke r2.<androidx.activity.result.PickVisualMediaRequest: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType getMediaType()>();

        $r16 = virtualinvoke $r14.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: java.lang.String getVisualMimeType$activity_release(androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType)>($r15);

        virtualinvoke r21.<android.content.Intent: android.content.Intent setType(java.lang.String)>($r16);

        $i0 = r0.<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: int maxItems>;

        $i1 = staticinvoke <android.provider.MediaStore: int getPickImagesMaxLimit()>();

        if $i0 > $i1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 != 0 goto label3;

        $r23 = "Max items must be less or equals MediaStore.getPickImagesMaxLimit()";

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label3:
        $i2 = r0.<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: int maxItems>;

        virtualinvoke r21.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.provider.extra.PICK_IMAGES_MAX", $i2);

        $r24 = r21;

        goto label6;

     label4:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.OPEN_DOCUMENT");

        r25 = $r4;

        $r5 = <androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion Companion>;

        $r6 = virtualinvoke r2.<androidx.activity.result.PickVisualMediaRequest: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType getMediaType()>();

        $r7 = virtualinvoke $r5.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: java.lang.String getVisualMimeType$activity_release(androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType)>($r6);

        virtualinvoke r25.<android.content.Intent: android.content.Intent setType(java.lang.String)>($r7);

        virtualinvoke r25.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.ALLOW_MULTIPLE", 1);

        $r10 = virtualinvoke r25.<android.content.Intent: java.lang.String getType()>();

        if $r10 != null goto label5;

        virtualinvoke r25.<android.content.Intent: android.content.Intent setType(java.lang.String)>("*/*");

        $r27 = newarray (java.lang.String)[2];

        $r27[0] = "image/*";

        $r27[1] = "video/*";

        virtualinvoke r25.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("android.intent.extra.MIME_TYPES", $r27);

     label5:
        $r24 = r25;

     label6:
        return $r24;
    }

    public final androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, androidx.activity.result.PickVisualMediaRequest)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia r0;
        android.content.Context r1;
        androidx.activity.result.PickVisualMediaRequest r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.activity.result.PickVisualMediaRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        return null;
    }

    public final java.util.List parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia r0;
        int i0;
        android.content.Intent r1, r2, r3, r5, $r6;
        androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion $r4;
        boolean $z1;
        java.util.List r7, $r8;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r5 = r1;

        r3 = r5;

        if i0 != -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r6 = r5;

        goto label4;

     label3:
        $r6 = null;

     label4:
        r2 = $r6;

        if r2 == null goto label5;

        $r4 = <androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion Companion>;

        r7 = virtualinvoke $r4.<androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion: java.util.List getClipDataUris$activity_release(android.content.Intent)>(r2);

        if r7 == null goto label5;

        $r8 = r7;

        goto label6;

     label5:
        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

     label6:
        return $r8;
    }

    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0, 1, null);

        return;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia r0;
        android.content.Context r1;
        java.lang.Object r2;
        androidx.activity.result.PickVisualMediaRequest $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.activity.result.PickVisualMediaRequest) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: android.content.Intent createIntent(android.content.Context,androidx.activity.result.PickVisualMediaRequest)>(r1, $r3);

        return $r4;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia r0;
        android.content.Context r1;
        java.lang.Object r2;
        androidx.activity.result.PickVisualMediaRequest $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.activity.result.PickVisualMediaRequest) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,androidx.activity.result.PickVisualMediaRequest)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia r0;
        int i0;
        android.content.Intent r1;
        java.util.List $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: java.util.List parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion $r0;

        $r0 = new androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion;

        specialinvoke $r0.<androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion Companion> = $r0;

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion
    private void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final boolean isPhotoPickerAvailable()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 33 goto label1;

        $z0 = 1;

        goto label4;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 30 goto label3;

        $i2 = staticinvoke <android.os.ext.SdkExtensions: int getExtensionVersion(int)>(30);

        if $i2 < 2 goto label2;

        $z0 = 1;

        goto label4;

     label2:
        $z0 = 0;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public final java.lang.String getVisualMimeType$activity_release(androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion r0;
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType r1, r2;
        boolean $z0, $z1, $z2, $z3;
        kotlin.NoWhenBranchMatchedException $r3;
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType $r4;
        java.lang.String $r5;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion;

        r1 := @parameter0: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "input");

        r2 = r1;

        $z0 = r2 instanceof androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly;

        if $z0 == 0 goto label1;

        $r5 = "image/*";

        goto label5;

     label1:
        $z1 = r2 instanceof androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly;

        if $z1 == 0 goto label2;

        $r5 = "video/*";

        goto label5;

     label2:
        $z2 = r2 instanceof androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType;

        if $z2 == 0 goto label3;

        $r4 = (androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType) r1;

        $r5 = virtualinvoke $r4.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType: java.lang.String getMimeType()>();

        goto label5;

     label3:
        $z3 = r2 instanceof androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo;

        if $z3 == 0 goto label4;

        $r5 = null;

        goto label5;

     label4:
        $r3 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r3.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r3;

     label5:
        return $r5;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: void <init>()>();

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo
<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo INSTANCE>
    private void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo $r0;

        $r0 = new androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo;

        specialinvoke $r0.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo: void <init>()>();

        <androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo INSTANCE> = $r0;

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly
<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly INSTANCE>
    private void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly $r0;

        $r0 = new androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly;

        specialinvoke $r0.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly: void <init>()>();

        <androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly INSTANCE> = $r0;

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType
<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType: java.lang.String mimeType>
    public void <init>(java.lang.String)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType r0;
        java.lang.String r1;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "mimeType");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType: java.lang.String mimeType> = r1;

        return;
    }

    public final java.lang.String getMimeType()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType r0;
        java.lang.String $r1;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType;

        $r1 = r0.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType: java.lang.String mimeType>;

        return $r1;
    }

androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly
<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly INSTANCE>
    private void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly $r0;

        $r0 = new androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly;

        specialinvoke $r0.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly: void <init>()>();

        <androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly INSTANCE> = $r0;

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia
<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion Companion>
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, androidx.activity.result.PickVisualMediaRequest)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia r0;
        android.content.Context r1;
        androidx.activity.result.PickVisualMediaRequest r2;
        java.lang.String[] r3;
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion $r4, $r6, $r14;
        boolean $z0;
        android.content.Intent $r5, $r13, r18, $r19, r20;
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType $r7, $r15;
        java.lang.String $r8, $r10, $r16;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.activity.result.PickVisualMediaRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r4 = <androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion Companion>;

        $z0 = virtualinvoke $r4.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: boolean isPhotoPickerAvailable()>();

        if $z0 == 0 goto label1;

        $r13 = new android.content.Intent;

        specialinvoke $r13.<android.content.Intent: void <init>(java.lang.String)>("android.provider.action.PICK_IMAGES");

        r18 = $r13;

        $r14 = <androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion Companion>;

        $r15 = virtualinvoke r2.<androidx.activity.result.PickVisualMediaRequest: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType getMediaType()>();

        $r16 = virtualinvoke $r14.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: java.lang.String getVisualMimeType$activity_release(androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType)>($r15);

        virtualinvoke r18.<android.content.Intent: android.content.Intent setType(java.lang.String)>($r16);

        $r19 = r18;

        goto label3;

     label1:
        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.OPEN_DOCUMENT");

        r20 = $r5;

        $r6 = <androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion Companion>;

        $r7 = virtualinvoke r2.<androidx.activity.result.PickVisualMediaRequest: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType getMediaType()>();

        $r8 = virtualinvoke $r6.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: java.lang.String getVisualMimeType$activity_release(androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType)>($r7);

        virtualinvoke r20.<android.content.Intent: android.content.Intent setType(java.lang.String)>($r8);

        $r10 = virtualinvoke r20.<android.content.Intent: java.lang.String getType()>();

        if $r10 != null goto label2;

        virtualinvoke r20.<android.content.Intent: android.content.Intent setType(java.lang.String)>("*/*");

        r3 = newarray (java.lang.String)[2];

        r3[0] = "image/*";

        r3[1] = "video/*";

        virtualinvoke r20.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("android.intent.extra.MIME_TYPES", r3);

     label2:
        $r19 = r20;

     label3:
        return $r19;
    }

    public final androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, androidx.activity.result.PickVisualMediaRequest)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia r0;
        android.content.Context r1;
        androidx.activity.result.PickVisualMediaRequest r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.activity.result.PickVisualMediaRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        return null;
    }

    public final android.net.Uri parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia r0;
        int i0;
        android.content.Intent r1, r2, r3, $r4;
        boolean $z1;
        android.net.Uri $r5;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 = r1;

        r3 = r2;

        if i0 != -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r4 = r2;

        goto label4;

     label3:
        $r4 = null;

     label4:
        if $r4 == null goto label5;

        $r5 = virtualinvoke $r4.<android.content.Intent: android.net.Uri getData()>();

        goto label6;

     label5:
        $r5 = null;

     label6:
        return $r5;
    }

    public static final boolean isPhotoPickerAvailable()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion $r0;
        boolean $z0;

        $r0 = <androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion Companion>;

        $z0 = virtualinvoke $r0.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: boolean isPhotoPickerAvailable()>();

        return $z0;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia r0;
        android.content.Context r1;
        java.lang.Object r2;
        androidx.activity.result.PickVisualMediaRequest $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.activity.result.PickVisualMediaRequest) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: android.content.Intent createIntent(android.content.Context,androidx.activity.result.PickVisualMediaRequest)>(r1, $r3);

        return $r4;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia r0;
        android.content.Context r1;
        java.lang.Object r2;
        androidx.activity.result.PickVisualMediaRequest $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.activity.result.PickVisualMediaRequest) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,androidx.activity.result.PickVisualMediaRequest)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia r0;
        int i0;
        android.content.Intent r1;
        android.net.Uri $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: android.net.Uri parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion $r0;

        $r0 = new androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion;

        specialinvoke $r0.<androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion Companion> = $r0;

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion
    private void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final android.content.Intent createIntent$activity_release(java.lang.String[])
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion r0;
        java.lang.String[] r1;
        android.content.Intent $r2, $r3;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion;

        r1 := @parameter0: java.lang.String[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "input");

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("androidx.activity.result.contract.action.REQUEST_PERMISSIONS");

        $r3 = virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("androidx.activity.result.contract.extra.PERMISSIONS", r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "Intent(ACTION_REQUEST_PE\u2026EXTRA_PERMISSIONS, input)");

        return $r3;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion: void <init>()>();

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions
<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion Companion>
<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.lang.String ACTION_REQUEST_PERMISSIONS>
<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.lang.String EXTRA_PERMISSIONS>
<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.lang.String EXTRA_PERMISSION_GRANT_RESULTS>
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, java.lang.String[])
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions r0;
        android.content.Context r1;
        java.lang.String[] r2;
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r3 = <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion: android.content.Intent createIntent$activity_release(java.lang.String[])>(r2);

        return $r4;
    }

    public androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.String[])
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions r0;
        android.content.Context r1;
        java.lang.String[] r2;
        boolean z0, $z2, $z5, $z6, z8;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, i7, $i8;
        java.lang.String r3, r14, r15, r19;
        java.util.Map r4, r5, $r12, r18;
        java.util.LinkedHashMap $r6;
        java.lang.Boolean $r7;
        java.lang.Object $r8, $r9;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r11, $r21;
        kotlin.Pair r20;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $i1 = lengthof r2;

        if $i1 != 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        if $z2 == 0 goto label03;

        $r11 = new androidx.activity.result.contract.ActivityResultContract$SynchronousResult;

        $r12 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        specialinvoke $r11.<androidx.activity.result.contract.ActivityResultContract$SynchronousResult: void <init>(java.lang.Object)>($r12);

        return $r11;

     label03:
        i5 = 0;

        $i6 = lengthof r2;

     label04:
        if i5 >= $i6 goto label08;

        r14 = r2[i5];

        r15 = r14;

        $i4 = staticinvoke <androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)>(r1, r15);

        if $i4 != 0 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        if $z5 != 0 goto label07;

        $z6 = 0;

        goto label09;

     label07:
        i5 = i5 + 1;

        goto label04;

     label08:
        $z6 = 1;

     label09:
        z0 = $z6;

        if z0 == 0 goto label12;

        $i2 = lengthof r2;

        $i3 = staticinvoke <kotlin.collections.MapsKt: int mapCapacity(int)>($i2);

        i7 = staticinvoke <kotlin.ranges.RangesKt: int coerceAtLeast(int,int)>($i3, 16);

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>(int)>(i7);

        r18 = (java.util.Map) $r6;

        z8 = 0;

        $i8 = 0;

        i0 = lengthof r2;

     label10:
        if $i8 >= i0 goto label11;

        r3 = r2[$i8];

        r4 = r18;

        r19 = r3;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r20 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>(r19, $r7);

        $r8 = virtualinvoke r20.<kotlin.Pair: java.lang.Object getFirst()>();

        $r9 = virtualinvoke r20.<kotlin.Pair: java.lang.Object getSecond()>();

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $i8 = $i8 + 1;

        goto label10;

     label11:
        r5 = r18;

        $r21 = new androidx.activity.result.contract.ActivityResultContract$SynchronousResult;

        specialinvoke $r21.<androidx.activity.result.contract.ActivityResultContract$SynchronousResult: void <init>(java.lang.Object)>(r5);

        goto label13;

     label12:
        $r21 = null;

     label13:
        return $r21;
    }

    public java.util.Map parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions r0;
        int i0, i1, i2, i3, $i4, i5;
        android.content.Intent r1;
        java.lang.String[] r2;
        int[] r3;
        java.util.List r4, $r11, $r14;
        java.util.Collection r7, r8;
        java.util.Map $r9, $r16, $r18, $r19;
        java.util.ArrayList $r10;
        java.lang.Iterable $r12, $r13, $r15;
        java.lang.Boolean $r17;
        boolean $z4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        if i0 == -1 goto label1;

        $r19 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        return $r19;

     label1:
        if r1 != null goto label2;

        $r18 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        return $r18;

     label2:
        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("androidx.activity.result.contract.extra.PERMISSIONS");

        r3 = virtualinvoke r1.<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>("androidx.activity.result.contract.extra.PERMISSION_GRANT_RESULTS");

        if r3 == null goto label3;

        if r2 != null goto label4;

     label3:
        $r9 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        return $r9;

     label4:
        $r10 = new java.util.ArrayList;

        $i4 = lengthof r3;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i4);

        r7 = (java.util.Collection) $r10;

        i5 = 0;

        i1 = lengthof r3;

     label5:
        if i5 >= i1 goto label8;

        i2 = r3[i5];

        i3 = i2;

        r8 = r7;

        if i3 != 0 goto label6;

        $z4 = 1;

        goto label7;

     label6:
        $z4 = 0;

     label7:
        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>($r17);

        i5 = i5 + 1;

        goto label5;

     label8:
        r4 = (java.util.List) r7;

        $r11 = staticinvoke <kotlin.collections.ArraysKt: java.util.List filterNotNull(java.lang.Object[])>(r2);

        $r13 = (java.lang.Iterable) $r11;

        $r12 = (java.lang.Iterable) r4;

        $r14 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Iterable)>($r13, $r12);

        $r15 = (java.lang.Iterable) $r14;

        $r16 = staticinvoke <kotlin.collections.MapsKt: java.util.Map toMap(java.lang.Iterable)>($r15);

        return $r16;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String[] $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String[]) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: android.content.Intent createIntent(android.content.Context,java.lang.String[])>(r1, $r3);

        return $r4;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String[] $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String[]) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[])>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions r0;
        int i0;
        android.content.Intent r1;
        java.util.Map $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion $r0;

        $r0 = new androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion;

        specialinvoke $r0.<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion Companion> = $r0;

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$RequestPermission
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestPermission r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestPermission;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, java.lang.String)
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestPermission r0;
        android.content.Context r1;
        java.lang.String r2;
        java.lang.String[] r3;
        androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion $r4;
        android.content.Intent $r5;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestPermission;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r4 = <androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion Companion>;

        r3 = newarray (java.lang.String)[1];

        r3[0] = r2;

        $r5 = virtualinvoke $r4.<androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion: android.content.Intent createIntent$activity_release(java.lang.String[])>(r3);

        return $r5;
    }

    public java.lang.Boolean parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestPermission r0;
        int i0, i1, i2, i3, i4;
        android.content.Intent r1;
        int[] r2;
        java.lang.Boolean $r4, $r5;
        boolean $z2, $z3, $z4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestPermission;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        if r1 == null goto label01;

        if i0 == -1 goto label02;

     label01:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r4;

     label02:
        r2 = virtualinvoke r1.<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>("androidx.activity.result.contract.extra.PERMISSION_GRANT_RESULTS");

        if r2 == null goto label10;

        i4 = 0;

        i1 = lengthof r2;

     label03:
        if i4 >= i1 goto label07;

        i2 = r2[i4];

        i3 = i2;

        if i3 != 0 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        if $z2 == 0 goto label06;

        $z3 = 1;

        goto label08;

     label06:
        i4 = i4 + 1;

        goto label03;

     label07:
        $z3 = 0;

     label08:
        if $z3 != 1 goto label09;

        $z4 = 1;

        goto label11;

     label09:
        $z4 = 0;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        return $r5;
    }

    public androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.String)
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestPermission r0;
        android.content.Context r1;
        java.lang.String r2;
        boolean z0, $z1;
        int $i0;
        java.lang.Boolean $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestPermission;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $i0 = staticinvoke <androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)>(r1, r2);

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $r4 = new androidx.activity.result.contract.ActivityResultContract$SynchronousResult;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        specialinvoke $r4.<androidx.activity.result.contract.ActivityResultContract$SynchronousResult: void <init>(java.lang.Object)>($r3);

        goto label4;

     label3:
        $r4 = (androidx.activity.result.contract.ActivityResultContract$SynchronousResult) null;

     label4:
        return $r4;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestPermission r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestPermission;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$RequestPermission: android.content.Intent createIntent(android.content.Context,java.lang.String)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestPermission r0;
        int i0;
        android.content.Intent r1;
        java.lang.Boolean $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestPermission;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$RequestPermission: java.lang.Boolean parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$RequestPermission r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.String $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$RequestPermission;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$RequestPermission: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String)>(r1, $r3);

        return $r4;
    }

androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion
    private void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion: void <init>()>();

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult
<androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion Companion>
<androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: java.lang.String EXTRA_ACTIVITY_OPTIONS_BUNDLE>
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        return r2;
    }

    public androidx.activity.result.ActivityResult parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult r0;
        int i0;
        android.content.Intent r1;
        androidx.activity.result.ActivityResult $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = new androidx.activity.result.ActivityResult;

        specialinvoke $r2.<androidx.activity.result.ActivityResult: void <init>(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult r0;
        android.content.Context r1;
        java.lang.Object r2;
        android.content.Intent $r3, $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.content.Intent) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: android.content.Intent createIntent(android.content.Context,android.content.Intent)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult r0;
        int i0;
        android.content.Intent r1;
        androidx.activity.result.ActivityResult $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion $r0;

        $r0 = new androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion;

        specialinvoke $r0.<androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion Companion> = $r0;

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion
    private void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion: void <init>()>();

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult
<androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion Companion>
<androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: java.lang.String ACTION_INTENT_SENDER_REQUEST>
<androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: java.lang.String EXTRA_INTENT_SENDER_REQUEST>
<androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: java.lang.String EXTRA_SEND_INTENT_EXCEPTION>
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, androidx.activity.result.IntentSenderRequest)
    {
        androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult r0;
        android.content.Context r1;
        androidx.activity.result.IntentSenderRequest r2;
        android.content.Intent $r3, $r5;
        android.os.Parcelable $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.activity.result.IntentSenderRequest;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("androidx.activity.result.contract.action.INTENT_SENDER_REQUEST");

        $r4 = (android.os.Parcelable) r2;

        $r5 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("androidx.activity.result.contract.extra.INTENT_SENDER_REQUEST", $r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "Intent(ACTION_INTENT_SEN\u2026NT_SENDER_REQUEST, input)");

        return $r5;
    }

    public androidx.activity.result.ActivityResult parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult r0;
        int i0;
        android.content.Intent r1;
        androidx.activity.result.ActivityResult $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = new androidx.activity.result.ActivityResult;

        specialinvoke $r2.<androidx.activity.result.ActivityResult: void <init>(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult r0;
        android.content.Context r1;
        java.lang.Object r2;
        androidx.activity.result.IntentSenderRequest $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.activity.result.IntentSenderRequest) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult r0;
        int i0;
        android.content.Intent r1;
        androidx.activity.result.ActivityResult $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion $r0;

        $r0 = new androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion;

        specialinvoke $r0.<androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion Companion> = $r0;

        return;
    }

androidx.activity.result.contract.ActivityResultContracts$TakePicture
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicture r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicture;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, android.net.Uri)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicture r0;
        android.content.Context r1;
        android.net.Uri r2;
        android.content.Intent $r3, $r5;
        android.os.Parcelable $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicture;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.media.action.IMAGE_CAPTURE");

        $r4 = (android.os.Parcelable) r2;

        $r5 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("output", $r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "Intent(MediaStore.ACTION\u2026tore.EXTRA_OUTPUT, input)");

        return $r5;
    }

    public final androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, android.net.Uri)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicture r0;
        android.content.Context r1;
        android.net.Uri r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicture;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        return null;
    }

    public final java.lang.Boolean parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicture r0;
        int i0;
        android.content.Intent r1;
        java.lang.Boolean $r2;
        boolean $z0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicture;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        if i0 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicture r0;
        android.content.Context r1;
        java.lang.Object r2;
        android.net.Uri $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicture;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.net.Uri) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$TakePicture: android.content.Intent createIntent(android.content.Context,android.net.Uri)>(r1, $r3);

        return $r4;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicture r0;
        android.content.Context r1;
        java.lang.Object r2;
        android.net.Uri $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicture;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.net.Uri) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$TakePicture: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,android.net.Uri)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicture r0;
        int i0;
        android.content.Intent r1;
        java.lang.Boolean $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicture;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$TakePicture: java.lang.Boolean parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, java.lang.Void)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview r0;
        android.content.Context r1;
        java.lang.Void r2;
        android.content.Intent $r3;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.media.action.IMAGE_CAPTURE");

        return $r3;
    }

    public final androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Void)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview r0;
        android.content.Context r1;
        java.lang.Void r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        return null;
    }

    public final android.graphics.Bitmap parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview r0;
        int i0;
        android.content.Intent r1, r2, r3, $r5;
        android.os.Parcelable $r4;
        boolean $z1;
        android.graphics.Bitmap $r6;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 = r1;

        r3 = r2;

        if i0 != -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r5 = r2;

        goto label4;

     label3:
        $r5 = null;

     label4:
        if $r5 == null goto label5;

        $r4 = virtualinvoke $r5.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("data");

        $r6 = (android.graphics.Bitmap) $r4;

        goto label6;

     label5:
        $r6 = null;

     label6:
        return $r6;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview: android.content.Intent createIntent(android.content.Context,java.lang.Void)>(r1, $r3);

        return $r4;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview r0;
        android.content.Context r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Void)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview r0;
        int i0;
        android.content.Intent r1;
        android.graphics.Bitmap $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview: android.graphics.Bitmap parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

androidx.activity.result.contract.ActivityResultContracts$TakeVideo
    public void <init>()
    {
        androidx.activity.result.contract.ActivityResultContracts$TakeVideo r0;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakeVideo;

        specialinvoke r0.<androidx.activity.result.contract.ActivityResultContract: void <init>()>();

        return;
    }

    public android.content.Intent createIntent(android.content.Context, android.net.Uri)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakeVideo r0;
        android.content.Context r1;
        android.net.Uri r2;
        android.content.Intent $r3, $r5;
        android.os.Parcelable $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakeVideo;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.media.action.VIDEO_CAPTURE");

        $r4 = (android.os.Parcelable) r2;

        $r5 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("output", $r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "Intent(MediaStore.ACTION\u2026tore.EXTRA_OUTPUT, input)");

        return $r5;
    }

    public final androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, android.net.Uri)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakeVideo r0;
        android.content.Context r1;
        android.net.Uri r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakeVideo;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "input");

        return null;
    }

    public final android.graphics.Bitmap parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakeVideo r0;
        int i0;
        android.content.Intent r1, r2, r3, $r5;
        android.os.Parcelable $r4;
        boolean $z1;
        android.graphics.Bitmap $r6;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakeVideo;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 = r1;

        r3 = r2;

        if i0 != -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label3;

        $r5 = r2;

        goto label4;

     label3:
        $r5 = null;

     label4:
        if $r5 == null goto label5;

        $r4 = virtualinvoke $r5.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("data");

        $r6 = (android.graphics.Bitmap) $r4;

        goto label6;

     label5:
        $r6 = null;

     label6:
        return $r6;
    }

    public volatile android.content.Intent createIntent(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakeVideo r0;
        android.content.Context r1;
        java.lang.Object r2;
        android.net.Uri $r3;
        android.content.Intent $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakeVideo;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.net.Uri) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$TakeVideo: android.content.Intent createIntent(android.content.Context,android.net.Uri)>(r1, $r3);

        return $r4;
    }

    public volatile androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context, java.lang.Object)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakeVideo r0;
        android.content.Context r1;
        java.lang.Object r2;
        android.net.Uri $r3;
        androidx.activity.result.contract.ActivityResultContract$SynchronousResult $r4;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakeVideo;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.net.Uri) r2;

        $r4 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$TakeVideo: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,android.net.Uri)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object parseResult(int, android.content.Intent)
    {
        androidx.activity.result.contract.ActivityResultContracts$TakeVideo r0;
        int i0;
        android.content.Intent r1;
        android.graphics.Bitmap $r2;

        r0 := @this: androidx.activity.result.contract.ActivityResultContracts$TakeVideo;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<androidx.activity.result.contract.ActivityResultContracts$TakeVideo: android.graphics.Bitmap parseResult(int,android.content.Intent)>(i0, r1);

        return $r2;
    }

