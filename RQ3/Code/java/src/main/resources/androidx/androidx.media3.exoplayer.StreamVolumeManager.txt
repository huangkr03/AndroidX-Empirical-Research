androidx.media3.exoplayer.StreamVolumeManager
<androidx.media3.exoplayer.StreamVolumeManager: java.lang.String TAG>
<androidx.media3.exoplayer.StreamVolumeManager: java.lang.String VOLUME_CHANGED_ACTION>
<androidx.media3.exoplayer.StreamVolumeManager: int VOLUME_FLAGS>
<androidx.media3.exoplayer.StreamVolumeManager: android.content.Context applicationContext>
<androidx.media3.exoplayer.StreamVolumeManager: android.os.Handler eventHandler>
<androidx.media3.exoplayer.StreamVolumeManager: androidx.media3.exoplayer.StreamVolumeManager$Listener listener>
<androidx.media3.exoplayer.StreamVolumeManager: android.media.AudioManager audioManager>
<androidx.media3.exoplayer.StreamVolumeManager: androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver receiver>
<androidx.media3.exoplayer.StreamVolumeManager: int streamType>
<androidx.media3.exoplayer.StreamVolumeManager: int volume>
<androidx.media3.exoplayer.StreamVolumeManager: boolean muted>
    public void <init>(android.content.Context, android.os.Handler, androidx.media3.exoplayer.StreamVolumeManager$Listener)
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;
        android.content.Context r1, $r7, $r8, $r17;
        android.os.Handler r2;
        androidx.media3.exoplayer.StreamVolumeManager$Listener r3;
        androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver r4, $r15;
        android.content.IntentFilter r5, $r16;
        java.lang.Throwable r6, $r19;
        java.lang.Object $r9, $r11;
        android.media.AudioManager $r10, $r12, $r13, $r14;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: androidx.media3.exoplayer.StreamVolumeManager$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<androidx.media3.exoplayer.StreamVolumeManager: android.content.Context applicationContext> = $r7;

        r0.<androidx.media3.exoplayer.StreamVolumeManager: android.os.Handler eventHandler> = r2;

        r0.<androidx.media3.exoplayer.StreamVolumeManager: androidx.media3.exoplayer.StreamVolumeManager$Listener listener> = r3;

        $r8 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.content.Context applicationContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r10 = (android.media.AudioManager) $r9;

        $r11 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r10);

        $r12 = (android.media.AudioManager) $r11;

        r0.<androidx.media3.exoplayer.StreamVolumeManager: android.media.AudioManager audioManager> = $r12;

        r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType> = 3;

        $r13 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.media.AudioManager audioManager>;

        $i0 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType>;

        $i1 = staticinvoke <androidx.media3.exoplayer.StreamVolumeManager: int getVolumeFromManager(android.media.AudioManager,int)>($r13, $i0);

        r0.<androidx.media3.exoplayer.StreamVolumeManager: int volume> = $i1;

        $r14 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.media.AudioManager audioManager>;

        $i2 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType>;

        $z0 = staticinvoke <androidx.media3.exoplayer.StreamVolumeManager: boolean getMutedFromManager(android.media.AudioManager,int)>($r14, $i2);

        r0.<androidx.media3.exoplayer.StreamVolumeManager: boolean muted> = $z0;

        $r15 = new androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver;

        specialinvoke $r15.<androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver: void <init>(androidx.media3.exoplayer.StreamVolumeManager,androidx.media3.exoplayer.StreamVolumeManager$1)>(r0, null);

        r4 = $r15;

        $r16 = new android.content.IntentFilter;

        specialinvoke $r16.<android.content.IntentFilter: void <init>(java.lang.String)>("android.media.VOLUME_CHANGED_ACTION");

        r5 = $r16;

     label1:
        $r17 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.content.Context applicationContext>;

        virtualinvoke $r17.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r4, r5);

        r0.<androidx.media3.exoplayer.StreamVolumeManager: androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver receiver> = r4;

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

        r6 = $r19;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("StreamVolumeManager", "Error registering stream volume receiver", r6);

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void setStreamType(int)
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;
        int i0, $i1;
        androidx.media3.exoplayer.StreamVolumeManager$Listener $r1;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType>;

        if $i1 != i0 goto label1;

        return;

     label1:
        r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType> = i0;

        specialinvoke r0.<androidx.media3.exoplayer.StreamVolumeManager: void updateVolumeAndNotifyIfChanged()>();

        $r1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: androidx.media3.exoplayer.StreamVolumeManager$Listener listener>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.StreamVolumeManager$Listener: void onStreamTypeChanged(int)>(i0);

        return;
    }

    public int getMinVolume()
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;
        int $i0, $i1, $i2;
        android.media.AudioManager $r1;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.media.AudioManager audioManager>;

        $i1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType>;

        $i2 = virtualinvoke $r1.<android.media.AudioManager: int getStreamMinVolume(int)>($i1);

        goto label2;

     label1:
        $i2 = 0;

     label2:
        return $i2;
    }

    public int getMaxVolume()
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;
        int $i0, $i1;
        android.media.AudioManager $r1;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager;

        $r1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.media.AudioManager audioManager>;

        $i0 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType>;

        $i1 = virtualinvoke $r1.<android.media.AudioManager: int getStreamMaxVolume(int)>($i0);

        return $i1;
    }

    public int getVolume()
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager;

        $i0 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int volume>;

        return $i0;
    }

    public boolean isMuted()
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager;

        $z0 = r0.<androidx.media3.exoplayer.StreamVolumeManager: boolean muted>;

        return $z0;
    }

    public void setVolume(int)
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;
        int i0, $i1, $i2, $i3;
        android.media.AudioManager $r1;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<androidx.media3.exoplayer.StreamVolumeManager: int getMinVolume()>();

        if i0 < $i1 goto label1;

        $i2 = virtualinvoke r0.<androidx.media3.exoplayer.StreamVolumeManager: int getMaxVolume()>();

        if i0 <= $i2 goto label2;

     label1:
        return;

     label2:
        $r1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.media.AudioManager audioManager>;

        $i3 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType>;

        virtualinvoke $r1.<android.media.AudioManager: void setStreamVolume(int,int,int)>($i3, i0, 1);

        specialinvoke r0.<androidx.media3.exoplayer.StreamVolumeManager: void updateVolumeAndNotifyIfChanged()>();

        return;
    }

    public void increaseVolume()
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;
        int $i0, $i1, $i2;
        android.media.AudioManager $r1;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager;

        $i0 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int volume>;

        $i1 = virtualinvoke r0.<androidx.media3.exoplayer.StreamVolumeManager: int getMaxVolume()>();

        if $i0 < $i1 goto label1;

        return;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.media.AudioManager audioManager>;

        $i2 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType>;

        virtualinvoke $r1.<android.media.AudioManager: void adjustStreamVolume(int,int,int)>($i2, 1, 1);

        specialinvoke r0.<androidx.media3.exoplayer.StreamVolumeManager: void updateVolumeAndNotifyIfChanged()>();

        return;
    }

    public void decreaseVolume()
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;
        int $i0, $i1, $i2;
        android.media.AudioManager $r1;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager;

        $i0 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int volume>;

        $i1 = virtualinvoke r0.<androidx.media3.exoplayer.StreamVolumeManager: int getMinVolume()>();

        if $i0 > $i1 goto label1;

        return;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.media.AudioManager audioManager>;

        $i2 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType>;

        virtualinvoke $r1.<android.media.AudioManager: void adjustStreamVolume(int,int,int)>($i2, -1, 1);

        specialinvoke r0.<androidx.media3.exoplayer.StreamVolumeManager: void updateVolumeAndNotifyIfChanged()>();

        return;
    }

    public void setMuted(boolean)
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;
        boolean z0;
        int $i0, $i1, $i2;
        android.media.AudioManager $r1, $r2;
        byte $b3;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager;

        z0 := @parameter0: boolean;

        $i0 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i0 < 23 goto label3;

        $r2 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.media.AudioManager audioManager>;

        $i2 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType>;

        if z0 == 0 goto label1;

        $b3 = -100;

        goto label2;

     label1:
        $b3 = 100;

     label2:
        virtualinvoke $r2.<android.media.AudioManager: void adjustStreamVolume(int,int,int)>($i2, $b3, 1);

        goto label4;

     label3:
        $r1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.media.AudioManager audioManager>;

        $i1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType>;

        virtualinvoke $r1.<android.media.AudioManager: void setStreamMute(int,boolean)>($i1, z0);

     label4:
        specialinvoke r0.<androidx.media3.exoplayer.StreamVolumeManager: void updateVolumeAndNotifyIfChanged()>();

        return;
    }

    public void release()
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;
        java.lang.Throwable r1, $r5;
        androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver $r2, $r3;
        android.content.Context $r4;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager;

        $r2 = r0.<androidx.media3.exoplayer.StreamVolumeManager: androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver receiver>;

        if $r2 == null goto label5;

     label1:
        $r4 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.content.Context applicationContext>;

        $r3 = r0.<androidx.media3.exoplayer.StreamVolumeManager: androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver receiver>;

        virtualinvoke $r4.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("StreamVolumeManager", "Error unregistering stream volume receiver", r1);

     label4:
        r0.<androidx.media3.exoplayer.StreamVolumeManager: androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver receiver> = null;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private void updateVolumeAndNotifyIfChanged()
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;
        int i0, $i1, $i2, $i3;
        boolean z0, $z1;
        android.media.AudioManager $r1, $r2;
        androidx.media3.exoplayer.StreamVolumeManager$Listener $r3;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager;

        $r1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.media.AudioManager audioManager>;

        $i1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType>;

        i0 = staticinvoke <androidx.media3.exoplayer.StreamVolumeManager: int getVolumeFromManager(android.media.AudioManager,int)>($r1, $i1);

        $r2 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.media.AudioManager audioManager>;

        $i2 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int streamType>;

        z0 = staticinvoke <androidx.media3.exoplayer.StreamVolumeManager: boolean getMutedFromManager(android.media.AudioManager,int)>($r2, $i2);

        $i3 = r0.<androidx.media3.exoplayer.StreamVolumeManager: int volume>;

        if $i3 != i0 goto label1;

        $z1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: boolean muted>;

        if $z1 == z0 goto label2;

     label1:
        r0.<androidx.media3.exoplayer.StreamVolumeManager: int volume> = i0;

        r0.<androidx.media3.exoplayer.StreamVolumeManager: boolean muted> = z0;

        $r3 = r0.<androidx.media3.exoplayer.StreamVolumeManager: androidx.media3.exoplayer.StreamVolumeManager$Listener listener>;

        interfaceinvoke $r3.<androidx.media3.exoplayer.StreamVolumeManager$Listener: void onStreamVolumeChanged(int,boolean)>(i0, z0);

     label2:
        return;
    }

    private static int getVolumeFromManager(android.media.AudioManager, int)
    {
        android.media.AudioManager r0;
        int i0, $i1, $i2;
        java.lang.Throwable r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @parameter0: android.media.AudioManager;

        i0 := @parameter1: int;

     label1:
        $i1 = virtualinvoke r0.<android.media.AudioManager: int getStreamVolume(int)>(i0);

     label2:
        return $i1;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not retrieve stream volume for stream type ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("StreamVolumeManager", $r6, r1);

        $i2 = virtualinvoke r0.<android.media.AudioManager: int getStreamMaxVolume(int)>(i0);

        return $i2;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private static boolean getMutedFromManager(android.media.AudioManager, int)
    {
        android.media.AudioManager r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @parameter0: android.media.AudioManager;

        i0 := @parameter1: int;

        $i1 = <androidx.media3.common.util.Util: int SDK_INT>;

        if $i1 < 23 goto label1;

        $z0 = virtualinvoke r0.<android.media.AudioManager: boolean isStreamMute(int)>(i0);

        return $z0;

     label1:
        $i2 = staticinvoke <androidx.media3.exoplayer.StreamVolumeManager: int getVolumeFromManager(android.media.AudioManager,int)>(r0, i0);

        if $i2 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    static android.os.Handler access$100(androidx.media3.exoplayer.StreamVolumeManager)
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;
        android.os.Handler $r1;

        r0 := @parameter0: androidx.media3.exoplayer.StreamVolumeManager;

        $r1 = r0.<androidx.media3.exoplayer.StreamVolumeManager: android.os.Handler eventHandler>;

        return $r1;
    }

    static void access$200(androidx.media3.exoplayer.StreamVolumeManager)
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;

        r0 := @parameter0: androidx.media3.exoplayer.StreamVolumeManager;

        specialinvoke r0.<androidx.media3.exoplayer.StreamVolumeManager: void updateVolumeAndNotifyIfChanged()>();

        return;
    }

androidx.media3.exoplayer.StreamVolumeManager$1
androidx.media3.exoplayer.StreamVolumeManager$Listener
<androidx.media3.exoplayer.StreamVolumeManager$Listener: void onStreamTypeChanged(int)>
<androidx.media3.exoplayer.StreamVolumeManager$Listener: void onStreamVolumeChanged(int,boolean)>
androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver
<androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver: androidx.media3.exoplayer.StreamVolumeManager this$0>
    private void <init>(androidx.media3.exoplayer.StreamVolumeManager)
    {
        androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver r0;
        androidx.media3.exoplayer.StreamVolumeManager r1;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver;

        r1 := @parameter0: androidx.media3.exoplayer.StreamVolumeManager;

        r0.<androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver: androidx.media3.exoplayer.StreamVolumeManager this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        androidx.media3.exoplayer.StreamVolumeManager $r3, $r5;
        android.os.Handler $r4;
        java.lang.Runnable $r6;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = r0.<androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver: androidx.media3.exoplayer.StreamVolumeManager this$0>;

        $r4 = staticinvoke <androidx.media3.exoplayer.StreamVolumeManager: android.os.Handler access$100(androidx.media3.exoplayer.StreamVolumeManager)>($r3);

        $r5 = r0.<androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver: androidx.media3.exoplayer.StreamVolumeManager this$0>;

        $r6 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.exoplayer.StreamVolumeManager)>($r5) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver: void lambda$onReceive$0(androidx.media3.exoplayer.StreamVolumeManager)>, methodtype: void __METHODTYPE__());

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        return;
    }

    private static void lambda$onReceive$0(androidx.media3.exoplayer.StreamVolumeManager)
    {
        androidx.media3.exoplayer.StreamVolumeManager r0;

        r0 := @parameter0: androidx.media3.exoplayer.StreamVolumeManager;

        staticinvoke <androidx.media3.exoplayer.StreamVolumeManager: void access$200(androidx.media3.exoplayer.StreamVolumeManager)>(r0);

        return;
    }

    void <init>(androidx.media3.exoplayer.StreamVolumeManager, androidx.media3.exoplayer.StreamVolumeManager$1)
    {
        androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver r0;
        androidx.media3.exoplayer.StreamVolumeManager r1;
        androidx.media3.exoplayer.StreamVolumeManager$1 r2;

        r0 := @this: androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver;

        r1 := @parameter0: androidx.media3.exoplayer.StreamVolumeManager;

        r2 := @parameter1: androidx.media3.exoplayer.StreamVolumeManager$1;

        specialinvoke r0.<androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver: void <init>(androidx.media3.exoplayer.StreamVolumeManager)>(r1);

        return;
    }

