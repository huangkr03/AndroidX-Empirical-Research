androidx.constraintlayout.solver.widgets.Optimizer
<androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_NONE>
<androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_DIRECT>
<androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_BARRIER>
<androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_CHAIN>
<androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_DIMENSIONS>
<androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_RATIO>
<androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_GROUPS>
<androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_GRAPH>
<androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_GRAPH_WRAP>
<androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_CACHE_MEASURES>
<androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_DEPENDENCY_ORDERING>
<androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_GROUPING>
<androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_STANDARD>
<androidx.constraintlayout.solver.widgets.Optimizer: boolean[] flags>
<androidx.constraintlayout.solver.widgets.Optimizer: int FLAG_USE_OPTIMIZE>
<androidx.constraintlayout.solver.widgets.Optimizer: int FLAG_CHAIN_DANGLING>
<androidx.constraintlayout.solver.widgets.Optimizer: int FLAG_RECOMPUTE_BOUNDS>
    public void <init>()
    {
        androidx.constraintlayout.solver.widgets.Optimizer r0;

        r0 := @this: androidx.constraintlayout.solver.widgets.Optimizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer, androidx.constraintlayout.solver.LinearSystem, androidx.constraintlayout.solver.widgets.ConstraintWidget)
    {
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer r0;
        androidx.constraintlayout.solver.LinearSystem r1;
        androidx.constraintlayout.solver.widgets.ConstraintWidget r2;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] $r3, $r6, $r26, $r41;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour $r4, $r5, $r7, $r8, $r27, $r28, $r42, $r43;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor $r9, $r10, $r11, $r12, $r14, $r15, $r17, $r19, $r21, $r22, $r24, $r29, $r30, $r31, $r32, $r34, $r35, $r37, $r39;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        androidx.constraintlayout.solver.SolverVariable $r13, $r16, $r18, $r20, $r23, $r25, $r33, $r36, $r38, $r40;

        r0 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        r1 := @parameter1: androidx.constraintlayout.solver.LinearSystem;

        r2 := @parameter2: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mHorizontalResolution> = -1;

        r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mVerticalResolution> = -1;

        $r3 = r0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r5 = $r3[0];

        $r4 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $r5 == $r4 goto label1;

        $r26 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r28 = $r26[0];

        $r27 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT>;

        if $r28 != $r27 goto label1;

        $r29 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        i8 = $r29.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin>;

        $i6 = virtualinvoke r0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getWidth()>();

        $r30 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $i7 = $r30.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin>;

        i9 = $i6 - $i7;

        $r32 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $r31 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $r33 = virtualinvoke r1.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)>($r31);

        $r32.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable> = $r33;

        $r35 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $r34 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $r36 = virtualinvoke r1.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)>($r34);

        $r35.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable> = $r36;

        $r37 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft>;

        $r38 = $r37.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke r1.<androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)>($r38, i8);

        $r39 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight>;

        $r40 = $r39.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke r1.<androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)>($r40, i9);

        r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mHorizontalResolution> = 2;

        virtualinvoke r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimension(int,int)>(i8, i9);

     label1:
        $r41 = r0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r42 = $r41[1];

        $r43 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $r42 == $r43 goto label4;

        $r6 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors>;

        $r8 = $r6[1];

        $r7 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT>;

        if $r8 != $r7 goto label4;

        $r9 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        i10 = $r9.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin>;

        $i0 = virtualinvoke r0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getHeight()>();

        $r10 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $i1 = $r10.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin>;

        i11 = $i0 - $i1;

        $r12 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $r11 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $r13 = virtualinvoke r1.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)>($r11);

        $r12.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable> = $r13;

        $r15 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $r14 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $r16 = virtualinvoke r1.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)>($r14);

        $r15.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable> = $r16;

        $r17 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop>;

        $r18 = $r17.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke r1.<androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)>($r18, i10);

        $r19 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom>;

        $r20 = $r19.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        virtualinvoke r1.<androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)>($r20, i11);

        $i2 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mBaselineDistance>;

        if $i2 > 0 goto label2;

        $i5 = virtualinvoke r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()>();

        if $i5 != 8 goto label3;

     label2:
        $r22 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBaseline>;

        $r21 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBaseline>;

        $r23 = virtualinvoke r1.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)>($r21);

        $r22.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable> = $r23;

        $r24 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor mBaseline>;

        $r25 = $r24.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable mSolverVariable>;

        $i3 = r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mBaselineDistance>;

        $i4 = i10 + $i3;

        virtualinvoke r1.<androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)>($r25, $i4);

     label3:
        r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int mVerticalResolution> = 2;

        virtualinvoke r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimension(int,int)>(i10, i11);

     label4:
        return;
    }

    public static final boolean enabled(int, int)
    {
        int i0, i1, $i2;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 & i1;

        if $i2 != i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        boolean[] $r0;

        $r0 = newarray (boolean)[3];

        <androidx.constraintlayout.solver.widgets.Optimizer: boolean[] flags> = $r0;

        return;
    }

