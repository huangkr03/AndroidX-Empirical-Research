kotlin.comparisons.NaturalOrderComparator
<kotlin.comparisons.NaturalOrderComparator: kotlin.comparisons.NaturalOrderComparator INSTANCE>
    static void <clinit>()
    {
        kotlin.comparisons.NaturalOrderComparator $r0;

        $r0 = new kotlin.comparisons.NaturalOrderComparator;

        specialinvoke $r0.<kotlin.comparisons.NaturalOrderComparator: void <init>()>();

        <kotlin.comparisons.NaturalOrderComparator: kotlin.comparisons.NaturalOrderComparator INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        kotlin.comparisons.NaturalOrderComparator $r0;

        $r0 := @this: kotlin.comparisons.NaturalOrderComparator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Comparable, java.lang.Comparable)
    {
        kotlin.comparisons.NaturalOrderComparator $r0;
        java.lang.Comparable $r1, $r2;
        int $i0;

        $r0 := @this: kotlin.comparisons.NaturalOrderComparator;

        $r2 := @parameter0: java.lang.Comparable;

        $r1 := @parameter1: java.lang.Comparable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "a");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "b");

        $i0 = interfaceinvoke $r2.<java.lang.Comparable: int compareTo(java.lang.Object)>($r1);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        kotlin.comparisons.NaturalOrderComparator $r0;
        int $i0;
        java.lang.Object $r1, $r2;
        java.lang.Comparable $r3, $r4;

        $r0 := @this: kotlin.comparisons.NaturalOrderComparator;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Comparable) $r1;

        $r4 = (java.lang.Comparable) $r2;

        $i0 = virtualinvoke $r0.<kotlin.comparisons.NaturalOrderComparator: int compare(java.lang.Comparable,java.lang.Comparable)>($r3, $r4);

        return $i0;
    }

    public final java.util.Comparator reversed()
    {
        kotlin.comparisons.NaturalOrderComparator $r0;
        kotlin.comparisons.ReverseOrderComparator r1;

        $r0 := @this: kotlin.comparisons.NaturalOrderComparator;

        r1 = <kotlin.comparisons.ReverseOrderComparator: kotlin.comparisons.ReverseOrderComparator INSTANCE>;

        return r1;
    }

