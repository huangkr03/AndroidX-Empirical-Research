androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: kotlin.jvm.functions.Function2 fillIndices>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: androidx.compose.runtime.MutableState indices$delegate>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: androidx.compose.runtime.MutableState offsets$delegate>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: boolean hadFirstNotEmptyLayout>
<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: java.lang.Object lastKnownFirstItemKey>
    public void <init>(int[], int[], kotlin.jvm.functions.Function2)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition r0;
        int[] r1, r2;
        kotlin.jvm.functions.Function2 r3;
        androidx.compose.runtime.MutableState $r4, $r5;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        r3 := @parameter2: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialIndices");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "initialOffsets");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "fillIndices");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: kotlin.jvm.functions.Function2 fillIndices> = r3;

        $r4 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(r1, null, 2, null);

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: androidx.compose.runtime.MutableState indices$delegate> = $r4;

        $r5 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(r2, null, 2, null);

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: androidx.compose.runtime.MutableState offsets$delegate> = $r5;

        return;
    }

    public final int[] getIndices()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        int[] $r4;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition;

        $r2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: androidx.compose.runtime.MutableState indices$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (int[]) $r3;

        return $r4;
    }

    public final void setIndices(int[])
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition r0;
        int[] r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition;

        r1 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        $r2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: androidx.compose.runtime.MutableState indices$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final int[] getOffsets()
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        int[] $r4;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition;

        $r2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: androidx.compose.runtime.MutableState offsets$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (int[]) $r3;

        return $r4;
    }

    public final void setOffsets(int[])
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition r0;
        int[] r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition;

        r1 := @parameter0: int[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        $r2 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: androidx.compose.runtime.MutableState offsets$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final void updateFromMeasureResult(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition r0;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult r1;
        androidx.compose.runtime.snapshots.Snapshot$Companion r2;
        androidx.compose.runtime.snapshots.Snapshot r3, r4, r14;
        java.util.List $r5;
        java.lang.Object $r6, $r13;
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo $r7;
        boolean $z3;
        int[] $r8, $r9;
        int $i0;
        java.lang.Throwable $r11, $r12, r16, r18;
        kotlin.Unit r15, r17;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition;

        r1 := @parameter0: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "measureResult");

        $r5 = virtualinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult: java.util.List getVisibleItemsInfo()>();

        $r6 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.util.List)>($r5);

        $r7 = (androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo) $r6;

        if $r7 == null goto label01;

        $r13 = interfaceinvoke $r7.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemInfo: java.lang.Object getKey()>();

        goto label02;

     label01:
        $r13 = null;

     label02:
        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: java.lang.Object lastKnownFirstItemKey> = $r13;

        $z3 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: boolean hadFirstNotEmptyLayout>;

        if $z3 != 0 goto label03;

        $i0 = virtualinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult: int getTotalItemsCount()>();

        if $i0 <= 0 goto label13;

     label03:
        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: boolean hadFirstNotEmptyLayout> = 1;

        r2 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r3 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot createNonObservableSnapshot()>();

     label04:
        r14 = r3;

        r4 = virtualinvoke r14.<androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot makeCurrent()>();

     label05:
        $r8 = virtualinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult: int[] getFirstVisibleItemIndices()>();

        $r9 = virtualinvoke r1.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridMeasureResult: int[] getFirstVisibleItemScrollOffsets()>();

        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: void update(int[],int[])>($r8, $r9);

        r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label06:
        virtualinvoke r14.<androidx.compose.runtime.snapshots.Snapshot: void restoreCurrent(androidx.compose.runtime.snapshots.Snapshot)>(r4);

        goto label09;

     label07:
        $r11 := @caughtexception;

        r16 = $r11;

     label08:
        virtualinvoke r14.<androidx.compose.runtime.snapshots.Snapshot: void restoreCurrent(androidx.compose.runtime.snapshots.Snapshot)>(r4);

        throw r16;

     label09:
        r17 = r15;

     label10:
        virtualinvoke r3.<androidx.compose.runtime.snapshots.Snapshot: void dispose()>();

        goto label13;

     label11:
        $r12 := @caughtexception;

        r18 = $r12;

     label12:
        virtualinvoke r3.<androidx.compose.runtime.snapshots.Snapshot: void dispose()>();

        throw r18;

     label13:
        return;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label04 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public final void requestPosition(int, int)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition r0;
        int i0, i1, i2, i3, $i4, i5;
        int[] r1, r2, r3, $r6;
        kotlin.jvm.functions.Function2 $r4;
        java.lang.Integer $r5, $r7;
        java.lang.Object $r8;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r4 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: kotlin.jvm.functions.Function2 fillIndices>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getIndices()>();

        $i4 = lengthof $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r8 = interfaceinvoke $r4.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r5, $r7);

        r1 = (int[]) $r8;

        i5 = 0;

        i2 = lengthof r1;

        r3 = newarray (int)[i2];

     label1:
        if i5 >= i2 goto label2;

        i3 = i5;

        r3[i3] = i1;

        i5 = i5 + 1;

        goto label1;

     label2:
        r2 = r3;

        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: void update(int[],int[])>(r1, r2);

        r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: java.lang.Object lastKnownFirstItemKey> = null;

        return;
    }

    public final void updateScrollPositionIfTheFirstItemWasMoved(androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider)
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition r0;
        androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider r1;
        androidx.compose.runtime.snapshots.Snapshot$Companion r2;
        androidx.compose.runtime.snapshots.Snapshot r3, r4, r19;
        int i0, $i1, $i2;
        java.lang.Object $r5, $r13;
        int[] $r6, $r8, $r11, $r14, $r15;
        java.lang.Integer $r7, $r10, $r12;
        boolean $z3;
        kotlin.jvm.functions.Function2 $r9;
        java.lang.Throwable $r17, $r18, r21, r23;
        kotlin.Unit r20, r22;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition;

        r1 := @parameter0: androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "itemProvider");

        r2 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r3 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot createNonObservableSnapshot()>();

     label01:
        r19 = r3;

        r4 = virtualinvoke r19.<androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot makeCurrent()>();

     label02:
        $r5 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: java.lang.Object lastKnownFirstItemKey>;

        $r6 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getIndices()>();

        $r7 = staticinvoke <kotlin.collections.ArraysKt: java.lang.Integer getOrNull(int[],int)>($r6, 0);

        if $r7 == null goto label03;

        $i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        goto label04;

     label03:
        $i2 = 0;

     label04:
        i0 = staticinvoke <androidx.compose.foundation.lazy.layout.LazyLayoutItemProviderKt: int findIndexByKey(androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider,java.lang.Object,int)>(r1, $r5, $i2);

        $r8 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getIndices()>();

        $z3 = staticinvoke <kotlin.collections.ArraysKt: boolean contains(int[],int)>($r8, i0);

        if $z3 != 0 goto label05;

        $r9 = r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: kotlin.jvm.functions.Function2 fillIndices>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getIndices()>();

        $i1 = lengthof $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r13 = interfaceinvoke $r9.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r10, $r12);

        $r14 = (int[]) $r13;

        $r15 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getOffsets()>();

        specialinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: void update(int[],int[])>($r14, $r15);

     label05:
        r20 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label06:
        virtualinvoke r19.<androidx.compose.runtime.snapshots.Snapshot: void restoreCurrent(androidx.compose.runtime.snapshots.Snapshot)>(r4);

        goto label09;

     label07:
        $r17 := @caughtexception;

        r21 = $r17;

     label08:
        virtualinvoke r19.<androidx.compose.runtime.snapshots.Snapshot: void restoreCurrent(androidx.compose.runtime.snapshots.Snapshot)>(r4);

        throw r21;

     label09:
        r22 = r20;

     label10:
        virtualinvoke r3.<androidx.compose.runtime.snapshots.Snapshot: void dispose()>();

        goto label13;

     label11:
        $r18 := @caughtexception;

        r23 = $r18;

     label12:
        virtualinvoke r3.<androidx.compose.runtime.snapshots.Snapshot: void dispose()>();

        throw r23;

     label13:
        return;

        catch java.lang.Throwable from label02 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private final void update(int[], int[])
    {
        androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition r0;
        int[] r1, r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        $r3 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getIndices()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r1, $r3);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: void setIndices(int[])>(r1);

     label1:
        $r4 = virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: int[] getOffsets()>();

        $z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r2, $r4);

        if $z1 != 0 goto label2;

        virtualinvoke r0.<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScrollPosition: void setOffsets(int[])>(r2);

     label2:
        return;
    }

