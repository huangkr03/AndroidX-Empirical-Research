android.databinding.tool.expr.MathExpr
<android.databinding.tool.expr.MathExpr: java.lang.String mOp>
    void <init>(android.databinding.tool.expr.Expr, java.lang.String, android.databinding.tool.expr.Expr)
    {
        android.databinding.tool.expr.MathExpr r0;
        android.databinding.tool.expr.Expr r1, r3;
        java.lang.String r2;
        android.databinding.tool.expr.Expr[] $r4;

        r0 := @this: android.databinding.tool.expr.MathExpr;

        r1 := @parameter0: android.databinding.tool.expr.Expr;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.databinding.tool.expr.Expr;

        $r4 = newarray (android.databinding.tool.expr.Expr)[2];

        $r4[0] = r1;

        $r4[1] = r3;

        specialinvoke r0.<android.databinding.tool.expr.Expr: void <init>(android.databinding.tool.expr.Expr[])>($r4);

        r0.<android.databinding.tool.expr.MathExpr: java.lang.String mOp> = r2;

        return;
    }

    protected java.lang.String computeUniqueKey()
    {
        android.databinding.tool.expr.MathExpr r0;
        java.lang.Object[] $r1;
        android.databinding.tool.expr.Expr $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: android.databinding.tool.expr.MathExpr;

        $r1 = newarray (java.lang.Object)[3];

        $r2 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getLeft()>();

        $r1[0] = $r2;

        $r3 = r0.<android.databinding.tool.expr.MathExpr: java.lang.String mOp>;

        $r1[1] = $r3;

        $r4 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getRight()>();

        $r1[2] = $r4;

        $r5 = staticinvoke <android.databinding.tool.expr.MathExpr: java.lang.String join(java.lang.Object[])>($r1);

        return $r5;
    }

    protected android.databinding.tool.reflection.ModelClass resolveType(android.databinding.tool.reflection.ModelAnalyzer)
    {
        android.databinding.tool.expr.MathExpr r0;
        android.databinding.tool.reflection.ModelAnalyzer r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2;
        android.databinding.tool.expr.Expr $r4, $r6, $r9, $r12;
        android.databinding.tool.reflection.ModelClass $r5, $r7, $r8, $r10, $r11, $r13;

        r0 := @this: android.databinding.tool.expr.MathExpr;

        r1 := @parameter0: android.databinding.tool.reflection.ModelAnalyzer;

        $r3 = "+";

        $r2 = r0.<android.databinding.tool.expr.MathExpr: java.lang.String mOp>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getLeft()>();

        $r10 = virtualinvoke $r9.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $z1 = virtualinvoke $r10.<android.databinding.tool.reflection.ModelClass: boolean isString()>();

        if $z1 != 0 goto label1;

        $r12 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getRight()>();

        $r13 = virtualinvoke $r12.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $z2 = virtualinvoke $r13.<android.databinding.tool.reflection.ModelClass: boolean isString()>();

        if $z2 == 0 goto label2;

     label1:
        $r11 = virtualinvoke r1.<android.databinding.tool.reflection.ModelAnalyzer: android.databinding.tool.reflection.ModelClass findClass(java.lang.Class)>(class "Ljava/lang/String;");

        return $r11;

     label2:
        $r4 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getLeft()>();

        $r5 = virtualinvoke $r4.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $r6 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getRight()>();

        $r7 = virtualinvoke $r6.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $r8 = virtualinvoke r1.<android.databinding.tool.reflection.ModelAnalyzer: android.databinding.tool.reflection.ModelClass findCommonParentOf(android.databinding.tool.reflection.ModelClass,android.databinding.tool.reflection.ModelClass)>($r5, $r7);

        return $r8;
    }

    protected java.util.List constructDependencies()
    {
        android.databinding.tool.expr.MathExpr r0;
        java.util.List $r1;

        r0 := @this: android.databinding.tool.expr.MathExpr;

        $r1 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: java.util.List constructDynamicChildrenDependencies()>();

        return $r1;
    }

    public android.databinding.tool.expr.Expr getLeft()
    {
        android.databinding.tool.expr.MathExpr r0;
        java.util.List $r1;
        java.lang.Object $r2;
        android.databinding.tool.expr.Expr $r3;

        r0 := @this: android.databinding.tool.expr.MathExpr;

        $r1 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: java.util.List getChildren()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (android.databinding.tool.expr.Expr) $r2;

        return $r3;
    }

    public android.databinding.tool.expr.Expr getRight()
    {
        android.databinding.tool.expr.MathExpr r0;
        java.util.List $r1;
        java.lang.Object $r2;
        android.databinding.tool.expr.Expr $r3;

        r0 := @this: android.databinding.tool.expr.MathExpr;

        $r1 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: java.util.List getChildren()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(1);

        $r3 = (android.databinding.tool.expr.Expr) $r2;

        return $r3;
    }

    protected android.databinding.tool.writer.KCode generateCode()
    {
        android.databinding.tool.expr.MathExpr r0;
        android.databinding.tool.writer.KCode $r1, $r3, $r4, $r5, $r7, $r9, $r10, $r11;
        android.databinding.tool.expr.Expr $r2, $r8;
        java.lang.String $r6;

        r0 := @this: android.databinding.tool.expr.MathExpr;

        $r1 = new android.databinding.tool.writer.KCode;

        specialinvoke $r1.<android.databinding.tool.writer.KCode: void <init>()>();

        $r2 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getLeft()>();

        $r3 = virtualinvoke $r2.<android.databinding.tool.expr.Expr: android.databinding.tool.writer.KCode toCode()>();

        $r4 = virtualinvoke $r1.<android.databinding.tool.writer.KCode: android.databinding.tool.writer.KCode app(java.lang.String,android.databinding.tool.writer.KCode)>("(", $r3);

        $r5 = virtualinvoke $r4.<android.databinding.tool.writer.KCode: android.databinding.tool.writer.KCode app(java.lang.String)>(") ");

        $r6 = r0.<android.databinding.tool.expr.MathExpr: java.lang.String mOp>;

        $r7 = virtualinvoke $r5.<android.databinding.tool.writer.KCode: android.databinding.tool.writer.KCode app(java.lang.String)>($r6);

        $r8 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getRight()>();

        $r9 = virtualinvoke $r8.<android.databinding.tool.expr.Expr: android.databinding.tool.writer.KCode toCode()>();

        $r10 = virtualinvoke $r7.<android.databinding.tool.writer.KCode: android.databinding.tool.writer.KCode app(java.lang.String,android.databinding.tool.writer.KCode)>(" (", $r9);

        $r11 = virtualinvoke $r10.<android.databinding.tool.writer.KCode: android.databinding.tool.writer.KCode app(java.lang.String)>(")");

        return $r11;
    }

    public java.lang.String getInvertibleError()
    {
        android.databinding.tool.expr.MathExpr r0;
        android.databinding.tool.expr.Expr r1, r2, r3, r4, $r19, $r20;
        java.lang.String $r5, $r7, $r9, $r10, $r15, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.databinding.tool.reflection.ModelClass $r6, $r11, $r12;
        android.databinding.tool.expr.SymbolExpr $r8;
        java.lang.StringBuilder $r13, $r14, $r16, $r17;

        r0 := @this: android.databinding.tool.expr.MathExpr;

        $r5 = r0.<android.databinding.tool.expr.MathExpr: java.lang.String mOp>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("%");

        if $z0 == 0 goto label1;

        return "The modulus operator (%) is not supported in two-way binding.";

     label1:
        r1 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getLeft()>();

        r2 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getRight()>();

        $z1 = virtualinvoke r1.<android.databinding.tool.expr.Expr: boolean isDynamic()>();

        $z2 = virtualinvoke r2.<android.databinding.tool.expr.Expr: boolean isDynamic()>();

        if $z1 != $z2 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Two way binding with operator ");

        $r15 = r0.<android.databinding.tool.expr.MathExpr: java.lang.String mOp>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" supports only a single dynamic expressions.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;

     label2:
        $z3 = virtualinvoke r1.<android.databinding.tool.expr.Expr: boolean isDynamic()>();

        if $z3 == 0 goto label3;

        $r19 = r1;

        goto label4;

     label3:
        $r19 = r2;

     label4:
        r3 = $r19;

        $r6 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $z4 = virtualinvoke $r6.<android.databinding.tool.reflection.ModelClass: boolean isString()>();

        if $z4 == 0 goto label9;

        $z5 = virtualinvoke r1.<android.databinding.tool.expr.Expr: boolean isDynamic()>();

        if $z5 == 0 goto label5;

        $r20 = r2;

        goto label6;

     label5:
        $r20 = r1;

     label6:
        r4 = $r20;

        $z6 = r4 instanceof android.databinding.tool.expr.SymbolExpr;

        if $z6 == 0 goto label7;

        $r9 = "\"\"";

        $r8 = (android.databinding.tool.expr.SymbolExpr) r4;

        $r10 = virtualinvoke $r8.<android.databinding.tool.expr.SymbolExpr: java.lang.String getText()>();

        $z7 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z7 != 0 goto label8;

     label7:
        return "Two-way binding with string concatenation operator (+) only supports the empty string constant (`` or \"\")";

     label8:
        $r11 = virtualinvoke r3.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $r12 = virtualinvoke $r11.<android.databinding.tool.reflection.ModelClass: android.databinding.tool.reflection.ModelClass unbox()>();

        $z8 = virtualinvoke $r12.<android.databinding.tool.reflection.ModelClass: boolean isPrimitive()>();

        if $z8 != 0 goto label9;

        return "Two-way binding with string concatenation operator (+) only supports primitives";

     label9:
        $r7 = virtualinvoke r3.<android.databinding.tool.expr.Expr: java.lang.String getInvertibleError()>();

        return $r7;
    }

    public void injectSafeUnboxing(android.databinding.tool.reflection.ModelAnalyzer, android.databinding.tool.expr.ExprModel)
    {
        android.databinding.tool.expr.MathExpr r0;
        android.databinding.tool.reflection.ModelAnalyzer r1;
        android.databinding.tool.expr.ExprModel r2;
        android.databinding.tool.expr.Expr r3, r4;
        android.databinding.tool.reflection.ModelClass $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.databinding.tool.expr.MathExpr;

        r1 := @parameter0: android.databinding.tool.reflection.ModelAnalyzer;

        r2 := @parameter1: android.databinding.tool.expr.ExprModel;

        r3 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getLeft()>();

        r4 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getRight()>();

        $r5 = virtualinvoke r3.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $z0 = virtualinvoke $r5.<android.databinding.tool.reflection.ModelClass: boolean isString()>();

        if $z0 != 0 goto label1;

        $r6 = virtualinvoke r4.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $z1 = virtualinvoke $r6.<android.databinding.tool.reflection.ModelClass: boolean isString()>();

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $r7 = virtualinvoke r3.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $z2 = virtualinvoke $r7.<android.databinding.tool.reflection.ModelClass: boolean isNullable()>();

        if $z2 == 0 goto label3;

        virtualinvoke r0.<android.databinding.tool.expr.MathExpr: void safeUnboxChild(android.databinding.tool.expr.ExprModel,android.databinding.tool.expr.Expr)>(r2, r3);

     label3:
        $r8 = virtualinvoke r4.<android.databinding.tool.expr.Expr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $z3 = virtualinvoke $r8.<android.databinding.tool.reflection.ModelClass: boolean isNullable()>();

        if $z3 == 0 goto label4;

        virtualinvoke r0.<android.databinding.tool.expr.MathExpr: void safeUnboxChild(android.databinding.tool.expr.ExprModel,android.databinding.tool.expr.Expr)>(r2, r4);

     label4:
        return;
    }

    public android.databinding.tool.expr.Expr generateInverse(android.databinding.tool.expr.ExprModel, android.databinding.tool.expr.Expr, java.lang.String)
    {
        android.databinding.tool.expr.MathExpr r0;
        android.databinding.tool.expr.ExprModel r1;
        android.databinding.tool.expr.Expr r2, r4, r5, r6, r7, $r18, $r19, r20, $r21;
        java.lang.String r3, $r9, $r10, $r15, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object[] $r8;
        char $c0;
        android.databinding.tool.reflection.ModelClass $r11;
        java.lang.IllegalStateException $r12;
        java.lang.StringBuilder $r13, $r14, $r16;

        r0 := @this: android.databinding.tool.expr.MathExpr;

        r1 := @parameter0: android.databinding.tool.expr.ExprModel;

        r2 := @parameter1: android.databinding.tool.expr.Expr;

        r3 := @parameter2: java.lang.String;

        r4 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getLeft()>();

        r5 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getRight()>();

        $z0 = virtualinvoke r4.<android.databinding.tool.expr.Expr: boolean isDynamic()>();

        $z1 = virtualinvoke r5.<android.databinding.tool.expr.Expr: boolean isDynamic()>();

        $z2 = $z0 ^ $z1;

        $r8 = newarray (java.lang.Object)[3];

        $r8[0] = r4;

        $r9 = r0.<android.databinding.tool.expr.MathExpr: java.lang.String mOp>;

        $r8[1] = $r9;

        $r8[2] = r5;

        staticinvoke <android.databinding.tool.util.Preconditions: void check(boolean,java.lang.String,java.lang.Object[])>($z2, "Two-way binding of a math operations requires A single dynamic expression. Neither or both sides are dynamic: (%s) %s (%s)", $r8);

        $z3 = virtualinvoke r4.<android.databinding.tool.expr.Expr: boolean isDynamic()>();

        if $z3 == 0 goto label01;

        $r18 = r5;

        goto label02;

     label01:
        $r18 = r4;

     label02:
        r6 = virtualinvoke $r18.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr cloneToModel(android.databinding.tool.expr.ExprModel)>(r1);

        $z4 = virtualinvoke r4.<android.databinding.tool.expr.Expr: boolean isDynamic()>();

        if $z4 == 0 goto label03;

        $r19 = r4;

        goto label04;

     label03:
        $r19 = r5;

     label04:
        r7 = $r19;

        $r10 = r0.<android.databinding.tool.expr.MathExpr: java.lang.String mOp>;

        $c0 = virtualinvoke $r10.<java.lang.String: char charAt(int)>(0);

        tableswitch($c0)
        {
            case 42: goto label07;
            case 43: goto label05;
            case 44: goto label12;
            case 45: goto label08;
            case 46: goto label12;
            case 47: goto label10;
            default: goto label12;
        };

     label05:
        $r11 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.reflection.ModelClass getResolvedType()>();

        $z7 = virtualinvoke $r11.<android.databinding.tool.reflection.ModelClass: boolean isString()>();

        if $z7 == 0 goto label06;

        r20 = specialinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr parseInverse(android.databinding.tool.expr.ExprModel,android.databinding.tool.expr.Expr,android.databinding.tool.expr.Expr)>(r1, r2, r7);

        goto label13;

     label06:
        r20 = virtualinvoke r1.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.MathExpr math(android.databinding.tool.expr.Expr,java.lang.String,android.databinding.tool.expr.Expr)>(r2, "-", r6);

        goto label13;

     label07:
        r20 = virtualinvoke r1.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.MathExpr math(android.databinding.tool.expr.Expr,java.lang.String,android.databinding.tool.expr.Expr)>(r2, "/", r6);

        goto label13;

     label08:
        $z6 = virtualinvoke r4.<android.databinding.tool.expr.Expr: boolean isDynamic()>();

        if $z6 != 0 goto label09;

        r20 = virtualinvoke r1.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.MathExpr math(android.databinding.tool.expr.Expr,java.lang.String,android.databinding.tool.expr.Expr)>(r6, "-", r2);

        goto label13;

     label09:
        r20 = virtualinvoke r1.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.MathExpr math(android.databinding.tool.expr.Expr,java.lang.String,android.databinding.tool.expr.Expr)>(r2, "+", r6);

        goto label13;

     label10:
        $z5 = virtualinvoke r4.<android.databinding.tool.expr.Expr: boolean isDynamic()>();

        if $z5 != 0 goto label11;

        r20 = virtualinvoke r1.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.MathExpr math(android.databinding.tool.expr.Expr,java.lang.String,android.databinding.tool.expr.Expr)>(r6, "/", r2);

        goto label13;

     label11:
        r20 = virtualinvoke r1.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.MathExpr math(android.databinding.tool.expr.Expr,java.lang.String,android.databinding.tool.expr.Expr)>(r2, "*", r6);

        goto label13;

     label12:
        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid math operation is not invertible: ");

        $r15 = r0.<android.databinding.tool.expr.MathExpr: java.lang.String mOp>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label13:
        $r21 = virtualinvoke r7.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr generateInverse(android.databinding.tool.expr.ExprModel,android.databinding.tool.expr.Expr,java.lang.String)>(r1, r20, r3);

        return $r21;
    }

    private android.databinding.tool.expr.Expr parseInverse(android.databinding.tool.expr.ExprModel, android.databinding.tool.expr.Expr, android.databinding.tool.expr.Expr)
    {
        android.databinding.tool.expr.MathExpr r0;
        android.databinding.tool.expr.ExprModel r1;
        android.databinding.tool.expr.Expr r2, r3;
        android.databinding.tool.expr.MethodCallExpr r4;
        android.databinding.tool.expr.IdentifierExpr $r5;
        android.databinding.tool.expr.Expr[] $r6;
        java.util.ArrayList $r7;

        r0 := @this: android.databinding.tool.expr.MathExpr;

        r1 := @parameter0: android.databinding.tool.expr.ExprModel;

        r2 := @parameter1: android.databinding.tool.expr.Expr;

        r3 := @parameter2: android.databinding.tool.expr.Expr;

        $r5 = virtualinvoke r1.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.IdentifierExpr viewDataBinding()>();

        $r6 = newarray (android.databinding.tool.expr.Expr)[2];

        $r6[0] = r2;

        $r6[1] = r3;

        $r7 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r6);

        r4 = virtualinvoke r1.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.MethodCallExpr methodCall(android.databinding.tool.expr.Expr,java.lang.String,java.util.List)>($r5, "parse", $r7);

        virtualinvoke r4.<android.databinding.tool.expr.MethodCallExpr: void setAllowProtected()>();

        return r4;
    }

    public android.databinding.tool.expr.Expr cloneToModel(android.databinding.tool.expr.ExprModel)
    {
        android.databinding.tool.expr.MathExpr r0, $r7;
        android.databinding.tool.expr.ExprModel r1;
        android.databinding.tool.expr.Expr $r2, $r3, $r5, $r6;
        java.lang.String $r4;

        r0 := @this: android.databinding.tool.expr.MathExpr;

        r1 := @parameter0: android.databinding.tool.expr.ExprModel;

        $r2 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getLeft()>();

        $r3 = virtualinvoke $r2.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr cloneToModel(android.databinding.tool.expr.ExprModel)>(r1);

        $r4 = r0.<android.databinding.tool.expr.MathExpr: java.lang.String mOp>;

        $r5 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getRight()>();

        $r6 = virtualinvoke $r5.<android.databinding.tool.expr.Expr: android.databinding.tool.expr.Expr cloneToModel(android.databinding.tool.expr.ExprModel)>(r1);

        $r7 = virtualinvoke r1.<android.databinding.tool.expr.ExprModel: android.databinding.tool.expr.MathExpr math(android.databinding.tool.expr.Expr,java.lang.String,android.databinding.tool.expr.Expr)>($r3, $r4, $r6);

        return $r7;
    }

    public java.lang.String toString()
    {
        android.databinding.tool.expr.MathExpr r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11;
        android.databinding.tool.expr.Expr $r3, $r9;
        java.lang.String $r6, $r12;

        r0 := @this: android.databinding.tool.expr.MathExpr;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r3 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getLeft()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r6 = r0.<android.databinding.tool.expr.MathExpr: java.lang.String mOp>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r9 = virtualinvoke r0.<android.databinding.tool.expr.MathExpr: android.databinding.tool.expr.Expr getRight()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

