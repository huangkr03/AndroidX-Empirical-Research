androidx.camera.viewfinder.ViewfinderSurfaceRequestUtil
    public static final androidx.camera.viewfinder.ViewfinderSurfaceRequest$Builder populateFromCharacteristics(androidx.camera.viewfinder.ViewfinderSurfaceRequest$Builder, android.hardware.camera2.CameraCharacteristics)
    {
        androidx.camera.viewfinder.ViewfinderSurfaceRequest$Builder $r0;
        android.hardware.camera2.CameraCharacteristics r1;
        byte b0;
        android.hardware.camera2.CameraCharacteristics$Key $r2, $r6, $r10;
        java.lang.Object $r3, $r7, $r11;
        java.lang.Number $r4, $r8;
        int $i1, $i2, $i3;
        java.lang.Integer $r12;
        androidx.camera.viewfinder.CameraViewfinder$ImplementationMode $r13;

        $r0 := @parameter0: androidx.camera.viewfinder.ViewfinderSurfaceRequest$Builder;

        r1 := @parameter1: android.hardware.camera2.CameraCharacteristics;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "cameraCharacteristics");

        $r2 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_FACING>;

        $r3 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r3);

        $r4 = (java.lang.Number) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        virtualinvoke $r0.<androidx.camera.viewfinder.ViewfinderSurfaceRequest$Builder: androidx.camera.viewfinder.ViewfinderSurfaceRequest$Builder setLensFacing(int)>($i1);

        $r6 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_ORIENTATION>;

        $r7 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r6);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r7);

        $r8 = (java.lang.Number) $r7;

        $i2 = virtualinvoke $r8.<java.lang.Number: int intValue()>();

        virtualinvoke $r0.<androidx.camera.viewfinder.ViewfinderSurfaceRequest$Builder: androidx.camera.viewfinder.ViewfinderSurfaceRequest$Builder setSensorOrientation(int)>($i2);

        $r10 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key INFO_SUPPORTED_HARDWARE_LEVEL>;

        $r11 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r10);

        $r12 = (java.lang.Integer) $r11;

        b0 = 2;

        if $r12 != null goto label1;

        goto label2;

     label1:
        $i3 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        if $i3 != b0 goto label2;

        $r13 = <androidx.camera.viewfinder.CameraViewfinder$ImplementationMode: androidx.camera.viewfinder.CameraViewfinder$ImplementationMode COMPATIBLE>;

        virtualinvoke $r0.<androidx.camera.viewfinder.ViewfinderSurfaceRequest$Builder: androidx.camera.viewfinder.ViewfinderSurfaceRequest$Builder setImplementationMode(androidx.camera.viewfinder.CameraViewfinder$ImplementationMode)>($r13);

     label2:
        return $r0;
    }

