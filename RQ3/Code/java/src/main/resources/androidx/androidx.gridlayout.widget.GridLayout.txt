androidx.gridlayout.widget.GridLayout
<androidx.gridlayout.widget.GridLayout: int HORIZONTAL>
<androidx.gridlayout.widget.GridLayout: int VERTICAL>
<androidx.gridlayout.widget.GridLayout: int UNDEFINED>
<androidx.gridlayout.widget.GridLayout: int ALIGN_BOUNDS>
<androidx.gridlayout.widget.GridLayout: int ALIGN_MARGINS>
<androidx.gridlayout.widget.GridLayout: int MAX_SIZE>
<androidx.gridlayout.widget.GridLayout: int DEFAULT_CONTAINER_MARGIN>
<androidx.gridlayout.widget.GridLayout: int UNINITIALIZED_HASH>
<androidx.gridlayout.widget.GridLayout: android.util.Printer LOG_PRINTER>
<androidx.gridlayout.widget.GridLayout: android.util.Printer NO_PRINTER>
<androidx.gridlayout.widget.GridLayout: int DEFAULT_ORIENTATION>
<androidx.gridlayout.widget.GridLayout: int DEFAULT_COUNT>
<androidx.gridlayout.widget.GridLayout: boolean DEFAULT_USE_DEFAULT_MARGINS>
<androidx.gridlayout.widget.GridLayout: boolean DEFAULT_ORDER_PRESERVED>
<androidx.gridlayout.widget.GridLayout: int DEFAULT_ALIGNMENT_MODE>
<androidx.gridlayout.widget.GridLayout: int ORIENTATION>
<androidx.gridlayout.widget.GridLayout: int ROW_COUNT>
<androidx.gridlayout.widget.GridLayout: int COLUMN_COUNT>
<androidx.gridlayout.widget.GridLayout: int USE_DEFAULT_MARGINS>
<androidx.gridlayout.widget.GridLayout: int ALIGNMENT_MODE>
<androidx.gridlayout.widget.GridLayout: int ROW_ORDER_PRESERVED>
<androidx.gridlayout.widget.GridLayout: int COLUMN_ORDER_PRESERVED>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>
<androidx.gridlayout.widget.GridLayout: int mOrientation>
<androidx.gridlayout.widget.GridLayout: boolean mUseDefaultMargins>
<androidx.gridlayout.widget.GridLayout: int mAlignmentMode>
<androidx.gridlayout.widget.GridLayout: int mDefaultGap>
<androidx.gridlayout.widget.GridLayout: int mLastLayoutParamsHashCode>
<androidx.gridlayout.widget.GridLayout: android.util.Printer mPrinter>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment UNDEFINED_ALIGNMENT>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment LEADING>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment TRAILING>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment TOP>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment BOTTOM>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment START>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment END>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment LEFT>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment RIGHT>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment CENTER>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment BASELINE>
<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment FILL>
<androidx.gridlayout.widget.GridLayout: int INFLEXIBLE>
<androidx.gridlayout.widget.GridLayout: int CAN_STRETCH>
    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.content.res.TypedArray r3;
        java.lang.Throwable r4, $r10;
        androidx.gridlayout.widget.GridLayout$Axis $r5, $r6;
        android.util.Printer $r7;
        android.content.res.Resources $r8;
        int[] $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r5 = new androidx.gridlayout.widget.GridLayout$Axis;

        specialinvoke $r5.<androidx.gridlayout.widget.GridLayout$Axis: void <init>(androidx.gridlayout.widget.GridLayout,boolean)>(r0, 1);

        r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis> = $r5;

        $r6 = new androidx.gridlayout.widget.GridLayout$Axis;

        specialinvoke $r6.<androidx.gridlayout.widget.GridLayout$Axis: void <init>(androidx.gridlayout.widget.GridLayout,boolean)>(r0, 0);

        r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis> = $r6;

        r0.<androidx.gridlayout.widget.GridLayout: int mOrientation> = 0;

        r0.<androidx.gridlayout.widget.GridLayout: boolean mUseDefaultMargins> = 0;

        r0.<androidx.gridlayout.widget.GridLayout: int mAlignmentMode> = 1;

        r0.<androidx.gridlayout.widget.GridLayout: int mLastLayoutParamsHashCode> = 0;

        $r7 = <androidx.gridlayout.widget.GridLayout: android.util.Printer LOG_PRINTER>;

        r0.<androidx.gridlayout.widget.GridLayout: android.util.Printer mPrinter> = $r7;

        $r8 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <androidx.gridlayout.R$dimen: int default_gap>;

        $i2 = virtualinvoke $r8.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i1);

        r0.<androidx.gridlayout.widget.GridLayout: int mDefaultGap> = $i2;

        $r9 = <androidx.gridlayout.R$styleable: int[] GridLayout>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r9);

     label1:
        $i3 = <androidx.gridlayout.widget.GridLayout: int ROW_COUNT>;

        $i4 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i3, -2147483648);

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void setRowCount(int)>($i4);

        $i5 = <androidx.gridlayout.widget.GridLayout: int COLUMN_COUNT>;

        $i6 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i5, -2147483648);

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void setColumnCount(int)>($i6);

        $i7 = <androidx.gridlayout.widget.GridLayout: int ORIENTATION>;

        $i8 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i7, 0);

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void setOrientation(int)>($i8);

        $i9 = <androidx.gridlayout.widget.GridLayout: int USE_DEFAULT_MARGINS>;

        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i9, 0);

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void setUseDefaultMargins(boolean)>($z0);

        $i10 = <androidx.gridlayout.widget.GridLayout: int ALIGNMENT_MODE>;

        $i11 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>($i10, 1);

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void setAlignmentMode(int)>($i11);

        $i12 = <androidx.gridlayout.widget.GridLayout: int ROW_ORDER_PRESERVED>;

        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i12, 1);

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void setRowOrderPreserved(boolean)>($z1);

        $i13 = <androidx.gridlayout.widget.GridLayout: int COLUMN_ORDER_PRESERVED>;

        $z2 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i13, 1);

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void setColumnOrderPreserved(boolean)>($z2);

     label2:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        goto label5;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

     label4:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.content.Context r1;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public int getOrientation()
    {
        androidx.gridlayout.widget.GridLayout r0;
        int $i0;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        $i0 = r0.<androidx.gridlayout.widget.GridLayout: int mOrientation>;

        return $i0;
    }

    public void setOrientation(int)
    {
        androidx.gridlayout.widget.GridLayout r0;
        int i0, $i1;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.gridlayout.widget.GridLayout: int mOrientation>;

        if $i1 == i0 goto label1;

        r0.<androidx.gridlayout.widget.GridLayout: int mOrientation> = i0;

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void invalidateStructure()>();

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void requestLayout()>();

     label1:
        return;
    }

    public int getRowCount()
    {
        androidx.gridlayout.widget.GridLayout r0;
        androidx.gridlayout.widget.GridLayout$Axis $r1;
        int $i0;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        $r1 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

        $i0 = virtualinvoke $r1.<androidx.gridlayout.widget.GridLayout$Axis: int getCount()>();

        return $i0;
    }

    public void setRowCount(int)
    {
        androidx.gridlayout.widget.GridLayout r0;
        int i0;
        androidx.gridlayout.widget.GridLayout$Axis $r1;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

        virtualinvoke $r1.<androidx.gridlayout.widget.GridLayout$Axis: void setCount(int)>(i0);

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void invalidateStructure()>();

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void requestLayout()>();

        return;
    }

    public int getColumnCount()
    {
        androidx.gridlayout.widget.GridLayout r0;
        androidx.gridlayout.widget.GridLayout$Axis $r1;
        int $i0;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        $r1 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        $i0 = virtualinvoke $r1.<androidx.gridlayout.widget.GridLayout$Axis: int getCount()>();

        return $i0;
    }

    public void setColumnCount(int)
    {
        androidx.gridlayout.widget.GridLayout r0;
        int i0;
        androidx.gridlayout.widget.GridLayout$Axis $r1;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        virtualinvoke $r1.<androidx.gridlayout.widget.GridLayout$Axis: void setCount(int)>(i0);

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void invalidateStructure()>();

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void requestLayout()>();

        return;
    }

    public boolean getUseDefaultMargins()
    {
        androidx.gridlayout.widget.GridLayout r0;
        boolean $z0;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        $z0 = r0.<androidx.gridlayout.widget.GridLayout: boolean mUseDefaultMargins>;

        return $z0;
    }

    public void setUseDefaultMargins(boolean)
    {
        androidx.gridlayout.widget.GridLayout r0;
        boolean z0;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        z0 := @parameter0: boolean;

        r0.<androidx.gridlayout.widget.GridLayout: boolean mUseDefaultMargins> = z0;

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void requestLayout()>();

        return;
    }

    public int getAlignmentMode()
    {
        androidx.gridlayout.widget.GridLayout r0;
        int $i0;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        $i0 = r0.<androidx.gridlayout.widget.GridLayout: int mAlignmentMode>;

        return $i0;
    }

    public void setAlignmentMode(int)
    {
        androidx.gridlayout.widget.GridLayout r0;
        int i0;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        i0 := @parameter0: int;

        r0.<androidx.gridlayout.widget.GridLayout: int mAlignmentMode> = i0;

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void requestLayout()>();

        return;
    }

    public boolean isRowOrderPreserved()
    {
        androidx.gridlayout.widget.GridLayout r0;
        androidx.gridlayout.widget.GridLayout$Axis $r1;
        boolean $z0;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        $r1 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

        $z0 = virtualinvoke $r1.<androidx.gridlayout.widget.GridLayout$Axis: boolean isOrderPreserved()>();

        return $z0;
    }

    public void setRowOrderPreserved(boolean)
    {
        androidx.gridlayout.widget.GridLayout r0;
        boolean z0;
        androidx.gridlayout.widget.GridLayout$Axis $r1;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

        virtualinvoke $r1.<androidx.gridlayout.widget.GridLayout$Axis: void setOrderPreserved(boolean)>(z0);

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void invalidateStructure()>();

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void requestLayout()>();

        return;
    }

    public boolean isColumnOrderPreserved()
    {
        androidx.gridlayout.widget.GridLayout r0;
        androidx.gridlayout.widget.GridLayout$Axis $r1;
        boolean $z0;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        $r1 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        $z0 = virtualinvoke $r1.<androidx.gridlayout.widget.GridLayout$Axis: boolean isOrderPreserved()>();

        return $z0;
    }

    public void setColumnOrderPreserved(boolean)
    {
        androidx.gridlayout.widget.GridLayout r0;
        boolean z0;
        androidx.gridlayout.widget.GridLayout$Axis $r1;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        virtualinvoke $r1.<androidx.gridlayout.widget.GridLayout$Axis: void setOrderPreserved(boolean)>(z0);

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void invalidateStructure()>();

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void requestLayout()>();

        return;
    }

    public android.util.Printer getPrinter()
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.util.Printer $r1;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        $r1 = r0.<androidx.gridlayout.widget.GridLayout: android.util.Printer mPrinter>;

        return $r1;
    }

    public void setPrinter(android.util.Printer)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.util.Printer r1, $r3;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.util.Printer;

        if r1 != null goto label1;

        $r3 = <androidx.gridlayout.widget.GridLayout: android.util.Printer NO_PRINTER>;

        goto label2;

     label1:
        $r3 = r1;

     label2:
        r0.<androidx.gridlayout.widget.GridLayout: android.util.Printer mPrinter> = $r3;

        return;
    }

    static int max2(int[], int)
    {
        int[] r0;
        int i0, i1, $i2, i3, i4;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i3 = i0;

        i4 = 0;

        i1 = lengthof r0;

     label1:
        if i4 >= i1 goto label2;

        $i2 = r0[i4];

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i2);

        i4 = i4 + 1;

        goto label1;

     label2:
        return i3;
    }

    static java.lang.Object[] append(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] r0, r1, r2, $r6;
        java.lang.Class $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r5;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        $i2 = $i1 + $i0;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r4, $i2);

        $r6 = (java.lang.Object[]) $r5;

        r2 = (java.lang.Object[]) $r6;

        $i3 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r2, 0, $i3);

        $i5 = lengthof r0;

        $i4 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, $i5, $i4);

        return r2;
    }

    static androidx.gridlayout.widget.GridLayout$Alignment getAlignment(int, boolean)
    {
        int i0, i3, $i4;
        boolean z0;
        byte b1, b2, $b5, $b6;
        androidx.gridlayout.widget.GridLayout$Alignment $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label01;

        $b5 = 7;

        goto label02;

     label01:
        $b5 = 112;

     label02:
        b1 = $b5;

        if z0 == 0 goto label03;

        $b6 = 0;

        goto label04;

     label03:
        $b6 = 4;

     label04:
        b2 = $b6;

        $i4 = i0 & b1;

        i3 = $i4 >> b2;

        lookupswitch(i3)
        {
            case 1: goto label12;
            case 3: goto label05;
            case 5: goto label08;
            case 7: goto label11;
            case 8388611: goto label13;
            case 8388613: goto label14;
            default: goto label15;
        };

     label05:
        if z0 == 0 goto label06;

        $r5 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment LEFT>;

        goto label07;

     label06:
        $r5 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment TOP>;

     label07:
        return $r5;

     label08:
        if z0 == 0 goto label09;

        $r6 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment RIGHT>;

        goto label10;

     label09:
        $r6 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment BOTTOM>;

     label10:
        return $r6;

     label11:
        $r2 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment FILL>;

        return $r2;

     label12:
        $r3 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment CENTER>;

        return $r3;

     label13:
        $r1 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment START>;

        return $r1;

     label14:
        $r0 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment END>;

        return $r0;

     label15:
        $r4 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment UNDEFINED_ALIGNMENT>;

        return $r4;
    }

    private int getDefaultMargin(android.view.View, boolean, boolean)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.view.View r1;
        boolean z0, z1;
        java.lang.Class $r2, $r3;
        int $i0, $i1;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == class "Landroidx/legacy/widget/Space;" goto label1;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 != class "Landroid/widget/Space;" goto label2;

     label1:
        return 0;

     label2:
        $i0 = r0.<androidx.gridlayout.widget.GridLayout: int mDefaultGap>;

        $i1 = $i0 / 2;

        return $i1;
    }

    private int getDefaultMargin(android.view.View, boolean, boolean, boolean)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.view.View r1;
        boolean z0, z1, z2;
        int $i0;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        $i0 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getDefaultMargin(android.view.View,boolean,boolean)>(r1, z1, z2);

        return $i0;
    }

    private int getDefaultMargin(android.view.View, androidx.gridlayout.widget.GridLayout$LayoutParams, boolean, boolean)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.view.View r1;
        androidx.gridlayout.widget.GridLayout$LayoutParams r2;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7;
        androidx.gridlayout.widget.GridLayout$Spec r3, $r6;
        androidx.gridlayout.widget.GridLayout$Axis r4, $r7;
        androidx.gridlayout.widget.GridLayout$Interval r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.gridlayout.widget.GridLayout$LayoutParams;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $z4 = r0.<androidx.gridlayout.widget.GridLayout: boolean mUseDefaultMargins>;

        if $z4 != 0 goto label01;

        return 0;

     label01:
        if z0 == 0 goto label02;

        $r6 = r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec columnSpec>;

        goto label03;

     label02:
        $r6 = r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec rowSpec>;

     label03:
        r3 = $r6;

        if z0 == 0 goto label04;

        $r7 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        goto label05;

     label04:
        $r7 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

     label05:
        r4 = $r7;

        r5 = r3.<androidx.gridlayout.widget.GridLayout$Spec: androidx.gridlayout.widget.GridLayout$Interval span>;

        if z0 == 0 goto label07;

        $z5 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: boolean isLayoutRtlCompat()>();

        if $z5 == 0 goto label07;

        if z1 != 0 goto label06;

        $z6 = 1;

        goto label08;

     label06:
        $z6 = 0;

        goto label08;

     label07:
        $z6 = z1;

     label08:
        z2 = $z6;

        if z2 == 0 goto label10;

        $i2 = r5.<androidx.gridlayout.widget.GridLayout$Interval: int min>;

        if $i2 != 0 goto label09;

        $z7 = 1;

        goto label12;

     label09:
        $z7 = 0;

        goto label12;

     label10:
        $i0 = r5.<androidx.gridlayout.widget.GridLayout$Interval: int max>;

        $i1 = virtualinvoke r4.<androidx.gridlayout.widget.GridLayout$Axis: int getCount()>();

        if $i0 != $i1 goto label11;

        $z7 = 1;

        goto label12;

     label11:
        $z7 = 0;

     label12:
        z3 = $z7;

        $i3 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getDefaultMargin(android.view.View,boolean,boolean,boolean)>(r1, z3, z0, z1);

        return $i3;
    }

    int getMargin1(android.view.View, boolean, boolean)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.view.View r1;
        boolean z0, z1;
        androidx.gridlayout.widget.GridLayout$LayoutParams r2;
        int i0, $i1, $i2;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$LayoutParams getLayoutParams(android.view.View)>(r1);

        if z0 == 0 goto label2;

        if z1 == 0 goto label1;

        $i1 = r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: int leftMargin>;

        goto label4;

     label1:
        $i1 = r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: int rightMargin>;

        goto label4;

     label2:
        if z1 == 0 goto label3;

        $i1 = r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: int topMargin>;

        goto label4;

     label3:
        $i1 = r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: int bottomMargin>;

     label4:
        i0 = $i1;

        if i0 != -2147483648 goto label5;

        $i2 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getDefaultMargin(android.view.View,androidx.gridlayout.widget.GridLayout$LayoutParams,boolean,boolean)>(r1, r2, z0, z1);

        goto label6;

     label5:
        $i2 = i0;

     label6:
        return $i2;
    }

    private boolean isLayoutRtlCompat()
    {
        androidx.gridlayout.widget.GridLayout r0;
        int $i0;
        boolean $z0;
        android.view.View r1;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 = (android.view.View) r0;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>(r1);

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private int getMargin(android.view.View, boolean, boolean)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.view.View r1;
        boolean z0, z1;
        androidx.gridlayout.widget.GridLayout$Axis r2, $r8;
        int[] r3, $r9;
        androidx.gridlayout.widget.GridLayout$LayoutParams r4;
        androidx.gridlayout.widget.GridLayout$Spec r5, $r10;
        int i0, $i1, $i2, $i3, $i4;
        androidx.gridlayout.widget.GridLayout$Interval $r6, $r7;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $i1 = r0.<androidx.gridlayout.widget.GridLayout: int mAlignmentMode>;

        if $i1 != 1 goto label1;

        $i3 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getMargin1(android.view.View,boolean,boolean)>(r1, z0, z1);

        return $i3;

     label1:
        if z0 == 0 goto label2;

        $r8 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        goto label3;

     label2:
        $r8 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

     label3:
        r2 = $r8;

        if z1 == 0 goto label4;

        $r9 = virtualinvoke r2.<androidx.gridlayout.widget.GridLayout$Axis: int[] getLeadingMargins()>();

        goto label5;

     label4:
        $r9 = virtualinvoke r2.<androidx.gridlayout.widget.GridLayout$Axis: int[] getTrailingMargins()>();

     label5:
        r3 = $r9;

        r4 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$LayoutParams getLayoutParams(android.view.View)>(r1);

        if z0 == 0 goto label6;

        $r10 = r4.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec columnSpec>;

        goto label7;

     label6:
        $r10 = r4.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec rowSpec>;

     label7:
        r5 = $r10;

        if z1 == 0 goto label8;

        $r7 = r5.<androidx.gridlayout.widget.GridLayout$Spec: androidx.gridlayout.widget.GridLayout$Interval span>;

        $i4 = $r7.<androidx.gridlayout.widget.GridLayout$Interval: int min>;

        goto label9;

     label8:
        $r6 = r5.<androidx.gridlayout.widget.GridLayout$Spec: androidx.gridlayout.widget.GridLayout$Interval span>;

        $i4 = $r6.<androidx.gridlayout.widget.GridLayout$Interval: int max>;

     label9:
        i0 = $i4;

        $i2 = r3[i0];

        return $i2;
    }

    private int getTotalMargin(android.view.View, boolean)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.view.View r1;
        boolean z0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $i0 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getMargin(android.view.View,boolean,boolean)>(r1, z0, 1);

        $i1 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getMargin(android.view.View,boolean,boolean)>(r1, z0, 0);

        $i2 = $i0 + $i1;

        return $i2;
    }

    private static boolean fits(int[], int, int, int)
    {
        int[] r0;
        int i0, i1, i2, $i3, $i4, i5;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = lengthof r0;

        if i2 <= $i3 goto label1;

        return 0;

     label1:
        i5 = i1;

     label2:
        if i5 >= i2 goto label4;

        $i4 = r0[i5];

        if $i4 <= i0 goto label3;

        return 0;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        return 1;
    }

    private static void procrusteanFill(int[], int, int, int)
    {
        int[] r0;
        int i0, i1, i2, i3, $i4, $i5;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 = lengthof r0;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i3);

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i3);

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>(r0, $i4, $i5, i2);

        return;
    }

    private static void setCellGroup(androidx.gridlayout.widget.GridLayout$LayoutParams, int, int, int, int)
    {
        androidx.gridlayout.widget.GridLayout$LayoutParams r0;
        int i0, i1, i2, i3, $i4, $i5;
        androidx.gridlayout.widget.GridLayout$Interval $r1, $r2;

        r0 := @parameter0: androidx.gridlayout.widget.GridLayout$LayoutParams;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r1 = new androidx.gridlayout.widget.GridLayout$Interval;

        $i4 = i0 + i1;

        specialinvoke $r1.<androidx.gridlayout.widget.GridLayout$Interval: void <init>(int,int)>(i0, $i4);

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout$LayoutParams: void setRowSpecSpan(androidx.gridlayout.widget.GridLayout$Interval)>($r1);

        $r2 = new androidx.gridlayout.widget.GridLayout$Interval;

        $i5 = i2 + i3;

        specialinvoke $r2.<androidx.gridlayout.widget.GridLayout$Interval: void <init>(int,int)>(i2, $i5);

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout$LayoutParams: void setColumnSpecSpan(androidx.gridlayout.widget.GridLayout$Interval)>($r2);

        return;
    }

    private static int clip(androidx.gridlayout.widget.GridLayout$Interval, boolean, int)
    {
        androidx.gridlayout.widget.GridLayout$Interval r0;
        boolean z0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @parameter0: androidx.gridlayout.widget.GridLayout$Interval;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout$Interval: int size()>();

        if i0 != 0 goto label1;

        return i1;

     label1:
        if z0 == 0 goto label2;

        $i5 = r0.<androidx.gridlayout.widget.GridLayout$Interval: int min>;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, i0);

        goto label3;

     label2:
        $i6 = 0;

     label3:
        i2 = $i6;

        $i3 = i0 - i2;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i3);

        return $i4;
    }

    private void validateLayoutParams()
    {
        androidx.gridlayout.widget.GridLayout r0;
        boolean z0, z1, z2, $z3, $z4;
        androidx.gridlayout.widget.GridLayout$Axis r1, $r10;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, $i13;
        int[] r2;
        androidx.gridlayout.widget.GridLayout$LayoutParams r3;
        androidx.gridlayout.widget.GridLayout$Spec r4, r6, $r11, $r12;
        androidx.gridlayout.widget.GridLayout$Interval r5, r7;
        android.view.View $r8;
        android.view.ViewGroup$LayoutParams $r9;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        $i4 = r0.<androidx.gridlayout.widget.GridLayout: int mOrientation>;

        if $i4 != 0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        z0 = $z3;

        if z0 == 0 goto label03;

        $r10 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        goto label04;

     label03:
        $r10 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

     label04:
        r1 = $r10;

        $i5 = r1.<androidx.gridlayout.widget.GridLayout$Axis: int definedCount>;

        if $i5 == -2147483648 goto label05;

        $i9 = r1.<androidx.gridlayout.widget.GridLayout$Axis: int definedCount>;

        goto label06;

     label05:
        $i9 = 0;

     label06:
        i0 = $i9;

        i10 = 0;

        i11 = 0;

        r2 = newarray (int)[i0];

        i12 = 0;

        i1 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getChildCount()>();

     label07:
        if i12 >= i1 goto label21;

        $r8 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: android.view.View getChildAt(int)>(i12);

        $r9 = virtualinvoke $r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (androidx.gridlayout.widget.GridLayout$LayoutParams) $r9;

        if z0 == 0 goto label08;

        $r11 = r3.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec rowSpec>;

        goto label09;

     label08:
        $r11 = r3.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec columnSpec>;

     label09:
        r4 = $r11;

        r5 = r4.<androidx.gridlayout.widget.GridLayout$Spec: androidx.gridlayout.widget.GridLayout$Interval span>;

        z1 = r4.<androidx.gridlayout.widget.GridLayout$Spec: boolean startDefined>;

        i2 = virtualinvoke r5.<androidx.gridlayout.widget.GridLayout$Interval: int size()>();

        if z1 == 0 goto label10;

        i10 = r5.<androidx.gridlayout.widget.GridLayout$Interval: int min>;

     label10:
        if z0 == 0 goto label11;

        $r12 = r3.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec columnSpec>;

        goto label12;

     label11:
        $r12 = r3.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec rowSpec>;

     label12:
        r6 = $r12;

        r7 = r6.<androidx.gridlayout.widget.GridLayout$Spec: androidx.gridlayout.widget.GridLayout$Interval span>;

        z2 = r6.<androidx.gridlayout.widget.GridLayout$Spec: boolean startDefined>;

        i3 = staticinvoke <androidx.gridlayout.widget.GridLayout: int clip(androidx.gridlayout.widget.GridLayout$Interval,boolean,int)>(r7, z2, i0);

        if z2 == 0 goto label13;

        i11 = r7.<androidx.gridlayout.widget.GridLayout$Interval: int min>;

     label13:
        if i0 == 0 goto label18;

        if z1 == 0 goto label14;

        if z2 != 0 goto label17;

     label14:
        $i13 = i11 + i3;

        $z4 = staticinvoke <androidx.gridlayout.widget.GridLayout: boolean fits(int[],int,int,int)>(r2, i10, i11, $i13);

        if $z4 != 0 goto label17;

        if z2 == 0 goto label15;

        i10 = i10 + 1;

        goto label14;

     label15:
        $i8 = i11 + i3;

        if $i8 > i0 goto label16;

        i11 = i11 + 1;

        goto label14;

     label16:
        i11 = 0;

        i10 = i10 + 1;

        goto label14;

     label17:
        $i7 = i11 + i3;

        $i6 = i10 + i2;

        staticinvoke <androidx.gridlayout.widget.GridLayout: void procrusteanFill(int[],int,int,int)>(r2, i11, $i7, $i6);

     label18:
        if z0 == 0 goto label19;

        staticinvoke <androidx.gridlayout.widget.GridLayout: void setCellGroup(androidx.gridlayout.widget.GridLayout$LayoutParams,int,int,int,int)>(r3, i10, i2, i11, i3);

        goto label20;

     label19:
        staticinvoke <androidx.gridlayout.widget.GridLayout: void setCellGroup(androidx.gridlayout.widget.GridLayout$LayoutParams,int,int,int,int)>(r3, i11, i3, i10, i2);

     label20:
        i11 = i11 + i3;

        i12 = i12 + 1;

        goto label07;

     label21:
        return;
    }

    private void invalidateStructure()
    {
        androidx.gridlayout.widget.GridLayout r0;
        androidx.gridlayout.widget.GridLayout$Axis $r1, $r2, $r3, $r4;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r0.<androidx.gridlayout.widget.GridLayout: int mLastLayoutParamsHashCode> = 0;

        $r1 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        if $r1 == null goto label1;

        $r4 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        virtualinvoke $r4.<androidx.gridlayout.widget.GridLayout$Axis: void invalidateStructure()>();

     label1:
        $r2 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

        virtualinvoke $r3.<androidx.gridlayout.widget.GridLayout$Axis: void invalidateStructure()>();

     label2:
        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void invalidateValues()>();

        return;
    }

    private void invalidateValues()
    {
        androidx.gridlayout.widget.GridLayout r0;
        androidx.gridlayout.widget.GridLayout$Axis $r1, $r2, $r3, $r4;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        $r1 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        if $r1 == null goto label1;

        $r2 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

        if $r2 == null goto label1;

        $r3 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        virtualinvoke $r3.<androidx.gridlayout.widget.GridLayout$Axis: void invalidateValues()>();

        $r4 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

        virtualinvoke $r4.<androidx.gridlayout.widget.GridLayout$Axis: void invalidateValues()>();

     label1:
        return;
    }

    final androidx.gridlayout.widget.GridLayout$LayoutParams getLayoutParams(android.view.View)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.gridlayout.widget.GridLayout$LayoutParams $r3;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.gridlayout.widget.GridLayout$LayoutParams) $r2;

        return $r3;
    }

    static void handleInvalidParams(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    private void checkLayoutParams(androidx.gridlayout.widget.GridLayout$LayoutParams, boolean)
    {
        androidx.gridlayout.widget.GridLayout r0;
        androidx.gridlayout.widget.GridLayout$LayoutParams r1;
        boolean z0;
        java.lang.String r2, $r11, $r17, $r21, $r22;
        androidx.gridlayout.widget.GridLayout$Spec r3, $r23;
        androidx.gridlayout.widget.GridLayout$Interval r4;
        androidx.gridlayout.widget.GridLayout$Axis r5, $r24;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: androidx.gridlayout.widget.GridLayout$LayoutParams;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r22 = "column";

        goto label2;

     label1:
        $r22 = "row";

     label2:
        r2 = $r22;

        if z0 == 0 goto label3;

        $r23 = r1.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec columnSpec>;

        goto label4;

     label3:
        $r23 = r1.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec rowSpec>;

     label4:
        r3 = $r23;

        r4 = r3.<androidx.gridlayout.widget.GridLayout$Spec: androidx.gridlayout.widget.GridLayout$Interval span>;

        $i1 = r4.<androidx.gridlayout.widget.GridLayout$Interval: int min>;

        if $i1 == -2147483648 goto label5;

        $i4 = r4.<androidx.gridlayout.widget.GridLayout$Interval: int min>;

        if $i4 >= 0 goto label5;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" indices must be positive");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.gridlayout.widget.GridLayout: void handleInvalidParams(java.lang.String)>($r21);

     label5:
        if z0 == 0 goto label6;

        $r24 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        goto label7;

     label6:
        $r24 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

     label7:
        r5 = $r24;

        i0 = r5.<androidx.gridlayout.widget.GridLayout$Axis: int definedCount>;

        if i0 == -2147483648 goto label9;

        $i2 = r4.<androidx.gridlayout.widget.GridLayout$Interval: int max>;

        if $i2 <= i0 goto label8;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" indices (start + span) mustn\'t exceed the ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.gridlayout.widget.GridLayout: void handleInvalidParams(java.lang.String)>($r17);

     label8:
        $i3 = virtualinvoke r4.<androidx.gridlayout.widget.GridLayout$Interval: int size()>();

        if $i3 <= i0 goto label9;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" span mustn\'t exceed the ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.gridlayout.widget.GridLayout: void handleInvalidParams(java.lang.String)>($r11);

     label9:
        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        androidx.gridlayout.widget.GridLayout$LayoutParams r2;
        boolean $z0;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof androidx.gridlayout.widget.GridLayout$LayoutParams;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (androidx.gridlayout.widget.GridLayout$LayoutParams) r1;

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void checkLayoutParams(androidx.gridlayout.widget.GridLayout$LayoutParams,boolean)>(r2, 1);

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void checkLayoutParams(androidx.gridlayout.widget.GridLayout$LayoutParams,boolean)>(r2, 0);

        return 1;
    }

    protected androidx.gridlayout.widget.GridLayout$LayoutParams generateDefaultLayoutParams()
    {
        androidx.gridlayout.widget.GridLayout r0;
        androidx.gridlayout.widget.GridLayout$LayoutParams $r1;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        $r1 = new androidx.gridlayout.widget.GridLayout$LayoutParams;

        specialinvoke $r1.<androidx.gridlayout.widget.GridLayout$LayoutParams: void <init>()>();

        return $r1;
    }

    public androidx.gridlayout.widget.GridLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.util.AttributeSet r1;
        androidx.gridlayout.widget.GridLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new androidx.gridlayout.widget.GridLayout$LayoutParams;

        $r3 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: android.content.Context getContext()>();

        specialinvoke $r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected androidx.gridlayout.widget.GridLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1;
        androidx.gridlayout.widget.GridLayout$LayoutParams $r2, $r3, $r5, $r6;
        android.view.ViewGroup$MarginLayoutParams $r4;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof androidx.gridlayout.widget.GridLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $r5 = new androidx.gridlayout.widget.GridLayout$LayoutParams;

        $r6 = (androidx.gridlayout.widget.GridLayout$LayoutParams) r1;

        specialinvoke $r5.<androidx.gridlayout.widget.GridLayout$LayoutParams: void <init>(androidx.gridlayout.widget.GridLayout$LayoutParams)>($r6);

        return $r5;

     label1:
        $z1 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z1 == 0 goto label2;

        $r3 = new androidx.gridlayout.widget.GridLayout$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r3.<androidx.gridlayout.widget.GridLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r3;

     label2:
        $r2 = new androidx.gridlayout.widget.GridLayout$LayoutParams;

        specialinvoke $r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    private void drawLine(android.graphics.Canvas, int, int, int, int, android.graphics.Paint)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, $i5, $i6;
        android.graphics.Paint r2;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 := @parameter5: android.graphics.Paint;

        $z0 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: boolean isLayoutRtlCompat()>();

        if $z0 == 0 goto label1;

        i4 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getWidth()>();

        $i5 = i4 - i0;

        $f7 = (float) $i5;

        $f6 = (float) i1;

        $i6 = i4 - i2;

        $f5 = (float) $i6;

        $f4 = (float) i3;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f7, $f6, $f5, $f4, r2);

        goto label2;

     label1:
        $f3 = (float) i0;

        $f2 = (float) i1;

        $f1 = (float) i2;

        $f0 = (float) i3;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f3, $f2, $f1, $f0, r2);

     label2:
        return;
    }

    private int computeLayoutParamsHashCode()
    {
        androidx.gridlayout.widget.GridLayout r0;
        int i0, $i1, $i2, $i3, i4, i5;
        android.view.View r1;
        androidx.gridlayout.widget.GridLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        i4 = 1;

        i5 = 0;

        i0 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getChildCount()>();

     label1:
        if i5 >= i0 goto label4;

        r1 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: android.view.View getChildAt(int)>(i5);

        $i1 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i1 != 8 goto label2;

        goto label3;

     label2:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (androidx.gridlayout.widget.GridLayout$LayoutParams) $r3;

        $i2 = 31 * i4;

        $i3 = virtualinvoke r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: int hashCode()>();

        i4 = $i2 + $i3;

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        return i4;
    }

    private void consistencyCheck()
    {
        androidx.gridlayout.widget.GridLayout r0;
        int $i0, $i1, $i2, $i3;
        android.util.Printer $r1;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        $i0 = r0.<androidx.gridlayout.widget.GridLayout: int mLastLayoutParamsHashCode>;

        if $i0 != 0 goto label1;

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void validateLayoutParams()>();

        $i3 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int computeLayoutParamsHashCode()>();

        r0.<androidx.gridlayout.widget.GridLayout: int mLastLayoutParamsHashCode> = $i3;

        goto label2;

     label1:
        $i1 = r0.<androidx.gridlayout.widget.GridLayout: int mLastLayoutParamsHashCode>;

        $i2 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int computeLayoutParamsHashCode()>();

        if $i1 == $i2 goto label2;

        $r1 = r0.<androidx.gridlayout.widget.GridLayout: android.util.Printer mPrinter>;

        interfaceinvoke $r1.<android.util.Printer: void println(java.lang.String)>("The fields of some layout parameters were modified in between layout operations. Check the javadoc for GridLayout.LayoutParams#rowSpec.");

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void invalidateStructure()>();

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void consistencyCheck()>();

     label2:
        return;
    }

    private void measureChildWithMargins2(android.view.View, int, int, int, int)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i6 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getTotalMargin(android.view.View,boolean)>(r1, 1);

        i4 = staticinvoke <androidx.gridlayout.widget.GridLayout: int getChildMeasureSpec(int,int,int)>(i0, $i6, i2);

        $i7 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getTotalMargin(android.view.View,boolean)>(r1, 0);

        i5 = staticinvoke <androidx.gridlayout.widget.GridLayout: int getChildMeasureSpec(int,int,int)>(i1, $i7, i3);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i4, i5);

        return;
    }

    private void measureChildrenWithMargins(int, int, boolean)
    {
        androidx.gridlayout.widget.GridLayout r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        boolean z0, z1, $z2;
        android.view.View r1;
        androidx.gridlayout.widget.GridLayout$LayoutParams r2;
        androidx.gridlayout.widget.GridLayout$Spec r3, $r9;
        androidx.gridlayout.widget.GridLayout$Interval r4;
        androidx.gridlayout.widget.GridLayout$Axis r5, $r10;
        int[] r6;
        androidx.gridlayout.widget.GridLayout$Alignment $r7, $r8;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i16 = 0;

        i2 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getChildCount()>();

     label01:
        if i16 >= i2 goto label12;

        r1 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: android.view.View getChildAt(int)>(i16);

        $i5 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i5 != 8 goto label02;

        goto label11;

     label02:
        r2 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$LayoutParams getLayoutParams(android.view.View)>(r1);

        if z0 == 0 goto label03;

        $i15 = r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: int width>;

        $i14 = r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: int height>;

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void measureChildWithMargins2(android.view.View,int,int,int,int)>(r1, i0, i1, $i15, $i14);

        goto label11;

     label03:
        $i6 = r0.<androidx.gridlayout.widget.GridLayout: int mOrientation>;

        if $i6 != 0 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        z1 = $z2;

        if z1 == 0 goto label06;

        $r9 = r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec columnSpec>;

        goto label07;

     label06:
        $r9 = r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec rowSpec>;

     label07:
        r3 = $r9;

        $r7 = virtualinvoke r3.<androidx.gridlayout.widget.GridLayout$Spec: androidx.gridlayout.widget.GridLayout$Alignment getAbsoluteAlignment(boolean)>(z1);

        $r8 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment FILL>;

        if $r7 != $r8 goto label11;

        r4 = r3.<androidx.gridlayout.widget.GridLayout$Spec: androidx.gridlayout.widget.GridLayout$Interval span>;

        if z1 == 0 goto label08;

        $r10 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        goto label09;

     label08:
        $r10 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

     label09:
        r5 = $r10;

        r6 = virtualinvoke r5.<androidx.gridlayout.widget.GridLayout$Axis: int[] getLocations()>();

        $i7 = r4.<androidx.gridlayout.widget.GridLayout$Interval: int max>;

        $i10 = r6[$i7];

        $i8 = r4.<androidx.gridlayout.widget.GridLayout$Interval: int min>;

        $i9 = r6[$i8];

        i3 = $i10 - $i9;

        $i11 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getTotalMargin(android.view.View,boolean)>(r1, z1);

        i4 = i3 - $i11;

        if z1 == 0 goto label10;

        $i13 = r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: int height>;

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void measureChildWithMargins2(android.view.View,int,int,int,int)>(r1, i0, i1, i4, $i13);

        goto label11;

     label10:
        $i12 = r2.<androidx.gridlayout.widget.GridLayout$LayoutParams: int width>;

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void measureChildWithMargins2(android.view.View,int,int,int,int)>(r1, i0, i1, $i12, i4);

     label11:
        i16 = i16 + 1;

        goto label01;

     label12:
        return;
    }

    static int adjust(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 + i1;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i2);

        $i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        $i5 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, $i4);

        return $i5;
    }

    protected void onMeasure(int, int)
    {
        androidx.gridlayout.widget.GridLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22;
        androidx.gridlayout.widget.GridLayout$Axis $r1, $r2, $r3, $r4;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void consistencyCheck()>();

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void invalidateValues()>();

        $i8 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getPaddingLeft()>();

        $i9 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getPaddingRight()>();

        i2 = $i8 + $i9;

        $i10 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getPaddingTop()>();

        $i11 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getPaddingBottom()>();

        i3 = $i10 + $i11;

        $i12 = neg i2;

        i4 = staticinvoke <androidx.gridlayout.widget.GridLayout: int adjust(int,int)>(i0, $i12);

        $i13 = neg i3;

        i5 = staticinvoke <androidx.gridlayout.widget.GridLayout: int adjust(int,int)>(i1, $i13);

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void measureChildrenWithMargins(int,int,boolean)>(i4, i5, 1);

        $i14 = r0.<androidx.gridlayout.widget.GridLayout: int mOrientation>;

        if $i14 != 0 goto label1;

        $r3 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        i21 = virtualinvoke $r3.<androidx.gridlayout.widget.GridLayout$Axis: int getMeasure(int)>(i4);

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void measureChildrenWithMargins(int,int,boolean)>(i4, i5, 0);

        $r4 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

        i22 = virtualinvoke $r4.<androidx.gridlayout.widget.GridLayout$Axis: int getMeasure(int)>(i5);

        goto label2;

     label1:
        $r1 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

        i22 = virtualinvoke $r1.<androidx.gridlayout.widget.GridLayout$Axis: int getMeasure(int)>(i5);

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void measureChildrenWithMargins(int,int,boolean)>(i4, i5, 0);

        $r2 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        i21 = virtualinvoke $r2.<androidx.gridlayout.widget.GridLayout$Axis: int getMeasure(int)>(i4);

     label2:
        $i15 = i21 + i2;

        $i16 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getSuggestedMinimumWidth()>();

        i6 = staticinvoke <java.lang.Math: int max(int,int)>($i15, $i16);

        $i17 = i22 + i3;

        $i18 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getSuggestedMinimumHeight()>();

        i7 = staticinvoke <java.lang.Math: int max(int,int)>($i17, $i18);

        $i19 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>(i6, i0, 0);

        $i20 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>(i7, i1, 0);

        virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: void setMeasuredDimension(int,int)>($i19, $i20);

        return;
    }

    private int getMeasurement(android.view.View, boolean)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.view.View r1;
        boolean z0;
        int $i0;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        goto label2;

     label1:
        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

     label2:
        return $i0;
    }

    final int getMeasurementIncludingMargin(android.view.View, boolean)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.view.View r1;
        boolean z0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i0 != 8 goto label1;

        return 0;

     label1:
        $i1 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getMeasurement(android.view.View,boolean)>(r1, z0);

        $i2 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getTotalMargin(android.view.View,boolean)>(r1, z0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public void requestLayout()
    {
        androidx.gridlayout.widget.GridLayout r0;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        specialinvoke r0.<android.view.ViewGroup: void requestLayout()>();

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void invalidateStructure()>();

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.gridlayout.widget.GridLayout r0;
        boolean z0, $z1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, i63, $i64, $i65, $i66;
        int[] r1, r2;
        android.view.View r3;
        androidx.gridlayout.widget.GridLayout$LayoutParams r4;
        androidx.gridlayout.widget.GridLayout$Spec r5, r6;
        androidx.gridlayout.widget.GridLayout$Interval r7, r8;
        androidx.gridlayout.widget.GridLayout$Alignment r9, r10;
        androidx.gridlayout.widget.GridLayout$Bounds r11, r12;
        androidx.gridlayout.widget.GridLayout$Axis $r13, $r14, $r15, $r16, $r17, $r20;
        androidx.gridlayout.widget.GridLayout$PackedMap $r18, $r21;
        java.lang.Object $r19, $r22;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<androidx.gridlayout.widget.GridLayout: void consistencyCheck()>();

        i4 = i2 - i0;

        i5 = i3 - i1;

        i6 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getPaddingLeft()>();

        i7 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getPaddingTop()>();

        i8 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getPaddingRight()>();

        i9 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getPaddingBottom()>();

        $r13 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        $i34 = i4 - i6;

        $i35 = $i34 - i8;

        virtualinvoke $r13.<androidx.gridlayout.widget.GridLayout$Axis: void layout(int)>($i35);

        $r14 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

        $i36 = i5 - i7;

        $i37 = $i36 - i9;

        virtualinvoke $r14.<androidx.gridlayout.widget.GridLayout$Axis: void layout(int)>($i37);

        $r15 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        r1 = virtualinvoke $r15.<androidx.gridlayout.widget.GridLayout$Axis: int[] getLocations()>();

        $r16 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

        r2 = virtualinvoke $r16.<androidx.gridlayout.widget.GridLayout$Axis: int[] getLocations()>();

        i63 = 0;

        i10 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: int getChildCount()>();

     label1:
        if i63 >= i10 goto label8;

        r3 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: android.view.View getChildAt(int)>(i63);

        $i38 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i38 != 8 goto label2;

        goto label7;

     label2:
        r4 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$LayoutParams getLayoutParams(android.view.View)>(r3);

        r5 = r4.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec columnSpec>;

        r6 = r4.<androidx.gridlayout.widget.GridLayout$LayoutParams: androidx.gridlayout.widget.GridLayout$Spec rowSpec>;

        r7 = r5.<androidx.gridlayout.widget.GridLayout$Spec: androidx.gridlayout.widget.GridLayout$Interval span>;

        r8 = r6.<androidx.gridlayout.widget.GridLayout$Spec: androidx.gridlayout.widget.GridLayout$Interval span>;

        $i39 = r7.<androidx.gridlayout.widget.GridLayout$Interval: int min>;

        i11 = r1[$i39];

        $i40 = r8.<androidx.gridlayout.widget.GridLayout$Interval: int min>;

        i12 = r2[$i40];

        $i41 = r7.<androidx.gridlayout.widget.GridLayout$Interval: int max>;

        i13 = r1[$i41];

        $i42 = r8.<androidx.gridlayout.widget.GridLayout$Interval: int max>;

        i14 = r2[$i42];

        i15 = i13 - i11;

        i16 = i14 - i12;

        i17 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getMeasurement(android.view.View,boolean)>(r3, 1);

        i18 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getMeasurement(android.view.View,boolean)>(r3, 0);

        r9 = virtualinvoke r5.<androidx.gridlayout.widget.GridLayout$Spec: androidx.gridlayout.widget.GridLayout$Alignment getAbsoluteAlignment(boolean)>(1);

        r10 = virtualinvoke r6.<androidx.gridlayout.widget.GridLayout$Spec: androidx.gridlayout.widget.GridLayout$Alignment getAbsoluteAlignment(boolean)>(0);

        $r17 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mHorizontalAxis>;

        $r18 = virtualinvoke $r17.<androidx.gridlayout.widget.GridLayout$Axis: androidx.gridlayout.widget.GridLayout$PackedMap getGroupBounds()>();

        $r19 = virtualinvoke $r18.<androidx.gridlayout.widget.GridLayout$PackedMap: java.lang.Object getValue(int)>(i63);

        r11 = (androidx.gridlayout.widget.GridLayout$Bounds) $r19;

        $r20 = r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Axis mVerticalAxis>;

        $r21 = virtualinvoke $r20.<androidx.gridlayout.widget.GridLayout$Axis: androidx.gridlayout.widget.GridLayout$PackedMap getGroupBounds()>();

        $r22 = virtualinvoke $r21.<androidx.gridlayout.widget.GridLayout$PackedMap: java.lang.Object getValue(int)>(i63);

        r12 = (androidx.gridlayout.widget.GridLayout$Bounds) $r22;

        $i43 = virtualinvoke r11.<androidx.gridlayout.widget.GridLayout$Bounds: int size(boolean)>(1);

        $i44 = i15 - $i43;

        i19 = virtualinvoke r9.<androidx.gridlayout.widget.GridLayout$Alignment: int getGravityOffset(android.view.View,int)>(r3, $i44);

        $i45 = virtualinvoke r12.<androidx.gridlayout.widget.GridLayout$Bounds: int size(boolean)>(1);

        $i46 = i16 - $i45;

        i20 = virtualinvoke r10.<androidx.gridlayout.widget.GridLayout$Alignment: int getGravityOffset(android.view.View,int)>(r3, $i46);

        i21 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getMargin(android.view.View,boolean,boolean)>(r3, 1, 1);

        i22 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getMargin(android.view.View,boolean,boolean)>(r3, 0, 1);

        i23 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getMargin(android.view.View,boolean,boolean)>(r3, 1, 0);

        i24 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: int getMargin(android.view.View,boolean,boolean)>(r3, 0, 0);

        i25 = i21 + i23;

        i26 = i22 + i24;

        $i47 = i17 + i25;

        i27 = virtualinvoke r11.<androidx.gridlayout.widget.GridLayout$Bounds: int getOffset(androidx.gridlayout.widget.GridLayout,android.view.View,androidx.gridlayout.widget.GridLayout$Alignment,int,boolean)>(r0, r3, r9, $i47, 1);

        $i48 = i18 + i26;

        i28 = virtualinvoke r12.<androidx.gridlayout.widget.GridLayout$Bounds: int getOffset(androidx.gridlayout.widget.GridLayout,android.view.View,androidx.gridlayout.widget.GridLayout$Alignment,int,boolean)>(r0, r3, r10, $i48, 0);

        $i49 = i15 - i25;

        i29 = virtualinvoke r9.<androidx.gridlayout.widget.GridLayout$Alignment: int getSizeInCell(android.view.View,int,int)>(r3, i17, $i49);

        $i50 = i16 - i26;

        i30 = virtualinvoke r10.<androidx.gridlayout.widget.GridLayout$Alignment: int getSizeInCell(android.view.View,int,int)>(r3, i18, $i50);

        $i51 = i11 + i19;

        i31 = $i51 + i27;

        $z1 = specialinvoke r0.<androidx.gridlayout.widget.GridLayout: boolean isLayoutRtlCompat()>();

        if $z1 != 0 goto label3;

        $i62 = i6 + i21;

        $i64 = $i62 + i31;

        goto label4;

     label3:
        $i52 = i4 - i29;

        $i53 = $i52 - i8;

        $i54 = $i53 - i23;

        $i64 = $i54 - i31;

     label4:
        i32 = $i64;

        $i55 = i7 + i12;

        $i56 = $i55 + i20;

        $i57 = $i56 + i28;

        i33 = $i57 + i22;

        $i58 = virtualinvoke r3.<android.view.View: int getMeasuredWidth()>();

        if i29 != $i58 goto label5;

        $i61 = virtualinvoke r3.<android.view.View: int getMeasuredHeight()>();

        if i30 == $i61 goto label6;

     label5:
        $i59 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i29, 1073741824);

        $i60 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i30, 1073741824);

        virtualinvoke r3.<android.view.View: void measure(int,int)>($i59, $i60);

     label6:
        $i65 = i32 + i29;

        $i66 = i33 + i30;

        virtualinvoke r3.<android.view.View: void layout(int,int,int,int)>(i32, i33, $i65, $i66);

     label7:
        i63 = i63 + 1;

        goto label1;

     label8:
        return;
    }

    public static androidx.gridlayout.widget.GridLayout$Spec spec(int, int, androidx.gridlayout.widget.GridLayout$Alignment, float)
    {
        int i0, i1;
        androidx.gridlayout.widget.GridLayout$Alignment r0;
        float f0;
        androidx.gridlayout.widget.GridLayout$Spec $r1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: androidx.gridlayout.widget.GridLayout$Alignment;

        f0 := @parameter3: float;

        $r1 = new androidx.gridlayout.widget.GridLayout$Spec;

        if i0 == -2147483648 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        specialinvoke $r1.<androidx.gridlayout.widget.GridLayout$Spec: void <init>(boolean,int,int,androidx.gridlayout.widget.GridLayout$Alignment,float)>($z0, i0, i1, r0, f0);

        return $r1;
    }

    public static androidx.gridlayout.widget.GridLayout$Spec spec(int, androidx.gridlayout.widget.GridLayout$Alignment, float)
    {
        int i0;
        androidx.gridlayout.widget.GridLayout$Alignment r0;
        float f0;
        androidx.gridlayout.widget.GridLayout$Spec $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.gridlayout.widget.GridLayout$Alignment;

        f0 := @parameter2: float;

        $r1 = staticinvoke <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Spec spec(int,int,androidx.gridlayout.widget.GridLayout$Alignment,float)>(i0, 1, r0, f0);

        return $r1;
    }

    public static androidx.gridlayout.widget.GridLayout$Spec spec(int, int, float)
    {
        int i0, i1;
        float f0;
        androidx.gridlayout.widget.GridLayout$Alignment $r0;
        androidx.gridlayout.widget.GridLayout$Spec $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        $r0 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment UNDEFINED_ALIGNMENT>;

        $r1 = staticinvoke <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Spec spec(int,int,androidx.gridlayout.widget.GridLayout$Alignment,float)>(i0, i1, $r0, f0);

        return $r1;
    }

    public static androidx.gridlayout.widget.GridLayout$Spec spec(int, float)
    {
        int i0;
        float f0;
        androidx.gridlayout.widget.GridLayout$Spec $r0;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r0 = staticinvoke <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Spec spec(int,int,float)>(i0, 1, f0);

        return $r0;
    }

    public static androidx.gridlayout.widget.GridLayout$Spec spec(int, int, androidx.gridlayout.widget.GridLayout$Alignment)
    {
        int i0, i1;
        androidx.gridlayout.widget.GridLayout$Alignment r0;
        androidx.gridlayout.widget.GridLayout$Spec $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: androidx.gridlayout.widget.GridLayout$Alignment;

        $r1 = staticinvoke <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Spec spec(int,int,androidx.gridlayout.widget.GridLayout$Alignment,float)>(i0, i1, r0, 0.0F);

        return $r1;
    }

    public static androidx.gridlayout.widget.GridLayout$Spec spec(int, androidx.gridlayout.widget.GridLayout$Alignment)
    {
        int i0;
        androidx.gridlayout.widget.GridLayout$Alignment r0;
        androidx.gridlayout.widget.GridLayout$Spec $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.gridlayout.widget.GridLayout$Alignment;

        $r1 = staticinvoke <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Spec spec(int,int,androidx.gridlayout.widget.GridLayout$Alignment)>(i0, 1, r0);

        return $r1;
    }

    public static androidx.gridlayout.widget.GridLayout$Spec spec(int, int)
    {
        int i0, i1;
        androidx.gridlayout.widget.GridLayout$Alignment $r0;
        androidx.gridlayout.widget.GridLayout$Spec $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment UNDEFINED_ALIGNMENT>;

        $r1 = staticinvoke <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Spec spec(int,int,androidx.gridlayout.widget.GridLayout$Alignment)>(i0, i1, $r0);

        return $r1;
    }

    public static androidx.gridlayout.widget.GridLayout$Spec spec(int)
    {
        int i0;
        androidx.gridlayout.widget.GridLayout$Spec $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Spec spec(int,int)>(i0, 1);

        return $r0;
    }

    private static androidx.gridlayout.widget.GridLayout$Alignment createSwitchingAlignment(androidx.gridlayout.widget.GridLayout$Alignment, androidx.gridlayout.widget.GridLayout$Alignment)
    {
        androidx.gridlayout.widget.GridLayout$Alignment r0, r1;
        androidx.gridlayout.widget.GridLayout$5 $r2;

        r0 := @parameter0: androidx.gridlayout.widget.GridLayout$Alignment;

        r1 := @parameter1: androidx.gridlayout.widget.GridLayout$Alignment;

        $r2 = new androidx.gridlayout.widget.GridLayout$5;

        specialinvoke $r2.<androidx.gridlayout.widget.GridLayout$5: void <init>(androidx.gridlayout.widget.GridLayout$Alignment,androidx.gridlayout.widget.GridLayout$Alignment)>(r0, r1);

        return $r2;
    }

    static boolean canStretch(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.gridlayout.widget.GridLayout r0;
        androidx.gridlayout.widget.GridLayout$LayoutParams $r1;
        android.view.ViewGroup$LayoutParams r2;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        $r1 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$LayoutParams generateDefaultLayoutParams()>();

        r2 = (android.view.ViewGroup$LayoutParams) $r1;

        return r2;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.view.ViewGroup$LayoutParams r1, r3;
        androidx.gridlayout.widget.GridLayout$LayoutParams $r2;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        r3 = (android.view.ViewGroup$LayoutParams) $r2;

        return r3;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.gridlayout.widget.GridLayout r0;
        android.util.AttributeSet r1;
        androidx.gridlayout.widget.GridLayout$LayoutParams $r2;
        android.view.ViewGroup$LayoutParams r3;

        r0 := @this: androidx.gridlayout.widget.GridLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        r3 = (android.view.ViewGroup$LayoutParams) $r2;

        return r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.gridlayout.widget.GridLayout$Alignment $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        android.util.LogPrinter r20;
        androidx.gridlayout.widget.GridLayout$1 r21;
        androidx.gridlayout.widget.GridLayout$2 r22;
        androidx.gridlayout.widget.GridLayout$3 r23;
        androidx.gridlayout.widget.GridLayout$4 r24;
        androidx.gridlayout.widget.GridLayout$6 r25;
        androidx.gridlayout.widget.GridLayout$7 r26;
        androidx.gridlayout.widget.GridLayout$8 r27;
        android.util.Printer r28;

        r20 = new android.util.LogPrinter;

        $r1 = class "Landroidx/gridlayout/widget/GridLayout;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke r20.<android.util.LogPrinter: void <init>(int,java.lang.String)>(3, $r2);

        r28 = (android.util.Printer) r20;

        <androidx.gridlayout.widget.GridLayout: android.util.Printer LOG_PRINTER> = r28;

        r21 = new androidx.gridlayout.widget.GridLayout$1;

        specialinvoke r21.<androidx.gridlayout.widget.GridLayout$1: void <init>()>();

        <androidx.gridlayout.widget.GridLayout: android.util.Printer NO_PRINTER> = r21;

        $i0 = <androidx.gridlayout.R$styleable: int GridLayout_orientation>;

        <androidx.gridlayout.widget.GridLayout: int ORIENTATION> = $i0;

        $i1 = <androidx.gridlayout.R$styleable: int GridLayout_rowCount>;

        <androidx.gridlayout.widget.GridLayout: int ROW_COUNT> = $i1;

        $i2 = <androidx.gridlayout.R$styleable: int GridLayout_columnCount>;

        <androidx.gridlayout.widget.GridLayout: int COLUMN_COUNT> = $i2;

        $i3 = <androidx.gridlayout.R$styleable: int GridLayout_useDefaultMargins>;

        <androidx.gridlayout.widget.GridLayout: int USE_DEFAULT_MARGINS> = $i3;

        $i4 = <androidx.gridlayout.R$styleable: int GridLayout_alignmentMode>;

        <androidx.gridlayout.widget.GridLayout: int ALIGNMENT_MODE> = $i4;

        $i5 = <androidx.gridlayout.R$styleable: int GridLayout_rowOrderPreserved>;

        <androidx.gridlayout.widget.GridLayout: int ROW_ORDER_PRESERVED> = $i5;

        $i6 = <androidx.gridlayout.R$styleable: int GridLayout_columnOrderPreserved>;

        <androidx.gridlayout.widget.GridLayout: int COLUMN_ORDER_PRESERVED> = $i6;

        r22 = new androidx.gridlayout.widget.GridLayout$2;

        specialinvoke r22.<androidx.gridlayout.widget.GridLayout$2: void <init>()>();

        <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment UNDEFINED_ALIGNMENT> = r22;

        r23 = new androidx.gridlayout.widget.GridLayout$3;

        specialinvoke r23.<androidx.gridlayout.widget.GridLayout$3: void <init>()>();

        <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment LEADING> = r23;

        r24 = new androidx.gridlayout.widget.GridLayout$4;

        specialinvoke r24.<androidx.gridlayout.widget.GridLayout$4: void <init>()>();

        <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment TRAILING> = r24;

        $r7 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment LEADING>;

        <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment TOP> = $r7;

        $r8 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment TRAILING>;

        <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment BOTTOM> = $r8;

        $r9 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment LEADING>;

        <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment START> = $r9;

        $r10 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment TRAILING>;

        <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment END> = $r10;

        $r12 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment START>;

        $r11 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment END>;

        $r13 = staticinvoke <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment createSwitchingAlignment(androidx.gridlayout.widget.GridLayout$Alignment,androidx.gridlayout.widget.GridLayout$Alignment)>($r12, $r11);

        <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment LEFT> = $r13;

        $r15 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment END>;

        $r14 = <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment START>;

        $r16 = staticinvoke <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment createSwitchingAlignment(androidx.gridlayout.widget.GridLayout$Alignment,androidx.gridlayout.widget.GridLayout$Alignment)>($r15, $r14);

        <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment RIGHT> = $r16;

        r25 = new androidx.gridlayout.widget.GridLayout$6;

        specialinvoke r25.<androidx.gridlayout.widget.GridLayout$6: void <init>()>();

        <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment CENTER> = r25;

        r26 = new androidx.gridlayout.widget.GridLayout$7;

        specialinvoke r26.<androidx.gridlayout.widget.GridLayout$7: void <init>()>();

        <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment BASELINE> = r26;

        r27 = new androidx.gridlayout.widget.GridLayout$8;

        specialinvoke r27.<androidx.gridlayout.widget.GridLayout$8: void <init>()>();

        <androidx.gridlayout.widget.GridLayout: androidx.gridlayout.widget.GridLayout$Alignment FILL> = r27;

        return;
    }

