androidx.room.compiler.processing.XType
<androidx.room.compiler.processing.XType: com.squareup.javapoet.TypeName getTypeName()>
<androidx.room.compiler.processing.XType: androidx.room.compiler.codegen.XTypeName asTypeName()>
<androidx.room.compiler.processing.XType: androidx.room.compiler.processing.XRawType getRawType()>
<androidx.room.compiler.processing.XType: androidx.room.compiler.processing.XNullability getNullability()>
<androidx.room.compiler.processing.XType: java.util.List getSuperTypes()>
<androidx.room.compiler.processing.XType: androidx.room.compiler.processing.XTypeElement getTypeElement()>
<androidx.room.compiler.processing.XType: java.util.List getTypeArguments()>
<androidx.room.compiler.processing.XType: boolean isAssignableFrom(androidx.room.compiler.processing.XType)>
    public boolean isAssignableFromWithoutVariance(androidx.room.compiler.processing.XType)
    {
        androidx.room.compiler.processing.XType r0, r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.XType;

        r1 := @parameter0: androidx.room.compiler.processing.XType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "other");

        $z0 = staticinvoke <androidx.room.compiler.processing.XTypeKt: boolean access$isAssignableWithoutVariance(androidx.room.compiler.processing.XType,androidx.room.compiler.processing.XType)>(r1, r0);

        return $z0;
    }

<androidx.room.compiler.processing.XType: boolean isError()>
<androidx.room.compiler.processing.XType: java.lang.String defaultValue()>
<androidx.room.compiler.processing.XType: androidx.room.compiler.processing.XType boxed()>
    public boolean isList()
    {
        androidx.room.compiler.processing.XType r0;
        kotlin.reflect.KClass $r1;
        boolean $z0;

        r0 := @this: androidx.room.compiler.processing.XType;

        $r1 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Ljava/util/List;");

        $z0 = interfaceinvoke r0.<androidx.room.compiler.processing.XType: boolean isTypeOf(kotlin.reflect.KClass)>($r1);

        return $z0;
    }

<androidx.room.compiler.processing.XType: boolean isNone()>
<androidx.room.compiler.processing.XType: boolean isTypeOf(kotlin.reflect.KClass)>
<androidx.room.compiler.processing.XType: boolean isSameType(androidx.room.compiler.processing.XType)>
    public androidx.room.compiler.processing.XType extendsBoundOrSelf()
    {
        androidx.room.compiler.processing.XType r0, $r1;

        r0 := @this: androidx.room.compiler.processing.XType;

        $r1 = interfaceinvoke r0.<androidx.room.compiler.processing.XType: androidx.room.compiler.processing.XType extendsBound()>();

        if $r1 != null goto label1;

        $r1 = r0;

     label1:
        return $r1;
    }

<androidx.room.compiler.processing.XType: androidx.room.compiler.processing.XType extendsBound()>
<androidx.room.compiler.processing.XType: androidx.room.compiler.processing.XType makeNullable()>
<androidx.room.compiler.processing.XType: androidx.room.compiler.processing.XType makeNonNullable()>
