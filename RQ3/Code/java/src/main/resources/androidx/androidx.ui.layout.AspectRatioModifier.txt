androidx.ui.layout.AspectRatioModifier
<androidx.ui.layout.AspectRatioModifier: float aspectRatio>
    public void <init>(float)
    {
        androidx.ui.layout.AspectRatioModifier r0;
        float f0, $f1, $f2;
        boolean z0, z1, $z3, z4;
        byte $b0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6, r8;
        java.lang.Throwable $r7;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        f0 := @parameter0: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.layout.AspectRatioModifier: float aspectRatio> = f0;

        $f1 = virtualinvoke r0.<androidx.ui.layout.AspectRatioModifier: float getAspectRatio()>();

        $b0 = $f1 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        z1 = 0;

        z4 = 0;

        if z0 != 0 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("aspectRatio ");

        $f2 = virtualinvoke r0.<androidx.ui.layout.AspectRatioModifier: float getAspectRatio()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be > 0");

        r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke r8.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;

     label3:
        return;
    }

    public final float getAspectRatio()
    {
        androidx.ui.layout.AspectRatioModifier r0;
        float $f0;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        $f0 = r0.<androidx.ui.layout.AspectRatioModifier: float aspectRatio>;

        return $f0;
    }

    public androidx.ui.core.MeasureScope$MeasureResult measure(androidx.ui.core.MeasureScope, androidx.ui.core.Measurable, androidx.ui.core.Constraints, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.layout.AspectRatioModifier r0;
        androidx.ui.core.MeasureScope $r1;
        androidx.ui.core.Measurable r2;
        androidx.ui.core.Constraints r3, r6, $r12;
        androidx.ui.core.LayoutDirection r4;
        androidx.ui.unit.IntSize r5;
        androidx.ui.core.Placeable r7;
        float $f0;
        int $i0, $i1, $i2, $i3;
        androidx.ui.layout.AspectRatioModifier$measure$1 $r8;
        kotlin.jvm.functions.Function1 $r9;
        androidx.ui.core.MeasureScope$MeasureResult $r10;
        androidx.ui.core.Constraints$Companion $r11;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        $r1 := @parameter0: androidx.ui.core.MeasureScope;

        r2 := @parameter1: androidx.ui.core.Measurable;

        r3 := @parameter2: androidx.ui.core.Constraints;

        r4 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "constraints");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "layoutDirection");

        $f0 = virtualinvoke r0.<androidx.ui.layout.AspectRatioModifier: float getAspectRatio()>();

        r5 = specialinvoke r0.<androidx.ui.layout.AspectRatioModifier: androidx.ui.unit.IntSize findSizeWith(androidx.ui.core.Constraints,float)>(r3, $f0);

        if r5 == null goto label1;

        $r11 = <androidx.ui.core.Constraints: androidx.ui.core.Constraints$Companion Companion>;

        $i2 = virtualinvoke r5.<androidx.ui.unit.IntSize: int getWidth()>();

        $i3 = virtualinvoke r5.<androidx.ui.unit.IntSize: int getHeight()>();

        $r12 = virtualinvoke $r11.<androidx.ui.core.Constraints$Companion: androidx.ui.core.Constraints fixed(int,int)>($i2, $i3);

        goto label2;

     label1:
        $r12 = r3;

     label2:
        r6 = $r12;

        r7 = virtualinvoke $r1.<androidx.ui.core.MeasureScope: androidx.ui.core.Placeable measure(androidx.ui.core.Measurable,androidx.ui.core.Constraints)>(r2, r6);

        $i0 = virtualinvoke r7.<androidx.ui.core.Placeable: int getWidth()>();

        $i1 = virtualinvoke r7.<androidx.ui.core.Placeable: int getHeight()>();

        $r8 = new androidx.ui.layout.AspectRatioModifier$measure$1;

        specialinvoke $r8.<androidx.ui.layout.AspectRatioModifier$measure$1: void <init>(androidx.ui.core.Placeable)>(r7);

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        $r10 = staticinvoke <androidx.ui.core.MeasureScope: androidx.ui.core.MeasureScope$MeasureResult layout$default(androidx.ui.core.MeasureScope,int,int,java.util.Map,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r1, $i0, $i1, null, $r9, 4, null);

        return $r10;
    }

    public int minIntrinsicWidth(androidx.ui.core.IntrinsicMeasureScope, androidx.ui.core.IntrinsicMeasurable, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.layout.AspectRatioModifier r0;
        androidx.ui.core.IntrinsicMeasureScope $r1;
        androidx.ui.core.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r3;
        float $f0, $f1, $f2;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        $r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.ui.core.IntrinsicMeasurable;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        if i0 == 2147483647 goto label1;

        $f0 = (float) i0;

        $f1 = virtualinvoke r0.<androidx.ui.layout.AspectRatioModifier: float getAspectRatio()>();

        $f2 = $f0 * $f1;

        $i1 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f2);

        goto label2;

     label1:
        $i1 = virtualinvoke $r1.<androidx.ui.core.IntrinsicMeasureScope: int minIntrinsicWidth(androidx.ui.core.IntrinsicMeasurable,int)>(r2, i0);

     label2:
        return $i1;
    }

    public int maxIntrinsicWidth(androidx.ui.core.IntrinsicMeasureScope, androidx.ui.core.IntrinsicMeasurable, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.layout.AspectRatioModifier r0;
        androidx.ui.core.IntrinsicMeasureScope $r1;
        androidx.ui.core.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r3;
        float $f0, $f1, $f2;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        $r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.ui.core.IntrinsicMeasurable;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        if i0 == 2147483647 goto label1;

        $f0 = (float) i0;

        $f1 = virtualinvoke r0.<androidx.ui.layout.AspectRatioModifier: float getAspectRatio()>();

        $f2 = $f0 * $f1;

        $i1 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f2);

        goto label2;

     label1:
        $i1 = virtualinvoke $r1.<androidx.ui.core.IntrinsicMeasureScope: int maxIntrinsicWidth(androidx.ui.core.IntrinsicMeasurable,int)>(r2, i0);

     label2:
        return $i1;
    }

    public int minIntrinsicHeight(androidx.ui.core.IntrinsicMeasureScope, androidx.ui.core.IntrinsicMeasurable, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.layout.AspectRatioModifier r0;
        androidx.ui.core.IntrinsicMeasureScope $r1;
        androidx.ui.core.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r3;
        float $f0, $f1, $f2;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        $r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.ui.core.IntrinsicMeasurable;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        if i0 == 2147483647 goto label1;

        $f0 = (float) i0;

        $f1 = virtualinvoke r0.<androidx.ui.layout.AspectRatioModifier: float getAspectRatio()>();

        $f2 = $f0 / $f1;

        $i1 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f2);

        goto label2;

     label1:
        $i1 = virtualinvoke $r1.<androidx.ui.core.IntrinsicMeasureScope: int minIntrinsicHeight(androidx.ui.core.IntrinsicMeasurable,int)>(r2, i0);

     label2:
        return $i1;
    }

    public int maxIntrinsicHeight(androidx.ui.core.IntrinsicMeasureScope, androidx.ui.core.IntrinsicMeasurable, int, androidx.ui.core.LayoutDirection)
    {
        androidx.ui.layout.AspectRatioModifier r0;
        androidx.ui.core.IntrinsicMeasureScope $r1;
        androidx.ui.core.IntrinsicMeasurable r2;
        int i0, $i1;
        androidx.ui.core.LayoutDirection r3;
        float $f0, $f1, $f2;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        $r1 := @parameter0: androidx.ui.core.IntrinsicMeasureScope;

        r2 := @parameter1: androidx.ui.core.IntrinsicMeasurable;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.ui.core.LayoutDirection;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurable");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "layoutDirection");

        if i0 == 2147483647 goto label1;

        $f0 = (float) i0;

        $f1 = virtualinvoke r0.<androidx.ui.layout.AspectRatioModifier: float getAspectRatio()>();

        $f2 = $f0 / $f1;

        $i1 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f2);

        goto label2;

     label1:
        $i1 = virtualinvoke $r1.<androidx.ui.core.IntrinsicMeasureScope: int maxIntrinsicHeight(androidx.ui.core.IntrinsicMeasurable,int)>(r2, i0);

     label2:
        return $i1;
    }

    private final androidx.ui.unit.IntSize findSizeWith(androidx.ui.core.Constraints, float)
    {
        androidx.ui.layout.AspectRatioModifier r0;
        androidx.ui.core.Constraints $r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        androidx.ui.unit.IntSize r2, $r3, r4, r5, r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        $r1 := @parameter0: androidx.ui.core.Constraints;

        f0 := @parameter1: float;

        i0 = virtualinvoke $r1.<androidx.ui.core.Constraints: int getMaxWidth()>();

        if i0 == 2147483647 goto label1;

        $f5 = (float) i0;

        $f6 = $f5 / f0;

        i2 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f6);

        if i2 <= 0 goto label1;

        r4 = staticinvoke <androidx.ui.unit.IntSizeKt: androidx.ui.unit.IntSize IntSize(int,int)>(i0, i2);

        $z3 = staticinvoke <androidx.ui.core.ConstraintsKt: boolean satisfiedBy(androidx.ui.core.Constraints,androidx.ui.unit.IntSize)>($r1, r4);

        if $z3 == 0 goto label1;

        return r4;

     label1:
        i3 = virtualinvoke $r1.<androidx.ui.core.Constraints: int getMaxHeight()>();

        if i3 == 2147483647 goto label2;

        $f3 = (float) i3;

        $f4 = $f3 * f0;

        i4 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f4);

        if i4 <= 0 goto label2;

        r5 = staticinvoke <androidx.ui.unit.IntSizeKt: androidx.ui.unit.IntSize IntSize(int,int)>(i4, i3);

        $z2 = staticinvoke <androidx.ui.core.ConstraintsKt: boolean satisfiedBy(androidx.ui.core.Constraints,androidx.ui.unit.IntSize)>($r1, r5);

        if $z2 == 0 goto label2;

        return r5;

     label2:
        i5 = virtualinvoke $r1.<androidx.ui.core.Constraints: int getMinWidth()>();

        $f7 = (float) i5;

        $f8 = $f7 / f0;

        i6 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f8);

        if i6 <= 0 goto label3;

        r6 = staticinvoke <androidx.ui.unit.IntSizeKt: androidx.ui.unit.IntSize IntSize(int,int)>(i5, i6);

        $z1 = staticinvoke <androidx.ui.core.ConstraintsKt: boolean satisfiedBy(androidx.ui.core.Constraints,androidx.ui.unit.IntSize)>($r1, r6);

        if $z1 == 0 goto label3;

        return r6;

     label3:
        i7 = virtualinvoke $r1.<androidx.ui.core.Constraints: int getMinHeight()>();

        $f1 = (float) i7;

        $f2 = $f1 * f0;

        i1 = staticinvoke <kotlin.math.MathKt: int roundToInt(float)>($f2);

        if i1 <= 0 goto label4;

        r2 = staticinvoke <androidx.ui.unit.IntSizeKt: androidx.ui.unit.IntSize IntSize(int,int)>(i1, i7);

        $z0 = staticinvoke <androidx.ui.core.ConstraintsKt: boolean satisfiedBy(androidx.ui.core.Constraints,androidx.ui.unit.IntSize)>($r1, r2);

        if $z0 == 0 goto label4;

        return r2;

     label4:
        $r3 = (androidx.ui.unit.IntSize) null;

        return $r3;
    }

    public java.lang.Object foldIn(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.ui.layout.AspectRatioModifier r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;
        androidx.ui.core.Modifier$Element r4;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        r4 = (androidx.ui.core.Modifier$Element) r0;

        $r3 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: java.lang.Object foldIn(androidx.ui.core.Modifier$Element,java.lang.Object,kotlin.jvm.functions.Function2)>(r4, r1, r2);

        return $r3;
    }

    public java.lang.Object foldOut(java.lang.Object, kotlin.jvm.functions.Function2)
    {
        androidx.ui.layout.AspectRatioModifier r0;
        java.lang.Object r1, $r3;
        kotlin.jvm.functions.Function2 r2;
        androidx.ui.core.Modifier$Element r4;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.jvm.functions.Function2;

        r4 = (androidx.ui.core.Modifier$Element) r0;

        $r3 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: java.lang.Object foldOut(androidx.ui.core.Modifier$Element,java.lang.Object,kotlin.jvm.functions.Function2)>(r4, r1, r2);

        return $r3;
    }

    public boolean all(kotlin.jvm.functions.Function1)
    {
        androidx.ui.layout.AspectRatioModifier r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;
        androidx.ui.core.Modifier$Element r2;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 = (androidx.ui.core.Modifier$Element) r0;

        $z0 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: boolean all(androidx.ui.core.Modifier$Element,kotlin.jvm.functions.Function1)>(r2, r1);

        return $z0;
    }

    public boolean any(kotlin.jvm.functions.Function1)
    {
        androidx.ui.layout.AspectRatioModifier r0;
        kotlin.jvm.functions.Function1 r1;
        boolean $z0;
        androidx.ui.core.Modifier$Element r2;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        r2 = (androidx.ui.core.Modifier$Element) r0;

        $z0 = staticinvoke <androidx.ui.core.Modifier$Element$DefaultImpls: boolean any(androidx.ui.core.Modifier$Element,kotlin.jvm.functions.Function1)>(r2, r1);

        return $z0;
    }

    public androidx.ui.core.Modifier plus(androidx.ui.core.Modifier)
    {
        androidx.ui.layout.AspectRatioModifier r0;
        androidx.ui.core.Modifier r1, $r2, r3;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        r1 := @parameter0: androidx.ui.core.Modifier;

        r3 = (androidx.ui.core.Modifier) r0;

        $r2 = staticinvoke <androidx.ui.core.Modifier$DefaultImpls: androidx.ui.core.Modifier plus(androidx.ui.core.Modifier,androidx.ui.core.Modifier)>(r3, r1);

        return $r2;
    }

    public final float component1()
    {
        androidx.ui.layout.AspectRatioModifier r0;
        float $f0;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        $f0 = r0.<androidx.ui.layout.AspectRatioModifier: float aspectRatio>;

        return $f0;
    }

    public final androidx.ui.layout.AspectRatioModifier copy(float)
    {
        androidx.ui.layout.AspectRatioModifier r0, $r1;
        float f0;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        f0 := @parameter0: float;

        $r1 = new androidx.ui.layout.AspectRatioModifier;

        specialinvoke $r1.<androidx.ui.layout.AspectRatioModifier: void <init>(float)>(f0);

        return $r1;
    }

    public static androidx.ui.layout.AspectRatioModifier copy$default(androidx.ui.layout.AspectRatioModifier, float, int, java.lang.Object)
    {
        androidx.ui.layout.AspectRatioModifier r0, $r2;
        int i0, $i1;
        java.lang.Object r1;
        float f0;

        r0 := @parameter0: androidx.ui.layout.AspectRatioModifier;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        f0 = r0.<androidx.ui.layout.AspectRatioModifier: float aspectRatio>;

     label1:
        $r2 = virtualinvoke r0.<androidx.ui.layout.AspectRatioModifier: androidx.ui.layout.AspectRatioModifier copy(float)>(f0);

        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.ui.layout.AspectRatioModifier r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        float $f0;
        java.lang.String $r5;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AspectRatioModifier(aspectRatio=");

        $f0 = r0.<androidx.ui.layout.AspectRatioModifier: float aspectRatio>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public int hashCode()
    {
        androidx.ui.layout.AspectRatioModifier r0;
        float $f0;
        int $i0;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        $f0 = r0.<androidx.ui.layout.AspectRatioModifier: float aspectRatio>;

        $i0 = staticinvoke <java.lang.Float: int hashCode(float)>($f0);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.ui.layout.AspectRatioModifier r0, r2;
        java.lang.Object r1, r3;
        boolean $z0, $z1;
        float $f0, $f1;
        java.lang.Float $r4, $r5;

        r0 := @this: androidx.ui.layout.AspectRatioModifier;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof androidx.ui.layout.AspectRatioModifier;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = r1;

        r2 = (androidx.ui.layout.AspectRatioModifier) r3;

        $f0 = r0.<androidx.ui.layout.AspectRatioModifier: float aspectRatio>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $f1 = r2.<androidx.ui.layout.AspectRatioModifier: float aspectRatio>;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

androidx.ui.layout.AspectRatioModifier$measure$1
<androidx.ui.layout.AspectRatioModifier$measure$1: androidx.ui.core.Placeable $placeable>
    void <init>(androidx.ui.core.Placeable)
    {
        androidx.ui.layout.AspectRatioModifier$measure$1 r0;
        androidx.ui.core.Placeable $r1;

        r0 := @this: androidx.ui.layout.AspectRatioModifier$measure$1;

        $r1 := @parameter0: androidx.ui.core.Placeable;

        r0.<androidx.ui.layout.AspectRatioModifier$measure$1: androidx.ui.core.Placeable $placeable> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.core.Placeable$PlacementScope)
    {
        androidx.ui.layout.AspectRatioModifier$measure$1 r0;
        androidx.ui.core.Placeable$PlacementScope r1;
        androidx.ui.core.Placeable $r2;

        r0 := @this: androidx.ui.layout.AspectRatioModifier$measure$1;

        r1 := @parameter0: androidx.ui.core.Placeable$PlacementScope;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<this>");

        $r2 = r0.<androidx.ui.layout.AspectRatioModifier$measure$1: androidx.ui.core.Placeable $placeable>;

        virtualinvoke r1.<androidx.ui.core.Placeable$PlacementScope: void place(androidx.ui.core.Placeable,int,int)>($r2, 0, 0);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.layout.AspectRatioModifier$measure$1 r0;
        java.lang.Object r1;
        androidx.ui.core.Placeable$PlacementScope $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.layout.AspectRatioModifier$measure$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.core.Placeable$PlacementScope) r1;

        virtualinvoke r0.<androidx.ui.layout.AspectRatioModifier$measure$1: void invoke(androidx.ui.core.Placeable$PlacementScope)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

