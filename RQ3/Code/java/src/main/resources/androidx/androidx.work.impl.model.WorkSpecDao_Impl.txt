androidx.work.impl.model.WorkSpecDao_Impl
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.EntityInsertionAdapter __insertionAdapterOfWorkSpec>
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.EntityDeletionOrUpdateAdapter __updateAdapterOfWorkSpec>
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfDelete>
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetState>
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementPeriodCount>
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetOutput>
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetLastEnqueuedTime>
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementWorkSpecRunAttemptCount>
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfResetWorkSpecRunAttemptCount>
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfMarkWorkSpecScheduled>
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfResetScheduledState>
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfPruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast>
<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementGeneration>
    public void <init>(androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.room.RoomDatabase r1;
        androidx.work.impl.model.WorkSpecDao_Impl$1 $r2;
        androidx.work.impl.model.WorkSpecDao_Impl$2 $r3;
        androidx.work.impl.model.WorkSpecDao_Impl$3 $r4;
        androidx.work.impl.model.WorkSpecDao_Impl$4 $r5;
        androidx.work.impl.model.WorkSpecDao_Impl$5 $r6;
        androidx.work.impl.model.WorkSpecDao_Impl$6 $r7;
        androidx.work.impl.model.WorkSpecDao_Impl$7 $r8;
        androidx.work.impl.model.WorkSpecDao_Impl$8 $r9;
        androidx.work.impl.model.WorkSpecDao_Impl$9 $r10;
        androidx.work.impl.model.WorkSpecDao_Impl$10 $r11;
        androidx.work.impl.model.WorkSpecDao_Impl$11 $r12;
        androidx.work.impl.model.WorkSpecDao_Impl$12 $r13;
        androidx.work.impl.model.WorkSpecDao_Impl$13 $r14;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: androidx.room.RoomDatabase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db> = r1;

        $r2 = new androidx.work.impl.model.WorkSpecDao_Impl$1;

        specialinvoke $r2.<androidx.work.impl.model.WorkSpecDao_Impl$1: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.EntityInsertionAdapter __insertionAdapterOfWorkSpec> = $r2;

        $r3 = new androidx.work.impl.model.WorkSpecDao_Impl$2;

        specialinvoke $r3.<androidx.work.impl.model.WorkSpecDao_Impl$2: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.EntityDeletionOrUpdateAdapter __updateAdapterOfWorkSpec> = $r3;

        $r4 = new androidx.work.impl.model.WorkSpecDao_Impl$3;

        specialinvoke $r4.<androidx.work.impl.model.WorkSpecDao_Impl$3: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfDelete> = $r4;

        $r5 = new androidx.work.impl.model.WorkSpecDao_Impl$4;

        specialinvoke $r5.<androidx.work.impl.model.WorkSpecDao_Impl$4: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetState> = $r5;

        $r6 = new androidx.work.impl.model.WorkSpecDao_Impl$5;

        specialinvoke $r6.<androidx.work.impl.model.WorkSpecDao_Impl$5: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementPeriodCount> = $r6;

        $r7 = new androidx.work.impl.model.WorkSpecDao_Impl$6;

        specialinvoke $r7.<androidx.work.impl.model.WorkSpecDao_Impl$6: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetOutput> = $r7;

        $r8 = new androidx.work.impl.model.WorkSpecDao_Impl$7;

        specialinvoke $r8.<androidx.work.impl.model.WorkSpecDao_Impl$7: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetLastEnqueuedTime> = $r8;

        $r9 = new androidx.work.impl.model.WorkSpecDao_Impl$8;

        specialinvoke $r9.<androidx.work.impl.model.WorkSpecDao_Impl$8: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementWorkSpecRunAttemptCount> = $r9;

        $r10 = new androidx.work.impl.model.WorkSpecDao_Impl$9;

        specialinvoke $r10.<androidx.work.impl.model.WorkSpecDao_Impl$9: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfResetWorkSpecRunAttemptCount> = $r10;

        $r11 = new androidx.work.impl.model.WorkSpecDao_Impl$10;

        specialinvoke $r11.<androidx.work.impl.model.WorkSpecDao_Impl$10: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfMarkWorkSpecScheduled> = $r11;

        $r12 = new androidx.work.impl.model.WorkSpecDao_Impl$11;

        specialinvoke $r12.<androidx.work.impl.model.WorkSpecDao_Impl$11: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfResetScheduledState> = $r12;

        $r13 = new androidx.work.impl.model.WorkSpecDao_Impl$12;

        specialinvoke $r13.<androidx.work.impl.model.WorkSpecDao_Impl$12: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfPruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast> = $r13;

        $r14 = new androidx.work.impl.model.WorkSpecDao_Impl$13;

        specialinvoke $r14.<androidx.work.impl.model.WorkSpecDao_Impl$13: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>(r0, r1);

        r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementGeneration> = $r14;

        return;
    }

    public void insertWorkSpec(androidx.work.impl.model.WorkSpec)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.impl.model.WorkSpec r1;
        java.lang.Throwable r2, $r8;
        androidx.room.RoomDatabase $r3, $r4, $r6, $r7, $r9;
        androidx.room.EntityInsertionAdapter $r5;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: androidx.work.impl.model.WorkSpec;

        $r3 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r3.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r4.<androidx.room.RoomDatabase: void beginTransaction()>();

     label1:
        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.EntityInsertionAdapter __insertionAdapterOfWorkSpec>;

        virtualinvoke $r5.<androidx.room.EntityInsertionAdapter: void insert(java.lang.Object)>(r1);

        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

     label2:
        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void endTransaction()>();

        goto label4;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r9.<androidx.room.RoomDatabase: void endTransaction()>();

        throw r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void updateWorkSpec(androidx.work.impl.model.WorkSpec)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.impl.model.WorkSpec r1;
        java.lang.Throwable r2, $r8;
        androidx.room.RoomDatabase $r3, $r4, $r6, $r7, $r9;
        androidx.room.EntityDeletionOrUpdateAdapter $r5;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: androidx.work.impl.model.WorkSpec;

        $r3 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r3.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r4.<androidx.room.RoomDatabase: void beginTransaction()>();

     label1:
        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.EntityDeletionOrUpdateAdapter __updateAdapterOfWorkSpec>;

        virtualinvoke $r5.<androidx.room.EntityDeletionOrUpdateAdapter: int handle(java.lang.Object)>(r1);

        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

     label2:
        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void endTransaction()>();

        goto label4;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r9.<androidx.room.RoomDatabase: void endTransaction()>();

        throw r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void delete(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1;
        androidx.sqlite.db.SupportSQLiteStatement r2;
        byte b0;
        java.lang.Throwable r3, $r10;
        androidx.room.RoomDatabase $r4, $r6, $r7, $r8, $r11;
        androidx.room.SharedSQLiteStatement $r5, $r9, $r12;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r4.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfDelete>;

        r2 = virtualinvoke $r5.<androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

        b0 = 1;

        if r1 != null goto label1;

        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(b0);

        goto label2;

     label1:
        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(b0, r1);

     label2:
        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void beginTransaction()>();

     label3:
        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

     label4:
        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r8.<androidx.room.RoomDatabase: void endTransaction()>();

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfDelete>;

        virtualinvoke $r9.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        goto label7;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

     label6:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r11.<androidx.room.RoomDatabase: void endTransaction()>();

        $r12 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfDelete>;

        virtualinvoke $r12.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int setState(androidx.work.WorkInfo$State, java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.WorkInfo$State r1;
        java.lang.String r2;
        androidx.sqlite.db.SupportSQLiteStatement r3;
        int i0, i1, i2;
        java.lang.Throwable r4, $r12;
        androidx.room.RoomDatabase $r5, $r8, $r9, $r10, $r13;
        androidx.room.SharedSQLiteStatement $r6, $r11, $r14;
        androidx.work.impl.model.WorkTypeConverters $r7;
        long $l3;
        byte b4, b5;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: androidx.work.WorkInfo$State;

        r2 := @parameter1: java.lang.String;

        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r5.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetState>;

        r3 = virtualinvoke $r6.<androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

        b4 = 1;

        $r7 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        i0 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: int stateToInt(androidx.work.WorkInfo$State)>(r1);

        $l3 = (long) i0;

        interfaceinvoke r3.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(b4, $l3);

        b5 = 2;

        if r2 != null goto label1;

        interfaceinvoke r3.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(b5);

        goto label2;

     label1:
        interfaceinvoke r3.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(b5, r2);

     label2:
        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r8.<androidx.room.RoomDatabase: void beginTransaction()>();

     label3:
        i1 = interfaceinvoke r3.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r9.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

        i2 = i1;

     label4:
        $r10 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r10.<androidx.room.RoomDatabase: void endTransaction()>();

        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetState>;

        virtualinvoke $r11.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r3);

        return i2;

     label5:
        $r12 := @caughtexception;

        r4 = $r12;

     label6:
        $r13 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r13.<androidx.room.RoomDatabase: void endTransaction()>();

        $r14 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetState>;

        virtualinvoke $r14.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r3);

        throw r4;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void incrementPeriodCount(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1;
        androidx.sqlite.db.SupportSQLiteStatement r2;
        byte b0;
        java.lang.Throwable r3, $r10;
        androidx.room.RoomDatabase $r4, $r6, $r7, $r8, $r11;
        androidx.room.SharedSQLiteStatement $r5, $r9, $r12;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r4.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementPeriodCount>;

        r2 = virtualinvoke $r5.<androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

        b0 = 1;

        if r1 != null goto label1;

        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(b0);

        goto label2;

     label1:
        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(b0, r1);

     label2:
        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void beginTransaction()>();

     label3:
        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

     label4:
        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r8.<androidx.room.RoomDatabase: void endTransaction()>();

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementPeriodCount>;

        virtualinvoke $r9.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        goto label7;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

     label6:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r11.<androidx.room.RoomDatabase: void endTransaction()>();

        $r12 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementPeriodCount>;

        virtualinvoke $r12.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setOutput(java.lang.String, androidx.work.Data)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1;
        androidx.work.Data r2;
        androidx.sqlite.db.SupportSQLiteStatement r3;
        byte[] r4;
        java.lang.Throwable r5, $r12;
        androidx.room.RoomDatabase $r6, $r8, $r9, $r10, $r13;
        androidx.room.SharedSQLiteStatement $r7, $r11, $r14;
        byte b1, b2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.work.Data;

        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetOutput>;

        r3 = virtualinvoke $r7.<androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

        b1 = 1;

        r4 = staticinvoke <androidx.work.Data: byte[] toByteArrayInternal(androidx.work.Data)>(r2);

        if r4 != null goto label1;

        interfaceinvoke r3.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(b1);

        goto label2;

     label1:
        interfaceinvoke r3.<androidx.sqlite.db.SupportSQLiteStatement: void bindBlob(int,byte[])>(b1, r4);

     label2:
        b2 = 2;

        if r1 != null goto label3;

        interfaceinvoke r3.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(b2);

        goto label4;

     label3:
        interfaceinvoke r3.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(b2, r1);

     label4:
        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r8.<androidx.room.RoomDatabase: void beginTransaction()>();

     label5:
        interfaceinvoke r3.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r9.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

     label6:
        $r10 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r10.<androidx.room.RoomDatabase: void endTransaction()>();

        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetOutput>;

        virtualinvoke $r11.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r3);

        goto label9;

     label7:
        $r12 := @caughtexception;

        r5 = $r12;

     label8:
        $r13 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r13.<androidx.room.RoomDatabase: void endTransaction()>();

        $r14 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetOutput>;

        virtualinvoke $r14.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r3);

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void setLastEnqueuedTime(java.lang.String, long)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1;
        long l0;
        androidx.sqlite.db.SupportSQLiteStatement r2;
        java.lang.Throwable r3, $r10;
        androidx.room.RoomDatabase $r4, $r6, $r7, $r8, $r11;
        androidx.room.SharedSQLiteStatement $r5, $r9, $r12;
        byte b2, b3;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r4.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetLastEnqueuedTime>;

        r2 = virtualinvoke $r5.<androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

        b2 = 1;

        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(b2, l0);

        b3 = 2;

        if r1 != null goto label1;

        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(b3);

        goto label2;

     label1:
        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(b3, r1);

     label2:
        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void beginTransaction()>();

     label3:
        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

     label4:
        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r8.<androidx.room.RoomDatabase: void endTransaction()>();

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetLastEnqueuedTime>;

        virtualinvoke $r9.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        goto label7;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

     label6:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r11.<androidx.room.RoomDatabase: void endTransaction()>();

        $r12 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfSetLastEnqueuedTime>;

        virtualinvoke $r12.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int incrementWorkSpecRunAttemptCount(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1;
        androidx.sqlite.db.SupportSQLiteStatement r2;
        byte b0;
        int i1, i2;
        java.lang.Throwable r3, $r10;
        androidx.room.RoomDatabase $r4, $r6, $r7, $r8, $r11;
        androidx.room.SharedSQLiteStatement $r5, $r9, $r12;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r4.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementWorkSpecRunAttemptCount>;

        r2 = virtualinvoke $r5.<androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

        b0 = 1;

        if r1 != null goto label1;

        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(b0);

        goto label2;

     label1:
        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(b0, r1);

     label2:
        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void beginTransaction()>();

     label3:
        i1 = interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

        i2 = i1;

     label4:
        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r8.<androidx.room.RoomDatabase: void endTransaction()>();

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementWorkSpecRunAttemptCount>;

        virtualinvoke $r9.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        return i2;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

     label6:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r11.<androidx.room.RoomDatabase: void endTransaction()>();

        $r12 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementWorkSpecRunAttemptCount>;

        virtualinvoke $r12.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        throw r3;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int resetWorkSpecRunAttemptCount(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1;
        androidx.sqlite.db.SupportSQLiteStatement r2;
        byte b0;
        int i1, i2;
        java.lang.Throwable r3, $r10;
        androidx.room.RoomDatabase $r4, $r6, $r7, $r8, $r11;
        androidx.room.SharedSQLiteStatement $r5, $r9, $r12;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r4.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfResetWorkSpecRunAttemptCount>;

        r2 = virtualinvoke $r5.<androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

        b0 = 1;

        if r1 != null goto label1;

        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(b0);

        goto label2;

     label1:
        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(b0, r1);

     label2:
        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void beginTransaction()>();

     label3:
        i1 = interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

        i2 = i1;

     label4:
        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r8.<androidx.room.RoomDatabase: void endTransaction()>();

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfResetWorkSpecRunAttemptCount>;

        virtualinvoke $r9.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        return i2;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

     label6:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r11.<androidx.room.RoomDatabase: void endTransaction()>();

        $r12 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfResetWorkSpecRunAttemptCount>;

        virtualinvoke $r12.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        throw r3;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int markWorkSpecScheduled(java.lang.String, long)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1;
        long l0;
        androidx.sqlite.db.SupportSQLiteStatement r2;
        int i1, i2;
        java.lang.Throwable r3, $r10;
        androidx.room.RoomDatabase $r4, $r6, $r7, $r8, $r11;
        androidx.room.SharedSQLiteStatement $r5, $r9, $r12;
        byte b3, b4;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r4.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfMarkWorkSpecScheduled>;

        r2 = virtualinvoke $r5.<androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

        b3 = 1;

        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(b3, l0);

        b4 = 2;

        if r1 != null goto label1;

        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(b4);

        goto label2;

     label1:
        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(b4, r1);

     label2:
        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void beginTransaction()>();

     label3:
        i1 = interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

        i2 = i1;

     label4:
        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r8.<androidx.room.RoomDatabase: void endTransaction()>();

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfMarkWorkSpecScheduled>;

        virtualinvoke $r9.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        return i2;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

     label6:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r11.<androidx.room.RoomDatabase: void endTransaction()>();

        $r12 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfMarkWorkSpecScheduled>;

        virtualinvoke $r12.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        throw r3;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int resetScheduledState()
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.sqlite.db.SupportSQLiteStatement r1;
        int i0, i1;
        java.lang.Throwable r2, $r9;
        androidx.room.RoomDatabase $r3, $r5, $r6, $r7, $r10;
        androidx.room.SharedSQLiteStatement $r4, $r8, $r11;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        $r3 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r3.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfResetScheduledState>;

        r1 = virtualinvoke $r4.<androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r5.<androidx.room.RoomDatabase: void beginTransaction()>();

     label1:
        i0 = interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

        i1 = i0;

     label2:
        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void endTransaction()>();

        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfResetScheduledState>;

        virtualinvoke $r8.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r1);

        return i1;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

     label4:
        $r10 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r10.<androidx.room.RoomDatabase: void endTransaction()>();

        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfResetScheduledState>;

        virtualinvoke $r11.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r1);

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void pruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast()
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.sqlite.db.SupportSQLiteStatement r1;
        java.lang.Throwable r2, $r9;
        androidx.room.RoomDatabase $r3, $r5, $r6, $r7, $r10;
        androidx.room.SharedSQLiteStatement $r4, $r8, $r11;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        $r3 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r3.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfPruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast>;

        r1 = virtualinvoke $r4.<androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r5.<androidx.room.RoomDatabase: void beginTransaction()>();

     label1:
        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

     label2:
        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void endTransaction()>();

        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfPruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast>;

        virtualinvoke $r8.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r1);

        goto label4;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r10.<androidx.room.RoomDatabase: void endTransaction()>();

        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfPruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast>;

        virtualinvoke $r11.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r1);

        throw r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void incrementGeneration(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1;
        androidx.sqlite.db.SupportSQLiteStatement r2;
        byte b0;
        java.lang.Throwable r3, $r10;
        androidx.room.RoomDatabase $r4, $r6, $r7, $r8, $r11;
        androidx.room.SharedSQLiteStatement $r5, $r9, $r12;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r4.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementGeneration>;

        r2 = virtualinvoke $r5.<androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()>();

        b0 = 1;

        if r1 != null goto label1;

        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(b0);

        goto label2;

     label1:
        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(b0, r1);

     label2:
        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void beginTransaction()>();

     label3:
        interfaceinvoke r2.<androidx.sqlite.db.SupportSQLiteStatement: int executeUpdateDelete()>();

        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

     label4:
        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r8.<androidx.room.RoomDatabase: void endTransaction()>();

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementGeneration>;

        virtualinvoke $r9.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        goto label7;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

     label6:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r11.<androidx.room.RoomDatabase: void endTransaction()>();

        $r12 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementGeneration>;

        virtualinvoke $r12.<androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)>(r2);

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public androidx.work.impl.model.WorkSpec getWorkSpec(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r2, r24, r25, r26;
        androidx.room.RoomSQLiteQuery r3;
        byte b0;
        android.database.Cursor r4;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i32, i33, i38, i39, i40, i41, i42, i43, i44, i45, i46;
        androidx.work.WorkInfo$State r5;
        androidx.work.Data r6, r7;
        long l29, l30, l31, l34, l35, l36, l37, l47, l48;
        androidx.work.BackoffPolicy r8;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        androidx.work.OutOfQuotaPolicy r9;
        androidx.work.Constraints r10, $r21;
        androidx.work.NetworkType r11;
        java.util.Set r12;
        java.lang.Throwable r13, $r23;
        androidx.room.RoomDatabase $r14, $r15;
        androidx.work.impl.model.WorkTypeConverters $r16, $r17, $r18, $r19, $r20;
        androidx.work.impl.model.WorkSpec $r22, r30, r31;
        byte[] r27, r28, r29;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = "SELECT * FROM workspec WHERE id=?";

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT * FROM workspec WHERE id=?", 1);

        b0 = 1;

        if r1 != null goto label01;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(b0);

        goto label02;

     label01:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(b0, r1);

     label02:
        $r14 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r14.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r15 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r4 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r15, r3, 0, null);

     label03:
        i1 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "id");

        i2 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "state");

        i3 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "worker_class_name");

        i4 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "input_merger_class_name");

        i5 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "input");

        i6 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "output");

        i7 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "initial_delay");

        i8 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "interval_duration");

        i9 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "flex_duration");

        i10 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "run_attempt_count");

        i11 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "backoff_policy");

        i12 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "backoff_delay_duration");

        i13 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "last_enqueue_time");

        i14 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "minimum_retention_duration");

        i15 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "schedule_requested_at");

        i16 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "run_in_foreground");

        i17 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "out_of_quota_policy");

        i18 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "period_count");

        i19 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "generation");

        i20 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "required_network_type");

        i21 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "requires_charging");

        i22 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "requires_device_idle");

        i23 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "requires_battery_not_low");

        i24 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "requires_storage_not_low");

        i25 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "trigger_content_update_delay");

        i26 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "trigger_max_content_delay");

        i27 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r4, "content_uri_triggers");

        $z5 = interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z5 == 0 goto label26;

        $z6 = interfaceinvoke r4.<android.database.Cursor: boolean isNull(int)>(i1);

        if $z6 == 0 goto label04;

        r24 = null;

        goto label05;

     label04:
        r24 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(i1);

     label05:
        i28 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(i2);

        $r16 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r5 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i28);

        $z7 = interfaceinvoke r4.<android.database.Cursor: boolean isNull(int)>(i3);

        if $z7 == 0 goto label06;

        r25 = null;

        goto label07;

     label06:
        r25 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(i3);

     label07:
        $z8 = interfaceinvoke r4.<android.database.Cursor: boolean isNull(int)>(i4);

        if $z8 == 0 goto label08;

        r26 = null;

        goto label09;

     label08:
        r26 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(i4);

     label09:
        $z9 = interfaceinvoke r4.<android.database.Cursor: boolean isNull(int)>(i5);

        if $z9 == 0 goto label10;

        r27 = null;

        goto label11;

     label10:
        r27 = interfaceinvoke r4.<android.database.Cursor: byte[] getBlob(int)>(i5);

     label11:
        r6 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r27);

        $z10 = interfaceinvoke r4.<android.database.Cursor: boolean isNull(int)>(i6);

        if $z10 == 0 goto label12;

        r28 = null;

        goto label13;

     label12:
        r28 = interfaceinvoke r4.<android.database.Cursor: byte[] getBlob(int)>(i6);

     label13:
        r7 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r28);

        l29 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(i7);

        l30 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(i8);

        l31 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(i9);

        i32 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(i10);

        i33 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(i11);

        $r17 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r8 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.BackoffPolicy intToBackoffPolicy(int)>(i33);

        l34 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(i12);

        l35 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(i13);

        l36 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(i14);

        l37 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(i15);

        i38 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(i16);

        if i38 == 0 goto label14;

        $z12 = 1;

        goto label15;

     label14:
        $z12 = 0;

     label15:
        z0 = $z12;

        i39 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(i17);

        $r18 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r9 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.OutOfQuotaPolicy intToOutOfQuotaPolicy(int)>(i39);

        i40 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(i18);

        i41 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(i19);

        i42 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(i20);

        $r19 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r11 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.NetworkType intToNetworkType(int)>(i42);

        i43 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(i21);

        if i43 == 0 goto label16;

        $z13 = 1;

        goto label17;

     label16:
        $z13 = 0;

     label17:
        z1 = $z13;

        i44 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(i22);

        if i44 == 0 goto label18;

        $z14 = 1;

        goto label19;

     label18:
        $z14 = 0;

     label19:
        z2 = $z14;

        i45 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(i23);

        if i45 == 0 goto label20;

        $z15 = 1;

        goto label21;

     label20:
        $z15 = 0;

     label21:
        z3 = $z15;

        i46 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(i24);

        if i46 == 0 goto label22;

        $z16 = 1;

        goto label23;

     label22:
        $z16 = 0;

     label23:
        z4 = $z16;

        l47 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(i25);

        l48 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(i26);

        $z11 = interfaceinvoke r4.<android.database.Cursor: boolean isNull(int)>(i27);

        if $z11 == 0 goto label24;

        r29 = null;

        goto label25;

     label24:
        r29 = interfaceinvoke r4.<android.database.Cursor: byte[] getBlob(int)>(i27);

     label25:
        $r20 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r12 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: java.util.Set byteArrayToSetOfTriggers(byte[])>(r29);

        $r21 = new androidx.work.Constraints;

        specialinvoke $r21.<androidx.work.Constraints: void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean,long,long,java.util.Set)>(r11, z1, z2, z3, z4, l47, l48, r12);

        r10 = $r21;

        $r22 = new androidx.work.impl.model.WorkSpec;

        specialinvoke $r22.<androidx.work.impl.model.WorkSpec: void <init>(java.lang.String,androidx.work.WorkInfo$State,java.lang.String,java.lang.String,androidx.work.Data,androidx.work.Data,long,long,long,androidx.work.Constraints,int,androidx.work.BackoffPolicy,long,long,long,long,boolean,androidx.work.OutOfQuotaPolicy,int,int)>(r24, r5, r25, r26, r6, r7, l29, l30, l31, r10, i32, r8, l34, l35, l36, l37, z0, r9, i40, i41);

        r30 = $r22;

        goto label27;

     label26:
        r30 = null;

     label27:
        r31 = r30;

     label28:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        return r31;

     label29:
        $r23 := @caughtexception;

        r13 = $r23;

     label30:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r13;

        catch java.lang.Throwable from label03 to label28 with label29;
        catch java.lang.Throwable from label29 to label30 with label29;
    }

    public java.util.List getWorkSpecIdAndStatesForName(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r2, r14;
        androidx.room.RoomSQLiteQuery r3;
        byte b0;
        android.database.Cursor r4;
        boolean z0, z1, $z2, $z4;
        java.util.ArrayList r5, $r10, r16;
        androidx.work.WorkInfo$State r6;
        int i1, $i2;
        java.lang.Throwable r7, $r13;
        androidx.room.RoomDatabase $r8, $r9;
        androidx.work.impl.model.WorkTypeConverters $r11;
        androidx.work.impl.model.WorkSpec$IdAndState $r12, r15;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = "SELECT id, state FROM workspec WHERE id IN (SELECT work_spec_id FROM workname WHERE name=?)";

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT id, state FROM workspec WHERE id IN (SELECT work_spec_id FROM workname WHERE name=?)", 1);

        b0 = 1;

        if r1 != null goto label01;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(b0);

        goto label02;

     label01:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(b0, r1);

     label02:
        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r8.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r4 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r9, r3, 0, null);

     label03:
        z0 = 0;

        z1 = 1;

        $r10 = new java.util.ArrayList;

        $i2 = interfaceinvoke r4.<android.database.Cursor: int getCount()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i2);

        r5 = $r10;

     label04:
        $z4 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z4 == 0 goto label07;

        $z2 = interfaceinvoke r4.<android.database.Cursor: boolean isNull(int)>(0);

        if $z2 == 0 goto label05;

        r14 = null;

        goto label06;

     label05:
        r14 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(0);

     label06:
        i1 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(1);

        $r11 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r6 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i1);

        $r12 = new androidx.work.impl.model.WorkSpec$IdAndState;

        specialinvoke $r12.<androidx.work.impl.model.WorkSpec$IdAndState: void <init>(java.lang.String,androidx.work.WorkInfo$State)>(r14, r6);

        r15 = $r12;

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r15);

        goto label04;

     label07:
        r16 = r5;

     label08:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        return r16;

     label09:
        $r13 := @caughtexception;

        r7 = $r13;

     label10:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r7;

        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.util.List getAllWorkSpecIds()
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r10;
        androidx.room.RoomSQLiteQuery r2;
        android.database.Cursor r3;
        java.util.ArrayList r4, $r8, r11;
        java.lang.Throwable r5, $r9;
        androidx.room.RoomDatabase $r6, $r7;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 = "SELECT id FROM workspec";

        r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT id FROM workspec", 0);

        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r3 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r7, r2, 0, null);

     label1:
        $r8 = new java.util.ArrayList;

        $i0 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = $r8;

     label2:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label5;

        $z1 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(0);

        if $z1 == 0 goto label3;

        r10 = null;

        goto label4;

     label3:
        r10 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

     label4:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10);

        goto label2;

     label5:
        r11 = r4;

     label6:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        return r11;

     label7:
        $r9 := @caughtexception;

        r5 = $r9;

     label8:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r5;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public androidx.lifecycle.LiveData getAllWorkSpecIdsLiveData()
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1;
        androidx.room.RoomSQLiteQuery r2;
        androidx.room.RoomDatabase $r3;
        androidx.room.InvalidationTracker $r4;
        java.lang.String[] $r5;
        androidx.work.impl.model.WorkSpecDao_Impl$14 $r6;
        androidx.lifecycle.LiveData $r7;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 = "SELECT id FROM workspec";

        r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT id FROM workspec", 0);

        $r3 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        $r4 = virtualinvoke $r3.<androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()>();

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "workspec";

        $r6 = new androidx.work.impl.model.WorkSpecDao_Impl$14;

        specialinvoke $r6.<androidx.work.impl.model.WorkSpecDao_Impl$14: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomSQLiteQuery)>(r0, r2);

        $r7 = virtualinvoke $r4.<androidx.room.InvalidationTracker: androidx.lifecycle.LiveData createLiveData(java.lang.String[],boolean,java.util.concurrent.Callable)>($r5, 1, $r6);

        return $r7;
    }

    public androidx.work.WorkInfo$State getState(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r2;
        androidx.room.RoomSQLiteQuery r3;
        byte b0;
        android.database.Cursor r4;
        java.lang.Throwable r5, $r9;
        androidx.room.RoomDatabase $r6, $r7;
        boolean $z0, $z1;
        int $i1, $i2;
        androidx.work.impl.model.WorkTypeConverters $r8;
        java.lang.Integer r10;
        androidx.work.WorkInfo$State r11, r12;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = "SELECT state FROM workspec WHERE id=?";

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT state FROM workspec WHERE id=?", 1);

        b0 = 1;

        if r1 != null goto label01;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(b0);

        goto label02;

     label01:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(b0, r1);

     label02:
        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r4 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r7, r3, 0, null);

     label03:
        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label08;

        $z1 = interfaceinvoke r4.<android.database.Cursor: boolean isNull(int)>(0);

        if $z1 == 0 goto label04;

        r10 = null;

        goto label05;

     label04:
        $i1 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>(0);

        r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label05:
        if r10 != null goto label06;

        r11 = null;

        goto label07;

     label06:
        $r8 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        $i2 = virtualinvoke r10.<java.lang.Integer: int intValue()>();

        r11 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>($i2);

     label07:
        goto label09;

     label08:
        r11 = null;

     label09:
        r12 = r11;

     label10:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        return r12;

     label11:
        $r9 := @caughtexception;

        r5 = $r9;

     label12:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r5;

        catch java.lang.Throwable from label03 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public androidx.work.impl.model.WorkSpec$WorkInfoPojo getWorkStatusPojoForId(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r7, r8, r31, r34, r37;
        androidx.room.RoomSQLiteQuery r2;
        android.database.Cursor r3;
        androidx.collection.ArrayMap r4, r5, $r14, $r15;
        androidx.work.Data r6;
        int i0, i1, i2;
        java.lang.Throwable r9, r10, $r28, $r29;
        androidx.room.RoomDatabase $r11, $r12, $r13, $r16, $r17, $r30;
        boolean $z0, $z1, $z2, $z3;
        androidx.work.impl.model.WorkTypeConverters $r18;
        java.lang.Object $r19, $r20, $r24, $r25;
        androidx.work.impl.model.WorkSpec$WorkInfoPojo $r21, r42, r43;
        java.util.ArrayList $r22, $r23, $r26, $r27, r32, r33, r35, r36, r40, r41;
        androidx.work.WorkInfo$State r38;
        byte[] r39;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT id, state, output, run_attempt_count, generation FROM workspec WHERE id=?", 1);

        if r1 != null goto label01;

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(1);

        goto label02;

     label01:
        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(1, r1);

     label02:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r11.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r12 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r12.<androidx.room.RoomDatabase: void beginTransaction()>();

     label03:
        $r13 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r3 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r13, r2, 1, null);

     label04:
        $r14 = new androidx.collection.ArrayMap;

        specialinvoke $r14.<androidx.collection.ArrayMap: void <init>()>();

        r4 = $r14;

        $r15 = new androidx.collection.ArrayMap;

        specialinvoke $r15.<androidx.collection.ArrayMap: void <init>()>();

        r5 = $r15;

     label05:
        $z3 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z3 == 0 goto label08;

        r31 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r24 = virtualinvoke r4.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r31);

        r32 = (java.util.ArrayList) $r24;

        if r32 != null goto label06;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r33 = $r27;

        virtualinvoke r4.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, r33);

     label06:
        r34 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r25 = virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r34);

        r35 = (java.util.ArrayList) $r25;

        if r35 != null goto label07;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        r36 = $r26;

        virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r34, r36);

     label07:
        goto label05;

     label08:
        interfaceinvoke r3.<android.database.Cursor: boolean moveToPosition(int)>(-1);

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)>(r4);

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)>(r5);

        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label15;

        $z1 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(0);

        if $z1 == 0 goto label09;

        r37 = null;

        goto label10;

     label09:
        r37 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

     label10:
        i2 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(1);

        $r18 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r38 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i2);

        $z2 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(2);

        if $z2 == 0 goto label11;

        r39 = null;

        goto label12;

     label11:
        r39 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(2);

     label12:
        r6 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r39);

        i0 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(3);

        i1 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(4);

        r7 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r19 = virtualinvoke r4.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r40 = (java.util.ArrayList) $r19;

        if r40 != null goto label13;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r40 = $r23;

     label13:
        r8 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r20 = virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r41 = (java.util.ArrayList) $r20;

        if r41 != null goto label14;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r41 = $r22;

     label14:
        $r21 = new androidx.work.impl.model.WorkSpec$WorkInfoPojo;

        specialinvoke $r21.<androidx.work.impl.model.WorkSpec$WorkInfoPojo: void <init>(java.lang.String,androidx.work.WorkInfo$State,androidx.work.Data,int,int,java.util.List,java.util.List)>(r37, r38, r6, i0, i1, r40, r41);

        r42 = $r21;

        goto label16;

     label15:
        r42 = null;

     label16:
        $r16 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r16.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

        r43 = r42;

     label17:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

     label18:
        $r17 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r17.<androidx.room.RoomDatabase: void endTransaction()>();

        return r43;

     label19:
        $r28 := @caughtexception;

        r9 = $r28;

     label20:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r9;

     label21:
        $r29 := @caughtexception;

        r10 = $r29;

     label22:
        $r30 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r30.<androidx.room.RoomDatabase: void endTransaction()>();

        throw r10;

        catch java.lang.Throwable from label04 to label17 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label03 to label18 with label21;
        catch java.lang.Throwable from label19 to label22 with label21;
    }

    public java.util.List getWorkStatusPojoForIds(java.util.List)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.util.List r1;
        java.lang.StringBuilder r2;
        int i0, i1, i2, i3, i4, $i5, i6;
        java.lang.String r3, r8, r9, r35, r37, r40, r44;
        androidx.room.RoomSQLiteQuery r4;
        androidx.collection.ArrayMap r5, r6, $r15, $r16;
        androidx.work.Data r7;
        java.lang.Throwable r10, r11, $r31, $r32;
        boolean $z0, $z1, $z2, $z3, $z4;
        androidx.room.RoomDatabase $r12, $r13, $r14, $r18, $r19, $r33;
        java.util.ArrayList $r17, $r24, $r25, $r28, $r29, r38, r39, r41, r42, r43, r47, r48, r50;
        androidx.work.impl.model.WorkTypeConverters $r20;
        java.lang.Object $r21, $r22, $r26, $r27, $r30;
        androidx.work.impl.model.WorkSpec$WorkInfoPojo $r23, r49;
        java.util.Iterator r34;
        android.database.Cursor r36;
        androidx.work.WorkInfo$State r45;
        byte[] r46;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.util.List;

        r2 = staticinvoke <androidx.room.util.StringUtil: java.lang.StringBuilder newStringBuilder()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT id, state, output, run_attempt_count, generation FROM workspec WHERE id IN (");

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        staticinvoke <androidx.room.util.StringUtil: void appendPlaceholders(java.lang.StringBuilder,int)>(r2, i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = 0 + i0;

        r4 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>(r3, i1);

        i6 = 1;

        r34 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r30 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r35 = (java.lang.String) $r30;

        if r35 != null goto label02;

        virtualinvoke r4.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(i6);

        goto label03;

     label02:
        virtualinvoke r4.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(i6, r35);

     label03:
        i6 = i6 + 1;

        goto label01;

     label04:
        $r12 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r12.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r13 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r13.<androidx.room.RoomDatabase: void beginTransaction()>();

     label05:
        $r14 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r36 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r14, r4, 1, null);

     label06:
        $r15 = new androidx.collection.ArrayMap;

        specialinvoke $r15.<androidx.collection.ArrayMap: void <init>()>();

        r5 = $r15;

        $r16 = new androidx.collection.ArrayMap;

        specialinvoke $r16.<androidx.collection.ArrayMap: void <init>()>();

        r6 = $r16;

     label07:
        $z1 = interfaceinvoke r36.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label10;

        r37 = interfaceinvoke r36.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r26 = virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r37);

        r38 = (java.util.ArrayList) $r26;

        if r38 != null goto label08;

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        r39 = $r29;

        virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r37, r39);

     label08:
        r40 = interfaceinvoke r36.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r27 = virtualinvoke r6.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r40);

        r41 = (java.util.ArrayList) $r27;

        if r41 != null goto label09;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r42 = $r28;

        virtualinvoke r6.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r40, r42);

     label09:
        goto label07;

     label10:
        interfaceinvoke r36.<android.database.Cursor: boolean moveToPosition(int)>(-1);

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)>(r5);

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)>(r6);

        $r17 = new java.util.ArrayList;

        $i5 = interfaceinvoke r36.<android.database.Cursor: int getCount()>();

        specialinvoke $r17.<java.util.ArrayList: void <init>(int)>($i5);

        r43 = $r17;

     label11:
        $z2 = interfaceinvoke r36.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label18;

        $z3 = interfaceinvoke r36.<android.database.Cursor: boolean isNull(int)>(0);

        if $z3 == 0 goto label12;

        r44 = null;

        goto label13;

     label12:
        r44 = interfaceinvoke r36.<android.database.Cursor: java.lang.String getString(int)>(0);

     label13:
        i2 = interfaceinvoke r36.<android.database.Cursor: int getInt(int)>(1);

        $r20 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r45 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i2);

        $z4 = interfaceinvoke r36.<android.database.Cursor: boolean isNull(int)>(2);

        if $z4 == 0 goto label14;

        r46 = null;

        goto label15;

     label14:
        r46 = interfaceinvoke r36.<android.database.Cursor: byte[] getBlob(int)>(2);

     label15:
        r7 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r46);

        i3 = interfaceinvoke r36.<android.database.Cursor: int getInt(int)>(3);

        i4 = interfaceinvoke r36.<android.database.Cursor: int getInt(int)>(4);

        r8 = interfaceinvoke r36.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r21 = virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r47 = (java.util.ArrayList) $r21;

        if r47 != null goto label16;

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        r47 = $r25;

     label16:
        r9 = interfaceinvoke r36.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r22 = virtualinvoke r6.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r9);

        r48 = (java.util.ArrayList) $r22;

        if r48 != null goto label17;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r48 = $r24;

     label17:
        $r23 = new androidx.work.impl.model.WorkSpec$WorkInfoPojo;

        specialinvoke $r23.<androidx.work.impl.model.WorkSpec$WorkInfoPojo: void <init>(java.lang.String,androidx.work.WorkInfo$State,androidx.work.Data,int,int,java.util.List,java.util.List)>(r44, r45, r7, i3, i4, r47, r48);

        r49 = $r23;

        interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(r49);

        goto label11;

     label18:
        $r18 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r18.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

        r50 = r43;

     label19:
        interfaceinvoke r36.<android.database.Cursor: void close()>();

        virtualinvoke r4.<androidx.room.RoomSQLiteQuery: void release()>();

     label20:
        $r19 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r19.<androidx.room.RoomDatabase: void endTransaction()>();

        return r50;

     label21:
        $r31 := @caughtexception;

        r10 = $r31;

     label22:
        interfaceinvoke r36.<android.database.Cursor: void close()>();

        virtualinvoke r4.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r10;

     label23:
        $r32 := @caughtexception;

        r11 = $r32;

     label24:
        $r33 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r33.<androidx.room.RoomDatabase: void endTransaction()>();

        throw r11;

        catch java.lang.Throwable from label06 to label19 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
        catch java.lang.Throwable from label05 to label20 with label23;
        catch java.lang.Throwable from label21 to label24 with label23;
    }

    public androidx.lifecycle.LiveData getWorkStatusPojoLiveDataForIds(java.util.List)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.util.List r1;
        java.lang.StringBuilder r2;
        int i0, i1, i2;
        java.lang.String r3, r6;
        androidx.room.RoomSQLiteQuery r4;
        java.util.Iterator r5;
        boolean $z0;
        androidx.room.RoomDatabase $r9;
        androidx.room.InvalidationTracker $r10;
        java.lang.String[] $r11;
        androidx.work.impl.model.WorkSpecDao_Impl$15 $r12;
        androidx.lifecycle.LiveData $r13;
        java.lang.Object $r14;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.util.List;

        r2 = staticinvoke <androidx.room.util.StringUtil: java.lang.StringBuilder newStringBuilder()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT id, state, output, run_attempt_count, generation FROM workspec WHERE id IN (");

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        staticinvoke <androidx.room.util.StringUtil: void appendPlaceholders(java.lang.StringBuilder,int)>(r2, i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = 0 + i0;

        r4 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>(r3, i1);

        i2 = 1;

        r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r14;

        if r6 != null goto label2;

        virtualinvoke r4.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(i2);

        goto label3;

     label2:
        virtualinvoke r4.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(i2, r6);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        $r10 = virtualinvoke $r9.<androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()>();

        $r11 = newarray (java.lang.String)[3];

        $r11[0] = "WorkTag";

        $r11[1] = "WorkProgress";

        $r11[2] = "workspec";

        $r12 = new androidx.work.impl.model.WorkSpecDao_Impl$15;

        specialinvoke $r12.<androidx.work.impl.model.WorkSpecDao_Impl$15: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomSQLiteQuery)>(r0, r4);

        $r13 = virtualinvoke $r10.<androidx.room.InvalidationTracker: androidx.lifecycle.LiveData createLiveData(java.lang.String[],boolean,java.util.concurrent.Callable)>($r11, 1, $r12);

        return $r13;
    }

    public java.util.List getWorkStatusPojoForTag(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r7, r8, r32, r35, r39;
        androidx.room.RoomSQLiteQuery r2;
        android.database.Cursor r3;
        androidx.collection.ArrayMap r4, r5, $r14, $r15;
        int i0, i1, i2, $i3;
        androidx.work.Data r6;
        java.lang.Throwable r9, r10, $r29, $r30;
        androidx.room.RoomDatabase $r11, $r12, $r13, $r17, $r18, $r31;
        java.util.ArrayList $r16, $r23, $r24, $r27, $r28, r33, r34, r36, r37, r38, r42, r43, r45;
        boolean $z0, $z1, $z2, $z3;
        androidx.work.impl.model.WorkTypeConverters $r19;
        java.lang.Object $r20, $r21, $r25, $r26;
        androidx.work.impl.model.WorkSpec$WorkInfoPojo $r22, r44;
        androidx.work.WorkInfo$State r40;
        byte[] r41;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT id, state, output, run_attempt_count, generation FROM workspec WHERE id IN\n            (SELECT work_spec_id FROM worktag WHERE tag=?)", 1);

        if r1 != null goto label01;

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(1);

        goto label02;

     label01:
        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(1, r1);

     label02:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r11.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r12 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r12.<androidx.room.RoomDatabase: void beginTransaction()>();

     label03:
        $r13 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r3 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r13, r2, 1, null);

     label04:
        $r14 = new androidx.collection.ArrayMap;

        specialinvoke $r14.<androidx.collection.ArrayMap: void <init>()>();

        r4 = $r14;

        $r15 = new androidx.collection.ArrayMap;

        specialinvoke $r15.<androidx.collection.ArrayMap: void <init>()>();

        r5 = $r15;

     label05:
        $z3 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z3 == 0 goto label08;

        r32 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r25 = virtualinvoke r4.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r32);

        r33 = (java.util.ArrayList) $r25;

        if r33 != null goto label06;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r34 = $r28;

        virtualinvoke r4.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, r34);

     label06:
        r35 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r26 = virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r35);

        r36 = (java.util.ArrayList) $r26;

        if r36 != null goto label07;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r37 = $r27;

        virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, r37);

     label07:
        goto label05;

     label08:
        interfaceinvoke r3.<android.database.Cursor: boolean moveToPosition(int)>(-1);

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)>(r4);

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)>(r5);

        $r16 = new java.util.ArrayList;

        $i3 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i3);

        r38 = $r16;

     label09:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label16;

        $z1 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(0);

        if $z1 == 0 goto label10;

        r39 = null;

        goto label11;

     label10:
        r39 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

     label11:
        i0 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(1);

        $r19 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r40 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i0);

        $z2 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(2);

        if $z2 == 0 goto label12;

        r41 = null;

        goto label13;

     label12:
        r41 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(2);

     label13:
        r6 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r41);

        i1 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(3);

        i2 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(4);

        r7 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r20 = virtualinvoke r4.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r42 = (java.util.ArrayList) $r20;

        if r42 != null goto label14;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r42 = $r24;

     label14:
        r8 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r21 = virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r43 = (java.util.ArrayList) $r21;

        if r43 != null goto label15;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r43 = $r23;

     label15:
        $r22 = new androidx.work.impl.model.WorkSpec$WorkInfoPojo;

        specialinvoke $r22.<androidx.work.impl.model.WorkSpec$WorkInfoPojo: void <init>(java.lang.String,androidx.work.WorkInfo$State,androidx.work.Data,int,int,java.util.List,java.util.List)>(r39, r40, r6, i1, i2, r42, r43);

        r44 = $r22;

        interfaceinvoke r38.<java.util.List: boolean add(java.lang.Object)>(r44);

        goto label09;

     label16:
        $r17 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r17.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

        r45 = r38;

     label17:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

     label18:
        $r18 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r18.<androidx.room.RoomDatabase: void endTransaction()>();

        return r45;

     label19:
        $r29 := @caughtexception;

        r9 = $r29;

     label20:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r9;

     label21:
        $r30 := @caughtexception;

        r10 = $r30;

     label22:
        $r31 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r31.<androidx.room.RoomDatabase: void endTransaction()>();

        throw r10;

        catch java.lang.Throwable from label04 to label17 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label03 to label18 with label21;
        catch java.lang.Throwable from label19 to label22 with label21;
    }

    public androidx.lifecycle.LiveData getWorkStatusPojoLiveDataForTag(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r2;
        androidx.room.RoomSQLiteQuery r3;
        byte b0;
        androidx.room.RoomDatabase $r4;
        androidx.room.InvalidationTracker $r5;
        java.lang.String[] $r6;
        androidx.work.impl.model.WorkSpecDao_Impl$16 $r7;
        androidx.lifecycle.LiveData $r8;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = "SELECT id, state, output, run_attempt_count, generation FROM workspec WHERE id IN\n            (SELECT work_spec_id FROM worktag WHERE tag=?)";

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT id, state, output, run_attempt_count, generation FROM workspec WHERE id IN\n            (SELECT work_spec_id FROM worktag WHERE tag=?)", 1);

        b0 = 1;

        if r1 != null goto label1;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(b0);

        goto label2;

     label1:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(b0, r1);

     label2:
        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        $r5 = virtualinvoke $r4.<androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()>();

        $r6 = newarray (java.lang.String)[4];

        $r6[0] = "WorkTag";

        $r6[1] = "WorkProgress";

        $r6[2] = "workspec";

        $r6[3] = "worktag";

        $r7 = new androidx.work.impl.model.WorkSpecDao_Impl$16;

        specialinvoke $r7.<androidx.work.impl.model.WorkSpecDao_Impl$16: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomSQLiteQuery)>(r0, r3);

        $r8 = virtualinvoke $r5.<androidx.room.InvalidationTracker: androidx.lifecycle.LiveData createLiveData(java.lang.String[],boolean,java.util.concurrent.Callable)>($r6, 1, $r7);

        return $r8;
    }

    public java.util.List getWorkStatusPojoForName(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r7, r8, r32, r35, r39;
        androidx.room.RoomSQLiteQuery r2;
        android.database.Cursor r3;
        androidx.collection.ArrayMap r4, r5, $r14, $r15;
        int i0, i1, i2, $i3;
        androidx.work.Data r6;
        java.lang.Throwable r9, r10, $r29, $r31;
        androidx.room.RoomDatabase $r11, $r12, $r13, $r17, $r18, $r30;
        java.util.ArrayList $r16, $r23, $r24, $r27, $r28, r33, r34, r36, r37, r38, r42, r43, r45;
        boolean $z0, $z1, $z2, $z3;
        androidx.work.impl.model.WorkTypeConverters $r19;
        java.lang.Object $r20, $r21, $r25, $r26;
        androidx.work.impl.model.WorkSpec$WorkInfoPojo $r22, r44;
        androidx.work.WorkInfo$State r40;
        byte[] r41;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT id, state, output, run_attempt_count, generation FROM workspec WHERE id IN (SELECT work_spec_id FROM workname WHERE name=?)", 1);

        if r1 != null goto label01;

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(1);

        goto label02;

     label01:
        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(1, r1);

     label02:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r11.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r12 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r12.<androidx.room.RoomDatabase: void beginTransaction()>();

     label03:
        $r13 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r3 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r13, r2, 1, null);

     label04:
        $r14 = new androidx.collection.ArrayMap;

        specialinvoke $r14.<androidx.collection.ArrayMap: void <init>()>();

        r4 = $r14;

        $r15 = new androidx.collection.ArrayMap;

        specialinvoke $r15.<androidx.collection.ArrayMap: void <init>()>();

        r5 = $r15;

     label05:
        $z3 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z3 == 0 goto label08;

        r32 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r25 = virtualinvoke r4.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r32);

        r33 = (java.util.ArrayList) $r25;

        if r33 != null goto label06;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r34 = $r28;

        virtualinvoke r4.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, r34);

     label06:
        r35 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r26 = virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r35);

        r36 = (java.util.ArrayList) $r26;

        if r36 != null goto label07;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r37 = $r27;

        virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, r37);

     label07:
        goto label05;

     label08:
        interfaceinvoke r3.<android.database.Cursor: boolean moveToPosition(int)>(-1);

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)>(r4);

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)>(r5);

        $r16 = new java.util.ArrayList;

        $i3 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i3);

        r38 = $r16;

     label09:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label16;

        $z1 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(0);

        if $z1 == 0 goto label10;

        r39 = null;

        goto label11;

     label10:
        r39 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

     label11:
        i0 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(1);

        $r19 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r40 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i0);

        $z2 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(2);

        if $z2 == 0 goto label12;

        r41 = null;

        goto label13;

     label12:
        r41 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(2);

     label13:
        r6 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r41);

        i1 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(3);

        i2 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(4);

        r7 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r20 = virtualinvoke r4.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r7);

        r42 = (java.util.ArrayList) $r20;

        if r42 != null goto label14;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r42 = $r24;

     label14:
        r8 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r21 = virtualinvoke r5.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r8);

        r43 = (java.util.ArrayList) $r21;

        if r43 != null goto label15;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r43 = $r23;

     label15:
        $r22 = new androidx.work.impl.model.WorkSpec$WorkInfoPojo;

        specialinvoke $r22.<androidx.work.impl.model.WorkSpec$WorkInfoPojo: void <init>(java.lang.String,androidx.work.WorkInfo$State,androidx.work.Data,int,int,java.util.List,java.util.List)>(r39, r40, r6, i1, i2, r42, r43);

        r44 = $r22;

        interfaceinvoke r38.<java.util.List: boolean add(java.lang.Object)>(r44);

        goto label09;

     label16:
        $r17 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r17.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

        r45 = r38;

     label17:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

     label18:
        $r18 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r18.<androidx.room.RoomDatabase: void endTransaction()>();

        return r45;

     label19:
        $r31 := @caughtexception;

        r9 = $r31;

     label20:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r9;

     label21:
        $r29 := @caughtexception;

        r10 = $r29;

     label22:
        $r30 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r30.<androidx.room.RoomDatabase: void endTransaction()>();

        throw r10;

        catch java.lang.Throwable from label04 to label17 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label03 to label18 with label21;
        catch java.lang.Throwable from label19 to label22 with label21;
    }

    public androidx.lifecycle.LiveData getWorkStatusPojoLiveDataForName(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r2;
        androidx.room.RoomSQLiteQuery r3;
        byte b0;
        androidx.room.RoomDatabase $r4;
        androidx.room.InvalidationTracker $r5;
        java.lang.String[] $r6;
        androidx.work.impl.model.WorkSpecDao_Impl$17 $r7;
        androidx.lifecycle.LiveData $r8;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = "SELECT id, state, output, run_attempt_count, generation FROM workspec WHERE id IN (SELECT work_spec_id FROM workname WHERE name=?)";

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT id, state, output, run_attempt_count, generation FROM workspec WHERE id IN (SELECT work_spec_id FROM workname WHERE name=?)", 1);

        b0 = 1;

        if r1 != null goto label1;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(b0);

        goto label2;

     label1:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(b0, r1);

     label2:
        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        $r5 = virtualinvoke $r4.<androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()>();

        $r6 = newarray (java.lang.String)[4];

        $r6[0] = "WorkTag";

        $r6[1] = "WorkProgress";

        $r6[2] = "workspec";

        $r6[3] = "workname";

        $r7 = new androidx.work.impl.model.WorkSpecDao_Impl$17;

        specialinvoke $r7.<androidx.work.impl.model.WorkSpecDao_Impl$17: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomSQLiteQuery)>(r0, r3);

        $r8 = virtualinvoke $r5.<androidx.room.InvalidationTracker: androidx.lifecycle.LiveData createLiveData(java.lang.String[],boolean,java.util.concurrent.Callable)>($r6, 1, $r7);

        return $r8;
    }

    public java.util.List getInputsFromPrerequisites(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r2;
        androidx.room.RoomSQLiteQuery r3;
        byte b0;
        android.database.Cursor r4;
        java.util.ArrayList r5, $r9, r13;
        java.lang.Throwable r6, $r10;
        androidx.room.RoomDatabase $r7, $r8;
        int $i1;
        boolean $z0, $z2;
        byte[] r11;
        androidx.work.Data r12;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = "SELECT output FROM workspec WHERE id IN\n             (SELECT prerequisite_id FROM dependency WHERE work_spec_id=?)";

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT output FROM workspec WHERE id IN\n             (SELECT prerequisite_id FROM dependency WHERE work_spec_id=?)", 1);

        b0 = 1;

        if r1 != null goto label01;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(b0);

        goto label02;

     label01:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(b0, r1);

     label02:
        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r4 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r8, r3, 0, null);

     label03:
        $r9 = new java.util.ArrayList;

        $i1 = interfaceinvoke r4.<android.database.Cursor: int getCount()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i1);

        r5 = $r9;

     label04:
        $z2 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label07;

        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean isNull(int)>(0);

        if $z0 == 0 goto label05;

        r11 = null;

        goto label06;

     label05:
        r11 = interfaceinvoke r4.<android.database.Cursor: byte[] getBlob(int)>(0);

     label06:
        r12 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r11);

        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r12);

        goto label04;

     label07:
        r13 = r5;

     label08:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        return r13;

     label09:
        $r10 := @caughtexception;

        r6 = $r10;

     label10:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r6;

        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.util.List getUnfinishedWorkWithTag(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r2, r11;
        androidx.room.RoomSQLiteQuery r3;
        byte b0;
        android.database.Cursor r4;
        java.util.ArrayList r5, $r9, r12;
        java.lang.Throwable r6, $r10;
        androidx.room.RoomDatabase $r7, $r8;
        int $i1;
        boolean $z0, $z2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = "SELECT id FROM workspec WHERE state NOT IN (2, 3, 5) AND id IN (SELECT work_spec_id FROM worktag WHERE tag=?)";

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT id FROM workspec WHERE state NOT IN (2, 3, 5) AND id IN (SELECT work_spec_id FROM worktag WHERE tag=?)", 1);

        b0 = 1;

        if r1 != null goto label01;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(b0);

        goto label02;

     label01:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(b0, r1);

     label02:
        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r4 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r8, r3, 0, null);

     label03:
        $r9 = new java.util.ArrayList;

        $i1 = interfaceinvoke r4.<android.database.Cursor: int getCount()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i1);

        r5 = $r9;

     label04:
        $z2 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label07;

        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean isNull(int)>(0);

        if $z0 == 0 goto label05;

        r11 = null;

        goto label06;

     label05:
        r11 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(0);

     label06:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r11);

        goto label04;

     label07:
        r12 = r5;

     label08:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        return r12;

     label09:
        $r10 := @caughtexception;

        r6 = $r10;

     label10:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r6;

        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.util.List getUnfinishedWorkWithName(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r2, r11;
        androidx.room.RoomSQLiteQuery r3;
        byte b0;
        android.database.Cursor r4;
        java.util.ArrayList r5, $r9, r12;
        java.lang.Throwable r6, $r10;
        androidx.room.RoomDatabase $r7, $r8;
        int $i1;
        boolean $z0, $z2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = "SELECT id FROM workspec WHERE state NOT IN (2, 3, 5) AND id IN (SELECT work_spec_id FROM workname WHERE name=?)";

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT id FROM workspec WHERE state NOT IN (2, 3, 5) AND id IN (SELECT work_spec_id FROM workname WHERE name=?)", 1);

        b0 = 1;

        if r1 != null goto label01;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(b0);

        goto label02;

     label01:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(b0, r1);

     label02:
        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r7.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r8 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r4 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r8, r3, 0, null);

     label03:
        $r9 = new java.util.ArrayList;

        $i1 = interfaceinvoke r4.<android.database.Cursor: int getCount()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i1);

        r5 = $r9;

     label04:
        $z2 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label07;

        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean isNull(int)>(0);

        if $z0 == 0 goto label05;

        r11 = null;

        goto label06;

     label05:
        r11 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(0);

     label06:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r11);

        goto label04;

     label07:
        r12 = r5;

     label08:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        return r12;

     label09:
        $r10 := @caughtexception;

        r6 = $r10;

     label10:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r6;

        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.util.List getAllUnfinishedWork()
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r10;
        androidx.room.RoomSQLiteQuery r2;
        android.database.Cursor r3;
        java.util.ArrayList r4, $r8, r11;
        java.lang.Throwable r5, $r9;
        androidx.room.RoomDatabase $r6, $r7;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 = "SELECT id FROM workspec WHERE state NOT IN (2, 3, 5)";

        r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT id FROM workspec WHERE state NOT IN (2, 3, 5)", 0);

        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r6.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r3 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r7, r2, 0, null);

     label1:
        $r8 = new java.util.ArrayList;

        $i0 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($i0);

        r4 = $r8;

     label2:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label5;

        $z1 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(0);

        if $z1 == 0 goto label3;

        r10 = null;

        goto label4;

     label3:
        r10 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

     label4:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10);

        goto label2;

     label5:
        r11 = r4;

     label6:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        return r11;

     label7:
        $r9 := @caughtexception;

        r5 = $r9;

     label8:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r5;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public boolean hasUnfinishedWork()
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1;
        androidx.room.RoomSQLiteQuery r2;
        android.database.Cursor r3;
        java.lang.Throwable r4, $r7;
        androidx.room.RoomDatabase $r5, $r6;
        boolean $z0, $z1, z2, z3;
        int i0;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 = "SELECT COUNT(*) > 0 FROM workspec WHERE state NOT IN (2, 3, 5) LIMIT 1";

        r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT COUNT(*) > 0 FROM workspec WHERE state NOT IN (2, 3, 5) LIMIT 1", 0);

        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r5.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r3 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r6, r2, 0, null);

     label1:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label4;

        i0 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(0);

        if i0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z2 = $z1;

        goto label5;

     label4:
        z2 = 0;

     label5:
        z3 = z2;

     label6:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        return z3;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

     label8:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r4;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public androidx.lifecycle.LiveData getScheduleRequestedAtLiveData(java.lang.String)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r2;
        androidx.room.RoomSQLiteQuery r3;
        byte b0;
        androidx.room.RoomDatabase $r4;
        androidx.room.InvalidationTracker $r5;
        java.lang.String[] $r6;
        androidx.work.impl.model.WorkSpecDao_Impl$18 $r7;
        androidx.lifecycle.LiveData $r8;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: java.lang.String;

        r2 = "SELECT schedule_requested_at FROM workspec WHERE id=?";

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT schedule_requested_at FROM workspec WHERE id=?", 1);

        b0 = 1;

        if r1 != null goto label1;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(b0);

        goto label2;

     label1:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(b0, r1);

     label2:
        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        $r5 = virtualinvoke $r4.<androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()>();

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "workspec";

        $r7 = new androidx.work.impl.model.WorkSpecDao_Impl$18;

        specialinvoke $r7.<androidx.work.impl.model.WorkSpecDao_Impl$18: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomSQLiteQuery)>(r0, r3);

        $r8 = virtualinvoke $r5.<androidx.room.InvalidationTracker: androidx.lifecycle.LiveData createLiveData(java.lang.String[],boolean,java.util.concurrent.Callable)>($r6, 0, $r7);

        return $r8;
    }

    public java.util.List getEligibleWorkForScheduling(int)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        int i0, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i33, i34, i39, i40, i41, i42, i43, i44, i45, i46, i47, $i51;
        java.lang.String r1, r25, r26, r27;
        androidx.room.RoomSQLiteQuery r2;
        byte b1;
        android.database.Cursor r3;
        java.util.ArrayList r4, $r16, r32;
        androidx.work.WorkInfo$State r5;
        androidx.work.Data r6, r7;
        long l30, l31, l32, l35, l36, l37, l38, l48, l49, $l50;
        androidx.work.BackoffPolicy r8;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14, $z15, $z16, $z17;
        androidx.work.OutOfQuotaPolicy r9;
        androidx.work.Constraints r10, $r22;
        androidx.work.NetworkType r11;
        java.util.Set r12;
        java.lang.Throwable r13, $r24;
        androidx.room.RoomDatabase $r14, $r15;
        androidx.work.impl.model.WorkTypeConverters $r17, $r18, $r19, $r20, $r21;
        androidx.work.impl.model.WorkSpec $r23, r31;
        byte[] r28, r29, r30;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        i0 := @parameter0: int;

        r1 = "SELECT * FROM workspec WHERE state=0 AND schedule_requested_at=-1 ORDER BY last_enqueue_time LIMIT (SELECT MAX(?-COUNT(*), 0) FROM workspec WHERE schedule_requested_at<>-1 AND state NOT IN (2, 3, 5))";

        r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT * FROM workspec WHERE state=0 AND schedule_requested_at=-1 ORDER BY last_enqueue_time LIMIT (SELECT MAX(?-COUNT(*), 0) FROM workspec WHERE schedule_requested_at<>-1 AND state NOT IN (2, 3, 5))", 1);

        b1 = 1;

        $l50 = (long) i0;

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void bindLong(int,long)>(b1, $l50);

        $r14 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r14.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r15 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r3 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r15, r2, 0, null);

     label01:
        i2 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "id");

        i3 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "state");

        i4 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "worker_class_name");

        i5 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "input_merger_class_name");

        i6 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "input");

        i7 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "output");

        i8 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "initial_delay");

        i9 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "interval_duration");

        i10 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "flex_duration");

        i11 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "run_attempt_count");

        i12 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "backoff_policy");

        i13 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "backoff_delay_duration");

        i14 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "last_enqueue_time");

        i15 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "minimum_retention_duration");

        i16 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "schedule_requested_at");

        i17 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "run_in_foreground");

        i18 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "out_of_quota_policy");

        i19 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "period_count");

        i20 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "generation");

        i21 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "required_network_type");

        i22 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_charging");

        i23 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_device_idle");

        i24 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_battery_not_low");

        i25 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_storage_not_low");

        i26 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "trigger_content_update_delay");

        i27 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "trigger_max_content_delay");

        i28 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "content_uri_triggers");

        $r16 = new java.util.ArrayList;

        $i51 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i51);

        r4 = $r16;

     label02:
        $z5 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z5 == 0 goto label25;

        $z6 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i2);

        if $z6 == 0 goto label03;

        r25 = null;

        goto label04;

     label03:
        r25 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i2);

     label04:
        i29 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i3);

        $r17 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r5 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i29);

        $z7 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i4);

        if $z7 == 0 goto label05;

        r26 = null;

        goto label06;

     label05:
        r26 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i4);

     label06:
        $z8 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i5);

        if $z8 == 0 goto label07;

        r27 = null;

        goto label08;

     label07:
        r27 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i5);

     label08:
        $z9 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i6);

        if $z9 == 0 goto label09;

        r28 = null;

        goto label10;

     label09:
        r28 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i6);

     label10:
        r6 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r28);

        $z10 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i7);

        if $z10 == 0 goto label11;

        r29 = null;

        goto label12;

     label11:
        r29 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i7);

     label12:
        r7 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r29);

        l30 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i8);

        l31 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i9);

        l32 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i10);

        i33 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i11);

        i34 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i12);

        $r18 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r8 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.BackoffPolicy intToBackoffPolicy(int)>(i34);

        l35 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i13);

        l36 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i14);

        l37 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i15);

        l38 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i16);

        i39 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i17);

        if i39 == 0 goto label13;

        $z13 = 1;

        goto label14;

     label13:
        $z13 = 0;

     label14:
        z0 = $z13;

        i40 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i18);

        $r19 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r9 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.OutOfQuotaPolicy intToOutOfQuotaPolicy(int)>(i40);

        i41 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i19);

        i42 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i20);

        i43 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i21);

        $r20 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r11 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.NetworkType intToNetworkType(int)>(i43);

        i44 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i22);

        if i44 == 0 goto label15;

        $z14 = 1;

        goto label16;

     label15:
        $z14 = 0;

     label16:
        z1 = $z14;

        i45 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i23);

        if i45 == 0 goto label17;

        $z15 = 1;

        goto label18;

     label17:
        $z15 = 0;

     label18:
        z2 = $z15;

        i46 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i24);

        if i46 == 0 goto label19;

        $z16 = 1;

        goto label20;

     label19:
        $z16 = 0;

     label20:
        z3 = $z16;

        i47 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i25);

        if i47 == 0 goto label21;

        $z17 = 1;

        goto label22;

     label21:
        $z17 = 0;

     label22:
        z4 = $z17;

        l48 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i26);

        l49 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i27);

        $z11 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i28);

        if $z11 == 0 goto label23;

        r30 = null;

        goto label24;

     label23:
        r30 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i28);

     label24:
        $r21 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r12 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: java.util.Set byteArrayToSetOfTriggers(byte[])>(r30);

        $r22 = new androidx.work.Constraints;

        specialinvoke $r22.<androidx.work.Constraints: void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean,long,long,java.util.Set)>(r11, z1, z2, z3, z4, l48, l49, r12);

        r10 = $r22;

        $r23 = new androidx.work.impl.model.WorkSpec;

        specialinvoke $r23.<androidx.work.impl.model.WorkSpec: void <init>(java.lang.String,androidx.work.WorkInfo$State,java.lang.String,java.lang.String,androidx.work.Data,androidx.work.Data,long,long,long,androidx.work.Constraints,int,androidx.work.BackoffPolicy,long,long,long,long,boolean,androidx.work.OutOfQuotaPolicy,int,int)>(r25, r5, r26, r27, r6, r7, l30, l31, l32, r10, i33, r8, l35, l36, l37, l38, z0, r9, i41, i42);

        r31 = $r23;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r31);

        goto label02;

     label25:
        r32 = r4;

     label26:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        return r32;

     label27:
        $r24 := @caughtexception;

        r13 = $r24;

     label28:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r13;

        catch java.lang.Throwable from label01 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public java.util.List getAllEligibleWorkSpecsForScheduling(int)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        int i0, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i33, i34, i39, i40, i41, i42, i43, i44, i45, i46, i47, $i51;
        java.lang.String r1, r25, r26, r27;
        androidx.room.RoomSQLiteQuery r2;
        byte b1;
        android.database.Cursor r3;
        java.util.ArrayList r4, $r16, r32;
        androidx.work.WorkInfo$State r5;
        androidx.work.Data r6, r7;
        long l30, l31, l32, l35, l36, l37, l38, l48, l49, $l50;
        androidx.work.BackoffPolicy r8;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14, $z15, $z16, $z17;
        androidx.work.OutOfQuotaPolicy r9;
        androidx.work.Constraints r10, $r22;
        androidx.work.NetworkType r11;
        java.util.Set r12;
        java.lang.Throwable r13, $r24;
        androidx.room.RoomDatabase $r14, $r15;
        androidx.work.impl.model.WorkTypeConverters $r17, $r18, $r19, $r20, $r21;
        androidx.work.impl.model.WorkSpec $r23, r31;
        byte[] r28, r29, r30;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        i0 := @parameter0: int;

        r1 = "SELECT * FROM workspec WHERE state=0 ORDER BY last_enqueue_time LIMIT ?";

        r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT * FROM workspec WHERE state=0 ORDER BY last_enqueue_time LIMIT ?", 1);

        b1 = 1;

        $l50 = (long) i0;

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void bindLong(int,long)>(b1, $l50);

        $r14 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r14.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r15 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r3 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r15, r2, 0, null);

     label01:
        i2 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "id");

        i3 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "state");

        i4 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "worker_class_name");

        i5 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "input_merger_class_name");

        i6 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "input");

        i7 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "output");

        i8 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "initial_delay");

        i9 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "interval_duration");

        i10 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "flex_duration");

        i11 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "run_attempt_count");

        i12 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "backoff_policy");

        i13 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "backoff_delay_duration");

        i14 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "last_enqueue_time");

        i15 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "minimum_retention_duration");

        i16 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "schedule_requested_at");

        i17 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "run_in_foreground");

        i18 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "out_of_quota_policy");

        i19 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "period_count");

        i20 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "generation");

        i21 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "required_network_type");

        i22 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_charging");

        i23 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_device_idle");

        i24 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_battery_not_low");

        i25 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_storage_not_low");

        i26 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "trigger_content_update_delay");

        i27 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "trigger_max_content_delay");

        i28 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "content_uri_triggers");

        $r16 = new java.util.ArrayList;

        $i51 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i51);

        r4 = $r16;

     label02:
        $z5 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z5 == 0 goto label25;

        $z6 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i2);

        if $z6 == 0 goto label03;

        r25 = null;

        goto label04;

     label03:
        r25 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i2);

     label04:
        i29 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i3);

        $r17 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r5 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i29);

        $z7 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i4);

        if $z7 == 0 goto label05;

        r26 = null;

        goto label06;

     label05:
        r26 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i4);

     label06:
        $z8 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i5);

        if $z8 == 0 goto label07;

        r27 = null;

        goto label08;

     label07:
        r27 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i5);

     label08:
        $z9 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i6);

        if $z9 == 0 goto label09;

        r28 = null;

        goto label10;

     label09:
        r28 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i6);

     label10:
        r6 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r28);

        $z10 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i7);

        if $z10 == 0 goto label11;

        r29 = null;

        goto label12;

     label11:
        r29 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i7);

     label12:
        r7 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r29);

        l30 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i8);

        l31 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i9);

        l32 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i10);

        i33 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i11);

        i34 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i12);

        $r18 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r8 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.BackoffPolicy intToBackoffPolicy(int)>(i34);

        l35 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i13);

        l36 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i14);

        l37 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i15);

        l38 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i16);

        i39 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i17);

        if i39 == 0 goto label13;

        $z13 = 1;

        goto label14;

     label13:
        $z13 = 0;

     label14:
        z0 = $z13;

        i40 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i18);

        $r19 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r9 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.OutOfQuotaPolicy intToOutOfQuotaPolicy(int)>(i40);

        i41 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i19);

        i42 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i20);

        i43 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i21);

        $r20 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r11 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.NetworkType intToNetworkType(int)>(i43);

        i44 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i22);

        if i44 == 0 goto label15;

        $z14 = 1;

        goto label16;

     label15:
        $z14 = 0;

     label16:
        z1 = $z14;

        i45 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i23);

        if i45 == 0 goto label17;

        $z15 = 1;

        goto label18;

     label17:
        $z15 = 0;

     label18:
        z2 = $z15;

        i46 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i24);

        if i46 == 0 goto label19;

        $z16 = 1;

        goto label20;

     label19:
        $z16 = 0;

     label20:
        z3 = $z16;

        i47 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i25);

        if i47 == 0 goto label21;

        $z17 = 1;

        goto label22;

     label21:
        $z17 = 0;

     label22:
        z4 = $z17;

        l48 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i26);

        l49 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i27);

        $z11 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i28);

        if $z11 == 0 goto label23;

        r30 = null;

        goto label24;

     label23:
        r30 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i28);

     label24:
        $r21 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r12 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: java.util.Set byteArrayToSetOfTriggers(byte[])>(r30);

        $r22 = new androidx.work.Constraints;

        specialinvoke $r22.<androidx.work.Constraints: void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean,long,long,java.util.Set)>(r11, z1, z2, z3, z4, l48, l49, r12);

        r10 = $r22;

        $r23 = new androidx.work.impl.model.WorkSpec;

        specialinvoke $r23.<androidx.work.impl.model.WorkSpec: void <init>(java.lang.String,androidx.work.WorkInfo$State,java.lang.String,java.lang.String,androidx.work.Data,androidx.work.Data,long,long,long,androidx.work.Constraints,int,androidx.work.BackoffPolicy,long,long,long,long,boolean,androidx.work.OutOfQuotaPolicy,int,int)>(r25, r5, r26, r27, r6, r7, l30, l31, l32, r10, i33, r8, l35, l36, l37, l38, z0, r9, i41, i42);

        r31 = $r23;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r31);

        goto label02;

     label25:
        r32 = r4;

     label26:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        return r32;

     label27:
        $r24 := @caughtexception;

        r13 = $r24;

     label28:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r13;

        catch java.lang.Throwable from label01 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public java.util.List getScheduledWork()
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r25, r26, r27;
        androidx.room.RoomSQLiteQuery r2;
        android.database.Cursor r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i31, i32, i37, i38, i39, i40, i41, i42, i43, i44, i45, $i48;
        java.util.ArrayList r4, $r16, r32;
        androidx.work.WorkInfo$State r5;
        androidx.work.Data r6, r7;
        long l28, l29, l30, l33, l34, l35, l36, l46, l47;
        androidx.work.BackoffPolicy r8;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14, $z15, $z16, $z17;
        androidx.work.OutOfQuotaPolicy r9;
        androidx.work.Constraints r10, $r22;
        androidx.work.NetworkType r11;
        java.util.Set r12;
        java.lang.Throwable r13, $r24;
        androidx.room.RoomDatabase $r14, $r15;
        androidx.work.impl.model.WorkTypeConverters $r17, $r18, $r19, $r20, $r21;
        androidx.work.impl.model.WorkSpec $r23, r31;
        byte[] r28, r29, r30;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 = "SELECT * FROM workspec WHERE state=0 AND schedule_requested_at<>-1";

        r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT * FROM workspec WHERE state=0 AND schedule_requested_at<>-1", 0);

        $r14 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r14.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r15 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r3 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r15, r2, 0, null);

     label01:
        i0 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "id");

        i1 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "state");

        i2 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "worker_class_name");

        i3 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "input_merger_class_name");

        i4 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "input");

        i5 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "output");

        i6 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "initial_delay");

        i7 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "interval_duration");

        i8 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "flex_duration");

        i9 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "run_attempt_count");

        i10 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "backoff_policy");

        i11 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "backoff_delay_duration");

        i12 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "last_enqueue_time");

        i13 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "minimum_retention_duration");

        i14 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "schedule_requested_at");

        i15 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "run_in_foreground");

        i16 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "out_of_quota_policy");

        i17 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "period_count");

        i18 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "generation");

        i19 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "required_network_type");

        i20 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_charging");

        i21 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_device_idle");

        i22 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_battery_not_low");

        i23 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_storage_not_low");

        i24 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "trigger_content_update_delay");

        i25 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "trigger_max_content_delay");

        i26 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "content_uri_triggers");

        $r16 = new java.util.ArrayList;

        $i48 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i48);

        r4 = $r16;

     label02:
        $z5 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z5 == 0 goto label25;

        $z6 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z6 == 0 goto label03;

        r25 = null;

        goto label04;

     label03:
        r25 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i0);

     label04:
        i27 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i1);

        $r17 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r5 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i27);

        $z7 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i2);

        if $z7 == 0 goto label05;

        r26 = null;

        goto label06;

     label05:
        r26 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i2);

     label06:
        $z8 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i3);

        if $z8 == 0 goto label07;

        r27 = null;

        goto label08;

     label07:
        r27 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i3);

     label08:
        $z9 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i4);

        if $z9 == 0 goto label09;

        r28 = null;

        goto label10;

     label09:
        r28 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i4);

     label10:
        r6 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r28);

        $z10 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i5);

        if $z10 == 0 goto label11;

        r29 = null;

        goto label12;

     label11:
        r29 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i5);

     label12:
        r7 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r29);

        l28 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i6);

        l29 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i7);

        l30 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i8);

        i31 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i9);

        i32 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i10);

        $r18 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r8 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.BackoffPolicy intToBackoffPolicy(int)>(i32);

        l33 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i11);

        l34 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i12);

        l35 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i13);

        l36 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i14);

        i37 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i15);

        if i37 == 0 goto label13;

        $z13 = 1;

        goto label14;

     label13:
        $z13 = 0;

     label14:
        z0 = $z13;

        i38 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i16);

        $r19 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r9 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.OutOfQuotaPolicy intToOutOfQuotaPolicy(int)>(i38);

        i39 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i17);

        i40 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i18);

        i41 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i19);

        $r20 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r11 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.NetworkType intToNetworkType(int)>(i41);

        i42 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i20);

        if i42 == 0 goto label15;

        $z14 = 1;

        goto label16;

     label15:
        $z14 = 0;

     label16:
        z1 = $z14;

        i43 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i21);

        if i43 == 0 goto label17;

        $z15 = 1;

        goto label18;

     label17:
        $z15 = 0;

     label18:
        z2 = $z15;

        i44 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i22);

        if i44 == 0 goto label19;

        $z16 = 1;

        goto label20;

     label19:
        $z16 = 0;

     label20:
        z3 = $z16;

        i45 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i23);

        if i45 == 0 goto label21;

        $z17 = 1;

        goto label22;

     label21:
        $z17 = 0;

     label22:
        z4 = $z17;

        l46 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i24);

        l47 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i25);

        $z11 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i26);

        if $z11 == 0 goto label23;

        r30 = null;

        goto label24;

     label23:
        r30 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i26);

     label24:
        $r21 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r12 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: java.util.Set byteArrayToSetOfTriggers(byte[])>(r30);

        $r22 = new androidx.work.Constraints;

        specialinvoke $r22.<androidx.work.Constraints: void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean,long,long,java.util.Set)>(r11, z1, z2, z3, z4, l46, l47, r12);

        r10 = $r22;

        $r23 = new androidx.work.impl.model.WorkSpec;

        specialinvoke $r23.<androidx.work.impl.model.WorkSpec: void <init>(java.lang.String,androidx.work.WorkInfo$State,java.lang.String,java.lang.String,androidx.work.Data,androidx.work.Data,long,long,long,androidx.work.Constraints,int,androidx.work.BackoffPolicy,long,long,long,long,boolean,androidx.work.OutOfQuotaPolicy,int,int)>(r25, r5, r26, r27, r6, r7, l28, l29, l30, r10, i31, r8, l33, l34, l35, l36, z0, r9, i39, i40);

        r31 = $r23;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r31);

        goto label02;

     label25:
        r32 = r4;

     label26:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        return r32;

     label27:
        $r24 := @caughtexception;

        r13 = $r24;

     label28:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r13;

        catch java.lang.Throwable from label01 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public java.util.List getRunningWork()
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String r1, r25, r26, r27;
        androidx.room.RoomSQLiteQuery r2;
        android.database.Cursor r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i31, i32, i37, i38, i39, i40, i41, i42, i43, i44, i45, $i48;
        java.util.ArrayList r4, $r16, r32;
        androidx.work.WorkInfo$State r5;
        androidx.work.Data r6, r7;
        long l28, l29, l30, l33, l34, l35, l36, l46, l47;
        androidx.work.BackoffPolicy r8;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14, $z15, $z16, $z17;
        androidx.work.OutOfQuotaPolicy r9;
        androidx.work.Constraints r10, $r22;
        androidx.work.NetworkType r11;
        java.util.Set r12;
        java.lang.Throwable r13, $r24;
        androidx.room.RoomDatabase $r14, $r15;
        androidx.work.impl.model.WorkTypeConverters $r17, $r18, $r19, $r20, $r21;
        androidx.work.impl.model.WorkSpec $r23, r31;
        byte[] r28, r29, r30;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 = "SELECT * FROM workspec WHERE state=1";

        r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT * FROM workspec WHERE state=1", 0);

        $r14 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r14.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r15 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r3 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r15, r2, 0, null);

     label01:
        i0 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "id");

        i1 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "state");

        i2 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "worker_class_name");

        i3 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "input_merger_class_name");

        i4 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "input");

        i5 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "output");

        i6 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "initial_delay");

        i7 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "interval_duration");

        i8 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "flex_duration");

        i9 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "run_attempt_count");

        i10 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "backoff_policy");

        i11 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "backoff_delay_duration");

        i12 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "last_enqueue_time");

        i13 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "minimum_retention_duration");

        i14 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "schedule_requested_at");

        i15 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "run_in_foreground");

        i16 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "out_of_quota_policy");

        i17 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "period_count");

        i18 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "generation");

        i19 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "required_network_type");

        i20 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_charging");

        i21 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_device_idle");

        i22 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_battery_not_low");

        i23 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_storage_not_low");

        i24 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "trigger_content_update_delay");

        i25 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "trigger_max_content_delay");

        i26 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "content_uri_triggers");

        $r16 = new java.util.ArrayList;

        $i48 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i48);

        r4 = $r16;

     label02:
        $z5 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z5 == 0 goto label25;

        $z6 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z6 == 0 goto label03;

        r25 = null;

        goto label04;

     label03:
        r25 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i0);

     label04:
        i27 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i1);

        $r17 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r5 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i27);

        $z7 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i2);

        if $z7 == 0 goto label05;

        r26 = null;

        goto label06;

     label05:
        r26 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i2);

     label06:
        $z8 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i3);

        if $z8 == 0 goto label07;

        r27 = null;

        goto label08;

     label07:
        r27 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i3);

     label08:
        $z9 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i4);

        if $z9 == 0 goto label09;

        r28 = null;

        goto label10;

     label09:
        r28 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i4);

     label10:
        r6 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r28);

        $z10 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i5);

        if $z10 == 0 goto label11;

        r29 = null;

        goto label12;

     label11:
        r29 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i5);

     label12:
        r7 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r29);

        l28 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i6);

        l29 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i7);

        l30 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i8);

        i31 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i9);

        i32 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i10);

        $r18 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r8 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.BackoffPolicy intToBackoffPolicy(int)>(i32);

        l33 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i11);

        l34 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i12);

        l35 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i13);

        l36 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i14);

        i37 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i15);

        if i37 == 0 goto label13;

        $z13 = 1;

        goto label14;

     label13:
        $z13 = 0;

     label14:
        z0 = $z13;

        i38 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i16);

        $r19 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r9 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.OutOfQuotaPolicy intToOutOfQuotaPolicy(int)>(i38);

        i39 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i17);

        i40 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i18);

        i41 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i19);

        $r20 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r11 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.NetworkType intToNetworkType(int)>(i41);

        i42 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i20);

        if i42 == 0 goto label15;

        $z14 = 1;

        goto label16;

     label15:
        $z14 = 0;

     label16:
        z1 = $z14;

        i43 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i21);

        if i43 == 0 goto label17;

        $z15 = 1;

        goto label18;

     label17:
        $z15 = 0;

     label18:
        z2 = $z15;

        i44 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i22);

        if i44 == 0 goto label19;

        $z16 = 1;

        goto label20;

     label19:
        $z16 = 0;

     label20:
        z3 = $z16;

        i45 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i23);

        if i45 == 0 goto label21;

        $z17 = 1;

        goto label22;

     label21:
        $z17 = 0;

     label22:
        z4 = $z17;

        l46 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i24);

        l47 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i25);

        $z11 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i26);

        if $z11 == 0 goto label23;

        r30 = null;

        goto label24;

     label23:
        r30 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i26);

     label24:
        $r21 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r12 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: java.util.Set byteArrayToSetOfTriggers(byte[])>(r30);

        $r22 = new androidx.work.Constraints;

        specialinvoke $r22.<androidx.work.Constraints: void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean,long,long,java.util.Set)>(r11, z1, z2, z3, z4, l46, l47, r12);

        r10 = $r22;

        $r23 = new androidx.work.impl.model.WorkSpec;

        specialinvoke $r23.<androidx.work.impl.model.WorkSpec: void <init>(java.lang.String,androidx.work.WorkInfo$State,java.lang.String,java.lang.String,androidx.work.Data,androidx.work.Data,long,long,long,androidx.work.Constraints,int,androidx.work.BackoffPolicy,long,long,long,long,boolean,androidx.work.OutOfQuotaPolicy,int,int)>(r25, r5, r26, r27, r6, r7, l28, l29, l30, r10, i31, r8, l33, l34, l35, l36, z0, r9, i39, i40);

        r31 = $r23;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r31);

        goto label02;

     label25:
        r32 = r4;

     label26:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        return r32;

     label27:
        $r24 := @caughtexception;

        r13 = $r24;

     label28:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r13;

        catch java.lang.Throwable from label01 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public java.util.List getRecentlyCompletedWork(long)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        long l0, l30, l31, l32, l35, l36, l37, l38, l48, l49;
        java.lang.String r1, r25, r26, r27;
        androidx.room.RoomSQLiteQuery r2;
        byte b1;
        android.database.Cursor r3;
        int i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i33, i34, i39, i40, i41, i42, i43, i44, i45, i46, i47, $i50;
        java.util.ArrayList r4, $r16, r32;
        androidx.work.WorkInfo$State r5;
        androidx.work.Data r6, r7;
        androidx.work.BackoffPolicy r8;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14, $z15, $z16, $z17;
        androidx.work.OutOfQuotaPolicy r9;
        androidx.work.Constraints r10, $r22;
        androidx.work.NetworkType r11;
        java.util.Set r12;
        java.lang.Throwable r13, $r24;
        androidx.room.RoomDatabase $r14, $r15;
        androidx.work.impl.model.WorkTypeConverters $r17, $r18, $r19, $r20, $r21;
        androidx.work.impl.model.WorkSpec $r23, r31;
        byte[] r28, r29, r30;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        l0 := @parameter0: long;

        r1 = "SELECT * FROM workspec WHERE last_enqueue_time >= ? AND state IN (2, 3, 5) ORDER BY last_enqueue_time DESC";

        r2 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>("SELECT * FROM workspec WHERE last_enqueue_time >= ? AND state IN (2, 3, 5) ORDER BY last_enqueue_time DESC", 1);

        b1 = 1;

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void bindLong(int,long)>(b1, l0);

        $r14 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        virtualinvoke $r14.<androidx.room.RoomDatabase: void assertNotSuspendingTransaction()>();

        $r15 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r3 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r15, r2, 0, null);

     label01:
        i2 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "id");

        i3 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "state");

        i4 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "worker_class_name");

        i5 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "input_merger_class_name");

        i6 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "input");

        i7 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "output");

        i8 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "initial_delay");

        i9 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "interval_duration");

        i10 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "flex_duration");

        i11 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "run_attempt_count");

        i12 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "backoff_policy");

        i13 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "backoff_delay_duration");

        i14 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "last_enqueue_time");

        i15 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "minimum_retention_duration");

        i16 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "schedule_requested_at");

        i17 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "run_in_foreground");

        i18 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "out_of_quota_policy");

        i19 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "period_count");

        i20 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "generation");

        i21 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "required_network_type");

        i22 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_charging");

        i23 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_device_idle");

        i24 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_battery_not_low");

        i25 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "requires_storage_not_low");

        i26 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "trigger_content_update_delay");

        i27 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "trigger_max_content_delay");

        i28 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)>(r3, "content_uri_triggers");

        $r16 = new java.util.ArrayList;

        $i50 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i50);

        r4 = $r16;

     label02:
        $z5 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z5 == 0 goto label25;

        $z6 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i2);

        if $z6 == 0 goto label03;

        r25 = null;

        goto label04;

     label03:
        r25 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i2);

     label04:
        i29 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i3);

        $r17 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r5 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i29);

        $z7 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i4);

        if $z7 == 0 goto label05;

        r26 = null;

        goto label06;

     label05:
        r26 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i4);

     label06:
        $z8 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i5);

        if $z8 == 0 goto label07;

        r27 = null;

        goto label08;

     label07:
        r27 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i5);

     label08:
        $z9 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i6);

        if $z9 == 0 goto label09;

        r28 = null;

        goto label10;

     label09:
        r28 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i6);

     label10:
        r6 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r28);

        $z10 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i7);

        if $z10 == 0 goto label11;

        r29 = null;

        goto label12;

     label11:
        r29 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i7);

     label12:
        r7 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r29);

        l30 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i8);

        l31 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i9);

        l32 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i10);

        i33 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i11);

        i34 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i12);

        $r18 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r8 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.BackoffPolicy intToBackoffPolicy(int)>(i34);

        l35 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i13);

        l36 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i14);

        l37 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i15);

        l38 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i16);

        i39 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i17);

        if i39 == 0 goto label13;

        $z13 = 1;

        goto label14;

     label13:
        $z13 = 0;

     label14:
        z0 = $z13;

        i40 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i18);

        $r19 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r9 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.OutOfQuotaPolicy intToOutOfQuotaPolicy(int)>(i40);

        i41 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i19);

        i42 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i20);

        i43 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i21);

        $r20 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r11 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.NetworkType intToNetworkType(int)>(i43);

        i44 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i22);

        if i44 == 0 goto label15;

        $z14 = 1;

        goto label16;

     label15:
        $z14 = 0;

     label16:
        z1 = $z14;

        i45 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i23);

        if i45 == 0 goto label17;

        $z15 = 1;

        goto label18;

     label17:
        $z15 = 0;

     label18:
        z2 = $z15;

        i46 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i24);

        if i46 == 0 goto label19;

        $z16 = 1;

        goto label20;

     label19:
        $z16 = 0;

     label20:
        z3 = $z16;

        i47 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i25);

        if i47 == 0 goto label21;

        $z17 = 1;

        goto label22;

     label21:
        $z17 = 0;

     label22:
        z4 = $z17;

        l48 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i26);

        l49 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i27);

        $z11 = interfaceinvoke r3.<android.database.Cursor: boolean isNull(int)>(i28);

        if $z11 == 0 goto label23;

        r30 = null;

        goto label24;

     label23:
        r30 = interfaceinvoke r3.<android.database.Cursor: byte[] getBlob(int)>(i28);

     label24:
        $r21 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r12 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: java.util.Set byteArrayToSetOfTriggers(byte[])>(r30);

        $r22 = new androidx.work.Constraints;

        specialinvoke $r22.<androidx.work.Constraints: void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean,long,long,java.util.Set)>(r11, z1, z2, z3, z4, l48, l49, r12);

        r10 = $r22;

        $r23 = new androidx.work.impl.model.WorkSpec;

        specialinvoke $r23.<androidx.work.impl.model.WorkSpec: void <init>(java.lang.String,androidx.work.WorkInfo$State,java.lang.String,java.lang.String,androidx.work.Data,androidx.work.Data,long,long,long,androidx.work.Constraints,int,androidx.work.BackoffPolicy,long,long,long,long,boolean,androidx.work.OutOfQuotaPolicy,int,int)>(r25, r5, r26, r27, r6, r7, l30, l31, l32, r10, i33, r8, l35, l36, l37, l38, z0, r9, i41, i42);

        r31 = $r23;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r31);

        goto label02;

     label25:
        r32 = r4;

     label26:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        return r32;

     label27:
        $r24 := @caughtexception;

        r13 = $r24;

     label28:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        virtualinvoke r2.<androidx.room.RoomSQLiteQuery: void release()>();

        throw r13;

        catch java.lang.Throwable from label01 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public static java.util.List getRequiredConverters()
    {
        java.util.List $r0;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }

    private void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.collection.ArrayMap r1, $r12, $r18, r20;
        java.util.Set r2;
        androidx.room.RoomSQLiteQuery r3;
        java.lang.String r4, $r14, r22, r24, r26;
        java.util.ArrayList r5, $r16;
        java.lang.Throwable r6, $r19;
        boolean $z0, $z1, $z2, $z3;
        int $i0, i1, i2, i3, i4, i5, i6, i7;
        androidx.room.RoomDatabase $r9;
        java.lang.Object $r10, $r11, $r13, $r15;
        java.lang.StringBuilder r21;
        java.util.Iterator r23;
        android.database.Cursor r25;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: androidx.collection.ArrayMap;

        r2 = virtualinvoke r1.<androidx.collection.ArrayMap: java.util.Set keySet()>();

        $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.<androidx.collection.ArrayMap: int size()>();

        if $i0 <= 999 goto label05;

        $r12 = new androidx.collection.ArrayMap;

        specialinvoke $r12.<androidx.collection.ArrayMap: void <init>(int)>(999);

        r20 = $r12;

        i1 = 0;

        i2 = 0;

        i3 = virtualinvoke r1.<androidx.collection.ArrayMap: int size()>();

     label02:
        if i2 >= i3 goto label03;

        $r13 = virtualinvoke r1.<androidx.collection.ArrayMap: java.lang.Object keyAt(int)>(i2);

        $r14 = (java.lang.String) $r13;

        $r15 = virtualinvoke r1.<androidx.collection.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r16 = (java.util.ArrayList) $r15;

        virtualinvoke r20.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r16);

        i2 = i2 + 1;

        i1 = i1 + 1;

        if i1 != 999 goto label02;

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)>(r20);

        $r18 = new androidx.collection.ArrayMap;

        specialinvoke $r18.<androidx.collection.ArrayMap: void <init>(int)>(999);

        r20 = $r18;

        i1 = 0;

        goto label02;

     label03:
        if i1 <= 0 goto label04;

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)>(r20);

     label04:
        return;

     label05:
        r21 = staticinvoke <androidx.room.util.StringUtil: java.lang.StringBuilder newStringBuilder()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT `tag`,`work_spec_id` FROM `WorkTag` WHERE `work_spec_id` IN (");

        i4 = interfaceinvoke r2.<java.util.Set: int size()>();

        staticinvoke <androidx.room.util.StringUtil: void appendPlaceholders(java.lang.StringBuilder,int)>(r21, i4);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r22 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        i5 = 0 + i4;

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>(r22, i5);

        i6 = 1;

        r23 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r11 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.lang.String) $r11;

        if r24 != null goto label07;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(i6);

        goto label08;

     label07:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(i6, r24);

     label08:
        i6 = i6 + 1;

        goto label06;

     label09:
        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r25 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r9, r3, 0, null);

     label10:
        i7 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r25, "work_spec_id");

        if i7 != -1 goto label12;

     label11:
        interfaceinvoke r25.<android.database.Cursor: void close()>();

        return;

     label12:
        $z2 = interfaceinvoke r25.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label16;

        r4 = interfaceinvoke r25.<android.database.Cursor: java.lang.String getString(int)>(i7);

        $r10 = virtualinvoke r1.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (java.util.ArrayList) $r10;

        if r5 == null goto label15;

        $z3 = interfaceinvoke r25.<android.database.Cursor: boolean isNull(int)>(0);

        if $z3 == 0 goto label13;

        r26 = null;

        goto label14;

     label13:
        r26 = interfaceinvoke r25.<android.database.Cursor: java.lang.String getString(int)>(0);

     label14:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r26);

     label15:
        goto label12;

     label16:
        interfaceinvoke r25.<android.database.Cursor: void close()>();

        goto label19;

     label17:
        $r19 := @caughtexception;

        r6 = $r19;

     label18:
        interfaceinvoke r25.<android.database.Cursor: void close()>();

        throw r6;

     label19:
        return;

        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.collection.ArrayMap r1, $r13, $r19, r21;
        java.util.Set r2;
        androidx.room.RoomSQLiteQuery r3;
        java.lang.String r4, $r15, r23, r25;
        java.util.ArrayList r5, $r17;
        androidx.work.Data r6;
        java.lang.Throwable r7, $r20;
        boolean $z0, $z1, $z2, $z3;
        int $i0, i1, i2, i3, i4, i5, i6, i7;
        androidx.room.RoomDatabase $r10;
        java.lang.Object $r11, $r12, $r14, $r16;
        java.lang.StringBuilder r22;
        java.util.Iterator r24;
        android.database.Cursor r26;
        byte[] r27;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter0: androidx.collection.ArrayMap;

        r2 = virtualinvoke r1.<androidx.collection.ArrayMap: java.util.Set keySet()>();

        $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.<androidx.collection.ArrayMap: int size()>();

        if $i0 <= 999 goto label05;

        $r13 = new androidx.collection.ArrayMap;

        specialinvoke $r13.<androidx.collection.ArrayMap: void <init>(int)>(999);

        r21 = $r13;

        i1 = 0;

        i2 = 0;

        i3 = virtualinvoke r1.<androidx.collection.ArrayMap: int size()>();

     label02:
        if i2 >= i3 goto label03;

        $r14 = virtualinvoke r1.<androidx.collection.ArrayMap: java.lang.Object keyAt(int)>(i2);

        $r15 = (java.lang.String) $r14;

        $r16 = virtualinvoke r1.<androidx.collection.ArrayMap: java.lang.Object valueAt(int)>(i2);

        $r17 = (java.util.ArrayList) $r16;

        virtualinvoke r21.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r17);

        i2 = i2 + 1;

        i1 = i1 + 1;

        if i1 != 999 goto label02;

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)>(r21);

        $r19 = new androidx.collection.ArrayMap;

        specialinvoke $r19.<androidx.collection.ArrayMap: void <init>(int)>(999);

        r21 = $r19;

        i1 = 0;

        goto label02;

     label03:
        if i1 <= 0 goto label04;

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)>(r21);

     label04:
        return;

     label05:
        r22 = staticinvoke <androidx.room.util.StringUtil: java.lang.StringBuilder newStringBuilder()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT `progress`,`work_spec_id` FROM `WorkProgress` WHERE `work_spec_id` IN (");

        i4 = interfaceinvoke r2.<java.util.Set: int size()>();

        staticinvoke <androidx.room.util.StringUtil: void appendPlaceholders(java.lang.StringBuilder,int)>(r22, i4);

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r23 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        i5 = 0 + i4;

        r3 = staticinvoke <androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)>(r23, i5);

        i6 = 1;

        r24 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r12 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.lang.String) $r12;

        if r25 != null goto label07;

        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindNull(int)>(i6);

        goto label08;

     label07:
        virtualinvoke r3.<androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)>(i6, r25);

     label08:
        i6 = i6 + 1;

        goto label06;

     label09:
        $r10 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        r26 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r10, r3, 0, null);

     label10:
        i7 = staticinvoke <androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)>(r26, "work_spec_id");

        if i7 != -1 goto label12;

     label11:
        interfaceinvoke r26.<android.database.Cursor: void close()>();

        return;

     label12:
        $z2 = interfaceinvoke r26.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label16;

        r4 = interfaceinvoke r26.<android.database.Cursor: java.lang.String getString(int)>(i7);

        $r11 = virtualinvoke r1.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (java.util.ArrayList) $r11;

        if r5 == null goto label15;

        $z3 = interfaceinvoke r26.<android.database.Cursor: boolean isNull(int)>(0);

        if $z3 == 0 goto label13;

        r27 = null;

        goto label14;

     label13:
        r27 = interfaceinvoke r26.<android.database.Cursor: byte[] getBlob(int)>(0);

     label14:
        r6 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r27);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label15:
        goto label12;

     label16:
        interfaceinvoke r26.<android.database.Cursor: void close()>();

        goto label19;

     label17:
        $r20 := @caughtexception;

        r7 = $r20;

     label18:
        interfaceinvoke r26.<android.database.Cursor: void close()>();

        throw r7;

     label19:
        return;

        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    static androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.room.RoomDatabase $r1;

        r0 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        $r1 = r0.<androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase __db>;

        return $r1;
    }

    static void access$100(androidx.work.impl.model.WorkSpecDao_Impl, androidx.collection.ArrayMap)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.collection.ArrayMap r1;

        r0 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter1: androidx.collection.ArrayMap;

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)>(r1);

        return;
    }

    static void access$200(androidx.work.impl.model.WorkSpecDao_Impl, androidx.collection.ArrayMap)
    {
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.collection.ArrayMap r1;

        r0 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r1 := @parameter1: androidx.collection.ArrayMap;

        specialinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)>(r1);

        return;
    }

androidx.work.impl.model.WorkSpecDao_Impl$1
<androidx.work.impl.model.WorkSpecDao_Impl$1: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$1 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$1;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$1: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.EntityInsertionAdapter: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$1 r0;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$1;

        return "INSERT OR IGNORE INTO `WorkSpec` (`id`,`state`,`worker_class_name`,`input_merger_class_name`,`input`,`output`,`initial_delay`,`interval_duration`,`flex_duration`,`run_attempt_count`,`backoff_policy`,`backoff_delay_duration`,`last_enqueue_time`,`minimum_retention_duration`,`schedule_requested_at`,`run_in_foreground`,`out_of_quota_policy`,`period_count`,`generation`,`required_network_type`,`requires_charging`,`requires_device_idle`,`requires_battery_not_low`,`requires_storage_not_low`,`trigger_content_update_delay`,`trigger_max_content_delay`,`content_uri_triggers`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
    }

    public void bind(androidx.sqlite.db.SupportSQLiteStatement, androidx.work.impl.model.WorkSpec)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$1 r0;
        androidx.sqlite.db.SupportSQLiteStatement r1;
        androidx.work.impl.model.WorkSpec r2;
        int i0, i1, i2, i3, $i8, $i17, $i19;
        byte[] r3, r4, r6;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        androidx.work.Constraints r5;
        java.lang.String $r7, $r8, $r11, $r12, $r13, $r14;
        androidx.work.impl.model.WorkTypeConverters $r9, $r17, $r19, $r21, $r23;
        androidx.work.WorkInfo$State $r10;
        long $l4, $l5, $l6, $l7, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l18, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27;
        androidx.work.Data $r15, $r16;
        androidx.work.BackoffPolicy $r18;
        androidx.work.OutOfQuotaPolicy $r20;
        androidx.work.NetworkType $r22;
        java.util.Set $r24;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$1;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteStatement;

        r2 := @parameter1: androidx.work.impl.model.WorkSpec;

        $r7 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String id>;

        if $r7 != null goto label01;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(1);

        goto label02;

     label01:
        $r8 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String id>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(1, $r8);

     label02:
        $r9 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        $r10 = r2.<androidx.work.impl.model.WorkSpec: androidx.work.WorkInfo$State state>;

        i0 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: int stateToInt(androidx.work.WorkInfo$State)>($r10);

        $l4 = (long) i0;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(2, $l4);

        $r11 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String workerClassName>;

        if $r11 != null goto label03;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(3);

        goto label04;

     label03:
        $r12 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String workerClassName>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(3, $r12);

     label04:
        $r13 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String inputMergerClassName>;

        if $r13 != null goto label05;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(4);

        goto label06;

     label05:
        $r14 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String inputMergerClassName>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(4, $r14);

     label06:
        $r15 = r2.<androidx.work.impl.model.WorkSpec: androidx.work.Data input>;

        r3 = staticinvoke <androidx.work.Data: byte[] toByteArrayInternal(androidx.work.Data)>($r15);

        if r3 != null goto label07;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(5);

        goto label08;

     label07:
        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindBlob(int,byte[])>(5, r3);

     label08:
        $r16 = r2.<androidx.work.impl.model.WorkSpec: androidx.work.Data output>;

        r4 = staticinvoke <androidx.work.Data: byte[] toByteArrayInternal(androidx.work.Data)>($r16);

        if r4 != null goto label09;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(6);

        goto label10;

     label09:
        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindBlob(int,byte[])>(6, r4);

     label10:
        $l5 = r2.<androidx.work.impl.model.WorkSpec: long initialDelay>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(7, $l5);

        $l6 = r2.<androidx.work.impl.model.WorkSpec: long intervalDuration>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(8, $l6);

        $l7 = r2.<androidx.work.impl.model.WorkSpec: long flexDuration>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(9, $l7);

        $i8 = r2.<androidx.work.impl.model.WorkSpec: int runAttemptCount>;

        $l9 = (long) $i8;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(10, $l9);

        $r17 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        $r18 = r2.<androidx.work.impl.model.WorkSpec: androidx.work.BackoffPolicy backoffPolicy>;

        i1 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: int backoffPolicyToInt(androidx.work.BackoffPolicy)>($r18);

        $l10 = (long) i1;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(11, $l10);

        $l11 = r2.<androidx.work.impl.model.WorkSpec: long backoffDelayDuration>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(12, $l11);

        $l12 = r2.<androidx.work.impl.model.WorkSpec: long lastEnqueueTime>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(13, $l12);

        $l13 = r2.<androidx.work.impl.model.WorkSpec: long minimumRetentionDuration>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(14, $l13);

        $l14 = r2.<androidx.work.impl.model.WorkSpec: long scheduleRequestedAt>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(15, $l14);

        $z5 = r2.<androidx.work.impl.model.WorkSpec: boolean expedited>;

        if $z5 == 0 goto label11;

        $z10 = 1;

        goto label12;

     label11:
        $z10 = 0;

     label12:
        z0 = $z10;

        $l15 = (long) z0;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(16, $l15);

        $r19 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        $r20 = r2.<androidx.work.impl.model.WorkSpec: androidx.work.OutOfQuotaPolicy outOfQuotaPolicy>;

        i2 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: int outOfQuotaPolicyToInt(androidx.work.OutOfQuotaPolicy)>($r20);

        $l16 = (long) i2;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(17, $l16);

        $i17 = virtualinvoke r2.<androidx.work.impl.model.WorkSpec: int getPeriodCount()>();

        $l18 = (long) $i17;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(18, $l18);

        $i19 = virtualinvoke r2.<androidx.work.impl.model.WorkSpec: int getGeneration()>();

        $l20 = (long) $i19;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(19, $l20);

        r5 = r2.<androidx.work.impl.model.WorkSpec: androidx.work.Constraints constraints>;

        if r5 == null goto label23;

        $r21 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        $r22 = virtualinvoke r5.<androidx.work.Constraints: androidx.work.NetworkType getRequiredNetworkType()>();

        i3 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: int networkTypeToInt(androidx.work.NetworkType)>($r22);

        $l21 = (long) i3;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(20, $l21);

        $z6 = virtualinvoke r5.<androidx.work.Constraints: boolean requiresCharging()>();

        if $z6 == 0 goto label13;

        $z11 = 1;

        goto label14;

     label13:
        $z11 = 0;

     label14:
        z1 = $z11;

        $l22 = (long) z1;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(21, $l22);

        $z7 = virtualinvoke r5.<androidx.work.Constraints: boolean requiresDeviceIdle()>();

        if $z7 == 0 goto label15;

        $z12 = 1;

        goto label16;

     label15:
        $z12 = 0;

     label16:
        z2 = $z12;

        $l23 = (long) z2;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(22, $l23);

        $z8 = virtualinvoke r5.<androidx.work.Constraints: boolean requiresBatteryNotLow()>();

        if $z8 == 0 goto label17;

        $z13 = 1;

        goto label18;

     label17:
        $z13 = 0;

     label18:
        z3 = $z13;

        $l24 = (long) z3;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(23, $l24);

        $z9 = virtualinvoke r5.<androidx.work.Constraints: boolean requiresStorageNotLow()>();

        if $z9 == 0 goto label19;

        $z14 = 1;

        goto label20;

     label19:
        $z14 = 0;

     label20:
        z4 = $z14;

        $l25 = (long) z4;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(24, $l25);

        $l26 = virtualinvoke r5.<androidx.work.Constraints: long getContentTriggerUpdateDelayMillis()>();

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(25, $l26);

        $l27 = virtualinvoke r5.<androidx.work.Constraints: long getContentTriggerMaxDelayMillis()>();

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(26, $l27);

        $r23 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        $r24 = virtualinvoke r5.<androidx.work.Constraints: java.util.Set getContentUriTriggers()>();

        r6 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: byte[] setOfTriggersToByteArray(java.util.Set)>($r24);

        if r6 != null goto label21;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(27);

        goto label22;

     label21:
        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindBlob(int,byte[])>(27, r6);

     label22:
        goto label24;

     label23:
        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(20);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(21);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(22);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(23);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(24);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(25);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(26);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(27);

     label24:
        return;
    }

    public volatile void bind(androidx.sqlite.db.SupportSQLiteStatement, java.lang.Object)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$1 r0;
        androidx.sqlite.db.SupportSQLiteStatement r1;
        java.lang.Object r2;
        androidx.work.impl.model.WorkSpec $r3;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$1;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteStatement;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.work.impl.model.WorkSpec) r2;

        virtualinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkSpec)>(r1, $r3);

        return;
    }

androidx.work.impl.model.WorkSpecDao_Impl$10
<androidx.work.impl.model.WorkSpecDao_Impl$10: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$10 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$10;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$10: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$10 r0;
        java.lang.String r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$10;

        r1 = "UPDATE workspec SET schedule_requested_at=? WHERE id=?";

        return "UPDATE workspec SET schedule_requested_at=? WHERE id=?";
    }

androidx.work.impl.model.WorkSpecDao_Impl$11
<androidx.work.impl.model.WorkSpecDao_Impl$11: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$11 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$11;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$11: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$11 r0;
        java.lang.String r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$11;

        r1 = "UPDATE workspec SET schedule_requested_at=-1 WHERE state NOT IN (2, 3, 5)";

        return "UPDATE workspec SET schedule_requested_at=-1 WHERE state NOT IN (2, 3, 5)";
    }

androidx.work.impl.model.WorkSpecDao_Impl$12
<androidx.work.impl.model.WorkSpecDao_Impl$12: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$12 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$12;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$12: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$12 r0;
        java.lang.String r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$12;

        r1 = "DELETE FROM workspec WHERE state IN (2, 3, 5) AND (SELECT COUNT(*)=0 FROM dependency WHERE     prerequisite_id=id AND     work_spec_id NOT IN         (SELECT id FROM workspec WHERE state IN (2, 3, 5)))";

        return "DELETE FROM workspec WHERE state IN (2, 3, 5) AND (SELECT COUNT(*)=0 FROM dependency WHERE     prerequisite_id=id AND     work_spec_id NOT IN         (SELECT id FROM workspec WHERE state IN (2, 3, 5)))";
    }

androidx.work.impl.model.WorkSpecDao_Impl$13
<androidx.work.impl.model.WorkSpecDao_Impl$13: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$13 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$13;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$13: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$13 r0;
        java.lang.String r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$13;

        r1 = "UPDATE workspec SET generation=generation+1 WHERE id=?";

        return "UPDATE workspec SET generation=generation+1 WHERE id=?";
    }

androidx.work.impl.model.WorkSpecDao_Impl$14
<androidx.work.impl.model.WorkSpecDao_Impl$14: androidx.room.RoomSQLiteQuery val$_statement>
<androidx.work.impl.model.WorkSpecDao_Impl$14: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomSQLiteQuery)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$14 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomSQLiteQuery r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$14;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomSQLiteQuery;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$14: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$14: androidx.room.RoomSQLiteQuery val$_statement> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List call() throws java.lang.Exception
    {
        androidx.work.impl.model.WorkSpecDao_Impl$14 r0;
        android.database.Cursor r1;
        java.util.ArrayList r2, $r10, r20;
        java.lang.Throwable r3, r4, $r15, $r16;
        androidx.work.impl.model.WorkSpecDao_Impl $r5, $r7, $r11, $r13, $r17;
        androidx.room.RoomDatabase $r6, $r8, $r12, $r14, $r18;
        androidx.room.RoomSQLiteQuery $r9;
        int $i0;
        boolean $z0, $z1;
        java.lang.String r19;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$14;

        $r5 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$14: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r6 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r5);

        virtualinvoke $r6.<androidx.room.RoomDatabase: void beginTransaction()>();

     label01:
        $r7 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$14: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r8 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r7);

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$14: androidx.room.RoomSQLiteQuery val$_statement>;

        r1 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r8, $r9, 0, null);

     label02:
        $r10 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = $r10;

     label03:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label06;

        $z1 = interfaceinvoke r1.<android.database.Cursor: boolean isNull(int)>(0);

        if $z1 == 0 goto label04;

        r19 = null;

        goto label05;

     label04:
        r19 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

     label05:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r19);

        goto label03;

     label06:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$14: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r12 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r11);

        virtualinvoke $r12.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

        r20 = r2;

     label07:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label08:
        $r13 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$14: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r14 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r13);

        virtualinvoke $r14.<androidx.room.RoomDatabase: void endTransaction()>();

        return r20;

     label09:
        $r15 := @caughtexception;

        r3 = $r15;

     label10:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r3;

     label11:
        $r16 := @caughtexception;

        r4 = $r16;

     label12:
        $r17 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$14: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r18 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r17);

        virtualinvoke $r18.<androidx.room.RoomDatabase: void endTransaction()>();

        throw r4;

        catch java.lang.Throwable from label02 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label01 to label08 with label11;
        catch java.lang.Throwable from label09 to label12 with label11;
    }

    protected void finalize()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$14 r0;
        androidx.room.RoomSQLiteQuery $r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$14;

        $r1 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$14: androidx.room.RoomSQLiteQuery val$_statement>;

        virtualinvoke $r1.<androidx.room.RoomSQLiteQuery: void release()>();

        return;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        androidx.work.impl.model.WorkSpecDao_Impl$14 r0;
        java.util.List $r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$14;

        $r1 = virtualinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl$14: java.util.List call()>();

        return $r1;
    }

androidx.work.impl.model.WorkSpecDao_Impl$15
<androidx.work.impl.model.WorkSpecDao_Impl$15: androidx.room.RoomSQLiteQuery val$_statement>
<androidx.work.impl.model.WorkSpecDao_Impl$15: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomSQLiteQuery)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$15 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomSQLiteQuery r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$15;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomSQLiteQuery;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$15: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$15: androidx.room.RoomSQLiteQuery val$_statement> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List call() throws java.lang.Exception
    {
        androidx.work.impl.model.WorkSpecDao_Impl$15 r0;
        android.database.Cursor r1;
        androidx.collection.ArrayMap r2, r3, $r14, $r15;
        int i0, i1, i2, $i3;
        androidx.work.Data r4;
        java.lang.String r5, r6, r37, r40, r44;
        java.lang.Throwable r7, r8, $r33, $r36;
        androidx.work.impl.model.WorkSpecDao_Impl $r9, $r11, $r16, $r17, $r19, $r21, $r34;
        androidx.room.RoomDatabase $r10, $r12, $r20, $r22, $r35;
        androidx.room.RoomSQLiteQuery $r13;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r18, $r27, $r28, $r31, $r32, r38, r39, r41, r42, r43, r47, r48, r50;
        androidx.work.impl.model.WorkTypeConverters $r23;
        java.lang.Object $r24, $r25, $r29, $r30;
        androidx.work.impl.model.WorkSpec$WorkInfoPojo $r26, r49;
        androidx.work.WorkInfo$State r45;
        byte[] r46;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$15;

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$15: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r10 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r9);

        virtualinvoke $r10.<androidx.room.RoomDatabase: void beginTransaction()>();

     label01:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$15: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r12 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r11);

        $r13 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$15: androidx.room.RoomSQLiteQuery val$_statement>;

        r1 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r12, $r13, 1, null);

     label02:
        $r14 = new androidx.collection.ArrayMap;

        specialinvoke $r14.<androidx.collection.ArrayMap: void <init>()>();

        r2 = $r14;

        $r15 = new androidx.collection.ArrayMap;

        specialinvoke $r15.<androidx.collection.ArrayMap: void <init>()>();

        r3 = $r15;

     label03:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label06;

        r37 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r29 = virtualinvoke r2.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r37);

        r38 = (java.util.ArrayList) $r29;

        if r38 != null goto label04;

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        r39 = $r32;

        virtualinvoke r2.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r37, r39);

     label04:
        r40 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r30 = virtualinvoke r3.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r40);

        r41 = (java.util.ArrayList) $r30;

        if r41 != null goto label05;

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        r42 = $r31;

        virtualinvoke r3.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r40, r42);

     label05:
        goto label03;

     label06:
        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(-1);

        $r16 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$15: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: void access$100(androidx.work.impl.model.WorkSpecDao_Impl,androidx.collection.ArrayMap)>($r16, r2);

        $r17 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$15: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: void access$200(androidx.work.impl.model.WorkSpecDao_Impl,androidx.collection.ArrayMap)>($r17, r3);

        $r18 = new java.util.ArrayList;

        $i3 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>($i3);

        r43 = $r18;

     label07:
        $z1 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label14;

        $z2 = interfaceinvoke r1.<android.database.Cursor: boolean isNull(int)>(0);

        if $z2 == 0 goto label08;

        r44 = null;

        goto label09;

     label08:
        r44 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

     label09:
        i0 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(1);

        $r23 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r45 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i0);

        $z3 = interfaceinvoke r1.<android.database.Cursor: boolean isNull(int)>(2);

        if $z3 == 0 goto label10;

        r46 = null;

        goto label11;

     label10:
        r46 = interfaceinvoke r1.<android.database.Cursor: byte[] getBlob(int)>(2);

     label11:
        r4 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r46);

        i1 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(3);

        i2 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(4);

        r5 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r24 = virtualinvoke r2.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r47 = (java.util.ArrayList) $r24;

        if r47 != null goto label12;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r47 = $r28;

     label12:
        r6 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r25 = virtualinvoke r3.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        r48 = (java.util.ArrayList) $r25;

        if r48 != null goto label13;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r48 = $r27;

     label13:
        $r26 = new androidx.work.impl.model.WorkSpec$WorkInfoPojo;

        specialinvoke $r26.<androidx.work.impl.model.WorkSpec$WorkInfoPojo: void <init>(java.lang.String,androidx.work.WorkInfo$State,androidx.work.Data,int,int,java.util.List,java.util.List)>(r44, r45, r4, i1, i2, r47, r48);

        r49 = $r26;

        interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(r49);

        goto label07;

     label14:
        $r19 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$15: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r20 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r19);

        virtualinvoke $r20.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

        r50 = r43;

     label15:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label16:
        $r21 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$15: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r22 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r21);

        virtualinvoke $r22.<androidx.room.RoomDatabase: void endTransaction()>();

        return r50;

     label17:
        $r36 := @caughtexception;

        r7 = $r36;

     label18:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r7;

     label19:
        $r33 := @caughtexception;

        r8 = $r33;

     label20:
        $r34 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$15: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r35 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r34);

        virtualinvoke $r35.<androidx.room.RoomDatabase: void endTransaction()>();

        throw r8;

        catch java.lang.Throwable from label02 to label15 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label01 to label16 with label19;
        catch java.lang.Throwable from label17 to label20 with label19;
    }

    protected void finalize()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$15 r0;
        androidx.room.RoomSQLiteQuery $r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$15;

        $r1 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$15: androidx.room.RoomSQLiteQuery val$_statement>;

        virtualinvoke $r1.<androidx.room.RoomSQLiteQuery: void release()>();

        return;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        androidx.work.impl.model.WorkSpecDao_Impl$15 r0;
        java.util.List $r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$15;

        $r1 = virtualinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl$15: java.util.List call()>();

        return $r1;
    }

androidx.work.impl.model.WorkSpecDao_Impl$16
<androidx.work.impl.model.WorkSpecDao_Impl$16: androidx.room.RoomSQLiteQuery val$_statement>
<androidx.work.impl.model.WorkSpecDao_Impl$16: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomSQLiteQuery)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$16 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomSQLiteQuery r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$16;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomSQLiteQuery;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$16: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$16: androidx.room.RoomSQLiteQuery val$_statement> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List call() throws java.lang.Exception
    {
        androidx.work.impl.model.WorkSpecDao_Impl$16 r0;
        android.database.Cursor r1;
        androidx.collection.ArrayMap r2, r3, $r14, $r15;
        int i0, i1, i2, $i3;
        androidx.work.Data r4;
        java.lang.String r5, r6, r37, r40, r44;
        java.lang.Throwable r7, r8, $r33, $r36;
        androidx.work.impl.model.WorkSpecDao_Impl $r9, $r11, $r16, $r17, $r19, $r21, $r34;
        androidx.room.RoomDatabase $r10, $r12, $r20, $r22, $r35;
        androidx.room.RoomSQLiteQuery $r13;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r18, $r27, $r28, $r31, $r32, r38, r39, r41, r42, r43, r47, r48, r50;
        androidx.work.impl.model.WorkTypeConverters $r23;
        java.lang.Object $r24, $r25, $r29, $r30;
        androidx.work.impl.model.WorkSpec$WorkInfoPojo $r26, r49;
        androidx.work.WorkInfo$State r45;
        byte[] r46;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$16;

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$16: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r10 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r9);

        virtualinvoke $r10.<androidx.room.RoomDatabase: void beginTransaction()>();

     label01:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$16: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r12 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r11);

        $r13 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$16: androidx.room.RoomSQLiteQuery val$_statement>;

        r1 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r12, $r13, 1, null);

     label02:
        $r14 = new androidx.collection.ArrayMap;

        specialinvoke $r14.<androidx.collection.ArrayMap: void <init>()>();

        r2 = $r14;

        $r15 = new androidx.collection.ArrayMap;

        specialinvoke $r15.<androidx.collection.ArrayMap: void <init>()>();

        r3 = $r15;

     label03:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label06;

        r37 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r29 = virtualinvoke r2.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r37);

        r38 = (java.util.ArrayList) $r29;

        if r38 != null goto label04;

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        r39 = $r32;

        virtualinvoke r2.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r37, r39);

     label04:
        r40 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r30 = virtualinvoke r3.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r40);

        r41 = (java.util.ArrayList) $r30;

        if r41 != null goto label05;

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        r42 = $r31;

        virtualinvoke r3.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r40, r42);

     label05:
        goto label03;

     label06:
        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(-1);

        $r16 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$16: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: void access$100(androidx.work.impl.model.WorkSpecDao_Impl,androidx.collection.ArrayMap)>($r16, r2);

        $r17 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$16: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: void access$200(androidx.work.impl.model.WorkSpecDao_Impl,androidx.collection.ArrayMap)>($r17, r3);

        $r18 = new java.util.ArrayList;

        $i3 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>($i3);

        r43 = $r18;

     label07:
        $z1 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label14;

        $z2 = interfaceinvoke r1.<android.database.Cursor: boolean isNull(int)>(0);

        if $z2 == 0 goto label08;

        r44 = null;

        goto label09;

     label08:
        r44 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

     label09:
        i0 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(1);

        $r23 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r45 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i0);

        $z3 = interfaceinvoke r1.<android.database.Cursor: boolean isNull(int)>(2);

        if $z3 == 0 goto label10;

        r46 = null;

        goto label11;

     label10:
        r46 = interfaceinvoke r1.<android.database.Cursor: byte[] getBlob(int)>(2);

     label11:
        r4 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r46);

        i1 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(3);

        i2 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(4);

        r5 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r24 = virtualinvoke r2.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r47 = (java.util.ArrayList) $r24;

        if r47 != null goto label12;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r47 = $r28;

     label12:
        r6 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r25 = virtualinvoke r3.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        r48 = (java.util.ArrayList) $r25;

        if r48 != null goto label13;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r48 = $r27;

     label13:
        $r26 = new androidx.work.impl.model.WorkSpec$WorkInfoPojo;

        specialinvoke $r26.<androidx.work.impl.model.WorkSpec$WorkInfoPojo: void <init>(java.lang.String,androidx.work.WorkInfo$State,androidx.work.Data,int,int,java.util.List,java.util.List)>(r44, r45, r4, i1, i2, r47, r48);

        r49 = $r26;

        interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(r49);

        goto label07;

     label14:
        $r19 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$16: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r20 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r19);

        virtualinvoke $r20.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

        r50 = r43;

     label15:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label16:
        $r21 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$16: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r22 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r21);

        virtualinvoke $r22.<androidx.room.RoomDatabase: void endTransaction()>();

        return r50;

     label17:
        $r36 := @caughtexception;

        r7 = $r36;

     label18:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r7;

     label19:
        $r33 := @caughtexception;

        r8 = $r33;

     label20:
        $r34 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$16: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r35 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r34);

        virtualinvoke $r35.<androidx.room.RoomDatabase: void endTransaction()>();

        throw r8;

        catch java.lang.Throwable from label02 to label15 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label01 to label16 with label19;
        catch java.lang.Throwable from label17 to label20 with label19;
    }

    protected void finalize()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$16 r0;
        androidx.room.RoomSQLiteQuery $r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$16;

        $r1 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$16: androidx.room.RoomSQLiteQuery val$_statement>;

        virtualinvoke $r1.<androidx.room.RoomSQLiteQuery: void release()>();

        return;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        androidx.work.impl.model.WorkSpecDao_Impl$16 r0;
        java.util.List $r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$16;

        $r1 = virtualinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl$16: java.util.List call()>();

        return $r1;
    }

androidx.work.impl.model.WorkSpecDao_Impl$17
<androidx.work.impl.model.WorkSpecDao_Impl$17: androidx.room.RoomSQLiteQuery val$_statement>
<androidx.work.impl.model.WorkSpecDao_Impl$17: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomSQLiteQuery)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$17 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomSQLiteQuery r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$17;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomSQLiteQuery;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$17: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$17: androidx.room.RoomSQLiteQuery val$_statement> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List call() throws java.lang.Exception
    {
        androidx.work.impl.model.WorkSpecDao_Impl$17 r0;
        android.database.Cursor r1;
        androidx.collection.ArrayMap r2, r3, $r14, $r15;
        int i0, i1, i2, $i3;
        androidx.work.Data r4;
        java.lang.String r5, r6, r37, r40, r44;
        java.lang.Throwable r7, r8, $r33, $r36;
        androidx.work.impl.model.WorkSpecDao_Impl $r9, $r11, $r16, $r17, $r19, $r21, $r34;
        androidx.room.RoomDatabase $r10, $r12, $r20, $r22, $r35;
        androidx.room.RoomSQLiteQuery $r13;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r18, $r27, $r28, $r31, $r32, r38, r39, r41, r42, r43, r47, r48, r50;
        androidx.work.impl.model.WorkTypeConverters $r23;
        java.lang.Object $r24, $r25, $r29, $r30;
        androidx.work.impl.model.WorkSpec$WorkInfoPojo $r26, r49;
        androidx.work.WorkInfo$State r45;
        byte[] r46;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$17;

        $r9 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$17: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r10 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r9);

        virtualinvoke $r10.<androidx.room.RoomDatabase: void beginTransaction()>();

     label01:
        $r11 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$17: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r12 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r11);

        $r13 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$17: androidx.room.RoomSQLiteQuery val$_statement>;

        r1 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r12, $r13, 1, null);

     label02:
        $r14 = new androidx.collection.ArrayMap;

        specialinvoke $r14.<androidx.collection.ArrayMap: void <init>()>();

        r2 = $r14;

        $r15 = new androidx.collection.ArrayMap;

        specialinvoke $r15.<androidx.collection.ArrayMap: void <init>()>();

        r3 = $r15;

     label03:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label06;

        r37 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r29 = virtualinvoke r2.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r37);

        r38 = (java.util.ArrayList) $r29;

        if r38 != null goto label04;

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        r39 = $r32;

        virtualinvoke r2.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r37, r39);

     label04:
        r40 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r30 = virtualinvoke r3.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r40);

        r41 = (java.util.ArrayList) $r30;

        if r41 != null goto label05;

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        r42 = $r31;

        virtualinvoke r3.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r40, r42);

     label05:
        goto label03;

     label06:
        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(-1);

        $r16 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$17: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: void access$100(androidx.work.impl.model.WorkSpecDao_Impl,androidx.collection.ArrayMap)>($r16, r2);

        $r17 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$17: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: void access$200(androidx.work.impl.model.WorkSpecDao_Impl,androidx.collection.ArrayMap)>($r17, r3);

        $r18 = new java.util.ArrayList;

        $i3 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>($i3);

        r43 = $r18;

     label07:
        $z1 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label14;

        $z2 = interfaceinvoke r1.<android.database.Cursor: boolean isNull(int)>(0);

        if $z2 == 0 goto label08;

        r44 = null;

        goto label09;

     label08:
        r44 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

     label09:
        i0 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(1);

        $r23 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        r45 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>(i0);

        $z3 = interfaceinvoke r1.<android.database.Cursor: boolean isNull(int)>(2);

        if $z3 == 0 goto label10;

        r46 = null;

        goto label11;

     label10:
        r46 = interfaceinvoke r1.<android.database.Cursor: byte[] getBlob(int)>(2);

     label11:
        r4 = staticinvoke <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>(r46);

        i1 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(3);

        i2 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(4);

        r5 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r24 = virtualinvoke r2.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r5);

        r47 = (java.util.ArrayList) $r24;

        if r47 != null goto label12;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r47 = $r28;

     label12:
        r6 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r25 = virtualinvoke r3.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        r48 = (java.util.ArrayList) $r25;

        if r48 != null goto label13;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r48 = $r27;

     label13:
        $r26 = new androidx.work.impl.model.WorkSpec$WorkInfoPojo;

        specialinvoke $r26.<androidx.work.impl.model.WorkSpec$WorkInfoPojo: void <init>(java.lang.String,androidx.work.WorkInfo$State,androidx.work.Data,int,int,java.util.List,java.util.List)>(r44, r45, r4, i1, i2, r47, r48);

        r49 = $r26;

        interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(r49);

        goto label07;

     label14:
        $r19 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$17: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r20 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r19);

        virtualinvoke $r20.<androidx.room.RoomDatabase: void setTransactionSuccessful()>();

        r50 = r43;

     label15:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label16:
        $r21 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$17: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r22 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r21);

        virtualinvoke $r22.<androidx.room.RoomDatabase: void endTransaction()>();

        return r50;

     label17:
        $r36 := @caughtexception;

        r7 = $r36;

     label18:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r7;

     label19:
        $r33 := @caughtexception;

        r8 = $r33;

     label20:
        $r34 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$17: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r35 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r34);

        virtualinvoke $r35.<androidx.room.RoomDatabase: void endTransaction()>();

        throw r8;

        catch java.lang.Throwable from label02 to label15 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label01 to label16 with label19;
        catch java.lang.Throwable from label17 to label20 with label19;
    }

    protected void finalize()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$17 r0;
        androidx.room.RoomSQLiteQuery $r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$17;

        $r1 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$17: androidx.room.RoomSQLiteQuery val$_statement>;

        virtualinvoke $r1.<androidx.room.RoomSQLiteQuery: void release()>();

        return;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        androidx.work.impl.model.WorkSpecDao_Impl$17 r0;
        java.util.List $r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$17;

        $r1 = virtualinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl$17: java.util.List call()>();

        return $r1;
    }

androidx.work.impl.model.WorkSpecDao_Impl$18
<androidx.work.impl.model.WorkSpecDao_Impl$18: androidx.room.RoomSQLiteQuery val$_statement>
<androidx.work.impl.model.WorkSpecDao_Impl$18: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomSQLiteQuery)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$18 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomSQLiteQuery r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$18;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomSQLiteQuery;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$18: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$18: androidx.room.RoomSQLiteQuery val$_statement> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Long call() throws java.lang.Exception
    {
        androidx.work.impl.model.WorkSpecDao_Impl$18 r0;
        android.database.Cursor r1;
        java.lang.Long r2;
        java.lang.Throwable r3, $r7;
        androidx.work.impl.model.WorkSpecDao_Impl $r4;
        androidx.room.RoomDatabase $r5;
        androidx.room.RoomSQLiteQuery $r6;
        boolean $z0;
        long l0;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$18;

        $r4 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$18: androidx.work.impl.model.WorkSpecDao_Impl this$0>;

        $r5 = staticinvoke <androidx.work.impl.model.WorkSpecDao_Impl: androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)>($r4);

        $r6 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$18: androidx.room.RoomSQLiteQuery val$_statement>;

        r1 = staticinvoke <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)>($r5, $r6, 0, null);

     label1:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label2;

        l0 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(0);

        goto label3;

     label2:
        l0 = 0L;

     label3:
        r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

     label4:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        return r2;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected void finalize()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$18 r0;
        androidx.room.RoomSQLiteQuery $r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$18;

        $r1 = r0.<androidx.work.impl.model.WorkSpecDao_Impl$18: androidx.room.RoomSQLiteQuery val$_statement>;

        virtualinvoke $r1.<androidx.room.RoomSQLiteQuery: void release()>();

        return;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        androidx.work.impl.model.WorkSpecDao_Impl$18 r0;
        java.lang.Long $r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$18;

        $r1 = virtualinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl$18: java.lang.Long call()>();

        return $r1;
    }

androidx.work.impl.model.WorkSpecDao_Impl$2
<androidx.work.impl.model.WorkSpecDao_Impl$2: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$2 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$2;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$2: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.EntityDeletionOrUpdateAdapter: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$2 r0;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$2;

        return "UPDATE OR ABORT `WorkSpec` SET `id` = ?,`state` = ?,`worker_class_name` = ?,`input_merger_class_name` = ?,`input` = ?,`output` = ?,`initial_delay` = ?,`interval_duration` = ?,`flex_duration` = ?,`run_attempt_count` = ?,`backoff_policy` = ?,`backoff_delay_duration` = ?,`last_enqueue_time` = ?,`minimum_retention_duration` = ?,`schedule_requested_at` = ?,`run_in_foreground` = ?,`out_of_quota_policy` = ?,`period_count` = ?,`generation` = ?,`required_network_type` = ?,`requires_charging` = ?,`requires_device_idle` = ?,`requires_battery_not_low` = ?,`requires_storage_not_low` = ?,`trigger_content_update_delay` = ?,`trigger_max_content_delay` = ?,`content_uri_triggers` = ? WHERE `id` = ?";
    }

    public void bind(androidx.sqlite.db.SupportSQLiteStatement, androidx.work.impl.model.WorkSpec)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$2 r0;
        androidx.sqlite.db.SupportSQLiteStatement r1;
        androidx.work.impl.model.WorkSpec r2;
        int i0, i1, i2, i3, $i8, $i17, $i19;
        byte[] r3, r4, r6;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        androidx.work.Constraints r5;
        java.lang.String $r7, $r8, $r11, $r12, $r13, $r14, $r21, $r22;
        androidx.work.impl.model.WorkTypeConverters $r9, $r17, $r19, $r23, $r25;
        androidx.work.WorkInfo$State $r10;
        long $l4, $l5, $l6, $l7, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l18, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27;
        androidx.work.Data $r15, $r16;
        androidx.work.BackoffPolicy $r18;
        androidx.work.OutOfQuotaPolicy $r20;
        androidx.work.NetworkType $r24;
        java.util.Set $r26;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$2;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteStatement;

        r2 := @parameter1: androidx.work.impl.model.WorkSpec;

        $r7 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String id>;

        if $r7 != null goto label01;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(1);

        goto label02;

     label01:
        $r8 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String id>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(1, $r8);

     label02:
        $r9 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        $r10 = r2.<androidx.work.impl.model.WorkSpec: androidx.work.WorkInfo$State state>;

        i0 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: int stateToInt(androidx.work.WorkInfo$State)>($r10);

        $l4 = (long) i0;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(2, $l4);

        $r11 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String workerClassName>;

        if $r11 != null goto label03;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(3);

        goto label04;

     label03:
        $r12 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String workerClassName>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(3, $r12);

     label04:
        $r13 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String inputMergerClassName>;

        if $r13 != null goto label05;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(4);

        goto label06;

     label05:
        $r14 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String inputMergerClassName>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(4, $r14);

     label06:
        $r15 = r2.<androidx.work.impl.model.WorkSpec: androidx.work.Data input>;

        r3 = staticinvoke <androidx.work.Data: byte[] toByteArrayInternal(androidx.work.Data)>($r15);

        if r3 != null goto label07;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(5);

        goto label08;

     label07:
        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindBlob(int,byte[])>(5, r3);

     label08:
        $r16 = r2.<androidx.work.impl.model.WorkSpec: androidx.work.Data output>;

        r4 = staticinvoke <androidx.work.Data: byte[] toByteArrayInternal(androidx.work.Data)>($r16);

        if r4 != null goto label09;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(6);

        goto label10;

     label09:
        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindBlob(int,byte[])>(6, r4);

     label10:
        $l5 = r2.<androidx.work.impl.model.WorkSpec: long initialDelay>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(7, $l5);

        $l6 = r2.<androidx.work.impl.model.WorkSpec: long intervalDuration>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(8, $l6);

        $l7 = r2.<androidx.work.impl.model.WorkSpec: long flexDuration>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(9, $l7);

        $i8 = r2.<androidx.work.impl.model.WorkSpec: int runAttemptCount>;

        $l9 = (long) $i8;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(10, $l9);

        $r17 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        $r18 = r2.<androidx.work.impl.model.WorkSpec: androidx.work.BackoffPolicy backoffPolicy>;

        i1 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: int backoffPolicyToInt(androidx.work.BackoffPolicy)>($r18);

        $l10 = (long) i1;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(11, $l10);

        $l11 = r2.<androidx.work.impl.model.WorkSpec: long backoffDelayDuration>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(12, $l11);

        $l12 = r2.<androidx.work.impl.model.WorkSpec: long lastEnqueueTime>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(13, $l12);

        $l13 = r2.<androidx.work.impl.model.WorkSpec: long minimumRetentionDuration>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(14, $l13);

        $l14 = r2.<androidx.work.impl.model.WorkSpec: long scheduleRequestedAt>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(15, $l14);

        $z5 = r2.<androidx.work.impl.model.WorkSpec: boolean expedited>;

        if $z5 == 0 goto label11;

        $z10 = 1;

        goto label12;

     label11:
        $z10 = 0;

     label12:
        z0 = $z10;

        $l15 = (long) z0;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(16, $l15);

        $r19 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        $r20 = r2.<androidx.work.impl.model.WorkSpec: androidx.work.OutOfQuotaPolicy outOfQuotaPolicy>;

        i2 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: int outOfQuotaPolicyToInt(androidx.work.OutOfQuotaPolicy)>($r20);

        $l16 = (long) i2;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(17, $l16);

        $i17 = virtualinvoke r2.<androidx.work.impl.model.WorkSpec: int getPeriodCount()>();

        $l18 = (long) $i17;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(18, $l18);

        $i19 = virtualinvoke r2.<androidx.work.impl.model.WorkSpec: int getGeneration()>();

        $l20 = (long) $i19;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(19, $l20);

        r5 = r2.<androidx.work.impl.model.WorkSpec: androidx.work.Constraints constraints>;

        if r5 == null goto label23;

        $r23 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        $r24 = virtualinvoke r5.<androidx.work.Constraints: androidx.work.NetworkType getRequiredNetworkType()>();

        i3 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: int networkTypeToInt(androidx.work.NetworkType)>($r24);

        $l21 = (long) i3;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(20, $l21);

        $z6 = virtualinvoke r5.<androidx.work.Constraints: boolean requiresCharging()>();

        if $z6 == 0 goto label13;

        $z11 = 1;

        goto label14;

     label13:
        $z11 = 0;

     label14:
        z1 = $z11;

        $l22 = (long) z1;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(21, $l22);

        $z7 = virtualinvoke r5.<androidx.work.Constraints: boolean requiresDeviceIdle()>();

        if $z7 == 0 goto label15;

        $z12 = 1;

        goto label16;

     label15:
        $z12 = 0;

     label16:
        z2 = $z12;

        $l23 = (long) z2;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(22, $l23);

        $z8 = virtualinvoke r5.<androidx.work.Constraints: boolean requiresBatteryNotLow()>();

        if $z8 == 0 goto label17;

        $z13 = 1;

        goto label18;

     label17:
        $z13 = 0;

     label18:
        z3 = $z13;

        $l24 = (long) z3;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(23, $l24);

        $z9 = virtualinvoke r5.<androidx.work.Constraints: boolean requiresStorageNotLow()>();

        if $z9 == 0 goto label19;

        $z14 = 1;

        goto label20;

     label19:
        $z14 = 0;

     label20:
        z4 = $z14;

        $l25 = (long) z4;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(24, $l25);

        $l26 = virtualinvoke r5.<androidx.work.Constraints: long getContentTriggerUpdateDelayMillis()>();

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(25, $l26);

        $l27 = virtualinvoke r5.<androidx.work.Constraints: long getContentTriggerMaxDelayMillis()>();

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindLong(int,long)>(26, $l27);

        $r25 = <androidx.work.impl.model.WorkTypeConverters: androidx.work.impl.model.WorkTypeConverters INSTANCE>;

        $r26 = virtualinvoke r5.<androidx.work.Constraints: java.util.Set getContentUriTriggers()>();

        r6 = staticinvoke <androidx.work.impl.model.WorkTypeConverters: byte[] setOfTriggersToByteArray(java.util.Set)>($r26);

        if r6 != null goto label21;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(27);

        goto label22;

     label21:
        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindBlob(int,byte[])>(27, r6);

     label22:
        goto label24;

     label23:
        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(20);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(21);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(22);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(23);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(24);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(25);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(26);

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(27);

     label24:
        $r21 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String id>;

        if $r21 != null goto label25;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindNull(int)>(28);

        goto label26;

     label25:
        $r22 = r2.<androidx.work.impl.model.WorkSpec: java.lang.String id>;

        interfaceinvoke r1.<androidx.sqlite.db.SupportSQLiteStatement: void bindString(int,java.lang.String)>(28, $r22);

     label26:
        return;
    }

    public volatile void bind(androidx.sqlite.db.SupportSQLiteStatement, java.lang.Object)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$2 r0;
        androidx.sqlite.db.SupportSQLiteStatement r1;
        java.lang.Object r2;
        androidx.work.impl.model.WorkSpec $r3;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$2;

        r1 := @parameter0: androidx.sqlite.db.SupportSQLiteStatement;

        r2 := @parameter1: java.lang.Object;

        $r3 = (androidx.work.impl.model.WorkSpec) r2;

        virtualinvoke r0.<androidx.work.impl.model.WorkSpecDao_Impl$2: void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkSpec)>(r1, $r3);

        return;
    }

androidx.work.impl.model.WorkSpecDao_Impl$3
<androidx.work.impl.model.WorkSpecDao_Impl$3: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$3 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$3;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$3: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$3 r0;
        java.lang.String r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$3;

        r1 = "DELETE FROM workspec WHERE id=?";

        return "DELETE FROM workspec WHERE id=?";
    }

androidx.work.impl.model.WorkSpecDao_Impl$4
<androidx.work.impl.model.WorkSpecDao_Impl$4: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$4 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$4;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$4: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$4 r0;
        java.lang.String r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$4;

        r1 = "UPDATE workspec SET state=? WHERE id=?";

        return "UPDATE workspec SET state=? WHERE id=?";
    }

androidx.work.impl.model.WorkSpecDao_Impl$5
<androidx.work.impl.model.WorkSpecDao_Impl$5: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$5 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$5;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$5: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$5 r0;
        java.lang.String r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$5;

        r1 = "UPDATE workspec SET period_count=period_count+1 WHERE id=?";

        return "UPDATE workspec SET period_count=period_count+1 WHERE id=?";
    }

androidx.work.impl.model.WorkSpecDao_Impl$6
<androidx.work.impl.model.WorkSpecDao_Impl$6: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$6 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$6;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$6: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$6 r0;
        java.lang.String r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$6;

        r1 = "UPDATE workspec SET output=? WHERE id=?";

        return "UPDATE workspec SET output=? WHERE id=?";
    }

androidx.work.impl.model.WorkSpecDao_Impl$7
<androidx.work.impl.model.WorkSpecDao_Impl$7: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$7 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$7;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$7: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$7 r0;
        java.lang.String r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$7;

        r1 = "UPDATE workspec SET last_enqueue_time=? WHERE id=?";

        return "UPDATE workspec SET last_enqueue_time=? WHERE id=?";
    }

androidx.work.impl.model.WorkSpecDao_Impl$8
<androidx.work.impl.model.WorkSpecDao_Impl$8: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$8 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$8;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$8: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$8 r0;
        java.lang.String r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$8;

        r1 = "UPDATE workspec SET run_attempt_count=run_attempt_count+1 WHERE id=?";

        return "UPDATE workspec SET run_attempt_count=run_attempt_count+1 WHERE id=?";
    }

androidx.work.impl.model.WorkSpecDao_Impl$9
<androidx.work.impl.model.WorkSpecDao_Impl$9: androidx.work.impl.model.WorkSpecDao_Impl this$0>
    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$9 r0;
        androidx.work.impl.model.WorkSpecDao_Impl r1;
        androidx.room.RoomDatabase r2;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$9;

        r1 := @parameter0: androidx.work.impl.model.WorkSpecDao_Impl;

        r2 := @parameter1: androidx.room.RoomDatabase;

        r0.<androidx.work.impl.model.WorkSpecDao_Impl$9: androidx.work.impl.model.WorkSpecDao_Impl this$0> = r1;

        specialinvoke r0.<androidx.room.SharedSQLiteStatement: void <init>(androidx.room.RoomDatabase)>(r2);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$9 r0;
        java.lang.String r1;

        r0 := @this: androidx.work.impl.model.WorkSpecDao_Impl$9;

        r1 = "UPDATE workspec SET run_attempt_count=0 WHERE id=?";

        return "UPDATE workspec SET run_attempt_count=0 WHERE id=?";
    }

