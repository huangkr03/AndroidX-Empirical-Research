org.junit.runner.manipulation.Ordering
    public void <init>()
    {
        org.junit.runner.manipulation.Ordering $r0;

        $r0 := @this: org.junit.runner.manipulation.Ordering;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.junit.runner.manipulation.Ordering definedBy(java.lang.Class, org.junit.runner.Description) throws org.junit.runner.manipulation.InvalidOrderingException
    {
        java.lang.Class $r0;
        org.junit.runner.Description $r1;
        java.lang.Class[] $r2;
        java.lang.reflect.Constructor $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        org.junit.runner.manipulation.Ordering$Factory $r6;
        org.junit.runner.manipulation.Ordering $r7;
        java.lang.Throwable $r8, $r12;
        org.junit.runner.manipulation.InvalidOrderingException $r9;
        java.lang.String $r10;
        java.lang.StringBuilder $r11;
        java.lang.NullPointerException $r13;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: org.junit.runner.Description;

        if $r0 == null goto label8;

        if $r1 == null goto label7;

        $r2 = newarray (java.lang.Class)[0];

     label1:
        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r2);

     label2:
        $r4 = newarray (java.lang.Object)[0];

     label3:
        $r5 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

     label4:
        $r6 = (org.junit.runner.manipulation.Ordering$Factory) $r5;

        $r7 = staticinvoke <org.junit.runner.manipulation.Ordering: org.junit.runner.manipulation.Ordering definedBy(org.junit.runner.manipulation.Ordering$Factory,org.junit.runner.Description)>($r6, $r1);

        return $r7;

     label5:
        $r8 := @caughtexception;

        $r9 = new org.junit.runner.manipulation.InvalidOrderingException;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create ordering for ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.junit.runner.manipulation.InvalidOrderingException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r8);

        throw $r9;

     label6:
        $r12 := @caughtexception;

        $r9 = new org.junit.runner.manipulation.InvalidOrderingException;

        $r4 = newarray (java.lang.Object)[2];

        $r10 = staticinvoke <org.junit.runner.manipulation.Ordering: java.lang.String getClassName(java.lang.Class)>($r0);

        $r4[0] = $r10;

        $r10 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4[1] = $r10;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Ordering class %s should have a public constructor with signature %s(Ordering.Context context)", $r4);

        specialinvoke $r9.<org.junit.runner.manipulation.InvalidOrderingException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label7:
        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("annotatedTestClass cannot be null");

        throw $r13;

     label8:
        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("factoryClass cannot be null");

        throw $r13;

        catch java.lang.NoSuchMethodException from label1 to label2 with label6;
        catch java.lang.NoSuchMethodException from label3 to label4 with label6;
        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static org.junit.runner.manipulation.Ordering definedBy(org.junit.runner.manipulation.Ordering$Factory, org.junit.runner.Description) throws org.junit.runner.manipulation.InvalidOrderingException
    {
        org.junit.runner.manipulation.Ordering$Context $r0;
        org.junit.runner.manipulation.Ordering $r1;
        org.junit.runner.manipulation.Ordering$Factory $r2;
        org.junit.runner.Description $r3;
        java.lang.NullPointerException $r4;

        $r2 := @parameter0: org.junit.runner.manipulation.Ordering$Factory;

        $r3 := @parameter1: org.junit.runner.Description;

        if $r2 == null goto label2;

        if $r3 == null goto label1;

        $r0 = new org.junit.runner.manipulation.Ordering$Context;

        specialinvoke $r0.<org.junit.runner.manipulation.Ordering$Context: void <init>(org.junit.runner.Description,org.junit.runner.manipulation.Ordering$Context-IA)>($r3, null);

        $r1 = interfaceinvoke $r2.<org.junit.runner.manipulation.Ordering$Factory: org.junit.runner.manipulation.Ordering create(org.junit.runner.manipulation.Ordering$Context)>($r0);

        return $r1;

     label1:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("annotatedTestClass cannot be null");

        throw $r4;

     label2:
        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("factory cannot be null");

        throw $r4;
    }

    private static java.lang.String getClassName(java.lang.Class)
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getCanonicalName()>();

        if $r1 != null goto label1;

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

     label1:
        return $r1;
    }

    public void apply(java.lang.Object) throws org.junit.runner.manipulation.InvalidOrderingException
    {
        org.junit.runner.manipulation.Ordering $r0;
        java.lang.Object $r1;
        java.lang.NullPointerException r2;

        $r0 := @this: org.junit.runner.manipulation.Ordering;

        $r1 := @parameter0: java.lang.Object;

        r2 = new java.lang.NullPointerException;

        specialinvoke r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r2;
    }

org.junit.runner.manipulation.Ordering$Context-IA
org.junit.runner.manipulation.Ordering$Context
<org.junit.runner.manipulation.Ordering$Context: org.junit.runner.Description description>
    private void <init>(org.junit.runner.Description)
    {
        org.junit.runner.manipulation.Ordering$Context $r0;
        org.junit.runner.Description $r1;

        $r0 := @this: org.junit.runner.manipulation.Ordering$Context;

        $r1 := @parameter0: org.junit.runner.Description;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.junit.runner.manipulation.Ordering$Context: org.junit.runner.Description description> = $r1;

        return;
    }

    void <init>(org.junit.runner.Description, org.junit.runner.manipulation.Ordering$Context-IA)
    {
        org.junit.runner.manipulation.Ordering$Context $r0;
        org.junit.runner.Description $r1;
        org.junit.runner.manipulation.Ordering$Context-IA $r2;

        $r0 := @this: org.junit.runner.manipulation.Ordering$Context;

        $r1 := @parameter0: org.junit.runner.Description;

        $r2 := @parameter1: org.junit.runner.manipulation.Ordering$Context-IA;

        specialinvoke $r0.<org.junit.runner.manipulation.Ordering$Context: void <init>(org.junit.runner.Description)>($r1);

        return;
    }

org.junit.runner.manipulation.Ordering$Factory
<org.junit.runner.manipulation.Ordering$Factory: org.junit.runner.manipulation.Ordering create(org.junit.runner.manipulation.Ordering$Context)>
