androidx.camera.core.impl.utils.executor.CameraXExecutors
    private void <init>()
    {
        androidx.camera.core.impl.utils.executor.CameraXExecutors r0;

        r0 := @this: androidx.camera.core.impl.utils.executor.CameraXExecutors;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.concurrent.ScheduledExecutorService mainThreadExecutor()
    {
        java.util.concurrent.ScheduledExecutorService $r0;

        $r0 = staticinvoke <androidx.camera.core.impl.utils.executor.MainThreadExecutor: java.util.concurrent.ScheduledExecutorService getInstance()>();

        return $r0;
    }

    public static java.util.concurrent.Executor ioExecutor()
    {
        java.util.concurrent.Executor $r0;

        $r0 = staticinvoke <androidx.camera.core.impl.utils.executor.IoExecutor: java.util.concurrent.Executor getInstance()>();

        return $r0;
    }

    public static java.util.concurrent.Executor directExecutor()
    {
        java.util.concurrent.Executor $r0;

        $r0 = staticinvoke <androidx.camera.core.impl.utils.executor.DirectExecutor: java.util.concurrent.Executor getInstance()>();

        return $r0;
    }

    public static java.util.concurrent.Executor newSequentialExecutor(java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor r0;
        androidx.camera.core.impl.utils.executor.SequentialExecutor $r1;

        r0 := @parameter0: java.util.concurrent.Executor;

        $r1 = new androidx.camera.core.impl.utils.executor.SequentialExecutor;

        specialinvoke $r1.<androidx.camera.core.impl.utils.executor.SequentialExecutor: void <init>(java.util.concurrent.Executor)>(r0);

        return $r1;
    }

    public static boolean isSequentialExecutor(java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor r0;
        boolean $z0;

        r0 := @parameter0: java.util.concurrent.Executor;

        $z0 = r0 instanceof androidx.camera.core.impl.utils.executor.SequentialExecutor;

        return $z0;
    }

    public static java.util.concurrent.ScheduledExecutorService myLooperExecutor()
    {
        java.util.concurrent.ScheduledExecutorService $r0;

        $r0 = staticinvoke <androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: java.util.concurrent.ScheduledExecutorService currentThreadExecutor()>();

        return $r0;
    }

    public static java.util.concurrent.ScheduledExecutorService newHandlerExecutor(android.os.Handler)
    {
        android.os.Handler r0;
        androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService $r1;

        r0 := @parameter0: android.os.Handler;

        $r1 = new androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService;

        specialinvoke $r1.<androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService: void <init>(android.os.Handler)>(r0);

        return $r1;
    }

    public static java.util.concurrent.Executor highPriorityExecutor()
    {
        java.util.concurrent.Executor $r0;

        $r0 = staticinvoke <androidx.camera.core.impl.utils.executor.HighPriorityExecutor: java.util.concurrent.Executor getInstance()>();

        return $r0;
    }

