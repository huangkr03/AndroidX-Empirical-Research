androidx.test.services.events.TestStatus
<androidx.test.services.events.TestStatus: android.os.Parcelable$Creator CREATOR>
<androidx.test.services.events.TestStatus: androidx.test.services.events.TestStatus$Status status>
    public int describeContents()
    {
        androidx.test.services.events.TestStatus r0;

        r0 := @this: androidx.test.services.events.TestStatus;

        return 0;
    }

    static void <clinit>()
    {
        androidx.test.services.events.TestStatus$1 $r0;

        $r0 = new androidx.test.services.events.TestStatus$1;

        specialinvoke $r0.<androidx.test.services.events.TestStatus$1: void <init>()>();

        <androidx.test.services.events.TestStatus: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        androidx.test.services.events.TestStatus r0;
        android.os.Parcel r1;
        java.lang.String $r3, $r5;
        java.lang.Object $r4;
        androidx.test.services.events.TestStatus$Status $r6;

        r0 := @this: androidx.test.services.events.TestStatus;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "source cannot be null");

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r4 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, "status cannot be null");

        $r5 = (java.lang.String) $r4;

        $r6 = staticinvoke <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status valueOf(java.lang.String)>($r5);

        r0.<androidx.test.services.events.TestStatus: androidx.test.services.events.TestStatus$Status status> = $r6;

        return;
    }

    public void <init>(androidx.test.services.events.TestStatus$Status)
    {
        androidx.test.services.events.TestStatus r0;
        androidx.test.services.events.TestStatus$Status r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.test.services.events.TestStatus;

        r1 := @parameter0: androidx.test.services.events.TestStatus$Status;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "status cannot be null");

        $r3 = (androidx.test.services.events.TestStatus$Status) $r2;

        r0.<androidx.test.services.events.TestStatus: androidx.test.services.events.TestStatus$Status status> = $r3;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.test.services.events.TestStatus r0;
        android.os.Parcel r1;
        int i0;
        androidx.test.services.events.TestStatus$Status $r2;
        java.lang.String $r3;

        r0 := @this: androidx.test.services.events.TestStatus;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.test.services.events.TestStatus: androidx.test.services.events.TestStatus$Status status>;

        $r3 = virtualinvoke $r2.<androidx.test.services.events.TestStatus$Status: java.lang.String name()>();

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        return;
    }

androidx.test.services.events.TestStatus$1
    public androidx.test.services.events.TestStatus createFromParcel(android.os.Parcel)
    {
        androidx.test.services.events.TestStatus$1 r0;
        android.os.Parcel r1;
        androidx.test.services.events.TestStatus $r2;

        r0 := @this: androidx.test.services.events.TestStatus$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = new androidx.test.services.events.TestStatus;

        specialinvoke $r2.<androidx.test.services.events.TestStatus: void <init>(android.os.Parcel)>(r1);

        return $r2;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.test.services.events.TestStatus$1 r0;
        android.os.Parcel r1;
        androidx.test.services.events.TestStatus $r2;

        r0 := @this: androidx.test.services.events.TestStatus$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.test.services.events.TestStatus$1: androidx.test.services.events.TestStatus createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    void <init>()
    {
        androidx.test.services.events.TestStatus$1 r0;

        r0 := @this: androidx.test.services.events.TestStatus$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.test.services.events.TestStatus[] newArray(int)
    {
        androidx.test.services.events.TestStatus$1 r0;
        int i0;
        androidx.test.services.events.TestStatus[] $r1;

        r0 := @this: androidx.test.services.events.TestStatus$1;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.test.services.events.TestStatus)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.test.services.events.TestStatus$1 r0;
        int i0;
        androidx.test.services.events.TestStatus[] $r1;

        r0 := @this: androidx.test.services.events.TestStatus$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.test.services.events.TestStatus$1: androidx.test.services.events.TestStatus[] newArray(int)>(i0);

        return $r1;
    }

androidx.test.services.events.TestStatus$Status
<androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status CANCELLED>
<androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status IGNORED>
<androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status SKIPPED>
<androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status ABORTED>
<androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status PASSED>
<androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status FAILED>
<androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status[] $VALUES>
    public static androidx.test.services.events.TestStatus$Status valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.test.services.events.TestStatus$Status $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/test/services/events/TestStatus$Status;", r0);

        $r2 = (androidx.test.services.events.TestStatus$Status) $r1;

        return $r2;
    }

    static void <clinit>()
    {
        androidx.test.services.events.TestStatus$Status $r0, $r1, $r2, $r3, $r4, $r5;
        androidx.test.services.events.TestStatus$Status[] $r6;

        $r0 = new androidx.test.services.events.TestStatus$Status;

        specialinvoke $r0.<androidx.test.services.events.TestStatus$Status: void <init>(java.lang.String,int)>("CANCELLED", 0);

        <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status CANCELLED> = $r0;

        $r1 = new androidx.test.services.events.TestStatus$Status;

        specialinvoke $r1.<androidx.test.services.events.TestStatus$Status: void <init>(java.lang.String,int)>("IGNORED", 1);

        <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status IGNORED> = $r1;

        $r2 = new androidx.test.services.events.TestStatus$Status;

        specialinvoke $r2.<androidx.test.services.events.TestStatus$Status: void <init>(java.lang.String,int)>("SKIPPED", 2);

        <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status SKIPPED> = $r2;

        $r3 = new androidx.test.services.events.TestStatus$Status;

        specialinvoke $r3.<androidx.test.services.events.TestStatus$Status: void <init>(java.lang.String,int)>("ABORTED", 3);

        <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status ABORTED> = $r3;

        $r4 = new androidx.test.services.events.TestStatus$Status;

        specialinvoke $r4.<androidx.test.services.events.TestStatus$Status: void <init>(java.lang.String,int)>("PASSED", 4);

        <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status PASSED> = $r4;

        $r5 = new androidx.test.services.events.TestStatus$Status;

        specialinvoke $r5.<androidx.test.services.events.TestStatus$Status: void <init>(java.lang.String,int)>("FAILED", 5);

        <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status FAILED> = $r5;

        $r6 = staticinvoke <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status[] $values()>();

        <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status[] $VALUES> = $r6;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        androidx.test.services.events.TestStatus$Status r0;
        java.lang.String r1;
        int i0;

        r0 := @this: androidx.test.services.events.TestStatus$Status;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    private static androidx.test.services.events.TestStatus$Status[] $values()
    {
        androidx.test.services.events.TestStatus$Status[] $r0;
        androidx.test.services.events.TestStatus$Status $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newarray (androidx.test.services.events.TestStatus$Status)[6];

        $r1 = <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status CANCELLED>;

        $r0[0] = $r1;

        $r2 = <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status IGNORED>;

        $r0[1] = $r2;

        $r3 = <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status SKIPPED>;

        $r0[2] = $r3;

        $r4 = <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status ABORTED>;

        $r0[3] = $r4;

        $r5 = <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status PASSED>;

        $r0[4] = $r5;

        $r6 = <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status FAILED>;

        $r0[5] = $r6;

        return $r0;
    }

    public static androidx.test.services.events.TestStatus$Status[] values()
    {
        androidx.test.services.events.TestStatus$Status[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.test.services.events.TestStatus$Status: androidx.test.services.events.TestStatus$Status[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.test.services.events.TestStatus$Status[]) $r1;

        return $r2;
    }

