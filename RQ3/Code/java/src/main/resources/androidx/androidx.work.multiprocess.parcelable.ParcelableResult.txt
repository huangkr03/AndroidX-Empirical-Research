androidx.work.multiprocess.parcelable.ParcelableResult
<androidx.work.multiprocess.parcelable.ParcelableResult: androidx.work.ListenableWorker$Result mResult>
<androidx.work.multiprocess.parcelable.ParcelableResult: android.os.Parcelable$Creator CREATOR>
    public void <init>(androidx.work.ListenableWorker$Result)
    {
        androidx.work.multiprocess.parcelable.ParcelableResult r0;
        androidx.work.ListenableWorker$Result r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableResult;

        r1 := @parameter0: androidx.work.ListenableWorker$Result;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableResult: androidx.work.ListenableWorker$Result mResult> = r1;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        androidx.work.multiprocess.parcelable.ParcelableResult r0;
        android.os.Parcel r1;
        int i0;
        androidx.work.multiprocess.parcelable.ParcelableData r2, $r3;
        androidx.work.Data $r4;
        androidx.work.ListenableWorker$Result $r5;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableResult;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = new androidx.work.multiprocess.parcelable.ParcelableData;

        specialinvoke $r3.<androidx.work.multiprocess.parcelable.ParcelableData: void <init>(android.os.Parcel)>(r1);

        r2 = $r3;

        $r4 = virtualinvoke r2.<androidx.work.multiprocess.parcelable.ParcelableData: androidx.work.Data getData()>();

        $r5 = staticinvoke <androidx.work.multiprocess.parcelable.ParcelableResult: androidx.work.ListenableWorker$Result intToResultType(int,androidx.work.Data)>(i0, $r4);

        r0.<androidx.work.multiprocess.parcelable.ParcelableResult: androidx.work.ListenableWorker$Result mResult> = $r5;

        return;
    }

    public int describeContents()
    {
        androidx.work.multiprocess.parcelable.ParcelableResult r0;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableResult;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.work.multiprocess.parcelable.ParcelableResult r0;
        android.os.Parcel r1;
        int i0, i1;
        androidx.work.Data r2;
        androidx.work.multiprocess.parcelable.ParcelableData r3, $r6;
        androidx.work.ListenableWorker$Result $r4, $r5;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableResult;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r4 = r0.<androidx.work.multiprocess.parcelable.ParcelableResult: androidx.work.ListenableWorker$Result mResult>;

        i1 = staticinvoke <androidx.work.multiprocess.parcelable.ParcelableResult: int resultTypeOf(androidx.work.ListenableWorker$Result)>($r4);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r0.<androidx.work.multiprocess.parcelable.ParcelableResult: androidx.work.ListenableWorker$Result mResult>;

        r2 = virtualinvoke $r5.<androidx.work.ListenableWorker$Result: androidx.work.Data getOutputData()>();

        $r6 = new androidx.work.multiprocess.parcelable.ParcelableData;

        specialinvoke $r6.<androidx.work.multiprocess.parcelable.ParcelableData: void <init>(androidx.work.Data)>(r2);

        r3 = $r6;

        virtualinvoke r3.<androidx.work.multiprocess.parcelable.ParcelableData: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        return;
    }

    public androidx.work.ListenableWorker$Result getResult()
    {
        androidx.work.multiprocess.parcelable.ParcelableResult r0;
        androidx.work.ListenableWorker$Result $r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableResult;

        $r1 = r0.<androidx.work.multiprocess.parcelable.ParcelableResult: androidx.work.ListenableWorker$Result mResult>;

        return $r1;
    }

    private static int resultTypeOf(androidx.work.ListenableWorker$Result)
    {
        androidx.work.ListenableWorker$Result r0;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @parameter0: androidx.work.ListenableWorker$Result;

        $z0 = r0 instanceof androidx.work.ListenableWorker$Result$Retry;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r0 instanceof androidx.work.ListenableWorker$Result$Success;

        if $z1 == 0 goto label2;

        return 2;

     label2:
        $z2 = r0 instanceof androidx.work.ListenableWorker$Result$Failure;

        if $z2 == 0 goto label3;

        return 3;

     label3:
        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Result ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    private static androidx.work.ListenableWorker$Result intToResultType(int, androidx.work.Data)
    {
        int i0;
        androidx.work.Data r0;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        androidx.work.ListenableWorker$Result r6;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.work.Data;

        if i0 != 1 goto label1;

        r6 = staticinvoke <androidx.work.ListenableWorker$Result: androidx.work.ListenableWorker$Result retry()>();

        goto label4;

     label1:
        if i0 != 2 goto label2;

        r6 = staticinvoke <androidx.work.ListenableWorker$Result: androidx.work.ListenableWorker$Result success(androidx.work.Data)>(r0);

        goto label4;

     label2:
        if i0 != 3 goto label3;

        r6 = staticinvoke <androidx.work.ListenableWorker$Result: androidx.work.ListenableWorker$Result failure(androidx.work.Data)>(r0);

        goto label4;

     label3:
        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown result type ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label4:
        return r6;
    }

    static void <clinit>()
    {
        androidx.work.multiprocess.parcelable.ParcelableResult$1 $r0;

        $r0 = new androidx.work.multiprocess.parcelable.ParcelableResult$1;

        specialinvoke $r0.<androidx.work.multiprocess.parcelable.ParcelableResult$1: void <init>()>();

        <androidx.work.multiprocess.parcelable.ParcelableResult: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

