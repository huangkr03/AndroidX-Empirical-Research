androidx.compose.ui.focus.FocusTransactionsKt
    public static final void requestFocus(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r1;
        androidx.compose.ui.node.NodeCoordinator $r2;
        androidx.compose.ui.focus.FocusStateImpl $r3;
        int[] $r4;
        int $i0, $i1, $i2;
        boolean $z0, $z3;
        androidx.compose.ui.focus.FocusDirection$Companion $r5;
        androidx.compose.ui.focus.FocusTransactionsKt$requestFocus$1 $r6;
        kotlin.jvm.functions.Function1 $r7;
        androidx.compose.ui.node.LayoutNode $r8;
        androidx.compose.ui.node.Owner $r9;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r2 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator getCoordinator()>();

        if $r2 == null goto label1;

        $r8 = virtualinvoke $r2.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        if $r8 == null goto label1;

        $r9 = virtualinvoke $r8.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.Owner getOwner$ui_release()>();

        goto label2;

     label1:
        $r9 = null;

     label2:
        if $r9 != null goto label3;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusRequestedOnPlaced(boolean)>(1);

        return;

     label3:
        $r3 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r4 = <androidx.compose.ui.focus.FocusTransactionsKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r3.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label6;
            case 6: goto label7;
            default: goto label9;
        };

     label4:
        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: void sendOnFocusEvent(androidx.compose.ui.focus.FocusModifier)>($r0);

        goto label9;

     label5:
        $z3 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean clearChildFocus(androidx.compose.ui.focus.FocusModifier)>($r0);

        if $z3 == 0 goto label9;

        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: void grantFocus(androidx.compose.ui.focus.FocusModifier)>($r0);

        goto label9;

     label6:
        $r5 = <androidx.compose.ui.focus.FocusDirection: androidx.compose.ui.focus.FocusDirection$Companion Companion>;

        $i2 = virtualinvoke $r5.<androidx.compose.ui.focus.FocusDirection$Companion: int getEnter-dhqQ-8s()>();

        $r6 = <androidx.compose.ui.focus.FocusTransactionsKt$requestFocus$1: androidx.compose.ui.focus.FocusTransactionsKt$requestFocus$1 INSTANCE>;

        $r7 = (kotlin.jvm.functions.Function1) $r6;

        staticinvoke <androidx.compose.ui.focus.TwoDimensionalFocusSearchKt: boolean findChildCorrespondingToFocusEnter--OM-vw8(androidx.compose.ui.focus.FocusModifier,int,kotlin.jvm.functions.Function1)>($r0, $i2, $r7);

        goto label9;

     label7:
        r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier getParent()>();

        if r1 == null goto label8;

        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean requestFocusForChild(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier)>(r1, $r0);

        goto label9;

     label8:
        $z0 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean requestFocusForOwner(androidx.compose.ui.focus.FocusModifier)>($r0);

        if $z0 == 0 goto label9;

        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: void grantFocus(androidx.compose.ui.focus.FocusModifier)>($r0);

     label9:
        return;
    }

    public static final void activateNode(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        androidx.compose.ui.focus.FocusStateImpl $r1, $r3, $r4;
        int[] $r2;
        int $i0, $i1;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r2 = <androidx.compose.ui.focus.FocusTransactionsKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label1;
            default: goto label4;
        };

     label1:
        goto label4;

     label2:
        $r4 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r4);

        goto label4;

     label3:
        $r3 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl ActiveParent>;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r3);

     label4:
        return;
    }

    public static final void deactivateNode(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        androidx.compose.ui.focus.FocusStateImpl $r1, $r3, $r4, $r9;
        int[] $r2;
        int $i0, $i1;
        androidx.compose.ui.node.NodeCoordinator $r5;
        androidx.compose.ui.node.LayoutNode $r6;
        androidx.compose.ui.node.Owner $r7;
        androidx.compose.ui.focus.FocusManager $r8;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r2 = <androidx.compose.ui.focus.FocusTransactionsKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label4;
            default: goto label5;
        };

     label1:
        $r4 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl DeactivatedParent>;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r4);

        goto label5;

     label2:
        $r5 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator getCoordinator()>();

        if $r5 == null goto label3;

        $r6 = virtualinvoke $r5.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        if $r6 == null goto label3;

        $r7 = virtualinvoke $r6.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.Owner getOwner$ui_release()>();

        if $r7 == null goto label3;

        $r8 = interfaceinvoke $r7.<androidx.compose.ui.node.Owner: androidx.compose.ui.focus.FocusManager getFocusManager()>();

        if $r8 == null goto label3;

        interfaceinvoke $r8.<androidx.compose.ui.focus.FocusManager: void clearFocus(boolean)>(1);

        goto label3;

     label3:
        $r9 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Deactivated>;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r9);

        goto label5;

     label4:
        $r3 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Deactivated>;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r3);

     label5:
        return;
    }

    public static final boolean captureFocus(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        androidx.compose.ui.focus.FocusStateImpl $r1, $r3;
        int[] $r2;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r4;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r2 = <androidx.compose.ui.focus.FocusTransactionsKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label3;
            default: goto label4;
        };

     label1:
        $r3 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Captured>;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r3);

        $z0 = 1;

        goto label5;

     label2:
        $z0 = 1;

        goto label5;

     label3:
        $z0 = 0;

        goto label5;

     label4:
        $r4 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r4.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r4;

     label5:
        return $z0;
    }

    public static final boolean freeFocus(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        androidx.compose.ui.focus.FocusStateImpl $r1, $r3;
        int[] $r2;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r4;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r2 = <androidx.compose.ui.focus.FocusTransactionsKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label3;
            default: goto label4;
        };

     label1:
        $r3 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Active>;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r3);

        $z0 = 1;

        goto label5;

     label2:
        $z0 = 1;

        goto label5;

     label3:
        $z0 = 0;

        goto label5;

     label4:
        $r4 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r4.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r4;

     label5:
        return $z0;
    }

    public static final boolean clearFocus(androidx.compose.ui.focus.FocusModifier, boolean)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        boolean z0, $z1, $z2, $z3;
        androidx.compose.ui.focus.FocusStateImpl $r1, $r3, $r4, $r5, $r6;
        int[] $r2;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r7;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r2 = <androidx.compose.ui.focus.FocusTransactionsKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label06;
            case 3: goto label02;
            case 4: goto label08;
            case 5: goto label04;
            case 6: goto label08;
            default: goto label09;
        };

     label01:
        $r6 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r6);

        $z3 = 1;

        goto label10;

     label02:
        $z2 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean clearChildFocus(androidx.compose.ui.focus.FocusModifier)>($r0);

        if $z2 == 0 goto label03;

        $r4 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r4);

        $z3 = 1;

        goto label10;

     label03:
        $z3 = 0;

        goto label10;

     label04:
        $z1 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean clearChildFocus(androidx.compose.ui.focus.FocusModifier)>($r0);

        if $z1 == 0 goto label05;

        $r3 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Deactivated>;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r3);

        $z3 = 1;

        goto label10;

     label05:
        $z3 = 0;

        goto label10;

     label06:
        if z0 == 0 goto label07;

        $r5 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Inactive>;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r5);

     label07:
        $z3 = z0;

        goto label10;

     label08:
        $z3 = 1;

        goto label10;

     label09:
        $r7 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r7.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r7;

     label10:
        return $z3;
    }

    public static boolean clearFocus$default(androidx.compose.ui.focus.FocusModifier, boolean, int, java.lang.Object)
    {
        androidx.compose.ui.focus.FocusModifier r0;
        int i0, $i1;
        java.lang.Object r1;
        boolean $z0, z1;

        r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        z1 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z1 = 0;

     label1:
        $z0 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean clearFocus(androidx.compose.ui.focus.FocusModifier,boolean)>(r0, z1);

        return $z0;
    }

    private static final void grantFocus(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        androidx.compose.ui.focus.FocusStateImpl $r1, $r8;
        int[] $r2;
        int $i0, $i1;
        java.lang.IllegalStateException $r3;
        java.lang.String $r4, $r5;
        kotlin.NoWhenBranchMatchedException $r7;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        $r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r2 = <androidx.compose.ui.focus.FocusTransactionsKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r1.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label1;
            default: goto label4;
        };

     label1:
        $r8 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Active>;

        goto label5;

     label2:
        $r8 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Captured>;

        goto label5;

     label3:
        $r3 = new java.lang.IllegalStateException;

        $r4 = "Granting focus to a deactivated node.";

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label4:
        $r7 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r7.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r7;

     label5:
        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r8);

        return;
    }

    private static final boolean grantFocusToChild(androidx.compose.ui.focus.FocusModifier, androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r1;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter1: androidx.compose.ui.focus.FocusModifier;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusedChild(androidx.compose.ui.focus.FocusModifier)>(r1);

        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: void grantFocus(androidx.compose.ui.focus.FocusModifier)>(r1);

        return 1;
    }

    private static final boolean clearChildFocus(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0, $r2;
        java.lang.String r1, $r4;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        $r2 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier getFocusedChild()>();

        if $r2 != null goto label1;

        r1 = "Required value was null.";

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label1:
        $z0 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean clearFocus$default(androidx.compose.ui.focus.FocusModifier,boolean,int,java.lang.Object)>($r2, 0, 1, null);

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusedChild(androidx.compose.ui.focus.FocusModifier)>(null);

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private static final boolean requestFocusForChild(androidx.compose.ui.focus.FocusModifier, androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0, r1, $r6, r12;
        androidx.compose.runtime.collection.MutableVector $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        androidx.compose.ui.focus.FocusStateImpl $r3, $r5, $r7;
        int[] $r4;
        int $i0, $i1;
        kotlin.NoWhenBranchMatchedException $r8;
        java.lang.IllegalStateException $r9;
        java.lang.String $r10, $r11;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        r1 := @parameter1: androidx.compose.ui.focus.FocusModifier;

        $r2 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.runtime.collection.MutableVector getChildren()>();

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.collection.MutableVector: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label01;

        $r9 = new java.lang.IllegalStateException;

        $r10 = "Non child node cannot request focus.";

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r9;

     label01:
        $r3 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusStateImpl getFocusState()>();

        $r4 = <androidx.compose.ui.focus.FocusTransactionsKt$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r3.<androidx.compose.ui.focus.FocusStateImpl: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label11;
            case 3: goto label03;
            case 4: goto label12;
            case 5: goto label05;
            case 6: goto label08;
            default: goto label13;
        };

     label02:
        $r7 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl ActiveParent>;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r7);

        $z5 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean grantFocusToChild(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier)>($r0, r1);

        goto label14;

     label03:
        $z4 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean clearChildFocus(androidx.compose.ui.focus.FocusModifier)>($r0);

        if $z4 == 0 goto label04;

        $z5 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean grantFocusToChild(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier)>($r0, r1);

        goto label14;

     label04:
        $z5 = 0;

        goto label14;

     label05:
        $r6 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier getFocusedChild()>();

        if $r6 != null goto label06;

        $z5 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean grantFocusToChild(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier)>($r0, r1);

        goto label14;

     label06:
        $z3 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean clearChildFocus(androidx.compose.ui.focus.FocusModifier)>($r0);

        if $z3 == 0 goto label07;

        $z5 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean grantFocusToChild(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier)>($r0, r1);

        goto label14;

     label07:
        $z5 = 0;

        goto label14;

     label08:
        r12 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusModifier getParent()>();

        if r12 != null goto label09;

        $z2 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean requestFocusForOwner(androidx.compose.ui.focus.FocusModifier)>($r0);

        if $z2 == 0 goto label09;

        $r5 = <androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl Active>;

        virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: void setFocusState(androidx.compose.ui.focus.FocusStateImpl)>($r5);

        $z5 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean requestFocusForChild(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier)>($r0, r1);

        goto label14;

     label09:
        if r12 == null goto label10;

        $z1 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean requestFocusForChild(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier)>(r12, $r0);

        if $z1 == 0 goto label10;

        $z5 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean requestFocusForChild(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier)>($r0, r1);

        goto label14;

     label10:
        $z5 = 0;

        goto label14;

     label11:
        $z5 = 0;

        goto label14;

     label12:
        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: void activateNode(androidx.compose.ui.focus.FocusModifier)>($r0);

        z6 = staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: boolean requestFocusForChild(androidx.compose.ui.focus.FocusModifier,androidx.compose.ui.focus.FocusModifier)>($r0, r1);

        staticinvoke <androidx.compose.ui.focus.FocusTransactionsKt: void deactivateNode(androidx.compose.ui.focus.FocusModifier)>($r0);

        $z5 = z6;

        goto label14;

     label13:
        $r8 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r8.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r8;

     label14:
        return $z5;
    }

    private static final boolean requestFocusForOwner(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        androidx.compose.ui.node.NodeCoordinator $r1;
        androidx.compose.ui.node.LayoutNode $r2;
        androidx.compose.ui.node.Owner $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5, $r6;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        $r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.node.NodeCoordinator getCoordinator()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<androidx.compose.ui.node.NodeCoordinator: androidx.compose.ui.node.LayoutNode getLayoutNode()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<androidx.compose.ui.node.LayoutNode: androidx.compose.ui.node.Owner getOwner$ui_release()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<androidx.compose.ui.node.Owner: boolean requestFocus()>();

        goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = "Owner not initialized.";

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        return $z0;
    }

    public static final void sendOnFocusEvent(androidx.compose.ui.focus.FocusModifier)
    {
        androidx.compose.ui.focus.FocusModifier $r0;
        androidx.compose.ui.focus.FocusEventModifierLocal $r1;

        $r0 := @parameter0: androidx.compose.ui.focus.FocusModifier;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = virtualinvoke $r0.<androidx.compose.ui.focus.FocusModifier: androidx.compose.ui.focus.FocusEventModifierLocal getFocusEventListener()>();

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.compose.ui.focus.FocusEventModifierLocal: void propagateFocusEvent()>();

        goto label1;

     label1:
        return;
    }

