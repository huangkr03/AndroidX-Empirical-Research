androidx.media3.exoplayer.video.spherical.Projection
<androidx.media3.exoplayer.video.spherical.Projection: int DRAW_MODE_TRIANGLES>
<androidx.media3.exoplayer.video.spherical.Projection: int DRAW_MODE_TRIANGLES_STRIP>
<androidx.media3.exoplayer.video.spherical.Projection: int DRAW_MODE_TRIANGLES_FAN>
<androidx.media3.exoplayer.video.spherical.Projection: int TEXTURE_COORDS_PER_VERTEX>
<androidx.media3.exoplayer.video.spherical.Projection: int POSITION_COORDS_PER_VERTEX>
<androidx.media3.exoplayer.video.spherical.Projection: androidx.media3.exoplayer.video.spherical.Projection$Mesh leftMesh>
<androidx.media3.exoplayer.video.spherical.Projection: androidx.media3.exoplayer.video.spherical.Projection$Mesh rightMesh>
<androidx.media3.exoplayer.video.spherical.Projection: int stereoMode>
<androidx.media3.exoplayer.video.spherical.Projection: boolean singleMesh>
    public static androidx.media3.exoplayer.video.spherical.Projection createEquirectangular(int)
    {
        int i0;
        androidx.media3.exoplayer.video.spherical.Projection $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <androidx.media3.exoplayer.video.spherical.Projection: androidx.media3.exoplayer.video.spherical.Projection createEquirectangular(float,int,int,float,float,int)>(50.0F, 36, 72, 180.0F, 360.0F, i0);

        return $r0;
    }

    public static androidx.media3.exoplayer.video.spherical.Projection createEquirectangular(float, int, int, float, float, int)
    {
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33;
        int i0, i1, i2, i3, $i6, $i7, $i8, $i9, $i10, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, i24, i25, i26;
        float[] r0, r1;
        byte $b4, $b5, $b11, $b12, $b13;
        androidx.media3.exoplayer.video.spherical.Projection$SubMesh $r2, r6;
        androidx.media3.exoplayer.video.spherical.Projection $r3;
        androidx.media3.exoplayer.video.spherical.Projection$Mesh $r4;
        androidx.media3.exoplayer.video.spherical.Projection$SubMesh[] $r5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        boolean $z0, $z1, $z2, $z3, $z4;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f1 := @parameter3: float;

        f2 := @parameter4: float;

        i2 := @parameter5: int;

        $b4 = f0 cmpl 0.0F;

        if $b4 <= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        if i0 < 1 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z1);

        if i1 < 1 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z2);

        $b5 = f1 cmpl 0.0F;

        if $b5 <= 0 goto label07;

        $b12 = f1 cmpg 180.0F;

        if $b12 > 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z3);

        $b13 = f2 cmpl 0.0F;

        if $b13 <= 0 goto label09;

        $b11 = f2 cmpg 360.0F;

        if $b11 > 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z4);

        $d18 = (double) f1;

        $d19 = staticinvoke <java.lang.Math: double toRadians(double)>($d18);

        f3 = (float) $d19;

        $d20 = (double) f2;

        $d21 = staticinvoke <java.lang.Math: double toRadians(double)>($d20);

        f4 = (float) $d21;

        $f31 = (float) i0;

        f5 = f3 / $f31;

        $f32 = (float) i1;

        f6 = f4 / $f32;

        $i14 = i1 + 1;

        $i15 = 2 * $i14;

        $i16 = $i15 + 2;

        i3 = $i16 * i0;

        $i17 = i3 * 3;

        r0 = newarray (float)[$i17];

        $i18 = i3 * 2;

        r1 = newarray (float)[$i18];

        i19 = 0;

        i20 = 0;

        i21 = 0;

     label11:
        if i21 >= i0 goto label21;

        $f11 = (float) i21;

        $f13 = f5 * $f11;

        $f12 = f3 / 2.0F;

        f7 = $f13 - $f12;

        $i6 = i21 + 1;

        $f14 = (float) $i6;

        $f16 = f5 * $f14;

        $f15 = f3 / 2.0F;

        f8 = $f16 - $f15;

        i22 = 0;

     label12:
        $i7 = i1 + 1;

        if i22 >= $i7 goto label20;

        i23 = 0;

     label13:
        if i23 >= 2 goto label19;

        if i23 != 0 goto label14;

        $f33 = f7;

        goto label15;

     label14:
        $f33 = f8;

     label15:
        f9 = $f33;

        $f17 = (float) i22;

        $f18 = f6 * $f17;

        $f20 = $f18 + 3.1415927F;

        $f19 = f4 / 2.0F;

        f10 = $f20 - $f19;

        i24 = i19 + 1;

        $d1 = (double) f0;

        $d0 = (double) f10;

        $d2 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $d4 = $d1 * $d2;

        $d3 = (double) f9;

        $d5 = staticinvoke <java.lang.Math: double cos(double)>($d3);

        $d6 = $d4 * $d5;

        $f21 = (float) $d6;

        $f22 = neg $f21;

        r0[i19] = $f22;

        i25 = i24 + 1;

        $d8 = (double) f0;

        $d7 = (double) f9;

        $d9 = staticinvoke <java.lang.Math: double sin(double)>($d7);

        $d10 = $d8 * $d9;

        $f23 = (float) $d10;

        r0[i24] = $f23;

        i19 = i25 + 1;

        $d12 = (double) f0;

        $d11 = (double) f10;

        $d13 = staticinvoke <java.lang.Math: double cos(double)>($d11);

        $d15 = $d12 * $d13;

        $d14 = (double) f9;

        $d16 = staticinvoke <java.lang.Math: double cos(double)>($d14);

        $d17 = $d15 * $d16;

        $f24 = (float) $d17;

        r0[i25] = $f24;

        i26 = i20 + 1;

        $f25 = (float) i22;

        $f26 = $f25 * f6;

        $f27 = $f26 / f4;

        r1[i20] = $f27;

        i20 = i26 + 1;

        $i8 = i21 + i23;

        $f28 = (float) $i8;

        $f29 = $f28 * f5;

        $f30 = $f29 / f3;

        r1[i26] = $f30;

        if i22 != 0 goto label16;

        if i23 == 0 goto label17;

     label16:
        if i22 != i1 goto label18;

        if i23 != 1 goto label18;

     label17:
        $i9 = i19 - 3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i9, r0, i19, 3);

        i19 = i19 + 3;

        $i10 = i20 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i10, r1, i20, 2);

        i20 = i20 + 2;

     label18:
        i23 = i23 + 1;

        goto label13;

     label19:
        i22 = i22 + 1;

        goto label12;

     label20:
        i21 = i21 + 1;

        goto label11;

     label21:
        $r2 = new androidx.media3.exoplayer.video.spherical.Projection$SubMesh;

        specialinvoke $r2.<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: void <init>(int,float[],float[],int)>(0, r0, r1, 1);

        r6 = $r2;

        $r3 = new androidx.media3.exoplayer.video.spherical.Projection;

        $r4 = new androidx.media3.exoplayer.video.spherical.Projection$Mesh;

        $r5 = newarray (androidx.media3.exoplayer.video.spherical.Projection$SubMesh)[1];

        $r5[0] = r6;

        specialinvoke $r4.<androidx.media3.exoplayer.video.spherical.Projection$Mesh: void <init>(androidx.media3.exoplayer.video.spherical.Projection$SubMesh[])>($r5);

        specialinvoke $r3.<androidx.media3.exoplayer.video.spherical.Projection: void <init>(androidx.media3.exoplayer.video.spherical.Projection$Mesh,int)>($r4, i2);

        return $r3;
    }

    public void <init>(androidx.media3.exoplayer.video.spherical.Projection$Mesh, int)
    {
        androidx.media3.exoplayer.video.spherical.Projection r0;
        androidx.media3.exoplayer.video.spherical.Projection$Mesh r1;
        int i0;

        r0 := @this: androidx.media3.exoplayer.video.spherical.Projection;

        r1 := @parameter0: androidx.media3.exoplayer.video.spherical.Projection$Mesh;

        i0 := @parameter1: int;

        specialinvoke r0.<androidx.media3.exoplayer.video.spherical.Projection: void <init>(androidx.media3.exoplayer.video.spherical.Projection$Mesh,androidx.media3.exoplayer.video.spherical.Projection$Mesh,int)>(r1, r1, i0);

        return;
    }

    public void <init>(androidx.media3.exoplayer.video.spherical.Projection$Mesh, androidx.media3.exoplayer.video.spherical.Projection$Mesh, int)
    {
        androidx.media3.exoplayer.video.spherical.Projection r0;
        androidx.media3.exoplayer.video.spherical.Projection$Mesh r1, r2;
        int i0;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.video.spherical.Projection;

        r1 := @parameter0: androidx.media3.exoplayer.video.spherical.Projection$Mesh;

        r2 := @parameter1: androidx.media3.exoplayer.video.spherical.Projection$Mesh;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.video.spherical.Projection: androidx.media3.exoplayer.video.spherical.Projection$Mesh leftMesh> = r1;

        r0.<androidx.media3.exoplayer.video.spherical.Projection: androidx.media3.exoplayer.video.spherical.Projection$Mesh rightMesh> = r2;

        r0.<androidx.media3.exoplayer.video.spherical.Projection: int stereoMode> = i0;

        if r1 != r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<androidx.media3.exoplayer.video.spherical.Projection: boolean singleMesh> = $z0;

        return;
    }

androidx.media3.exoplayer.video.spherical.Projection$DrawMode
androidx.media3.exoplayer.video.spherical.Projection$Mesh
<androidx.media3.exoplayer.video.spherical.Projection$Mesh: androidx.media3.exoplayer.video.spherical.Projection$SubMesh[] subMeshes>
    public transient void <init>(androidx.media3.exoplayer.video.spherical.Projection$SubMesh[])
    {
        androidx.media3.exoplayer.video.spherical.Projection$Mesh r0;
        androidx.media3.exoplayer.video.spherical.Projection$SubMesh[] r1;

        r0 := @this: androidx.media3.exoplayer.video.spherical.Projection$Mesh;

        r1 := @parameter0: androidx.media3.exoplayer.video.spherical.Projection$SubMesh[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.video.spherical.Projection$Mesh: androidx.media3.exoplayer.video.spherical.Projection$SubMesh[] subMeshes> = r1;

        return;
    }

    public int getSubMeshCount()
    {
        androidx.media3.exoplayer.video.spherical.Projection$Mesh r0;
        androidx.media3.exoplayer.video.spherical.Projection$SubMesh[] $r1;
        int $i0;

        r0 := @this: androidx.media3.exoplayer.video.spherical.Projection$Mesh;

        $r1 = r0.<androidx.media3.exoplayer.video.spherical.Projection$Mesh: androidx.media3.exoplayer.video.spherical.Projection$SubMesh[] subMeshes>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public androidx.media3.exoplayer.video.spherical.Projection$SubMesh getSubMesh(int)
    {
        androidx.media3.exoplayer.video.spherical.Projection$Mesh r0;
        int i0;
        androidx.media3.exoplayer.video.spherical.Projection$SubMesh[] $r1;
        androidx.media3.exoplayer.video.spherical.Projection$SubMesh $r2;

        r0 := @this: androidx.media3.exoplayer.video.spherical.Projection$Mesh;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.exoplayer.video.spherical.Projection$Mesh: androidx.media3.exoplayer.video.spherical.Projection$SubMesh[] subMeshes>;

        $r2 = $r1[i0];

        return $r2;
    }

androidx.media3.exoplayer.video.spherical.Projection$SubMesh
<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: int VIDEO_TEXTURE_ID>
<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: int textureId>
<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: int mode>
<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: float[] vertices>
<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: float[] textureCoords>
    public void <init>(int, float[], float[], int)
    {
        androidx.media3.exoplayer.video.spherical.Projection$SubMesh r0;
        int i0, i1, $i2, $i4;
        float[] r1, r2;
        long $l3, $l5, $l6, $l7;
        byte $b8;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.video.spherical.Projection$SubMesh;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: int textureId> = i0;

        $i2 = lengthof r1;

        $l3 = (long) $i2;

        $l7 = $l3 * 2L;

        $i4 = lengthof r2;

        $l5 = (long) $i4;

        $l6 = $l5 * 3L;

        $b8 = $l7 cmp $l6;

        if $b8 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z0);

        r0.<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: float[] vertices> = r1;

        r0.<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: float[] textureCoords> = r2;

        r0.<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: int mode> = i1;

        return;
    }

    public int getVertexCount()
    {
        androidx.media3.exoplayer.video.spherical.Projection$SubMesh r0;
        float[] $r1;
        int $i0, $i1;

        r0 := @this: androidx.media3.exoplayer.video.spherical.Projection$SubMesh;

        $r1 = r0.<androidx.media3.exoplayer.video.spherical.Projection$SubMesh: float[] vertices>;

        $i0 = lengthof $r1;

        $i1 = $i0 / 3;

        return $i1;
    }

