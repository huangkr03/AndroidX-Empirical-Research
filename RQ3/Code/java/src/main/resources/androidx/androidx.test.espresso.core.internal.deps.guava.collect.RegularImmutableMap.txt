androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap EMPTY>
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: long serialVersionUID>
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: java.lang.Object hashTable>
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: java.lang.Object[] alternatingKeysAndValues>
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: int size>
    public int size()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap r0;
        int $i0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap;

        $i0 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: int size>;

        return $i0;
    }

    androidx.test.espresso.core.internal.deps.guava.collect.ImmutableCollection createValues()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap r0;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList r1;
        int $i0;
        java.lang.Object[] $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap;

        r1 = new androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList;

        $r2 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: java.lang.Object[] alternatingKeysAndValues>;

        $i0 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: int size>;

        specialinvoke r1.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList: void <init>(java.lang.Object[],int,int)>($r2, 1, $i0);

        return r1;
    }

    androidx.test.espresso.core.internal.deps.guava.collect.ImmutableSet createEntrySet()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap r0;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet r1;
        int $i0;
        java.lang.Object[] $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap;

        r1 = new androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet;

        $r2 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: java.lang.Object[] alternatingKeysAndValues>;

        $i0 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: int size>;

        specialinvoke r1.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: void <init>(androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap,java.lang.Object[],int,int)>(r0, $r2, 0, $i0);

        return r1;
    }

    androidx.test.espresso.core.internal.deps.guava.collect.ImmutableSet createKeySet()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap r0;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList r1;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet r2;
        int $i0;
        java.lang.Object[] $r3;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap;

        r1 = new androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList;

        $r3 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: java.lang.Object[] alternatingKeysAndValues>;

        $i0 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: int size>;

        specialinvoke r1.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList: void <init>(java.lang.Object[],int,int)>($r3, 0, $i0);

        r2 = new androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet;

        specialinvoke r2.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet: void <init>(androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap,androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList)>(r0, r1);

        return r2;
    }

    static androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap create(int, java.lang.Object[], androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder)
    {
        int $i0, $i1, $i3, $i4, i5;
        boolean $z0;
        java.lang.Object $r0, $r1, r10, r11, r13;
        java.lang.Integer $r2;
        java.lang.IllegalArgumentException $r3;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap $r6;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap $r7, r12, r17;
        java.lang.Object[] r8, r14, r16;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder r9;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey r15;

        i5 := @parameter0: int;

        r8 := @parameter1: java.lang.Object[];

        r9 := @parameter2: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder;

        if i5 != 0 goto label1;

        $r6 = <androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap EMPTY>;

        $r7 = (androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap) $r6;

        return $r7;

     label1:
        if i5 != 1 goto label2;

        r10 = r8[0];

        virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        r11 = r8[1];

        virtualinvoke r11.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r10, r11);

        r12 = new androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap;

        specialinvoke r12.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: void <init>(java.lang.Object,java.lang.Object[],int)>(null, r8, 1);

        return r12;

     label2:
        $i0 = lengthof r8;

        $i1 = $i0 >> 1;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: int checkPositionIndex(int,int)>(i5, $i1);

        $i3 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.ImmutableSet: int chooseTableSize(int)>(i5);

        r13 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: java.lang.Object createHashTable(java.lang.Object[],int,int,int)>(r8, i5, $i3, 0);

        $z0 = r13 instanceof java.lang.Object[];

        if $z0 == 0 goto label5;

        r14 = (java.lang.Object[]) r13;

        $r0 = r14[2];

        r15 = (androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey) $r0;

        if r9 != null goto label3;

        $r3 = virtualinvoke r15.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: java.lang.IllegalArgumentException exception()>();

        throw $r3;

     label3:
        r9.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey duplicateKey> = r15;

        r13 = r14[0];

        $r1 = r14[1];

        $r2 = (java.lang.Integer) $r1;

        i5 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i4 = i5 + i5;

        r16 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r8, $i4);

     label4:
        r17 = new androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap;

        specialinvoke r17.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: void <init>(java.lang.Object,java.lang.Object[],int)>(r13, r16, i5);

        return r17;

     label5:
        r16 = r8;

        goto label4;
    }

    private static java.lang.Object createHashTable(java.lang.Object[], int, int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i17, $i18, $i19, $i20, $i21, $i26, $i27, i28, i29, i30, i31, i32, i33, i34, i35, i37, i38, i39, i40, i41, i42, i43, i45, i46, i47, i48, i49, i50, i51, i52, i53;
        java.lang.Integer $r0, $r5, $r10;
        java.lang.Object $r3, $r8, $r13, r18, r19, r22, r23, r24, r28, r29, r30, r34, r35, r36;
        boolean $z0, $z1, $z2;
        short $s13, $s16, $s23, $s24, s36;
        char $c14, $c15, c44;
        byte $b22, $b25;
        java.lang.Object[] r17, r25, r31, r37;
        byte[] r20;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey r21, r27, r33;
        short[] r26;
        int[] r32;

        r17 := @parameter0: java.lang.Object[];

        i28 := @parameter1: int;

        i29 := @parameter2: int;

        i0 := @parameter3: int;

        if i28 != 1 goto label01;

        r18 = r17[i0];

        virtualinvoke r18.<java.lang.Object: java.lang.Class getClass()>();

        $i27 = i0 ^ 1;

        r19 = r17[$i27];

        virtualinvoke r19.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r18, r19);

        return null;

     label01:
        i1 = i29 + -1;

        if i29 > 128 goto label10;

        r20 = newarray (byte)[i29];

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r20, -1);

        r21 = null;

        i30 = 0;

        i31 = 0;

     label02:
        if i31 >= i28 goto label08;

        $i18 = i31 + i31;

        i32 = $i18 + i0;

        $i19 = i30 + i30;

        i33 = $i19 + i0;

        r22 = r17[i32];

        virtualinvoke r22.<java.lang.Object: java.lang.Class getClass()>();

        $i20 = i32 ^ 1;

        r23 = r17[$i20];

        virtualinvoke r23.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r22, r23);

        $i21 = virtualinvoke r22.<java.lang.Object: int hashCode()>();

        i34 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Hashing: int smear(int)>($i21);

     label03:
        i35 = i34 & i1;

        $b22 = r20[i35];

        s36 = $b22 & 255;

        if s36 != 255 goto label06;

        $b25 = (byte) i33;

        r20[i35] = $b25;

        if i30 >= i31 goto label04;

        r17[i33] = r22;

        $i26 = i33 ^ 1;

        r17[$i26] = r23;

     label04:
        i37 = i30 + 1;

     label05:
        i31 = i31 + 1;

        i30 = i37;

        goto label02;

     label06:
        $r13 = r17[s36];

        $z2 = virtualinvoke r22.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

        if $z2 == 0 goto label07;

        r21 = new androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey;

        $s23 = s36 ^ 1;

        r24 = r17[$s23];

        virtualinvoke r24.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke r21.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>(r22, r23, r24);

        $s24 = s36 ^ 1;

        r17[$s24] = r23;

        i37 = i30;

        goto label05;

     label07:
        i34 = i35 + 1;

        goto label03;

     label08:
        if i30 != i28 goto label09;

        return r20;

     label09:
        r25 = newarray (java.lang.Object)[3];

        r25[0] = r20;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i30);

        r25[1] = $r10;

        r25[2] = r21;

        return r25;

     label10:
        if i29 > 32768 goto label19;

        r26 = newarray (short)[i29];

        staticinvoke <java.util.Arrays: void fill(short[],short)>(r26, -1);

        r27 = null;

        i38 = 0;

        i39 = 0;

     label11:
        if i39 >= i28 goto label17;

        $i9 = i39 + i39;

        i40 = $i9 + i0;

        $i10 = i38 + i38;

        i41 = $i10 + i0;

        r28 = r17[i40];

        virtualinvoke r28.<java.lang.Object: java.lang.Class getClass()>();

        $i11 = i40 ^ 1;

        r29 = r17[$i11];

        virtualinvoke r29.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r28, r29);

        $i12 = virtualinvoke r28.<java.lang.Object: int hashCode()>();

        i42 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Hashing: int smear(int)>($i12);

     label12:
        i43 = i42 & i1;

        $s13 = r26[i43];

        c44 = (char) $s13;

        if c44 != 65535 goto label15;

        $s16 = (short) i41;

        r26[i43] = $s16;

        if i38 >= i39 goto label13;

        r17[i41] = r28;

        $i17 = i41 ^ 1;

        r17[$i17] = r29;

     label13:
        i45 = i38 + 1;

     label14:
        i39 = i39 + 1;

        i38 = i45;

        goto label11;

     label15:
        $r8 = r17[c44];

        $z1 = virtualinvoke r28.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label16;

        r27 = new androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey;

        $c14 = c44 ^ 1;

        r30 = r17[$c14];

        virtualinvoke r30.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke r27.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>(r28, r29, r30);

        $c15 = c44 ^ 1;

        r17[$c15] = r29;

        i45 = i38;

        goto label14;

     label16:
        i42 = i43 + 1;

        goto label12;

     label17:
        if i38 != i28 goto label18;

        return r26;

     label18:
        r31 = newarray (java.lang.Object)[3];

        r31[0] = r26;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i38);

        r31[1] = $r5;

        r31[2] = r27;

        return r31;

     label19:
        r32 = newarray (int)[i29];

        staticinvoke <java.util.Arrays: void fill(int[],int)>(r32, -1);

        r33 = null;

        i46 = 0;

        i47 = 0;

     label20:
        if i47 >= i28 goto label26;

        $i2 = i47 + i47;

        i48 = $i2 + i0;

        $i3 = i46 + i46;

        i49 = $i3 + i0;

        r34 = r17[i48];

        virtualinvoke r34.<java.lang.Object: java.lang.Class getClass()>();

        $i4 = i48 ^ 1;

        r35 = r17[$i4];

        virtualinvoke r35.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.CollectPreconditions: void checkEntryNotNull(java.lang.Object,java.lang.Object)>(r34, r35);

        $i5 = virtualinvoke r34.<java.lang.Object: int hashCode()>();

        i50 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Hashing: int smear(int)>($i5);

     label21:
        i51 = i50 & i1;

        i52 = r32[i51];

        if i52 != -1 goto label24;

        r32[i51] = i49;

        if i46 >= i47 goto label22;

        r17[i49] = r34;

        $i8 = i49 ^ 1;

        r17[$i8] = r35;

     label22:
        i53 = i46 + 1;

     label23:
        i47 = i47 + 1;

        i46 = i53;

        goto label20;

     label24:
        $r3 = r17[i52];

        $z0 = virtualinvoke r34.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label25;

        r33 = new androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey;

        $i6 = i52 ^ 1;

        r36 = r17[$i6];

        virtualinvoke r36.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke r33.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap$Builder$DuplicateKey: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>(r34, r35, r36);

        $i7 = i52 ^ 1;

        r17[$i7] = r35;

        i53 = i46;

        goto label23;

     label25:
        i50 = i51 + 1;

        goto label21;

     label26:
        if i46 != i28 goto label27;

        return r32;

     label27:
        r37 = newarray (java.lang.Object)[3];

        r37[0] = r32;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i46);

        r37[1] = $r0;

        r37[2] = r33;

        return r37;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.lang.Object r0, $r2, r4;
        int $i0;
        java.lang.Object[] $r1;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap r3;

        r3 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap;

        r0 := @parameter0: java.lang.Object;

        $r2 = r3.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: java.lang.Object hashTable>;

        $r1 = r3.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: java.lang.Object[] alternatingKeysAndValues>;

        $i0 = r3.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: int size>;

        r4 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object,java.lang.Object[],int,int,java.lang.Object)>($r2, $r1, $i0, 0, r0);

        if r4 != null goto label1;

        return null;

     label1:
        return r4;
    }

    static java.lang.Object get(java.lang.Object, java.lang.Object[], int, int, java.lang.Object)
    {
        java.lang.Object[] r0;
        java.lang.Object r1, $r2, $r3, $r4, $r5, $r6, $r7, r10, r11, r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i11, i12, i13, i14, i15, i16, i18, i19, i20, i22, i23, i24, i25;
        short $s5, $s10, s17;
        char $c6, c21;
        byte $b9;
        byte[] r13;
        short[] r14;
        int[] r15;

        r10 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object[];

        i12 := @parameter2: int;

        i13 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        if r1 != null goto label01;

        return null;

     label01:
        if i12 != 1 goto label04;

        r11 = r0[i13];

        virtualinvoke r11.<java.lang.Object: java.lang.Class getClass()>();

        $z5 = virtualinvoke r11.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label03;

        $i11 = i13 ^ 1;

        r12 = r0[$i11];

        virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        return r12;

     label03:
        r12 = null;

        goto label02;

     label04:
        if r10 != null goto label05;

        return null;

     label05:
        $z0 = r10 instanceof byte[];

        if $z0 == 0 goto label09;

        r13 = (byte[]) r10;

        $i7 = lengthof r13;

        i14 = $i7 + -1;

        $i8 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i15 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Hashing: int smear(int)>($i8);

     label06:
        i16 = i15 & i14;

        $b9 = r13[i16];

        s17 = $b9 & 255;

        if s17 != 255 goto label07;

        return null;

     label07:
        $r6 = r0[s17];

        $z4 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z4 == 0 goto label08;

        $s10 = s17 ^ 1;

        $r7 = r0[$s10];

        return $r7;

     label08:
        i15 = i16 + 1;

        goto label06;

     label09:
        $z1 = r10 instanceof short[];

        if $z1 == 0 goto label13;

        r14 = (short[]) r10;

        $i3 = lengthof r14;

        i18 = $i3 + -1;

        $i4 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i19 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Hashing: int smear(int)>($i4);

     label10:
        i20 = i19 & i18;

        $s5 = r14[i20];

        c21 = (char) $s5;

        if c21 != 65535 goto label11;

        return null;

     label11:
        $r4 = r0[c21];

        $z3 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z3 == 0 goto label12;

        $c6 = c21 ^ 1;

        $r5 = r0[$c6];

        return $r5;

     label12:
        i19 = i20 + 1;

        goto label10;

     label13:
        r15 = (int[]) r10;

        $i0 = lengthof r15;

        i22 = $i0 + -1;

        $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i23 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.Hashing: int smear(int)>($i1);

     label14:
        i24 = i23 & i22;

        i25 = r15[i24];

        if i25 != -1 goto label15;

        return null;

     label15:
        $r2 = r0[i25];

        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label16;

        $i2 = i25 ^ 1;

        $r3 = r0[$i2];

        return $r3;

     label16:
        i23 = i24 + 1;

        goto label14;
    }

    static void <clinit>()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap r0;
        java.lang.Object[] $r1;

        r0 = new androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap;

        $r1 = newarray (java.lang.Object)[0];

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: void <init>(java.lang.Object,java.lang.Object[],int)>(null, $r1, 0);

        <androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap EMPTY> = r0;

        return;
    }

    private void <init>(java.lang.Object, java.lang.Object[], int)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap r0;
        java.lang.Object r1;
        java.lang.Object[] r2;
        int i0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        i0 := @parameter2: int;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap: void <init>()>();

        r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: java.lang.Object hashTable> = r1;

        r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: java.lang.Object[] alternatingKeysAndValues> = r2;

        r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap: int size> = i0;

        return;
    }

    boolean isPartialView()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap r0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap;

        return 0;
    }

androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet this$0>
    public int size()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1 r0;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet $r1;
        int $i0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1;

        $r1 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet this$0>;

        $i0 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: int access$000(androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet)>($r1);

        return $i0;
    }

    public volatile java.lang.Object get(int)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1 r0;
        int i0;
        java.util.Map$Entry $r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1: java.util.Map$Entry get(int)>(i0);

        return $r1;
    }

    public java.util.Map$Entry get(int)
    {
        java.lang.Object r0, r11;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet $r1, $r2, $r4, $r6, $r8;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.Object[] $r3, $r7;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1 r10;
        java.util.AbstractMap$SimpleImmutableEntry r12, r13;
        java.util.Map$Entry r14;

        r10 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1;

        i9 := @parameter0: int;

        $r1 = r10.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet this$0>;

        $i0 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: int access$000(androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet)>($r1);

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: int checkElementIndex(int,int)>(i9, $i0);

        $r2 = r10.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet this$0>;

        $r3 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: java.lang.Object[] access$100(androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet)>($r2);

        $i2 = i9 + i9;

        $r4 = r10.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet this$0>;

        $i3 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: int access$200(androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet)>($r4);

        $i4 = $i2 + $i3;

        r0 = $r3[$i4];

        virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = r10.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet this$0>;

        $r7 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: java.lang.Object[] access$100(androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet)>($r6);

        $i5 = i9 + i9;

        $r8 = r10.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet this$0>;

        $i6 = staticinvoke <androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: int access$200(androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet)>($r8);

        $i7 = $i6 ^ 1;

        $i8 = $i5 + $i7;

        r11 = $r7[$i8];

        virtualinvoke r11.<java.lang.Object: java.lang.Class getClass()>();

        r13 = new java.util.AbstractMap$SimpleImmutableEntry;

        r12 = r13;

        specialinvoke r13.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>(r0, r11);

        r14 = (java.util.Map$Entry) r12;

        return r14;
    }

    void <init>(androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1 r0;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet;

        r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet this$0> = r1;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList: void <init>()>();

        return;
    }

androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap map>
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: java.lang.Object[] alternatingKeysAndValues>
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: int keyOffset>
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: int size>
    static int access$000(androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet r0;
        int $i0;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet;

        $i0 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: int size>;

        return $i0;
    }

    static int access$200(androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet r0;
        int $i0;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet;

        $i0 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: int keyOffset>;

        return $i0;
    }

    int copyIntoArray(java.lang.Object[], int)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet r0;
        java.lang.Object[] r1;
        int i0, $i1;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList asList()>();

        $i1 = virtualinvoke $r2.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList: int copyIntoArray(java.lang.Object[],int)>(r1, i0);

        return $i1;
    }

    public int size()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet r0;
        int $i0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet;

        $i0 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: int size>;

        return $i0;
    }

    androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList createAsList()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet r0;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1 r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet;

        r1 = new androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1;

        specialinvoke r1.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet$1: void <init>(androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet)>(r0);

        return r1;
    }

    public androidx.test.espresso.core.internal.deps.guava.collect.UnmodifiableIterator iterator()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet r0;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList $r1;
        androidx.test.espresso.core.internal.deps.guava.collect.UnmodifiableIterator $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet;

        $r1 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList asList()>();

        $r2 = virtualinvoke $r1.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList: androidx.test.espresso.core.internal.deps.guava.collect.UnmodifiableIterator iterator()>();

        return $r2;
    }

    public volatile java.util.Iterator iterator()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet r0;
        androidx.test.espresso.core.internal.deps.guava.collect.UnmodifiableIterator $r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet;

        $r1 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: androidx.test.espresso.core.internal.deps.guava.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    void <init>(androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap, java.lang.Object[], int, int)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet r0;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap r1;
        java.lang.Object[] r2;
        int i0, i1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap;

        r2 := @parameter1: java.lang.Object[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableSet: void <init>()>();

        r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap map> = r1;

        r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: java.lang.Object[] alternatingKeysAndValues> = r2;

        r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: int keyOffset> = i0;

        r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: int size> = i1;

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Object r0, $r2, r4, r6;
        boolean $z0, $z1, z2;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap $r1;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet r3;
        java.util.Map$Entry r5;

        r3 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet;

        r4 := @parameter0: java.lang.Object;

        $z0 = r4 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label3;

        r5 = (java.util.Map$Entry) r4;

        r0 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        if r6 == null goto label2;

        $r1 = r3.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap map>;

        $r2 = virtualinvoke $r1.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r0);

        $z1 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        z2 = 1;

     label1:
        return z2;

     label2:
        z2 = 0;

        goto label1;

     label3:
        return 0;
    }

    static java.lang.Object[] access$100(androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet;

        $r1 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$EntrySet: java.lang.Object[] alternatingKeysAndValues>;

        return $r1;
    }

androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap map>
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList list>
    int copyIntoArray(java.lang.Object[], int)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet r0;
        java.lang.Object[] r1;
        int i0, $i1;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList asList()>();

        $i1 = virtualinvoke $r2.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList: int copyIntoArray(java.lang.Object[],int)>(r1, i0);

        return $i1;
    }

    public int size()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet r0;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap $r1;
        int $i0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet;

        $r1 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap map>;

        $i0 = virtualinvoke $r1.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap: int size()>();

        return $i0;
    }

    public androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList asList()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet r0;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList $r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet;

        $r1 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList list>;

        return $r1;
    }

    public androidx.test.espresso.core.internal.deps.guava.collect.UnmodifiableIterator iterator()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet r0;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList $r1;
        androidx.test.espresso.core.internal.deps.guava.collect.UnmodifiableIterator $r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet;

        $r1 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList asList()>();

        $r2 = virtualinvoke $r1.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList: androidx.test.espresso.core.internal.deps.guava.collect.UnmodifiableIterator iterator()>();

        return $r2;
    }

    public volatile java.util.Iterator iterator()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet r0;
        androidx.test.espresso.core.internal.deps.guava.collect.UnmodifiableIterator $r1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet;

        $r1 = virtualinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet: androidx.test.espresso.core.internal.deps.guava.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    void <init>(androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap, androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet r0;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap r1;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList r2;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet;

        r1 := @parameter0: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap;

        r2 := @parameter1: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableSet: void <init>()>();

        r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap map> = r1;

        r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList list> = r2;

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Object r0, $r2;
        androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap $r1;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet r3;
        boolean z0;

        r3 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet;

        r0 := @parameter0: java.lang.Object;

        $r1 = r3.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeySet: androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap map>;

        $r2 = virtualinvoke $r1.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r0);

        if $r2 == null goto label2;

        z0 = 1;

     label1:
        return z0;

     label2:
        z0 = 0;

        goto label1;
    }

androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList: java.lang.Object[] alternatingKeysAndValues>
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList: int offset>
<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList: int size>
    public int size()
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList r0;
        int $i0;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList;

        $i0 = r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList: int size>;

        return $i0;
    }

    public java.lang.Object get(int)
    {
        int i0, $i1, $i3, $i4, $i5;
        java.lang.Object[] $r0;
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList r2;
        java.lang.Object r3;

        r2 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList;

        i0 := @parameter0: int;

        $i1 = r2.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList: int size>;

        staticinvoke <androidx.test.espresso.core.internal.deps.guava.base.Preconditions: int checkElementIndex(int,int)>(i0, $i1);

        $r0 = r2.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList: java.lang.Object[] alternatingKeysAndValues>;

        $i4 = i0 + i0;

        $i3 = r2.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList: int offset>;

        $i5 = $i4 + $i3;

        r3 = $r0[$i5];

        virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        return r3;
    }

    void <init>(java.lang.Object[], int, int)
    {
        androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList r0;
        java.lang.Object[] r1;
        int i0, i1;

        r0 := @this: androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<androidx.test.espresso.core.internal.deps.guava.collect.ImmutableList: void <init>()>();

        r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList: java.lang.Object[] alternatingKeysAndValues> = r1;

        r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList: int offset> = i0;

        r0.<androidx.test.espresso.core.internal.deps.guava.collect.RegularImmutableMap$KeysOrValuesAsList: int size> = i1;

        return;
    }

