androidx.window.rxjava2.layout.WindowInfoTrackerRx
    public static final io.reactivex.Observable windowLayoutInfoObservable(androidx.window.layout.WindowInfoTracker, android.app.Activity)
    {
        androidx.window.layout.WindowInfoTracker $r0;
        android.app.Activity r1;
        kotlinx.coroutines.flow.Flow $r2;
        io.reactivex.Observable $r3;

        $r0 := @parameter0: androidx.window.layout.WindowInfoTracker;

        r1 := @parameter1: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        $r2 = interfaceinvoke $r0.<androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)>(r1);

        $r3 = staticinvoke <kotlinx.coroutines.rx2.RxConvertKt: io.reactivex.Observable asObservable$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,java.lang.Object)>($r2, null, 1, null);

        return $r3;
    }

    public static final io.reactivex.Flowable windowLayoutInfoFlowable(androidx.window.layout.WindowInfoTracker, android.app.Activity)
    {
        androidx.window.layout.WindowInfoTracker $r0;
        android.app.Activity r1;
        kotlinx.coroutines.flow.Flow $r2;
        io.reactivex.Flowable $r3;

        $r0 := @parameter0: androidx.window.layout.WindowInfoTracker;

        r1 := @parameter1: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        $r2 = interfaceinvoke $r0.<androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)>(r1);

        $r3 = staticinvoke <kotlinx.coroutines.rx2.RxConvertKt: io.reactivex.Flowable asFlowable$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,java.lang.Object)>($r2, null, 1, null);

        return $r3;
    }

