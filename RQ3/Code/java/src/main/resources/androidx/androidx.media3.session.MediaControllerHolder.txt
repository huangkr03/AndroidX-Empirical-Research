androidx.media3.session.MediaControllerHolder
<androidx.media3.session.MediaControllerHolder: android.os.Handler handler>
<androidx.media3.session.MediaControllerHolder: androidx.media3.session.MediaController controller>
<androidx.media3.session.MediaControllerHolder: boolean accepted>
    public void <init>(android.os.Looper)
    {
        androidx.media3.session.MediaControllerHolder r0;
        android.os.Looper r1;
        android.os.Handler $r2;

        r0 := @this: androidx.media3.session.MediaControllerHolder;

        r1 := @parameter0: android.os.Looper;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractFuture: void <init>()>();

        $r2 = new android.os.Handler;

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        r0.<androidx.media3.session.MediaControllerHolder: android.os.Handler handler> = $r2;

        return;
    }

    public void setController(androidx.media3.session.MediaController)
    {
        androidx.media3.session.MediaControllerHolder r0;
        androidx.media3.session.MediaController r1;
        java.lang.Runnable $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: androidx.media3.session.MediaControllerHolder;

        r1 := @parameter0: androidx.media3.session.MediaController;

        r0.<androidx.media3.session.MediaControllerHolder: androidx.media3.session.MediaController controller> = r1;

        specialinvoke r0.<androidx.media3.session.MediaControllerHolder: void maybeSetFutureResult()>();

        $r2 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaControllerHolder,androidx.media3.session.MediaController)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerHolder: void lambda$setController$0(androidx.media3.session.MediaController)>, methodtype: void __METHODTYPE__());

        $r3 = dynamicinvoke "execute" <java.util.concurrent.Executor (androidx.media3.session.MediaControllerHolder)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaControllerHolder: void lambda$setController$1(java.lang.Runnable)>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        virtualinvoke r0.<androidx.media3.session.MediaControllerHolder: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r2, $r3);

        return;
    }

    public void onAccepted()
    {
        androidx.media3.session.MediaControllerHolder r0;

        r0 := @this: androidx.media3.session.MediaControllerHolder;

        r0.<androidx.media3.session.MediaControllerHolder: boolean accepted> = 1;

        specialinvoke r0.<androidx.media3.session.MediaControllerHolder: void maybeSetFutureResult()>();

        return;
    }

    public void onRejected()
    {
        androidx.media3.session.MediaControllerHolder r0;

        r0 := @this: androidx.media3.session.MediaControllerHolder;

        specialinvoke r0.<androidx.media3.session.MediaControllerHolder: void maybeSetException()>();

        return;
    }

    private void maybeSetFutureResult()
    {
        androidx.media3.session.MediaControllerHolder r0;
        androidx.media3.session.MediaController $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerHolder;

        $r1 = r0.<androidx.media3.session.MediaControllerHolder: androidx.media3.session.MediaController controller>;

        if $r1 == null goto label1;

        $z0 = r0.<androidx.media3.session.MediaControllerHolder: boolean accepted>;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.media3.session.MediaControllerHolder: androidx.media3.session.MediaController controller>;

        virtualinvoke r0.<androidx.media3.session.MediaControllerHolder: boolean set(java.lang.Object)>($r2);

     label1:
        return;
    }

    private void maybeSetException()
    {
        androidx.media3.session.MediaControllerHolder r0;
        java.lang.SecurityException $r1;

        r0 := @this: androidx.media3.session.MediaControllerHolder;

        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>("Session rejected the connection request.");

        virtualinvoke r0.<androidx.media3.session.MediaControllerHolder: boolean setException(java.lang.Throwable)>($r1);

        return;
    }

    private void lambda$setController$1(java.lang.Runnable)
    {
        androidx.media3.session.MediaControllerHolder r0;
        java.lang.Runnable r1;
        android.os.Handler $r2;

        r0 := @this: androidx.media3.session.MediaControllerHolder;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<androidx.media3.session.MediaControllerHolder: android.os.Handler handler>;

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r2, r1);

        return;
    }

    private void lambda$setController$0(androidx.media3.session.MediaController)
    {
        androidx.media3.session.MediaControllerHolder r0;
        androidx.media3.session.MediaController r1;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaControllerHolder;

        r1 := @parameter0: androidx.media3.session.MediaController;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaControllerHolder: boolean isCancelled()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<androidx.media3.session.MediaController: void release()>();

     label1:
        return;
    }

