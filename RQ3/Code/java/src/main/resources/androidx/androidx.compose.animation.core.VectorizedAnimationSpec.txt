androidx.compose.animation.core.VectorizedAnimationSpec
<androidx.compose.animation.core.VectorizedAnimationSpec: boolean isInfinite()>
<androidx.compose.animation.core.VectorizedAnimationSpec: androidx.compose.animation.core.AnimationVector getValueFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>
<androidx.compose.animation.core.VectorizedAnimationSpec: androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>
<androidx.compose.animation.core.VectorizedAnimationSpec: long getDurationNanos(androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>
    public androidx.compose.animation.core.AnimationVector getEndVelocity(androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedAnimationSpec r0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r4;
        long $l0;

        r0 := @this: androidx.compose.animation.core.VectorizedAnimationSpec;

        r1 := @parameter0: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter2: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $l0 = interfaceinvoke r0.<androidx.compose.animation.core.VectorizedAnimationSpec: long getDurationNanos(androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(r1, r2, r3);

        $r4 = interfaceinvoke r0.<androidx.compose.animation.core.VectorizedAnimationSpec: androidx.compose.animation.core.AnimationVector getVelocityFromNanos(long,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>($l0, r1, r2, r3);

        return $r4;
    }

    public static androidx.compose.animation.core.AnimationVector access$getEndVelocity$jd(androidx.compose.animation.core.VectorizedAnimationSpec, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedAnimationSpec $r0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r4;

        $r0 := @parameter0: androidx.compose.animation.core.VectorizedAnimationSpec;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter3: androidx.compose.animation.core.AnimationVector;

        $r4 = specialinvoke $r0.<androidx.compose.animation.core.VectorizedAnimationSpec: androidx.compose.animation.core.AnimationVector getEndVelocity(androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>(r1, r2, r3);

        return $r4;
    }

androidx.compose.animation.core.VectorizedAnimationSpec$DefaultImpls
    public static androidx.compose.animation.core.AnimationVector getEndVelocity(androidx.compose.animation.core.VectorizedAnimationSpec, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector, androidx.compose.animation.core.AnimationVector)
    {
        androidx.compose.animation.core.VectorizedAnimationSpec $r0;
        androidx.compose.animation.core.AnimationVector r1, r2, r3, $r4;

        $r0 := @parameter0: androidx.compose.animation.core.VectorizedAnimationSpec;

        r1 := @parameter1: androidx.compose.animation.core.AnimationVector;

        r2 := @parameter2: androidx.compose.animation.core.AnimationVector;

        r3 := @parameter3: androidx.compose.animation.core.AnimationVector;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "initialValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "targetValue");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "initialVelocity");

        $r4 = staticinvoke <androidx.compose.animation.core.VectorizedAnimationSpec: androidx.compose.animation.core.AnimationVector access$getEndVelocity$jd(androidx.compose.animation.core.VectorizedAnimationSpec,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector,androidx.compose.animation.core.AnimationVector)>($r0, r1, r2, r3);

        return $r4;
    }

