androidx.media2.ConnectionResultParcelizer
    public void <init>()
    {
        androidx.media2.ConnectionResultParcelizer r0;

        r0 := @this: androidx.media2.ConnectionResultParcelizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static androidx.media2.ConnectionResult read(androidx.versionedparcelable.VersionedParcel)
    {
        androidx.versionedparcelable.VersionedParcel r0;
        androidx.media2.ConnectionResult r1, r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.os.IBinder $r3, $r4;
        androidx.media2.ParcelImplListSlice $r5, $r7;
        android.os.Parcelable $r6, $r12, r21;
        androidx.media2.SessionCommandGroup $r8, $r10;
        androidx.versionedparcelable.VersionedParcelable $r9, $r15, $r18, r22;
        android.app.PendingIntent $r11, $r13;
        androidx.media2.MediaItem $r14, $r16;
        long $l8, $l9, $l10, $l11, $l12, $l13;
        float $f0, $f1;
        androidx.media2.MediaController$PlaybackInfo $r17, $r19;

        r0 := @parameter0: androidx.versionedparcelable.VersionedParcel;

        r20 = new androidx.media2.ConnectionResult;

        specialinvoke r20.<androidx.media2.ConnectionResult: void <init>()>();

        r1 = r20;

        $i0 = r1.<androidx.media2.ConnectionResult: int mVersion>;

        $i1 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: int readInt(int,int)>($i0, 0);

        r1.<androidx.media2.ConnectionResult: int mVersion> = $i1;

        $r3 = r1.<androidx.media2.ConnectionResult: android.os.IBinder mSessionBinder>;

        $r4 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: android.os.IBinder readStrongBinder(android.os.IBinder,int)>($r3, 1);

        r1.<androidx.media2.ConnectionResult: android.os.IBinder mSessionBinder> = $r4;

        $i2 = r1.<androidx.media2.ConnectionResult: int mRepeatMode>;

        $i3 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: int readInt(int,int)>($i2, 10);

        r1.<androidx.media2.ConnectionResult: int mRepeatMode> = $i3;

        $i4 = r1.<androidx.media2.ConnectionResult: int mShuffleMode>;

        $i5 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: int readInt(int,int)>($i4, 11);

        r1.<androidx.media2.ConnectionResult: int mShuffleMode> = $i5;

        $r5 = r1.<androidx.media2.ConnectionResult: androidx.media2.ParcelImplListSlice mPlaylistSlice>;

        $r6 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable(android.os.Parcelable,int)>($r5, 12);

        $r7 = (androidx.media2.ParcelImplListSlice) $r6;

        r1.<androidx.media2.ConnectionResult: androidx.media2.ParcelImplListSlice mPlaylistSlice> = $r7;

        $r8 = r1.<androidx.media2.ConnectionResult: androidx.media2.SessionCommandGroup mAllowedCommands>;

        $r9 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)>($r8, 13);

        $r10 = (androidx.media2.SessionCommandGroup) $r9;

        r1.<androidx.media2.ConnectionResult: androidx.media2.SessionCommandGroup mAllowedCommands> = $r10;

        $r11 = r1.<androidx.media2.ConnectionResult: android.app.PendingIntent mSessionActivity>;

        r21 = (android.os.Parcelable) $r11;

        $r12 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable(android.os.Parcelable,int)>(r21, 2);

        $r13 = (android.app.PendingIntent) $r12;

        r1.<androidx.media2.ConnectionResult: android.app.PendingIntent mSessionActivity> = $r13;

        $i6 = r1.<androidx.media2.ConnectionResult: int mPlayerState>;

        $i7 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: int readInt(int,int)>($i6, 3);

        r1.<androidx.media2.ConnectionResult: int mPlayerState> = $i7;

        $r14 = r1.<androidx.media2.ConnectionResult: androidx.media2.MediaItem mCurrentMediaItem>;

        r22 = (androidx.versionedparcelable.VersionedParcelable) $r14;

        $r15 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)>(r22, 4);

        $r16 = (androidx.media2.MediaItem) $r15;

        r1.<androidx.media2.ConnectionResult: androidx.media2.MediaItem mCurrentMediaItem> = $r16;

        $l8 = r1.<androidx.media2.ConnectionResult: long mPositionEventTimeMs>;

        $l9 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: long readLong(long,int)>($l8, 5);

        r1.<androidx.media2.ConnectionResult: long mPositionEventTimeMs> = $l9;

        $l10 = r1.<androidx.media2.ConnectionResult: long mPositionMs>;

        $l11 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: long readLong(long,int)>($l10, 6);

        r1.<androidx.media2.ConnectionResult: long mPositionMs> = $l11;

        $f0 = r1.<androidx.media2.ConnectionResult: float mPlaybackSpeed>;

        $f1 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: float readFloat(float,int)>($f0, 7);

        r1.<androidx.media2.ConnectionResult: float mPlaybackSpeed> = $f1;

        $l12 = r1.<androidx.media2.ConnectionResult: long mBufferedPositionMs>;

        $l13 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: long readLong(long,int)>($l12, 8);

        r1.<androidx.media2.ConnectionResult: long mBufferedPositionMs> = $l13;

        $r17 = r1.<androidx.media2.ConnectionResult: androidx.media2.MediaController$PlaybackInfo mPlaybackInfo>;

        $r18 = virtualinvoke r0.<androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)>($r17, 9);

        $r19 = (androidx.media2.MediaController$PlaybackInfo) $r18;

        r1.<androidx.media2.ConnectionResult: androidx.media2.MediaController$PlaybackInfo mPlaybackInfo> = $r19;

        virtualinvoke r1.<androidx.media2.ConnectionResult: void onPostParceling()>();

        return r1;
    }

    public static void write(androidx.media2.ConnectionResult, androidx.versionedparcelable.VersionedParcel)
    {
        androidx.media2.ConnectionResult r0;
        androidx.versionedparcelable.VersionedParcel r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.os.IBinder $r2;
        androidx.media2.ParcelImplListSlice $r3;
        androidx.media2.SessionCommandGroup $r4;
        android.app.PendingIntent $r5;
        androidx.media2.MediaItem $r6;
        long $l4, $l5, $l6;
        float $f0;
        androidx.media2.MediaController$PlaybackInfo $r7;
        android.os.Parcelable r8;
        androidx.versionedparcelable.VersionedParcelable r9;

        r0 := @parameter0: androidx.media2.ConnectionResult;

        r1 := @parameter1: androidx.versionedparcelable.VersionedParcel;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void setSerializationFlags(boolean,boolean)>(0, 0);

        $z0 = virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: boolean isStream()>();

        virtualinvoke r0.<androidx.media2.ConnectionResult: void onPreParceling(boolean)>($z0);

        $i0 = r0.<androidx.media2.ConnectionResult: int mVersion>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)>($i0, 0);

        $r2 = r0.<androidx.media2.ConnectionResult: android.os.IBinder mSessionBinder>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeStrongBinder(android.os.IBinder,int)>($r2, 1);

        $i1 = r0.<androidx.media2.ConnectionResult: int mRepeatMode>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)>($i1, 10);

        $i2 = r0.<androidx.media2.ConnectionResult: int mShuffleMode>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)>($i2, 11);

        $r3 = r0.<androidx.media2.ConnectionResult: androidx.media2.ParcelImplListSlice mPlaylistSlice>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable,int)>($r3, 12);

        $r4 = r0.<androidx.media2.ConnectionResult: androidx.media2.SessionCommandGroup mAllowedCommands>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)>($r4, 13);

        $r5 = r0.<androidx.media2.ConnectionResult: android.app.PendingIntent mSessionActivity>;

        r8 = (android.os.Parcelable) $r5;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable,int)>(r8, 2);

        $i3 = r0.<androidx.media2.ConnectionResult: int mPlayerState>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)>($i3, 3);

        $r6 = r0.<androidx.media2.ConnectionResult: androidx.media2.MediaItem mCurrentMediaItem>;

        r9 = (androidx.versionedparcelable.VersionedParcelable) $r6;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)>(r9, 4);

        $l4 = r0.<androidx.media2.ConnectionResult: long mPositionEventTimeMs>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeLong(long,int)>($l4, 5);

        $l5 = r0.<androidx.media2.ConnectionResult: long mPositionMs>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeLong(long,int)>($l5, 6);

        $f0 = r0.<androidx.media2.ConnectionResult: float mPlaybackSpeed>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeFloat(float,int)>($f0, 7);

        $l6 = r0.<androidx.media2.ConnectionResult: long mBufferedPositionMs>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeLong(long,int)>($l6, 8);

        $r7 = r0.<androidx.media2.ConnectionResult: androidx.media2.MediaController$PlaybackInfo mPlaybackInfo>;

        virtualinvoke r1.<androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)>($r7, 9);

        return;
    }

