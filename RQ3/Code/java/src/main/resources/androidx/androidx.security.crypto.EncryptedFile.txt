androidx.security.crypto.EncryptedFile
<androidx.security.crypto.EncryptedFile: java.lang.String KEYSET_PREF_NAME>
<androidx.security.crypto.EncryptedFile: java.lang.String KEYSET_ALIAS>
<androidx.security.crypto.EncryptedFile: java.io.File mFile>
<androidx.security.crypto.EncryptedFile: android.content.Context mContext>
<androidx.security.crypto.EncryptedFile: java.lang.String mMasterKeyAlias>
<androidx.security.crypto.EncryptedFile: com.google.crypto.tink.StreamingAead mStreamingAead>
    void <init>(java.io.File, java.lang.String, com.google.crypto.tink.StreamingAead, android.content.Context)
    {
        androidx.security.crypto.EncryptedFile r0;
        java.io.File r1;
        java.lang.String r2;
        com.google.crypto.tink.StreamingAead r3;
        android.content.Context r4;

        r0 := @this: androidx.security.crypto.EncryptedFile;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.google.crypto.tink.StreamingAead;

        r4 := @parameter3: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.security.crypto.EncryptedFile: java.io.File mFile> = r1;

        r0.<androidx.security.crypto.EncryptedFile: android.content.Context mContext> = r4;

        r0.<androidx.security.crypto.EncryptedFile: java.lang.String mMasterKeyAlias> = r2;

        r0.<androidx.security.crypto.EncryptedFile: com.google.crypto.tink.StreamingAead mStreamingAead> = r3;

        return;
    }

    public java.io.FileOutputStream openFileOutput() throws java.security.GeneralSecurityException, java.io.IOException
    {
        androidx.security.crypto.EncryptedFile r0;
        java.io.FileOutputStream r1, r22;
        java.io.OutputStream r2, r24;
        java.io.File $r3, $r5, $r6, $r16;
        boolean $z0;
        com.google.crypto.tink.StreamingAead $r7;
        java.lang.String $r8, $r17, $r19;
        java.nio.charset.Charset $r9;
        byte[] $r10;
        java.io.FileDescriptor $r12;
        java.lang.StringBuilder $r15, $r18, r20;
        java.io.IOException r21;
        androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream r23;

        r0 := @this: androidx.security.crypto.EncryptedFile;

        $r3 = r0.<androidx.security.crypto.EncryptedFile: java.io.File mFile>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        r21 = new java.io.IOException;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("output file already exists, please use a new file: ");

        $r16 = r0.<androidx.security.crypto.EncryptedFile: java.io.File mFile>;

        $r17 = virtualinvoke $r16.<java.io.File: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.io.IOException: void <init>(java.lang.String)>($r19);

        throw r21;

     label1:
        r22 = new java.io.FileOutputStream;

        $r5 = r0.<androidx.security.crypto.EncryptedFile: java.io.File mFile>;

        specialinvoke r22.<java.io.FileOutputStream: void <init>(java.io.File)>($r5);

        r1 = r22;

        $r7 = r0.<androidx.security.crypto.EncryptedFile: com.google.crypto.tink.StreamingAead mStreamingAead>;

        $r6 = r0.<androidx.security.crypto.EncryptedFile: java.io.File mFile>;

        $r8 = virtualinvoke $r6.<java.io.File: java.lang.String getName()>();

        $r9 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r10 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r9);

        r24 = (java.io.OutputStream) r1;

        r2 = interfaceinvoke $r7.<com.google.crypto.tink.StreamingAead: java.io.OutputStream newEncryptingStream(java.io.OutputStream,byte[])>(r24, $r10);

        r23 = new androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream;

        $r12 = virtualinvoke r1.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        specialinvoke r23.<androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: void <init>(java.io.FileDescriptor,java.io.OutputStream)>($r12, r2);

        return r23;
    }

    public java.io.FileInputStream openFileInput() throws java.security.GeneralSecurityException, java.io.IOException
    {
        androidx.security.crypto.EncryptedFile r0;
        java.io.FileInputStream r1, r22;
        java.io.InputStream r2, r24;
        java.io.File $r3, $r5, $r6, $r16;
        boolean $z0;
        com.google.crypto.tink.StreamingAead $r7;
        java.lang.String $r8, $r17, $r19;
        java.nio.charset.Charset $r9;
        byte[] $r10;
        java.io.FileDescriptor $r12;
        java.lang.StringBuilder $r15, $r18, r20;
        java.io.IOException r21;
        androidx.security.crypto.EncryptedFile$EncryptedFileInputStream r23;

        r0 := @this: androidx.security.crypto.EncryptedFile;

        $r3 = r0.<androidx.security.crypto.EncryptedFile: java.io.File mFile>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        r21 = new java.io.IOException;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file doesn\'t exist: ");

        $r16 = r0.<androidx.security.crypto.EncryptedFile: java.io.File mFile>;

        $r17 = virtualinvoke $r16.<java.io.File: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.io.IOException: void <init>(java.lang.String)>($r19);

        throw r21;

     label1:
        r22 = new java.io.FileInputStream;

        $r5 = r0.<androidx.security.crypto.EncryptedFile: java.io.File mFile>;

        specialinvoke r22.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

        r1 = r22;

        $r7 = r0.<androidx.security.crypto.EncryptedFile: com.google.crypto.tink.StreamingAead mStreamingAead>;

        $r6 = r0.<androidx.security.crypto.EncryptedFile: java.io.File mFile>;

        $r8 = virtualinvoke $r6.<java.io.File: java.lang.String getName()>();

        $r9 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r10 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r9);

        r24 = (java.io.InputStream) r1;

        r2 = interfaceinvoke $r7.<com.google.crypto.tink.StreamingAead: java.io.InputStream newDecryptingStream(java.io.InputStream,byte[])>(r24, $r10);

        r23 = new androidx.security.crypto.EncryptedFile$EncryptedFileInputStream;

        $r12 = virtualinvoke r1.<java.io.FileInputStream: java.io.FileDescriptor getFD()>();

        specialinvoke r23.<androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: void <init>(java.io.FileDescriptor,java.io.InputStream)>($r12, r2);

        return r23;
    }

androidx.security.crypto.EncryptedFile$Builder
<androidx.security.crypto.EncryptedFile$Builder: java.io.File mFile>
<androidx.security.crypto.EncryptedFile$Builder: androidx.security.crypto.EncryptedFile$FileEncryptionScheme mFileEncryptionScheme>
<androidx.security.crypto.EncryptedFile$Builder: android.content.Context mContext>
<androidx.security.crypto.EncryptedFile$Builder: java.lang.String mMasterKeyAlias>
<androidx.security.crypto.EncryptedFile$Builder: java.lang.String mKeysetPrefName>
<androidx.security.crypto.EncryptedFile$Builder: java.lang.String mKeysetAlias>
    public void <init>(java.io.File, android.content.Context, java.lang.String, androidx.security.crypto.EncryptedFile$FileEncryptionScheme)
    {
        androidx.security.crypto.EncryptedFile$Builder r0;
        java.io.File r1;
        android.content.Context r2;
        java.lang.String r3;
        androidx.security.crypto.EncryptedFile$FileEncryptionScheme r4;

        r0 := @this: androidx.security.crypto.EncryptedFile$Builder;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: androidx.security.crypto.EncryptedFile$FileEncryptionScheme;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.security.crypto.EncryptedFile$Builder: java.lang.String mKeysetPrefName> = "__androidx_security_crypto_encrypted_file_pref__";

        r0.<androidx.security.crypto.EncryptedFile$Builder: java.lang.String mKeysetAlias> = "__androidx_security_crypto_encrypted_file_keyset__";

        r0.<androidx.security.crypto.EncryptedFile$Builder: java.io.File mFile> = r1;

        r0.<androidx.security.crypto.EncryptedFile$Builder: androidx.security.crypto.EncryptedFile$FileEncryptionScheme mFileEncryptionScheme> = r4;

        r0.<androidx.security.crypto.EncryptedFile$Builder: android.content.Context mContext> = r2;

        r0.<androidx.security.crypto.EncryptedFile$Builder: java.lang.String mMasterKeyAlias> = r3;

        return;
    }

    public androidx.security.crypto.EncryptedFile$Builder setKeysetPrefName(java.lang.String)
    {
        androidx.security.crypto.EncryptedFile$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.security.crypto.EncryptedFile$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.security.crypto.EncryptedFile$Builder: java.lang.String mKeysetPrefName> = r1;

        return r0;
    }

    public androidx.security.crypto.EncryptedFile$Builder setKeysetAlias(java.lang.String)
    {
        androidx.security.crypto.EncryptedFile$Builder r0;
        java.lang.String r1;

        r0 := @this: androidx.security.crypto.EncryptedFile$Builder;

        r1 := @parameter0: java.lang.String;

        r0.<androidx.security.crypto.EncryptedFile$Builder: java.lang.String mKeysetAlias> = r1;

        return r0;
    }

    public androidx.security.crypto.EncryptedFile build() throws java.security.GeneralSecurityException, java.io.IOException
    {
        androidx.security.crypto.EncryptedFile$Builder r0;
        com.google.crypto.tink.KeysetHandle r1;
        com.google.crypto.tink.StreamingAead r2;
        com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder $r3, $r6, $r10, $r16;
        androidx.security.crypto.EncryptedFile$FileEncryptionScheme $r4;
        com.google.crypto.tink.KeyTemplate $r5;
        java.lang.String $r7, $r8, $r13, $r15, $r21;
        android.content.Context $r9, $r20;
        java.lang.StringBuilder $r11, $r12, $r14;
        com.google.crypto.tink.integration.android.AndroidKeysetManager $r17;
        java.lang.Object $r18;
        androidx.security.crypto.EncryptedFile $r19;
        java.io.File $r22;

        r0 := @this: androidx.security.crypto.EncryptedFile$Builder;

        staticinvoke <com.google.crypto.tink.streamingaead.StreamingAeadConfig: void register()>();

        $r3 = new com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder;

        specialinvoke $r3.<com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder: void <init>()>();

        $r4 = r0.<androidx.security.crypto.EncryptedFile$Builder: androidx.security.crypto.EncryptedFile$FileEncryptionScheme mFileEncryptionScheme>;

        $r5 = virtualinvoke $r4.<androidx.security.crypto.EncryptedFile$FileEncryptionScheme: com.google.crypto.tink.KeyTemplate getKeyTemplate()>();

        $r6 = virtualinvoke $r3.<com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder: com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder withKeyTemplate(com.google.crypto.tink.KeyTemplate)>($r5);

        $r9 = r0.<androidx.security.crypto.EncryptedFile$Builder: android.content.Context mContext>;

        $r8 = r0.<androidx.security.crypto.EncryptedFile$Builder: java.lang.String mKeysetAlias>;

        $r7 = r0.<androidx.security.crypto.EncryptedFile$Builder: java.lang.String mKeysetPrefName>;

        $r10 = virtualinvoke $r6.<com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder: com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder withSharedPref(android.content.Context,java.lang.String,java.lang.String)>($r9, $r8, $r7);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android-keystore://");

        $r13 = r0.<androidx.security.crypto.EncryptedFile$Builder: java.lang.String mMasterKeyAlias>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke $r10.<com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder: com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder withMasterKeyUri(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder: com.google.crypto.tink.integration.android.AndroidKeysetManager build()>();

        r1 = virtualinvoke $r17.<com.google.crypto.tink.integration.android.AndroidKeysetManager: com.google.crypto.tink.KeysetHandle getKeysetHandle()>();

        $r18 = virtualinvoke r1.<com.google.crypto.tink.KeysetHandle: java.lang.Object getPrimitive(java.lang.Class)>(class "Lcom/google/crypto/tink/StreamingAead;");

        r2 = (com.google.crypto.tink.StreamingAead) $r18;

        $r19 = new androidx.security.crypto.EncryptedFile;

        $r22 = r0.<androidx.security.crypto.EncryptedFile$Builder: java.io.File mFile>;

        $r21 = r0.<androidx.security.crypto.EncryptedFile$Builder: java.lang.String mKeysetAlias>;

        $r20 = r0.<androidx.security.crypto.EncryptedFile$Builder: android.content.Context mContext>;

        specialinvoke $r19.<androidx.security.crypto.EncryptedFile: void <init>(java.io.File,java.lang.String,com.google.crypto.tink.StreamingAead,android.content.Context)>($r22, $r21, r2, $r20);

        return $r19;
    }

androidx.security.crypto.EncryptedFile$EncryptedFileInputStream
<androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: java.io.InputStream mEncryptedInputStream>
    void <init>(java.io.FileDescriptor, java.io.InputStream)
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileInputStream r0;
        java.io.FileDescriptor r1;
        java.io.InputStream r2;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileInputStream;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.InputStream;

        specialinvoke r0.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>(r1);

        r0.<androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: java.io.InputStream mEncryptedInputStream> = r2;

        return;
    }

    public int read() throws java.io.IOException
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileInputStream r0;
        java.io.InputStream $r1;
        int $i0;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileInputStream;

        $r1 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: java.io.InputStream mEncryptedInputStream>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        return $i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileInputStream r0;
        byte[] r1;
        java.io.InputStream $r2;
        int $i0;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileInputStream;

        r1 := @parameter0: byte[];

        $r2 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: java.io.InputStream mEncryptedInputStream>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>(r1);

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileInputStream r0;
        byte[] r1;
        int i0, i1, $i2;
        java.io.InputStream $r2;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: java.io.InputStream mEncryptedInputStream>;

        $i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public long skip(long) throws java.io.IOException
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileInputStream r0;
        long l0, $l1;
        java.io.InputStream $r1;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileInputStream;

        l0 := @parameter0: long;

        $r1 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: java.io.InputStream mEncryptedInputStream>;

        $l1 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>(l0);

        return $l1;
    }

    public int available() throws java.io.IOException
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileInputStream r0;
        java.io.InputStream $r1;
        int $i0;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileInputStream;

        $r1 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: java.io.InputStream mEncryptedInputStream>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i0;
    }

    public void close() throws java.io.IOException
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileInputStream;

        $r1 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: java.io.InputStream mEncryptedInputStream>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    public java.nio.channels.FileChannel getChannel()
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileInputStream r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileInputStream;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("For encrypted files, please open the relevant FileInput/FileOutputStream.");

        throw $r1;
    }

    public synchronized void mark(int)
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileInputStream r0;
        int i0;
        java.io.InputStream $r1;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileInputStream;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: java.io.InputStream mEncryptedInputStream>;

        virtualinvoke $r1.<java.io.InputStream: void mark(int)>(i0);

        return;
    }

    public synchronized void reset() throws java.io.IOException
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileInputStream;

        $r1 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: java.io.InputStream mEncryptedInputStream>;

        virtualinvoke $r1.<java.io.InputStream: void reset()>();

        return;
    }

    public boolean markSupported()
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileInputStream r0;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileInputStream;

        $r1 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileInputStream: java.io.InputStream mEncryptedInputStream>;

        $z0 = virtualinvoke $r1.<java.io.InputStream: boolean markSupported()>();

        return $z0;
    }

androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream
<androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: java.io.OutputStream mEncryptedOutputStream>
    void <init>(java.io.FileDescriptor, java.io.OutputStream)
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream r0;
        java.io.FileDescriptor r1;
        java.io.OutputStream r2;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.OutputStream;

        specialinvoke r0.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>(r1);

        r0.<androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: java.io.OutputStream mEncryptedOutputStream> = r2;

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream r0;
        byte[] r1;
        java.io.OutputStream $r2;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream;

        r1 := @parameter0: byte[];

        $r2 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: java.io.OutputStream mEncryptedOutputStream>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>(r1);

        return;
    }

    public void write(int) throws java.io.IOException
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream r0;
        int i0;
        java.io.OutputStream $r1;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: java.io.OutputStream mEncryptedOutputStream>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream r0;
        byte[] r1;
        int i0, i1;
        java.io.OutputStream $r2;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: java.io.OutputStream mEncryptedOutputStream>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void close() throws java.io.IOException
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream r0;
        java.io.OutputStream $r1;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream;

        $r1 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: java.io.OutputStream mEncryptedOutputStream>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public java.nio.channels.FileChannel getChannel()
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("For encrypted files, please open the relevant FileInput/FileOutputStream.");

        throw $r1;
    }

    public void flush() throws java.io.IOException
    {
        androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream r0;
        java.io.OutputStream $r1;

        r0 := @this: androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream;

        $r1 = r0.<androidx.security.crypto.EncryptedFile$EncryptedFileOutputStream: java.io.OutputStream mEncryptedOutputStream>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

androidx.security.crypto.EncryptedFile$FileEncryptionScheme
<androidx.security.crypto.EncryptedFile$FileEncryptionScheme: androidx.security.crypto.EncryptedFile$FileEncryptionScheme AES256_GCM_HKDF_4KB>
<androidx.security.crypto.EncryptedFile$FileEncryptionScheme: com.google.crypto.tink.KeyTemplate mStreamingAeadKeyTemplate>
<androidx.security.crypto.EncryptedFile$FileEncryptionScheme: androidx.security.crypto.EncryptedFile$FileEncryptionScheme[] $VALUES>
    public static androidx.security.crypto.EncryptedFile$FileEncryptionScheme[] values()
    {
        androidx.security.crypto.EncryptedFile$FileEncryptionScheme[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.security.crypto.EncryptedFile$FileEncryptionScheme: androidx.security.crypto.EncryptedFile$FileEncryptionScheme[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.security.crypto.EncryptedFile$FileEncryptionScheme[]) $r1;

        return $r2;
    }

    public static androidx.security.crypto.EncryptedFile$FileEncryptionScheme valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.security.crypto.EncryptedFile$FileEncryptionScheme $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/security/crypto/EncryptedFile$FileEncryptionScheme;", r0);

        $r2 = (androidx.security.crypto.EncryptedFile$FileEncryptionScheme) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, com.google.crypto.tink.KeyTemplate)
    {
        androidx.security.crypto.EncryptedFile$FileEncryptionScheme r0;
        java.lang.String r1;
        int i0;
        com.google.crypto.tink.KeyTemplate r2;

        r0 := @this: androidx.security.crypto.EncryptedFile$FileEncryptionScheme;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: com.google.crypto.tink.KeyTemplate;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<androidx.security.crypto.EncryptedFile$FileEncryptionScheme: com.google.crypto.tink.KeyTemplate mStreamingAeadKeyTemplate> = r2;

        return;
    }

    com.google.crypto.tink.KeyTemplate getKeyTemplate()
    {
        androidx.security.crypto.EncryptedFile$FileEncryptionScheme r0;
        com.google.crypto.tink.KeyTemplate $r1;

        r0 := @this: androidx.security.crypto.EncryptedFile$FileEncryptionScheme;

        $r1 = r0.<androidx.security.crypto.EncryptedFile$FileEncryptionScheme: com.google.crypto.tink.KeyTemplate mStreamingAeadKeyTemplate>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.security.crypto.EncryptedFile$FileEncryptionScheme $r0, $r3;
        com.google.crypto.tink.KeyTemplate $r1;
        androidx.security.crypto.EncryptedFile$FileEncryptionScheme[] $r2;

        $r0 = new androidx.security.crypto.EncryptedFile$FileEncryptionScheme;

        $r1 = staticinvoke <com.google.crypto.tink.streamingaead.AesGcmHkdfStreamingKeyManager: com.google.crypto.tink.KeyTemplate aes256GcmHkdf4KBTemplate()>();

        specialinvoke $r0.<androidx.security.crypto.EncryptedFile$FileEncryptionScheme: void <init>(java.lang.String,int,com.google.crypto.tink.KeyTemplate)>("AES256_GCM_HKDF_4KB", 0, $r1);

        <androidx.security.crypto.EncryptedFile$FileEncryptionScheme: androidx.security.crypto.EncryptedFile$FileEncryptionScheme AES256_GCM_HKDF_4KB> = $r0;

        $r2 = newarray (androidx.security.crypto.EncryptedFile$FileEncryptionScheme)[1];

        $r3 = <androidx.security.crypto.EncryptedFile$FileEncryptionScheme: androidx.security.crypto.EncryptedFile$FileEncryptionScheme AES256_GCM_HKDF_4KB>;

        $r2[0] = $r3;

        <androidx.security.crypto.EncryptedFile$FileEncryptionScheme: androidx.security.crypto.EncryptedFile$FileEncryptionScheme[] $VALUES> = $r2;

        return;
    }

