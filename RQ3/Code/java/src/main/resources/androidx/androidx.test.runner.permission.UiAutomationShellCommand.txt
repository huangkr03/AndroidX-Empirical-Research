androidx.test.runner.permission.UiAutomationShellCommand
<androidx.test.runner.permission.UiAutomationShellCommand: java.lang.String TAG>
<androidx.test.runner.permission.UiAutomationShellCommand: java.lang.String targetPackage>
<androidx.test.runner.permission.UiAutomationShellCommand: java.lang.String permission>
<androidx.test.runner.permission.UiAutomationShellCommand: androidx.test.runner.permission.UiAutomationShellCommand$PmCommand command>
<androidx.test.runner.permission.UiAutomationShellCommand: android.app.UiAutomation uiAutomation>
    protected java.lang.String commandForPermission()
    {
        androidx.test.runner.permission.UiAutomationShellCommand r0;
        java.lang.StringBuilder $r1, $r4, $r6, $r7, $r9;
        androidx.test.runner.permission.UiAutomationShellCommand$PmCommand $r2;
        java.lang.String $r3, $r5, $r8, $r10;

        r0 := @this: androidx.test.runner.permission.UiAutomationShellCommand;

        $r1 = new java.lang.StringBuilder;

        $r2 = r0.<androidx.test.runner.permission.UiAutomationShellCommand: androidx.test.runner.permission.UiAutomationShellCommand$PmCommand command>;

        $r3 = virtualinvoke $r2.<androidx.test.runner.permission.UiAutomationShellCommand$PmCommand: java.lang.String get()>();

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r0.<androidx.test.runner.permission.UiAutomationShellCommand: java.lang.String targetPackage>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = r0.<androidx.test.runner.permission.UiAutomationShellCommand: java.lang.String permission>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    void <init>(java.lang.String, java.lang.String, androidx.test.runner.permission.UiAutomationShellCommand$PmCommand)
    {
        androidx.test.runner.permission.UiAutomationShellCommand r0;
        java.lang.String r1, r2, $r4, $r5;
        androidx.test.runner.permission.UiAutomationShellCommand$PmCommand r3;
        android.app.Instrumentation $r6;
        android.app.UiAutomation $r7, $r9;
        java.lang.Object $r8;

        r0 := @this: androidx.test.runner.permission.UiAutomationShellCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: androidx.test.runner.permission.UiAutomationShellCommand$PmCommand;

        specialinvoke r0.<androidx.test.runner.permission.ShellCommand: void <init>()>();

        $r4 = staticinvoke <androidx.test.runner.permission.UiAutomationShellCommand: java.lang.String shellEscape(java.lang.String)>(r1);

        r0.<androidx.test.runner.permission.UiAutomationShellCommand: java.lang.String targetPackage> = $r4;

        $r5 = staticinvoke <androidx.test.runner.permission.UiAutomationShellCommand: java.lang.String shellEscape(java.lang.String)>(r2);

        r0.<androidx.test.runner.permission.UiAutomationShellCommand: java.lang.String permission> = $r5;

        r0.<androidx.test.runner.permission.UiAutomationShellCommand: androidx.test.runner.permission.UiAutomationShellCommand$PmCommand command> = r3;

        $r6 = staticinvoke <androidx.test.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        $r7 = virtualinvoke $r6.<android.app.Instrumentation: android.app.UiAutomation getUiAutomation()>();

        $r8 = staticinvoke <androidx.test.internal.util.Checks: java.lang.Object checkNotNull(java.lang.Object)>($r7);

        $r9 = (android.app.UiAutomation) $r8;

        r0.<androidx.test.runner.permission.UiAutomationShellCommand: android.app.UiAutomation uiAutomation> = $r9;

        return;
    }

    private static void awaitTermination(android.os.ParcelFileDescriptor, long, java.util.concurrent.TimeUnit) throws java.io.IOException, java.util.concurrent.TimeoutException
    {
        android.os.ParcelFileDescriptor r0;
        long l0, l1, l2, $l5, $l7, $l8;
        java.util.concurrent.TimeUnit r1;
        java.lang.String r2, $r10;
        java.lang.Throwable r3, $r8;
        byte $b3, $b6;
        java.io.BufferedReader $r4, r9;
        java.io.InputStreamReader $r5;
        android.os.ParcelFileDescriptor$AutoCloseInputStream $r6;
        java.util.concurrent.TimeoutException $r7;

        r0 := @parameter0: android.os.ParcelFileDescriptor;

        l0 := @parameter1: long;

        r1 := @parameter2: java.util.concurrent.TimeUnit;

        l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0);

        $b3 = l1 cmp 0L;

        if $b3 <= 0 goto label1;

        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l8 = $l7 + l1;

        goto label2;

     label1:
        $l8 = 0L;

     label2:
        l2 = $l8;

        r9 = null;

     label3:
        $r4 = new java.io.BufferedReader;

        $r5 = new java.io.InputStreamReader;

        $r6 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

        specialinvoke $r6.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>(r0);

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5);

        r9 = $r4;

     label4:
        $r10 = virtualinvoke r9.<java.io.BufferedReader: java.lang.String readLine()>();

        r2 = $r10;

        if $r10 == null goto label5;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UiAutomationShellCmd", r2);

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b6 = l2 cmp $l5;

        if $b6 <= 0 goto label4;

        $r7 = new java.util.concurrent.TimeoutException;

        specialinvoke $r7.<java.util.concurrent.TimeoutException: void <init>()>();

        throw $r7;

     label5:
        if r9 == null goto label9;

        virtualinvoke r9.<java.io.BufferedReader: void close()>();

        goto label9;

     label6:
        $r8 := @caughtexception;

        r3 = $r8;

     label7:
        if r9 == null goto label8;

        virtualinvoke r9.<java.io.BufferedReader: void close()>();

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void execute() throws java.lang.Exception
    {
        androidx.test.runner.permission.UiAutomationShellCommand r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.runner.permission.UiAutomationShellCommand;

        $r1 = virtualinvoke r0.<androidx.test.runner.permission.UiAutomationShellCommand: java.lang.String commandForPermission()>();

        specialinvoke r0.<androidx.test.runner.permission.UiAutomationShellCommand: void executePermissionCommand(java.lang.String)>($r1);

        return;
    }

    private void executePermissionCommand(java.lang.String) throws java.io.IOException
    {
        androidx.test.runner.permission.UiAutomationShellCommand r0;
        java.lang.String r1, $r6, $r14, r15, r16;
        java.lang.Throwable r2, $r10;
        java.lang.StringBuilder $r3, $r4, $r5, $r11, $r12, $r13;
        android.app.UiAutomation $r7;
        android.os.ParcelFileDescriptor $r8;
        java.util.concurrent.TimeUnit $r9;

        r0 := @this: androidx.test.runner.permission.UiAutomationShellCommand;

        r1 := @parameter0: java.lang.String;

        r15 = r1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requesting permission: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UiAutomationShellCmd", $r6);

     label1:
        $r7 = r0.<androidx.test.runner.permission.UiAutomationShellCommand: android.app.UiAutomation uiAutomation>;

        $r8 = virtualinvoke $r7.<android.app.UiAutomation: android.os.ParcelFileDescriptor executeShellCommand(java.lang.String)>(r1);

        $r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        staticinvoke <androidx.test.runner.permission.UiAutomationShellCommand: void awaitTermination(android.os.ParcelFileDescriptor,long,java.util.concurrent.TimeUnit)>($r8, 2L, $r9);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r2 = $r10;

        r16 = r1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout while executing cmd: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("UiAutomationShellCmd", $r14);

     label4:
        return;

        catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
    }

androidx.test.runner.permission.UiAutomationShellCommand$PmCommand
<androidx.test.runner.permission.UiAutomationShellCommand$PmCommand: androidx.test.runner.permission.UiAutomationShellCommand$PmCommand GRANT_PERMISSION>
<androidx.test.runner.permission.UiAutomationShellCommand$PmCommand: androidx.test.runner.permission.UiAutomationShellCommand$PmCommand[] $VALUES>
<androidx.test.runner.permission.UiAutomationShellCommand$PmCommand: java.lang.String pmCommand>
    public static androidx.test.runner.permission.UiAutomationShellCommand$PmCommand valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        androidx.test.runner.permission.UiAutomationShellCommand$PmCommand $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Landroidx/test/runner/permission/UiAutomationShellCommand$PmCommand;", r0);

        $r2 = (androidx.test.runner.permission.UiAutomationShellCommand$PmCommand) $r1;

        return $r2;
    }

    public java.lang.String get()
    {
        androidx.test.runner.permission.UiAutomationShellCommand$PmCommand r0;
        java.lang.String $r1;

        r0 := @this: androidx.test.runner.permission.UiAutomationShellCommand$PmCommand;

        $r1 = r0.<androidx.test.runner.permission.UiAutomationShellCommand$PmCommand: java.lang.String pmCommand>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.test.runner.permission.UiAutomationShellCommand$PmCommand $r0;
        androidx.test.runner.permission.UiAutomationShellCommand$PmCommand[] $r1;

        $r0 = new androidx.test.runner.permission.UiAutomationShellCommand$PmCommand;

        specialinvoke $r0.<androidx.test.runner.permission.UiAutomationShellCommand$PmCommand: void <init>(java.lang.String,int,java.lang.String)>("GRANT_PERMISSION", 0, "grant");

        <androidx.test.runner.permission.UiAutomationShellCommand$PmCommand: androidx.test.runner.permission.UiAutomationShellCommand$PmCommand GRANT_PERMISSION> = $r0;

        $r1 = staticinvoke <androidx.test.runner.permission.UiAutomationShellCommand$PmCommand: androidx.test.runner.permission.UiAutomationShellCommand$PmCommand[] $values()>();

        <androidx.test.runner.permission.UiAutomationShellCommand$PmCommand: androidx.test.runner.permission.UiAutomationShellCommand$PmCommand[] $VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        androidx.test.runner.permission.UiAutomationShellCommand$PmCommand r0;
        java.lang.String r1, r2, r3, $r7;
        int i0;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: androidx.test.runner.permission.UiAutomationShellCommand$PmCommand;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r3 = r2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pm ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<androidx.test.runner.permission.UiAutomationShellCommand$PmCommand: java.lang.String pmCommand> = $r7;

        return;
    }

    private static androidx.test.runner.permission.UiAutomationShellCommand$PmCommand[] $values()
    {
        androidx.test.runner.permission.UiAutomationShellCommand$PmCommand[] $r0;
        androidx.test.runner.permission.UiAutomationShellCommand$PmCommand $r1;

        $r0 = newarray (androidx.test.runner.permission.UiAutomationShellCommand$PmCommand)[1];

        $r1 = <androidx.test.runner.permission.UiAutomationShellCommand$PmCommand: androidx.test.runner.permission.UiAutomationShellCommand$PmCommand GRANT_PERMISSION>;

        $r0[0] = $r1;

        return $r0;
    }

    public static androidx.test.runner.permission.UiAutomationShellCommand$PmCommand[] values()
    {
        androidx.test.runner.permission.UiAutomationShellCommand$PmCommand[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <androidx.test.runner.permission.UiAutomationShellCommand$PmCommand: androidx.test.runner.permission.UiAutomationShellCommand$PmCommand[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (androidx.test.runner.permission.UiAutomationShellCommand$PmCommand[]) $r1;

        return $r2;
    }

