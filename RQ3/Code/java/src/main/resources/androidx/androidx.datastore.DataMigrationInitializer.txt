androidx.datastore.DataMigrationInitializer
<androidx.datastore.DataMigrationInitializer: androidx.datastore.DataMigrationInitializer$Companion Companion>
    public void <init>()
    {
        androidx.datastore.DataMigrationInitializer r0;

        r0 := @this: androidx.datastore.DataMigrationInitializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.datastore.DataMigrationInitializer$Companion $r0;

        $r0 = new androidx.datastore.DataMigrationInitializer$Companion;

        specialinvoke $r0.<androidx.datastore.DataMigrationInitializer$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.datastore.DataMigrationInitializer: androidx.datastore.DataMigrationInitializer$Companion Companion> = $r0;

        return;
    }

androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1
<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: androidx.datastore.InitializerApi p$0>
<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: java.lang.Object L$0>
<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: int label>
<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: java.util.List $migrations>
    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1 r0;
        java.lang.Object $r1, r2, $r3, $r7;
        int $i0;
        kotlin.Unit $r4;
        androidx.datastore.DataMigrationInitializer$Companion $r5;
        java.util.List $r6;
        androidx.datastore.InitializerApi r9, r10;
        java.lang.IllegalStateException r11;
        kotlin.coroutines.Continuation r12;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        r9 = r0.<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: androidx.datastore.InitializerApi p$0>;

        $r5 = <androidx.datastore.DataMigrationInitializer: androidx.datastore.DataMigrationInitializer$Companion Companion>;

        $r6 = r0.<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: java.util.List $migrations>;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: java.lang.Object L$0> = r9;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: int label> = 1;

        r12 = (kotlin.coroutines.Continuation) r0;

        $r7 = virtualinvoke $r5.<androidx.datastore.DataMigrationInitializer$Companion: java.lang.Object runMigrations(java.util.List,androidx.datastore.InitializerApi,kotlin.coroutines.Continuation)>($r6, r9, r12);

        if $r7 != r2 goto label3;

        return r2;

     label2:
        $r3 = r0.<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: java.lang.Object L$0>;

        r10 = (androidx.datastore.InitializerApi) $r3;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;

     label4:
        r11 = new java.lang.IllegalStateException;

        specialinvoke r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r11;
    }

    void <init>(java.util.List, kotlin.coroutines.Continuation)
    {
        androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1 r0;
        java.util.List r1;
        kotlin.coroutines.Continuation r2;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: java.util.List $migrations> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, r2);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1 r0, r3, r8;
        java.lang.Object r1;
        kotlin.coroutines.Continuation r2, r9;
        java.util.List $r5;
        androidx.datastore.InitializerApi $r6, $r7;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "completion");

        r8 = new androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1;

        $r5 = r0.<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: java.util.List $migrations>;

        specialinvoke r8.<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: void <init>(java.util.List,kotlin.coroutines.Continuation)>($r5, r2);

        r3 = r8;

        $r7 = (androidx.datastore.InitializerApi) r1;

        $r6 = (androidx.datastore.InitializerApi) r1;

        r3.<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: androidx.datastore.InitializerApi p$0> = $r6;

        r9 = (kotlin.coroutines.Continuation) r3;

        return r9;
    }

    public final java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1 r0, $r6;
        java.lang.Object r1, r2, $r7;
        kotlin.coroutines.Continuation $r3, $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r4 = virtualinvoke r0.<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r3);

        $r6 = (androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1) $r4;

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: java.lang.Object invokeSuspend(java.lang.Object)>($r5);

        return $r7;
    }

androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object result>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: int label>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: androidx.datastore.DataMigrationInitializer$Companion this$0>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$0>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$1>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$2>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$3>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$4>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$5>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$6>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$7>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$8>
    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1 r0;
        java.lang.Object $r1, $r3;
        int $i0, $i1;
        androidx.datastore.DataMigrationInitializer$Companion $r2;
        kotlin.coroutines.Continuation r4;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: int label> = $i1;

        $r2 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: androidx.datastore.DataMigrationInitializer$Companion this$0>;

        r4 = (kotlin.coroutines.Continuation) r0;

        $r3 = virtualinvoke $r2.<androidx.datastore.DataMigrationInitializer$Companion: java.lang.Object runMigrations(java.util.List,androidx.datastore.InitializerApi,kotlin.coroutines.Continuation)>(null, null, r4);

        return $r3;
    }

    void <init>(androidx.datastore.DataMigrationInitializer$Companion, kotlin.coroutines.Continuation)
    {
        androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1 r0;
        androidx.datastore.DataMigrationInitializer$Companion r1;
        kotlin.coroutines.Continuation r2;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1;

        r1 := @parameter0: androidx.datastore.DataMigrationInitializer$Companion;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: androidx.datastore.DataMigrationInitializer$Companion this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>(r2);

        return;
    }

androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1: int label>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1: androidx.datastore.DataMigration $migration>
    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1 r0;
        java.lang.Object $r1, r2, $r5;
        int $i0;
        kotlin.Unit $r3;
        androidx.datastore.DataMigration $r4;
        java.lang.IllegalStateException r7;
        kotlin.coroutines.Continuation r8;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label4;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1: androidx.datastore.DataMigration $migration>;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1: int label> = 1;

        r8 = (kotlin.coroutines.Continuation) r0;

        $r5 = interfaceinvoke $r4.<androidx.datastore.DataMigration: java.lang.Object cleanUp(kotlin.coroutines.Continuation)>(r8);

        if $r5 != r2 goto label3;

        return r2;

     label2:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label3:
        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;

     label4:
        r7 = new java.lang.IllegalStateException;

        specialinvoke r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r7;
    }

    void <init>(androidx.datastore.DataMigration, kotlin.coroutines.Continuation)
    {
        androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1 r0;
        androidx.datastore.DataMigration r1;
        kotlin.coroutines.Continuation r2;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1;

        r1 := @parameter0: androidx.datastore.DataMigration;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1: androidx.datastore.DataMigration $migration> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(1, r2);

        return;
    }

    public final kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
    {
        androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1 r0, r2, r5;
        kotlin.coroutines.Continuation r1, r6;
        androidx.datastore.DataMigration $r4;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1;

        r1 := @parameter0: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "completion");

        r5 = new androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1;

        $r4 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1: androidx.datastore.DataMigration $migration>;

        specialinvoke r5.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1: void <init>(androidx.datastore.DataMigration,kotlin.coroutines.Continuation)>($r4, r1);

        r2 = r5;

        r6 = (kotlin.coroutines.Continuation) r2;

        return r6;
    }

    public final java.lang.Object invoke(java.lang.Object)
    {
        androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1 r0, $r5;
        java.lang.Object r1, $r6;
        kotlin.coroutines.Continuation $r2, $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (kotlin.coroutines.Continuation) r1;

        $r3 = virtualinvoke r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)>($r2);

        $r5 = (androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object p$0>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$0>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$1>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$2>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$3>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$4>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$5>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$6>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: int label>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $migrations>
<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $cleanUps>
    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2 r0;
        java.lang.Object $r1, r2, $r3, $r4, $r5, $r9, $r10, $r11, $r12, r15, r17, r19, r21, $r22, $r23, r24, r26, r27;
        int $i0;
        boolean $z2, $z3;
        java.lang.Boolean $r6;
        java.util.List $r8, $r13;
        java.lang.Iterable $r16;
        java.util.Iterator r18;
        androidx.datastore.DataMigration r20, r25;
        androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1 r28;
        java.lang.IllegalStateException r29;
        kotlin.coroutines.Continuation r30, r31;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2;

        $r1 := @parameter0: java.lang.Object;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label03;
            case 2: goto label05;
            default: goto label10;
        };

     label01:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        r15 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object p$0>;

        $r13 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $migrations>;

        $r16 = (java.lang.Iterable) $r13;

        r17 = r15;

        r18 = interfaceinvoke $r16.<java.lang.Iterable: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (androidx.datastore.DataMigration) r19;

        r21 = r17;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$0> = r15;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$1> = $r16;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$2> = r17;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$3> = r18;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$4> = r19;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$5> = r20;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$6> = r21;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: int label> = 1;

        r30 = (kotlin.coroutines.Continuation) r0;

        $r22 = interfaceinvoke r20.<androidx.datastore.DataMigration: java.lang.Object shouldMigrate(java.lang.Object,kotlin.coroutines.Continuation)>(r21, r30);

        if $r22 != r2 goto label04;

        return r2;

     label03:
        r21 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$6>;

        $r10 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$5>;

        r20 = (androidx.datastore.DataMigration) $r10;

        r19 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$4>;

        $r11 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$3>;

        r18 = (java.util.Iterator) $r11;

        r17 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$2>;

        $r12 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$1>;

        $r16 = (java.lang.Iterable) $r12;

        r15 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r22 = $r1;

     label04:
        $r6 = (java.lang.Boolean) $r22;

        $z3 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label07;

        $r8 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $cleanUps>;

        r28 = new androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1;

        specialinvoke r28.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2$1$1: void <init>(androidx.datastore.DataMigration,kotlin.coroutines.Continuation)>(r20, null);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r28);

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$0> = r15;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$1> = $r16;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$2> = r17;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$3> = r18;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$4> = r19;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$5> = r20;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$6> = r21;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: int label> = 2;

        r31 = (kotlin.coroutines.Continuation) r0;

        $r9 = interfaceinvoke r20.<androidx.datastore.DataMigration: java.lang.Object migrate(java.lang.Object,kotlin.coroutines.Continuation)>(r21, r31);

        $r23 = $r9;

        if $r9 != r2 goto label06;

        return r2;

     label05:
        r24 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$6>;

        $r3 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$5>;

        r25 = (androidx.datastore.DataMigration) $r3;

        r26 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$4>;

        $r4 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$3>;

        r18 = (java.util.Iterator) $r4;

        r27 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$2>;

        $r5 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$1>;

        $r16 = (java.lang.Iterable) $r5;

        r15 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object L$0>;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r23 = $r1;

     label06:
        goto label08;

     label07:
        $r23 = r21;

     label08:
        r17 = $r23;

        goto label02;

     label09:
        return r17;

     label10:
        r29 = new java.lang.IllegalStateException;

        specialinvoke r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r29;
    }

    void <init>(java.util.List, java.util.List, kotlin.coroutines.Continuation)
    {
        androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2 r0;
        java.util.List r1, r2;
        kotlin.coroutines.Continuation r3;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $migrations> = r1;

        r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $cleanUps> = r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, r3);

        return;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2 r0, r3, r7;
        java.lang.Object r1;
        kotlin.coroutines.Continuation r2, r8;
        java.util.List $r5, $r6;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "completion");

        r7 = new androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2;

        $r6 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $migrations>;

        $r5 = r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.util.List $cleanUps>;

        specialinvoke r7.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: void <init>(java.util.List,java.util.List,kotlin.coroutines.Continuation)>($r6, $r5, r2);

        r3 = r7;

        r3.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object p$0> = r1;

        r8 = (kotlin.coroutines.Continuation) r3;

        return r8;
    }

    public final java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2 r0, $r6;
        java.lang.Object r1, r2, $r7;
        kotlin.coroutines.Continuation $r3, $r4;
        kotlin.Unit $r5;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r4 = virtualinvoke r0.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, $r3);

        $r6 = (androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2) $r4;

        $r5 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r7 = virtualinvoke $r6.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: java.lang.Object invokeSuspend(java.lang.Object)>($r5);

        return $r7;
    }

androidx.datastore.DataMigrationInitializer$Companion
    public final kotlin.jvm.functions.Function2 getInitializer(java.util.List)
    {
        androidx.datastore.DataMigrationInitializer$Companion r0;
        java.util.List r1;
        androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1 $r2;
        kotlin.jvm.functions.Function2 $r3;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion;

        r1 := @parameter0: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "migrations");

        $r2 = new androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1;

        specialinvoke $r2.<androidx.datastore.DataMigrationInitializer$Companion$getInitializer$1: void <init>(java.util.List,kotlin.coroutines.Continuation)>(r1, null);

        $r3 = (kotlin.jvm.functions.Function2) $r2;

        return $r3;
    }

    final java.lang.Object runMigrations(java.util.List, androidx.datastore.InitializerApi, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation $r0, r51;
        java.lang.Throwable r1, $r14, $r22, $r28, $r30, $r32, r45;
        java.lang.Object $r2, r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20, $r26, $r29, $r31, r41, r44;
        boolean $z1, z2, $z4, z6, z7;
        kotlin.Unit $r15;
        kotlin.jvm.functions.Function2 $r25;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.datastore.DataMigrationInitializer$Companion r33;
        java.util.List r34, r37;
        androidx.datastore.InitializerApi r35;
        androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1 $r36, r46;
        kotlin.jvm.internal.Ref$ObjectRef r38, r49;
        java.lang.Iterable $r39;
        java.util.Iterator r40;
        kotlin.jvm.functions.Function1 r42, r43;
        java.util.ArrayList r47;
        androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2 r48;
        java.lang.IllegalStateException r50;

        r33 := @this: androidx.datastore.DataMigrationInitializer$Companion;

        r34 := @parameter0: java.util.List;

        r35 := @parameter1: androidx.datastore.InitializerApi;

        $r0 := @parameter2: kotlin.coroutines.Continuation;

        $z1 = $r0 instanceof androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1;

        if $z1 == 0 goto label01;

        $r36 = (androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1) $r0;

        $i0 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: int label>;

        $i3 = $i2 - -2147483648;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: int label> = $i3;

        goto label02;

     label01:
        r46 = new androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1;

        specialinvoke r46.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: void <init>(androidx.datastore.DataMigrationInitializer$Companion,kotlin.coroutines.Continuation)>(r33, $r0);

        $r36 = r46;

     label02:
        $r2 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label09;
            default: goto label17;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

        z2 = 0;

        r47 = new java.util.ArrayList;

        specialinvoke r47.<java.util.ArrayList: void <init>()>();

        r37 = (java.util.List) r47;

        r48 = new androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2;

        specialinvoke r48.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$2: void <init>(java.util.List,java.util.List,kotlin.coroutines.Continuation)>(r34, r37, null);

        $r25 = (kotlin.jvm.functions.Function2) r48;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$0> = r33;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$1> = r34;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$2> = r35;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$3> = r37;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: int label> = 1;

        r51 = (kotlin.coroutines.Continuation) $r36;

        $r26 = interfaceinvoke r35.<androidx.datastore.InitializerApi: java.lang.Object updateData(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)>($r25, r51);

        if $r26 != r3 goto label05;

        return r3;

     label04:
        $r17 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$3>;

        r37 = (java.util.List) $r17;

        $r18 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$2>;

        r35 = (androidx.datastore.InitializerApi) $r18;

        $r19 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$1>;

        r34 = (java.util.List) $r19;

        $r20 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$0>;

        r33 = (androidx.datastore.DataMigrationInitializer$Companion) $r20;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label05:
        r49 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke r49.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r38 = r49;

        $r22 = (java.lang.Throwable) null;

        r38.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r22;

        $r39 = (java.lang.Iterable) r37;

        r40 = interfaceinvoke $r39.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z4 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label15;

        r41 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r42 = (kotlin.jvm.functions.Function1) r41;

     label07:
        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$0> = r33;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$1> = r34;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$2> = r35;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$3> = r37;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$4> = r38;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$5> = $r39;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$6> = r40;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$7> = r41;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$8> = r42;

        $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: int label> = 2;

        $r16 = interfaceinvoke r42.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r36);

     label08:
        if $r16 != r3 goto label11;

        return r3;

     label09:
        $r5 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$8>;

        r43 = (kotlin.jvm.functions.Function1) $r5;

        r44 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$7>;

        $r6 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$6>;

        r40 = (java.util.Iterator) $r6;

        $r7 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$5>;

        $r39 = (java.lang.Iterable) $r7;

        $r8 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$4>;

        r38 = (kotlin.jvm.internal.Ref$ObjectRef) $r8;

        $r9 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$3>;

        r37 = (java.util.List) $r9;

        $r10 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$2>;

        r35 = (androidx.datastore.InitializerApi) $r10;

        $r11 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$1>;

        r34 = (java.util.List) $r11;

        $r12 = $r36.<androidx.datastore.DataMigrationInitializer$Companion$runMigrations$1: java.lang.Object L$0>;

        r33 = (androidx.datastore.DataMigrationInitializer$Companion) $r12;

     label10:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label11:
        goto label14;

     label12:
        $r28 := @caughtexception;

        r1 = $r28;

        $r29 = r38.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r30 = (java.lang.Throwable) $r29;

        if $r30 != null goto label13;

        r38.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = r1;

        goto label14;

     label13:
        $r31 = r38.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r32 = (java.lang.Throwable) $r31;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r32);

        staticinvoke <kotlin.ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)>($r32, r1);

     label14:
        goto label06;

     label15:
        $r13 = r38.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r14 = (java.lang.Throwable) $r13;

        if $r14 == null goto label16;

        z6 = 0;

        r45 = $r14;

        z7 = 0;

        throw r45;

     label16:
        $r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r15;

     label17:
        r50 = new java.lang.IllegalStateException;

        specialinvoke r50.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r50;

        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    private void <init>()
    {
        androidx.datastore.DataMigrationInitializer$Companion r0;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.datastore.DataMigrationInitializer$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.datastore.DataMigrationInitializer$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.datastore.DataMigrationInitializer$Companion: void <init>()>();

        return;
    }

