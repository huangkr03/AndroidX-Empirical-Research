androidx.media3.session.MediaBrowser
<androidx.media3.session.MediaBrowser: java.lang.String WRONG_THREAD_ERROR_MESSAGE>
<androidx.media3.session.MediaBrowser: androidx.media3.session.MediaBrowser$MediaBrowserImpl impl>
    void <init>(android.content.Context, androidx.media3.session.SessionToken, android.os.Bundle, androidx.media3.session.MediaBrowser$Listener, android.os.Looper, androidx.media3.session.MediaController$ConnectionCallback, androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaBrowser r0;
        android.content.Context r1;
        androidx.media3.session.SessionToken r2;
        android.os.Bundle r3;
        androidx.media3.session.MediaBrowser$Listener r4;
        android.os.Looper r5;
        androidx.media3.session.MediaController$ConnectionCallback r6;
        androidx.media3.session.BitmapLoader r7;

        r0 := @this: androidx.media3.session.MediaBrowser;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.session.SessionToken;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: androidx.media3.session.MediaBrowser$Listener;

        r5 := @parameter4: android.os.Looper;

        r6 := @parameter5: androidx.media3.session.MediaController$ConnectionCallback;

        r7 := @parameter6: androidx.media3.session.BitmapLoader;

        specialinvoke r0.<androidx.media3.session.MediaController: void <init>(android.content.Context,androidx.media3.session.SessionToken,android.os.Bundle,androidx.media3.session.MediaController$Listener,android.os.Looper,androidx.media3.session.MediaController$ConnectionCallback,androidx.media3.session.BitmapLoader)>(r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    androidx.media3.session.MediaBrowser$MediaBrowserImpl createImpl(android.content.Context, androidx.media3.session.SessionToken, android.os.Bundle, android.os.Looper, androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaBrowser r0;
        android.content.Context r1;
        androidx.media3.session.SessionToken r2;
        android.os.Bundle r3;
        android.os.Looper r4;
        androidx.media3.session.BitmapLoader r5, $r9;
        boolean $z0;
        androidx.media3.session.MediaBrowserImplBase $r6;
        androidx.media3.session.MediaBrowserImplLegacy $r7;
        java.lang.Object $r8;
        androidx.media3.session.MediaBrowser$MediaBrowserImpl r10;

        r0 := @this: androidx.media3.session.MediaBrowser;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.session.SessionToken;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.Looper;

        r5 := @parameter4: androidx.media3.session.BitmapLoader;

        $z0 = virtualinvoke r2.<androidx.media3.session.SessionToken: boolean isLegacySession()>();

        if $z0 == 0 goto label1;

        $r7 = new androidx.media3.session.MediaBrowserImplLegacy;

        $r8 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r9 = (androidx.media3.session.BitmapLoader) $r8;

        specialinvoke $r7.<androidx.media3.session.MediaBrowserImplLegacy: void <init>(android.content.Context,androidx.media3.session.MediaBrowser,androidx.media3.session.SessionToken,android.os.Looper,androidx.media3.session.BitmapLoader)>(r1, r0, r2, r4, $r9);

        r10 = $r7;

        goto label2;

     label1:
        $r6 = new androidx.media3.session.MediaBrowserImplBase;

        specialinvoke $r6.<androidx.media3.session.MediaBrowserImplBase: void <init>(android.content.Context,androidx.media3.session.MediaBrowser,androidx.media3.session.SessionToken,android.os.Bundle,android.os.Looper)>(r1, r0, r2, r3, r4);

        r10 = $r6;

     label2:
        r0.<androidx.media3.session.MediaBrowser: androidx.media3.session.MediaBrowser$MediaBrowserImpl impl> = r10;

        return r10;
    }

    public com.google.common.util.concurrent.ListenableFuture getLibraryRoot(androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaBrowser r0;
        androidx.media3.session.MediaLibraryService$LibraryParams r1;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r2, $r6;
        androidx.media3.session.MediaBrowser$MediaBrowserImpl $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: androidx.media3.session.MediaBrowser;

        r1 := @parameter0: androidx.media3.session.MediaLibraryService$LibraryParams;

        specialinvoke r0.<androidx.media3.session.MediaBrowser: void verifyApplicationThread()>();

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaBrowser: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.session.MediaBrowser: androidx.media3.session.MediaBrowser$MediaBrowserImpl impl>;

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        $r5 = (androidx.media3.session.MediaBrowser$MediaBrowserImpl) $r4;

        $r6 = interfaceinvoke $r5.<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getLibraryRoot(androidx.media3.session.MediaLibraryService$LibraryParams)>(r1);

        return $r6;

     label1:
        $r2 = staticinvoke <androidx.media3.session.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r2;
    }

    public com.google.common.util.concurrent.ListenableFuture subscribe(java.lang.String, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaBrowser r0;
        java.lang.String r1;
        androidx.media3.session.MediaLibraryService$LibraryParams r2;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r4, $r8;
        androidx.media3.session.MediaBrowser$MediaBrowserImpl $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.session.MediaBrowser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.session.MediaLibraryService$LibraryParams;

        specialinvoke r0.<androidx.media3.session.MediaBrowser: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)>(r1, "parentId must not be empty");

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaBrowser: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.media3.session.MediaBrowser: androidx.media3.session.MediaBrowser$MediaBrowserImpl impl>;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (androidx.media3.session.MediaBrowser$MediaBrowserImpl) $r6;

        $r8 = interfaceinvoke $r7.<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture subscribe(java.lang.String,androidx.media3.session.MediaLibraryService$LibraryParams)>(r1, r2);

        return $r8;

     label1:
        $r4 = staticinvoke <androidx.media3.session.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r4;
    }

    public com.google.common.util.concurrent.ListenableFuture unsubscribe(java.lang.String)
    {
        androidx.media3.session.MediaBrowser r0;
        java.lang.String r1;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r3, $r7;
        androidx.media3.session.MediaBrowser$MediaBrowserImpl $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: androidx.media3.session.MediaBrowser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.media3.session.MediaBrowser: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)>(r1, "parentId must not be empty");

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaBrowser: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.media3.session.MediaBrowser: androidx.media3.session.MediaBrowser$MediaBrowserImpl impl>;

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        $r6 = (androidx.media3.session.MediaBrowser$MediaBrowserImpl) $r5;

        $r7 = interfaceinvoke $r6.<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture unsubscribe(java.lang.String)>(r1);

        return $r7;

     label1:
        $r3 = staticinvoke <androidx.media3.session.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture getChildren(java.lang.String, int, int, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaBrowser r0;
        java.lang.String r1;
        int i0, i1;
        androidx.media3.session.MediaLibraryService$LibraryParams r2;
        boolean $z0, $z1, $z2;
        com.google.common.util.concurrent.ListenableFuture $r4, $r8;
        androidx.media3.session.MediaBrowser$MediaBrowserImpl $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.session.MediaBrowser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media3.session.MediaLibraryService$LibraryParams;

        specialinvoke r0.<androidx.media3.session.MediaBrowser: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)>(r1, "parentId must not be empty");

        if i0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z1, "page must not be negative");

        if i1 < 1 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z2, "pageSize must not be less than 1");

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaBrowser: boolean isConnected()>();

        if $z0 == 0 goto label5;

        $r5 = r0.<androidx.media3.session.MediaBrowser: androidx.media3.session.MediaBrowser$MediaBrowserImpl impl>;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (androidx.media3.session.MediaBrowser$MediaBrowserImpl) $r6;

        $r8 = interfaceinvoke $r7.<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getChildren(java.lang.String,int,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(r1, i0, i1, r2);

        return $r8;

     label5:
        $r4 = staticinvoke <androidx.media3.session.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r4;
    }

    public com.google.common.util.concurrent.ListenableFuture getItem(java.lang.String)
    {
        androidx.media3.session.MediaBrowser r0;
        java.lang.String r1;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r3, $r7;
        androidx.media3.session.MediaBrowser$MediaBrowserImpl $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: androidx.media3.session.MediaBrowser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<androidx.media3.session.MediaBrowser: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)>(r1, "mediaId must not be empty");

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaBrowser: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.media3.session.MediaBrowser: androidx.media3.session.MediaBrowser$MediaBrowserImpl impl>;

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r4);

        $r6 = (androidx.media3.session.MediaBrowser$MediaBrowserImpl) $r5;

        $r7 = interfaceinvoke $r6.<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getItem(java.lang.String)>(r1);

        return $r7;

     label1:
        $r3 = staticinvoke <androidx.media3.session.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r3;
    }

    public com.google.common.util.concurrent.ListenableFuture search(java.lang.String, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaBrowser r0;
        java.lang.String r1;
        androidx.media3.session.MediaLibraryService$LibraryParams r2;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r4, $r8;
        androidx.media3.session.MediaBrowser$MediaBrowserImpl $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.session.MediaBrowser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media3.session.MediaLibraryService$LibraryParams;

        specialinvoke r0.<androidx.media3.session.MediaBrowser: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)>(r1, "query must not be empty");

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaBrowser: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<androidx.media3.session.MediaBrowser: androidx.media3.session.MediaBrowser$MediaBrowserImpl impl>;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (androidx.media3.session.MediaBrowser$MediaBrowserImpl) $r6;

        $r8 = interfaceinvoke $r7.<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture search(java.lang.String,androidx.media3.session.MediaLibraryService$LibraryParams)>(r1, r2);

        return $r8;

     label1:
        $r4 = staticinvoke <androidx.media3.session.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r4;
    }

    public com.google.common.util.concurrent.ListenableFuture getSearchResult(java.lang.String, int, int, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaBrowser r0;
        java.lang.String r1;
        int i0, i1;
        androidx.media3.session.MediaLibraryService$LibraryParams r2;
        boolean $z0, $z1, $z2;
        com.google.common.util.concurrent.ListenableFuture $r4, $r8;
        androidx.media3.session.MediaBrowser$MediaBrowserImpl $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: androidx.media3.session.MediaBrowser;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media3.session.MediaLibraryService$LibraryParams;

        specialinvoke r0.<androidx.media3.session.MediaBrowser: void verifyApplicationThread()>();

        staticinvoke <androidx.media3.common.util.Assertions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)>(r1, "query must not be empty");

        if i0 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z1, "page must not be negative");

        if i1 < 1 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean,java.lang.Object)>($z2, "pageSize must not be less than 1");

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaBrowser: boolean isConnected()>();

        if $z0 == 0 goto label5;

        $r5 = r0.<androidx.media3.session.MediaBrowser: androidx.media3.session.MediaBrowser$MediaBrowserImpl impl>;

        $r6 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r5);

        $r7 = (androidx.media3.session.MediaBrowser$MediaBrowserImpl) $r6;

        $r8 = interfaceinvoke $r7.<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getSearchResult(java.lang.String,int,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(r1, i0, i1, r2);

        return $r8;

     label5:
        $r4 = staticinvoke <androidx.media3.session.MediaBrowser: com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()>();

        return $r4;
    }

    private static com.google.common.util.concurrent.ListenableFuture createDisconnectedFuture()
    {
        androidx.media3.session.LibraryResult $r0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        $r0 = staticinvoke <androidx.media3.session.LibraryResult: androidx.media3.session.LibraryResult ofError(int)>(-100);

        $r1 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r0);

        return $r1;
    }

    private void verifyApplicationThread()
    {
        androidx.media3.session.MediaBrowser r0;
        android.os.Looper $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaBrowser;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaBrowser: android.os.Looper getApplicationLooper()>();

        if $r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean,java.lang.Object)>($z0, "MediaBrowser method is called from a wrong thread. See javadoc of MediaController for details.");

        return;
    }

    void notifyBrowserListener(androidx.media3.common.util.Consumer)
    {
        androidx.media3.session.MediaBrowser r0;
        androidx.media3.common.util.Consumer r1;
        androidx.media3.session.MediaBrowser$Listener r2;
        androidx.media3.session.MediaController$Listener $r3;
        android.os.Handler $r4;
        java.lang.Runnable $r5;

        r0 := @this: androidx.media3.session.MediaBrowser;

        r1 := @parameter0: androidx.media3.common.util.Consumer;

        $r3 = r0.<androidx.media3.session.MediaBrowser: androidx.media3.session.MediaController$Listener listener>;

        r2 = (androidx.media3.session.MediaBrowser$Listener) $r3;

        if r2 == null goto label1;

        $r4 = r0.<androidx.media3.session.MediaBrowser: android.os.Handler applicationHandler>;

        $r5 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.common.util.Consumer,androidx.media3.session.MediaBrowser$Listener)>(r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaBrowser: void lambda$notifyBrowserListener$0(androidx.media3.common.util.Consumer,androidx.media3.session.MediaBrowser$Listener)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r4, $r5);

     label1:
        return;
    }

    volatile androidx.media3.session.MediaController$MediaControllerImpl createImpl(android.content.Context, androidx.media3.session.SessionToken, android.os.Bundle, android.os.Looper, androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaBrowser r0;
        android.content.Context r1;
        androidx.media3.session.SessionToken r2;
        android.os.Bundle r3;
        android.os.Looper r4;
        androidx.media3.session.BitmapLoader r5;
        androidx.media3.session.MediaBrowser$MediaBrowserImpl $r6;

        r0 := @this: androidx.media3.session.MediaBrowser;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.session.SessionToken;

        r3 := @parameter2: android.os.Bundle;

        r4 := @parameter3: android.os.Looper;

        r5 := @parameter4: androidx.media3.session.BitmapLoader;

        $r6 = virtualinvoke r0.<androidx.media3.session.MediaBrowser: androidx.media3.session.MediaBrowser$MediaBrowserImpl createImpl(android.content.Context,androidx.media3.session.SessionToken,android.os.Bundle,android.os.Looper,androidx.media3.session.BitmapLoader)>(r1, r2, r3, r4, r5);

        return $r6;
    }

    private static void lambda$notifyBrowserListener$0(androidx.media3.common.util.Consumer, androidx.media3.session.MediaBrowser$Listener)
    {
        androidx.media3.common.util.Consumer r0;
        androidx.media3.session.MediaBrowser$Listener r1;

        r0 := @parameter0: androidx.media3.common.util.Consumer;

        r1 := @parameter1: androidx.media3.session.MediaBrowser$Listener;

        interfaceinvoke r0.<androidx.media3.common.util.Consumer: void accept(java.lang.Object)>(r1);

        return;
    }

androidx.media3.session.MediaBrowser$Builder$1
    void <init>(androidx.media3.session.MediaBrowser$Builder)
    {
        androidx.media3.session.MediaBrowser$Builder$1 r0;
        androidx.media3.session.MediaBrowser$Builder r1;

        r0 := @this: androidx.media3.session.MediaBrowser$Builder$1;

        r1 := @parameter0: androidx.media3.session.MediaBrowser$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.media3.session.MediaBrowser$Builder
<androidx.media3.session.MediaBrowser$Builder: android.content.Context context>
<androidx.media3.session.MediaBrowser$Builder: androidx.media3.session.SessionToken token>
<androidx.media3.session.MediaBrowser$Builder: android.os.Bundle connectionHints>
<androidx.media3.session.MediaBrowser$Builder: androidx.media3.session.MediaBrowser$Listener listener>
<androidx.media3.session.MediaBrowser$Builder: android.os.Looper applicationLooper>
<androidx.media3.session.MediaBrowser$Builder: androidx.media3.session.BitmapLoader bitmapLoader>
    public void <init>(android.content.Context, androidx.media3.session.SessionToken)
    {
        androidx.media3.session.MediaBrowser$Builder r0;
        android.content.Context r1, $r4;
        androidx.media3.session.SessionToken r2, $r6;
        java.lang.Object $r3, $r5;
        android.os.Bundle $r7;
        androidx.media3.session.MediaBrowser$Builder$1 $r8;
        android.os.Looper $r9;

        r0 := @this: androidx.media3.session.MediaBrowser$Builder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media3.session.SessionToken;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (android.content.Context) $r3;

        r0.<androidx.media3.session.MediaBrowser$Builder: android.content.Context context> = $r4;

        $r5 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (androidx.media3.session.SessionToken) $r5;

        r0.<androidx.media3.session.MediaBrowser$Builder: androidx.media3.session.SessionToken token> = $r6;

        $r7 = <android.os.Bundle: android.os.Bundle EMPTY>;

        r0.<androidx.media3.session.MediaBrowser$Builder: android.os.Bundle connectionHints> = $r7;

        $r8 = new androidx.media3.session.MediaBrowser$Builder$1;

        specialinvoke $r8.<androidx.media3.session.MediaBrowser$Builder$1: void <init>(androidx.media3.session.MediaBrowser$Builder)>(r0);

        r0.<androidx.media3.session.MediaBrowser$Builder: androidx.media3.session.MediaBrowser$Listener listener> = $r8;

        $r9 = staticinvoke <androidx.media3.common.util.Util: android.os.Looper getCurrentOrMainLooper()>();

        r0.<androidx.media3.session.MediaBrowser$Builder: android.os.Looper applicationLooper> = $r9;

        return;
    }

    public androidx.media3.session.MediaBrowser$Builder setConnectionHints(android.os.Bundle)
    {
        androidx.media3.session.MediaBrowser$Builder r0;
        android.os.Bundle r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: androidx.media3.session.MediaBrowser$Builder;

        r1 := @parameter0: android.os.Bundle;

        $r2 = new android.os.Bundle;

        $r3 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (android.os.Bundle) $r3;

        specialinvoke $r2.<android.os.Bundle: void <init>(android.os.Bundle)>($r4);

        r0.<androidx.media3.session.MediaBrowser$Builder: android.os.Bundle connectionHints> = $r2;

        return r0;
    }

    public androidx.media3.session.MediaBrowser$Builder setListener(androidx.media3.session.MediaBrowser$Listener)
    {
        androidx.media3.session.MediaBrowser$Builder r0;
        androidx.media3.session.MediaBrowser$Listener r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.session.MediaBrowser$Builder;

        r1 := @parameter0: androidx.media3.session.MediaBrowser$Listener;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.media3.session.MediaBrowser$Listener) $r2;

        r0.<androidx.media3.session.MediaBrowser$Builder: androidx.media3.session.MediaBrowser$Listener listener> = $r3;

        return r0;
    }

    public androidx.media3.session.MediaBrowser$Builder setApplicationLooper(android.os.Looper)
    {
        androidx.media3.session.MediaBrowser$Builder r0;
        android.os.Looper r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.session.MediaBrowser$Builder;

        r1 := @parameter0: android.os.Looper;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (android.os.Looper) $r2;

        r0.<androidx.media3.session.MediaBrowser$Builder: android.os.Looper applicationLooper> = $r3;

        return r0;
    }

    public androidx.media3.session.MediaBrowser$Builder setBitmapLoader(androidx.media3.session.BitmapLoader)
    {
        androidx.media3.session.MediaBrowser$Builder r0;
        androidx.media3.session.BitmapLoader r1, $r3;
        java.lang.Object $r2;

        r0 := @this: androidx.media3.session.MediaBrowser$Builder;

        r1 := @parameter0: androidx.media3.session.BitmapLoader;

        $r2 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (androidx.media3.session.BitmapLoader) $r2;

        r0.<androidx.media3.session.MediaBrowser$Builder: androidx.media3.session.BitmapLoader bitmapLoader> = $r3;

        return r0;
    }

    public com.google.common.util.concurrent.ListenableFuture buildAsync()
    {
        androidx.media3.session.MediaBrowser$Builder r0;
        androidx.media3.session.MediaControllerHolder r1, r19;
        androidx.media3.session.MediaBrowser r2, r22;
        android.os.Looper $r4, $r14, $r17;
        androidx.media3.session.SessionToken $r5, $r11;
        boolean $z0;
        androidx.media3.session.BitmapLoader $r6, $r15;
        android.content.Context $r10;
        android.os.Bundle $r12;
        androidx.media3.session.MediaBrowser$Listener $r13;
        java.lang.Runnable $r18;
        androidx.media3.session.SimpleBitmapLoader r20;
        androidx.media3.session.CacheBitmapLoader r21;
        android.os.Handler r23;
        com.google.common.util.concurrent.ListenableFuture r24;

        r0 := @this: androidx.media3.session.MediaBrowser$Builder;

        r19 = new androidx.media3.session.MediaControllerHolder;

        $r4 = r0.<androidx.media3.session.MediaBrowser$Builder: android.os.Looper applicationLooper>;

        specialinvoke r19.<androidx.media3.session.MediaControllerHolder: void <init>(android.os.Looper)>($r4);

        r1 = r19;

        $r5 = r0.<androidx.media3.session.MediaBrowser$Builder: androidx.media3.session.SessionToken token>;

        $z0 = virtualinvoke $r5.<androidx.media3.session.SessionToken: boolean isLegacySession()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.media3.session.MediaBrowser$Builder: androidx.media3.session.BitmapLoader bitmapLoader>;

        if $r6 != null goto label1;

        r21 = new androidx.media3.session.CacheBitmapLoader;

        r20 = new androidx.media3.session.SimpleBitmapLoader;

        specialinvoke r20.<androidx.media3.session.SimpleBitmapLoader: void <init>()>();

        specialinvoke r21.<androidx.media3.session.CacheBitmapLoader: void <init>(androidx.media3.session.BitmapLoader)>(r20);

        r0.<androidx.media3.session.MediaBrowser$Builder: androidx.media3.session.BitmapLoader bitmapLoader> = r21;

     label1:
        r22 = new androidx.media3.session.MediaBrowser;

        $r10 = r0.<androidx.media3.session.MediaBrowser$Builder: android.content.Context context>;

        $r11 = r0.<androidx.media3.session.MediaBrowser$Builder: androidx.media3.session.SessionToken token>;

        $r12 = r0.<androidx.media3.session.MediaBrowser$Builder: android.os.Bundle connectionHints>;

        $r13 = r0.<androidx.media3.session.MediaBrowser$Builder: androidx.media3.session.MediaBrowser$Listener listener>;

        $r14 = r0.<androidx.media3.session.MediaBrowser$Builder: android.os.Looper applicationLooper>;

        $r15 = r0.<androidx.media3.session.MediaBrowser$Builder: androidx.media3.session.BitmapLoader bitmapLoader>;

        specialinvoke r22.<androidx.media3.session.MediaBrowser: void <init>(android.content.Context,androidx.media3.session.SessionToken,android.os.Bundle,androidx.media3.session.MediaBrowser$Listener,android.os.Looper,androidx.media3.session.MediaController$ConnectionCallback,androidx.media3.session.BitmapLoader)>($r10, $r11, $r12, $r13, $r14, r1, $r15);

        r2 = r22;

        r23 = new android.os.Handler;

        $r17 = r0.<androidx.media3.session.MediaBrowser$Builder: android.os.Looper applicationLooper>;

        specialinvoke r23.<android.os.Handler: void <init>(android.os.Looper)>($r17);

        $r18 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaControllerHolder,androidx.media3.session.MediaBrowser)>(r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaBrowser$Builder: void lambda$buildAsync$0(androidx.media3.session.MediaControllerHolder,androidx.media3.session.MediaBrowser)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>(r23, $r18);

        r24 = (com.google.common.util.concurrent.ListenableFuture) r1;

        return r24;
    }

    private static void lambda$buildAsync$0(androidx.media3.session.MediaControllerHolder, androidx.media3.session.MediaBrowser)
    {
        androidx.media3.session.MediaControllerHolder r0;
        androidx.media3.session.MediaBrowser r1;

        r0 := @parameter0: androidx.media3.session.MediaControllerHolder;

        r1 := @parameter1: androidx.media3.session.MediaBrowser;

        virtualinvoke r0.<androidx.media3.session.MediaControllerHolder: void setController(androidx.media3.session.MediaController)>(r1);

        return;
    }

androidx.media3.session.MediaBrowser$Listener
    public void onChildrenChanged(androidx.media3.session.MediaBrowser, java.lang.String, int, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaBrowser$Listener r0;
        androidx.media3.session.MediaBrowser r1;
        java.lang.String r2;
        int i0;
        androidx.media3.session.MediaLibraryService$LibraryParams r3;

        r0 := @this: androidx.media3.session.MediaBrowser$Listener;

        r1 := @parameter0: androidx.media3.session.MediaBrowser;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media3.session.MediaLibraryService$LibraryParams;

        return;
    }

    public void onSearchResultChanged(androidx.media3.session.MediaBrowser, java.lang.String, int, androidx.media3.session.MediaLibraryService$LibraryParams)
    {
        androidx.media3.session.MediaBrowser$Listener r0;
        androidx.media3.session.MediaBrowser r1;
        java.lang.String r2;
        int i0;
        androidx.media3.session.MediaLibraryService$LibraryParams r3;

        r0 := @this: androidx.media3.session.MediaBrowser$Listener;

        r1 := @parameter0: androidx.media3.session.MediaBrowser;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: androidx.media3.session.MediaLibraryService$LibraryParams;

        return;
    }

androidx.media3.session.MediaBrowser$MediaBrowserImpl
<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getLibraryRoot(androidx.media3.session.MediaLibraryService$LibraryParams)>
<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture subscribe(java.lang.String,androidx.media3.session.MediaLibraryService$LibraryParams)>
<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture unsubscribe(java.lang.String)>
<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getChildren(java.lang.String,int,int,androidx.media3.session.MediaLibraryService$LibraryParams)>
<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getItem(java.lang.String)>
<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture search(java.lang.String,androidx.media3.session.MediaLibraryService$LibraryParams)>
<androidx.media3.session.MediaBrowser$MediaBrowserImpl: com.google.common.util.concurrent.ListenableFuture getSearchResult(java.lang.String,int,int,androidx.media3.session.MediaLibraryService$LibraryParams)>
