androidx.ui.core.ComponentNode
<androidx.ui.core.ComponentNode: java.util.List children>
<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode parent>
<androidx.ui.core.ComponentNode: androidx.ui.core.Owner owner>
<androidx.ui.core.ComponentNode: int depth>
<androidx.ui.core.ComponentNode: java.lang.Object ownerData>
<androidx.ui.core.ComponentNode: java.util.List _zIndexSortedChildren>
    private void <init>()
    {
        androidx.ui.core.ComponentNode r0, r3, r5;
        java.util.ArrayList $r1, $r2;
        boolean z0, z1;
        java.util.List r4, r6;

        r0 := @this: androidx.ui.core.ComponentNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r3 = r0;

        z0 = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r4 = (java.util.List) $r1;

        r3.<androidx.ui.core.ComponentNode: java.util.List children> = r4;

        r5 = r0;

        z1 = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r6 = (java.util.List) $r2;

        r5.<androidx.ui.core.ComponentNode: java.util.List _zIndexSortedChildren> = r6;

        return;
    }

    public final java.util.List getChildren$ui_platform_release()
    {
        androidx.ui.core.ComponentNode r0;
        java.util.List $r1;

        r0 := @this: androidx.ui.core.ComponentNode;

        $r1 = r0.<androidx.ui.core.ComponentNode: java.util.List children>;

        return $r1;
    }

    public final androidx.ui.core.ComponentNode getParent()
    {
        androidx.ui.core.ComponentNode r0, $r1;

        r0 := @this: androidx.ui.core.ComponentNode;

        $r1 = r0.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode parent>;

        return $r1;
    }

    public final androidx.ui.core.Owner getOwner()
    {
        androidx.ui.core.ComponentNode r0;
        androidx.ui.core.Owner $r1;

        r0 := @this: androidx.ui.core.ComponentNode;

        $r1 = r0.<androidx.ui.core.ComponentNode: androidx.ui.core.Owner owner>;

        return $r1;
    }

    public final int getDepth()
    {
        androidx.ui.core.ComponentNode r0;
        int $i0;

        r0 := @this: androidx.ui.core.ComponentNode;

        $i0 = r0.<androidx.ui.core.ComponentNode: int depth>;

        return $i0;
    }

    public final void setDepth(int)
    {
        androidx.ui.core.ComponentNode r0;
        int i0;

        r0 := @this: androidx.ui.core.ComponentNode;

        i0 := @parameter0: int;

        r0.<androidx.ui.core.ComponentNode: int depth> = i0;

        return;
    }

    public final java.lang.Object getOwnerData()
    {
        androidx.ui.core.ComponentNode r0;
        java.lang.Object $r1;

        r0 := @this: androidx.ui.core.ComponentNode;

        $r1 = r0.<androidx.ui.core.ComponentNode: java.lang.Object ownerData>;

        return $r1;
    }

    public final void setOwnerData(java.lang.Object)
    {
        androidx.ui.core.ComponentNode r0;
        java.lang.Object r1;

        r0 := @this: androidx.ui.core.ComponentNode;

        r1 := @parameter0: java.lang.Object;

        r0.<androidx.ui.core.ComponentNode: java.lang.Object ownerData> = r1;

        return;
    }

    public final int getCount()
    {
        androidx.ui.core.ComponentNode r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: androidx.ui.core.ComponentNode;

        $r1 = virtualinvoke r0.<androidx.ui.core.ComponentNode: java.util.List getChildren$ui_platform_release()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public androidx.ui.core.LayoutNode getParentLayoutNode()
    {
        androidx.ui.core.ComponentNode r0;
        androidx.ui.core.LayoutNode $r1;

        r0 := @this: androidx.ui.core.ComponentNode;

        $r1 = virtualinvoke r0.<androidx.ui.core.ComponentNode: androidx.ui.core.LayoutNode getContainingLayoutNode$ui_platform_release()>();

        return $r1;
    }

    public androidx.ui.core.LayoutNode getContainingLayoutNode$ui_platform_release()
    {
        androidx.ui.core.ComponentNode r0, r1;
        androidx.ui.core.LayoutNode $r2;

        r0 := @this: androidx.ui.core.ComponentNode;

        r1 = virtualinvoke r0.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode getParent()>();

        if r1 != null goto label1;

        $r2 = (androidx.ui.core.LayoutNode) null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<androidx.ui.core.ComponentNode: androidx.ui.core.LayoutNode getContainingLayoutNode$ui_platform_release()>();

     label2:
        return $r2;
    }

    public final void visitChildren(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.ComponentNode r0, $r2;
        kotlin.jvm.functions.Function1 r1;
        int i0, i1, i2, i3;

        r0 := @this: androidx.ui.core.ComponentNode;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        i0 = virtualinvoke r0.<androidx.ui.core.ComponentNode: int getCount()>();

        i3 = 0;

        i1 = i0 + -1;

        if i0 == -2147483648 goto label2;

        if i3 > i1 goto label2;

     label1:
        i2 = i3;

        i3 = i3 + 1;

        $r2 = virtualinvoke r0.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode get(int)>(i2);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        if i3 <= i1 goto label1;

     label2:
        return;
    }

    public final void visitChildrenReverse(kotlin.jvm.functions.Function1)
    {
        androidx.ui.core.ComponentNode r0, $r2;
        kotlin.jvm.functions.Function1 r1;
        int i0, $i1, i2;

        r0 := @this: androidx.ui.core.ComponentNode;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $i1 = virtualinvoke r0.<androidx.ui.core.ComponentNode: int getCount()>();

        i2 = $i1 - 1;

        if 0 > i2 goto label2;

     label1:
        i0 = i2;

        i2 = i2 + -1;

        $r2 = virtualinvoke r0.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode get(int)>(i0);

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        if 0 <= i2 goto label1;

     label2:
        return;
    }

    public final void insertAt(int, androidx.ui.core.ComponentNode)
    {
        androidx.ui.core.ComponentNode r0, r1, $r2;
        int i0;
        androidx.ui.core.Owner $r3, r19;
        java.util.List $r4;
        boolean $z0, $z1, z2, $z5, z6;
        androidx.ui.core.ComponentNode$insertAt$1 $r5;
        kotlin.jvm.functions.Function1 $r6;
        androidx.ui.core.LayoutNode $r7, r18;
        androidx.ui.core.LayoutNodeWrapper $r8, $r9;
        java.lang.IllegalStateException $r10, $r12;
        java.lang.String $r11, $r13;
        androidx.ui.core.ErrorMessages r14, r15, r16, r17;

        r0 := @this: androidx.ui.core.ComponentNode;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.ui.core.ComponentNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "instance");

        r14 = <androidx.ui.core.ErrorMessages: androidx.ui.core.ErrorMessages ComponentNodeHasParent>;

        $r2 = virtualinvoke r1.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode getParent()>();

        if $r2 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z2 = $z1;

        if z2 != 0 goto label3;

        r15 = r14;

        $r12 = new java.lang.IllegalStateException;

        $r13 = virtualinvoke r15.<androidx.ui.core.ErrorMessages: java.lang.String getMessage()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label3:
        r16 = <androidx.ui.core.ErrorMessages: androidx.ui.core.ErrorMessages OwnerAlreadyAttached>;

        $r3 = virtualinvoke r1.<androidx.ui.core.ComponentNode: androidx.ui.core.Owner getOwner()>();

        if $r3 != null goto label4;

        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        z6 = $z5;

        if z6 != 0 goto label6;

        r17 = r16;

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke r17.<androidx.ui.core.ErrorMessages: java.lang.String getMessage()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label6:
        r1.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode parent> = r0;

        $r4 = virtualinvoke r0.<androidx.ui.core.ComponentNode: java.util.List getChildren$ui_platform_release()>();

        interfaceinvoke $r4.<java.util.List: void add(int,java.lang.Object)>(i0, r1);

        r18 = virtualinvoke r0.<androidx.ui.core.ComponentNode: androidx.ui.core.LayoutNode getContainingLayoutNode$ui_platform_release()>();

        if r18 == null goto label8;

        $z0 = r1 instanceof androidx.ui.core.LayoutNode;

        if $z0 == 0 goto label7;

        $r7 = (androidx.ui.core.LayoutNode) r1;

        $r8 = virtualinvoke $r7.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $r9 = virtualinvoke r18.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getInnerLayoutNodeWrapper$ui_platform_release()>();

        virtualinvoke $r8.<androidx.ui.core.LayoutNodeWrapper: void setWrappedBy$ui_platform_release(androidx.ui.core.LayoutNodeWrapper)>($r9);

        goto label8;

     label7:
        $r5 = new androidx.ui.core.ComponentNode$insertAt$1;

        specialinvoke $r5.<androidx.ui.core.ComponentNode$insertAt$1: void <init>(androidx.ui.core.LayoutNode)>(r18);

        $r6 = (kotlin.jvm.functions.Function1) $r5;

        staticinvoke <androidx.ui.core.ComponentNodesKt: void visitLayoutChildren(androidx.ui.core.ComponentNode,kotlin.jvm.functions.Function1)>(r0, $r6);

     label8:
        r19 = virtualinvoke r0.<androidx.ui.core.ComponentNode: androidx.ui.core.Owner getOwner()>();

        if r19 == null goto label9;

        virtualinvoke r1.<androidx.ui.core.ComponentNode: void attach(androidx.ui.core.Owner)>(r19);

     label9:
        return;
    }

    public final void removeAt(int, int)
    {
        androidx.ui.core.ComponentNode r0, $r7, r18;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i8;
        java.lang.String r1, r2, r3, $r9;
        androidx.ui.core.Owner $r4;
        java.util.List $r5;
        java.lang.Object $r6;
        java.lang.Object[] $r8, r15, r16, r17;
        java.lang.IllegalArgumentException $r10;
        androidx.ui.core.ErrorMessages r11, r12;
        boolean $z1, z2, z4, $z5, z6;
        int[] r13, r14;

        r0 := @this: androidx.ui.core.ComponentNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r11 = <androidx.ui.core.ErrorMessages: androidx.ui.core.ErrorMessages CountOutOfRange>;

        if i1 < 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z2 = $z1;

        if z2 != 0 goto label3;

        r12 = r11;

        r13 = newarray (int)[1];

        r13[0] = i1;

        r14 = r13;

        r1 = virtualinvoke r12.<androidx.ui.core.ErrorMessages: java.lang.String getMessage()>();

        r15 = staticinvoke <androidx.ui.core.ErrorMessages: java.lang.Object[] access$toAnyArray(androidx.ui.core.ErrorMessages,int[])>(r12, r14);

        $i3 = lengthof r15;

        r16 = newarray (java.lang.Object)[$i3];

        $i4 = lengthof r15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r15, 0, r16, 0, $i4);

        r17 = r16;

        z4 = 0;

        $i5 = lengthof r17;

        $r8 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r17, $i5);

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "java.lang.String.format(this, *args)");

        r2 = $r9;

        r3 = r2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r3);

        throw $r10;

     label3:
        $r4 = virtualinvoke r0.<androidx.ui.core.ComponentNode: androidx.ui.core.Owner getOwner()>();

        if $r4 == null goto label4;

        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        z6 = $z5;

        $i2 = i0 + i1;

        i6 = $i2 - 1;

        if i0 > i6 goto label8;

     label6:
        i8 = i6;

        i6 = i6 + -1;

        $r5 = virtualinvoke r0.<androidx.ui.core.ComponentNode: java.util.List getChildren$ui_platform_release()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>(i8);

        r18 = (androidx.ui.core.ComponentNode) $r6;

        if z6 == 0 goto label7;

        virtualinvoke r18.<androidx.ui.core.ComponentNode: void detach()>();

     label7:
        $r7 = (androidx.ui.core.ComponentNode) null;

        r18.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode parent> = $r7;

        if i8 != i0 goto label6;

     label8:
        return;
    }

    public final void move(int, int, int)
    {
        androidx.ui.core.ComponentNode r0, r4;
        int i0, i1, i2, $i3, i4, i5, i6, $i7, i8, $i9, i10;
        java.util.List $r1, $r3;
        java.lang.Object $r2;
        androidx.ui.core.LayoutNode r5, r6, r7;
        boolean z0, z1, z2;

        r0 := @this: androidx.ui.core.ComponentNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 != i1 goto label1;

        return;

     label1:
        i4 = 0;

        i5 = i2 + -1;

        if i2 == -2147483648 goto label7;

        if i4 > i5 goto label7;

     label2:
        i6 = i4;

        i4 = i4 + 1;

        if i0 <= i1 goto label3;

        $i7 = i0 + i6;

        goto label4;

     label3:
        $i7 = i0;

     label4:
        i8 = $i7;

        if i0 <= i1 goto label5;

        $i9 = i1 + i6;

        goto label6;

     label5:
        $i3 = i1 + i2;

        $i9 = $i3 - 2;

     label6:
        i10 = $i9;

        $r1 = virtualinvoke r0.<androidx.ui.core.ComponentNode: java.util.List getChildren$ui_platform_release()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i8);

        r4 = (androidx.ui.core.ComponentNode) $r2;

        $r3 = virtualinvoke r0.<androidx.ui.core.ComponentNode: java.util.List getChildren$ui_platform_release()>();

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(i10, r4);

        if i4 <= i5 goto label2;

     label7:
        r5 = virtualinvoke r0.<androidx.ui.core.ComponentNode: androidx.ui.core.LayoutNode getContainingLayoutNode$ui_platform_release()>();

        if r5 != null goto label8;

        goto label9;

     label8:
        r6 = r5;

        z0 = 0;

        z1 = 0;

        r7 = r6;

        z2 = 0;

        virtualinvoke r7.<androidx.ui.core.LayoutNode: void setLayoutChildrenDirty$ui_platform_release(boolean)>(1);

        virtualinvoke r7.<androidx.ui.core.LayoutNode: void requestRemeasure()>();

     label9:
        return;
    }

    public final androidx.ui.core.ComponentNode get(int)
    {
        androidx.ui.core.ComponentNode r0, $r3;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.ui.core.ComponentNode;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.ui.core.ComponentNode: java.util.List getChildren$ui_platform_release()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (androidx.ui.core.ComponentNode) $r2;

        return $r3;
    }

    public void attach(androidx.ui.core.Owner)
    {
        androidx.ui.core.ComponentNode r0, r2, r12, r17;
        androidx.ui.core.Owner r1, $r3, $r7;
        int i0, $i1, $i2, $i3, i4, $i5, $i6;
        java.lang.IllegalStateException $r5, $r8;
        java.lang.String $r6, $r9;
        boolean $z1, $z2, z3, $z6, z7;
        androidx.ui.core.ErrorMessages r10, r11, r13;
        java.lang.Integer $r15, r16;

        r0 := @this: androidx.ui.core.ComponentNode;

        r1 := @parameter0: androidx.ui.core.Owner;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "owner");

        r10 = <androidx.ui.core.ErrorMessages: androidx.ui.core.ErrorMessages OwnerAlreadyAttached>;

        $r3 = virtualinvoke r0.<androidx.ui.core.ComponentNode: androidx.ui.core.Owner getOwner()>();

        if $r3 != null goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z3 = $z2;

        if z3 != 0 goto label03;

        r11 = r10;

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke r11.<androidx.ui.core.ErrorMessages: java.lang.String getMessage()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label03:
        r12 = virtualinvoke r0.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode getParent()>();

        r13 = <androidx.ui.core.ErrorMessages: androidx.ui.core.ErrorMessages ParentOwnerMustMatchChild>;

        if r12 == null goto label04;

        $r7 = virtualinvoke r12.<androidx.ui.core.ComponentNode: androidx.ui.core.Owner getOwner()>();

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, r1);

        if $z1 == 0 goto label05;

     label04:
        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        z7 = 0;

        if $z6 != 0 goto label07;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r13.<androidx.ui.core.ErrorMessages: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label07:
        r0.<androidx.ui.core.ComponentNode: androidx.ui.core.Owner owner> = r1;

        if r12 != null goto label08;

        $r15 = (java.lang.Integer) null;

        goto label09;

     label08:
        $i1 = virtualinvoke r12.<androidx.ui.core.ComponentNode: int getDepth()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label09:
        r16 = $r15;

        if r16 != null goto label10;

        $i3 = -1;

        goto label11;

     label10:
        $i3 = virtualinvoke r16.<java.lang.Integer: int intValue()>();

     label11:
        $i2 = $i3 + 1;

        virtualinvoke r0.<androidx.ui.core.ComponentNode: void setDepth(int)>($i2);

        interfaceinvoke r1.<androidx.ui.core.Owner: void onAttach(androidx.ui.core.ComponentNode)>(r0);

        r17 = r0;

        i4 = virtualinvoke r17.<androidx.ui.core.ComponentNode: int getCount()>();

        $i5 = 0;

        $i6 = i4 + -1;

        if i4 == -2147483648 goto label13;

        if 0 > $i6 goto label13;

     label12:
        i0 = $i5;

        $i5 = $i5 + 1;

        r2 = virtualinvoke r17.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode get(int)>(i0);

        virtualinvoke r2.<androidx.ui.core.ComponentNode: void attach(androidx.ui.core.Owner)>(r1);

        if $i5 <= $i6 goto label12;

     label13:
        return;
    }

    public void detach()
    {
        androidx.ui.core.ComponentNode r0, r2, r8;
        androidx.ui.core.Owner r1, $r3, r6;
        int i0, i1, $i2, i3;
        java.lang.IllegalStateException $r4;
        java.lang.String $r5;
        androidx.ui.core.ErrorMessages r7;
        boolean z2;

        r0 := @this: androidx.ui.core.ComponentNode;

        r6 = virtualinvoke r0.<androidx.ui.core.ComponentNode: androidx.ui.core.Owner getOwner()>();

        if r6 != null goto label1;

        r7 = <androidx.ui.core.ErrorMessages: androidx.ui.core.ErrorMessages OwnerAlreadyDetached>;

        $r4 = new java.lang.IllegalStateException;

        $r5 = virtualinvoke r7.<androidx.ui.core.ErrorMessages: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        r1 = r6;

        interfaceinvoke r1.<androidx.ui.core.Owner: void onDetach(androidx.ui.core.ComponentNode)>(r0);

        $r3 = (androidx.ui.core.Owner) null;

        r0.<androidx.ui.core.ComponentNode: androidx.ui.core.Owner owner> = $r3;

        virtualinvoke r0.<androidx.ui.core.ComponentNode: void setDepth(int)>(0);

        r8 = r0;

        z2 = 0;

        $i2 = virtualinvoke r8.<androidx.ui.core.ComponentNode: int getCount()>();

        i3 = 0;

        i0 = $i2 + -1;

        if $i2 == -2147483648 goto label3;

        if i3 > i0 goto label3;

     label2:
        i1 = i3;

        i3 = i3 + 1;

        r2 = virtualinvoke r8.<androidx.ui.core.ComponentNode: androidx.ui.core.ComponentNode get(int)>(i1);

        virtualinvoke r2.<androidx.ui.core.ComponentNode: void detach()>();

        if i3 <= i0 goto label2;

     label3:
        return;
    }

    public final java.util.List getZIndexSortedChildren()
    {
        androidx.ui.core.ComponentNode r0;
        java.util.List $r1, $r2, $r3, $r5, $r7;
        java.util.Collection $r4;
        java.util.Comparator $r6;

        r0 := @this: androidx.ui.core.ComponentNode;

        $r1 = r0.<androidx.ui.core.ComponentNode: java.util.List _zIndexSortedChildren>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<androidx.ui.core.ComponentNode: java.util.List _zIndexSortedChildren>;

        $r3 = virtualinvoke r0.<androidx.ui.core.ComponentNode: java.util.List getChildren$ui_platform_release()>();

        $r4 = (java.util.Collection) $r3;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        $r5 = r0.<androidx.ui.core.ComponentNode: java.util.List _zIndexSortedChildren>;

        $r6 = staticinvoke <androidx.ui.core.ComponentNodesKt: java.util.Comparator access$getZIndexComparator$cp$s-569914275()>();

        staticinvoke <kotlin.collections.CollectionsKt: void sortWith(java.util.List,java.util.Comparator)>($r5, $r6);

        $r7 = r0.<androidx.ui.core.ComponentNode: java.util.List _zIndexSortedChildren>;

        return $r7;
    }

    public static void getZIndexSortedChildren$annotations()
    {
        return;
    }

    public java.lang.String toString()
    {
        androidx.ui.core.ComponentNode r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String $r2, $r7;
        java.util.List $r5;
        int $i0;

        r0 := @this: androidx.ui.core.ComponentNode;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <androidx.ui.core.DebugUtilsKt: java.lang.String simpleIdentityToString$default(java.lang.Object,java.lang.String,int,java.lang.Object)>(r0, null, 2, null);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" children: ");

        $r5 = virtualinvoke r0.<androidx.ui.core.ComponentNode: java.util.List getChildren$ui_platform_release()>();

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private final java.lang.String debugTreeToString(int)
    {
        androidx.ui.core.ComponentNode r0, r14;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        java.lang.StringBuilder r1, $r2;
        java.lang.Object $r7;
        java.lang.String $r8, $r11, r15;
        java.util.List $r12;
        java.util.Iterator r13;
        boolean $z0;

        r0 := @this: androidx.ui.core.ComponentNode;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        i5 = 0;

        i6 = i0 + -1;

        if i0 == -2147483648 goto label2;

        if i5 > i6 goto label2;

     label1:
        i1 = i5;

        i5 = i5 + 1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        if i5 <= i6 goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|-");

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r12 = virtualinvoke r0.<androidx.ui.core.ComponentNode: java.util.List getChildren$ui_platform_release()>();

        r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r14 = (androidx.ui.core.ComponentNode) $r7;

        $i4 = i0 + 1;

        $r8 = specialinvoke r14.<androidx.ui.core.ComponentNode: java.lang.String debugTreeToString(int)>($i4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        goto label3;

     label4:
        if i0 != 0 goto label5;

        $i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i3);

     label5:
        r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r15, "tree.toString()");

        return r15;
    }

    static java.lang.String debugTreeToString$default(androidx.ui.core.ComponentNode, int, int, java.lang.Object)
    {
        androidx.ui.core.ComponentNode r0;
        int i0, $i1, i2;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @parameter0: androidx.ui.core.ComponentNode;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        i2 = 0;

     label1:
        $r2 = specialinvoke r0.<androidx.ui.core.ComponentNode: java.lang.String debugTreeToString(int)>(i2);

        return $r2;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.core.ComponentNode r0;
        kotlin.jvm.internal.DefaultConstructorMarker r1;

        r0 := @this: androidx.ui.core.ComponentNode;

        r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.ui.core.ComponentNode: void <init>()>();

        return;
    }

androidx.ui.core.ComponentNode$insertAt$1
<androidx.ui.core.ComponentNode$insertAt$1: androidx.ui.core.LayoutNode $containingLayout>
    void <init>(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.ComponentNode$insertAt$1 r0;
        androidx.ui.core.LayoutNode $r1;

        r0 := @this: androidx.ui.core.ComponentNode$insertAt$1;

        $r1 := @parameter0: androidx.ui.core.LayoutNode;

        r0.<androidx.ui.core.ComponentNode$insertAt$1: androidx.ui.core.LayoutNode $containingLayout> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.ui.core.LayoutNode)
    {
        androidx.ui.core.ComponentNode$insertAt$1 r0;
        androidx.ui.core.LayoutNode r1, $r3;
        androidx.ui.core.LayoutNodeWrapper $r2, $r4;

        r0 := @this: androidx.ui.core.ComponentNode$insertAt$1;

        r1 := @parameter0: androidx.ui.core.LayoutNode;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = virtualinvoke r1.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getLayoutNodeWrapper$ui_platform_release()>();

        $r3 = r0.<androidx.ui.core.ComponentNode$insertAt$1: androidx.ui.core.LayoutNode $containingLayout>;

        $r4 = virtualinvoke $r3.<androidx.ui.core.LayoutNode: androidx.ui.core.LayoutNodeWrapper getInnerLayoutNodeWrapper$ui_platform_release()>();

        virtualinvoke $r2.<androidx.ui.core.LayoutNodeWrapper: void setWrappedBy$ui_platform_release(androidx.ui.core.LayoutNodeWrapper)>($r4);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.ui.core.ComponentNode$insertAt$1 r0;
        java.lang.Object r1;
        androidx.ui.core.LayoutNode $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.ui.core.ComponentNode$insertAt$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.ui.core.LayoutNode) r1;

        virtualinvoke r0.<androidx.ui.core.ComponentNode$insertAt$1: void invoke(androidx.ui.core.LayoutNode)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

