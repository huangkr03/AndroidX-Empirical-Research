androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer printer>
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean isInNotCall>
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean printIntsAsBinary>
    private final void print(org.jetbrains.kotlin.ir.IrElement)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.IrElement $r1;
        org.jetbrains.kotlin.ir.visitors.IrElementVisitor $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.IrElement;

        $r2 = (org.jetbrains.kotlin.ir.visitors.IrElementVisitor) r0;

        interfaceinvoke $r1.<org.jetbrains.kotlin.ir.IrElement: java.lang.Object accept(org.jetbrains.kotlin.ir.visitors.IrElementVisitor,java.lang.Object)>($r2, null);

        return;
    }

    private final org.jetbrains.kotlin.utils.Printer print(java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        java.lang.Object r1;
        java.lang.Object[] $r2;
        org.jetbrains.kotlin.utils.Printer $r3, $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer printer>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        $r4 = virtualinvoke $r3.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer print(java.lang.Object[])>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "printer.print(obj)");

        return $r4;
    }

    private final org.jetbrains.kotlin.utils.Printer println(java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        java.lang.Object r1;
        java.lang.Object[] $r2;
        org.jetbrains.kotlin.utils.Printer $r3, $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer printer>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        $r4 = virtualinvoke $r3.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer println(java.lang.Object[])>($r2);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "printer.println(obj)");

        return $r4;
    }

    private final org.jetbrains.kotlin.utils.Printer println()
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        java.lang.Object[] $r1;
        org.jetbrains.kotlin.utils.Printer $r2, $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer printer>;

        $r1 = newarray (java.lang.Object)[0];

        $r3 = virtualinvoke $r2.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer println(java.lang.Object[])>($r1);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "printer.println()");

        return $r3;
    }

    private final void indented(kotlin.jvm.functions.Function0)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        kotlin.jvm.functions.Function0 r1;
        org.jetbrains.kotlin.utils.Printer $r2, $r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        $r2 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r0);

        virtualinvoke $r2.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r5 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r0);

        virtualinvoke $r5.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        return;
    }

    private final void bracedBlock(kotlin.jvm.functions.Function0)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0, r2;
        kotlin.jvm.functions.Function0 r1;
        org.jetbrains.kotlin.utils.Printer $r4, $r7;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,java.lang.Object)>(r0, "{");

        r2 = r0;

        $r4 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r2);

        virtualinvoke $r4.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        $r7 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r2);

        virtualinvoke $r7.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r0);

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,java.lang.Object)>(r0, "}");

        return;
    }

    private final void printJoin(java.util.List, java.lang.String)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        java.util.List $r1;
        java.lang.String r2;
        java.lang.Iterable $r3;
        java.util.Iterator r4;
        java.lang.Object r5;
        int i0, i1, $i2, $i3, $i4, i5;
        boolean z1, $z3;
        org.jetbrains.kotlin.ir.IrElement r6;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        $r3 = (java.lang.Iterable) $r1;

        i5 = 0;

        r4 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $i2 = i5;

        i5 = i5 + 1;

        i0 = $i2;

        z1 = 0;

        if i0 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        r6 = (org.jetbrains.kotlin.ir.IrElement) r5;

        i1 = i0;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>(r6);

        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        if i1 >= $i4 goto label3;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(r2);

     label3:
        goto label1;

     label4:
        return;
    }

    static void printJoin$default(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor, java.util.List, java.lang.String, int, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        java.util.List r1;
        int i0, $i1;
        java.lang.Object r2;
        java.lang.String r3;

        r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        r3 = "";

     label1:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>(r1, r3);

        return;
    }

    public void visitModuleFragment(org.jetbrains.kotlin.ir.declarations.IrModuleFragment)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrModuleFragment r1;
        java.util.List $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrModuleFragment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrModuleFragment: java.util.List getFiles()>();

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin$default(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,java.util.List,java.lang.String,int,java.lang.Object)>(r0, $r2, null, 1, null);

        return;
    }

    public void visitFile(org.jetbrains.kotlin.ir.declarations.IrFile)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrFile r1;
        java.util.List $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFile;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrFile: java.util.List getDeclarations()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>($r2, "\n");

        return;
    }

    public void visitValueParameter(org.jetbrains.kotlin.ir.declarations.IrValueParameter)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter r1;
        org.jetbrains.kotlin.ir.expressions.IrExpressionBody r2, r3, $r11;
        boolean z0, z1, $z3, $z4;
        org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer $r4;
        org.jetbrains.kotlin.name.Name $r5;
        org.jetbrains.kotlin.ir.types.IrType $r8;
        java.lang.String $r9;
        org.jetbrains.kotlin.ir.IrElement $r13;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrValueParameter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $z3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrValueParameter: boolean isCrossinline()>();

        if $z3 == 0 goto label1;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("crossinline ");

     label1:
        $z4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrValueParameter: boolean isNoinline()>();

        if $z4 == 0 goto label2;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("noinline ");

     label2:
        $r4 = (org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer) r1;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printAnnotations$default(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer,boolean,int,java.lang.Object)>(r0, $r4, 0, 1, null);

        $r5 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrValueParameter: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r5);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(": ");

        $r8 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrValueParameter: org.jetbrains.kotlin.ir.types.IrType getType()>();

        $r9 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderSrc(org.jetbrains.kotlin.ir.types.IrType)>($r8);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r9);

        $r11 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrValueParameter: org.jetbrains.kotlin.ir.expressions.IrExpressionBody getDefaultValue()>();

        if $r11 == null goto label3;

        r2 = $r11;

        z0 = 0;

        z1 = 0;

        r3 = r2;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" = ");

        $r13 = (org.jetbrains.kotlin.ir.IrElement) r3;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r13);

        goto label3;

     label3:
        return;
    }

    public void visitSimpleFunction(org.jetbrains.kotlin.ir.declarations.IrSimpleFunction)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction r1;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter r2, $r11, r55;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin $r3;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FAKE_OVERRIDE $r4;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10, z11, z12, $z13, z14, $z15, z16, z17;
        org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer $r5;
        java.util.List $r6, $r10, $r15, $r29;
        org.jetbrains.kotlin.descriptors.Visibility $r7, $r8, $r38, $r39, $r40;
        org.jetbrains.kotlin.name.Name $r12;
        org.jetbrains.kotlin.ir.types.IrType $r17, $r21, $r24;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r19;
        java.lang.String $r22, $r25, $r34, $r42, r48, r52;
        org.jetbrains.kotlin.descriptors.Modality $r32, $r50, $r51;
        java.util.Locale $r33, $r41, r49, r53;
        java.lang.NullPointerException $r37, $r45;
        java.util.Collection r47, r54;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin getOrigin()>();

        $r4 = <org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FAKE_OVERRIDE: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FAKE_OVERRIDE INSTANCE>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z1 == 0 goto label01;

        return;

     label01:
        $r5 = (org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer) r1;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printAnnotations(org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer,boolean)>($r5, 1);

        $r6 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: java.util.List getOverriddenSymbols()>();

        r47 = (java.util.Collection) $r6;

        z9 = 0;

        $z2 = interfaceinvoke r47.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label02;

        $z10 = 1;

        goto label03;

     label02:
        $z10 = 0;

     label03:
        if $z10 == 0 goto label04;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("override ");

        goto label08;

     label04:
        $r7 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.descriptors.Visibility getVisibility()>();

        $r8 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility PUBLIC>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, $r8);

        $z4 = $z3 ^ 1;

        if $z4 == 0 goto label06;

        $r38 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.descriptors.Visibility getVisibility()>();

        $r39 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility LOCAL>;

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r38, $r39);

        $z8 = $z7 ^ 1;

        if $z8 == 0 goto label06;

        $r40 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.descriptors.Visibility getVisibility()>();

        r48 = virtualinvoke $r40.<org.jetbrains.kotlin.descriptors.Visibility: java.lang.String toString()>();

        $r41 = <java.util.Locale: java.util.Locale ROOT>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r41, "Locale.ROOT");

        r49 = $r41;

        z11 = 0;

        if r48 != null goto label05;

        $r45 = new java.lang.NullPointerException;

        specialinvoke $r45.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r45;

     label05:
        $r42 = virtualinvoke r48.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(r49);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r42, "(this as java.lang.String).toLowerCase(locale)");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r42);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" ");

     label06:
        $r50 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.descriptors.Modality getModality()>();

        $r51 = <org.jetbrains.kotlin.descriptors.Modality: org.jetbrains.kotlin.descriptors.Modality FINAL>;

        if $r50 == $r51 goto label08;

        $r32 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.descriptors.Modality getModality()>();

        r52 = virtualinvoke $r32.<org.jetbrains.kotlin.descriptors.Modality: java.lang.String toString()>();

        $r33 = <java.util.Locale: java.util.Locale ROOT>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r33, "Locale.ROOT");

        r53 = $r33;

        z12 = 0;

        if r52 != null goto label07;

        $r37 = new java.lang.NullPointerException;

        specialinvoke $r37.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r37;

     label07:
        $r34 = virtualinvoke r52.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(r53);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r34, "(this as java.lang.String).toLowerCase(locale)");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r34);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" ");

     label08:
        $z13 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: boolean isSuspend()>();

        if $z13 == 0 goto label09;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("suspend ");

     label09:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("fun ");

        $r10 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: java.util.List getTypeParameters()>();

        r54 = (java.util.Collection) $r10;

        z14 = 0;

        $z5 = interfaceinvoke r54.<java.util.Collection: boolean isEmpty()>();

        if $z5 != 0 goto label10;

        $z15 = 1;

        goto label11;

     label10:
        $z15 = 0;

     label11:
        if $z15 == 0 goto label12;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<");

        $r29 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: java.util.List getTypeParameters()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>($r29, ", ");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("> ");

     label12:
        $r11 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.declarations.IrValueParameter getExtensionReceiverParameter()>();

        if $r11 == null goto label13;

        r55 = $r11;

        z16 = 0;

        z17 = 0;

        r2 = r55;

        $r24 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrValueParameter: org.jetbrains.kotlin.ir.types.IrType getType()>();

        $r25 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderSrc(org.jetbrains.kotlin.ir.types.IrType)>($r24);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r25);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(".");

        goto label13;

     label13:
        $r12 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r12);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("(");

        $r15 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: java.util.List getValueParameters()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>($r15, ", ");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(")");

        $r17 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.types.IrType getReturnType()>();

        $z6 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypePredicatesKt: boolean isUnit(org.jetbrains.kotlin.ir.types.IrType)>($r17);

        if $z6 != 0 goto label14;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(": ");

        $r21 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.types.IrType getReturnType()>();

        $r22 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderSrc(org.jetbrains.kotlin.ir.types.IrType)>($r21);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r22);

     label14:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" ");

        $r19 = (org.jetbrains.kotlin.ir.declarations.IrFunction) r1;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printBody(org.jetbrains.kotlin.ir.declarations.IrFunction)>($r19);

        return;
    }

    public final void printBody(org.jetbrains.kotlin.ir.declarations.IrFunction)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0, r3, r4;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r1;
        org.jetbrains.kotlin.ir.expressions.IrBody r2, $r5;
        java.util.List $r6;
        boolean $z3;
        org.jetbrains.kotlin.utils.Printer $r8, $r11;
        org.jetbrains.kotlin.ir.IrElement $r10;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFunction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$printBody");

        $r5 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrFunction: org.jetbrains.kotlin.ir.expressions.IrBody getBody()>();

        if $r5 == null goto label1;

        goto label2;

     label1:
        return;

     label2:
        r2 = $r5;

        $r6 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: java.util.List getStatements(org.jetbrains.kotlin.ir.expressions.IrBody)>(r2);

        $z3 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label3;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("{ }");

        goto label4;

     label3:
        r3 = r0;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,java.lang.Object)>(r3, "{");

        r4 = r3;

        $r8 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r4);

        virtualinvoke $r8.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        $r10 = (org.jetbrains.kotlin.ir.IrElement) r2;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r10);

        $r11 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r4);

        virtualinvoke $r11.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r3);

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,java.lang.Object)>(r3, "}");

     label4:
        return;
    }

    public void visitConstructor(org.jetbrains.kotlin.ir.declarations.IrConstructor)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrConstructor r1;
        java.util.List r2;
        java.util.Collection r3;
        boolean z0, $z1, $z2;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrConstructor;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("constructor");

        r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrConstructor: java.util.List getValueParameters()>();

        r3 = (java.util.Collection) r2;

        z0 = 0;

        $z1 = interfaceinvoke r3.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 == 0 goto label3;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("(");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>(r2, ", ");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(")");

     label3:
        $r5 = (org.jetbrains.kotlin.ir.declarations.IrFunction) r1;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printBody(org.jetbrains.kotlin.ir.declarations.IrFunction)>($r5);

        return;
    }

    public void visitCall(org.jetbrains.kotlin.ir.expressions.IrCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrCall r1, $r86;
        org.jetbrains.kotlin.ir.declarations.IrFunction r2, r90, $r127;
        java.lang.String r3, $r7, $r12, $r41, $r50, r91, r93, $r94, r98, $r100, r102, r103, r105, $r119, r130;
        org.jetbrains.kotlin.descriptors.FunctionDescriptor r4;
        boolean z0, z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59, $z60, $z61, $z62, $z63, $z64, $z65, $z66, $z67, $z68, $z69, $z70, $z71, $z72, $z73, $z74, z75, z76, $z77, z78, z79, z80, z81, z82, $z84, z85, z86, z87, $z88, $z89, z90, $z91;
        org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol $r5, $r87;
        org.jetbrains.kotlin.name.Name $r6, $r11, $r27, $r31, $r88;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $r8, $r14;
        org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression $r10, $r78;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r16, $r32, $r43, $r52, $r55, $r65, $r67, $r73, $r80, $r81, $r85, r89, $r104, $r106, $r107, $r108, r109, $r110, $r111, $r112, $r113, $r114, $r120, r121, r122, r123, r124, r125;
        org.jetbrains.kotlin.ir.IrElement $r17, $r20, $r22, $r34, $r35, $r36, $r44, $r45, $r53, $r54, $r57, $r61, $r63, $r68, $r69, $r70, $r72, $r76, $r77, $r79, $r92;
        org.jetbrains.kotlin.ir.symbols.IrPropertySymbol $r18;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner $r19;
        org.jetbrains.kotlin.ir.expressions.IrGetValue $r24, $r28;
        org.jetbrains.kotlin.ir.symbols.IrValueSymbol $r25, $r29;
        org.jetbrains.kotlin.ir.declarations.IrValueDeclaration $r26, $r30;
        java.lang.StringBuilder $r37, $r38, $r39, $r40, $r46, $r47, $r48, $r49, $r95, $r96, $r97, $r115, $r116, $r117, $r118;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        org.jetbrains.kotlin.ir.types.IrType $r82, $r83, $r84;
        java.lang.IllegalStateException $r99;
        java.lang.Throwable $r101;
        org.jetbrains.kotlin.ir.declarations.IrProperty $r128, r129;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrCall;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r5 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        r2 = interfaceinvoke $r5.<org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol: org.jetbrains.kotlin.ir.declarations.IrFunction getOwner()>();

        $r6 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrFunction: org.jetbrains.kotlin.name.Name getName()>();

        $r7 = virtualinvoke $r6.<org.jetbrains.kotlin.name.Name: java.lang.String asString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "function.name.asString()");

        r3 = $r7;

        r4 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrFunction: org.jetbrains.kotlin.descriptors.FunctionDescriptor getDescriptor()>();

        $z3 = interfaceinvoke r4.<org.jetbrains.kotlin.descriptors.FunctionDescriptor: boolean isOperator()>();

        if $z3 != 0 goto label001;

        $z73 = r2 instanceof org.jetbrains.kotlin.ir.descriptors.IrBuiltInOperator;

        if $z73 == 0 goto label002;

     label001:
        $z74 = 1;

        goto label003;

     label002:
        $z74 = 0;

     label003:
        z0 = $z74;

        z1 = interfaceinvoke r4.<org.jetbrains.kotlin.descriptors.FunctionDescriptor: boolean isInfix()>();

        if z0 == 0 goto label138;

        $z11 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, "not");

        if $z11 == 0 goto label008;

        $r85 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r85);

        r89 = $r85;

        $z68 = r89 instanceof org.jetbrains.kotlin.ir.expressions.IrCall;

        if $z68 == 0 goto label008;

        $r86 = (org.jetbrains.kotlin.ir.expressions.IrCall) r89;

        $r87 = interfaceinvoke $r86.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        r90 = interfaceinvoke $r87.<org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol: org.jetbrains.kotlin.ir.declarations.IrFunction getOwner()>();

        $z69 = r90 instanceof org.jetbrains.kotlin.ir.descriptors.IrBuiltInOperator;

        if $z69 == 0 goto label008;

        $r88 = interfaceinvoke r90.<org.jetbrains.kotlin.ir.declarations.IrFunction: org.jetbrains.kotlin.name.Name getName()>();

        r91 = virtualinvoke $r88.<org.jetbrains.kotlin.name.Name: java.lang.String asString()>();

        $i1 = virtualinvoke r91.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1295482945: goto label005;
            case 2135640: goto label006;
            case 2052352260: goto label004;
            default: goto label008;
        };

     label004:
        $z70 = virtualinvoke r91.<java.lang.String: boolean equals(java.lang.Object)>("EQEQEQ");

        if $z70 == 0 goto label008;

        goto label007;

     label005:
        $z72 = virtualinvoke r91.<java.lang.String: boolean equals(java.lang.Object)>("equals");

        if $z72 == 0 goto label008;

        goto label007;

     label006:
        $z71 = virtualinvoke r91.<java.lang.String: boolean equals(java.lang.Object)>("EQEQ");

        if $z71 == 0 goto label008;

     label007:
        z75 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean isInNotCall>;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean isInNotCall> = 1;

        $r92 = (org.jetbrains.kotlin.ir.IrElement) r89;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r92);

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean isInNotCall> = z75;

        return;

     label008:
        r93 = r3;

        $i2 = virtualinvoke r93.<java.lang.String: int hashCode()>();

        lookupswitch($i2)
        {
            case -1880078536: goto label013;
            case -1295482945: goto label036;
            case -1183693704: goto label015;
            case -567445985: goto label035;
            case -36910551: goto label031;
            case -6527019: goto label014;
            case -5062273: goto label017;
            case 99330: goto label012;
            case 99473: goto label018;
            case 102230: goto label024;
            case 104414: goto label027;
            case 109267: goto label020;
            case 112794: goto label025;
            case 113762: goto label029;
            case 2135640: goto label037;
            case 3318169: goto label033;
            case 3377907: goto label009;
            case 3444122: goto label034;
            case 103901296: goto label010;
            case 110364486: goto label021;
            case 283601914: goto label026;
            case 376847799: goto label011;
            case 533454633: goto label028;
            case 696759469: goto label032;
            case 977987736: goto label022;
            case 1182533742: goto label023;
            case 1571520736: goto label016;
            case 1642711306: goto label030;
            case 2052352260: goto label019;
            default: goto label066;
        };

     label009:
        $z49 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("next");

        if $z49 == 0 goto label066;

        goto label064;

     label010:
        $z47 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("minus");

        if $z47 == 0 goto label066;

        goto label043;

     label011:
        $z44 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("greaterOrEqual");

        if $z44 == 0 goto label066;

        goto label058;

     label012:
        $z59 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("dec");

        if $z59 == 0 goto label066;

        goto label054;

     label013:
        $z67 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("lessOrEqual");

        if $z67 == 0 goto label066;

        goto label057;

     label014:
        $z61 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("timesAssign");

        if $z61 == 0 goto label066;

        goto label050;

     label015:
        $z64 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("invoke");

        if $z64 == 0 goto label066;

        goto label063;

     label016:
        $z39 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("divAssign");

        if $z39 == 0 goto label066;

        goto label051;

     label017:
        $z60 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("minusAssign");

        if $z60 == 0 goto label066;

        goto label049;

     label018:
        $z58 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("div");

        if $z58 == 0 goto label066;

        goto label045;

     label019:
        $z12 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("EQEQEQ");

        if $z12 == 0 goto label066;

        goto label061;

     label020:
        $z55 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("not");

        if $z55 == 0 goto label066;

        goto label042;

     label021:
        $z46 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("times");

        if $z46 == 0 goto label066;

        goto label044;

     label022:
        $z41 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("rangeTo");

        if $z41 == 0 goto label066;

        goto label047;

     label023:
        $z40 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("iterator");

        if $z40 == 0 goto label066;

        goto label064;

     label024:
        $z57 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("get");

        if $z57 == 0 goto label066;

        goto label063;

     label025:
        $z54 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("rem");

        if $z54 == 0 goto label066;

        goto label046;

     label026:
        $z45 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("greater");

        if $z45 == 0 goto label066;

        goto label055;

     label027:
        $z56 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("inc");

        if $z56 == 0 goto label066;

        goto label053;

     label028:
        $z43 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("plusAssign");

        if $z43 == 0 goto label066;

        goto label048;

     label029:
        $z53 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z53 == 0 goto label066;

        goto label063;

     label030:
        $z38 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("CHECK_NOT_NULL");

        if $z38 == 0 goto label066;

        goto label065;

     label031:
        $z62 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("remAssign");

        if $z62 == 0 goto label066;

        goto label052;

     label032:
        $z42 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("hasNext");

        if $z42 == 0 goto label066;

        goto label064;

     label033:
        $z50 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("less");

        if $z50 == 0 goto label066;

        goto label056;

     label034:
        $z48 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("plus");

        if $z48 == 0 goto label066;

        goto label041;

     label035:
        $z63 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("contains");

        if $z63 == 0 goto label066;

        goto label038;

     label036:
        $z65 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("equals");

        if $z65 == 0 goto label066;

        goto label039;

     label037:
        $z51 = virtualinvoke r93.<java.lang.String: boolean equals(java.lang.Object)>("EQEQ");

        if $z51 == 0 goto label066;

        goto label059;

     label038:
        $r94 = "in";

        goto label067;

     label039:
        $z66 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean isInNotCall>;

        if $z66 == 0 goto label040;

        $r94 = "!=";

        goto label067;

     label040:
        $r94 = "==";

        goto label067;

     label041:
        $r94 = "+";

        goto label067;

     label042:
        $r94 = "!";

        goto label067;

     label043:
        $r94 = "-";

        goto label067;

     label044:
        $r94 = "*";

        goto label067;

     label045:
        $r94 = "/";

        goto label067;

     label046:
        $r94 = "%";

        goto label067;

     label047:
        $r94 = "..";

        goto label067;

     label048:
        $r94 = "+=";

        goto label067;

     label049:
        $r94 = "-=";

        goto label067;

     label050:
        $r94 = "*=";

        goto label067;

     label051:
        $r94 = "/=";

        goto label067;

     label052:
        $r94 = "%=";

        goto label067;

     label053:
        $r94 = "++";

        goto label067;

     label054:
        $r94 = "--";

        goto label067;

     label055:
        $r94 = ">";

        goto label067;

     label056:
        $r94 = "<";

        goto label067;

     label057:
        $r94 = "<=";

        goto label067;

     label058:
        $r94 = ">=";

        goto label067;

     label059:
        $z52 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean isInNotCall>;

        if $z52 == 0 goto label060;

        $r94 = "!=";

        goto label067;

     label060:
        $r94 = "==";

        goto label067;

     label061:
        $z13 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean isInNotCall>;

        if $z13 == 0 goto label062;

        $r94 = "!==";

        goto label067;

     label062:
        $r94 = "===";

        goto label067;

     label063:
        $r94 = "";

        goto label067;

     label064:
        $r94 = r3;

        goto label067;

     label065:
        $r94 = "!!";

        goto label067;

     label066:
        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled operator ");

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        z76 = 0;

        $r99 = new java.lang.IllegalStateException;

        $r100 = virtualinvoke r98.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r99.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r100);

        $r101 = (java.lang.Throwable) $r99;

        throw $r101;

     label067:
        r102 = $r94;

        r103 = r3;

        $i3 = virtualinvoke r103.<java.lang.String: int hashCode()>();

        lookupswitch($i3)
        {
            case -1295482945: goto label069;
            case 2135640: goto label070;
            case 2052352260: goto label068;
            default: goto label081;
        };

     label068:
        $z14 = virtualinvoke r103.<java.lang.String: boolean equals(java.lang.Object)>("EQEQEQ");

        if $z14 == 0 goto label081;

        goto label071;

     label069:
        $z37 = virtualinvoke r103.<java.lang.String: boolean equals(java.lang.Object)>("equals");

        if $z37 == 0 goto label081;

        goto label071;

     label070:
        $z36 = virtualinvoke r103.<java.lang.String: boolean equals(java.lang.Object)>("EQEQ");

        if $z36 == 0 goto label081;

     label071:
        $r104 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r104 == null goto label072;

        $r84 = interfaceinvoke $r104.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.types.IrType getType()>();

        if $r84 == null goto label072;

        $z35 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypePredicatesKt: boolean isInt(org.jetbrains.kotlin.ir.types.IrType)>($r84);

        if $z35 != 1 goto label074;

        goto label073;

     label072:
        goto label074;

     label073:
        $z77 = 1;

        goto label082;

     label074:
        $r80 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getExtensionReceiver()>();

        if $r80 == null goto label075;

        $r83 = interfaceinvoke $r80.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.types.IrType getType()>();

        if $r83 == null goto label075;

        $z34 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypePredicatesKt: boolean isInt(org.jetbrains.kotlin.ir.types.IrType)>($r83);

        if $z34 != 1 goto label077;

        goto label076;

     label075:
        goto label077;

     label076:
        $z77 = 1;

        goto label082;

     label077:
        $i0 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: int getValueArgumentsCount()>();

        if $i0 <= 0 goto label080;

        $r81 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(0);

        if $r81 == null goto label078;

        $r82 = interfaceinvoke $r81.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.types.IrType getType()>();

        if $r82 == null goto label078;

        $z33 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypePredicatesKt: boolean isInt(org.jetbrains.kotlin.ir.types.IrType)>($r82);

        if $z33 != 1 goto label080;

        goto label079;

     label078:
        goto label080;

     label079:
        $z77 = 1;

        goto label082;

     label080:
        $z77 = 0;

        goto label082;

     label081:
        $z77 = 0;

     label082:
        z78 = $z77;

        z79 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean printIntsAsBinary>;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean printIntsAsBinary> = z78;

        r105 = r3;

        $i4 = virtualinvoke r105.<java.lang.String: int hashCode()>();

        lookupswitch($i4)
        {
            case -1880078536: goto label088;
            case -1183693704: goto label089;
            case 99330: goto label085;
            case 102230: goto label096;
            case 104414: goto label100;
            case 109267: goto label093;
            case 113762: goto label087;
            case 2135640: goto label098;
            case 3318169: goto label091;
            case 3377907: goto label083;
            case 283601914: goto label099;
            case 376847799: goto label084;
            case 414819457: goto label097;
            case 696759469: goto label090;
            case 983305065: goto label095;
            case 1182533742: goto label094;
            case 1642711306: goto label086;
            case 2052352260: goto label092;
            default: goto label133;
        };

     label083:
        $z23 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("next");

        if $z23 == 0 goto label133;

        goto label129;

     label084:
        $z21 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("greaterOrEqual");

        if $z21 == 0 goto label133;

        goto label126;

     label085:
        $z30 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("dec");

        if $z30 == 0 goto label133;

        goto label105;

     label086:
        $z16 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("CHECK_NOT_NULL");

        if $z16 == 0 goto label133;

        goto label109;

     label087:
        $z26 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z26 == 0 goto label133;

        goto label120;

     label088:
        $z32 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("lessOrEqual");

        if $z32 == 0 goto label133;

        goto label126;

     label089:
        $z31 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("invoke");

        if $z31 == 0 goto label133;

        goto label111;

     label090:
        $z19 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("hasNext");

        if $z19 == 0 goto label133;

        goto label129;

     label091:
        $z24 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("less");

        if $z24 == 0 goto label133;

        goto label126;

     label092:
        $z15 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("EQEQEQ");

        if $z15 == 0 goto label133;

        goto label126;

     label093:
        $z27 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("not");

        if $z27 == 0 goto label133;

        goto label101;

     label094:
        $z17 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("iterator");

        if $z17 == 0 goto label133;

        goto label129;

     label095:
        $z18 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("unaryPlus");

        if $z18 == 0 goto label133;

        goto label101;

     label096:
        $z29 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("get");

        if $z29 == 0 goto label133;

        goto label115;

     label097:
        $z20 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("unaryMinus");

        if $z20 == 0 goto label133;

        goto label101;

     label098:
        $z25 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("EQEQ");

        if $z25 == 0 goto label133;

        goto label126;

     label099:
        $z22 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("greater");

        if $z22 == 0 goto label133;

        goto label126;

     label100:
        $z28 = virtualinvoke r105.<java.lang.String: boolean equals(java.lang.Object)>("inc");

        if $z28 == 0 goto label133;

        goto label105;

     label101:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(r102);

        $r106 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r106 == null goto label102;

        goto label103;

     label102:
        $r106 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getExtensionReceiver()>();

     label103:
        if $r106 == null goto label104;

        $r63 = (org.jetbrains.kotlin.ir.IrElement) $r106;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r63);

        goto label137;

     label104:
        goto label137;

     label105:
        $r107 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r107 == null goto label106;

        goto label107;

     label106:
        $r107 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getExtensionReceiver()>();

     label107:
        if $r107 == null goto label108;

        $r72 = (org.jetbrains.kotlin.ir.IrElement) $r107;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r72);

        goto label108;

     label108:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(r102);

        goto label137;

     label109:
        $r55 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(0);

        if $r55 == null goto label110;

        $r57 = (org.jetbrains.kotlin.ir.IrElement) $r55;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r57);

        goto label110;

     label110:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(r102);

        goto label137;

     label111:
        $r108 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r108 == null goto label112;

        goto label113;

     label112:
        $r108 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getExtensionReceiver()>();

     label113:
        if $r108 == null goto label114;

        $r79 = (org.jetbrains.kotlin.ir.IrElement) $r108;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r79);

        goto label114;

     label114:
        $r78 = (org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression) r1;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printArgumentList$default(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression,boolean,boolean,int,java.lang.Object)>(r0, $r78, 0, 0, 3, null);

        goto label137;

     label115:
        $r73 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r73 == null goto label116;

        $r77 = (org.jetbrains.kotlin.ir.IrElement) $r73;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r77);

        goto label116;

     label116:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("[");

        i5 = 0;

        i6 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: int getValueArgumentsCount()>();

     label117:
        if i5 >= i6 goto label119;

        r109 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(i5);

        if r109 == null goto label118;

        $r76 = (org.jetbrains.kotlin.ir.IrElement) r109;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r76);

        goto label118;

     label118:
        i5 = i5 + 1;

        goto label117;

     label119:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("]");

        goto label137;

     label120:
        $r110 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r110 == null goto label121;

        goto label122;

     label121:
        $r110 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getExtensionReceiver()>();

     label122:
        if $r110 == null goto label123;

        $r70 = (org.jetbrains.kotlin.ir.IrElement) $r110;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r70);

        goto label123;

     label123:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("[");

        $r65 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(0);

        if $r65 == null goto label124;

        $r69 = (org.jetbrains.kotlin.ir.IrElement) $r65;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r69);

        goto label124;

     label124:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("] = ");

        $r67 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(1);

        if $r67 == null goto label125;

        $r68 = (org.jetbrains.kotlin.ir.IrElement) $r67;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r68);

        goto label137;

     label125:
        goto label137;

     label126:
        $r111 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(0);

        if $r111 == null goto label127;

        $r54 = (org.jetbrains.kotlin.ir.IrElement) $r111;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r54);

        goto label127;

     label127:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r102);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r50);

        $r52 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(1);

        if $r52 == null goto label128;

        $r53 = (org.jetbrains.kotlin.ir.IrElement) $r52;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r53);

        goto label137;

     label128:
        goto label137;

     label129:
        $r112 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r112 == null goto label130;

        goto label131;

     label130:
        $r112 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getExtensionReceiver()>();

     label131:
        if $r112 == null goto label132;

        $r61 = (org.jetbrains.kotlin.ir.IrElement) $r112;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r61);

        goto label132;

     label132:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(".");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(r102);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("()");

        goto label137;

     label133:
        $r113 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r113 == null goto label134;

        goto label135;

     label134:
        $r113 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getExtensionReceiver()>();

     label135:
        if $r113 == null goto label136;

        $r45 = (org.jetbrains.kotlin.ir.IrElement) $r113;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r45);

        goto label136;

     label136:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r102);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r41);

        $r43 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(0);

        if $r43 == null goto label137;

        $r44 = (org.jetbrains.kotlin.ir.IrElement) $r43;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r44);

        goto label137;

     label137:
        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean printIntsAsBinary> = z79;

        return;

     label138:
        if z1 == 0 goto label144;

        z80 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean printIntsAsBinary>;

        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, "xor");

        if $z8 != 0 goto label139;

        $z9 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, "and");

        if $z9 != 0 goto label139;

        $z10 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r3, "or");

        if $z10 == 0 goto label140;

     label139:
        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean printIntsAsBinary> = 1;

     label140:
        $r114 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r114 == null goto label141;

        $r36 = (org.jetbrains.kotlin.ir.IrElement) $r114;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r36);

        goto label142;

     label141:
        $r32 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getExtensionReceiver()>();

        if $r32 == null goto label142;

        $r35 = (org.jetbrains.kotlin.ir.IrElement) $r32;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r35);

        goto label142;

     label142:
        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r119);

        $r120 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(0);

        if $r120 == null goto label143;

        $r34 = (org.jetbrains.kotlin.ir.IrElement) $r120;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r34);

        goto label143;

     label143:
        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean printIntsAsBinary> = z80;

        return;

     label144:
        r121 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        r122 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getExtensionReceiver()>();

        r123 = r121;

        z81 = 0;

        z82 = 0;

        r124 = r123;

        $z4 = r124 instanceof org.jetbrains.kotlin.ir.expressions.IrGetValue;

        if $z4 == 0 goto label145;

        $r28 = (org.jetbrains.kotlin.ir.expressions.IrGetValue) r124;

        $r29 = interfaceinvoke $r28.<org.jetbrains.kotlin.ir.expressions.IrGetValue: org.jetbrains.kotlin.ir.symbols.IrValueSymbol getSymbol()>();

        $r30 = interfaceinvoke $r29.<org.jetbrains.kotlin.ir.symbols.IrValueSymbol: org.jetbrains.kotlin.ir.declarations.IrValueDeclaration getOwner()>();

        $r31 = interfaceinvoke $r30.<org.jetbrains.kotlin.ir.declarations.IrValueDeclaration: org.jetbrains.kotlin.name.Name getName()>();

        $z7 = virtualinvoke $r31.<org.jetbrains.kotlin.name.Name: boolean isSpecial()>();

        if $z7 == 0 goto label145;

        $z84 = 1;

        goto label146;

     label145:
        $z84 = 0;

     label146:
        z85 = $z84;

        r125 = r122;

        z86 = 0;

        z87 = 0;

        $z88 = r125 instanceof org.jetbrains.kotlin.ir.expressions.IrGetValue;

        if $z88 == 0 goto label147;

        $r24 = (org.jetbrains.kotlin.ir.expressions.IrGetValue) r125;

        $r25 = interfaceinvoke $r24.<org.jetbrains.kotlin.ir.expressions.IrGetValue: org.jetbrains.kotlin.ir.symbols.IrValueSymbol getSymbol()>();

        $r26 = interfaceinvoke $r25.<org.jetbrains.kotlin.ir.symbols.IrValueSymbol: org.jetbrains.kotlin.ir.declarations.IrValueDeclaration getOwner()>();

        $r27 = interfaceinvoke $r26.<org.jetbrains.kotlin.ir.declarations.IrValueDeclaration: org.jetbrains.kotlin.name.Name getName()>();

        $z6 = virtualinvoke $r27.<org.jetbrains.kotlin.name.Name: boolean isSpecial()>();

        if $z6 == 0 goto label147;

        $z89 = 1;

        goto label148;

     label147:
        $z89 = 0;

     label148:
        z90 = $z89;

        if r121 == null goto label149;

        if z85 != 0 goto label149;

        $r22 = (org.jetbrains.kotlin.ir.IrElement) r121;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r22);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(".");

        goto label150;

     label149:
        if r122 == null goto label150;

        if z90 != 0 goto label150;

        $r20 = (org.jetbrains.kotlin.ir.IrElement) r122;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r20);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(".");

     label150:
        $r127 = r2;

        $z91 = r2 instanceof org.jetbrains.kotlin.ir.declarations.IrSimpleFunction;

        if $z91 != 0 goto label151;

        $r127 = null;

     label151:
        $r8 = (org.jetbrains.kotlin.ir.declarations.IrSimpleFunction) $r127;

        if $r8 == null goto label152;

        $r18 = interfaceinvoke $r8.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.symbols.IrPropertySymbol getCorrespondingPropertySymbol()>();

        if $r18 == null goto label152;

        $r19 = interfaceinvoke $r18.<org.jetbrains.kotlin.ir.symbols.IrPropertySymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getOwner()>();

        $r128 = (org.jetbrains.kotlin.ir.declarations.IrProperty) $r19;

        goto label153;

     label152:
        $r128 = null;

     label153:
        r129 = $r128;

        if r129 == null goto label155;

        $r11 = interfaceinvoke r129.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.name.Name getName()>();

        $r12 = virtualinvoke $r11.<org.jetbrains.kotlin.name.Name: java.lang.String asString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "prop.name.asString()");

        r130 = $r12;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(r130);

        $r14 = interfaceinvoke r129.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction getSetter()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r14);

        if $z5 == 0 goto label156;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" = ");

        $r16 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(0);

        if $r16 == null goto label154;

        $r17 = (org.jetbrains.kotlin.ir.IrElement) $r16;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r17);

        goto label156;

     label154:
        goto label156;

     label155:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(r3);

        $r10 = (org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression) r1;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printArgumentList$default(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression,boolean,boolean,int,java.lang.Object)>(r0, $r10, 0, 0, 3, null);

     label156:
        return;
    }

    private final void printAnnotations(org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer, boolean)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer $r1;
        boolean z0, z1, $z2, $z3;
        java.util.Collection r2;
        java.util.List $r3, $r4;
        java.lang.String $r8;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer;

        z0 := @parameter1: boolean;

        $r3 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer: java.util.List getAnnotations()>();

        r2 = (java.util.Collection) $r3;

        z1 = 0;

        $z2 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label6;

        $r4 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer: java.util.List getAnnotations()>();

        if z0 == 0 goto label3;

        $r8 = "\n";

        goto label4;

     label3:
        $r8 = " ";

     label4:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>($r4, $r8);

        if z0 == 0 goto label5;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        goto label6;

     label5:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" ");

     label6:
        return;
    }

    static void printAnnotations$default(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor, org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer, boolean, int, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer r1;
        int i0, $i1;
        java.lang.Object r2;
        boolean z0;

        r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = 0;

     label1:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printAnnotations(org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer,boolean)>(r1, z0);

        return;
    }

    private final void printArgumentList(org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression, boolean, boolean)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0, r63;
        org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression $r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z11, $z12, $z13, z14, z15, $z16, z17, $z18, z19, z20, $z21, $z22, z23, z24, z28, z29, z31, z32;
        java.util.List r2, $r12, $r36, $r48, $r52, r58;
        kotlin.jvm.internal.Ref$BooleanRef r3, $r8;
        org.jetbrains.kotlin.ir.expressions.IrExpression r4, r59, r60, $r72, r76, r77;
        java.lang.String r5, $r20, $r23, $r54, r73;
        java.util.ArrayList $r6, $r7;
        java.lang.Iterable $r10, $r11, $r34, $r35, r64, r68;
        org.jetbrains.kotlin.ir.IrElement $r15, $r24, $r42;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, i14, i15;
        java.lang.Object $r16, $r17, $r40, $r41, $r49, r66, $r70;
        androidx.compose.compiler.plugins.kotlin.KtxNameConventions $r18, $r21;
        org.jetbrains.kotlin.name.Name $r19, $r22, $r53;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1 $r26;
        kotlin.jvm.functions.Function0 $r27;
        org.jetbrains.kotlin.utils.Printer $r32, $r37;
        org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol $r46, $r50;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r47, $r51;
        org.jetbrains.kotlin.ir.expressions.IrBlock $r55;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin $r56;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$LAMBDA $r57;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter r61;
        java.util.Collection r62;
        java.util.Iterator r65, r69;
        kotlin.Pair $r67, r71;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z14 = 0;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r6;

        z15 = 0;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r58 = (java.util.List) $r7;

        r59 = (org.jetbrains.kotlin.ir.expressions.IrExpression) null;

        $r8 = new kotlin.jvm.internal.Ref$BooleanRef;

        specialinvoke $r8.<kotlin.jvm.internal.Ref$BooleanRef: void <init>()>();

        r3 = $r8;

        r3.<kotlin.jvm.internal.Ref$BooleanRef: boolean element> = z0;

        i8 = 0;

        i9 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression: int getValueArgumentsCount()>();

     label01:
        if i8 >= i9 goto label08;

        r60 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(i8);

        if r60 == null goto label06;

        $r46 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        $r47 = interfaceinvoke $r46.<org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol: org.jetbrains.kotlin.ir.declarations.IrFunction getOwner()>();

        $r48 = interfaceinvoke $r47.<org.jetbrains.kotlin.ir.declarations.IrFunction: java.util.List getValueParameters()>();

        $r49 = interfaceinvoke $r48.<java.util.List: java.lang.Object get(int)>(i8);

        r61 = (org.jetbrains.kotlin.ir.declarations.IrValueParameter) $r49;

        $r50 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        $r51 = interfaceinvoke $r50.<org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol: org.jetbrains.kotlin.ir.declarations.IrFunction getOwner()>();

        $r52 = interfaceinvoke $r51.<org.jetbrains.kotlin.ir.declarations.IrFunction: java.util.List getValueParameters()>();

        $i6 = interfaceinvoke $r52.<java.util.List: int size()>();

        $i7 = $i6 - 1;

        if i8 != $i7 goto label03;

        $z11 = r60 instanceof org.jetbrains.kotlin.ir.expressions.IrFunctionExpression;

        if $z11 != 0 goto label02;

        $z12 = r60 instanceof org.jetbrains.kotlin.ir.expressions.IrBlock;

        if $z12 == 0 goto label03;

        $r55 = (org.jetbrains.kotlin.ir.expressions.IrBlock) r60;

        $r56 = interfaceinvoke $r55.<org.jetbrains.kotlin.ir.expressions.IrBlock: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin getOrigin()>();

        $r57 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$LAMBDA: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$LAMBDA INSTANCE>;

        $z13 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r56, $r57);

        if $z13 == 0 goto label03;

     label02:
        $z16 = 1;

        goto label04;

     label03:
        $z16 = 0;

     label04:
        z17 = $z16;

        if z17 == 0 goto label05;

        r59 = r60;

        goto label07;

     label05:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r60);

        $r53 = interfaceinvoke r61.<org.jetbrains.kotlin.ir.declarations.IrValueParameter: org.jetbrains.kotlin.name.Name getName()>();

        $r54 = virtualinvoke $r53.<org.jetbrains.kotlin.name.Name: java.lang.String asString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r54, "param.name.asString()");

        interfaceinvoke r58.<java.util.List: boolean add(java.lang.Object)>($r54);

        goto label07;

     label06:
        r3.<kotlin.jvm.internal.Ref$BooleanRef: boolean element> = 1;

     label07:
        i8 = i8 + 1;

        goto label01;

     label08:
        $z2 = r3.<kotlin.jvm.internal.Ref$BooleanRef: boolean element>;

        if $z2 == 0 goto label09;

        if z1 != 0 goto label09;

        $z18 = 1;

        goto label10;

     label09:
        $z18 = 0;

     label10:
        z19 = $z18;

        r62 = (java.util.Collection) r2;

        z20 = 0;

        $z21 = interfaceinvoke r62.<java.util.Collection: boolean isEmpty()>();

        if $z21 != 0 goto label11;

        $z22 = 1;

        goto label12;

     label11:
        $z22 = 0;

     label12:
        if $z22 != 0 goto label13;

        if r59 != null goto label29;

     label13:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("(");

        if z19 == 0 goto label19;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        r63 = r0;

        z23 = 0;

        $r32 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r63);

        virtualinvoke $r32.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        z24 = 0;

        $r35 = (java.lang.Iterable) r2;

        $r34 = (java.lang.Iterable) r58;

        $r36 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Iterable)>($r35, $r34);

        r64 = (java.lang.Iterable) $r36;

        i10 = 0;

        r65 = interfaceinvoke r64.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z7 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label18;

        r66 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>();

        $i3 = i10;

        i10 = i10 + 1;

        i11 = $i3;

        if i11 >= 0 goto label15;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label15:
        $r67 = (kotlin.Pair) r66;

        i12 = i11;

        $r40 = virtualinvoke $r67.<kotlin.Pair: java.lang.Object component1()>();

        r4 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r40;

        $r41 = virtualinvoke $r67.<kotlin.Pair: java.lang.Object component2()>();

        r5 = (java.lang.String) $r41;

        $z8 = r3.<kotlin.jvm.internal.Ref$BooleanRef: boolean element>;

        if $z8 == 0 goto label16;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(r5);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" = ");

     label16:
        $r42 = (org.jetbrains.kotlin.ir.IrElement) r4;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r42);

        $i4 = interfaceinvoke r2.<java.util.List: int size()>();

        $i5 = $i4 - 1;

        if i12 >= $i5 goto label17;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>(", ");

     label17:
        goto label14;

     label18:
        $r37 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r63);

        virtualinvoke $r37.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        goto label28;

     label19:
        $r11 = (java.lang.Iterable) r2;

        $r10 = (java.lang.Iterable) r58;

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Iterable)>($r11, $r10);

        r68 = (java.lang.Iterable) $r12;

        z28 = 0;

        i13 = 0;

        r69 = interfaceinvoke r68.<java.lang.Iterable: java.util.Iterator iterator()>();

     label20:
        $z3 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label28;

        $r70 = interfaceinvoke r69.<java.util.Iterator: java.lang.Object next()>();

        $i0 = i13;

        i13 = i13 + 1;

        i14 = $i0;

        z29 = 0;

        if i14 >= 0 goto label21;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label21:
        r71 = (kotlin.Pair) $r70;

        i15 = i14;

        $r16 = virtualinvoke r71.<kotlin.Pair: java.lang.Object component1()>();

        $r72 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r16;

        $r17 = virtualinvoke r71.<kotlin.Pair: java.lang.Object component2()>();

        r73 = (java.lang.String) $r17;

        $z4 = r3.<kotlin.jvm.internal.Ref$BooleanRef: boolean element>;

        if $z4 == 0 goto label22;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(r73);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" = ");

     label22:
        $r18 = <androidx.compose.compiler.plugins.kotlin.KtxNameConventions: androidx.compose.compiler.plugins.kotlin.KtxNameConventions INSTANCE>;

        $r19 = virtualinvoke $r18.<androidx.compose.compiler.plugins.kotlin.KtxNameConventions: org.jetbrains.kotlin.name.Name getDEFAULT_PARAMETER()>();

        $r20 = virtualinvoke $r19.<org.jetbrains.kotlin.name.Name: java.lang.String getIdentifier()>();

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r73, $r20);

        if $z5 == 0 goto label23;

        goto label24;

     label23:
        $r21 = <androidx.compose.compiler.plugins.kotlin.KtxNameConventions: androidx.compose.compiler.plugins.kotlin.KtxNameConventions INSTANCE>;

        $r22 = virtualinvoke $r21.<androidx.compose.compiler.plugins.kotlin.KtxNameConventions: org.jetbrains.kotlin.name.Name getCHANGED_PARAMETER()>();

        $r23 = virtualinvoke $r22.<org.jetbrains.kotlin.name.Name: java.lang.String getIdentifier()>();

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r73, $r23);

        if $z6 == 0 goto label25;

     label24:
        $r26 = new androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1;

        specialinvoke $r26.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1: void <init>(org.jetbrains.kotlin.ir.expressions.IrExpression,androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,kotlin.jvm.internal.Ref$BooleanRef,java.util.List)>($r72, r0, r3, r2);

        $r27 = (kotlin.jvm.functions.Function0) $r26;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.Object withIntsAsBinaryLiterals(kotlin.jvm.functions.Function0)>($r27);

        goto label26;

     label25:
        $r24 = (org.jetbrains.kotlin.ir.IrElement) $r72;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r24);

     label26:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        if i15 >= $i2 goto label27;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(", ");

     label27:
        goto label20;

     label28:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(")");

     label29:
        if r59 == null goto label30;

        r76 = r59;

        z31 = 0;

        z32 = 0;

        r77 = r76;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" ");

        $r15 = (org.jetbrains.kotlin.ir.IrElement) r77;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r15);

        goto label30;

     label30:
        return;
    }

    static void printArgumentList$default(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor, org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression, boolean, boolean, int, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression r1;
        int i0, $i1, $i2;
        java.lang.Object r2;
        boolean z0, z1;

        r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        r2 := @parameter5: java.lang.Object;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        z0 = 0;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        z1 = 0;

     label2:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printArgumentList(org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression,boolean,boolean)>(r1, z0, z1);

        return;
    }

    public void visitFunctionExpression(org.jetbrains.kotlin.ir.expressions.IrFunctionExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrFunctionExpression r1;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $r2;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrFunctionExpression;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrFunctionExpression: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction getFunction()>();

        $r3 = (org.jetbrains.kotlin.ir.declarations.IrFunction) $r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printAsLambda(org.jetbrains.kotlin.ir.declarations.IrFunction)>($r3);

        return;
    }

    public final void printAsLambda(org.jetbrains.kotlin.ir.declarations.IrFunction)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0, r16;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r1;
        java.util.List r2;
        boolean $z1, $z3;
        org.jetbrains.kotlin.utils.Printer $r5, $r8;
        org.jetbrains.kotlin.ir.expressions.IrBody $r7;
        org.jetbrains.kotlin.ir.IrElement $r12;
        java.util.Collection r15;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFunction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$printAsLambda");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("{");

        r2 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrFunction: java.util.List getValueParameters()>();

        r15 = (java.util.Collection) r2;

        $z1 = interfaceinvoke r15.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        if $z3 == 0 goto label3;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" ");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>(r2, ", ");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>(" ->");

        goto label4;

     label3:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

     label4:
        r16 = r0;

        $r5 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r16);

        virtualinvoke $r5.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        $r7 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrFunction: org.jetbrains.kotlin.ir.expressions.IrBody getBody()>();

        if $r7 == null goto label5;

        $r12 = (org.jetbrains.kotlin.ir.IrElement) $r7;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r12);

        goto label5;

     label5:
        $r8 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r16);

        virtualinvoke $r8.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("}");

        return;
    }

    public void visitTypeOperator(org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall r1;
        java.lang.String r2, $r16;
        boolean z0;
        org.jetbrains.kotlin.ir.expressions.IrTypeOperator $r3, $r13;
        int[] $r4;
        int $i0, $i1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r5, $r7, $r9;
        org.jetbrains.kotlin.ir.IrElement $r6, $r8, $r10;
        java.lang.StringBuilder $r11, $r12, $r14;
        java.lang.IllegalStateException $r15;
        java.lang.Throwable $r17;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall: org.jetbrains.kotlin.ir.expressions.IrTypeOperator getOperator()>();

        $r4 = <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke $r3.<org.jetbrains.kotlin.ir.expressions.IrTypeOperator: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r9 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getArgument()>();

        $r10 = (org.jetbrains.kotlin.ir.IrElement) $r9;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r10);

        goto label5;

     label2:
        $r7 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getArgument()>();

        $r8 = (org.jetbrains.kotlin.ir.IrElement) $r7;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r8);

        goto label5;

     label3:
        $r5 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getArgument()>();

        $r6 = (org.jetbrains.kotlin.ir.IrElement) $r5;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r6);

        goto label5;

     label4:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type operator: ");

        $r13 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall: org.jetbrains.kotlin.ir.expressions.IrTypeOperator getOperator()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        z0 = 0;

        $r15 = new java.lang.IllegalStateException;

        $r16 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        $r17 = (java.lang.Throwable) $r15;

        throw $r17;

     label5:
        return;
    }

    public void visitComposite(org.jetbrains.kotlin.ir.expressions.IrComposite)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrComposite r1;
        java.util.List $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrComposite;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrComposite: java.util.List getStatements()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>($r2, "\n");

        return;
    }

    public void visitDoWhileLoop(org.jetbrains.kotlin.ir.expressions.IrDoWhileLoop)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0, r2;
        org.jetbrains.kotlin.ir.expressions.IrDoWhileLoop r1;
        org.jetbrains.kotlin.utils.Printer $r4, $r8;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r6, $r11;
        org.jetbrains.kotlin.ir.IrElement $r12, $r14;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDoWhileLoop;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loop");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("do {");

        r2 = r0;

        $r4 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r2);

        virtualinvoke $r4.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        $r6 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrDoWhileLoop: org.jetbrains.kotlin.ir.expressions.IrExpression getBody()>();

        if $r6 == null goto label1;

        $r14 = (org.jetbrains.kotlin.ir.IrElement) $r6;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r14);

        goto label1;

     label1:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        $r8 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r2);

        virtualinvoke $r8.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("} while (");

        $r11 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrDoWhileLoop: org.jetbrains.kotlin.ir.expressions.IrExpression getCondition()>();

        $r12 = (org.jetbrains.kotlin.ir.IrElement) $r11;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r12);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>(")");

        return;
    }

    public void visitConstructorCall(org.jetbrains.kotlin.ir.expressions.IrConstructorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall r1;
        org.jetbrains.kotlin.descriptors.ClassDescriptor r2, $r7;
        org.jetbrains.kotlin.name.Name r3, $r8;
        boolean z0, z1, z2, $z4, z5, z6;
        org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol $r4, $r9;
        org.jetbrains.kotlin.descriptors.FunctionDescriptor $r5, $r10;
        org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor $r6;
        org.jetbrains.kotlin.descriptors.DeclarationDescriptor $r11;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r12, r18, r19, $r20;
        org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression $r14;
        org.jetbrains.kotlin.ir.IrElement $r15;
        int i0, i1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrConstructorCall;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol getSymbol()>();

        $r5 = interfaceinvoke $r4.<org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol: org.jetbrains.kotlin.descriptors.FunctionDescriptor getDescriptor()>();

        $r6 = (org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor) $r5;

        $r7 = interfaceinvoke $r6.<org.jetbrains.kotlin.descriptors.ClassConstructorDescriptor: org.jetbrains.kotlin.descriptors.ClassDescriptor getConstructedClass()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "expression.symbol.descriptor.constructedClass");

        r2 = $r7;

        $r8 = interfaceinvoke r2.<org.jetbrains.kotlin.descriptors.ClassDescriptor: org.jetbrains.kotlin.name.Name getName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r8, "constructedClass.name");

        r3 = $r8;

        $r9 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol getSymbol()>();

        $r10 = interfaceinvoke $r9.<org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol: org.jetbrains.kotlin.descriptors.FunctionDescriptor getDescriptor()>();

        $r11 = (org.jetbrains.kotlin.descriptors.DeclarationDescriptor) $r10;

        z0 = staticinvoke <org.jetbrains.kotlin.resolve.descriptorUtil.DescriptorUtilsKt: boolean isAnnotationConstructor(org.jetbrains.kotlin.descriptors.DeclarationDescriptor)>($r11);

        if z0 == 0 goto label1;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("@");

     label1:
        $r12 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getDispatchReceiver()>();

        if $r12 == null goto label2;

        r18 = $r12;

        z1 = 0;

        z2 = 0;

        r19 = r18;

        $r15 = (org.jetbrains.kotlin.ir.IrElement) r19;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r15);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(".");

        goto label2;

     label2:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(r3);

        if z0 != 0 goto label3;

        $z4 = 1;

        goto label7;

     label3:
        z5 = 0;

        i0 = 0;

        i1 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: int getValueArgumentsCount()>();

     label4:
        if i0 >= i1 goto label6;

        $r20 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(i0);

        if $r20 == null goto label5;

        z5 = 1;

        goto label6;

     label5:
        i0 = i0 + 1;

        goto label4;

     label6:
        $z4 = z5;

     label7:
        z6 = $z4;

        if z6 == 0 goto label8;

        $r14 = (org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression) r1;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printArgumentList(org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression,boolean,boolean)>($r14, z0, z0);

     label8:
        return;
    }

    public void visitStringConcatenation(org.jetbrains.kotlin.ir.expressions.IrStringConcatenation)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrStringConcatenation r1;
        java.util.List r2;
        java.util.Iterator r3;
        org.jetbrains.kotlin.ir.expressions.IrExpression r4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r7, $r17;
        org.jetbrains.kotlin.ir.IrElement $r9, $r12;
        org.jetbrains.kotlin.ir.expressions.IrConst $r13, $r16;
        org.jetbrains.kotlin.ir.expressions.IrConstKind $r14;
        org.jetbrains.kotlin.ir.expressions.IrConstKind$String $r15;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrStringConcatenation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrStringConcatenation: java.util.List getArguments()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("\"");

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.jetbrains.kotlin.ir.expressions.IrExpression) $r7;

        $z1 = r4 instanceof org.jetbrains.kotlin.ir.expressions.IrConst;

        if $z1 == 0 goto label2;

        $r13 = (org.jetbrains.kotlin.ir.expressions.IrConst) r4;

        $r14 = interfaceinvoke $r13.<org.jetbrains.kotlin.ir.expressions.IrConst: org.jetbrains.kotlin.ir.expressions.IrConstKind getKind()>();

        $r15 = <org.jetbrains.kotlin.ir.expressions.IrConstKind$String: org.jetbrains.kotlin.ir.expressions.IrConstKind$String INSTANCE>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r14, $r15);

        if $z3 == 0 goto label2;

        $r16 = (org.jetbrains.kotlin.ir.expressions.IrConst) r4;

        $r17 = interfaceinvoke $r16.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r17);

        goto label4;

     label2:
        $z2 = r4 instanceof org.jetbrains.kotlin.ir.expressions.IrGetValue;

        if $z2 == 0 goto label3;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("$");

        $r12 = (org.jetbrains.kotlin.ir.IrElement) r4;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r12);

        goto label4;

     label3:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("${");

        $r9 = (org.jetbrains.kotlin.ir.IrElement) r4;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r9);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("}");

     label4:
        goto label1;

     label5:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("\"");

        return;
    }

    public void visitVararg(org.jetbrains.kotlin.ir.expressions.IrVararg)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrVararg r1;
        java.lang.Iterable $r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        int i0, i1, $i2, i3, $i4, $i5;
        boolean z1, $z3, $z4, $z5;
        org.jetbrains.kotlin.ir.expressions.IrVarargElement r5;
        java.util.List $r6, $r13;
        org.jetbrains.kotlin.ir.IrElement $r8, $r12;
        org.jetbrains.kotlin.ir.expressions.IrSpreadElement $r10;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r11;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrVararg;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r6 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrVararg: java.util.List getElements()>();

        $r2 = (java.lang.Iterable) $r6;

        i3 = 0;

        r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $i2 = i3;

        i3 = i3 + 1;

        i0 = $i2;

        z1 = 0;

        if i0 >= 0 goto label2;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label2:
        r5 = (org.jetbrains.kotlin.ir.expressions.IrVarargElement) r4;

        i1 = i0;

        $z4 = r5 instanceof org.jetbrains.kotlin.ir.expressions.IrSpreadElement;

        if $z4 == 0 goto label3;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("*");

        $r10 = (org.jetbrains.kotlin.ir.expressions.IrSpreadElement) r5;

        $r11 = interfaceinvoke $r10.<org.jetbrains.kotlin.ir.expressions.IrSpreadElement: org.jetbrains.kotlin.ir.expressions.IrExpression getExpression()>();

        $r12 = (org.jetbrains.kotlin.ir.IrElement) $r11;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r12);

        goto label4;

     label3:
        $z5 = r5 instanceof org.jetbrains.kotlin.ir.expressions.IrExpression;

        if $z5 == 0 goto label4;

        $r8 = (org.jetbrains.kotlin.ir.IrElement) r5;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r8);

     label4:
        $r13 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrVararg: java.util.List getElements()>();

        $i4 = interfaceinvoke $r13.<java.util.List: int size()>();

        $i5 = $i4 - 1;

        if i1 >= $i5 goto label5;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(", ");

     label5:
        goto label1;

     label6:
        return;
    }

    public void visitWhen(org.jetbrains.kotlin.ir.expressions.IrWhen)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0, r95, r96, r104;
        org.jetbrains.kotlin.ir.expressions.IrWhen r1;
        boolean z0, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z17, $z18, $z20, z21, $z23, z24, $z26, z27, z30, z31, z32, z35;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin $r2, $r4, $r6;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$IF $r3;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$OROR $r5;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$ANDAND $r7;
        org.jetbrains.kotlin.utils.Printer $r10, $r13, $r23, $r27, $r39, $r44;
        java.util.List $r12, $r32, $r34, $r62, $r65, $r71, $r74, $r88;
        org.jetbrains.kotlin.ir.expressions.IrConst $r17, $r57;
        java.lang.Boolean $r18, $r58;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r19, $r25, $r36, $r41, $r46, $r53, $r59, $r60, r80, r81, r82, r83, $r93, $r102;
        org.jetbrains.kotlin.ir.IrElement $r20, $r26, $r37, $r42, $r47, $r54, $r68, $r70, $r77, $r79;
        int $i0, $i1, $i2, i3, i5;
        java.util.Collection $r61;
        java.lang.Object $r63, $r66, $r72, $r75, r86, r91, $r94, r100, $r103;
        org.jetbrains.kotlin.ir.expressions.IrBranch $r64, $r67, $r73, $r76, r87, r92, r101;
        java.lang.Iterable r84, r89, r98;
        java.util.Iterator r85, r90, r99;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrWhen;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin getOrigin()>();

        $r3 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$IF: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$IF INSTANCE>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z3 != 0 goto label01;

        $z14 = r1 instanceof org.jetbrains.kotlin.ir.expressions.impl.IrIfThenElseImpl;

        if $z14 == 0 goto label02;

     label01:
        $z15 = 1;

        goto label03;

     label02:
        $z15 = 0;

     label03:
        z0 = $z15;

        $r4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin getOrigin()>();

        $r5 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$OROR: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$OROR INSTANCE>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z4 == 0 goto label04;

        $r71 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: java.util.List getBranches()>();

        $r72 = interfaceinvoke $r71.<java.util.List: java.lang.Object get(int)>(0);

        $r73 = (org.jetbrains.kotlin.ir.expressions.IrBranch) $r72;

        r80 = interfaceinvoke $r73.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getCondition()>();

        $r74 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: java.util.List getBranches()>();

        $r75 = interfaceinvoke $r74.<java.util.List: java.lang.Object get(int)>(1);

        $r76 = (org.jetbrains.kotlin.ir.expressions.IrBranch) $r75;

        r81 = interfaceinvoke $r76.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getResult()>();

        $r77 = (org.jetbrains.kotlin.ir.IrElement) r80;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r77);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" || ");

        $r79 = (org.jetbrains.kotlin.ir.IrElement) r81;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r79);

        goto label39;

     label04:
        $r6 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin getOrigin()>();

        $r7 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$ANDAND: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$ANDAND INSTANCE>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z5 == 0 goto label05;

        $r62 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: java.util.List getBranches()>();

        $r63 = interfaceinvoke $r62.<java.util.List: java.lang.Object get(int)>(0);

        $r64 = (org.jetbrains.kotlin.ir.expressions.IrBranch) $r63;

        r82 = interfaceinvoke $r64.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getCondition()>();

        $r65 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: java.util.List getBranches()>();

        $r66 = interfaceinvoke $r65.<java.util.List: java.lang.Object get(int)>(0);

        $r67 = (org.jetbrains.kotlin.ir.expressions.IrBranch) $r66;

        r83 = interfaceinvoke $r67.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getResult()>();

        $r68 = (org.jetbrains.kotlin.ir.IrElement) r82;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r68);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" && ");

        $r70 = (org.jetbrains.kotlin.ir.IrElement) r83;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r70);

        goto label39;

     label05:
        if z0 == 0 goto label31;

        $r32 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: java.util.List getBranches()>();

        r84 = (java.lang.Iterable) $r32;

        $z8 = r84 instanceof java.util.Collection;

        if $z8 == 0 goto label06;

        $r61 = (java.util.Collection) r84;

        $z13 = interfaceinvoke $r61.<java.util.Collection: boolean isEmpty()>();

        if $z13 == 0 goto label06;

        $z17 = 1;

        goto label12;

     label06:
        r85 = interfaceinvoke r84.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z18 = interfaceinvoke r85.<java.util.Iterator: boolean hasNext()>();

        if $z18 == 0 goto label11;

        r86 = interfaceinvoke r85.<java.util.Iterator: java.lang.Object next()>();

        r87 = (org.jetbrains.kotlin.ir.expressions.IrBranch) r86;

        $r59 = interfaceinvoke r87.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getResult()>();

        $z11 = $r59 instanceof org.jetbrains.kotlin.ir.expressions.IrConst;

        if $z11 != 0 goto label08;

        $r60 = interfaceinvoke r87.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getResult()>();

        $z12 = $r60 instanceof org.jetbrains.kotlin.ir.expressions.IrGetValue;

        if $z12 == 0 goto label09;

     label08:
        $z20 = 1;

        goto label10;

     label09:
        $z20 = 0;

     label10:
        if $z20 != 0 goto label07;

        $z17 = 0;

        goto label12;

     label11:
        $z17 = 1;

     label12:
        z21 = $z17;

        $r88 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: java.util.List getBranches()>();

        r89 = (java.lang.Iterable) $r88;

        i3 = 0;

        r90 = interfaceinvoke r89.<java.lang.Iterable: java.util.Iterator iterator()>();

     label13:
        $z23 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>();

        if $z23 == 0 goto label30;

        r91 = interfaceinvoke r90.<java.util.Iterator: java.lang.Object next()>();

        $i0 = i3;

        i3 = i3 + 1;

        z24 = 0;

        if $i0 >= 0 goto label14;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label14:
        r92 = (org.jetbrains.kotlin.ir.expressions.IrBranch) r91;

        i5 = $i0;

        $r34 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: java.util.List getBranches()>();

        $i1 = interfaceinvoke $r34.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        if i5 != $i2 goto label18;

        $r93 = interfaceinvoke r92.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getCondition()>();

        $z9 = $r93 instanceof org.jetbrains.kotlin.ir.expressions.IrConst;

        if $z9 != 0 goto label15;

        $r93 = null;

     label15:
        $r57 = (org.jetbrains.kotlin.ir.expressions.IrConst) $r93;

        if $r57 == null goto label16;

        $r94 = interfaceinvoke $r57.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        goto label17;

     label16:
        $r94 = null;

     label17:
        $r58 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $z10 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r94, $r58);

        if $z10 == 0 goto label18;

        $z26 = 1;

        goto label19;

     label18:
        $z26 = 0;

     label19:
        z27 = $z26;

        if i5 != 0 goto label21;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("if (");

        $r53 = interfaceinvoke r92.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getCondition()>();

        $r54 = (org.jetbrains.kotlin.ir.IrElement) $r53;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r54);

        if z21 == 0 goto label20;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(") ");

        goto label27;

     label20:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>(") {");

        goto label27;

     label21:
        if z27 == 0 goto label23;

        if z21 == 0 goto label22;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" else ");

        goto label27;

     label22:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("} else {");

        goto label27;

     label23:
        if z21 == 0 goto label24;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" else if (");

        goto label25;

     label24:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("} else if (");

     label25:
        $r36 = interfaceinvoke r92.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getCondition()>();

        $r37 = (org.jetbrains.kotlin.ir.IrElement) $r36;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r37);

        if z21 == 0 goto label26;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(") ");

        goto label27;

     label26:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>(") {");

     label27:
        if z21 == 0 goto label28;

        $r46 = interfaceinvoke r92.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getResult()>();

        $r47 = (org.jetbrains.kotlin.ir.IrElement) $r46;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r47);

        goto label29;

     label28:
        r95 = r0;

        $r39 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r95);

        virtualinvoke $r39.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        $r41 = interfaceinvoke r92.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getResult()>();

        $r42 = (org.jetbrains.kotlin.ir.IrElement) $r41;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r42);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        $r44 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r95);

        virtualinvoke $r44.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

     label29:
        goto label13;

     label30:
        if z21 != 0 goto label39;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("}");

        goto label39;

     label31:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("when ");

        r96 = r0;

        z30 = 0;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,java.lang.Object)>(r96, "{");

        z31 = 0;

        $r10 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r96);

        virtualinvoke $r10.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        z32 = 0;

        $r12 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhen: java.util.List getBranches()>();

        r98 = (java.lang.Iterable) $r12;

        r99 = interfaceinvoke r98.<java.lang.Iterable: java.util.Iterator iterator()>();

     label32:
        $z6 = interfaceinvoke r99.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label38;

        r100 = interfaceinvoke r99.<java.util.Iterator: java.lang.Object next()>();

        r101 = (org.jetbrains.kotlin.ir.expressions.IrBranch) r100;

        $r102 = interfaceinvoke r101.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getCondition()>();

        $z7 = $r102 instanceof org.jetbrains.kotlin.ir.expressions.IrConst;

        if $z7 != 0 goto label33;

        $r102 = null;

     label33:
        $r17 = (org.jetbrains.kotlin.ir.expressions.IrConst) $r102;

        if $r17 == null goto label34;

        $r103 = interfaceinvoke $r17.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        goto label35;

     label34:
        $r103 = null;

     label35:
        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        z35 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r103, $r18);

        if z35 == 0 goto label36;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("else");

        goto label37;

     label36:
        $r19 = interfaceinvoke r101.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getCondition()>();

        $r20 = (org.jetbrains.kotlin.ir.IrElement) $r19;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r20);

     label37:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" -> ");

        r104 = r0;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,java.lang.Object)>(r104, "{");

        $r23 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r104);

        virtualinvoke $r23.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        $r25 = interfaceinvoke r101.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getResult()>();

        $r26 = (org.jetbrains.kotlin.ir.IrElement) $r25;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r26);

        $r27 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r104);

        virtualinvoke $r27.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r104);

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,java.lang.Object)>(r104, "}");

        goto label32;

     label38:
        $r13 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r96);

        virtualinvoke $r13.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r96);

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,java.lang.Object)>(r96, "}");

     label39:
        return;
    }

    public void visitWhileLoop(org.jetbrains.kotlin.ir.expressions.IrWhileLoop)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0, r2;
        org.jetbrains.kotlin.ir.expressions.IrWhileLoop r1;
        java.lang.String $r3, $r16;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r5, $r10;
        org.jetbrains.kotlin.ir.IrElement $r6, $r15;
        org.jetbrains.kotlin.utils.Printer $r8, $r12;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrWhileLoop;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loop");

        $r3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhileLoop: java.lang.String getLabel()>();

        if $r3 == null goto label1;

        $r16 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhileLoop: java.lang.String getLabel()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r16);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("@");

     label1:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("while (");

        $r5 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhileLoop: org.jetbrains.kotlin.ir.expressions.IrExpression getCondition()>();

        $r6 = (org.jetbrains.kotlin.ir.IrElement) $r5;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r6);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>(") {");

        r2 = r0;

        $r8 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r2);

        virtualinvoke $r8.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        $r10 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrWhileLoop: org.jetbrains.kotlin.ir.expressions.IrExpression getBody()>();

        if $r10 == null goto label2;

        $r15 = (org.jetbrains.kotlin.ir.IrElement) $r10;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r15);

        goto label2;

     label2:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        $r12 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r2);

        virtualinvoke $r12.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("}");

        return;
    }

    public void visitReturn(org.jetbrains.kotlin.ir.expressions.IrReturn)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrReturn r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression r2;
        org.jetbrains.kotlin.descriptors.FunctionDescriptor $r3;
        org.jetbrains.kotlin.name.Name $r4;
        java.lang.String $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jetbrains.kotlin.ir.types.IrType $r6, $r8;
        org.jetbrains.kotlin.ir.IrElement $r7, $r9;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrReturn;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrReturn: org.jetbrains.kotlin.ir.expressions.IrExpression getValue()>();

        $r3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrReturn: org.jetbrains.kotlin.descriptors.FunctionDescriptor getReturnTarget()>();

        $r4 = interfaceinvoke $r3.<org.jetbrains.kotlin.descriptors.FunctionDescriptor: org.jetbrains.kotlin.name.Name getName()>();

        $r5 = virtualinvoke $r4.<org.jetbrains.kotlin.name.Name: java.lang.String asString()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, "<anonymous>");

        $z1 = $z0 ^ 1;

        if $z1 == 0 goto label1;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("return ");

     label1:
        $r6 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrReturn: org.jetbrains.kotlin.ir.types.IrType getType()>();

        $z2 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypePredicatesKt: boolean isUnit(org.jetbrains.kotlin.ir.types.IrType)>($r6);

        if $z2 != 0 goto label2;

        $r8 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.expressions.IrExpression: org.jetbrains.kotlin.ir.types.IrType getType()>();

        $z4 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypePredicatesKt: boolean isUnit(org.jetbrains.kotlin.ir.types.IrType)>($r8);

        if $z4 == 0 goto label4;

     label2:
        $z3 = r2 instanceof org.jetbrains.kotlin.ir.expressions.IrGetObjectValue;

        if $z3 == 0 goto label3;

        return;

     label3:
        $r7 = (org.jetbrains.kotlin.ir.IrElement) r2;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r7);

        goto label5;

     label4:
        $r9 = (org.jetbrains.kotlin.ir.IrElement) r2;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r9);

     label5:
        return;
    }

    public void visitBlock(org.jetbrains.kotlin.ir.expressions.IrBlock)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBlock r1;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin r2;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$POSTFIX_INCR $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$POSTFIX_DECR $r4;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$LAMBDA $r5;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$OBJECT_LITERAL $r6;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$SAFE_CALL $r7;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP $r8;
        java.util.List $r9, $r10, $r11, $r13, $r15, $r26, $r29, $r32, $r35, $r44;
        java.lang.Object $r12, $r14, $r16, $r30, $r33, $r36, $r45;
        org.jetbrains.kotlin.ir.expressions.IrBranch $r17;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r18, $r37, $r46, r55, r58, $r63;
        org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol $r20;
        org.jetbrains.kotlin.descriptors.FunctionDescriptor $r21;
        org.jetbrains.kotlin.name.Name $r22;
        org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression $r24;
        org.jetbrains.kotlin.ir.IrElement $r25, $r41, $r50;
        java.lang.NullPointerException $r27, $r28, $r31, $r34, $r43, $r52;
        java.lang.IllegalStateException $r38, $r47;
        java.lang.String $r39, $r48, r54, r57;
        java.lang.Throwable $r40, $r49;
        org.jetbrains.kotlin.ir.declarations.IrVariable r53, r56, r61;
        org.jetbrains.kotlin.ir.declarations.IrFunction r59;
        org.jetbrains.kotlin.ir.declarations.IrClass r60;
        org.jetbrains.kotlin.ir.expressions.IrWhen r62;
        org.jetbrains.kotlin.ir.expressions.IrCall r64;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBlock;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlock: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin getOrigin()>();

        $r3 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$POSTFIX_INCR: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$POSTFIX_INCR INSTANCE>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r3);

        if $z0 == 0 goto label04;

        $r44 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlock: java.util.List getStatements()>();

        $r45 = interfaceinvoke $r44.<java.util.List: java.lang.Object get(int)>(0);

        if $r45 != null goto label01;

        $r52 = new java.lang.NullPointerException;

        specialinvoke $r52.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type org.jetbrains.kotlin.ir.declarations.IrVariable");

        throw $r52;

     label01:
        r53 = (org.jetbrains.kotlin.ir.declarations.IrVariable) $r45;

        $r46 = interfaceinvoke r53.<org.jetbrains.kotlin.ir.declarations.IrVariable: org.jetbrains.kotlin.ir.expressions.IrExpression getInitializer()>();

        if $r46 == null goto label02;

        goto label03;

     label02:
        r54 = "Expected initializer";

        z7 = 0;

        $r47 = new java.lang.IllegalStateException;

        $r48 = virtualinvoke r54.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r47.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r48);

        $r49 = (java.lang.Throwable) $r47;

        throw $r49;

     label03:
        r55 = $r46;

        $r50 = (org.jetbrains.kotlin.ir.IrElement) r55;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r50);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("++");

        goto label20;

     label04:
        $r4 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$POSTFIX_DECR: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$POSTFIX_DECR INSTANCE>;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $z1 == 0 goto label08;

        $r35 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlock: java.util.List getStatements()>();

        $r36 = interfaceinvoke $r35.<java.util.List: java.lang.Object get(int)>(0);

        if $r36 != null goto label05;

        $r43 = new java.lang.NullPointerException;

        specialinvoke $r43.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type org.jetbrains.kotlin.ir.declarations.IrVariable");

        throw $r43;

     label05:
        r56 = (org.jetbrains.kotlin.ir.declarations.IrVariable) $r36;

        $r37 = interfaceinvoke r56.<org.jetbrains.kotlin.ir.declarations.IrVariable: org.jetbrains.kotlin.ir.expressions.IrExpression getInitializer()>();

        if $r37 == null goto label06;

        goto label07;

     label06:
        r57 = "Expected initializer";

        z8 = 0;

        $r38 = new java.lang.IllegalStateException;

        $r39 = virtualinvoke r57.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r38.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r39);

        $r40 = (java.lang.Throwable) $r38;

        throw $r40;

     label07:
        r58 = $r37;

        $r41 = (org.jetbrains.kotlin.ir.IrElement) r58;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r41);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("--");

        goto label20;

     label08:
        $r5 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$LAMBDA: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$LAMBDA INSTANCE>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r5);

        if $z2 == 0 goto label10;

        $r32 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlock: java.util.List getStatements()>();

        $r33 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(0);

        if $r33 != null goto label09;

        $r34 = new java.lang.NullPointerException;

        specialinvoke $r34.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type org.jetbrains.kotlin.ir.declarations.IrFunction");

        throw $r34;

     label09:
        r59 = (org.jetbrains.kotlin.ir.declarations.IrFunction) $r33;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printAsLambda(org.jetbrains.kotlin.ir.declarations.IrFunction)>(r59);

        goto label20;

     label10:
        $r6 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$OBJECT_LITERAL: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$OBJECT_LITERAL INSTANCE>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r6);

        if $z3 == 0 goto label12;

        $r29 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlock: java.util.List getStatements()>();

        $r30 = interfaceinvoke $r29.<java.util.List: java.lang.Object get(int)>(0);

        if $r30 != null goto label11;

        $r31 = new java.lang.NullPointerException;

        specialinvoke $r31.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type org.jetbrains.kotlin.ir.declarations.IrClass");

        throw $r31;

     label11:
        r60 = (org.jetbrains.kotlin.ir.declarations.IrClass) $r30;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printAsObject(org.jetbrains.kotlin.ir.declarations.IrClass)>(r60);

        goto label20;

     label12:
        $r7 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$SAFE_CALL: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$SAFE_CALL INSTANCE>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r7);

        if $z4 == 0 goto label18;

        $r11 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlock: java.util.List getStatements()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(0);

        if $r12 != null goto label13;

        $r28 = new java.lang.NullPointerException;

        specialinvoke $r28.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type org.jetbrains.kotlin.ir.declarations.IrVariable");

        throw $r28;

     label13:
        r61 = (org.jetbrains.kotlin.ir.declarations.IrVariable) $r12;

        $r13 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlock: java.util.List getStatements()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(1);

        if $r14 != null goto label14;

        $r27 = new java.lang.NullPointerException;

        specialinvoke $r27.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type org.jetbrains.kotlin.ir.expressions.IrWhen");

        throw $r27;

     label14:
        r62 = (org.jetbrains.kotlin.ir.expressions.IrWhen) $r14;

        $r15 = interfaceinvoke r62.<org.jetbrains.kotlin.ir.expressions.IrWhen: java.util.List getBranches()>();

        $r16 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object last(java.util.List)>($r15);

        $r17 = (org.jetbrains.kotlin.ir.expressions.IrBranch) $r16;

        $r63 = interfaceinvoke $r17.<org.jetbrains.kotlin.ir.expressions.IrBranch: org.jetbrains.kotlin.ir.expressions.IrExpression getResult()>();

        $z6 = $r63 instanceof org.jetbrains.kotlin.ir.expressions.IrCall;

        if $z6 != 0 goto label15;

        $r63 = null;

     label15:
        r64 = (org.jetbrains.kotlin.ir.expressions.IrCall) $r63;

        if r64 != null goto label16;

        $r26 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlock: java.util.List getStatements()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>($r26, "\n");

        return;

     label16:
        $r18 = interfaceinvoke r61.<org.jetbrains.kotlin.ir.declarations.IrVariable: org.jetbrains.kotlin.ir.expressions.IrExpression getInitializer()>();

        if $r18 == null goto label17;

        $r25 = (org.jetbrains.kotlin.ir.IrElement) $r18;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r25);

        goto label17;

     label17:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("?.");

        $r20 = interfaceinvoke r64.<org.jetbrains.kotlin.ir.expressions.IrCall: org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol getSymbol()>();

        $r21 = interfaceinvoke $r20.<org.jetbrains.kotlin.ir.symbols.IrFunctionSymbol: org.jetbrains.kotlin.descriptors.FunctionDescriptor getDescriptor()>();

        $r22 = interfaceinvoke $r21.<org.jetbrains.kotlin.descriptors.FunctionDescriptor: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r22);

        $r24 = (org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression) r64;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printArgumentList$default(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression,boolean,boolean,int,java.lang.Object)>(r0, $r24, 0, 0, 3, null);

        goto label20;

     label18:
        $r8 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$FOR_LOOP INSTANCE>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r8);

        if $z5 == 0 goto label19;

        $r10 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlock: java.util.List getStatements()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>($r10, "\n");

        goto label20;

     label19:
        $r9 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlock: java.util.List getStatements()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>($r9, "\n");

     label20:
        return;
    }

    public void visitVariable(org.jetbrains.kotlin.ir.declarations.IrVariable)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrVariable r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression r2, r3, $r12;
        boolean z0, z1, $z3, $z4, $z5;
        org.jetbrains.kotlin.ir.IrElement $r7;
        org.jetbrains.kotlin.name.Name $r11;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrVariable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $z3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrVariable: boolean isLateinit()>();

        if $z3 == 0 goto label1;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("lateinit");

     label1:
        $z4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrVariable: boolean isConst()>();

        if $z4 == 0 goto label2;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("const ");

        goto label4;

     label2:
        $z5 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrVariable: boolean isVar()>();

        if $z5 == 0 goto label3;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("var ");

        goto label4;

     label3:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("val ");

     label4:
        $r11 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrVariable: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r11);

        $r12 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrVariable: org.jetbrains.kotlin.ir.expressions.IrExpression getInitializer()>();

        if $r12 == null goto label5;

        r2 = $r12;

        z0 = 0;

        z1 = 0;

        r3 = r2;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" = ");

        $r7 = (org.jetbrains.kotlin.ir.IrElement) r3;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r7);

        goto label5;

     label5:
        return;
    }

    public void visitGetObjectValue(org.jetbrains.kotlin.ir.expressions.IrGetObjectValue)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetObjectValue r1;
        org.jetbrains.kotlin.ir.symbols.IrClassSymbol $r2;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner $r3;
        org.jetbrains.kotlin.ir.declarations.IrClass $r4;
        org.jetbrains.kotlin.name.Name $r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetObjectValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrGetObjectValue: org.jetbrains.kotlin.ir.symbols.IrClassSymbol getSymbol()>();

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.symbols.IrClassSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getOwner()>();

        $r4 = (org.jetbrains.kotlin.ir.declarations.IrClass) $r3;

        $r5 = interfaceinvoke $r4.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r5);

        return;
    }

    public void visitGetValue(org.jetbrains.kotlin.ir.expressions.IrGetValue)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetValue r1;
        org.jetbrains.kotlin.ir.symbols.IrValueSymbol $r2;
        org.jetbrains.kotlin.ir.declarations.IrValueDeclaration $r3;
        org.jetbrains.kotlin.name.Name $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrGetValue: org.jetbrains.kotlin.ir.symbols.IrValueSymbol getSymbol()>();

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.symbols.IrValueSymbol: org.jetbrains.kotlin.ir.declarations.IrValueDeclaration getOwner()>();

        $r4 = interfaceinvoke $r3.<org.jetbrains.kotlin.ir.declarations.IrValueDeclaration: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r4);

        return;
    }

    public void visitField(org.jetbrains.kotlin.ir.declarations.IrField)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrField r1, $r9;
        boolean z0, $z2, $z3, $z4, $z5, z6, $z7, z8;
        org.jetbrains.kotlin.ir.expressions.IrExpressionBody r2, $r15, r30;
        org.jetbrains.kotlin.descriptors.Visibility $r3, $r4, $r19, $r20, $r21;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r6;
        org.jetbrains.kotlin.ir.symbols.IrFieldSymbol $r7;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner $r8;
        org.jetbrains.kotlin.name.Name $r10;
        java.lang.String $r13, $r23, r27;
        org.jetbrains.kotlin.ir.IrElement $r17;
        java.util.Locale $r22, r28;
        java.lang.NullPointerException $r26;
        org.jetbrains.kotlin.ir.types.IrType r29;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrField;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrField: org.jetbrains.kotlin.descriptors.Visibility getVisibility()>();

        $r4 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility PUBLIC>;

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r4);

        $z3 = $z2 ^ 1;

        if $z3 == 0 goto label2;

        $r19 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrField: org.jetbrains.kotlin.descriptors.Visibility getVisibility()>();

        $r20 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility LOCAL>;

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r19, $r20);

        $z5 = $z4 ^ 1;

        if $z5 == 0 goto label2;

        $r21 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrField: org.jetbrains.kotlin.descriptors.Visibility getVisibility()>();

        r27 = virtualinvoke $r21.<org.jetbrains.kotlin.descriptors.Visibility: java.lang.String toString()>();

        $r22 = <java.util.Locale: java.util.Locale ROOT>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r22, "Locale.ROOT");

        r28 = $r22;

        z6 = 0;

        if r27 != null goto label1;

        $r26 = new java.lang.NullPointerException;

        specialinvoke $r26.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r26;

     label1:
        $r23 = virtualinvoke r27.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(r28);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "(this as java.lang.String).toLowerCase(locale)");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r23);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" ");

     label2:
        $z7 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrField: boolean isFinal()>();

        if $z7 == 0 goto label3;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("val ");

        goto label4;

     label3:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("var ");

     label4:
        $r6 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrField: org.jetbrains.kotlin.ir.symbols.IrSymbol getSymbol()>();

        $r7 = (org.jetbrains.kotlin.ir.symbols.IrFieldSymbol) $r6;

        $r8 = interfaceinvoke $r7.<org.jetbrains.kotlin.ir.symbols.IrFieldSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getOwner()>();

        $r9 = (org.jetbrains.kotlin.ir.declarations.IrField) $r8;

        $r10 = interfaceinvoke $r9.<org.jetbrains.kotlin.ir.declarations.IrField: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r10);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(": ");

        r29 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrField: org.jetbrains.kotlin.ir.types.IrType getType()>();

        $r13 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderSrc(org.jetbrains.kotlin.ir.types.IrType)>(r29);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r13);

        $r15 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrField: org.jetbrains.kotlin.ir.expressions.IrExpressionBody getInitializer()>();

        if $r15 == null goto label5;

        r30 = $r15;

        z8 = 0;

        z0 = 0;

        r2 = r30;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" = ");

        $r17 = (org.jetbrains.kotlin.ir.IrElement) r2;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r17);

        goto label5;

     label5:
        return;
    }

    public void visitGetField(org.jetbrains.kotlin.ir.expressions.IrGetField)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetField r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2;
        org.jetbrains.kotlin.ir.symbols.IrFieldSymbol $r4;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner $r5;
        org.jetbrains.kotlin.ir.declarations.IrField $r6;
        org.jetbrains.kotlin.name.Name $r7;
        org.jetbrains.kotlin.ir.IrElement $r9;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetField;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrGetField: org.jetbrains.kotlin.ir.expressions.IrExpression getReceiver()>();

        if $r2 == null goto label1;

        $r9 = (org.jetbrains.kotlin.ir.IrElement) $r2;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r9);

        goto label1;

     label1:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(".");

        $r4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrGetField: org.jetbrains.kotlin.ir.symbols.IrFieldSymbol getSymbol()>();

        $r5 = interfaceinvoke $r4.<org.jetbrains.kotlin.ir.symbols.IrFieldSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getOwner()>();

        $r6 = (org.jetbrains.kotlin.ir.declarations.IrField) $r5;

        $r7 = interfaceinvoke $r6.<org.jetbrains.kotlin.ir.declarations.IrField: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r7);

        return;
    }

    public void visitSetField(org.jetbrains.kotlin.ir.expressions.IrSetField)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSetField r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2, $r10;
        org.jetbrains.kotlin.ir.symbols.IrFieldSymbol $r4;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner $r5;
        org.jetbrains.kotlin.ir.declarations.IrField $r6;
        org.jetbrains.kotlin.name.Name $r7;
        org.jetbrains.kotlin.ir.IrElement $r11, $r12;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSetField;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrSetField: org.jetbrains.kotlin.ir.expressions.IrExpression getReceiver()>();

        if $r2 == null goto label1;

        $r12 = (org.jetbrains.kotlin.ir.IrElement) $r2;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r12);

        goto label1;

     label1:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(".");

        $r4 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrSetField: org.jetbrains.kotlin.ir.symbols.IrFieldSymbol getSymbol()>();

        $r5 = interfaceinvoke $r4.<org.jetbrains.kotlin.ir.symbols.IrFieldSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getOwner()>();

        $r6 = (org.jetbrains.kotlin.ir.declarations.IrField) $r5;

        $r7 = interfaceinvoke $r6.<org.jetbrains.kotlin.ir.declarations.IrField: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r7);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" = ");

        $r10 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrSetField: org.jetbrains.kotlin.ir.expressions.IrExpression getValue()>();

        $r11 = (org.jetbrains.kotlin.ir.IrElement) $r10;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r11);

        return;
    }

    public void visitGetEnumValue(org.jetbrains.kotlin.ir.expressions.IrGetEnumValue)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetEnumValue r1;
        org.jetbrains.kotlin.ir.symbols.IrClassSymbol r2, $r4;
        org.jetbrains.kotlin.ir.types.IrType $r3;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner $r5, $r11;
        org.jetbrains.kotlin.ir.declarations.IrClass $r6;
        org.jetbrains.kotlin.name.Name $r7, $r13;
        org.jetbrains.kotlin.ir.symbols.IrEnumEntrySymbol $r10;
        org.jetbrains.kotlin.ir.declarations.IrEnumEntry $r12;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetEnumValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrGetEnumValue: org.jetbrains.kotlin.ir.types.IrType getType()>();

        $r4 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypesKt: org.jetbrains.kotlin.ir.symbols.IrClassSymbol getClassOrNull(org.jetbrains.kotlin.ir.types.IrType)>($r3);

        if $r4 == null goto label1;

        goto label2;

     label1:
        return;

     label2:
        r2 = $r4;

        $r5 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.symbols.IrClassSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getOwner()>();

        $r6 = (org.jetbrains.kotlin.ir.declarations.IrClass) $r5;

        $r7 = interfaceinvoke $r6.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r7);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(".");

        $r10 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrGetEnumValue: org.jetbrains.kotlin.ir.symbols.IrEnumEntrySymbol getSymbol()>();

        $r11 = interfaceinvoke $r10.<org.jetbrains.kotlin.ir.symbols.IrEnumEntrySymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getOwner()>();

        $r12 = (org.jetbrains.kotlin.ir.declarations.IrEnumEntry) $r11;

        $r13 = interfaceinvoke $r12.<org.jetbrains.kotlin.ir.declarations.IrEnumEntry: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r13);

        return;
    }

    public void visitSetVariable(org.jetbrains.kotlin.ir.expressions.IrSetVariable)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSetVariable r1;
        org.jetbrains.kotlin.ir.symbols.IrVariableSymbol $r2;
        org.jetbrains.kotlin.ir.declarations.IrValueDeclaration $r3;
        org.jetbrains.kotlin.ir.declarations.IrVariable $r4;
        org.jetbrains.kotlin.name.Name $r5;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r8;
        org.jetbrains.kotlin.ir.IrElement $r9;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSetVariable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrSetVariable: org.jetbrains.kotlin.ir.symbols.IrVariableSymbol getSymbol()>();

        $r3 = interfaceinvoke $r2.<org.jetbrains.kotlin.ir.symbols.IrVariableSymbol: org.jetbrains.kotlin.ir.declarations.IrValueDeclaration getOwner()>();

        $r4 = (org.jetbrains.kotlin.ir.declarations.IrVariable) $r3;

        $r5 = interfaceinvoke $r4.<org.jetbrains.kotlin.ir.declarations.IrVariable: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r5);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" = ");

        $r8 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrSetVariable: org.jetbrains.kotlin.ir.expressions.IrExpression getValue()>();

        $r9 = (org.jetbrains.kotlin.ir.IrElement) $r8;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r9);

        return;
    }

    public void visitExpressionBody(org.jetbrains.kotlin.ir.expressions.IrExpressionBody)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrExpressionBody r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r2;
        org.jetbrains.kotlin.ir.visitors.IrElementVisitor $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrExpressionBody;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "body");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrExpressionBody: org.jetbrains.kotlin.ir.expressions.IrExpression getExpression()>();

        $r3 = (org.jetbrains.kotlin.ir.visitors.IrElementVisitor) r0;

        interfaceinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrExpression: java.lang.Object accept(org.jetbrains.kotlin.ir.visitors.IrElementVisitor,java.lang.Object)>($r3, null);

        return;
    }

    public void visitProperty(org.jetbrains.kotlin.ir.declarations.IrProperty)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0, r61, r64, r67;
        org.jetbrains.kotlin.ir.declarations.IrProperty r1;
        org.jetbrains.kotlin.ir.types.IrType r2, $r55;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z11, z17, z22;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction $r6, $r15, $r16, r62, r63, r65, r66;
        java.lang.IllegalStateException $r7;
        java.lang.String $r8, $r10, r56;
        java.lang.Throwable $r9;
        org.jetbrains.kotlin.ir.declarations.IrField $r12, $r54, r57, r58;
        org.jetbrains.kotlin.utils.Printer $r13, $r17, $r23, $r26, $r37, $r40;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin $r19, $r33;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$DEFAULT_PROPERTY_ACCESSOR $r20, $r34;
        org.jetbrains.kotlin.ir.expressions.IrBody $r25, $r39;
        org.jetbrains.kotlin.ir.visitors.IrElementVisitor $r30, $r44;
        java.lang.Object $r31, $r45;
        kotlin.Unit $r32, $r46;
        org.jetbrains.kotlin.ir.expressions.IrExpressionBody $r47, r59, r60;
        org.jetbrains.kotlin.ir.IrElement $r49;
        org.jetbrains.kotlin.name.Name $r53;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrProperty;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $z0 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrProperty: boolean isLateinit()>();

        if $z0 == 0 goto label01;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("lateinit");

     label01:
        $z1 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrProperty: boolean isConst()>();

        if $z1 == 0 goto label02;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("const ");

        goto label04;

     label02:
        $z2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrProperty: boolean isVar()>();

        if $z2 == 0 goto label03;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("var ");

        goto label04;

     label03:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("val ");

     label04:
        $r53 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r53);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(": ");

        $r54 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrField getBackingField()>();

        if $r54 == null goto label05;

        $r55 = interfaceinvoke $r54.<org.jetbrains.kotlin.ir.declarations.IrField: org.jetbrains.kotlin.ir.types.IrType getType()>();

        if $r55 == null goto label05;

        goto label07;

     label05:
        $r6 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction getGetter()>();

        if $r6 == null goto label06;

        $r55 = interfaceinvoke $r6.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.types.IrType getReturnType()>();

        goto label07;

     label06:
        $r55 = null;

     label07:
        if $r55 == null goto label08;

        goto label09;

     label08:
        r56 = "Couldn\'t find return type";

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke r56.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        $r9 = (java.lang.Throwable) $r7;

        throw $r9;

     label09:
        r2 = $r55;

        $r10 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderSrc(org.jetbrains.kotlin.ir.types.IrType)>(r2);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r10);

        $r12 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrField getBackingField()>();

        if $r12 == null goto label11;

        r57 = $r12;

        r58 = r57;

        $r47 = interfaceinvoke r58.<org.jetbrains.kotlin.ir.declarations.IrField: org.jetbrains.kotlin.ir.expressions.IrExpressionBody getInitializer()>();

        if $r47 == null goto label10;

        r59 = $r47;

        z11 = 0;

        r60 = r59;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" = ");

        $r49 = (org.jetbrains.kotlin.ir.IrElement) r60;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r49);

        goto label10;

     label10:
        goto label11;

     label11:
        r61 = r0;

        $r13 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r61);

        virtualinvoke $r13.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        $r15 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction getGetter()>();

        if $r15 == null goto label14;

        r62 = $r15;

        z17 = 0;

        r63 = r62;

        $r33 = interfaceinvoke r63.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin getOrigin()>();

        $r34 = <org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$DEFAULT_PROPERTY_ACCESSOR: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$DEFAULT_PROPERTY_ACCESSOR INSTANCE>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r33, $r34);

        $z6 = $z5 ^ 1;

        if $z6 == 0 goto label13;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("get() {");

        r64 = r0;

        $r37 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r64);

        virtualinvoke $r37.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        $r39 = interfaceinvoke r63.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.expressions.IrBody getBody()>();

        if $r39 == null goto label12;

        $r44 = (org.jetbrains.kotlin.ir.visitors.IrElementVisitor) r0;

        $r45 = interfaceinvoke $r39.<org.jetbrains.kotlin.ir.expressions.IrBody: java.lang.Object accept(org.jetbrains.kotlin.ir.visitors.IrElementVisitor,java.lang.Object)>($r44, null);

        $r46 = (kotlin.Unit) $r45;

        goto label12;

     label12:
        $r40 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r64);

        virtualinvoke $r40.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("}");

     label13:
        goto label14;

     label14:
        $r16 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction getSetter()>();

        if $r16 == null goto label17;

        r65 = $r16;

        z22 = 0;

        r66 = r65;

        $r19 = interfaceinvoke r66.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin getOrigin()>();

        $r20 = <org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$DEFAULT_PROPERTY_ACCESSOR: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$DEFAULT_PROPERTY_ACCESSOR INSTANCE>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r19, $r20);

        $z4 = $z3 ^ 1;

        if $z4 == 0 goto label16;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("set(value) {");

        r67 = r0;

        $r23 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r67);

        virtualinvoke $r23.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        $r25 = interfaceinvoke r66.<org.jetbrains.kotlin.ir.declarations.IrSimpleFunction: org.jetbrains.kotlin.ir.expressions.IrBody getBody()>();

        if $r25 == null goto label15;

        $r30 = (org.jetbrains.kotlin.ir.visitors.IrElementVisitor) r0;

        $r31 = interfaceinvoke $r25.<org.jetbrains.kotlin.ir.expressions.IrBody: java.lang.Object accept(org.jetbrains.kotlin.ir.visitors.IrElementVisitor,java.lang.Object)>($r30, null);

        $r32 = (kotlin.Unit) $r31;

        goto label15;

     label15:
        $r26 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r67);

        virtualinvoke $r26.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("}");

     label16:
        goto label17;

     label17:
        $r17 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r61);

        virtualinvoke $r17.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        return;
    }

    public final java.lang.Object withIntsAsBinaryLiterals(kotlin.jvm.functions.Function0)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        kotlin.jvm.functions.Function0 r1;
        boolean z0;
        java.lang.Throwable $r2, r4;
        java.lang.Object r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        z0 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean printIntsAsBinary>;

     label1:
        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean printIntsAsBinary> = 1;

        r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean printIntsAsBinary> = z0;

        return r3;

     label3:
        $r2 := @caughtexception;

        r4 = $r2;

     label4:
        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean printIntsAsBinary> = z0;

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private final java.lang.String intAsBinaryString(int)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        int i0, $i1, $i2, $i3, i4;
        boolean z0, z1, $z2;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8, r9, $r10, $r11;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        i0 := @parameter0: int;

        if i0 != 0 goto label01;

        return "0";

     label01:
        z1 = 0;

        i4 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        r9 = "";

     label02:
        if i4 != 0 goto label03;

        $i2 = virtualinvoke r9.<java.lang.String: int length()>();

        $i3 = $i2 % 4;

        if $i3 == 0 goto label08;

     label03:
        $i1 = i4 & 1;

        if $i1 == 0 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        z0 = $z2;

        i4 = i4 >> 1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        if z0 == 0 goto label06;

        $r10 = "1";

        goto label07;

     label06:
        $r10 = "0";

     label07:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label08:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        if i0 >= 0 goto label09;

        $r11 = "-";

        goto label10;

     label09:
        $r11 = "";

     label10:
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0b");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void visitConst(org.jetbrains.kotlin.ir.expressions.IrConst)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrConst r1;
        org.jetbrains.kotlin.ir.expressions.IrConstKind r2;
        java.lang.String r3, $r33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        kotlin.NoWhenBranchMatchedException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r12, $r14, $r15, $r16, $r18, $r19, $r26, $r27, $r29, $r30;
        java.lang.Object $r7, $r11, $r13, $r17, $r20, $r21, $r24, $r25, $r28, $r31, $r32;
        java.lang.Integer $r22;
        int $i0;
        java.lang.NullPointerException $r23;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrConst;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: org.jetbrains.kotlin.ir.expressions.IrConstKind getKind()>();

        $z0 = r2 instanceof org.jetbrains.kotlin.ir.expressions.IrConstKind$Null;

        if $z0 == 0 goto label01;

        $r32 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        $r33 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r32);

        goto label13;

     label01:
        $z1 = r2 instanceof org.jetbrains.kotlin.ir.expressions.IrConstKind$Boolean;

        if $z1 == 0 goto label02;

        $r31 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        $r33 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r31);

        goto label13;

     label02:
        $z2 = r2 instanceof org.jetbrains.kotlin.ir.expressions.IrConstKind$Char;

        if $z2 == 0 goto label03;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r28 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label13;

     label03:
        $z3 = r2 instanceof org.jetbrains.kotlin.ir.expressions.IrConstKind$Byte;

        if $z3 == 0 goto label04;

        $r25 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        $r33 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r25);

        goto label13;

     label04:
        $z4 = r2 instanceof org.jetbrains.kotlin.ir.expressions.IrConstKind$Short;

        if $z4 == 0 goto label05;

        $r24 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        $r33 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r24);

        goto label13;

     label05:
        $z5 = r2 instanceof org.jetbrains.kotlin.ir.expressions.IrConstKind$Int;

        if $z5 == 0 goto label08;

        $z10 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: boolean printIntsAsBinary>;

        if $z10 == 0 goto label07;

        $r21 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        if $r21 != null goto label06;

        $r23 = new java.lang.NullPointerException;

        specialinvoke $r23.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.Int");

        throw $r23;

     label06:
        $r22 = (java.lang.Integer) $r21;

        $i0 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();

        $r33 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String intAsBinaryString(int)>($i0);

        goto label13;

     label07:
        $r20 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        $r33 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);

        goto label13;

     label08:
        $z6 = r2 instanceof org.jetbrains.kotlin.ir.expressions.IrConstKind$Long;

        if $z6 == 0 goto label09;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(76);

        $r33 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label13;

     label09:
        $z7 = r2 instanceof org.jetbrains.kotlin.ir.expressions.IrConstKind$Float;

        if $z7 == 0 goto label10;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(102);

        $r33 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label13;

     label10:
        $z8 = r2 instanceof org.jetbrains.kotlin.ir.expressions.IrConstKind$Double;

        if $z8 == 0 goto label11;

        $r11 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        $r33 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r11);

        goto label13;

     label11:
        $z9 = r2 instanceof org.jetbrains.kotlin.ir.expressions.IrConstKind$String;

        if $z9 == 0 goto label12;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r7 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r33 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label13;

     label12:
        $r4 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r4.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r4;

     label13:
        r3 = $r33;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(r3);

        return;
    }

    public void visitBlockBody(org.jetbrains.kotlin.ir.expressions.IrBlockBody)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBlockBody r1;
        java.util.List $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBlockBody;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "body");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBlockBody: java.util.List getStatements()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>($r2, "\n");

        return;
    }

    private final org.jetbrains.kotlin.ir.declarations.IrProperty correspondingProperty(org.jetbrains.kotlin.ir.declarations.IrClass, org.jetbrains.kotlin.ir.declarations.IrValueParameter)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrClass $r1;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter r2;
        java.util.Iterator r3, $r24;
        java.lang.Object r4, r5, r25;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration r6, $r22;
        org.jetbrains.kotlin.ir.declarations.IrProperty r7, r8, $r12, $r19, $r26, r32;
        boolean z2, z3, $z5, $z6, $z7, $z8, $z15, $z16;
        java.util.List $r9, $r11;
        org.jetbrains.kotlin.name.Name $r13, $r14;
        org.jetbrains.kotlin.ir.declarations.IrField $r15;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$INITIALIZE_PROPERTY_FROM_PARAMETER $r16;
        org.jetbrains.kotlin.ir.expressions.IrExpressionBody $r17;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r18, $r28;
        java.util.Collection r20;
        java.lang.Iterable $r21, $r23;
        org.jetbrains.kotlin.ir.expressions.IrGetValue $r29;
        org.jetbrains.kotlin.ir.expressions.IrStatementOrigin $r30;
        java.util.ArrayList r31;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrClass;

        r2 := @parameter1: org.jetbrains.kotlin.ir.declarations.IrValueParameter;

        $r9 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrClass: java.util.List getDeclarations()>();

        r31 = new java.util.ArrayList;

        specialinvoke r31.<java.util.ArrayList: void <init>()>();

        r20 = (java.util.Collection) r31;

        $r21 = (java.lang.Iterable) $r9;

        r3 = interfaceinvoke $r21.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z5 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label04;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = r4;

        r6 = (org.jetbrains.kotlin.ir.declarations.IrDeclaration) r5;

        $r22 = r6;

        $z8 = r6 instanceof org.jetbrains.kotlin.ir.declarations.IrProperty;

        if $z8 != 0 goto label02;

        $r22 = null;

     label02:
        $r19 = (org.jetbrains.kotlin.ir.declarations.IrProperty) $r22;

        if $r19 == null goto label03;

        r7 = $r19;

        z2 = 0;

        z3 = 0;

        r8 = r7;

        interfaceinvoke r20.<java.util.Collection: boolean add(java.lang.Object)>(r8);

        goto label03;

     label03:
        goto label01;

     label04:
        $r11 = (java.util.List) r20;

        $r23 = (java.lang.Iterable) $r11;

        $r24 = interfaceinvoke $r23.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z6 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label13;

        r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        $r26 = (org.jetbrains.kotlin.ir.declarations.IrProperty) r25;

        $r13 = interfaceinvoke $r26.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.name.Name getName()>();

        $r14 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrValueParameter: org.jetbrains.kotlin.name.Name getName()>();

        $z7 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r13, $r14);

        if $z7 == 0 goto label11;

        $r15 = interfaceinvoke $r26.<org.jetbrains.kotlin.ir.declarations.IrProperty: org.jetbrains.kotlin.ir.declarations.IrField getBackingField()>();

        if $r15 == null goto label06;

        $r17 = interfaceinvoke $r15.<org.jetbrains.kotlin.ir.declarations.IrField: org.jetbrains.kotlin.ir.expressions.IrExpressionBody getInitializer()>();

        if $r17 == null goto label06;

        $r18 = interfaceinvoke $r17.<org.jetbrains.kotlin.ir.expressions.IrExpressionBody: org.jetbrains.kotlin.ir.expressions.IrExpression getExpression()>();

        $r28 = $r18;

        goto label07;

     label06:
        $r28 = null;

     label07:
        $z15 = $r28 instanceof org.jetbrains.kotlin.ir.expressions.IrGetValue;

        if $z15 != 0 goto label08;

        $r28 = null;

     label08:
        $r29 = (org.jetbrains.kotlin.ir.expressions.IrGetValue) $r28;

        if $r29 == null goto label09;

        $r30 = interfaceinvoke $r29.<org.jetbrains.kotlin.ir.expressions.IrGetValue: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin getOrigin()>();

        goto label10;

     label09:
        $r30 = null;

     label10:
        $r16 = <org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$INITIALIZE_PROPERTY_FROM_PARAMETER: org.jetbrains.kotlin.ir.expressions.IrStatementOrigin$INITIALIZE_PROPERTY_FROM_PARAMETER INSTANCE>;

        $z16 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r30, $r16);

        goto label12;

     label11:
        $z16 = 0;

     label12:
        if $z16 == 0 goto label05;

        r32 = (org.jetbrains.kotlin.ir.declarations.IrProperty) r25;

        return r32;

     label13:
        $r12 = (org.jetbrains.kotlin.ir.declarations.IrProperty) null;

        return $r12;
    }

    public void visitClass(org.jetbrains.kotlin.ir.declarations.IrClass)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0, r97;
        org.jetbrains.kotlin.ir.declarations.IrClass r1;
        org.jetbrains.kotlin.ir.declarations.IrConstructor r2;
        org.jetbrains.kotlin.ir.declarations.IrProperty r3;
        org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer $r4;
        org.jetbrains.kotlin.descriptors.Visibility $r5, $r6, $r57, $r58, $r59;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z11, $z12, $z13, $z14, $z15, $z17, $z18, $z19, $z21, $z24, $z25, $z28, z30, $z33, $z34, $z35, $z37, z38, $z40, $z42, z43, $z45, z47, $z48, z49, z50;
        org.jetbrains.kotlin.descriptors.Modality $r7, $r8, $r49;
        java.util.LinkedHashSet $r11;
        java.util.List $r13, $r15, $r29, $r38, $r40, $r46, $r68, $r78, $r79, $r94;
        java.util.ArrayList $r14, $r16;
        org.jetbrains.kotlin.utils.Printer $r19, $r21;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin $r25;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FAKE_OVERRIDE $r26;
        java.lang.Iterable $r27, $r31, $r72, $r80, r84, r89;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3 $r30;
        java.lang.CharSequence $r32;
        kotlin.jvm.functions.Function1 $r33;
        java.lang.String $r34, $r51, $r61, r65, r66, $r76;
        java.util.Collection $r37, r69, $r71, r85, r90, $r95;
        int $i0, i1, i3, $i4, $i5;
        java.util.Locale $r50, $r60;
        java.lang.NullPointerException $r54, $r64;
        org.jetbrains.kotlin.name.Name $r67;
        java.util.Set r70;
        java.util.Iterator r73, r81, r86, r91;
        java.lang.Object r74, r82, r87, r92;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter r75;
        org.jetbrains.kotlin.ir.IrElement $r77;
        org.jetbrains.kotlin.ir.types.IrType r83;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration r88, r93;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        r2 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: org.jetbrains.kotlin.ir.declarations.IrConstructor getPrimaryConstructor(org.jetbrains.kotlin.ir.declarations.IrClass)>(r1);

        $r4 = (org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer) r1;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printAnnotations(org.jetbrains.kotlin.ir.declarations.IrAnnotationContainer,boolean)>($r4, 1);

        $r5 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.descriptors.Visibility getVisibility()>();

        $r6 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility PUBLIC>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r5, $r6);

        $z1 = $z0 ^ 1;

        if $z1 == 0 goto label02;

        $r57 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.descriptors.Visibility getVisibility()>();

        $r58 = <org.jetbrains.kotlin.descriptors.Visibilities: org.jetbrains.kotlin.descriptors.Visibility LOCAL>;

        $z18 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r57, $r58);

        $z19 = $z18 ^ 1;

        if $z19 == 0 goto label02;

        $r59 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.descriptors.Visibility getVisibility()>();

        r65 = virtualinvoke $r59.<org.jetbrains.kotlin.descriptors.Visibility: java.lang.String toString()>();

        $r60 = <java.util.Locale: java.util.Locale ROOT>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r60, "Locale.ROOT");

        if r65 != null goto label01;

        $r64 = new java.lang.NullPointerException;

        specialinvoke $r64.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r64;

     label01:
        $r61 = virtualinvoke r65.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r60);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r61, "(this as java.lang.String).toLowerCase(locale)");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r61);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" ");

     label02:
        $z21 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrClass: boolean isInner()>();

        if $z21 == 0 goto label03;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("inner ");

     label03:
        $z2 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: boolean isInterface(org.jetbrains.kotlin.ir.declarations.IrClass)>(r1);

        if $z2 == 0 goto label04;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("interface ");

        goto label08;

     label04:
        $r7 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.descriptors.Modality getModality()>();

        $r8 = <org.jetbrains.kotlin.descriptors.Modality: org.jetbrains.kotlin.descriptors.Modality FINAL>;

        if $r7 == $r8 goto label06;

        $r49 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.descriptors.Modality getModality()>();

        r66 = virtualinvoke $r49.<org.jetbrains.kotlin.descriptors.Modality: java.lang.String toString()>();

        $r50 = <java.util.Locale: java.util.Locale ROOT>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r50, "Locale.ROOT");

        if r66 != null goto label05;

        $r54 = new java.lang.NullPointerException;

        specialinvoke $r54.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type java.lang.String");

        throw $r54;

     label05:
        $r51 = virtualinvoke r66.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r50);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r51, "(this as java.lang.String).toLowerCase(locale)");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r51);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" ");

     label06:
        $z3 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: boolean isAnnotationClass(org.jetbrains.kotlin.ir.declarations.IrClass)>(r1);

        if $z3 == 0 goto label07;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("annotation ");

     label07:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("class ");

     label08:
        $r67 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r67);

        $r68 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrClass: java.util.List getTypeParameters()>();

        r69 = (java.util.Collection) $r68;

        $z24 = interfaceinvoke r69.<java.util.Collection: boolean isEmpty()>();

        if $z24 != 0 goto label09;

        $z25 = 1;

        goto label10;

     label09:
        $z25 = 0;

     label10:
        if $z25 == 0 goto label11;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<");

        $r46 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrClass: java.util.List getTypeParameters()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>($r46, ", ");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("> ");

     label11:
        $r11 = new java.util.LinkedHashSet;

        specialinvoke $r11.<java.util.LinkedHashSet: void <init>()>();

        r70 = (java.util.Set) $r11;

        if r2 == null goto label21;

        $r38 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrConstructor: java.util.List getValueParameters()>();

        $r71 = (java.util.Collection) $r38;

        $z14 = interfaceinvoke $r71.<java.util.Collection: boolean isEmpty()>();

        if $z14 != 0 goto label12;

        $z28 = 1;

        goto label13;

     label12:
        $z28 = 0;

     label13:
        if $z28 == 0 goto label21;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("(");

        $r40 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrConstructor: java.util.List getValueParameters()>();

        $r72 = (java.lang.Iterable) $r40;

        i1 = 0;

        r73 = interfaceinvoke $r72.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z15 = interfaceinvoke r73.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label20;

        r74 = interfaceinvoke r73.<java.util.Iterator: java.lang.Object next()>();

        $i0 = i1;

        i1 = i1 + 1;

        z30 = 0;

        if $i0 >= 0 goto label15;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label15:
        r75 = (org.jetbrains.kotlin.ir.declarations.IrValueParameter) r74;

        i3 = $i0;

        r3 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.ir.declarations.IrProperty correspondingProperty(org.jetbrains.kotlin.ir.declarations.IrClass,org.jetbrains.kotlin.ir.declarations.IrValueParameter)>(r1, r75);

        if r3 == null goto label18;

        interfaceinvoke r70.<java.util.Set: boolean add(java.lang.Object)>(r3);

        $z17 = interfaceinvoke r3.<org.jetbrains.kotlin.ir.declarations.IrProperty: boolean isVar()>();

        if $z17 == 0 goto label16;

        $r76 = "var ";

        goto label17;

     label16:
        $r76 = "val ";

     label17:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r76);

     label18:
        $r77 = (org.jetbrains.kotlin.ir.IrElement) r75;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r77);

        $r78 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.declarations.IrConstructor: java.util.List getValueParameters()>();

        $i4 = interfaceinvoke $r78.<java.util.List: int size()>();

        $i5 = $i4 - 1;

        if i3 >= $i5 goto label19;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(", ");

     label19:
        goto label14;

     label20:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(")");

     label21:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" ");

        $r79 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrClass: java.util.List getSuperTypes()>();

        $r80 = (java.lang.Iterable) $r79;

        $z33 = $r80 instanceof java.util.Collection;

        if $z33 == 0 goto label22;

        $r37 = (java.util.Collection) $r80;

        $z13 = interfaceinvoke $r37.<java.util.Collection: boolean isEmpty()>();

        if $z13 == 0 goto label22;

        $z34 = 0;

        goto label27;

     label22:
        r81 = interfaceinvoke $r80.<java.lang.Iterable: java.util.Iterator iterator()>();

     label23:
        $z35 = interfaceinvoke r81.<java.util.Iterator: boolean hasNext()>();

        if $z35 == 0 goto label26;

        r82 = interfaceinvoke r81.<java.util.Iterator: java.lang.Object next()>();

        r83 = (org.jetbrains.kotlin.ir.types.IrType) r82;

        $z12 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypePredicatesKt: boolean isAny(org.jetbrains.kotlin.ir.types.IrType)>(r83);

        if $z12 != 0 goto label24;

        $z37 = 1;

        goto label25;

     label24:
        $z37 = 0;

     label25:
        if $z37 == 0 goto label23;

        $z34 = 1;

        goto label27;

     label26:
        $z34 = 0;

     label27:
        if $z34 == 0 goto label28;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(": ");

        $r29 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrClass: java.util.List getSuperTypes()>();

        $r31 = (java.lang.Iterable) $r29;

        $r32 = (java.lang.CharSequence) ", ";

        $r30 = new androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3;

        specialinvoke $r30.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3: void <init>(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r0);

        $r33 = (kotlin.jvm.functions.Function1) $r30;

        $r34 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r31, $r32, null, null, 0, null, $r33, 30, null);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r34);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" ");

     label28:
        $r13 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrClass: java.util.List getDeclarations()>();

        z38 = 0;

        r84 = (java.lang.Iterable) $r13;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r85 = (java.util.Collection) $r14;

        r86 = interfaceinvoke r84.<java.lang.Iterable: java.util.Iterator iterator()>();

     label29:
        $z40 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>();

        if $z40 == 0 goto label32;

        r87 = interfaceinvoke r86.<java.util.Iterator: java.lang.Object next()>();

        r88 = (org.jetbrains.kotlin.ir.declarations.IrDeclaration) r87;

        $z8 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r88, r2);

        $z9 = $z8 ^ 1;

        if $z9 == 0 goto label30;

        $r27 = (java.lang.Iterable) r70;

        $z11 = staticinvoke <kotlin.collections.CollectionsKt: boolean contains(java.lang.Iterable,java.lang.Object)>($r27, r88);

        if $z11 != 0 goto label30;

        $z42 = 1;

        goto label31;

     label30:
        $z42 = 0;

     label31:
        if $z42 == 0 goto label29;

        interfaceinvoke r85.<java.util.Collection: boolean add(java.lang.Object)>(r87);

        goto label29;

     label32:
        $r15 = (java.util.List) r85;

        z43 = 0;

        r89 = (java.lang.Iterable) $r15;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r90 = (java.util.Collection) $r16;

        r91 = interfaceinvoke r89.<java.lang.Iterable: java.util.Iterator iterator()>();

     label33:
        $z45 = interfaceinvoke r91.<java.util.Iterator: boolean hasNext()>();

        if $z45 == 0 goto label34;

        r92 = interfaceinvoke r91.<java.util.Iterator: java.lang.Object next()>();

        r93 = (org.jetbrains.kotlin.ir.declarations.IrDeclaration) r92;

        $r25 = interfaceinvoke r93.<org.jetbrains.kotlin.ir.declarations.IrDeclaration: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin getOrigin()>();

        $r26 = <org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FAKE_OVERRIDE: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FAKE_OVERRIDE INSTANCE>;

        $z5 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r25, $r26);

        $z6 = $z5 ^ 1;

        if $z6 == 0 goto label33;

        interfaceinvoke r90.<java.util.Collection: boolean add(java.lang.Object)>(r92);

        goto label33;

     label34:
        $r94 = (java.util.List) r90;

        $r95 = (java.util.Collection) $r94;

        z47 = 0;

        $z4 = interfaceinvoke $r95.<java.util.Collection: boolean isEmpty()>();

        if $z4 != 0 goto label35;

        $z48 = 1;

        goto label36;

     label35:
        $z48 = 0;

     label36:
        if $z48 == 0 goto label37;

        z49 = 0;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,java.lang.Object)>(r0, "{");

        r97 = r0;

        z50 = 0;

        $r19 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r97);

        virtualinvoke $r19.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>($r94, "\n");

        $r21 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r97);

        virtualinvoke $r21.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r0);

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,java.lang.Object)>(r0, "}");

        goto label38;

     label37:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

     label38:
        return;
    }

    public final void printAsObject(org.jetbrains.kotlin.ir.declarations.IrClass)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0, r49;
        org.jetbrains.kotlin.ir.declarations.IrClass $r1;
        org.jetbrains.kotlin.name.Name $r3, $r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z8, $z9, $z11, $z12, $z14, $z17, $z19, $z22, $z25, z27;
        java.util.List $r4, $r5, $r7, $r20, $r46;
        java.util.ArrayList $r6, $r8;
        org.jetbrains.kotlin.utils.Printer $r11, $r13;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin $r17;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FAKE_OVERRIDE $r18;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2 $r21;
        java.lang.Iterable $r22, $r32, r36, r41;
        java.lang.CharSequence $r23;
        kotlin.jvm.functions.Function1 $r24;
        java.lang.String $r25;
        java.util.Collection $r28, r37, r42, $r47;
        java.util.Iterator $r33, r38, r43;
        java.lang.Object r34, r39, r44;
        org.jetbrains.kotlin.ir.types.IrType r35;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration r40, r45;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$printAsObject");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("object ");

        $r3 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.name.Name getName()>();

        $z0 = virtualinvoke $r3.<org.jetbrains.kotlin.name.Name: boolean isSpecial()>();

        if $z0 != 0 goto label01;

        $r29 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r29);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" ");

     label01:
        $r4 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrClass: java.util.List getSuperTypes()>();

        $r32 = (java.lang.Iterable) $r4;

        $z1 = $r32 instanceof java.util.Collection;

        if $z1 == 0 goto label02;

        $r28 = (java.util.Collection) $r32;

        $z9 = interfaceinvoke $r28.<java.util.Collection: boolean isEmpty()>();

        if $z9 == 0 goto label02;

        $z11 = 0;

        goto label07;

     label02:
        $r33 = interfaceinvoke $r32.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z12 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label06;

        r34 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        r35 = (org.jetbrains.kotlin.ir.types.IrType) r34;

        $z8 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypePredicatesKt: boolean isAny(org.jetbrains.kotlin.ir.types.IrType)>(r35);

        if $z8 != 0 goto label04;

        $z14 = 1;

        goto label05;

     label04:
        $z14 = 0;

     label05:
        if $z14 == 0 goto label03;

        $z11 = 1;

        goto label07;

     label06:
        $z11 = 0;

     label07:
        if $z11 == 0 goto label08;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(": ");

        $r20 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrClass: java.util.List getSuperTypes()>();

        $r22 = (java.lang.Iterable) $r20;

        $r23 = (java.lang.CharSequence) ", ";

        $r21 = new androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2;

        specialinvoke $r21.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2: void <init>(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r0);

        $r24 = (kotlin.jvm.functions.Function1) $r21;

        $r25 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r22, $r23, null, null, 0, null, $r24, 30, null);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r25);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(" ");

     label08:
        $r5 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrClass: java.util.List getDeclarations()>();

        r36 = (java.lang.Iterable) $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r37 = (java.util.Collection) $r6;

        r38 = interfaceinvoke r36.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z17 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label12;

        r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r40 = (org.jetbrains.kotlin.ir.declarations.IrDeclaration) r39;

        $z6 = r40 instanceof org.jetbrains.kotlin.ir.declarations.IrConstructor;

        if $z6 != 0 goto label10;

        $z19 = 1;

        goto label11;

     label10:
        $z19 = 0;

     label11:
        if $z19 == 0 goto label09;

        interfaceinvoke r37.<java.util.Collection: boolean add(java.lang.Object)>(r39);

        goto label09;

     label12:
        $r7 = (java.util.List) r37;

        r41 = (java.lang.Iterable) $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r42 = (java.util.Collection) $r8;

        r43 = interfaceinvoke r41.<java.lang.Iterable: java.util.Iterator iterator()>();

     label13:
        $z22 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z22 == 0 goto label14;

        r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r45 = (org.jetbrains.kotlin.ir.declarations.IrDeclaration) r44;

        $r17 = interfaceinvoke r45.<org.jetbrains.kotlin.ir.declarations.IrDeclaration: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin getOrigin()>();

        $r18 = <org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FAKE_OVERRIDE: org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin$FAKE_OVERRIDE INSTANCE>;

        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r17, $r18);

        $z4 = $z3 ^ 1;

        if $z4 == 0 goto label13;

        interfaceinvoke r42.<java.util.Collection: boolean add(java.lang.Object)>(r44);

        goto label13;

     label14:
        $r46 = (java.util.List) r42;

        $r47 = (java.util.Collection) $r46;

        $z2 = interfaceinvoke $r47.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label15;

        $z25 = 1;

        goto label16;

     label15:
        $z25 = 0;

     label16:
        if $z25 == 0 goto label17;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,java.lang.Object)>(r0, "{");

        r49 = r0;

        z27 = 0;

        $r11 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r49);

        virtualinvoke $r11.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void printJoin(java.util.List,java.lang.String)>($r46, "\n");

        $r13 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r49);

        virtualinvoke $r13.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r0);

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,java.lang.Object)>(r0, "}");

        goto label18;

     label17:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

     label18:
        return;
    }

    public void visitBreak(org.jetbrains.kotlin.ir.expressions.IrBreak)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBreak r1;
        java.lang.String $r3, $r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBreak;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "jump");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("break");

        $r3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBreak: java.lang.String getLabel()>();

        if $r3 == null goto label1;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("@");

        $r5 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrBreak: java.lang.String getLabel()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r5);

     label1:
        return;
    }

    public void visitContinue(org.jetbrains.kotlin.ir.expressions.IrContinue)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrContinue r1;
        java.lang.String $r3, $r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrContinue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "jump");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("continue");

        $r3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrContinue: java.lang.String getLabel()>();

        if $r3 == null goto label1;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("@");

        $r5 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrContinue: java.lang.String getLabel()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r5);

     label1:
        return;
    }

    public void visitTypeParameter(org.jetbrains.kotlin.ir.declarations.IrTypeParameter)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrTypeParameter r1;
        java.util.Collection r2;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        org.jetbrains.kotlin.name.Name $r3;
        java.util.List $r5, $r7, $r14;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1 $r8;
        java.lang.Iterable $r9;
        java.lang.CharSequence $r10;
        kotlin.jvm.functions.Function1 $r11;
        java.lang.String $r12;
        java.lang.Object $r15;
        org.jetbrains.kotlin.ir.types.IrType $r16;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrTypeParameter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        $r3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrTypeParameter: org.jetbrains.kotlin.name.Name getName()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r3);

        $r5 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrTypeParameter: java.util.List getSuperTypes()>();

        r2 = (java.util.Collection) $r5;

        z0 = 0;

        $z2 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if $z4 == 0 goto label3;

        $r14 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrTypeParameter: java.util.List getSuperTypes()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(0);

        $r16 = (org.jetbrains.kotlin.ir.types.IrType) $r15;

        $z3 = staticinvoke <org.jetbrains.kotlin.ir.types.IrTypePredicatesKt: boolean isNullableAny(org.jetbrains.kotlin.ir.types.IrType)>($r16);

        if $z3 != 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        z1 = $z5;

        if z1 == 0 goto label5;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>(": ");

        $r7 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.declarations.IrTypeParameter: java.util.List getSuperTypes()>();

        $r9 = (java.lang.Iterable) $r7;

        $r10 = (java.lang.CharSequence) ", ";

        $r8 = new androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1;

        specialinvoke $r8.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r0);

        $r11 = (kotlin.jvm.functions.Function1) $r8;

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r9, $r10, null, null, 0, null, $r11, 30, null);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r12);

     label5:
        return;
    }

    public void visitThrow(org.jetbrains.kotlin.ir.expressions.IrThrow)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrThrow r1;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r3;
        org.jetbrains.kotlin.ir.IrElement $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrThrow;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("throw ");

        $r3 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrThrow: org.jetbrains.kotlin.ir.expressions.IrExpression getValue()>();

        $r4 = (org.jetbrains.kotlin.ir.IrElement) $r3;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r4);

        return;
    }

    public void visitClassReference(org.jetbrains.kotlin.ir.expressions.IrClassReference)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrClassReference r1;
        org.jetbrains.kotlin.ir.types.IrType $r2;
        java.lang.String $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrClassReference;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        $r2 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrClassReference: org.jetbrains.kotlin.ir.types.IrType getClassType()>();

        $r3 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderSrc(org.jetbrains.kotlin.ir.types.IrType)>($r2);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r3);

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("::class");

        return;
    }

    public void visitFunctionAccess(org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitFunctionAccess(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression)>(r0, r1);

        return;
    }

    public void visitBranch(org.jetbrains.kotlin.ir.expressions.IrBranch)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBranch r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBranch;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "branch");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<BRANCH>>");

        return;
    }

    public void visitBreakContinue(org.jetbrains.kotlin.ir.expressions.IrBreakContinue)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBreakContinue r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBreakContinue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "jump");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<BREAKCONTINUE>>");

        return;
    }

    public void visitCatch(org.jetbrains.kotlin.ir.expressions.IrCatch)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrCatch r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrCatch;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "aCatch");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<CATCH>>");

        return;
    }

    public void visitContainerExpression(org.jetbrains.kotlin.ir.expressions.IrContainerExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrContainerExpression r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrContainerExpression;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<CONTAINEREXPR>>");

        return;
    }

    public void visitDelegatingConstructorCall(org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<DELEGATINGCTORCALL>>");

        return;
    }

    public void visitElseBranch(org.jetbrains.kotlin.ir.expressions.IrElseBranch)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrElseBranch r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrElseBranch;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "branch");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<ELSE>>");

        return;
    }

    public void visitFunction(org.jetbrains.kotlin.ir.declarations.IrFunction)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrFunction r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFunction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<FUNCTION>>");

        return;
    }

    public void visitFunctionReference(org.jetbrains.kotlin.ir.expressions.IrFunctionReference)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrFunctionReference r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrFunctionReference;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<FUNCTIONREF>>");

        return;
    }

    public void visitInstanceInitializerCall(org.jetbrains.kotlin.ir.expressions.IrInstanceInitializerCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrInstanceInitializerCall r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrInstanceInitializerCall;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<INSTINIT>>");

        return;
    }

    public void visitLocalDelegatedProperty(org.jetbrains.kotlin.ir.declarations.IrLocalDelegatedProperty)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrLocalDelegatedProperty r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrLocalDelegatedProperty;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<LOCALDELPROP>>");

        return;
    }

    public void visitLocalDelegatedPropertyReference(org.jetbrains.kotlin.ir.expressions.IrLocalDelegatedPropertyReference)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrLocalDelegatedPropertyReference r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrLocalDelegatedPropertyReference;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<LOCALDELPROPREF>>");

        return;
    }

    public void visitLoop(org.jetbrains.kotlin.ir.expressions.IrLoop)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrLoop r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrLoop;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loop");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<LOOP>>");

        return;
    }

    public void visitPropertyReference(org.jetbrains.kotlin.ir.expressions.IrPropertyReference)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrPropertyReference r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrPropertyReference;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<PROPREF>>");

        return;
    }

    public void visitSpreadElement(org.jetbrains.kotlin.ir.expressions.IrSpreadElement)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSpreadElement r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSpreadElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "spread");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<SPREAD>>");

        return;
    }

    public void visitVariableAccess(org.jetbrains.kotlin.ir.expressions.IrValueAccessExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrValueAccessExpression r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrValueAccessExpression;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<VARACCESS>>");

        return;
    }

    public void visitTry(org.jetbrains.kotlin.ir.expressions.IrTry)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0, r28, r34;
        org.jetbrains.kotlin.ir.expressions.IrTry r1;
        org.jetbrains.kotlin.utils.Printer $r3, $r7, $r14, $r17, $r22, $r25;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r5, $r11, r35, r36;
        org.jetbrains.kotlin.ir.IrElement $r6, $r16, $r24;
        java.util.List $r10, $r20;
        boolean $z1, $z2, $z6, z12, z13;
        java.util.Collection r29;
        java.lang.Iterable r30;
        java.util.Iterator $r31;
        java.lang.Object r32;
        org.jetbrains.kotlin.ir.expressions.IrCatch r33;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrTry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "aTry");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("try {");

        r28 = r0;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r28);

        virtualinvoke $r3.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        $r5 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrTry: org.jetbrains.kotlin.ir.expressions.IrExpression getTryResult()>();

        $r6 = (org.jetbrains.kotlin.ir.IrElement) $r5;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r6);

        $r7 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r28);

        virtualinvoke $r7.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        $r10 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrTry: java.util.List getCatches()>();

        r29 = (java.util.Collection) $r10;

        $z1 = interfaceinvoke r29.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        if $z6 == 0 goto label4;

        $r20 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrTry: java.util.List getCatches()>();

        r30 = (java.lang.Iterable) $r20;

        $r31 = interfaceinvoke r30.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        r32 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r33 = (org.jetbrains.kotlin.ir.expressions.IrCatch) r32;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("} catch() {");

        r34 = r0;

        $r22 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r34);

        virtualinvoke $r22.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        $r24 = (org.jetbrains.kotlin.ir.IrElement) r33;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r24);

        $r25 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r34);

        virtualinvoke $r25.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        goto label3;

     label4:
        $r11 = interfaceinvoke r1.<org.jetbrains.kotlin.ir.expressions.IrTry: org.jetbrains.kotlin.ir.expressions.IrExpression getFinallyExpression()>();

        if $r11 == null goto label5;

        r35 = $r11;

        r36 = r35;

        z12 = 0;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("} finally {");

        z13 = 0;

        $r14 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r0);

        virtualinvoke $r14.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer pushIndent()>();

        $r16 = (org.jetbrains.kotlin.ir.IrElement) r36;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r16);

        $r17 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r0);

        virtualinvoke $r17.<org.jetbrains.kotlin.utils.Printer: org.jetbrains.kotlin.utils.Printer popIndent()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        goto label5;

     label5:
        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>("}");

        return;
    }

    public void visitTypeAlias(org.jetbrains.kotlin.ir.declarations.IrTypeAlias)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrTypeAlias r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrTypeAlias;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>("<<TYPEALIAS>>");

        return;
    }

    private final java.lang.String renderSrc(org.jetbrains.kotlin.ir.types.IrType)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.types.IrType $r1;
        java.lang.StringBuilder $r2, $r5, $r7;
        java.util.List $r3;
        java.lang.String $r4, $r6, $r8;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.types.IrType;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.types.IrType: java.util.List getAnnotations()>();

        $r4 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderTypeAnnotations(java.util.List)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderTypeInner(org.jetbrains.kotlin.ir.types.IrType)>($r1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private final java.lang.String renderTypeInner(org.jetbrains.kotlin.ir.types.IrType)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.types.IrType $r1, r2;
        java.lang.CharSequence r4, $r24, $r25, r38, $r39;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r5, $r6, $r9, $r10, $r11, $r12, $r13, r35;
        java.lang.Class $r7;
        java.lang.String $r8, $r23, $r27, $r33, $r34, r42;
        org.jetbrains.kotlin.ir.types.IrSimpleType $r14, $r18, $r20, $r21, $r29;
        org.jetbrains.kotlin.ir.symbols.IrClassifierSymbol $r15;
        org.jetbrains.kotlin.descriptors.ClassifierDescriptor $r16;
        org.jetbrains.kotlin.name.Name $r17;
        java.util.List $r19, $r30;
        org.jetbrains.kotlin.ir.types.IrTypeAbbreviation $r22, r40, r41;
        java.lang.NullPointerException $r26;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1 $r31;
        java.lang.Iterable $r32;
        java.util.Collection r36;
        kotlin.jvm.functions.Function1 r37;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.types.IrType;

        r2 = $r1;

        $z0 = r2 instanceof org.jetbrains.kotlin.ir.types.IrDynamicType;

        if $z0 == 0 goto label01;

        $r34 = "dynamic";

        goto label10;

     label01:
        $z1 = r2 instanceof org.jetbrains.kotlin.ir.types.IrErrorType;

        if $z1 == 0 goto label02;

        $r34 = "IrErrorType";

        goto label10;

     label02:
        $z2 = r2 instanceof org.jetbrains.kotlin.ir.types.IrSimpleType;

        if $z2 == 0 goto label09;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        r35 = $r13;

        $r14 = (org.jetbrains.kotlin.ir.types.IrSimpleType) $r1;

        $r15 = interfaceinvoke $r14.<org.jetbrains.kotlin.ir.types.IrSimpleType: org.jetbrains.kotlin.ir.symbols.IrClassifierSymbol getClassifier()>();

        $r16 = interfaceinvoke $r15.<org.jetbrains.kotlin.ir.symbols.IrClassifierSymbol: org.jetbrains.kotlin.descriptors.ClassifierDescriptor getDescriptor()>();

        $r17 = interfaceinvoke $r16.<org.jetbrains.kotlin.descriptors.ClassifierDescriptor: org.jetbrains.kotlin.name.Name getName()>();

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r18 = (org.jetbrains.kotlin.ir.types.IrSimpleType) $r1;

        $r19 = interfaceinvoke $r18.<org.jetbrains.kotlin.ir.types.IrSimpleType: java.util.List getArguments()>();

        r36 = (java.util.Collection) $r19;

        $z3 = interfaceinvoke r36.<java.util.Collection: boolean isEmpty()>();

        if $z3 != 0 goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        if $z5 == 0 goto label05;

        $r29 = (org.jetbrains.kotlin.ir.types.IrSimpleType) $r1;

        $r30 = interfaceinvoke $r29.<org.jetbrains.kotlin.ir.types.IrSimpleType: java.util.List getArguments()>();

        $r32 = (java.lang.Iterable) $r30;

        $r31 = new androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1;

        specialinvoke $r31.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,org.jetbrains.kotlin.ir.types.IrType)>(r0, $r1);

        r37 = (kotlin.jvm.functions.Function1) $r31;

        r38 = (java.lang.CharSequence) ", ";

        $r39 = (java.lang.CharSequence) ">";

        r4 = (java.lang.CharSequence) "<";

        $r33 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r32, r38, r4, $r39, 0, null, r37, 24, null);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

     label05:
        $r20 = (org.jetbrains.kotlin.ir.types.IrSimpleType) $r1;

        $z4 = interfaceinvoke $r20.<org.jetbrains.kotlin.ir.types.IrSimpleType: boolean getHasQuestionMark()>();

        if $z4 == 0 goto label06;

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

     label06:
        $r21 = (org.jetbrains.kotlin.ir.types.IrSimpleType) $r1;

        $r22 = interfaceinvoke $r21.<org.jetbrains.kotlin.ir.types.IrSimpleType: org.jetbrains.kotlin.ir.types.IrTypeAbbreviation getAbbreviation()>();

        if $r22 == null goto label07;

        r40 = $r22;

        r41 = r40;

        $r27 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderTypeAbbreviation(org.jetbrains.kotlin.ir.types.IrTypeAbbreviation)>(r41);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        goto label07;

     label07:
        $r23 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r23, "StringBuilder().apply(builderAction).toString()");

        r42 = $r23;

        if r42 != null goto label08;

        $r26 = new java.lang.NullPointerException;

        specialinvoke $r26.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.CharSequence");

        throw $r26;

     label08:
        $r24 = (java.lang.CharSequence) r42;

        $r25 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trimEnd(java.lang.CharSequence)>($r24);

        $r34 = virtualinvoke $r25.<java.lang.Object: java.lang.String toString()>();

        goto label10;

     label09:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $r7 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r34 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        return $r34;
    }

    private final java.lang.String buildTrimEnd(kotlin.jvm.functions.Function1)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        kotlin.jvm.functions.Function1 r1;
        boolean z1, z2, z3, z4, z5;
        java.lang.StringBuilder $r2, r9;
        java.lang.String $r4, $r7, r10;
        java.lang.CharSequence $r5, $r6;
        java.lang.NullPointerException $r8;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        z3 = 0;

        z4 = 0;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r9 = $r2;

        z1 = 0;

        z2 = 0;

        interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r9);

        $r4 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "StringBuilder().apply(builderAction).toString()");

        r10 = $r4;

        z5 = 0;

        if r10 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.CharSequence");

        throw $r8;

     label1:
        $r5 = (java.lang.CharSequence) r10;

        $r6 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trimEnd(java.lang.CharSequence)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        return $r7;
    }

    private final java.lang.String renderTypeAbbreviation(org.jetbrains.kotlin.ir.types.IrTypeAbbreviation)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.types.IrTypeAbbreviation $r1;
        java.lang.CharSequence r3, r4, r5;
        java.lang.StringBuilder $r6, r17;
        java.util.List $r7, $r11, $r13;
        java.lang.String $r8, $r10, $r12, $r16;
        org.jetbrains.kotlin.ir.symbols.IrTypeAliasSymbol $r9;
        boolean $z0, $z1, $z2;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1 $r14;
        java.lang.Iterable $r15;
        java.util.Collection r18;
        kotlin.jvm.functions.Function1 r19;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.types.IrTypeAbbreviation;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r17 = $r6;

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ ");

        $r7 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.types.IrTypeAbbreviation: java.util.List getAnnotations()>();

        $r8 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderTypeAnnotations(java.util.List)>($r7);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.types.IrTypeAbbreviation: org.jetbrains.kotlin.ir.symbols.IrTypeAliasSymbol getTypeAlias()>();

        $r10 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderTypeAliasFqn(org.jetbrains.kotlin.ir.symbols.IrTypeAliasSymbol)>($r9);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.types.IrTypeAbbreviation: java.util.List getArguments()>();

        r18 = (java.util.Collection) $r11;

        $z0 = interfaceinvoke r18.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        if $z2 == 0 goto label3;

        $r13 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.types.IrTypeAbbreviation: java.util.List getArguments()>();

        $r15 = (java.lang.Iterable) $r13;

        $r14 = new androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1;

        specialinvoke $r14.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,org.jetbrains.kotlin.ir.types.IrTypeAbbreviation)>(r0, $r1);

        r19 = (kotlin.jvm.functions.Function1) $r14;

        r3 = (java.lang.CharSequence) ", ";

        r4 = (java.lang.CharSequence) ">";

        r5 = (java.lang.CharSequence) "<";

        $r16 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r15, r3, r5, r4, 0, null, r19, 24, null);

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

     label3:
        $z1 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.types.IrTypeAbbreviation: boolean getHasQuestionMark()>();

        if $z1 == 0 goto label4;

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

     label4:
        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r12 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "StringBuilder().apply(builderAction).toString()");

        return $r12;
    }

    private final java.lang.String renderTypeArgument(org.jetbrains.kotlin.ir.types.IrTypeArgument)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0, r3;
        org.jetbrains.kotlin.ir.types.IrTypeArgument $r1, r2;
        boolean z1, z2, $z4, $z5, z6, z7, z8;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, r28;
        org.jetbrains.kotlin.ir.types.IrTypeProjection $r10, $r14, $r17;
        org.jetbrains.kotlin.types.Variance $r11, $r15, $r16;
        java.lang.String $r12, $r19, $r21, $r27, r29;
        org.jetbrains.kotlin.ir.types.IrType $r18;
        java.lang.CharSequence $r22, $r23;
        java.lang.NullPointerException $r24;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.types.IrTypeArgument;

        r2 = $r1;

        $z4 = r2 instanceof org.jetbrains.kotlin.ir.types.IrStarProjection;

        if $z4 == 0 goto label1;

        $r27 = "*";

        goto label5;

     label1:
        $z5 = r2 instanceof org.jetbrains.kotlin.ir.types.IrTypeProjection;

        if $z5 == 0 goto label4;

        r3 = r0;

        z6 = 0;

        z7 = 0;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r28 = $r9;

        z1 = 0;

        z2 = 0;

        $r10 = (org.jetbrains.kotlin.ir.types.IrTypeProjection) $r1;

        $r11 = interfaceinvoke $r10.<org.jetbrains.kotlin.ir.types.IrTypeProjection: org.jetbrains.kotlin.types.Variance getVariance()>();

        $r12 = virtualinvoke $r11.<org.jetbrains.kotlin.types.Variance: java.lang.String getLabel()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = (org.jetbrains.kotlin.ir.types.IrTypeProjection) $r1;

        $r15 = interfaceinvoke $r14.<org.jetbrains.kotlin.ir.types.IrTypeProjection: org.jetbrains.kotlin.types.Variance getVariance()>();

        $r16 = <org.jetbrains.kotlin.types.Variance: org.jetbrains.kotlin.types.Variance INVARIANT>;

        if $r15 == $r16 goto label2;

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label2:
        $r17 = (org.jetbrains.kotlin.ir.types.IrTypeProjection) $r1;

        $r18 = interfaceinvoke $r17.<org.jetbrains.kotlin.ir.types.IrTypeProjection: org.jetbrains.kotlin.ir.types.IrType getType()>();

        $r19 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderSrc(org.jetbrains.kotlin.ir.types.IrType)>($r18);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r21, "StringBuilder().apply(builderAction).toString()");

        r29 = $r21;

        z8 = 0;

        if r29 != null goto label3;

        $r24 = new java.lang.NullPointerException;

        specialinvoke $r24.<java.lang.NullPointerException: void <init>(java.lang.String)>("null cannot be cast to non-null type kotlin.CharSequence");

        throw $r24;

     label3:
        $r22 = (java.lang.CharSequence) r29;

        $r23 = staticinvoke <kotlin.text.StringsKt: java.lang.CharSequence trimEnd(java.lang.CharSequence)>($r22);

        $r27 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>();

        goto label5;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IrTypeArgument[");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r27 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return $r27;
    }

    private final java.lang.String renderTypeAnnotations(java.util.List)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        java.util.List r1;
        kotlin.jvm.functions.Function1 r2;
        java.lang.CharSequence r3, r4, r5;
        boolean $z0;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1 $r6;
        java.lang.Iterable $r7;
        java.lang.String $r8;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r8 = "";

        goto label2;

     label1:
        $r7 = (java.lang.Iterable) r1;

        $r6 = new androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1;

        specialinvoke $r6.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1: void <init>(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)>(r0);

        r2 = (kotlin.jvm.functions.Function1) $r6;

        r3 = (java.lang.CharSequence) " ";

        r4 = (java.lang.CharSequence) " ";

        r5 = (java.lang.CharSequence) "";

        $r8 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r7, r3, r5, r4, 0, null, r2, 24, null);

     label2:
        return $r8;
    }

    private final java.lang.String renderAsAnnotation(org.jetbrains.kotlin.ir.expressions.IrConstructorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall r1;
        java.lang.StringBuilder r2, r3, $r4;
        boolean z0, z1;
        java.lang.String $r5;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrConstructorCall;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r2 = $r4;

        z0 = 0;

        z1 = 0;

        r3 = r2;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void renderAsAnnotation(java.lang.StringBuilder,org.jetbrains.kotlin.ir.expressions.IrConstructorCall)>(r3, r1);

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "StringBuilder().also { i\u2026rAnnotation) }.toString()");

        return $r5;
    }

    private final void renderAsAnnotation(java.lang.StringBuilder, org.jetbrains.kotlin.ir.expressions.IrConstructorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        java.lang.StringBuilder $r1;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall r2;
        java.lang.String r3, $r15, r22;
        int i0, $i1, i2;
        org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol $r4;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r5;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration $r6;
        org.jetbrains.kotlin.ir.declarations.IrClass $r7;
        org.jetbrains.kotlin.name.Name $r8;
        org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression $r10;
        java.lang.Object $r14;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r18;
        org.jetbrains.kotlin.ir.IrElement $r19;
        java.lang.Throwable $r20, r23;
        java.util.List r24;
        boolean z0;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall;

     label1:
        $r4 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol getSymbol()>();

        $r5 = interfaceinvoke $r4.<org.jetbrains.kotlin.ir.symbols.IrConstructorSymbol: org.jetbrains.kotlin.ir.declarations.IrFunction getOwner()>();

        $r6 = (org.jetbrains.kotlin.ir.declarations.IrDeclaration) $r5;

        $r7 = staticinvoke <org.jetbrains.kotlin.ir.util.IrUtilsKt: org.jetbrains.kotlin.ir.declarations.IrClass getParentAsClass(org.jetbrains.kotlin.ir.declarations.IrDeclaration)>($r6);

        $r8 = interfaceinvoke $r7.<org.jetbrains.kotlin.ir.declarations.IrClass: org.jetbrains.kotlin.name.Name getName()>();

        r22 = virtualinvoke $r8.<org.jetbrains.kotlin.name.Name: java.lang.String asString()>();

     label2:
        goto label4;

     label3:
        $r20 := @caughtexception;

        r23 = $r20;

        r22 = "<unbound>";

     label4:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r22, "try {\n            irAnno\u2026    \"<unbound>\"\n        }");

        r3 = r22;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $i1 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: int getValueArgumentsCount()>();

        if $i1 != 0 goto label5;

        return;

     label5:
        $r10 = (org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression) r2;

        r24 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.util.List getValueParameterNamesForDebug(org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression)>($r10);

        z0 = 1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        i2 = 0;

        i0 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: int getValueArgumentsCount()>();

     label6:
        if i2 >= i0 goto label9;

        if z0 == 0 goto label7;

        z0 = 0;

        goto label8;

     label7:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label8:
        $r14 = interfaceinvoke r24.<java.util.List: java.lang.Object get(int)>(i2);

        $r15 = (java.lang.String) $r14;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r18 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.expressions.IrConstructorCall: org.jetbrains.kotlin.ir.expressions.IrExpression getValueArgument(int)>(i2);

        $r19 = (org.jetbrains.kotlin.ir.IrElement) $r18;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void renderAsAnnotationArgument(java.lang.StringBuilder,org.jetbrains.kotlin.ir.IrElement)>($r1, $r19);

        i2 = i2 + 1;

        goto label6;

     label9:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private final java.lang.String renderTypeAliasFqn(org.jetbrains.kotlin.ir.symbols.IrTypeAliasSymbol)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.symbols.IrTypeAliasSymbol $r1;
        java.lang.StringBuilder r2, r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12;
        boolean z0, z1, $z3;
        org.jetbrains.kotlin.descriptors.DeclarationDescriptor $r8;
        org.jetbrains.kotlin.descriptors.TypeAliasDescriptor $r9;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner $r13;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration $r14;
        java.lang.String $r15;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.symbols.IrTypeAliasSymbol;

        $z3 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.symbols.IrTypeAliasSymbol: boolean isBound()>();

        if $z3 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        r2 = $r12;

        z0 = 0;

        z1 = 0;

        r3 = r2;

        $r13 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.symbols.IrTypeAliasSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getOwner()>();

        $r14 = (org.jetbrains.kotlin.ir.declarations.IrDeclaration) $r13;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void renderDeclarationFqn(org.jetbrains.kotlin.ir.declarations.IrDeclaration,java.lang.StringBuilder)>($r14, r3);

        $r15 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r15, "StringBuilder().also { o\u2026ationFqn(it) }.toString()");

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<unbound ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.symbols.IrTypeAliasSymbol: org.jetbrains.kotlin.descriptors.DeclarationDescriptor getDescriptor()>();

        $r9 = (org.jetbrains.kotlin.descriptors.TypeAliasDescriptor) $r8;

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r15;
    }

    private final void renderDeclarationFqn(org.jetbrains.kotlin.ir.declarations.IrDeclaration, java.lang.StringBuilder)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration $r1;
        java.lang.StringBuilder r2;
        boolean $z0;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationWithName $r5;
        org.jetbrains.kotlin.name.Name $r6;
        java.lang.String $r7;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrDeclaration;

        r2 := @parameter1: java.lang.StringBuilder;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void renderDeclarationParentFqn(org.jetbrains.kotlin.ir.declarations.IrDeclaration,java.lang.StringBuilder)>($r1, r2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $z0 = $r1 instanceof org.jetbrains.kotlin.ir.declarations.IrDeclarationWithName;

        if $z0 == 0 goto label1;

        $r5 = (org.jetbrains.kotlin.ir.declarations.IrDeclarationWithName) $r1;

        $r6 = interfaceinvoke $r5.<org.jetbrains.kotlin.ir.declarations.IrDeclarationWithName: org.jetbrains.kotlin.name.Name getName()>();

        $r7 = virtualinvoke $r6.<org.jetbrains.kotlin.name.Name: java.lang.String asString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label2;

     label1:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

     label2:
        return;
    }

    private final void renderDeclarationParentFqn(org.jetbrains.kotlin.ir.declarations.IrDeclaration, java.lang.StringBuilder)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration $r1, $r7;
        java.lang.StringBuilder r2;
        boolean $z0, $z1;
        org.jetbrains.kotlin.ir.declarations.IrPackageFragment $r3;
        org.jetbrains.kotlin.name.FqName $r4;
        java.lang.String $r5;
        java.lang.Throwable $r8, r11;
        org.jetbrains.kotlin.ir.declarations.IrDeclarationParent r10;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrDeclaration;

        r2 := @parameter1: java.lang.StringBuilder;

     label1:
        r10 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.declarations.IrDeclaration: org.jetbrains.kotlin.ir.declarations.IrDeclarationParent getParent()>();

        $z0 = r10 instanceof org.jetbrains.kotlin.ir.declarations.IrDeclaration;

        if $z0 == 0 goto label2;

        $r7 = (org.jetbrains.kotlin.ir.declarations.IrDeclaration) r10;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void renderDeclarationFqn(org.jetbrains.kotlin.ir.declarations.IrDeclaration,java.lang.StringBuilder)>($r7, r2);

        goto label5;

     label2:
        $z1 = r10 instanceof org.jetbrains.kotlin.ir.declarations.IrPackageFragment;

        if $z1 == 0 goto label3;

        $r3 = (org.jetbrains.kotlin.ir.declarations.IrPackageFragment) r10;

        $r4 = interfaceinvoke $r3.<org.jetbrains.kotlin.ir.declarations.IrPackageFragment: org.jetbrains.kotlin.name.FqName getFqName()>();

        $r5 = virtualinvoke $r4.<org.jetbrains.kotlin.name.FqName: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r11 = $r8;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<uninitialized parent>");

     label5:
        return;

        catch kotlin.UninitializedPropertyAccessException from label1 to label3 with label4;
    }

    private final java.util.List getValueParameterNamesForDebug(org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression $r1;
        int i0, i1, i2, $i3, $i4, $i5;
        org.jetbrains.kotlin.ir.declarations.IrSymbolOwner r2;
        java.lang.Iterable $r3;
        java.util.Collection r4, r6;
        java.util.Iterator r5;
        java.lang.String r7, $r20;
        org.jetbrains.kotlin.ir.symbols.IrSymbol $r8, $r9;
        boolean $z3, $z4, $z5;
        kotlin.ranges.IntRange $r10;
        java.util.ArrayList $r11;
        kotlin.collections.IntIterator $r12;
        org.jetbrains.kotlin.ir.declarations.IrFunction $r13, $r15;
        java.util.List $r14, $r16, $r21;
        java.lang.Object $r17;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter $r18;
        org.jetbrains.kotlin.name.Name $r19;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression;

        i0 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression: int getValueArgumentsCount()>();

        $r8 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression: org.jetbrains.kotlin.ir.symbols.IrSymbol getSymbol()>();

        $z3 = interfaceinvoke $r8.<org.jetbrains.kotlin.ir.symbols.IrSymbol: boolean isBound()>();

        if $z3 == 0 goto label6;

        $r9 = interfaceinvoke $r1.<org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression: org.jetbrains.kotlin.ir.symbols.IrSymbol getSymbol()>();

        r2 = interfaceinvoke $r9.<org.jetbrains.kotlin.ir.symbols.IrSymbol: org.jetbrains.kotlin.ir.declarations.IrSymbolOwner getOwner()>();

        $z4 = r2 instanceof org.jetbrains.kotlin.ir.declarations.IrFunction;

        if $z4 == 0 goto label5;

        $r10 = staticinvoke <kotlin.ranges.RangesKt: kotlin.ranges.IntRange until(int,int)>(0, i0);

        $r3 = (java.lang.Iterable) $r10;

        $r11 = new java.util.ArrayList;

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r3, 10);

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>($i3);

        r4 = (java.util.Collection) $r11;

        r5 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z5 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label4;

        $r12 = (kotlin.collections.IntIterator) r5;

        i1 = virtualinvoke $r12.<kotlin.collections.IntIterator: int nextInt()>();

        i2 = i1;

        r6 = r4;

        $r13 = (org.jetbrains.kotlin.ir.declarations.IrFunction) r2;

        $r14 = interfaceinvoke $r13.<org.jetbrains.kotlin.ir.declarations.IrFunction: java.util.List getValueParameters()>();

        $i4 = interfaceinvoke $r14.<java.util.List: int size()>();

        if i2 >= $i4 goto label2;

        $r15 = (org.jetbrains.kotlin.ir.declarations.IrFunction) r2;

        $r16 = interfaceinvoke $r15.<org.jetbrains.kotlin.ir.declarations.IrFunction: java.util.List getValueParameters()>();

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i2);

        $r18 = (org.jetbrains.kotlin.ir.declarations.IrValueParameter) $r17;

        $r19 = interfaceinvoke $r18.<org.jetbrains.kotlin.ir.declarations.IrValueParameter: org.jetbrains.kotlin.name.Name getName()>();

        $r20 = virtualinvoke $r19.<org.jetbrains.kotlin.name.Name: java.lang.String asString()>();

        goto label3;

     label2:
        $i5 = i2 + 1;

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i5);

     label3:
        r7 = $r20;

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>(r7);

        goto label1;

     label4:
        $r21 = (java.util.List) r4;

        goto label7;

     label5:
        $r21 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.util.List getPlaceholderParameterNames(int)>(i0);

        goto label7;

     label6:
        $r21 = specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.util.List getPlaceholderParameterNames(int)>(i0);

     label7:
        return $r21;
    }

    private final java.util.List getPlaceholderParameterNames(int)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        int i0, i1, i2, $i3;
        java.util.Collection r1, r3;
        java.util.Iterator r2;
        java.lang.String r4;
        kotlin.ranges.IntRange $r5;
        java.util.ArrayList $r6;
        boolean $z3;
        java.util.List $r7;
        kotlin.collections.IntIterator $r8;
        java.lang.Iterable $r9;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        i0 := @parameter0: int;

        $r5 = new kotlin.ranges.IntRange;

        specialinvoke $r5.<kotlin.ranges.IntRange: void <init>(int,int)>(1, i0);

        $r9 = (java.lang.Iterable) $r5;

        $r6 = new java.util.ArrayList;

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r9, 10);

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i3);

        r1 = (java.util.Collection) $r6;

        r2 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r8 = (kotlin.collections.IntIterator) r2;

        i1 = virtualinvoke $r8.<kotlin.collections.IntIterator: int nextInt()>();

        i2 = i1;

        r3 = r1;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i2);

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r4);

        goto label1;

     label2:
        $r7 = (java.util.List) r1;

        return $r7;
    }

    private final void renderAsAnnotationArgument(java.lang.StringBuilder, org.jetbrains.kotlin.ir.IrElement)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        java.lang.StringBuilder $r1;
        org.jetbrains.kotlin.ir.IrElement r2, r3, $r18;
        java.util.List r5;
        java.lang.String r6, r7, r8, $r23;
        java.util.Iterator r9;
        java.lang.Object r10, $r13, $r22;
        org.jetbrains.kotlin.ir.expressions.IrVarargElement r11;
        boolean $z2, $z3, $z4, $z5, z6;
        org.jetbrains.kotlin.ir.visitors.IrElementVisitor $r12;
        org.jetbrains.kotlin.ir.expressions.IrVararg $r15;
        org.jetbrains.kotlin.ir.expressions.IrConst $r21;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r26;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: org.jetbrains.kotlin.ir.IrElement;

        r3 = r2;

        if r3 != null goto label1;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<null>");

        goto label8;

     label1:
        $z2 = r3 instanceof org.jetbrains.kotlin.ir.expressions.IrConstructorCall;

        if $z2 == 0 goto label2;

        $r26 = (org.jetbrains.kotlin.ir.expressions.IrConstructorCall) r2;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void renderAsAnnotation(java.lang.StringBuilder,org.jetbrains.kotlin.ir.expressions.IrConstructorCall)>($r1, $r26);

        goto label8;

     label2:
        $z3 = r3 instanceof org.jetbrains.kotlin.ir.expressions.IrConst;

        if $z3 == 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r21 = (org.jetbrains.kotlin.ir.expressions.IrConst) r2;

        $r22 = interfaceinvoke $r21.<org.jetbrains.kotlin.ir.expressions.IrConst: java.lang.Object getValue()>();

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r22);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        goto label8;

     label3:
        $z4 = r3 instanceof org.jetbrains.kotlin.ir.expressions.IrVararg;

        if $z4 == 0 goto label7;

        $r15 = (org.jetbrains.kotlin.ir.expressions.IrVararg) r2;

        r5 = interfaceinvoke $r15.<org.jetbrains.kotlin.ir.expressions.IrVararg: java.util.List getElements()>();

        r6 = "[";

        r7 = "]";

        r8 = ", ";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        z6 = 1;

        r9 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z5 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label6;

        r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        if z6 != 0 goto label5;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

     label5:
        r11 = (org.jetbrains.kotlin.ir.expressions.IrVarargElement) r10;

        $r18 = (org.jetbrains.kotlin.ir.IrElement) r11;

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void renderAsAnnotationArgument(java.lang.StringBuilder,org.jetbrains.kotlin.ir.IrElement)>($r1, $r18);

        z6 = 0;

        goto label4;

     label6:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        goto label8;

     label7:
        $r12 = (org.jetbrains.kotlin.ir.visitors.IrElementVisitor) r0;

        $r13 = interfaceinvoke r2.<org.jetbrains.kotlin.ir.IrElement: java.lang.Object accept(org.jetbrains.kotlin.ir.visitors.IrElementVisitor,java.lang.Object)>($r12, null);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

     label8:
        return;
    }

    public void visitElement(org.jetbrains.kotlin.ir.IrElement)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.IrElement r1;
        java.lang.StringBuilder $r2, $r3, $r6, $r7;
        java.lang.Class $r4;
        java.lang.String $r5, $r8;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.IrElement;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<<");

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer print(java.lang.Object)>($r8);

        return;
    }

    public void <init>(java.lang.Appendable)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        java.lang.Appendable r1;
        org.jetbrains.kotlin.utils.Printer $r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: java.lang.Appendable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "out");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.jetbrains.kotlin.utils.Printer;

        specialinvoke $r2.<org.jetbrains.kotlin.utils.Printer: void <init>(java.lang.Appendable,java.lang.String)>(r1, "%tab%");

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer printer> = $r2;

        return;
    }

    public void visitModuleFragment(org.jetbrains.kotlin.ir.declarations.IrModuleFragment, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrModuleFragment r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrModuleFragment;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitModuleFragment(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrModuleFragment,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitModuleFragment(org.jetbrains.kotlin.ir.declarations.IrModuleFragment, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrModuleFragment r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrModuleFragment;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitModuleFragment(org.jetbrains.kotlin.ir.declarations.IrModuleFragment,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitFile(org.jetbrains.kotlin.ir.declarations.IrFile, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrFile r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFile;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitFile(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrFile,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitFile(org.jetbrains.kotlin.ir.declarations.IrFile, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrFile r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFile;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitFile(org.jetbrains.kotlin.ir.declarations.IrFile,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitValueParameter(org.jetbrains.kotlin.ir.declarations.IrValueParameter, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrValueParameter;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitValueParameter(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrValueParameter,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitValueParameter(org.jetbrains.kotlin.ir.declarations.IrValueParameter, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrValueParameter r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrValueParameter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitValueParameter(org.jetbrains.kotlin.ir.declarations.IrValueParameter,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitSimpleFunction(org.jetbrains.kotlin.ir.declarations.IrSimpleFunction, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitSimpleFunction(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrSimpleFunction,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitSimpleFunction(org.jetbrains.kotlin.ir.declarations.IrSimpleFunction, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrSimpleFunction r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrSimpleFunction;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitSimpleFunction(org.jetbrains.kotlin.ir.declarations.IrSimpleFunction,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitConstructor(org.jetbrains.kotlin.ir.declarations.IrConstructor, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrConstructor r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrConstructor;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitConstructor(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrConstructor,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitConstructor(org.jetbrains.kotlin.ir.declarations.IrConstructor, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrConstructor r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrConstructor;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitConstructor(org.jetbrains.kotlin.ir.declarations.IrConstructor,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitCall(org.jetbrains.kotlin.ir.expressions.IrCall, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrCall r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrCall;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitCall(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrCall,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitCall(org.jetbrains.kotlin.ir.expressions.IrCall, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrCall r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrCall;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitCall(org.jetbrains.kotlin.ir.expressions.IrCall,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitFunctionExpression(org.jetbrains.kotlin.ir.expressions.IrFunctionExpression, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrFunctionExpression r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrFunctionExpression;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitFunctionExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrFunctionExpression,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitFunctionExpression(org.jetbrains.kotlin.ir.expressions.IrFunctionExpression, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrFunctionExpression r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrFunctionExpression;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitFunctionExpression(org.jetbrains.kotlin.ir.expressions.IrFunctionExpression,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitTypeOperator(org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitTypeOperator(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitTypeOperator(org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitTypeOperator(org.jetbrains.kotlin.ir.expressions.IrTypeOperatorCall,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitComposite(org.jetbrains.kotlin.ir.expressions.IrComposite, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrComposite r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrComposite;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitComposite(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrComposite,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitComposite(org.jetbrains.kotlin.ir.expressions.IrComposite, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrComposite r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrComposite;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitComposite(org.jetbrains.kotlin.ir.expressions.IrComposite,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitDoWhileLoop(org.jetbrains.kotlin.ir.expressions.IrDoWhileLoop, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDoWhileLoop r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDoWhileLoop;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loop");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitDoWhileLoop(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrDoWhileLoop,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitDoWhileLoop(org.jetbrains.kotlin.ir.expressions.IrDoWhileLoop, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDoWhileLoop r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDoWhileLoop;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitDoWhileLoop(org.jetbrains.kotlin.ir.expressions.IrDoWhileLoop,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitConstructorCall(org.jetbrains.kotlin.ir.expressions.IrConstructorCall, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrConstructorCall;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitConstructorCall(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrConstructorCall,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitConstructorCall(org.jetbrains.kotlin.ir.expressions.IrConstructorCall, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrConstructorCall;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitConstructorCall(org.jetbrains.kotlin.ir.expressions.IrConstructorCall,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitStringConcatenation(org.jetbrains.kotlin.ir.expressions.IrStringConcatenation, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrStringConcatenation r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrStringConcatenation;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitStringConcatenation(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrStringConcatenation,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitStringConcatenation(org.jetbrains.kotlin.ir.expressions.IrStringConcatenation, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrStringConcatenation r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrStringConcatenation;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitStringConcatenation(org.jetbrains.kotlin.ir.expressions.IrStringConcatenation,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitVararg(org.jetbrains.kotlin.ir.expressions.IrVararg, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrVararg r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrVararg;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitVararg(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrVararg,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitVararg(org.jetbrains.kotlin.ir.expressions.IrVararg, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrVararg r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrVararg;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitVararg(org.jetbrains.kotlin.ir.expressions.IrVararg,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitWhen(org.jetbrains.kotlin.ir.expressions.IrWhen, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrWhen r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrWhen;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitWhen(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrWhen,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitWhen(org.jetbrains.kotlin.ir.expressions.IrWhen, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrWhen r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrWhen;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitWhen(org.jetbrains.kotlin.ir.expressions.IrWhen,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitWhileLoop(org.jetbrains.kotlin.ir.expressions.IrWhileLoop, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrWhileLoop r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrWhileLoop;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loop");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitWhileLoop(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrWhileLoop,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitWhileLoop(org.jetbrains.kotlin.ir.expressions.IrWhileLoop, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrWhileLoop r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrWhileLoop;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitWhileLoop(org.jetbrains.kotlin.ir.expressions.IrWhileLoop,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitReturn(org.jetbrains.kotlin.ir.expressions.IrReturn, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrReturn r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrReturn;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitReturn(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrReturn,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitReturn(org.jetbrains.kotlin.ir.expressions.IrReturn, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrReturn r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrReturn;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitReturn(org.jetbrains.kotlin.ir.expressions.IrReturn,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitBlock(org.jetbrains.kotlin.ir.expressions.IrBlock, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBlock r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBlock;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitBlock(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrBlock,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitBlock(org.jetbrains.kotlin.ir.expressions.IrBlock, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBlock r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBlock;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitBlock(org.jetbrains.kotlin.ir.expressions.IrBlock,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitVariable(org.jetbrains.kotlin.ir.declarations.IrVariable, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrVariable r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrVariable;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitVariable(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrVariable,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitVariable(org.jetbrains.kotlin.ir.declarations.IrVariable, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrVariable r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrVariable;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitVariable(org.jetbrains.kotlin.ir.declarations.IrVariable,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitGetObjectValue(org.jetbrains.kotlin.ir.expressions.IrGetObjectValue, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetObjectValue r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetObjectValue;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitGetObjectValue(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrGetObjectValue,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitGetObjectValue(org.jetbrains.kotlin.ir.expressions.IrGetObjectValue, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetObjectValue r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetObjectValue;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitGetObjectValue(org.jetbrains.kotlin.ir.expressions.IrGetObjectValue,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitGetValue(org.jetbrains.kotlin.ir.expressions.IrGetValue, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetValue r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetValue;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitGetValue(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrGetValue,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitGetValue(org.jetbrains.kotlin.ir.expressions.IrGetValue, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetValue r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetValue;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitGetValue(org.jetbrains.kotlin.ir.expressions.IrGetValue,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitField(org.jetbrains.kotlin.ir.declarations.IrField, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrField r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrField;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitField(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrField,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitField(org.jetbrains.kotlin.ir.declarations.IrField, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrField r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrField;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitField(org.jetbrains.kotlin.ir.declarations.IrField,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitGetField(org.jetbrains.kotlin.ir.expressions.IrGetField, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetField r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetField;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitGetField(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrGetField,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitGetField(org.jetbrains.kotlin.ir.expressions.IrGetField, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetField r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetField;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitGetField(org.jetbrains.kotlin.ir.expressions.IrGetField,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitSetField(org.jetbrains.kotlin.ir.expressions.IrSetField, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSetField r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSetField;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitSetField(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrSetField,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitSetField(org.jetbrains.kotlin.ir.expressions.IrSetField, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSetField r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSetField;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitSetField(org.jetbrains.kotlin.ir.expressions.IrSetField,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitGetEnumValue(org.jetbrains.kotlin.ir.expressions.IrGetEnumValue, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetEnumValue r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetEnumValue;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitGetEnumValue(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrGetEnumValue,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitGetEnumValue(org.jetbrains.kotlin.ir.expressions.IrGetEnumValue, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetEnumValue r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetEnumValue;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitGetEnumValue(org.jetbrains.kotlin.ir.expressions.IrGetEnumValue,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitSetVariable(org.jetbrains.kotlin.ir.expressions.IrSetVariable, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSetVariable r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSetVariable;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitSetVariable(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrSetVariable,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitSetVariable(org.jetbrains.kotlin.ir.expressions.IrSetVariable, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSetVariable r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSetVariable;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitSetVariable(org.jetbrains.kotlin.ir.expressions.IrSetVariable,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitExpressionBody(org.jetbrains.kotlin.ir.expressions.IrExpressionBody, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrExpressionBody r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrExpressionBody;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "body");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitExpressionBody(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrExpressionBody,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitExpressionBody(org.jetbrains.kotlin.ir.expressions.IrExpressionBody, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrExpressionBody r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrExpressionBody;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitExpressionBody(org.jetbrains.kotlin.ir.expressions.IrExpressionBody,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitProperty(org.jetbrains.kotlin.ir.declarations.IrProperty, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrProperty r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrProperty;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitProperty(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrProperty,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitProperty(org.jetbrains.kotlin.ir.declarations.IrProperty, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrProperty r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrProperty;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitProperty(org.jetbrains.kotlin.ir.declarations.IrProperty,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitConst(org.jetbrains.kotlin.ir.expressions.IrConst, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrConst r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrConst;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitConst(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrConst,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitConst(org.jetbrains.kotlin.ir.expressions.IrConst, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrConst r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrConst;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitConst(org.jetbrains.kotlin.ir.expressions.IrConst,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitBlockBody(org.jetbrains.kotlin.ir.expressions.IrBlockBody, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBlockBody r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBlockBody;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "body");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitBlockBody(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrBlockBody,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitBlockBody(org.jetbrains.kotlin.ir.expressions.IrBlockBody, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBlockBody r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBlockBody;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitBlockBody(org.jetbrains.kotlin.ir.expressions.IrBlockBody,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitClass(org.jetbrains.kotlin.ir.declarations.IrClass, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrClass r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrClass;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitClass(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrClass,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitClass(org.jetbrains.kotlin.ir.declarations.IrClass, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrClass r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrClass;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitClass(org.jetbrains.kotlin.ir.declarations.IrClass,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitBreak(org.jetbrains.kotlin.ir.expressions.IrBreak, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBreak r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBreak;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "jump");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitBreak(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrBreak,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitBreak(org.jetbrains.kotlin.ir.expressions.IrBreak, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBreak r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBreak;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitBreak(org.jetbrains.kotlin.ir.expressions.IrBreak,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitContinue(org.jetbrains.kotlin.ir.expressions.IrContinue, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrContinue r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrContinue;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "jump");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitContinue(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrContinue,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitContinue(org.jetbrains.kotlin.ir.expressions.IrContinue, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrContinue r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrContinue;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitContinue(org.jetbrains.kotlin.ir.expressions.IrContinue,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitTypeParameter(org.jetbrains.kotlin.ir.declarations.IrTypeParameter, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrTypeParameter r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrTypeParameter;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitTypeParameter(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrTypeParameter,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitTypeParameter(org.jetbrains.kotlin.ir.declarations.IrTypeParameter, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrTypeParameter r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrTypeParameter;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitTypeParameter(org.jetbrains.kotlin.ir.declarations.IrTypeParameter,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitThrow(org.jetbrains.kotlin.ir.expressions.IrThrow, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrThrow r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrThrow;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitThrow(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrThrow,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitThrow(org.jetbrains.kotlin.ir.expressions.IrThrow, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrThrow r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrThrow;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitThrow(org.jetbrains.kotlin.ir.expressions.IrThrow,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitClassReference(org.jetbrains.kotlin.ir.expressions.IrClassReference, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrClassReference r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrClassReference;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitClassReference(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrClassReference,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitClassReference(org.jetbrains.kotlin.ir.expressions.IrClassReference, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrClassReference r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrClassReference;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitClassReference(org.jetbrains.kotlin.ir.expressions.IrClassReference,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitFunctionAccess(org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitFunctionAccess(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitFunctionAccess(org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitFunctionAccess(org.jetbrains.kotlin.ir.expressions.IrFunctionAccessExpression,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitBranch(org.jetbrains.kotlin.ir.expressions.IrBranch, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBranch r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBranch;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "branch");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitBranch(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrBranch,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitBranch(org.jetbrains.kotlin.ir.expressions.IrBranch, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBranch r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBranch;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitBranch(org.jetbrains.kotlin.ir.expressions.IrBranch,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitBreakContinue(org.jetbrains.kotlin.ir.expressions.IrBreakContinue, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBreakContinue r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBreakContinue;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "jump");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitBreakContinue(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrBreakContinue,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitBreakContinue(org.jetbrains.kotlin.ir.expressions.IrBreakContinue, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBreakContinue r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBreakContinue;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitBreakContinue(org.jetbrains.kotlin.ir.expressions.IrBreakContinue,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitCatch(org.jetbrains.kotlin.ir.expressions.IrCatch, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrCatch r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrCatch;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "aCatch");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitCatch(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrCatch,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitCatch(org.jetbrains.kotlin.ir.expressions.IrCatch, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrCatch r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrCatch;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitCatch(org.jetbrains.kotlin.ir.expressions.IrCatch,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitContainerExpression(org.jetbrains.kotlin.ir.expressions.IrContainerExpression, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrContainerExpression r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrContainerExpression;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitContainerExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrContainerExpression,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitContainerExpression(org.jetbrains.kotlin.ir.expressions.IrContainerExpression, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrContainerExpression r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrContainerExpression;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitContainerExpression(org.jetbrains.kotlin.ir.expressions.IrContainerExpression,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitDelegatingConstructorCall(org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitDelegatingConstructorCall(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitDelegatingConstructorCall(org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitDelegatingConstructorCall(org.jetbrains.kotlin.ir.expressions.IrDelegatingConstructorCall,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitElseBranch(org.jetbrains.kotlin.ir.expressions.IrElseBranch, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrElseBranch r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrElseBranch;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "branch");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitElseBranch(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrElseBranch,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitElseBranch(org.jetbrains.kotlin.ir.expressions.IrElseBranch, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrElseBranch r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrElseBranch;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitElseBranch(org.jetbrains.kotlin.ir.expressions.IrElseBranch,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitFunction(org.jetbrains.kotlin.ir.declarations.IrFunction, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrFunction r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFunction;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitFunction(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrFunction,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitFunction(org.jetbrains.kotlin.ir.declarations.IrFunction, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrFunction r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrFunction;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitFunction(org.jetbrains.kotlin.ir.declarations.IrFunction,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitFunctionReference(org.jetbrains.kotlin.ir.expressions.IrFunctionReference, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrFunctionReference r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrFunctionReference;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitFunctionReference(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrFunctionReference,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitFunctionReference(org.jetbrains.kotlin.ir.expressions.IrFunctionReference, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrFunctionReference r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrFunctionReference;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitFunctionReference(org.jetbrains.kotlin.ir.expressions.IrFunctionReference,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitInstanceInitializerCall(org.jetbrains.kotlin.ir.expressions.IrInstanceInitializerCall, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrInstanceInitializerCall r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrInstanceInitializerCall;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitInstanceInitializerCall(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrInstanceInitializerCall,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitInstanceInitializerCall(org.jetbrains.kotlin.ir.expressions.IrInstanceInitializerCall, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrInstanceInitializerCall r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrInstanceInitializerCall;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitInstanceInitializerCall(org.jetbrains.kotlin.ir.expressions.IrInstanceInitializerCall,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitLocalDelegatedProperty(org.jetbrains.kotlin.ir.declarations.IrLocalDelegatedProperty, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrLocalDelegatedProperty r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrLocalDelegatedProperty;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitLocalDelegatedProperty(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrLocalDelegatedProperty,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitLocalDelegatedProperty(org.jetbrains.kotlin.ir.declarations.IrLocalDelegatedProperty, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrLocalDelegatedProperty r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrLocalDelegatedProperty;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitLocalDelegatedProperty(org.jetbrains.kotlin.ir.declarations.IrLocalDelegatedProperty,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitLocalDelegatedPropertyReference(org.jetbrains.kotlin.ir.expressions.IrLocalDelegatedPropertyReference, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrLocalDelegatedPropertyReference r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrLocalDelegatedPropertyReference;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitLocalDelegatedPropertyReference(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrLocalDelegatedPropertyReference,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitLocalDelegatedPropertyReference(org.jetbrains.kotlin.ir.expressions.IrLocalDelegatedPropertyReference, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrLocalDelegatedPropertyReference r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrLocalDelegatedPropertyReference;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitLocalDelegatedPropertyReference(org.jetbrains.kotlin.ir.expressions.IrLocalDelegatedPropertyReference,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitLoop(org.jetbrains.kotlin.ir.expressions.IrLoop, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrLoop r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrLoop;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loop");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitLoop(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrLoop,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitLoop(org.jetbrains.kotlin.ir.expressions.IrLoop, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrLoop r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrLoop;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitLoop(org.jetbrains.kotlin.ir.expressions.IrLoop,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitPropertyReference(org.jetbrains.kotlin.ir.expressions.IrPropertyReference, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrPropertyReference r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrPropertyReference;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitPropertyReference(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrPropertyReference,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitPropertyReference(org.jetbrains.kotlin.ir.expressions.IrPropertyReference, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrPropertyReference r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrPropertyReference;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitPropertyReference(org.jetbrains.kotlin.ir.expressions.IrPropertyReference,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitSpreadElement(org.jetbrains.kotlin.ir.expressions.IrSpreadElement, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSpreadElement r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSpreadElement;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "spread");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitSpreadElement(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrSpreadElement,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitSpreadElement(org.jetbrains.kotlin.ir.expressions.IrSpreadElement, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSpreadElement r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSpreadElement;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitSpreadElement(org.jetbrains.kotlin.ir.expressions.IrSpreadElement,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitTry(org.jetbrains.kotlin.ir.expressions.IrTry, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrTry r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrTry;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "aTry");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitTry(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrTry,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitTry(org.jetbrains.kotlin.ir.expressions.IrTry, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrTry r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrTry;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitTry(org.jetbrains.kotlin.ir.expressions.IrTry,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitTypeAlias(org.jetbrains.kotlin.ir.declarations.IrTypeAlias, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrTypeAlias r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrTypeAlias;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitTypeAlias(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrTypeAlias,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitTypeAlias(org.jetbrains.kotlin.ir.declarations.IrTypeAlias, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrTypeAlias r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrTypeAlias;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitTypeAlias(org.jetbrains.kotlin.ir.declarations.IrTypeAlias,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitElement(org.jetbrains.kotlin.ir.IrElement, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.IrElement r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.IrElement;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "element");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitElement(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.IrElement,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitElement(org.jetbrains.kotlin.ir.IrElement, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.IrElement r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.IrElement;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitElement(org.jetbrains.kotlin.ir.IrElement,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitAnonymousInitializer(org.jetbrains.kotlin.ir.declarations.IrAnonymousInitializer)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrAnonymousInitializer r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrAnonymousInitializer;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitAnonymousInitializer(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrAnonymousInitializer)>(r0, r1);

        return;
    }

    public void visitAnonymousInitializer(org.jetbrains.kotlin.ir.declarations.IrAnonymousInitializer, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrAnonymousInitializer r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrAnonymousInitializer;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitAnonymousInitializer(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrAnonymousInitializer,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitAnonymousInitializer(org.jetbrains.kotlin.ir.declarations.IrAnonymousInitializer, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrAnonymousInitializer r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrAnonymousInitializer;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitAnonymousInitializer(org.jetbrains.kotlin.ir.declarations.IrAnonymousInitializer,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitBody(org.jetbrains.kotlin.ir.expressions.IrBody)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBody r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBody;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "body");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitBody(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrBody)>(r0, r1);

        return;
    }

    public void visitBody(org.jetbrains.kotlin.ir.expressions.IrBody, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBody r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBody;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "body");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitBody(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrBody,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitBody(org.jetbrains.kotlin.ir.expressions.IrBody, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrBody r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrBody;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitBody(org.jetbrains.kotlin.ir.expressions.IrBody,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitCallableReference(org.jetbrains.kotlin.ir.expressions.IrCallableReference)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrCallableReference r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrCallableReference;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitCallableReference(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrCallableReference)>(r0, r1);

        return;
    }

    public void visitCallableReference(org.jetbrains.kotlin.ir.expressions.IrCallableReference, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrCallableReference r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrCallableReference;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitCallableReference(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrCallableReference,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitCallableReference(org.jetbrains.kotlin.ir.expressions.IrCallableReference, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrCallableReference r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrCallableReference;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitCallableReference(org.jetbrains.kotlin.ir.expressions.IrCallableReference,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitDeclaration(org.jetbrains.kotlin.ir.declarations.IrDeclaration)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitDeclaration(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrDeclaration)>(r0, r1);

        return;
    }

    public void visitDeclaration(org.jetbrains.kotlin.ir.declarations.IrDeclaration, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrDeclaration;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitDeclaration(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrDeclaration,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitDeclaration(org.jetbrains.kotlin.ir.declarations.IrDeclaration, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrDeclaration r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrDeclaration;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitDeclaration(org.jetbrains.kotlin.ir.declarations.IrDeclaration,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitDeclarationReference(org.jetbrains.kotlin.ir.expressions.IrDeclarationReference)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDeclarationReference r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDeclarationReference;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitDeclarationReference(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrDeclarationReference)>(r0, r1);

        return;
    }

    public void visitDeclarationReference(org.jetbrains.kotlin.ir.expressions.IrDeclarationReference, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDeclarationReference r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDeclarationReference;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitDeclarationReference(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrDeclarationReference,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitDeclarationReference(org.jetbrains.kotlin.ir.expressions.IrDeclarationReference, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDeclarationReference r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDeclarationReference;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitDeclarationReference(org.jetbrains.kotlin.ir.expressions.IrDeclarationReference,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitDynamicExpression(org.jetbrains.kotlin.ir.expressions.IrDynamicExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDynamicExpression r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDynamicExpression;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitDynamicExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrDynamicExpression)>(r0, r1);

        return;
    }

    public void visitDynamicExpression(org.jetbrains.kotlin.ir.expressions.IrDynamicExpression, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDynamicExpression r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDynamicExpression;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitDynamicExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrDynamicExpression,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitDynamicExpression(org.jetbrains.kotlin.ir.expressions.IrDynamicExpression, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDynamicExpression r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDynamicExpression;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitDynamicExpression(org.jetbrains.kotlin.ir.expressions.IrDynamicExpression,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitDynamicMemberExpression(org.jetbrains.kotlin.ir.expressions.IrDynamicMemberExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDynamicMemberExpression r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDynamicMemberExpression;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitDynamicMemberExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrDynamicMemberExpression)>(r0, r1);

        return;
    }

    public void visitDynamicMemberExpression(org.jetbrains.kotlin.ir.expressions.IrDynamicMemberExpression, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDynamicMemberExpression r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDynamicMemberExpression;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitDynamicMemberExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrDynamicMemberExpression,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitDynamicMemberExpression(org.jetbrains.kotlin.ir.expressions.IrDynamicMemberExpression, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDynamicMemberExpression r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDynamicMemberExpression;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitDynamicMemberExpression(org.jetbrains.kotlin.ir.expressions.IrDynamicMemberExpression,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitDynamicOperatorExpression(org.jetbrains.kotlin.ir.expressions.IrDynamicOperatorExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDynamicOperatorExpression r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDynamicOperatorExpression;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitDynamicOperatorExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrDynamicOperatorExpression)>(r0, r1);

        return;
    }

    public void visitDynamicOperatorExpression(org.jetbrains.kotlin.ir.expressions.IrDynamicOperatorExpression, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDynamicOperatorExpression r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDynamicOperatorExpression;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitDynamicOperatorExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrDynamicOperatorExpression,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitDynamicOperatorExpression(org.jetbrains.kotlin.ir.expressions.IrDynamicOperatorExpression, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrDynamicOperatorExpression r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrDynamicOperatorExpression;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitDynamicOperatorExpression(org.jetbrains.kotlin.ir.expressions.IrDynamicOperatorExpression,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitEnumConstructorCall(org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitEnumConstructorCall(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall)>(r0, r1);

        return;
    }

    public void visitEnumConstructorCall(org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitEnumConstructorCall(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitEnumConstructorCall(org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitEnumConstructorCall(org.jetbrains.kotlin.ir.expressions.IrEnumConstructorCall,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitEnumEntry(org.jetbrains.kotlin.ir.declarations.IrEnumEntry)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrEnumEntry r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrEnumEntry;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitEnumEntry(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrEnumEntry)>(r0, r1);

        return;
    }

    public void visitEnumEntry(org.jetbrains.kotlin.ir.declarations.IrEnumEntry, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrEnumEntry r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrEnumEntry;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitEnumEntry(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrEnumEntry,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitEnumEntry(org.jetbrains.kotlin.ir.declarations.IrEnumEntry, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrEnumEntry r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrEnumEntry;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitEnumEntry(org.jetbrains.kotlin.ir.declarations.IrEnumEntry,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitErrorCallExpression(org.jetbrains.kotlin.ir.expressions.IrErrorCallExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrErrorCallExpression r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrErrorCallExpression;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitErrorCallExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrErrorCallExpression)>(r0, r1);

        return;
    }

    public void visitErrorCallExpression(org.jetbrains.kotlin.ir.expressions.IrErrorCallExpression, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrErrorCallExpression r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrErrorCallExpression;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitErrorCallExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrErrorCallExpression,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitErrorCallExpression(org.jetbrains.kotlin.ir.expressions.IrErrorCallExpression, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrErrorCallExpression r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrErrorCallExpression;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitErrorCallExpression(org.jetbrains.kotlin.ir.expressions.IrErrorCallExpression,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitErrorDeclaration(org.jetbrains.kotlin.ir.declarations.IrErrorDeclaration)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrErrorDeclaration r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrErrorDeclaration;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitErrorDeclaration(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrErrorDeclaration)>(r0, r1);

        return;
    }

    public void visitErrorDeclaration(org.jetbrains.kotlin.ir.declarations.IrErrorDeclaration, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrErrorDeclaration r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrErrorDeclaration;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitErrorDeclaration(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrErrorDeclaration,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitErrorDeclaration(org.jetbrains.kotlin.ir.declarations.IrErrorDeclaration, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrErrorDeclaration r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrErrorDeclaration;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitErrorDeclaration(org.jetbrains.kotlin.ir.declarations.IrErrorDeclaration,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitErrorExpression(org.jetbrains.kotlin.ir.expressions.IrErrorExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrErrorExpression r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrErrorExpression;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitErrorExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrErrorExpression)>(r0, r1);

        return;
    }

    public void visitErrorExpression(org.jetbrains.kotlin.ir.expressions.IrErrorExpression, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrErrorExpression r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrErrorExpression;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitErrorExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrErrorExpression,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitErrorExpression(org.jetbrains.kotlin.ir.expressions.IrErrorExpression, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrErrorExpression r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrErrorExpression;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitErrorExpression(org.jetbrains.kotlin.ir.expressions.IrErrorExpression,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitExpression(org.jetbrains.kotlin.ir.expressions.IrExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrExpression;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrExpression)>(r0, r1);

        return;
    }

    public void visitExpression(org.jetbrains.kotlin.ir.expressions.IrExpression, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrExpression;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrExpression,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitExpression(org.jetbrains.kotlin.ir.expressions.IrExpression, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrExpression;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitExpression(org.jetbrains.kotlin.ir.expressions.IrExpression,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitExternalPackageFragment(org.jetbrains.kotlin.ir.declarations.IrExternalPackageFragment)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrExternalPackageFragment r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrExternalPackageFragment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitExternalPackageFragment(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrExternalPackageFragment)>(r0, r1);

        return;
    }

    public void visitExternalPackageFragment(org.jetbrains.kotlin.ir.declarations.IrExternalPackageFragment, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrExternalPackageFragment r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrExternalPackageFragment;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitExternalPackageFragment(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrExternalPackageFragment,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitExternalPackageFragment(org.jetbrains.kotlin.ir.declarations.IrExternalPackageFragment, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrExternalPackageFragment r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrExternalPackageFragment;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitExternalPackageFragment(org.jetbrains.kotlin.ir.declarations.IrExternalPackageFragment,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitFieldAccess(org.jetbrains.kotlin.ir.expressions.IrFieldAccessExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrFieldAccessExpression r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrFieldAccessExpression;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitFieldAccess(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrFieldAccessExpression)>(r0, r1);

        return;
    }

    public void visitFieldAccess(org.jetbrains.kotlin.ir.expressions.IrFieldAccessExpression, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrFieldAccessExpression r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrFieldAccessExpression;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitFieldAccess(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrFieldAccessExpression,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitFieldAccess(org.jetbrains.kotlin.ir.expressions.IrFieldAccessExpression, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrFieldAccessExpression r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrFieldAccessExpression;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitFieldAccess(org.jetbrains.kotlin.ir.expressions.IrFieldAccessExpression,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitGetClass(org.jetbrains.kotlin.ir.expressions.IrGetClass)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetClass r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetClass;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitGetClass(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrGetClass)>(r0, r1);

        return;
    }

    public void visitGetClass(org.jetbrains.kotlin.ir.expressions.IrGetClass, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetClass r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetClass;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitGetClass(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrGetClass,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitGetClass(org.jetbrains.kotlin.ir.expressions.IrGetClass, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetClass r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetClass;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitGetClass(org.jetbrains.kotlin.ir.expressions.IrGetClass,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitMemberAccess(org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitMemberAccess(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression)>(r0, r1);

        return;
    }

    public void visitMemberAccess(org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitMemberAccess(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitMemberAccess(org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitMemberAccess(org.jetbrains.kotlin.ir.expressions.IrMemberAccessExpression,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitPackageFragment(org.jetbrains.kotlin.ir.declarations.IrPackageFragment)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrPackageFragment r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrPackageFragment;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitPackageFragment(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrPackageFragment)>(r0, r1);

        return;
    }

    public void visitPackageFragment(org.jetbrains.kotlin.ir.declarations.IrPackageFragment, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrPackageFragment r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrPackageFragment;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitPackageFragment(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrPackageFragment,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitPackageFragment(org.jetbrains.kotlin.ir.declarations.IrPackageFragment, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrPackageFragment r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrPackageFragment;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitPackageFragment(org.jetbrains.kotlin.ir.declarations.IrPackageFragment,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitRawFunctionReference(org.jetbrains.kotlin.ir.expressions.IrRawFunctionReference)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrRawFunctionReference r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrRawFunctionReference;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitRawFunctionReference(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrRawFunctionReference)>(r0, r1);

        return;
    }

    public void visitRawFunctionReference(org.jetbrains.kotlin.ir.expressions.IrRawFunctionReference, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrRawFunctionReference r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrRawFunctionReference;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitRawFunctionReference(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrRawFunctionReference,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitRawFunctionReference(org.jetbrains.kotlin.ir.expressions.IrRawFunctionReference, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrRawFunctionReference r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrRawFunctionReference;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitRawFunctionReference(org.jetbrains.kotlin.ir.expressions.IrRawFunctionReference,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitScript(org.jetbrains.kotlin.ir.declarations.IrScript)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrScript r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrScript;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitScript(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrScript)>(r0, r1);

        return;
    }

    public void visitScript(org.jetbrains.kotlin.ir.declarations.IrScript, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrScript r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrScript;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "declaration");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitScript(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.declarations.IrScript,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitScript(org.jetbrains.kotlin.ir.declarations.IrScript, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.declarations.IrScript r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.declarations.IrScript;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitScript(org.jetbrains.kotlin.ir.declarations.IrScript,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitSingletonReference(org.jetbrains.kotlin.ir.expressions.IrGetSingletonValue)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetSingletonValue r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetSingletonValue;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitSingletonReference(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrGetSingletonValue)>(r0, r1);

        return;
    }

    public void visitSingletonReference(org.jetbrains.kotlin.ir.expressions.IrGetSingletonValue, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetSingletonValue r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetSingletonValue;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitSingletonReference(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrGetSingletonValue,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitSingletonReference(org.jetbrains.kotlin.ir.expressions.IrGetSingletonValue, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrGetSingletonValue r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrGetSingletonValue;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitSingletonReference(org.jetbrains.kotlin.ir.expressions.IrGetSingletonValue,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitSuspendableExpression(org.jetbrains.kotlin.ir.expressions.IrSuspendableExpression)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSuspendableExpression r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSuspendableExpression;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitSuspendableExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrSuspendableExpression)>(r0, r1);

        return;
    }

    public void visitSuspendableExpression(org.jetbrains.kotlin.ir.expressions.IrSuspendableExpression, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSuspendableExpression r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSuspendableExpression;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitSuspendableExpression(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrSuspendableExpression,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitSuspendableExpression(org.jetbrains.kotlin.ir.expressions.IrSuspendableExpression, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSuspendableExpression r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSuspendableExpression;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitSuspendableExpression(org.jetbrains.kotlin.ir.expressions.IrSuspendableExpression,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitSuspensionPoint(org.jetbrains.kotlin.ir.expressions.IrSuspensionPoint)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSuspensionPoint r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSuspensionPoint;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitSuspensionPoint(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrSuspensionPoint)>(r0, r1);

        return;
    }

    public void visitSuspensionPoint(org.jetbrains.kotlin.ir.expressions.IrSuspensionPoint, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSuspensionPoint r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSuspensionPoint;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitSuspensionPoint(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrSuspensionPoint,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitSuspensionPoint(org.jetbrains.kotlin.ir.expressions.IrSuspensionPoint, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSuspensionPoint r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSuspensionPoint;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitSuspensionPoint(org.jetbrains.kotlin.ir.expressions.IrSuspensionPoint,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitSyntheticBody(org.jetbrains.kotlin.ir.expressions.IrSyntheticBody)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSyntheticBody r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSyntheticBody;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "body");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitSyntheticBody(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrSyntheticBody)>(r0, r1);

        return;
    }

    public void visitSyntheticBody(org.jetbrains.kotlin.ir.expressions.IrSyntheticBody, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSyntheticBody r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSyntheticBody;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "body");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitSyntheticBody(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrSyntheticBody,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitSyntheticBody(org.jetbrains.kotlin.ir.expressions.IrSyntheticBody, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrSyntheticBody r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrSyntheticBody;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitSyntheticBody(org.jetbrains.kotlin.ir.expressions.IrSyntheticBody,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public void visitValueAccess(org.jetbrains.kotlin.ir.expressions.IrValueAccessExpression, java.lang.Void)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrValueAccessExpression r1;
        java.lang.Void r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrValueAccessExpression;

        r2 := @parameter1: java.lang.Void;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "expression");

        staticinvoke <org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid$DefaultImpls: void visitValueAccess(org.jetbrains.kotlin.ir.visitors.IrElementVisitorVoid,org.jetbrains.kotlin.ir.expressions.IrValueAccessExpression,java.lang.Void)>(r0, r1, r2);

        return;
    }

    public volatile java.lang.Object visitValueAccess(org.jetbrains.kotlin.ir.expressions.IrValueAccessExpression, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r0;
        org.jetbrains.kotlin.ir.expressions.IrValueAccessExpression r1;
        java.lang.Object r2;
        java.lang.Void $r3;
        kotlin.Unit $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrValueAccessExpression;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Void) r2;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void visitValueAccess(org.jetbrains.kotlin.ir.expressions.IrValueAccessExpression,java.lang.Void)>(r1, $r3);

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r4;
    }

    public static final org.jetbrains.kotlin.utils.Printer access$getPrinter$p(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r0;
        org.jetbrains.kotlin.utils.Printer $r1;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 = $r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer printer>;

        return $r1;
    }

    public static final org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor, java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r0;
        java.lang.Object r1;
        org.jetbrains.kotlin.utils.Printer $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter1: java.lang.Object;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println(java.lang.Object)>(r1);

        return $r2;
    }

    public static final void access$indented(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor, kotlin.jvm.functions.Function0)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r0;
        kotlin.jvm.functions.Function0 r1;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter1: kotlin.jvm.functions.Function0;

        specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void indented(kotlin.jvm.functions.Function0)>(r1);

        return;
    }

    public static final org.jetbrains.kotlin.utils.Printer access$println(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r0;
        org.jetbrains.kotlin.utils.Printer $r1;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: org.jetbrains.kotlin.utils.Printer println()>();

        return $r1;
    }

    public static final void access$print(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor, org.jetbrains.kotlin.ir.IrElement)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r0;
        org.jetbrains.kotlin.ir.IrElement $r1;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter1: org.jetbrains.kotlin.ir.IrElement;

        specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void print(org.jetbrains.kotlin.ir.IrElement)>($r1);

        return;
    }

    public static final java.lang.String access$renderSrc(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor, org.jetbrains.kotlin.ir.types.IrType)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r0;
        org.jetbrains.kotlin.ir.types.IrType $r1;
        java.lang.String $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter1: org.jetbrains.kotlin.ir.types.IrType;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderSrc(org.jetbrains.kotlin.ir.types.IrType)>($r1);

        return $r2;
    }

    public static final java.lang.String access$renderTypeArgument(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor, org.jetbrains.kotlin.ir.types.IrTypeArgument)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r0;
        org.jetbrains.kotlin.ir.types.IrTypeArgument $r1;
        java.lang.String $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        $r1 := @parameter1: org.jetbrains.kotlin.ir.types.IrTypeArgument;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderTypeArgument(org.jetbrains.kotlin.ir.types.IrTypeArgument)>($r1);

        return $r2;
    }

    public static final java.lang.String access$renderAsAnnotation(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor, org.jetbrains.kotlin.ir.expressions.IrConstructorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r0;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall r1;
        java.lang.String $r2;

        $r0 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r1 := @parameter1: org.jetbrains.kotlin.ir.expressions.IrConstructorCall;

        $r2 = specialinvoke $r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String renderAsAnnotation(org.jetbrains.kotlin.ir.expressions.IrConstructorCall)>(r1);

        return $r2;
    }

androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1: org.jetbrains.kotlin.ir.expressions.IrExpression $arg>
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1: kotlin.jvm.internal.Ref$BooleanRef $useParameterNames$inlined>
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1: java.util.List $arguments$inlined>
    void <init>(org.jetbrains.kotlin.ir.expressions.IrExpression, androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor, kotlin.jvm.internal.Ref$BooleanRef, java.util.List)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression r1;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r2;
        kotlin.jvm.internal.Ref$BooleanRef r3;
        java.util.List r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrExpression;

        r2 := @parameter1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r3 := @parameter2: kotlin.jvm.internal.Ref$BooleanRef;

        r4 := @parameter3: java.util.List;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1: org.jetbrains.kotlin.ir.expressions.IrExpression $arg> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0> = r2;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1: kotlin.jvm.internal.Ref$BooleanRef $useParameterNames$inlined> = r3;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1: java.util.List $arguments$inlined> = r4;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1;

        virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

    public final void invoke()
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrExpression $r1;
        org.jetbrains.kotlin.ir.IrElement $r2;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1;

        $r3 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>;

        $r1 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printArgumentList$$inlined$forEachIndexed$lambda$1: org.jetbrains.kotlin.ir.expressions.IrExpression $arg>;

        $r2 = (org.jetbrains.kotlin.ir.IrElement) $r1;

        staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: void access$print(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,org.jetbrains.kotlin.ir.IrElement)>($r3, $r2);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>
    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2 r0;
        java.lang.Object r1;
        org.jetbrains.kotlin.ir.types.IrType $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.jetbrains.kotlin.ir.types.IrType) r1;

        $r3 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2: java.lang.CharSequence invoke(org.jetbrains.kotlin.ir.types.IrType)>($r2);

        return $r3;
    }

    public final java.lang.CharSequence invoke(org.jetbrains.kotlin.ir.types.IrType)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2 r0;
        org.jetbrains.kotlin.ir.types.IrType r1;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2;

        r1 := @parameter0: org.jetbrains.kotlin.ir.types.IrType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String access$renderSrc(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,org.jetbrains.kotlin.ir.types.IrType)>($r2, r1);

        $r4 = (java.lang.CharSequence) $r3;

        return $r4;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2 r0;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$printAsObject$2: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1: org.jetbrains.kotlin.ir.types.IrTypeAbbreviation $this_renderTypeAbbreviation$inlined>
    void <init>(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor, org.jetbrains.kotlin.ir.types.IrTypeAbbreviation)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r1;
        org.jetbrains.kotlin.ir.types.IrTypeAbbreviation r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r2 := @parameter1: org.jetbrains.kotlin.ir.types.IrTypeAbbreviation;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1: org.jetbrains.kotlin.ir.types.IrTypeAbbreviation $this_renderTypeAbbreviation$inlined> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1 r0;
        java.lang.Object r1;
        org.jetbrains.kotlin.ir.types.IrTypeArgument $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.jetbrains.kotlin.ir.types.IrTypeArgument) r1;

        $r3 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1: java.lang.CharSequence invoke(org.jetbrains.kotlin.ir.types.IrTypeArgument)>($r2);

        return $r3;
    }

    public final java.lang.CharSequence invoke(org.jetbrains.kotlin.ir.types.IrTypeArgument)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1 r0;
        org.jetbrains.kotlin.ir.types.IrTypeArgument r1;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1;

        r1 := @parameter0: org.jetbrains.kotlin.ir.types.IrTypeArgument;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAbbreviation$$inlined$buildString$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String access$renderTypeArgument(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,org.jetbrains.kotlin.ir.types.IrTypeArgument)>($r2, r1);

        $r4 = (java.lang.CharSequence) $r3;

        return $r4;
    }

androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>
    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1 r0;
        java.lang.Object r1;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.jetbrains.kotlin.ir.expressions.IrConstructorCall) r1;

        $r3 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1: java.lang.CharSequence invoke(org.jetbrains.kotlin.ir.expressions.IrConstructorCall)>($r2);

        return $r3;
    }

    public final java.lang.CharSequence invoke(org.jetbrains.kotlin.ir.expressions.IrConstructorCall)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1 r0;
        org.jetbrains.kotlin.ir.expressions.IrConstructorCall r1;
        java.lang.StringBuilder $r2, $r3, $r6, $r7;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r4;
        java.lang.String $r5, $r8;
        java.lang.CharSequence $r9;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1;

        r1 := @parameter0: org.jetbrains.kotlin.ir.expressions.IrConstructorCall;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@[");

        $r4 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>;

        $r5 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String access$renderAsAnnotation(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,org.jetbrains.kotlin.ir.expressions.IrConstructorCall)>($r4, r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = (java.lang.CharSequence) $r8;

        return $r9;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeAnnotations$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1: org.jetbrains.kotlin.ir.types.IrType $this_renderTypeInner$inlined>
    void <init>(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor, org.jetbrains.kotlin.ir.types.IrType)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r1;
        org.jetbrains.kotlin.ir.types.IrType r2;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r2 := @parameter1: org.jetbrains.kotlin.ir.types.IrType;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0> = r1;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1: org.jetbrains.kotlin.ir.types.IrType $this_renderTypeInner$inlined> = r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1 r0;
        java.lang.Object r1;
        org.jetbrains.kotlin.ir.types.IrTypeArgument $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.jetbrains.kotlin.ir.types.IrTypeArgument) r1;

        $r3 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1: java.lang.CharSequence invoke(org.jetbrains.kotlin.ir.types.IrTypeArgument)>($r2);

        return $r3;
    }

    public final java.lang.CharSequence invoke(org.jetbrains.kotlin.ir.types.IrTypeArgument)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1 r0;
        org.jetbrains.kotlin.ir.types.IrTypeArgument r1;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1;

        r1 := @parameter0: org.jetbrains.kotlin.ir.types.IrTypeArgument;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$renderTypeInner$$inlined$buildTrimEnd$lambda$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String access$renderTypeArgument(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,org.jetbrains.kotlin.ir.types.IrTypeArgument)>($r2, r1);

        $r4 = (java.lang.CharSequence) $r3;

        return $r4;
    }

androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>
    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3 r0;
        java.lang.Object r1;
        org.jetbrains.kotlin.ir.types.IrType $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.jetbrains.kotlin.ir.types.IrType) r1;

        $r3 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3: java.lang.CharSequence invoke(org.jetbrains.kotlin.ir.types.IrType)>($r2);

        return $r3;
    }

    public final java.lang.CharSequence invoke(org.jetbrains.kotlin.ir.types.IrType)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3 r0;
        org.jetbrains.kotlin.ir.types.IrType r1;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3;

        r1 := @parameter0: org.jetbrains.kotlin.ir.types.IrType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String access$renderSrc(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,org.jetbrains.kotlin.ir.types.IrType)>($r2, r1);

        $r4 = (java.lang.CharSequence) $r3;

        return $r4;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3 r0;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitClass$3: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>
    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1 r0;
        java.lang.Object r1;
        org.jetbrains.kotlin.ir.types.IrType $r2;
        java.lang.CharSequence $r3;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.jetbrains.kotlin.ir.types.IrType) r1;

        $r3 = virtualinvoke r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1: java.lang.CharSequence invoke(org.jetbrains.kotlin.ir.types.IrType)>($r2);

        return $r3;
    }

    public final java.lang.CharSequence invoke(org.jetbrains.kotlin.ir.types.IrType)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1 r0;
        org.jetbrains.kotlin.ir.types.IrType r1;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1;

        r1 := @parameter0: org.jetbrains.kotlin.ir.types.IrType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0>;

        $r3 = staticinvoke <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor: java.lang.String access$renderSrc(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor,org.jetbrains.kotlin.ir.types.IrType)>($r2, r1);

        $r4 = (java.lang.CharSequence) $r3;

        return $r4;
    }

    void <init>(androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor)
    {
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1 r0;
        androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor r1;

        r0 := @this: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1;

        r1 := @parameter0: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor;

        r0.<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$visitTypeParameter$1: androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor this$0> = r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$WhenMappings
<androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$WhenMappings: int[] $EnumSwitchMapping$0>
    static void <clinit>()
    {
        org.jetbrains.kotlin.ir.expressions.IrTypeOperator[] $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1, $r3, $r5, $r7;
        org.jetbrains.kotlin.ir.expressions.IrTypeOperator $r2, $r4, $r6;

        $r0 = staticinvoke <org.jetbrains.kotlin.ir.expressions.IrTypeOperator: org.jetbrains.kotlin.ir.expressions.IrTypeOperator[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$WhenMappings: int[] $EnumSwitchMapping$0> = $r1;

        $r3 = <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$WhenMappings: int[] $EnumSwitchMapping$0>;

        $r2 = <org.jetbrains.kotlin.ir.expressions.IrTypeOperator: org.jetbrains.kotlin.ir.expressions.IrTypeOperator IMPLICIT_COERCION_TO_UNIT>;

        $i1 = virtualinvoke $r2.<org.jetbrains.kotlin.ir.expressions.IrTypeOperator: int ordinal()>();

        $r3[$i1] = 1;

        $r5 = <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$WhenMappings: int[] $EnumSwitchMapping$0>;

        $r4 = <org.jetbrains.kotlin.ir.expressions.IrTypeOperator: org.jetbrains.kotlin.ir.expressions.IrTypeOperator NOT_INSTANCEOF>;

        $i2 = virtualinvoke $r4.<org.jetbrains.kotlin.ir.expressions.IrTypeOperator: int ordinal()>();

        $r5[$i2] = 2;

        $r7 = <androidx.compose.compiler.plugins.kotlin.lower.IrSourcePrinterVisitor$WhenMappings: int[] $EnumSwitchMapping$0>;

        $r6 = <org.jetbrains.kotlin.ir.expressions.IrTypeOperator: org.jetbrains.kotlin.ir.expressions.IrTypeOperator CAST>;

        $i3 = virtualinvoke $r6.<org.jetbrains.kotlin.ir.expressions.IrTypeOperator: int ordinal()>();

        $r7[$i3] = 3;

        return;
    }

