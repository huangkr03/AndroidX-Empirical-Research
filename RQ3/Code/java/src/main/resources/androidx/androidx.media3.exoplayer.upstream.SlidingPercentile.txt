androidx.media3.exoplayer.upstream.SlidingPercentile
<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.Comparator INDEX_COMPARATOR>
<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.Comparator VALUE_COMPARATOR>
<androidx.media3.exoplayer.upstream.SlidingPercentile: int SORT_ORDER_NONE>
<androidx.media3.exoplayer.upstream.SlidingPercentile: int SORT_ORDER_BY_VALUE>
<androidx.media3.exoplayer.upstream.SlidingPercentile: int SORT_ORDER_BY_INDEX>
<androidx.media3.exoplayer.upstream.SlidingPercentile: int MAX_RECYCLED_SAMPLES>
<androidx.media3.exoplayer.upstream.SlidingPercentile: int maxWeight>
<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.ArrayList samples>
<androidx.media3.exoplayer.upstream.SlidingPercentile: androidx.media3.exoplayer.upstream.SlidingPercentile$Sample[] recycledSamples>
<androidx.media3.exoplayer.upstream.SlidingPercentile: int currentSortOrder>
<androidx.media3.exoplayer.upstream.SlidingPercentile: int nextSampleIndex>
<androidx.media3.exoplayer.upstream.SlidingPercentile: int totalWeight>
<androidx.media3.exoplayer.upstream.SlidingPercentile: int recycledSampleCount>
    public void <init>(int)
    {
        androidx.media3.exoplayer.upstream.SlidingPercentile r0;
        int i0;
        androidx.media3.exoplayer.upstream.SlidingPercentile$Sample[] $r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.media3.exoplayer.upstream.SlidingPercentile;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int maxWeight> = i0;

        $r1 = newarray (androidx.media3.exoplayer.upstream.SlidingPercentile$Sample)[5];

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: androidx.media3.exoplayer.upstream.SlidingPercentile$Sample[] recycledSamples> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.ArrayList samples> = $r2;

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int currentSortOrder> = -1;

        return;
    }

    public void reset()
    {
        androidx.media3.exoplayer.upstream.SlidingPercentile r0;
        java.util.ArrayList $r1;

        r0 := @this: androidx.media3.exoplayer.upstream.SlidingPercentile;

        $r1 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.ArrayList samples>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int currentSortOrder> = -1;

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int nextSampleIndex> = 0;

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int totalWeight> = 0;

        return;
    }

    public void addSample(int, float)
    {
        androidx.media3.exoplayer.upstream.SlidingPercentile r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        float f0;
        androidx.media3.exoplayer.upstream.SlidingPercentile$Sample r1, r2, $r12;
        java.util.ArrayList $r3, $r4, $r6;
        java.lang.Object $r5;
        androidx.media3.exoplayer.upstream.SlidingPercentile$Sample[] $r8, $r9;

        r0 := @this: androidx.media3.exoplayer.upstream.SlidingPercentile;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: void ensureSortedByIndex()>();

        $i2 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int recycledSampleCount>;

        if $i2 <= 0 goto label1;

        $r9 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: androidx.media3.exoplayer.upstream.SlidingPercentile$Sample[] recycledSamples>;

        $i20 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int recycledSampleCount>;

        $i21 = $i20 - 1;

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int recycledSampleCount> = $i21;

        $r12 = $r9[$i21];

        goto label2;

     label1:
        $r12 = new androidx.media3.exoplayer.upstream.SlidingPercentile$Sample;

        specialinvoke $r12.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: void <init>(androidx.media3.exoplayer.upstream.SlidingPercentile$1)>(null);

     label2:
        r1 = $r12;

        $i3 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int nextSampleIndex>;

        $i4 = $i3 + 1;

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int nextSampleIndex> = $i4;

        r1.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: int index> = $i3;

        r1.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: int weight> = i0;

        r1.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: float value> = f0;

        $r3 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.ArrayList samples>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $i5 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int totalWeight>;

        $i6 = $i5 + i0;

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int totalWeight> = $i6;

     label3:
        $i22 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int totalWeight>;

        $i23 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int maxWeight>;

        if $i22 <= $i23 goto label6;

        $i8 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int totalWeight>;

        $i7 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int maxWeight>;

        i1 = $i8 - $i7;

        $r4 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.ArrayList samples>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r2 = (androidx.media3.exoplayer.upstream.SlidingPercentile$Sample) $r5;

        $i9 = r2.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: int weight>;

        if $i9 > i1 goto label4;

        $i15 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int totalWeight>;

        $i14 = r2.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: int weight>;

        $i16 = $i15 - $i14;

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int totalWeight> = $i16;

        $r6 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.ArrayList samples>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $i17 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int recycledSampleCount>;

        if $i17 >= 5 goto label5;

        $r8 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: androidx.media3.exoplayer.upstream.SlidingPercentile$Sample[] recycledSamples>;

        $i18 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int recycledSampleCount>;

        $i19 = $i18 + 1;

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int recycledSampleCount> = $i19;

        $r8[$i18] = r2;

        goto label5;

     label4:
        $i10 = r2.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: int weight>;

        $i11 = $i10 - i1;

        r2.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: int weight> = $i11;

        $i12 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int totalWeight>;

        $i13 = $i12 - i1;

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int totalWeight> = $i13;

     label5:
        goto label3;

     label6:
        return;
    }

    public float getPercentile(float)
    {
        androidx.media3.exoplayer.upstream.SlidingPercentile r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        androidx.media3.exoplayer.upstream.SlidingPercentile$Sample r1, $r7;
        int $i0, $i1, $i2, $i3, $i4, i6, i7;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r8;
        boolean $z0;
        java.lang.Object $r6, $r9;
        byte $b5;

        r0 := @this: androidx.media3.exoplayer.upstream.SlidingPercentile;

        f0 := @parameter0: float;

        specialinvoke r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: void ensureSortedByValue()>();

        $i0 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int totalWeight>;

        $f2 = (float) $i0;

        f1 = f0 * $f2;

        i6 = 0;

        i7 = 0;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.ArrayList samples>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i7 >= $i1 goto label3;

        $r8 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.ArrayList samples>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r1 = (androidx.media3.exoplayer.upstream.SlidingPercentile$Sample) $r9;

        $i4 = r1.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: int weight>;

        i6 = i6 + $i4;

        $f3 = (float) i6;

        $b5 = $f3 cmpl f1;

        if $b5 < 0 goto label2;

        $f4 = r1.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: float value>;

        return $f4;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        $r3 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.ArrayList samples>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $f5 = #NaNF;

        goto label5;

     label4:
        $r5 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.ArrayList samples>;

        $r4 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.ArrayList samples>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i3 = $i2 - 1;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r7 = (androidx.media3.exoplayer.upstream.SlidingPercentile$Sample) $r6;

        $f5 = $r7.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: float value>;

     label5:
        return $f5;
    }

    private void ensureSortedByIndex()
    {
        androidx.media3.exoplayer.upstream.SlidingPercentile r0;
        int $i0;
        java.util.Comparator $r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.media3.exoplayer.upstream.SlidingPercentile;

        $i0 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int currentSortOrder>;

        if $i0 == 1 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.ArrayList samples>;

        $r1 = <androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.Comparator INDEX_COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r1);

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int currentSortOrder> = 1;

     label1:
        return;
    }

    private void ensureSortedByValue()
    {
        androidx.media3.exoplayer.upstream.SlidingPercentile r0;
        int $i0;
        java.util.Comparator $r1;
        java.util.ArrayList $r2;

        r0 := @this: androidx.media3.exoplayer.upstream.SlidingPercentile;

        $i0 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int currentSortOrder>;

        if $i0 == 0 goto label1;

        $r2 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.ArrayList samples>;

        $r1 = <androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.Comparator VALUE_COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r1);

        r0.<androidx.media3.exoplayer.upstream.SlidingPercentile: int currentSortOrder> = 0;

     label1:
        return;
    }

    private static int lambda$static$1(androidx.media3.exoplayer.upstream.SlidingPercentile$Sample, androidx.media3.exoplayer.upstream.SlidingPercentile$Sample)
    {
        androidx.media3.exoplayer.upstream.SlidingPercentile$Sample r0, r1;
        float $f0, $f1;
        int $i0;

        r0 := @parameter0: androidx.media3.exoplayer.upstream.SlidingPercentile$Sample;

        r1 := @parameter1: androidx.media3.exoplayer.upstream.SlidingPercentile$Sample;

        $f1 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: float value>;

        $f0 = r1.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: float value>;

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f1, $f0);

        return $i0;
    }

    private static int lambda$static$0(androidx.media3.exoplayer.upstream.SlidingPercentile$Sample, androidx.media3.exoplayer.upstream.SlidingPercentile$Sample)
    {
        androidx.media3.exoplayer.upstream.SlidingPercentile$Sample r0, r1;
        int $i0, $i1, $i2;

        r0 := @parameter0: androidx.media3.exoplayer.upstream.SlidingPercentile$Sample;

        r1 := @parameter1: androidx.media3.exoplayer.upstream.SlidingPercentile$Sample;

        $i1 = r0.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: int index>;

        $i0 = r1.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: int index>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    static void <clinit>()
    {
        java.util.Comparator $r0, $r1;

        $r0 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.upstream.SlidingPercentile: int lambda$static$0(androidx.media3.exoplayer.upstream.SlidingPercentile$Sample,androidx.media3.exoplayer.upstream.SlidingPercentile$Sample)>, methodtype: int __METHODTYPE__(androidx.media3.exoplayer.upstream.SlidingPercentile$Sample,androidx.media3.exoplayer.upstream.SlidingPercentile$Sample));

        <androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.Comparator INDEX_COMPARATOR> = $r0;

        $r1 = dynamicinvoke "compare" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.exoplayer.upstream.SlidingPercentile: int lambda$static$1(androidx.media3.exoplayer.upstream.SlidingPercentile$Sample,androidx.media3.exoplayer.upstream.SlidingPercentile$Sample)>, methodtype: int __METHODTYPE__(androidx.media3.exoplayer.upstream.SlidingPercentile$Sample,androidx.media3.exoplayer.upstream.SlidingPercentile$Sample));

        <androidx.media3.exoplayer.upstream.SlidingPercentile: java.util.Comparator VALUE_COMPARATOR> = $r1;

        return;
    }

androidx.media3.exoplayer.upstream.SlidingPercentile$1
androidx.media3.exoplayer.upstream.SlidingPercentile$Sample
<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: int index>
<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: int weight>
<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: float value>
    private void <init>()
    {
        androidx.media3.exoplayer.upstream.SlidingPercentile$Sample r0;

        r0 := @this: androidx.media3.exoplayer.upstream.SlidingPercentile$Sample;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(androidx.media3.exoplayer.upstream.SlidingPercentile$1)
    {
        androidx.media3.exoplayer.upstream.SlidingPercentile$Sample r0;
        androidx.media3.exoplayer.upstream.SlidingPercentile$1 r1;

        r0 := @this: androidx.media3.exoplayer.upstream.SlidingPercentile$Sample;

        r1 := @parameter0: androidx.media3.exoplayer.upstream.SlidingPercentile$1;

        specialinvoke r0.<androidx.media3.exoplayer.upstream.SlidingPercentile$Sample: void <init>()>();

        return;
    }

