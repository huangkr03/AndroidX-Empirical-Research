androidx.media3.exoplayer.source.mediaparser.MediaParserUtil
<androidx.media3.exoplayer.source.mediaparser.MediaParserUtil: java.lang.String PARAMETER_IN_BAND_CRYPTO_INFO>
<androidx.media3.exoplayer.source.mediaparser.MediaParserUtil: java.lang.String PARAMETER_INCLUDE_SUPPLEMENTAL_DATA>
<androidx.media3.exoplayer.source.mediaparser.MediaParserUtil: java.lang.String PARAMETER_EAGERLY_EXPOSE_TRACK_TYPE>
<androidx.media3.exoplayer.source.mediaparser.MediaParserUtil: java.lang.String PARAMETER_EXPOSE_DUMMY_SEEK_MAP>
<androidx.media3.exoplayer.source.mediaparser.MediaParserUtil: java.lang.String PARAMETER_EXPOSE_CHUNK_INDEX_AS_MEDIA_FORMAT>
<androidx.media3.exoplayer.source.mediaparser.MediaParserUtil: java.lang.String PARAMETER_OVERRIDE_IN_BAND_CAPTION_DECLARATIONS>
<androidx.media3.exoplayer.source.mediaparser.MediaParserUtil: java.lang.String PARAMETER_EXPOSE_CAPTION_FORMATS>
<androidx.media3.exoplayer.source.mediaparser.MediaParserUtil: java.lang.String PARAMETER_IGNORE_TIMESTAMP_OFFSET>
    private void <init>()
    {
        androidx.media3.exoplayer.source.mediaparser.MediaParserUtil r0;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.MediaParserUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.media.MediaFormat toCaptionsMediaFormat(androidx.media3.common.Format)
    {
        androidx.media3.common.Format r0;
        android.media.MediaFormat r1, $r2;
        java.lang.String $r3;
        int $i0, $i1;

        r0 := @parameter0: androidx.media3.common.Format;

        $r2 = new android.media.MediaFormat;

        specialinvoke $r2.<android.media.MediaFormat: void <init>()>();

        r1 = $r2;

        $r3 = r0.<androidx.media3.common.Format: java.lang.String sampleMimeType>;

        virtualinvoke r1.<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>("mime", $r3);

        $i0 = r0.<androidx.media3.common.Format: int accessibilityChannel>;

        if $i0 == -1 goto label1;

        $i1 = r0.<androidx.media3.common.Format: int accessibilityChannel>;

        virtualinvoke r1.<android.media.MediaFormat: void setInteger(java.lang.String,int)>("caption-service-number", $i1);

     label1:
        return r1;
    }

    public static void setLogSessionIdOnMediaParser(android.media.MediaParser, androidx.media3.exoplayer.analytics.PlayerId)
    {
        android.media.MediaParser r0;
        androidx.media3.exoplayer.analytics.PlayerId r1;

        r0 := @parameter0: android.media.MediaParser;

        r1 := @parameter1: androidx.media3.exoplayer.analytics.PlayerId;

        staticinvoke <androidx.media3.exoplayer.source.mediaparser.MediaParserUtil$Api31: void setLogSessionIdOnMediaParser(android.media.MediaParser,androidx.media3.exoplayer.analytics.PlayerId)>(r0, r1);

        return;
    }

androidx.media3.exoplayer.source.mediaparser.MediaParserUtil$Api31
    private void <init>()
    {
        androidx.media3.exoplayer.source.mediaparser.MediaParserUtil$Api31 r0;

        r0 := @this: androidx.media3.exoplayer.source.mediaparser.MediaParserUtil$Api31;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setLogSessionIdOnMediaParser(android.media.MediaParser, androidx.media3.exoplayer.analytics.PlayerId)
    {
        android.media.MediaParser r0;
        androidx.media3.exoplayer.analytics.PlayerId r1;
        android.media.metrics.LogSessionId r2, $r3;
        boolean $z0;

        r0 := @parameter0: android.media.MediaParser;

        r1 := @parameter1: androidx.media3.exoplayer.analytics.PlayerId;

        r2 = virtualinvoke r1.<androidx.media3.exoplayer.analytics.PlayerId: android.media.metrics.LogSessionId getLogSessionId()>();

        $r3 = <android.media.metrics.LogSessionId: android.media.metrics.LogSessionId LOG_SESSION_ID_NONE>;

        $z0 = virtualinvoke r2.<android.media.metrics.LogSessionId: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<android.media.MediaParser: void setLogSessionId(android.media.metrics.LogSessionId)>(r2);

     label1:
        return;
    }

