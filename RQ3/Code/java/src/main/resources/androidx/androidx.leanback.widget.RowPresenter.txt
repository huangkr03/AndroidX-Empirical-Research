androidx.leanback.widget.RowPresenter
<androidx.leanback.widget.RowPresenter: int SYNC_ACTIVATED_CUSTOM>
<androidx.leanback.widget.RowPresenter: int SYNC_ACTIVATED_TO_EXPANDED>
<androidx.leanback.widget.RowPresenter: int SYNC_ACTIVATED_TO_SELECTED>
<androidx.leanback.widget.RowPresenter: int SYNC_ACTIVATED_TO_EXPANDED_AND_SELECTED>
<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter>
<androidx.leanback.widget.RowPresenter: boolean mSelectEffectEnabled>
<androidx.leanback.widget.RowPresenter: int mSyncActivatePolicy>
    public void <init>()
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowHeaderPresenter $r1, $r2;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        specialinvoke r0.<androidx.leanback.widget.Presenter: void <init>()>();

        $r1 = new androidx.leanback.widget.RowHeaderPresenter;

        specialinvoke $r1.<androidx.leanback.widget.RowHeaderPresenter: void <init>()>();

        r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter> = $r1;

        r0.<androidx.leanback.widget.RowPresenter: boolean mSelectEffectEnabled> = 1;

        r0.<androidx.leanback.widget.RowPresenter: int mSyncActivatePolicy> = 1;

        $r2 = r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter>;

        virtualinvoke $r2.<androidx.leanback.widget.RowHeaderPresenter: void setNullItemVisibilityGone(boolean)>(1);

        return;
    }

    public final androidx.leanback.widget.Presenter$ViewHolder onCreateViewHolder(android.view.ViewGroup)
    {
        androidx.leanback.widget.RowPresenter r0;
        android.view.ViewGroup r1, $r10;
        androidx.leanback.widget.RowPresenter$ViewHolder r2;
        androidx.leanback.widget.RowContainerView r3, $r5;
        boolean $z0, $z1;
        java.lang.RuntimeException $r4;
        android.content.Context $r6;
        androidx.leanback.widget.RowHeaderPresenter $r7, $r11;
        androidx.leanback.widget.RowPresenter$ContainerViewHolder $r8;
        android.view.View $r9;
        androidx.leanback.widget.Presenter$ViewHolder $r12, r14;
        androidx.leanback.widget.RowHeaderPresenter$ViewHolder $r13;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: android.view.ViewGroup;

        r2 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowPresenter$ViewHolder createRowViewHolder(android.view.ViewGroup)>(r1);

        r2.<androidx.leanback.widget.RowPresenter$ViewHolder: boolean mInitialzed> = 0;

        $z0 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: boolean needsRowContainerView()>();

        if $z0 == 0 goto label2;

        $r5 = new androidx.leanback.widget.RowContainerView;

        $r6 = virtualinvoke r1.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r5.<androidx.leanback.widget.RowContainerView: void <init>(android.content.Context)>($r6);

        r3 = $r5;

        $r7 = r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter>;

        if $r7 == null goto label1;

        $r11 = r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter>;

        $r9 = r2.<androidx.leanback.widget.RowPresenter$ViewHolder: android.view.View view>;

        $r10 = (android.view.ViewGroup) $r9;

        $r12 = virtualinvoke $r11.<androidx.leanback.widget.RowHeaderPresenter: androidx.leanback.widget.Presenter$ViewHolder onCreateViewHolder(android.view.ViewGroup)>($r10);

        $r13 = (androidx.leanback.widget.RowHeaderPresenter$ViewHolder) $r12;

        r2.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder> = $r13;

     label1:
        $r8 = new androidx.leanback.widget.RowPresenter$ContainerViewHolder;

        specialinvoke $r8.<androidx.leanback.widget.RowPresenter$ContainerViewHolder: void <init>(androidx.leanback.widget.RowContainerView,androidx.leanback.widget.RowPresenter$ViewHolder)>(r3, r2);

        r14 = $r8;

        goto label3;

     label2:
        r14 = r2;

     label3:
        virtualinvoke r0.<androidx.leanback.widget.RowPresenter: void initializeRowViewHolder(androidx.leanback.widget.RowPresenter$ViewHolder)>(r2);

        $z1 = r2.<androidx.leanback.widget.RowPresenter$ViewHolder: boolean mInitialzed>;

        if $z1 != 0 goto label4;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("super.initializeRowViewHolder() must be called");

        throw $r4;

     label4:
        return r14;
    }

<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowPresenter$ViewHolder createRowViewHolder(android.view.ViewGroup)>
    protected boolean isClippingChildren()
    {
        androidx.leanback.widget.RowPresenter r0;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        return 0;
    }

    protected void initializeRowViewHolder(androidx.leanback.widget.RowPresenter$ViewHolder)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowPresenter$ViewHolder r1;
        boolean $z0, $z1;
        android.view.View $r2, $r5, $r7;
        androidx.leanback.widget.RowPresenter$ContainerViewHolder $r3, $r4;
        android.view.ViewGroup $r6, $r8;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowPresenter$ViewHolder;

        r1.<androidx.leanback.widget.RowPresenter$ViewHolder: boolean mInitialzed> = 1;

        $z0 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: boolean isClippingChildren()>();

        if $z0 != 0 goto label2;

        $r2 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: android.view.View view>;

        $z1 = $r2 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label1;

        $r7 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: android.view.View view>;

        $r8 = (android.view.ViewGroup) $r7;

        virtualinvoke $r8.<android.view.ViewGroup: void setClipChildren(boolean)>(0);

     label1:
        $r3 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowPresenter$ContainerViewHolder mContainerViewHolder>;

        if $r3 == null goto label2;

        $r4 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowPresenter$ContainerViewHolder mContainerViewHolder>;

        $r5 = $r4.<androidx.leanback.widget.RowPresenter$ContainerViewHolder: android.view.View view>;

        $r6 = (android.view.ViewGroup) $r5;

        virtualinvoke $r6.<android.view.ViewGroup: void setClipChildren(boolean)>(0);

     label2:
        return;
    }

    public final void setHeaderPresenter(androidx.leanback.widget.RowHeaderPresenter)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowHeaderPresenter r1;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowHeaderPresenter;

        r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter> = r1;

        return;
    }

    public final androidx.leanback.widget.RowHeaderPresenter getHeaderPresenter()
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowHeaderPresenter $r1;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        $r1 = r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter>;

        return $r1;
    }

    public final androidx.leanback.widget.RowPresenter$ViewHolder getRowViewHolder(androidx.leanback.widget.Presenter$ViewHolder)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.Presenter$ViewHolder r1;
        boolean $z0;
        androidx.leanback.widget.RowPresenter$ViewHolder $r2, $r4;
        androidx.leanback.widget.RowPresenter$ContainerViewHolder $r3;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.Presenter$ViewHolder;

        $z0 = r1 instanceof androidx.leanback.widget.RowPresenter$ContainerViewHolder;

        if $z0 == 0 goto label1;

        $r3 = (androidx.leanback.widget.RowPresenter$ContainerViewHolder) r1;

        $r4 = $r3.<androidx.leanback.widget.RowPresenter$ContainerViewHolder: androidx.leanback.widget.RowPresenter$ViewHolder mRowViewHolder>;

        return $r4;

     label1:
        $r2 = (androidx.leanback.widget.RowPresenter$ViewHolder) r1;

        return $r2;
    }

    public final void setRowViewExpanded(androidx.leanback.widget.Presenter$ViewHolder, boolean)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.Presenter$ViewHolder r1;
        boolean z0;
        androidx.leanback.widget.RowPresenter$ViewHolder r2;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.Presenter$ViewHolder;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowPresenter$ViewHolder getRowViewHolder(androidx.leanback.widget.Presenter$ViewHolder)>(r1);

        r2.<androidx.leanback.widget.RowPresenter$ViewHolder: boolean mExpanded> = z0;

        virtualinvoke r0.<androidx.leanback.widget.RowPresenter: void onRowViewExpanded(androidx.leanback.widget.RowPresenter$ViewHolder,boolean)>(r2, z0);

        return;
    }

    public final void setRowViewSelected(androidx.leanback.widget.Presenter$ViewHolder, boolean)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.Presenter$ViewHolder r1;
        boolean z0;
        androidx.leanback.widget.RowPresenter$ViewHolder r2;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.Presenter$ViewHolder;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowPresenter$ViewHolder getRowViewHolder(androidx.leanback.widget.Presenter$ViewHolder)>(r1);

        r2.<androidx.leanback.widget.RowPresenter$ViewHolder: boolean mSelected> = z0;

        virtualinvoke r0.<androidx.leanback.widget.RowPresenter: void onRowViewSelected(androidx.leanback.widget.RowPresenter$ViewHolder,boolean)>(r2, z0);

        return;
    }

    protected void onRowViewExpanded(androidx.leanback.widget.RowPresenter$ViewHolder, boolean)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowPresenter$ViewHolder r1;
        boolean z0;
        android.view.View $r2;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowPresenter$ViewHolder;

        z0 := @parameter1: boolean;

        specialinvoke r0.<androidx.leanback.widget.RowPresenter: void updateHeaderViewVisibility(androidx.leanback.widget.RowPresenter$ViewHolder)>(r1);

        $r2 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: android.view.View view>;

        specialinvoke r0.<androidx.leanback.widget.RowPresenter: void updateActivateStatus(androidx.leanback.widget.RowPresenter$ViewHolder,android.view.View)>(r1, $r2);

        return;
    }

    private void updateActivateStatus(androidx.leanback.widget.RowPresenter$ViewHolder, android.view.View)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowPresenter$ViewHolder r1;
        android.view.View r2;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowPresenter$ViewHolder;

        r2 := @parameter1: android.view.View;

        $i0 = r0.<androidx.leanback.widget.RowPresenter: int mSyncActivatePolicy>;

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label6;
        };

     label1:
        $z3 = virtualinvoke r1.<androidx.leanback.widget.RowPresenter$ViewHolder: boolean isExpanded()>();

        virtualinvoke r1.<androidx.leanback.widget.RowPresenter$ViewHolder: void setActivated(boolean)>($z3);

        goto label6;

     label2:
        $z2 = virtualinvoke r1.<androidx.leanback.widget.RowPresenter$ViewHolder: boolean isSelected()>();

        virtualinvoke r1.<androidx.leanback.widget.RowPresenter$ViewHolder: void setActivated(boolean)>($z2);

        goto label6;

     label3:
        $z0 = virtualinvoke r1.<androidx.leanback.widget.RowPresenter$ViewHolder: boolean isExpanded()>();

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r1.<androidx.leanback.widget.RowPresenter$ViewHolder: boolean isSelected()>();

        if $z1 == 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        virtualinvoke r1.<androidx.leanback.widget.RowPresenter$ViewHolder: void setActivated(boolean)>($z4);

     label6:
        virtualinvoke r1.<androidx.leanback.widget.RowPresenter$ViewHolder: void syncActivatedStatus(android.view.View)>(r2);

        return;
    }

    public final void setSyncActivatePolicy(int)
    {
        androidx.leanback.widget.RowPresenter r0;
        int i0;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        i0 := @parameter0: int;

        r0.<androidx.leanback.widget.RowPresenter: int mSyncActivatePolicy> = i0;

        return;
    }

    public final int getSyncActivatePolicy()
    {
        androidx.leanback.widget.RowPresenter r0;
        int $i0;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        $i0 = r0.<androidx.leanback.widget.RowPresenter: int mSyncActivatePolicy>;

        return $i0;
    }

    protected void dispatchItemSelectedListener(androidx.leanback.widget.RowPresenter$ViewHolder, boolean)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowPresenter$ViewHolder r1;
        boolean z0;
        androidx.leanback.widget.BaseOnItemViewSelectedListener $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowPresenter$ViewHolder;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.BaseOnItemViewSelectedListener mOnItemViewSelectedListener>;

        if $r2 == null goto label1;

        $r3 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.BaseOnItemViewSelectedListener mOnItemViewSelectedListener>;

        $r4 = virtualinvoke r1.<androidx.leanback.widget.RowPresenter$ViewHolder: java.lang.Object getRowObject()>();

        interfaceinvoke $r3.<androidx.leanback.widget.BaseOnItemViewSelectedListener: void onItemSelected(androidx.leanback.widget.Presenter$ViewHolder,java.lang.Object,androidx.leanback.widget.RowPresenter$ViewHolder,java.lang.Object)>(null, null, r1, $r4);

     label1:
        return;
    }

    protected void onRowViewSelected(androidx.leanback.widget.RowPresenter$ViewHolder, boolean)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowPresenter$ViewHolder r1;
        boolean z0;
        android.view.View $r2;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowPresenter$ViewHolder;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<androidx.leanback.widget.RowPresenter: void dispatchItemSelectedListener(androidx.leanback.widget.RowPresenter$ViewHolder,boolean)>(r1, z0);

        specialinvoke r0.<androidx.leanback.widget.RowPresenter: void updateHeaderViewVisibility(androidx.leanback.widget.RowPresenter$ViewHolder)>(r1);

        $r2 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: android.view.View view>;

        specialinvoke r0.<androidx.leanback.widget.RowPresenter: void updateActivateStatus(androidx.leanback.widget.RowPresenter$ViewHolder,android.view.View)>(r1, $r2);

        return;
    }

    private void updateHeaderViewVisibility(androidx.leanback.widget.RowPresenter$ViewHolder)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowPresenter$ViewHolder r1;
        androidx.leanback.widget.RowContainerView r2;
        androidx.leanback.widget.RowHeaderPresenter $r3;
        androidx.leanback.widget.RowHeaderPresenter$ViewHolder $r4;
        androidx.leanback.widget.RowPresenter$ContainerViewHolder $r5;
        android.view.View $r6;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowPresenter$ViewHolder;

        $r3 = r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter>;

        if $r3 == null goto label1;

        $r4 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        if $r4 == null goto label1;

        $r5 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowPresenter$ContainerViewHolder mContainerViewHolder>;

        $r6 = $r5.<androidx.leanback.widget.RowPresenter$ContainerViewHolder: android.view.View view>;

        r2 = (androidx.leanback.widget.RowContainerView) $r6;

        $z0 = virtualinvoke r1.<androidx.leanback.widget.RowPresenter$ViewHolder: boolean isExpanded()>();

        virtualinvoke r2.<androidx.leanback.widget.RowContainerView: void showHeader(boolean)>($z0);

     label1:
        return;
    }

    public final void setSelectLevel(androidx.leanback.widget.Presenter$ViewHolder, float)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.Presenter$ViewHolder r1;
        float f0;
        androidx.leanback.widget.RowPresenter$ViewHolder r2;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.Presenter$ViewHolder;

        f0 := @parameter1: float;

        r2 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowPresenter$ViewHolder getRowViewHolder(androidx.leanback.widget.Presenter$ViewHolder)>(r1);

        r2.<androidx.leanback.widget.RowPresenter$ViewHolder: float mSelectLevel> = f0;

        virtualinvoke r0.<androidx.leanback.widget.RowPresenter: void onSelectLevelChanged(androidx.leanback.widget.RowPresenter$ViewHolder)>(r2);

        return;
    }

    public final float getSelectLevel(androidx.leanback.widget.Presenter$ViewHolder)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.Presenter$ViewHolder r1;
        androidx.leanback.widget.RowPresenter$ViewHolder $r2;
        float $f0;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.Presenter$ViewHolder;

        $r2 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowPresenter$ViewHolder getRowViewHolder(androidx.leanback.widget.Presenter$ViewHolder)>(r1);

        $f0 = $r2.<androidx.leanback.widget.RowPresenter$ViewHolder: float mSelectLevel>;

        return $f0;
    }

    protected void onSelectLevelChanged(androidx.leanback.widget.RowPresenter$ViewHolder)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowPresenter$ViewHolder r1;
        boolean $z0, $z1;
        float $f0, $f1;
        androidx.leanback.graphics.ColorOverlayDimmer $r2, $r6;
        androidx.leanback.widget.RowHeaderPresenter$ViewHolder $r3, $r9;
        androidx.leanback.widget.RowPresenter$ContainerViewHolder $r4;
        android.view.View $r5;
        androidx.leanback.widget.RowContainerView $r7;
        android.graphics.Paint $r8;
        int $i0;
        androidx.leanback.widget.RowHeaderPresenter $r10;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowPresenter$ViewHolder;

        $z0 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: boolean getSelectEffectEnabled()>();

        if $z0 == 0 goto label2;

        $r2 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.graphics.ColorOverlayDimmer mColorDimmer>;

        $f0 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: float mSelectLevel>;

        virtualinvoke $r2.<androidx.leanback.graphics.ColorOverlayDimmer: void setActiveLevel(float)>($f0);

        $r3 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        if $r3 == null goto label1;

        $r10 = r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter>;

        $r9 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        $f1 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: float mSelectLevel>;

        virtualinvoke $r10.<androidx.leanback.widget.RowHeaderPresenter: void setSelectLevel(androidx.leanback.widget.RowHeaderPresenter$ViewHolder,float)>($r9, $f1);

     label1:
        $z1 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: boolean isUsingDefaultSelectEffect()>();

        if $z1 == 0 goto label2;

        $r4 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowPresenter$ContainerViewHolder mContainerViewHolder>;

        $r5 = $r4.<androidx.leanback.widget.RowPresenter$ContainerViewHolder: android.view.View view>;

        $r7 = (androidx.leanback.widget.RowContainerView) $r5;

        $r6 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.graphics.ColorOverlayDimmer mColorDimmer>;

        $r8 = virtualinvoke $r6.<androidx.leanback.graphics.ColorOverlayDimmer: android.graphics.Paint getPaint()>();

        $i0 = virtualinvoke $r8.<android.graphics.Paint: int getColor()>();

        virtualinvoke $r7.<androidx.leanback.widget.RowContainerView: void setForegroundColor(int)>($i0);

     label2:
        return;
    }

    public final void setSelectEffectEnabled(boolean)
    {
        androidx.leanback.widget.RowPresenter r0;
        boolean z0;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        z0 := @parameter0: boolean;

        r0.<androidx.leanback.widget.RowPresenter: boolean mSelectEffectEnabled> = z0;

        return;
    }

    public final boolean getSelectEffectEnabled()
    {
        androidx.leanback.widget.RowPresenter r0;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        $z0 = r0.<androidx.leanback.widget.RowPresenter: boolean mSelectEffectEnabled>;

        return $z0;
    }

    public boolean isUsingDefaultSelectEffect()
    {
        androidx.leanback.widget.RowPresenter r0;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        return 1;
    }

    final boolean needsDefaultSelectEffect()
    {
        androidx.leanback.widget.RowPresenter r0;
        boolean $z0, $z1, $z2;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        $z0 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: boolean isUsingDefaultSelectEffect()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: boolean getSelectEffectEnabled()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    final boolean needsRowContainerView()
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowHeaderPresenter $r1;
        boolean $z0, $z1;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        $r1 = r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter>;

        if $r1 != null goto label1;

        $z0 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: boolean needsDefaultSelectEffect()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public final void onBindViewHolder(androidx.leanback.widget.Presenter$ViewHolder, java.lang.Object)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.Presenter$ViewHolder r1;
        java.lang.Object r2;
        androidx.leanback.widget.RowPresenter$ViewHolder $r3;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.Presenter$ViewHolder;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowPresenter$ViewHolder getRowViewHolder(androidx.leanback.widget.Presenter$ViewHolder)>(r1);

        virtualinvoke r0.<androidx.leanback.widget.RowPresenter: void onBindRowViewHolder(androidx.leanback.widget.RowPresenter$ViewHolder,java.lang.Object)>($r3, r2);

        return;
    }

    protected void onBindRowViewHolder(androidx.leanback.widget.RowPresenter$ViewHolder, java.lang.Object)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowPresenter$ViewHolder r1;
        java.lang.Object r2;
        boolean $z0;
        androidx.leanback.widget.RowHeaderPresenter$ViewHolder $r3, $r5;
        androidx.leanback.widget.Row $r4, $r8;
        androidx.leanback.widget.RowHeaderPresenter $r6;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowPresenter$ViewHolder;

        r2 := @parameter1: java.lang.Object;

        r1.<androidx.leanback.widget.RowPresenter$ViewHolder: java.lang.Object mRowObject> = r2;

        $z0 = r2 instanceof androidx.leanback.widget.Row;

        if $z0 == 0 goto label1;

        $r8 = (androidx.leanback.widget.Row) r2;

        goto label2;

     label1:
        $r8 = null;

     label2:
        r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.Row mRow> = $r8;

        $r3 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        if $r3 == null goto label3;

        $r4 = virtualinvoke r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.Row getRow()>();

        if $r4 == null goto label3;

        $r6 = r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter>;

        $r5 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        virtualinvoke $r6.<androidx.leanback.widget.RowHeaderPresenter: void onBindViewHolder(androidx.leanback.widget.Presenter$ViewHolder,java.lang.Object)>($r5, r2);

     label3:
        return;
    }

    public final void onUnbindViewHolder(androidx.leanback.widget.Presenter$ViewHolder)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.Presenter$ViewHolder r1;
        androidx.leanback.widget.RowPresenter$ViewHolder $r2;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.Presenter$ViewHolder;

        $r2 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowPresenter$ViewHolder getRowViewHolder(androidx.leanback.widget.Presenter$ViewHolder)>(r1);

        virtualinvoke r0.<androidx.leanback.widget.RowPresenter: void onUnbindRowViewHolder(androidx.leanback.widget.RowPresenter$ViewHolder)>($r2);

        return;
    }

    protected void onUnbindRowViewHolder(androidx.leanback.widget.RowPresenter$ViewHolder)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowPresenter$ViewHolder r1;
        androidx.leanback.widget.RowHeaderPresenter$ViewHolder $r2, $r3;
        androidx.leanback.widget.RowHeaderPresenter $r4;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowPresenter$ViewHolder;

        $r2 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        if $r2 == null goto label1;

        $r4 = r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter>;

        $r3 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        virtualinvoke $r4.<androidx.leanback.widget.RowHeaderPresenter: void onUnbindViewHolder(androidx.leanback.widget.Presenter$ViewHolder)>($r3);

     label1:
        r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.Row mRow> = null;

        r1.<androidx.leanback.widget.RowPresenter$ViewHolder: java.lang.Object mRowObject> = null;

        return;
    }

    public final void onViewAttachedToWindow(androidx.leanback.widget.Presenter$ViewHolder)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.Presenter$ViewHolder r1;
        androidx.leanback.widget.RowPresenter$ViewHolder $r2;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.Presenter$ViewHolder;

        $r2 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowPresenter$ViewHolder getRowViewHolder(androidx.leanback.widget.Presenter$ViewHolder)>(r1);

        virtualinvoke r0.<androidx.leanback.widget.RowPresenter: void onRowViewAttachedToWindow(androidx.leanback.widget.RowPresenter$ViewHolder)>($r2);

        return;
    }

    protected void onRowViewAttachedToWindow(androidx.leanback.widget.RowPresenter$ViewHolder)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowPresenter$ViewHolder r1;
        androidx.leanback.widget.RowHeaderPresenter$ViewHolder $r2, $r3;
        androidx.leanback.widget.RowHeaderPresenter $r4;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowPresenter$ViewHolder;

        $r2 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        if $r2 == null goto label1;

        $r4 = r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter>;

        $r3 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        virtualinvoke $r4.<androidx.leanback.widget.RowHeaderPresenter: void onViewAttachedToWindow(androidx.leanback.widget.Presenter$ViewHolder)>($r3);

     label1:
        return;
    }

    public final void onViewDetachedFromWindow(androidx.leanback.widget.Presenter$ViewHolder)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.Presenter$ViewHolder r1;
        androidx.leanback.widget.RowPresenter$ViewHolder $r2;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.Presenter$ViewHolder;

        $r2 = virtualinvoke r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowPresenter$ViewHolder getRowViewHolder(androidx.leanback.widget.Presenter$ViewHolder)>(r1);

        virtualinvoke r0.<androidx.leanback.widget.RowPresenter: void onRowViewDetachedFromWindow(androidx.leanback.widget.RowPresenter$ViewHolder)>($r2);

        return;
    }

    protected void onRowViewDetachedFromWindow(androidx.leanback.widget.RowPresenter$ViewHolder)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowPresenter$ViewHolder r1;
        androidx.leanback.widget.RowHeaderPresenter$ViewHolder $r2, $r4;
        android.view.View $r3;
        androidx.leanback.widget.RowHeaderPresenter $r5;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowPresenter$ViewHolder;

        $r2 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        if $r2 == null goto label1;

        $r5 = r0.<androidx.leanback.widget.RowPresenter: androidx.leanback.widget.RowHeaderPresenter mHeaderPresenter>;

        $r4 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        virtualinvoke $r5.<androidx.leanback.widget.RowHeaderPresenter: void onViewDetachedFromWindow(androidx.leanback.widget.Presenter$ViewHolder)>($r4);

     label1:
        $r3 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: android.view.View view>;

        staticinvoke <androidx.leanback.widget.RowPresenter: void cancelAnimationsRecursive(android.view.View)>($r3);

        return;
    }

    public void freeze(androidx.leanback.widget.RowPresenter$ViewHolder, boolean)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowPresenter$ViewHolder r1;
        boolean z0;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowPresenter$ViewHolder;

        z0 := @parameter1: boolean;

        return;
    }

    public void setEntranceTransitionState(androidx.leanback.widget.RowPresenter$ViewHolder, boolean)
    {
        androidx.leanback.widget.RowPresenter r0;
        androidx.leanback.widget.RowPresenter$ViewHolder r1;
        boolean z0;
        androidx.leanback.widget.RowHeaderPresenter$ViewHolder $r2, $r3, $r5;
        android.view.View $r4, $r6;
        int $i0;
        byte $b1;

        r0 := @this: androidx.leanback.widget.RowPresenter;

        r1 := @parameter0: androidx.leanback.widget.RowPresenter$ViewHolder;

        z0 := @parameter1: boolean;

        $r2 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        if $r2 == null goto label3;

        $r3 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        $r4 = $r3.<androidx.leanback.widget.RowHeaderPresenter$ViewHolder: android.view.View view>;

        $i0 = virtualinvoke $r4.<android.view.View: int getVisibility()>();

        if $i0 == 8 goto label3;

        $r5 = r1.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        $r6 = $r5.<androidx.leanback.widget.RowHeaderPresenter$ViewHolder: android.view.View view>;

        if z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 4;

     label2:
        virtualinvoke $r6.<android.view.View: void setVisibility(int)>($b1);

     label3:
        return;
    }

androidx.leanback.widget.RowPresenter$ContainerViewHolder
<androidx.leanback.widget.RowPresenter$ContainerViewHolder: androidx.leanback.widget.RowPresenter$ViewHolder mRowViewHolder>
    public void <init>(androidx.leanback.widget.RowContainerView, androidx.leanback.widget.RowPresenter$ViewHolder)
    {
        androidx.leanback.widget.RowPresenter$ContainerViewHolder r0;
        androidx.leanback.widget.RowContainerView r1;
        androidx.leanback.widget.RowPresenter$ViewHolder r2, $r5;
        android.view.View $r3, $r7, r8;
        androidx.leanback.widget.RowHeaderPresenter$ViewHolder $r4, $r6;

        r0 := @this: androidx.leanback.widget.RowPresenter$ContainerViewHolder;

        r1 := @parameter0: androidx.leanback.widget.RowContainerView;

        r2 := @parameter1: androidx.leanback.widget.RowPresenter$ViewHolder;

        r8 = (android.view.View) r1;

        specialinvoke r0.<androidx.leanback.widget.Presenter$ViewHolder: void <init>(android.view.View)>(r8);

        $r3 = r2.<androidx.leanback.widget.RowPresenter$ViewHolder: android.view.View view>;

        virtualinvoke r1.<androidx.leanback.widget.RowContainerView: void addRowView(android.view.View)>($r3);

        $r4 = r2.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        if $r4 == null goto label1;

        $r6 = r2.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        $r7 = $r6.<androidx.leanback.widget.RowHeaderPresenter$ViewHolder: android.view.View view>;

        virtualinvoke r1.<androidx.leanback.widget.RowContainerView: void addHeaderView(android.view.View)>($r7);

     label1:
        r0.<androidx.leanback.widget.RowPresenter$ContainerViewHolder: androidx.leanback.widget.RowPresenter$ViewHolder mRowViewHolder> = r2;

        $r5 = r0.<androidx.leanback.widget.RowPresenter$ContainerViewHolder: androidx.leanback.widget.RowPresenter$ViewHolder mRowViewHolder>;

        $r5.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowPresenter$ContainerViewHolder mContainerViewHolder> = r0;

        return;
    }

androidx.leanback.widget.RowPresenter$ViewHolder
<androidx.leanback.widget.RowPresenter$ViewHolder: int ACTIVATED_NOT_ASSIGNED>
<androidx.leanback.widget.RowPresenter$ViewHolder: int ACTIVATED>
<androidx.leanback.widget.RowPresenter$ViewHolder: int NOT_ACTIVATED>
<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowPresenter$ContainerViewHolder mContainerViewHolder>
<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>
<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.Row mRow>
<androidx.leanback.widget.RowPresenter$ViewHolder: java.lang.Object mRowObject>
<androidx.leanback.widget.RowPresenter$ViewHolder: int mActivated>
<androidx.leanback.widget.RowPresenter$ViewHolder: boolean mSelected>
<androidx.leanback.widget.RowPresenter$ViewHolder: boolean mExpanded>
<androidx.leanback.widget.RowPresenter$ViewHolder: boolean mInitialzed>
<androidx.leanback.widget.RowPresenter$ViewHolder: float mSelectLevel>
<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.graphics.ColorOverlayDimmer mColorDimmer>
<androidx.leanback.widget.RowPresenter$ViewHolder: android.view.View$OnKeyListener mOnKeyListener>
<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.BaseOnItemViewSelectedListener mOnItemViewSelectedListener>
<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.BaseOnItemViewClickedListener mOnItemViewClickedListener>
    public void <init>(android.view.View)
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        android.view.View r1;
        android.content.Context $r2;
        androidx.leanback.graphics.ColorOverlayDimmer $r3;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<androidx.leanback.widget.Presenter$ViewHolder: void <init>(android.view.View)>(r1);

        r0.<androidx.leanback.widget.RowPresenter$ViewHolder: int mActivated> = 0;

        r0.<androidx.leanback.widget.RowPresenter$ViewHolder: float mSelectLevel> = 0.0F;

        $r2 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        $r3 = staticinvoke <androidx.leanback.graphics.ColorOverlayDimmer: androidx.leanback.graphics.ColorOverlayDimmer createDefault(android.content.Context)>($r2);

        r0.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.graphics.ColorOverlayDimmer mColorDimmer> = $r3;

        return;
    }

    public final androidx.leanback.widget.Row getRow()
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        androidx.leanback.widget.Row $r1;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        $r1 = r0.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.Row mRow>;

        return $r1;
    }

    public final java.lang.Object getRowObject()
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        java.lang.Object $r1;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        $r1 = r0.<androidx.leanback.widget.RowPresenter$ViewHolder: java.lang.Object mRowObject>;

        return $r1;
    }

    public final boolean isExpanded()
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        $z0 = r0.<androidx.leanback.widget.RowPresenter$ViewHolder: boolean mExpanded>;

        return $z0;
    }

    public final boolean isSelected()
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        boolean $z0;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        $z0 = r0.<androidx.leanback.widget.RowPresenter$ViewHolder: boolean mSelected>;

        return $z0;
    }

    public final float getSelectLevel()
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        float $f0;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        $f0 = r0.<androidx.leanback.widget.RowPresenter$ViewHolder: float mSelectLevel>;

        return $f0;
    }

    public final androidx.leanback.widget.RowHeaderPresenter$ViewHolder getHeaderViewHolder()
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        androidx.leanback.widget.RowHeaderPresenter$ViewHolder $r1;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        $r1 = r0.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.RowHeaderPresenter$ViewHolder mHeaderViewHolder>;

        return $r1;
    }

    public final void setActivated(boolean)
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        boolean z0;
        byte $b0;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 2;

     label2:
        r0.<androidx.leanback.widget.RowPresenter$ViewHolder: int mActivated> = $b0;

        return;
    }

    public final void syncActivatedStatus(android.view.View)
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        android.view.View r1;
        int $i0, $i1;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        r1 := @parameter0: android.view.View;

        $i0 = r0.<androidx.leanback.widget.RowPresenter$ViewHolder: int mActivated>;

        if $i0 != 1 goto label1;

        virtualinvoke r1.<android.view.View: void setActivated(boolean)>(1);

        goto label2;

     label1:
        $i1 = r0.<androidx.leanback.widget.RowPresenter$ViewHolder: int mActivated>;

        if $i1 != 2 goto label2;

        virtualinvoke r1.<android.view.View: void setActivated(boolean)>(0);

     label2:
        return;
    }

    public void setOnKeyListener(android.view.View$OnKeyListener)
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        android.view.View$OnKeyListener r1;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        r1 := @parameter0: android.view.View$OnKeyListener;

        r0.<androidx.leanback.widget.RowPresenter$ViewHolder: android.view.View$OnKeyListener mOnKeyListener> = r1;

        return;
    }

    public android.view.View$OnKeyListener getOnKeyListener()
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        android.view.View$OnKeyListener $r1;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        $r1 = r0.<androidx.leanback.widget.RowPresenter$ViewHolder: android.view.View$OnKeyListener mOnKeyListener>;

        return $r1;
    }

    public final void setOnItemViewSelectedListener(androidx.leanback.widget.BaseOnItemViewSelectedListener)
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        androidx.leanback.widget.BaseOnItemViewSelectedListener r1;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        r1 := @parameter0: androidx.leanback.widget.BaseOnItemViewSelectedListener;

        r0.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.BaseOnItemViewSelectedListener mOnItemViewSelectedListener> = r1;

        return;
    }

    public final androidx.leanback.widget.BaseOnItemViewSelectedListener getOnItemViewSelectedListener()
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        androidx.leanback.widget.BaseOnItemViewSelectedListener $r1;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        $r1 = r0.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.BaseOnItemViewSelectedListener mOnItemViewSelectedListener>;

        return $r1;
    }

    public final void setOnItemViewClickedListener(androidx.leanback.widget.BaseOnItemViewClickedListener)
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        androidx.leanback.widget.BaseOnItemViewClickedListener r1;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        r1 := @parameter0: androidx.leanback.widget.BaseOnItemViewClickedListener;

        r0.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.BaseOnItemViewClickedListener mOnItemViewClickedListener> = r1;

        return;
    }

    public final androidx.leanback.widget.BaseOnItemViewClickedListener getOnItemViewClickedListener()
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;
        androidx.leanback.widget.BaseOnItemViewClickedListener $r1;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        $r1 = r0.<androidx.leanback.widget.RowPresenter$ViewHolder: androidx.leanback.widget.BaseOnItemViewClickedListener mOnItemViewClickedListener>;

        return $r1;
    }

    public androidx.leanback.widget.Presenter$ViewHolder getSelectedItemViewHolder()
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        return null;
    }

    public java.lang.Object getSelectedItem()
    {
        androidx.leanback.widget.RowPresenter$ViewHolder r0;

        r0 := @this: androidx.leanback.widget.RowPresenter$ViewHolder;

        return null;
    }

