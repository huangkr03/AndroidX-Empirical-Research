androidx.animation.FloatTweenSpec
<androidx.animation.FloatTweenSpec: long duration>
<androidx.animation.FloatTweenSpec: long delay>
<androidx.animation.FloatTweenSpec: kotlin.jvm.functions.Function1 easing>
    public float getValue(long, float, float, float)
    {
        androidx.animation.FloatTweenSpec r0;
        long l0, l1, $l2, $l4;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9;
        byte $b3;
        kotlin.jvm.functions.Function1 $r1;
        java.lang.Float $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;

        r0 := @this: androidx.animation.FloatTweenSpec;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        l1 = specialinvoke r0.<androidx.animation.FloatTweenSpec: long clampPlayTime(long)>(l0);

        $l2 = r0.<androidx.animation.FloatTweenSpec: long duration>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        $f9 = 1.0F;

        goto label2;

     label1:
        $f6 = (float) l1;

        $l4 = r0.<androidx.animation.FloatTweenSpec: long duration>;

        $f5 = (float) $l4;

        $f9 = $f6 / $f5;

     label2:
        f3 = $f9;

        $r1 = r0.<androidx.animation.FloatTweenSpec: kotlin.jvm.functions.Function1 easing>;

        $f7 = staticinvoke <kotlin.ranges.RangesKt: float coerceIn(float,float,float)>(f3, 0.0F, 1.0F);

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f7);

        $r3 = interfaceinvoke $r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        $r4 = (java.lang.Number) $r3;

        f4 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $f8 = staticinvoke <androidx.animation.PropKeyKt: float lerp(float,float,float)>(f0, f1, f4);

        return $f8;
    }

    private final long clampPlayTime(long)
    {
        androidx.animation.FloatTweenSpec r0;
        long l0, $l1, $l2, $l3, $l4;

        r0 := @this: androidx.animation.FloatTweenSpec;

        l0 := @parameter0: long;

        $l1 = r0.<androidx.animation.FloatTweenSpec: long delay>;

        $l3 = l0 - $l1;

        $l2 = r0.<androidx.animation.FloatTweenSpec: long duration>;

        $l4 = staticinvoke <kotlin.ranges.RangesKt: long coerceIn(long,long,long)>($l3, 0L, $l2);

        return $l4;
    }

    public long getDurationMillis(float, float, float)
    {
        androidx.animation.FloatTweenSpec r0;
        float f0, f1, f2;
        long $l0, $l1, $l2;

        r0 := @this: androidx.animation.FloatTweenSpec;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $l1 = r0.<androidx.animation.FloatTweenSpec: long delay>;

        $l0 = r0.<androidx.animation.FloatTweenSpec: long duration>;

        $l2 = $l1 + $l0;

        return $l2;
    }

    public float getVelocity(long, float, float, float)
    {
        androidx.animation.FloatTweenSpec r0;
        long l0, l1, $l4;
        float f0, f1, f2, f3, f4, $f5, $f6;
        byte $b2, $b3;

        r0 := @this: androidx.animation.FloatTweenSpec;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        l1 = specialinvoke r0.<androidx.animation.FloatTweenSpec: long clampPlayTime(long)>(l0);

        $b2 = l1 cmp 0L;

        if $b2 >= 0 goto label1;

        return 0.0F;

     label1:
        $b3 = l1 cmp 0L;

        if $b3 != 0 goto label2;

        return f2;

     label2:
        $l4 = l1 - 1L;

        f3 = virtualinvoke r0.<androidx.animation.FloatTweenSpec: float getValue(long,float,float,float)>($l4, f0, f1, f2);

        f4 = virtualinvoke r0.<androidx.animation.FloatTweenSpec: float getValue(long,float,float,float)>(l1, f0, f1, f2);

        $f5 = f4 - f3;

        $f6 = $f5 * 1000.0F;

        return $f6;
    }

    public final long getDuration()
    {
        androidx.animation.FloatTweenSpec r0;
        long $l0;

        r0 := @this: androidx.animation.FloatTweenSpec;

        $l0 = r0.<androidx.animation.FloatTweenSpec: long duration>;

        return $l0;
    }

    public final long getDelay()
    {
        androidx.animation.FloatTweenSpec r0;
        long $l0;

        r0 := @this: androidx.animation.FloatTweenSpec;

        $l0 = r0.<androidx.animation.FloatTweenSpec: long delay>;

        return $l0;
    }

    public void <init>(long, long, kotlin.jvm.functions.Function1)
    {
        androidx.animation.FloatTweenSpec r0;
        long l0, l1;
        kotlin.jvm.functions.Function1 r1;

        r0 := @this: androidx.animation.FloatTweenSpec;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "easing");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.animation.FloatTweenSpec: long duration> = l0;

        r0.<androidx.animation.FloatTweenSpec: long delay> = l1;

        r0.<androidx.animation.FloatTweenSpec: kotlin.jvm.functions.Function1 easing> = r1;

        return;
    }

    public void <init>(long, long, kotlin.jvm.functions.Function1, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.animation.FloatTweenSpec r0;
        int i0, $i1, $i2, $i3;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        androidx.animation.CubicBezierEasing $r2;
        long l4, l5;
        kotlin.jvm.functions.Function1 r3;

        r0 := @this: androidx.animation.FloatTweenSpec;

        l4 := @parameter0: long;

        l5 := @parameter1: long;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        i0 := @parameter3: int;

        r1 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        l4 = 300L;

     label1:
        $i2 = i0 & 2;

        if $i2 == 0 goto label2;

        l5 = 0L;

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        $r2 = staticinvoke <androidx.animation.EasingKt: androidx.animation.CubicBezierEasing getFastOutSlowInEasing()>();

        r3 = (kotlin.jvm.functions.Function1) $r2;

     label3:
        specialinvoke r0.<androidx.animation.FloatTweenSpec: void <init>(long,long,kotlin.jvm.functions.Function1)>(l4, l5, r3);

        return;
    }

    public void <init>()
    {
        androidx.animation.FloatTweenSpec r0;

        r0 := @this: androidx.animation.FloatTweenSpec;

        specialinvoke r0.<androidx.animation.FloatTweenSpec: void <init>(long,long,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)>(0L, 0L, null, 7, null);

        return;
    }

    public float getEndVelocity(float, float, float)
    {
        androidx.animation.FloatTweenSpec r0;
        float f0, f1, f2, $f3;

        r0 := @this: androidx.animation.FloatTweenSpec;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = staticinvoke <androidx.animation.FloatAnimationSpec$DefaultImpls: float getEndVelocity(androidx.animation.FloatAnimationSpec,float,float,float)>(r0, f0, f1, f2);

        return $f3;
    }

