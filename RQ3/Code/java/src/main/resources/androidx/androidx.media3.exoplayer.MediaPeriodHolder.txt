androidx.media3.exoplayer.MediaPeriodHolder
<androidx.media3.exoplayer.MediaPeriodHolder: java.lang.String TAG>
<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>
<androidx.media3.exoplayer.MediaPeriodHolder: java.lang.Object uid>
<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.SampleStream[] sampleStreams>
<androidx.media3.exoplayer.MediaPeriodHolder: boolean prepared>
<androidx.media3.exoplayer.MediaPeriodHolder: boolean hasEnabledTracks>
<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info>
<androidx.media3.exoplayer.MediaPeriodHolder: boolean allRenderersInCorrectState>
<androidx.media3.exoplayer.MediaPeriodHolder: boolean[] mayRetainStreamFlags>
<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.RendererCapabilities[] rendererCapabilities>
<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelector trackSelector>
<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaSourceList mediaSourceList>
<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodHolder next>
<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.TrackGroupArray trackGroups>
<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult>
<androidx.media3.exoplayer.MediaPeriodHolder: long rendererPositionOffsetUs>
    public void <init>(androidx.media3.exoplayer.RendererCapabilities[], long, androidx.media3.exoplayer.trackselection.TrackSelector, androidx.media3.exoplayer.upstream.Allocator, androidx.media3.exoplayer.MediaSourceList, androidx.media3.exoplayer.MediaPeriodInfo, androidx.media3.exoplayer.trackselection.TrackSelectorResult)
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        androidx.media3.exoplayer.RendererCapabilities[] r1;
        long l0, $l3, $l4;
        androidx.media3.exoplayer.trackselection.TrackSelector r2;
        androidx.media3.exoplayer.upstream.Allocator r3;
        androidx.media3.exoplayer.MediaSourceList r4;
        androidx.media3.exoplayer.MediaPeriodInfo r5;
        androidx.media3.exoplayer.trackselection.TrackSelectorResult r6;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId $r7, $r12;
        java.lang.Object $r8;
        androidx.media3.exoplayer.source.TrackGroupArray $r9;
        int $i1, $i2;
        androidx.media3.exoplayer.source.SampleStream[] $r10;
        boolean[] $r11;
        androidx.media3.exoplayer.source.MediaPeriod $r13;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        r1 := @parameter0: androidx.media3.exoplayer.RendererCapabilities[];

        l0 := @parameter1: long;

        r2 := @parameter2: androidx.media3.exoplayer.trackselection.TrackSelector;

        r3 := @parameter3: androidx.media3.exoplayer.upstream.Allocator;

        r4 := @parameter4: androidx.media3.exoplayer.MediaSourceList;

        r5 := @parameter5: androidx.media3.exoplayer.MediaPeriodInfo;

        r6 := @parameter6: androidx.media3.exoplayer.trackselection.TrackSelectorResult;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.RendererCapabilities[] rendererCapabilities> = r1;

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: long rendererPositionOffsetUs> = l0;

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelector trackSelector> = r2;

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaSourceList mediaSourceList> = r4;

        $r7 = r5.<androidx.media3.exoplayer.MediaPeriodInfo: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId id>;

        $r8 = $r7.<androidx.media3.exoplayer.source.MediaSource$MediaPeriodId: java.lang.Object periodUid>;

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: java.lang.Object uid> = $r8;

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info> = r5;

        $r9 = <androidx.media3.exoplayer.source.TrackGroupArray: androidx.media3.exoplayer.source.TrackGroupArray EMPTY>;

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.TrackGroupArray trackGroups> = $r9;

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult> = r6;

        $i1 = lengthof r1;

        $r10 = newarray (androidx.media3.exoplayer.source.SampleStream)[$i1];

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.SampleStream[] sampleStreams> = $r10;

        $i2 = lengthof r1;

        $r11 = newarray (boolean)[$i2];

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean[] mayRetainStreamFlags> = $r11;

        $r12 = r5.<androidx.media3.exoplayer.MediaPeriodInfo: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId id>;

        $l4 = r5.<androidx.media3.exoplayer.MediaPeriodInfo: long startPositionUs>;

        $l3 = r5.<androidx.media3.exoplayer.MediaPeriodInfo: long endPositionUs>;

        $r13 = staticinvoke <androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.MediaPeriod createMediaPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.MediaSourceList,androidx.media3.exoplayer.upstream.Allocator,long,long)>($r12, r4, r3, $l4, $l3);

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod> = $r13;

        return;
    }

    public long toRendererTime(long)
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        long l0, $l1, $l2;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: long getRendererOffset()>();

        $l2 = l0 + $l1;

        return $l2;
    }

    public long toPeriodTime(long)
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        long l0, $l1, $l2;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: long getRendererOffset()>();

        $l2 = l0 - $l1;

        return $l2;
    }

    public long getRendererOffset()
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        long $l0;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        $l0 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: long rendererPositionOffsetUs>;

        return $l0;
    }

    public void setRendererOffset(long)
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        long l0;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        l0 := @parameter0: long;

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: long rendererPositionOffsetUs> = l0;

        return;
    }

    public long getStartPositionRendererTime()
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        androidx.media3.exoplayer.MediaPeriodInfo $r1;
        long $l0, $l1, $l2;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        $r1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info>;

        $l1 = $r1.<androidx.media3.exoplayer.MediaPeriodInfo: long startPositionUs>;

        $l0 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: long rendererPositionOffsetUs>;

        $l2 = $l1 + $l0;

        return $l2;
    }

    public boolean isFullyBuffered()
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        boolean $z0, $z1, $z2;
        androidx.media3.exoplayer.source.MediaPeriod $r1;
        long $l0;
        byte $b1;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        $z0 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean prepared>;

        if $z0 == 0 goto label2;

        $z1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean hasEnabledTracks>;

        if $z1 == 0 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $l0 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: long getBufferedPositionUs()>();

        $b1 = $l0 cmp -9223372036854775808L;

        if $b1 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public long getBufferedPositionUs()
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        long l0, $l2, $l3, $l4;
        boolean $z0, $z1;
        byte $b1;
        androidx.media3.exoplayer.MediaPeriodInfo $r1, $r3;
        androidx.media3.exoplayer.source.MediaPeriod $r2;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        $z0 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean prepared>;

        if $z0 != 0 goto label1;

        $r3 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info>;

        $l2 = $r3.<androidx.media3.exoplayer.MediaPeriodInfo: long startPositionUs>;

        return $l2;

     label1:
        $z1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean hasEnabledTracks>;

        if $z1 == 0 goto label2;

        $r2 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $l3 = interfaceinvoke $r2.<androidx.media3.exoplayer.source.MediaPeriod: long getBufferedPositionUs()>();

        goto label3;

     label2:
        $l3 = -9223372036854775808L;

     label3:
        l0 = $l3;

        $b1 = l0 cmp -9223372036854775808L;

        if $b1 != 0 goto label4;

        $r1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info>;

        $l4 = $r1.<androidx.media3.exoplayer.MediaPeriodInfo: long durationUs>;

        goto label5;

     label4:
        $l4 = l0;

     label5:
        return $l4;
    }

    public long getNextLoadPositionUs()
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        boolean $z0;
        androidx.media3.exoplayer.source.MediaPeriod $r1;
        long $l0;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        $z0 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean prepared>;

        if $z0 != 0 goto label1;

        $l0 = 0L;

        goto label2;

     label1:
        $r1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $l0 = interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: long getNextLoadPositionUs()>();

     label2:
        return $l0;
    }

    public void handlePrepared(float, androidx.media3.common.Timeline) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        float f0;
        androidx.media3.common.Timeline r1;
        androidx.media3.exoplayer.trackselection.TrackSelectorResult r2;
        long l0, $l1, $l3, $l5, $l6, l7, $l8, $l9, $l10, $l11;
        androidx.media3.exoplayer.source.MediaPeriod $r3;
        androidx.media3.exoplayer.source.TrackGroupArray $r4;
        androidx.media3.exoplayer.MediaPeriodInfo $r5, $r6, $r7, $r8, $r10, $r11, $r12;
        byte $b2, $b4;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        f0 := @parameter0: float;

        r1 := @parameter1: androidx.media3.common.Timeline;

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean prepared> = 1;

        $r3 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $r4 = interfaceinvoke $r3.<androidx.media3.exoplayer.source.MediaPeriod: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups()>();

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.TrackGroupArray trackGroups> = $r4;

        r2 = virtualinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelectorResult selectTracks(float,androidx.media3.common.Timeline)>(f0, r1);

        $r5 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info>;

        l7 = $r5.<androidx.media3.exoplayer.MediaPeriodInfo: long startPositionUs>;

        $r6 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info>;

        $l1 = $r6.<androidx.media3.exoplayer.MediaPeriodInfo: long durationUs>;

        $b2 = $l1 cmp -9223372036854775807L;

        if $b2 == 0 goto label1;

        $r7 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info>;

        $l3 = $r7.<androidx.media3.exoplayer.MediaPeriodInfo: long durationUs>;

        $b4 = l7 cmp $l3;

        if $b4 < 0 goto label1;

        $r8 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info>;

        $l5 = $r8.<androidx.media3.exoplayer.MediaPeriodInfo: long durationUs>;

        $l6 = $l5 - 1L;

        l7 = staticinvoke <java.lang.Math: long max(long,long)>(0L, $l6);

     label1:
        l0 = virtualinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: long applyTrackSelection(androidx.media3.exoplayer.trackselection.TrackSelectorResult,long,boolean)>(r2, l7, 0);

        $l8 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: long rendererPositionOffsetUs>;

        $r10 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info>;

        $l9 = $r10.<androidx.media3.exoplayer.MediaPeriodInfo: long startPositionUs>;

        $l10 = $l9 - l0;

        $l11 = $l8 + $l10;

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: long rendererPositionOffsetUs> = $l11;

        $r11 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info>;

        $r12 = virtualinvoke $r11.<androidx.media3.exoplayer.MediaPeriodInfo: androidx.media3.exoplayer.MediaPeriodInfo copyWithStartPositionUs(long)>(l0);

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info> = $r12;

        return;
    }

    public void reevaluateBuffer(long)
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        long l0, $l1;
        boolean $z0, $z1;
        androidx.media3.exoplayer.source.MediaPeriod $r1;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        l0 := @parameter0: long;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean isLoadingMediaPeriod()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        $z1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean prepared>;

        if $z1 == 0 goto label1;

        $r1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $l1 = virtualinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: long toPeriodTime(long)>(l0);

        interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: void reevaluateBuffer(long)>($l1);

     label1:
        return;
    }

    public void continueLoading(long)
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        long l0, l1;
        boolean $z0;
        androidx.media3.exoplayer.source.MediaPeriod $r1;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        l0 := @parameter0: long;

        $z0 = specialinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean isLoadingMediaPeriod()>();

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z0);

        l1 = virtualinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: long toPeriodTime(long)>(l0);

        $r1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        interfaceinvoke $r1.<androidx.media3.exoplayer.source.MediaPeriod: boolean continueLoading(long)>(l1);

        return;
    }

    public androidx.media3.exoplayer.trackselection.TrackSelectorResult selectTracks(float, androidx.media3.common.Timeline) throws androidx.media3.exoplayer.ExoPlaybackException
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        float f0;
        androidx.media3.common.Timeline r1;
        androidx.media3.exoplayer.trackselection.TrackSelectorResult r2;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection[] r3;
        int i0, i1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r4;
        androidx.media3.exoplayer.trackselection.TrackSelector $r5;
        androidx.media3.exoplayer.RendererCapabilities[] $r6;
        androidx.media3.exoplayer.source.TrackGroupArray $r7;
        androidx.media3.exoplayer.MediaPeriodInfo $r8;
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId $r9;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        f0 := @parameter0: float;

        r1 := @parameter1: androidx.media3.common.Timeline;

        $r5 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelector trackSelector>;

        $r6 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.RendererCapabilities[] rendererCapabilities>;

        $r7 = virtualinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups()>();

        $r8 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info>;

        $r9 = $r8.<androidx.media3.exoplayer.MediaPeriodInfo: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId id>;

        r2 = virtualinvoke $r5.<androidx.media3.exoplayer.trackselection.TrackSelector: androidx.media3.exoplayer.trackselection.TrackSelectorResult selectTracks(androidx.media3.exoplayer.RendererCapabilities[],androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline)>($r6, $r7, $r9, r1);

        r3 = r2.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: androidx.media3.exoplayer.trackselection.ExoTrackSelection[] selections>;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        if r4 == null goto label2;

        interfaceinvoke r4.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: void onPlaybackSpeed(float)>(f0);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r2;
    }

    public long applyTrackSelection(androidx.media3.exoplayer.trackselection.TrackSelectorResult, long, boolean)
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        androidx.media3.exoplayer.trackselection.TrackSelectorResult r1;
        long l0, $l2;
        boolean z0;
        androidx.media3.exoplayer.RendererCapabilities[] $r2;
        int $i1;
        boolean[] $r3;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.TrackSelectorResult;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        $r2 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.RendererCapabilities[] rendererCapabilities>;

        $i1 = lengthof $r2;

        $r3 = newarray (boolean)[$i1];

        $l2 = virtualinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: long applyTrackSelection(androidx.media3.exoplayer.trackselection.TrackSelectorResult,long,boolean,boolean[])>(r1, l0, z0, $r3);

        return $l2;
    }

    public long applyTrackSelection(androidx.media3.exoplayer.trackselection.TrackSelectorResult, long, boolean, boolean[])
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        androidx.media3.exoplayer.trackselection.TrackSelectorResult r1, $r16;
        boolean z0, $z1, $z2, $z3, $z4;
        boolean[] r2, $r5, $r17;
        int $i0, $i1, $i2, i4, $i5, i7;
        androidx.media3.exoplayer.source.SampleStream[] $r3, $r4, $r8, $r9, $r10;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection[] $r6, $r12;
        androidx.media3.exoplayer.source.MediaPeriod $r7;
        androidx.media3.exoplayer.source.SampleStream $r11;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection $r13;
        androidx.media3.exoplayer.RendererCapabilities[] $r14;
        androidx.media3.exoplayer.RendererCapabilities $r15;
        long l3, l6;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        r1 := @parameter0: androidx.media3.exoplayer.trackselection.TrackSelectorResult;

        l3 := @parameter1: long;

        z0 := @parameter2: boolean;

        r2 := @parameter3: boolean[];

        i4 = 0;

     label01:
        $i0 = r1.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: int length>;

        if i4 >= $i0 goto label04;

        $r17 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean[] mayRetainStreamFlags>;

        $i5 = i4;

        if z0 != 0 goto label02;

        $r16 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult>;

        $z2 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: boolean isEquivalent(androidx.media3.exoplayer.trackselection.TrackSelectorResult,int)>($r16, i4);

        if $z2 == 0 goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        $r17[$i5] = $z3;

        i4 = i4 + 1;

        goto label01;

     label04:
        $r3 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.SampleStream[] sampleStreams>;

        specialinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: void disassociateNoSampleRenderersWithEmptySampleStream(androidx.media3.exoplayer.source.SampleStream[])>($r3);

        specialinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: void disableTrackSelectionsInResult()>();

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult> = r1;

        specialinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: void enableTrackSelectionsInResult()>();

        $r7 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $r6 = r1.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: androidx.media3.exoplayer.trackselection.ExoTrackSelection[] selections>;

        $r5 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean[] mayRetainStreamFlags>;

        $r4 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.SampleStream[] sampleStreams>;

        l6 = interfaceinvoke $r7.<androidx.media3.exoplayer.source.MediaPeriod: long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long)>($r6, $r5, $r4, r2, l3);

        $r8 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.SampleStream[] sampleStreams>;

        specialinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: void associateNoSampleRenderersWithEmptySampleStream(androidx.media3.exoplayer.source.SampleStream[])>($r8);

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean hasEnabledTracks> = 0;

        i7 = 0;

     label05:
        $r9 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.SampleStream[] sampleStreams>;

        $i1 = lengthof $r9;

        if i7 >= $i1 goto label10;

        $r10 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.SampleStream[] sampleStreams>;

        $r11 = $r10[i7];

        if $r11 == null goto label06;

        $z1 = virtualinvoke r1.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: boolean isRendererEnabled(int)>(i7);

        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z1);

        $r14 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.RendererCapabilities[] rendererCapabilities>;

        $r15 = $r14[i7];

        $i2 = interfaceinvoke $r15.<androidx.media3.exoplayer.RendererCapabilities: int getTrackType()>();

        if $i2 == -2 goto label09;

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean hasEnabledTracks> = 1;

        goto label09;

     label06:
        $r12 = r1.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: androidx.media3.exoplayer.trackselection.ExoTrackSelection[] selections>;

        $r13 = $r12[i7];

        if $r13 != null goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z4);

     label09:
        i7 = i7 + 1;

        goto label05;

     label10:
        return l6;
    }

    public void release()
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        androidx.media3.exoplayer.source.MediaPeriod $r1;
        androidx.media3.exoplayer.MediaSourceList $r2;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        specialinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: void disableTrackSelectionsInResult()>();

        $r2 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaSourceList mediaSourceList>;

        $r1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        staticinvoke <androidx.media3.exoplayer.MediaPeriodHolder: void releaseMediaPeriod(androidx.media3.exoplayer.MediaSourceList,androidx.media3.exoplayer.source.MediaPeriod)>($r2, $r1);

        return;
    }

    public void setNext(androidx.media3.exoplayer.MediaPeriodHolder)
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0, r1, $r2;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        r1 := @parameter0: androidx.media3.exoplayer.MediaPeriodHolder;

        $r2 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodHolder next>;

        if r1 != $r2 goto label1;

        return;

     label1:
        specialinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: void disableTrackSelectionsInResult()>();

        r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodHolder next> = r1;

        specialinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: void enableTrackSelectionsInResult()>();

        return;
    }

    public androidx.media3.exoplayer.MediaPeriodHolder getNext()
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0, $r1;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        $r1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodHolder next>;

        return $r1;
    }

    public androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups()
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        androidx.media3.exoplayer.source.TrackGroupArray $r1;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        $r1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.TrackGroupArray trackGroups>;

        return $r1;
    }

    public androidx.media3.exoplayer.trackselection.TrackSelectorResult getTrackSelectorResult()
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        androidx.media3.exoplayer.trackselection.TrackSelectorResult $r1;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        $r1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult>;

        return $r1;
    }

    public void updateClipping()
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        long l0, $l1, $l3;
        androidx.media3.exoplayer.source.MediaPeriod $r1, $r4;
        boolean $z0;
        androidx.media3.exoplayer.MediaPeriodInfo $r2, $r3;
        byte $b2;
        androidx.media3.exoplayer.source.ClippingMediaPeriod $r5;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        $r1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $z0 = $r1 instanceof androidx.media3.exoplayer.source.ClippingMediaPeriod;

        if $z0 == 0 goto label3;

        $r2 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info>;

        $l1 = $r2.<androidx.media3.exoplayer.MediaPeriodInfo: long endPositionUs>;

        $b2 = $l1 cmp -9223372036854775807L;

        if $b2 != 0 goto label1;

        $l3 = -9223372036854775808L;

        goto label2;

     label1:
        $r3 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodInfo info>;

        $l3 = $r3.<androidx.media3.exoplayer.MediaPeriodInfo: long endPositionUs>;

     label2:
        l0 = $l3;

        $r4 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        $r5 = (androidx.media3.exoplayer.source.ClippingMediaPeriod) $r4;

        virtualinvoke $r5.<androidx.media3.exoplayer.source.ClippingMediaPeriod: void updateClipping(long,long)>(0L, l0);

     label3:
        return;
    }

    private void enableTrackSelectionsInResult()
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        boolean z0, $z1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r1;
        androidx.media3.exoplayer.trackselection.TrackSelectorResult $r2, $r3, $r4;
        int $i0, i1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection[] $r5;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        $z1 = specialinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean isLoadingMediaPeriod()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        i1 = 0;

     label2:
        $r2 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult>;

        $i0 = $r2.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: int length>;

        if i1 >= $i0 goto label4;

        $r3 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult>;

        z0 = virtualinvoke $r3.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: boolean isRendererEnabled(int)>(i1);

        $r4 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult>;

        $r5 = $r4.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: androidx.media3.exoplayer.trackselection.ExoTrackSelection[] selections>;

        r1 = $r5[i1];

        if z0 == 0 goto label3;

        if r1 == null goto label3;

        interfaceinvoke r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: void enable()>();

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return;
    }

    private void disableTrackSelectionsInResult()
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        boolean z0, $z1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection r1;
        androidx.media3.exoplayer.trackselection.TrackSelectorResult $r2, $r3, $r4;
        int $i0, i1;
        androidx.media3.exoplayer.trackselection.ExoTrackSelection[] $r5;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        $z1 = specialinvoke r0.<androidx.media3.exoplayer.MediaPeriodHolder: boolean isLoadingMediaPeriod()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        i1 = 0;

     label2:
        $r2 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult>;

        $i0 = $r2.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: int length>;

        if i1 >= $i0 goto label4;

        $r3 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult>;

        z0 = virtualinvoke $r3.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: boolean isRendererEnabled(int)>(i1);

        $r4 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult>;

        $r5 = $r4.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: androidx.media3.exoplayer.trackselection.ExoTrackSelection[] selections>;

        r1 = $r5[i1];

        if z0 == 0 goto label3;

        if r1 == null goto label3;

        interfaceinvoke r1.<androidx.media3.exoplayer.trackselection.ExoTrackSelection: void disable()>();

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return;
    }

    private void disassociateNoSampleRenderersWithEmptySampleStream(androidx.media3.exoplayer.source.SampleStream[])
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        androidx.media3.exoplayer.source.SampleStream[] r1;
        androidx.media3.exoplayer.RendererCapabilities[] $r2, $r3;
        int $i0, $i1, i2;
        androidx.media3.exoplayer.RendererCapabilities $r4;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        r1 := @parameter0: androidx.media3.exoplayer.source.SampleStream[];

        i2 = 0;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.RendererCapabilities[] rendererCapabilities>;

        $i0 = lengthof $r2;

        if i2 >= $i0 goto label3;

        $r3 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.RendererCapabilities[] rendererCapabilities>;

        $r4 = $r3[i2];

        $i1 = interfaceinvoke $r4.<androidx.media3.exoplayer.RendererCapabilities: int getTrackType()>();

        if $i1 != -2 goto label2;

        r1[i2] = null;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private void associateNoSampleRenderersWithEmptySampleStream(androidx.media3.exoplayer.source.SampleStream[])
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0;
        androidx.media3.exoplayer.source.SampleStream[] r1;
        androidx.media3.exoplayer.RendererCapabilities[] $r2, $r3;
        int $i0, $i1, i2;
        androidx.media3.exoplayer.RendererCapabilities $r4;
        androidx.media3.exoplayer.trackselection.TrackSelectorResult $r5;
        boolean $z0;
        androidx.media3.exoplayer.source.EmptySampleStream $r6;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        r1 := @parameter0: androidx.media3.exoplayer.source.SampleStream[];

        i2 = 0;

     label1:
        $r2 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.RendererCapabilities[] rendererCapabilities>;

        $i0 = lengthof $r2;

        if i2 >= $i0 goto label3;

        $r3 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.RendererCapabilities[] rendererCapabilities>;

        $r4 = $r3[i2];

        $i1 = interfaceinvoke $r4.<androidx.media3.exoplayer.RendererCapabilities: int getTrackType()>();

        if $i1 != -2 goto label2;

        $r5 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult>;

        $z0 = virtualinvoke $r5.<androidx.media3.exoplayer.trackselection.TrackSelectorResult: boolean isRendererEnabled(int)>(i2);

        if $z0 == 0 goto label2;

        $r6 = new androidx.media3.exoplayer.source.EmptySampleStream;

        specialinvoke $r6.<androidx.media3.exoplayer.source.EmptySampleStream: void <init>()>();

        r1[i2] = $r6;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    private boolean isLoadingMediaPeriod()
    {
        androidx.media3.exoplayer.MediaPeriodHolder r0, $r1;
        boolean $z0;

        r0 := @this: androidx.media3.exoplayer.MediaPeriodHolder;

        $r1 = r0.<androidx.media3.exoplayer.MediaPeriodHolder: androidx.media3.exoplayer.MediaPeriodHolder next>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static androidx.media3.exoplayer.source.MediaPeriod createMediaPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId, androidx.media3.exoplayer.MediaSourceList, androidx.media3.exoplayer.upstream.Allocator, long, long)
    {
        androidx.media3.exoplayer.source.MediaSource$MediaPeriodId r0;
        androidx.media3.exoplayer.MediaSourceList r1;
        androidx.media3.exoplayer.upstream.Allocator r2;
        long l0, l1;
        byte $b2;
        androidx.media3.exoplayer.source.ClippingMediaPeriod $r3;
        androidx.media3.exoplayer.source.MediaPeriod r4;

        r0 := @parameter0: androidx.media3.exoplayer.source.MediaSource$MediaPeriodId;

        r1 := @parameter1: androidx.media3.exoplayer.MediaSourceList;

        r2 := @parameter2: androidx.media3.exoplayer.upstream.Allocator;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        r4 = virtualinvoke r1.<androidx.media3.exoplayer.MediaSourceList: androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long)>(r0, r2, l0);

        $b2 = l1 cmp -9223372036854775807L;

        if $b2 == 0 goto label1;

        $r3 = new androidx.media3.exoplayer.source.ClippingMediaPeriod;

        specialinvoke $r3.<androidx.media3.exoplayer.source.ClippingMediaPeriod: void <init>(androidx.media3.exoplayer.source.MediaPeriod,boolean,long,long)>(r4, 1, 0L, l1);

        r4 = $r3;

     label1:
        return r4;
    }

    private static void releaseMediaPeriod(androidx.media3.exoplayer.MediaSourceList, androidx.media3.exoplayer.source.MediaPeriod)
    {
        androidx.media3.exoplayer.MediaSourceList r0;
        androidx.media3.exoplayer.source.MediaPeriod r1, $r4;
        java.lang.Throwable r2, $r5;
        boolean $z0;
        androidx.media3.exoplayer.source.ClippingMediaPeriod $r3;

        r0 := @parameter0: androidx.media3.exoplayer.MediaSourceList;

        r1 := @parameter1: androidx.media3.exoplayer.source.MediaPeriod;

     label1:
        $z0 = r1 instanceof androidx.media3.exoplayer.source.ClippingMediaPeriod;

        if $z0 == 0 goto label2;

        $r3 = (androidx.media3.exoplayer.source.ClippingMediaPeriod) r1;

        $r4 = $r3.<androidx.media3.exoplayer.source.ClippingMediaPeriod: androidx.media3.exoplayer.source.MediaPeriod mediaPeriod>;

        virtualinvoke r0.<androidx.media3.exoplayer.MediaSourceList: void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)>($r4);

        goto label3;

     label2:
        virtualinvoke r0.<androidx.media3.exoplayer.MediaSourceList: void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod)>(r1);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <androidx.media3.common.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaPeriodHolder", "Period release failed.", r2);

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label3 with label4;
    }

