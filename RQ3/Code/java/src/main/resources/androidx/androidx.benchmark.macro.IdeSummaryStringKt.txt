androidx.benchmark.macro.IdeSummaryStringKt
    public static final kotlin.Pair ideSummaryStrings(java.lang.String, java.lang.String, androidx.benchmark.BenchmarkResult$Measurements, java.util.List)
    {
        java.lang.String r0, r1, r5, r7, r9, r10, $r17, $r20, $r24, $r28, $r33, $r43, $r46, $r47, $r48, $r52, $r55, $r56, r67;
        androidx.benchmark.BenchmarkResult$Measurements r2;
        java.util.List r3, r4, $r11, $r13, r68, r74;
        int i0, i1, $i2, $i3, i4, $i5, $i6, i7, $i8;
        java.util.Collection r6, $r12, r64, r70, r73;
        java.lang.StringBuilder r8, $r25, $r29, $r34, $r35, $r37, $r38, $r39, $r40, $r41, $r42;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z11;
        java.lang.Iterable $r14, $r15, $r18, $r32, r63, r69;
        java.lang.Object $r16, $r19, $r49, $r51, $r66, r72;
        java.util.ArrayList $r21, $r30;
        androidx.benchmark.macro.IdeSummaryStringKt$ideSummaryStrings$2 $r22;
        kotlin.jvm.functions.Function5 $r23, $r27;
        androidx.benchmark.macro.IdeSummaryStringKt$ideSummaryStrings$3 $r26;
        java.lang.CharSequence $r31;
        kotlin.Pair $r36;
        androidx.benchmark.Outputs $r45;
        java.util.NoSuchElementException $r50, $r53;
        java.lang.IllegalArgumentException $r54;
        java.util.Iterator r57, r60, r65, $r71;
        androidx.benchmark.MetricResult r58, $r59, $r61, r62;
        double d0, d1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.benchmark.BenchmarkResult$Measurements;

        r3 := @parameter3: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "warningLines");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "benchmarkName");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurements");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "absoluteTracePaths");

        $z1 = virtualinvoke r2.<androidx.benchmark.BenchmarkResult$Measurements: boolean isNotEmpty()>();

        if $z1 != 0 goto label01;

        $r56 = "Require non-empty list of metric results.";

        $r54 = new java.lang.IllegalArgumentException;

        $r55 = virtualinvoke $r56.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r54.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r55);

        throw $r54;

     label01:
        $r11 = virtualinvoke r2.<androidx.benchmark.BenchmarkResult$Measurements: java.util.List getSingleMetrics()>();

        $r12 = (java.util.Collection) $r11;

        $r13 = virtualinvoke r2.<androidx.benchmark.BenchmarkResult$Measurements: java.util.List getSampledMetrics()>();

        $r14 = (java.lang.Iterable) $r13;

        r4 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>($r12, $r14);

        $r15 = (java.lang.Iterable) r4;

        r57 = interfaceinvoke $r15.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z2 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label02;

        $r53 = new java.util.NoSuchElementException;

        specialinvoke $r53.<java.util.NoSuchElementException: void <init>()>();

        throw $r53;

     label02:
        $r16 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>();

        r58 = (androidx.benchmark.MetricResult) $r16;

        $r17 = virtualinvoke r58.<androidx.benchmark.MetricResult: java.lang.String getName()>();

        i4 = virtualinvoke $r17.<java.lang.String: int length()>();

     label03:
        $z11 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label04;

        $r51 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>();

        $r59 = (androidx.benchmark.MetricResult) $r51;

        $r52 = virtualinvoke $r59.<androidx.benchmark.MetricResult: java.lang.String getName()>();

        $i5 = virtualinvoke $r52.<java.lang.String: int length()>();

        if i4 >= $i5 goto label03;

        i4 = $i5;

        goto label03;

     label04:
        $i6 = i4;

        $r18 = (java.lang.Iterable) r4;

        r60 = interfaceinvoke $r18.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z3 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label05;

        $r50 = new java.util.NoSuchElementException;

        specialinvoke $r50.<java.util.NoSuchElementException: void <init>()>();

        throw $r50;

     label05:
        $r19 = interfaceinvoke r60.<java.util.Iterator: java.lang.Object next()>();

        $r61 = (androidx.benchmark.MetricResult) $r19;

        d0 = virtualinvoke $r61.<androidx.benchmark.MetricResult: double getMax()>();

     label06:
        $z4 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label07;

        $r49 = interfaceinvoke r60.<java.util.Iterator: java.lang.Object next()>();

        r62 = (androidx.benchmark.MetricResult) $r49;

        d1 = virtualinvoke r62.<androidx.benchmark.MetricResult: double getMax()>();

        d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1);

        goto label06;

     label07:
        $r20 = staticinvoke <androidx.benchmark.macro.IdeSummaryStringKt: java.lang.String ideSummaryStrings$toDisplayString(double)>(d0);

        i0 = virtualinvoke $r20.<java.lang.String: int length()>();

        r63 = (java.lang.Iterable) r3;

        $r21 = new java.util.ArrayList;

        $i2 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>(r63, 10);

        specialinvoke $r21.<java.util.ArrayList: void <init>(int)>($i2);

        r64 = (java.util.Collection) $r21;

        r65 = interfaceinvoke r63.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z5 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label09;

        $r66 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>();

        r67 = (java.lang.String) $r66;

        r6 = r64;

        $r45 = <androidx.benchmark.Outputs: androidx.benchmark.Outputs INSTANCE>;

        $r46 = virtualinvoke $r45.<androidx.benchmark.Outputs: java.lang.String relativePathFor(java.lang.String)>(r67);

        $r47 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r46, "(", "\\(", 0, 4, null);

        $r48 = staticinvoke <kotlin.text.StringsKt: java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r47, ")", "\\)", 0, 4, null);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r48);

        goto label08;

     label09:
        r68 = (java.util.List) r64;

        $r22 = <androidx.benchmark.macro.IdeSummaryStringKt$ideSummaryStrings$2: androidx.benchmark.macro.IdeSummaryStringKt$ideSummaryStrings$2 INSTANCE>;

        $r23 = (kotlin.jvm.functions.Function5) $r22;

        $r24 = staticinvoke <androidx.benchmark.macro.IdeSummaryStringKt: java.lang.String ideSummaryStrings$ideSummaryString(java.lang.String,java.lang.String,androidx.benchmark.BenchmarkResult$Measurements,int,int,kotlin.jvm.functions.Function5)>(r0, r1, r2, $i6, i0, $r23);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = new androidx.benchmark.macro.IdeSummaryStringKt$ideSummaryStrings$3;

        specialinvoke $r26.<androidx.benchmark.macro.IdeSummaryStringKt$ideSummaryStrings$3: void <init>(java.util.List)>(r68);

        $r27 = (kotlin.jvm.functions.Function5) $r26;

        $r28 = staticinvoke <androidx.benchmark.macro.IdeSummaryStringKt: java.lang.String ideSummaryStrings$ideSummaryString(java.lang.String,java.lang.String,androidx.benchmark.BenchmarkResult$Measurements,int,int,kotlin.jvm.functions.Function5)>(r0, r1, r2, $i6, i0, $r27);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        r69 = (java.lang.Iterable) r68;

        r8 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Traces: Iteration ");

        r7 = $r24;

        $r30 = new java.util.ArrayList;

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>(r69, 10);

        specialinvoke $r30.<java.util.ArrayList: void <init>(int)>($i3);

        r70 = (java.util.Collection) $r30;

        i7 = 0;

        $r71 = interfaceinvoke r69.<java.lang.Iterable: java.util.Iterator iterator()>();

     label10:
        $z6 = interfaceinvoke $r71.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label12;

        r72 = interfaceinvoke $r71.<java.util.Iterator: java.lang.Object next()>();

        $i8 = i7;

        i7 = i7 + 1;

        if $i8 >= 0 goto label11;

        staticinvoke <kotlin.collections.CollectionsKt: void throwIndexOverflow()>();

     label11:
        r5 = (java.lang.String) r72;

        i1 = $i8;

        r73 = r70;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("](file://");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r73.<java.util.Collection: boolean add(java.lang.Object)>($r43);

        goto label10;

     label12:
        r74 = (java.util.List) r70;

        $r32 = (java.lang.Iterable) r74;

        $r31 = (java.lang.CharSequence) " ";

        $r33 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r32, $r31, null, null, 0, null, null, 62, null);

        $r34 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        r9 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        r10 = r7;

        $r36 = new kotlin.Pair;

        specialinvoke $r36.<kotlin.Pair: void <init>(java.lang.Object,java.lang.Object)>(r10, r9);

        return $r36;
    }

    private static final java.lang.String ideSummaryStrings$toDisplayString(double)
    {
        double $d0;
        java.lang.Object[] r0, $r3;
        java.lang.String r1;
        java.lang.Double $r2;
        int $i0;

        $d0 := @parameter0: double;

        r0 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        r0[0] = $r2;

        $i0 = lengthof r0;

        $r3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r0, $i0);

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%,.1f", $r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "format(this, *args)");

        return r1;
    }

    private static final java.lang.String ideSummaryStrings$ideSummaryString(java.lang.String, java.lang.String, androidx.benchmark.BenchmarkResult$Measurements, int, int, kotlin.jvm.functions.Function5)
    {
        java.lang.String $r0, $r1, r4, r5, r6, r7, r8, $r9, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r51;
        androidx.benchmark.BenchmarkResult$Measurements $r2;
        int i0, i1, $i2, $i3;
        kotlin.jvm.functions.Function5 r3;
        java.util.List $r10, $r11, $r13, $r15, $r16, $r18, $r20;
        java.util.ArrayList $r12, $r17;
        boolean $z0, $z1;
        java.lang.Iterable $r14, $r19, $r22, $r52, $r59;
        java.lang.CharSequence $r21;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        java.lang.StringBuilder $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40;
        java.lang.Object $r50, r56, r63;
        java.util.Collection r53, r54, r58, r60, r61, r65;
        java.util.Iterator r55, r62;
        androidx.benchmark.MetricResult r57, r64;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: androidx.benchmark.BenchmarkResult$Measurements;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 := @parameter5: kotlin.jvm.functions.Function5;

        $r9 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>($r0, $r1);

        $r10 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOf(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r2.<androidx.benchmark.BenchmarkResult$Measurements: java.util.List getSingleMetrics()>();

        $r52 = (java.lang.Iterable) $r11;

        r53 = (java.util.Collection) $r10;

        $r12 = new java.util.ArrayList;

        $i2 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r52, 10);

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i2);

        r54 = (java.util.Collection) $r12;

        r55 = interfaceinvoke $r52.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r55.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r56 = interfaceinvoke r55.<java.util.Iterator: java.lang.Object next()>();

        r57 = (androidx.benchmark.MetricResult) r56;

        r58 = r54;

        $r42 = virtualinvoke r57.<androidx.benchmark.MetricResult: java.lang.String getName()>();

        $r43 = staticinvoke <kotlin.text.StringsKt: java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object)>($r42, i0, 0, 2, null);

        $d4 = virtualinvoke r57.<androidx.benchmark.MetricResult: double getMin()>();

        $r44 = staticinvoke <androidx.benchmark.macro.IdeSummaryStringKt: java.lang.String ideSummaryStrings$toDisplayString(double)>($d4);

        $r45 = staticinvoke <kotlin.text.StringsKt: java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object)>($r44, i1, 0, 2, null);

        $d5 = virtualinvoke r57.<androidx.benchmark.MetricResult: double getMedian()>();

        $r46 = staticinvoke <androidx.benchmark.macro.IdeSummaryStringKt: java.lang.String ideSummaryStrings$toDisplayString(double)>($d5);

        $r47 = staticinvoke <kotlin.text.StringsKt: java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object)>($r46, i1, 0, 2, null);

        $d6 = virtualinvoke r57.<androidx.benchmark.MetricResult: double getMax()>();

        $r48 = staticinvoke <androidx.benchmark.macro.IdeSummaryStringKt: java.lang.String ideSummaryStrings$toDisplayString(double)>($d6);

        $r49 = staticinvoke <kotlin.text.StringsKt: java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object)>($r48, i1, 0, 2, null);

        $r50 = interfaceinvoke r3.<kotlin.jvm.functions.Function5: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r43, $r45, $r47, $r49, r57);

        $r51 = (java.lang.String) $r50;

        interfaceinvoke r58.<java.util.Collection: boolean add(java.lang.Object)>($r51);

        goto label1;

     label2:
        $r13 = (java.util.List) r54;

        $r14 = (java.lang.Iterable) $r13;

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>(r53, $r14);

        $r16 = virtualinvoke $r2.<androidx.benchmark.BenchmarkResult$Measurements: java.util.List getSampledMetrics()>();

        $r59 = (java.lang.Iterable) $r16;

        r60 = (java.util.Collection) $r15;

        $r17 = new java.util.ArrayList;

        $i3 = staticinvoke <kotlin.collections.CollectionsKt: int collectionSizeOrDefault(java.lang.Iterable,int)>($r59, 10);

        specialinvoke $r17.<java.util.ArrayList: void <init>(int)>($i3);

        r61 = (java.util.Collection) $r17;

        r62 = interfaceinvoke $r59.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        r63 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>();

        r64 = (androidx.benchmark.MetricResult) r63;

        r65 = r61;

        $r25 = virtualinvoke r64.<androidx.benchmark.MetricResult: java.lang.String getName()>();

        r4 = staticinvoke <kotlin.text.StringsKt: java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object)>($r25, i0, 0, 2, null);

        $d0 = virtualinvoke r64.<androidx.benchmark.MetricResult: double getP50()>();

        $r26 = staticinvoke <androidx.benchmark.macro.IdeSummaryStringKt: java.lang.String ideSummaryStrings$toDisplayString(double)>($d0);

        r5 = staticinvoke <kotlin.text.StringsKt: java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object)>($r26, i1, 0, 2, null);

        $d1 = virtualinvoke r64.<androidx.benchmark.MetricResult: double getP90()>();

        $r27 = staticinvoke <androidx.benchmark.macro.IdeSummaryStringKt: java.lang.String ideSummaryStrings$toDisplayString(double)>($d1);

        r6 = staticinvoke <kotlin.text.StringsKt: java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object)>($r27, i1, 0, 2, null);

        $d2 = virtualinvoke r64.<androidx.benchmark.MetricResult: double getP95()>();

        $r28 = staticinvoke <androidx.benchmark.macro.IdeSummaryStringKt: java.lang.String ideSummaryStrings$toDisplayString(double)>($d2);

        r7 = staticinvoke <kotlin.text.StringsKt: java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object)>($r28, i1, 0, 2, null);

        $d3 = virtualinvoke r64.<androidx.benchmark.MetricResult: double getP99()>();

        $r29 = staticinvoke <androidx.benchmark.macro.IdeSummaryStringKt: java.lang.String ideSummaryStrings$toDisplayString(double)>($d3);

        r8 = staticinvoke <kotlin.text.StringsKt: java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object)>($r29, i1, 0, 2, null);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   P50  ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",   P90  ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",   P95  ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",   P99  ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r65.<java.util.Collection: boolean add(java.lang.Object)>($r41);

        goto label3;

     label4:
        $r18 = (java.util.List) r61;

        $r19 = (java.lang.Iterable) $r18;

        $r20 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)>(r60, $r19);

        $r22 = (java.lang.Iterable) $r20;

        $r21 = (java.lang.CharSequence) "\n";

        $r23 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r22, $r21, null, null, 0, null, null, 62, null);

        $r24 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>($r23, "\n");

        return $r24;
    }

