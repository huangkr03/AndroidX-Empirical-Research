androidx.media2.session.MediaSessionServiceLegacyStub
<androidx.media2.session.MediaSessionServiceLegacyStub: androidx.media2.session.MediaSession$MediaSessionImpl mSessionImpl>
<androidx.media2.session.MediaSessionServiceLegacyStub: androidx.media2.session.ConnectedControllersManager mConnectedControllersManager>
<androidx.media2.session.MediaSessionServiceLegacyStub: androidx.media.MediaSessionManager mManager>
    void <init>(android.content.Context, androidx.media2.session.MediaSession$MediaSessionImpl, android.support.v4.media.session.MediaSessionCompat$Token)
    {
        androidx.media2.session.MediaSessionServiceLegacyStub r0;
        android.content.Context r1;
        androidx.media2.session.MediaSession$MediaSessionImpl r2;
        android.support.v4.media.session.MediaSessionCompat$Token r3;
        androidx.media.MediaSessionManager $r4;
        androidx.media2.session.ConnectedControllersManager $r5;

        r0 := @this: androidx.media2.session.MediaSessionServiceLegacyStub;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.media2.session.MediaSession$MediaSessionImpl;

        r3 := @parameter2: android.support.v4.media.session.MediaSessionCompat$Token;

        specialinvoke r0.<androidx.media.MediaBrowserServiceCompat: void <init>()>();

        virtualinvoke r0.<androidx.media2.session.MediaSessionServiceLegacyStub: void attachToBaseContext(android.content.Context)>(r1);

        virtualinvoke r0.<androidx.media2.session.MediaSessionServiceLegacyStub: void onCreate()>();

        virtualinvoke r0.<androidx.media2.session.MediaSessionServiceLegacyStub: void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token)>(r3);

        $r4 = staticinvoke <androidx.media.MediaSessionManager: androidx.media.MediaSessionManager getSessionManager(android.content.Context)>(r1);

        r0.<androidx.media2.session.MediaSessionServiceLegacyStub: androidx.media.MediaSessionManager mManager> = $r4;

        r0.<androidx.media2.session.MediaSessionServiceLegacyStub: androidx.media2.session.MediaSession$MediaSessionImpl mSessionImpl> = r2;

        $r5 = new androidx.media2.session.ConnectedControllersManager;

        specialinvoke $r5.<androidx.media2.session.ConnectedControllersManager: void <init>(androidx.media2.session.MediaSession$MediaSessionImpl)>(r2);

        r0.<androidx.media2.session.MediaSessionServiceLegacyStub: androidx.media2.session.ConnectedControllersManager mConnectedControllersManager> = $r5;

        return;
    }

    public androidx.media.MediaBrowserServiceCompat$BrowserRoot onGetRoot(java.lang.String, int, android.os.Bundle)
    {
        androidx.media2.session.MediaSessionServiceLegacyStub r0;
        java.lang.String r1;
        int i0;
        android.os.Bundle r2;
        androidx.media.MediaSessionManager$RemoteUserInfo r3;
        androidx.media2.session.MediaSession$ControllerInfo r4;
        androidx.media2.session.SessionCommandGroup r5;
        androidx.media2.session.MediaSession$MediaSessionImpl $r6, $r8;
        androidx.media2.session.MediaSession$SessionCallback $r7;
        androidx.media2.session.MediaSession $r9;
        androidx.media2.session.ConnectedControllersManager $r10;
        androidx.media.MediaBrowserServiceCompat$BrowserRoot $r11;

        r0 := @this: androidx.media2.session.MediaSessionServiceLegacyStub;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r3 = virtualinvoke r0.<androidx.media2.session.MediaSessionServiceLegacyStub: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo()>();

        r4 = virtualinvoke r0.<androidx.media2.session.MediaSessionServiceLegacyStub: androidx.media2.session.MediaSession$ControllerInfo createControllerInfo(androidx.media.MediaSessionManager$RemoteUserInfo)>(r3);

        $r6 = r0.<androidx.media2.session.MediaSessionServiceLegacyStub: androidx.media2.session.MediaSession$MediaSessionImpl mSessionImpl>;

        $r7 = interfaceinvoke $r6.<androidx.media2.session.MediaSession$MediaSessionImpl: androidx.media2.session.MediaSession$SessionCallback getCallback()>();

        $r8 = r0.<androidx.media2.session.MediaSessionServiceLegacyStub: androidx.media2.session.MediaSession$MediaSessionImpl mSessionImpl>;

        $r9 = interfaceinvoke $r8.<androidx.media2.session.MediaSession$MediaSessionImpl: androidx.media2.session.MediaSession getInstance()>();

        r5 = virtualinvoke $r7.<androidx.media2.session.MediaSession$SessionCallback: androidx.media2.session.SessionCommandGroup onConnect(androidx.media2.session.MediaSession,androidx.media2.session.MediaSession$ControllerInfo)>($r9, r4);

        if r5 != null goto label1;

        return null;

     label1:
        $r10 = r0.<androidx.media2.session.MediaSessionServiceLegacyStub: androidx.media2.session.ConnectedControllersManager mConnectedControllersManager>;

        virtualinvoke $r10.<androidx.media2.session.ConnectedControllersManager: void addController(java.lang.Object,androidx.media2.session.MediaSession$ControllerInfo,androidx.media2.session.SessionCommandGroup)>(r3, r4, r5);

        $r11 = <androidx.media2.session.MediaUtils: androidx.media.MediaBrowserServiceCompat$BrowserRoot sDefaultBrowserRoot>;

        return $r11;
    }

    public void onLoadChildren(java.lang.String, androidx.media.MediaBrowserServiceCompat$Result)
    {
        androidx.media2.session.MediaSessionServiceLegacyStub r0;
        java.lang.String r1;
        androidx.media.MediaBrowserServiceCompat$Result r2;

        r0 := @this: androidx.media2.session.MediaSessionServiceLegacyStub;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.media.MediaBrowserServiceCompat$Result;

        virtualinvoke r2.<androidx.media.MediaBrowserServiceCompat$Result: void sendResult(java.lang.Object)>(null);

        return;
    }

    androidx.media2.session.MediaSession$ControllerInfo createControllerInfo(androidx.media.MediaSessionManager$RemoteUserInfo)
    {
        androidx.media2.session.MediaSessionServiceLegacyStub r0;
        androidx.media.MediaSessionManager$RemoteUserInfo r1;
        androidx.media2.session.MediaSession$ControllerInfo $r2;
        androidx.media.MediaSessionManager $r3;
        boolean $z0;

        r0 := @this: androidx.media2.session.MediaSessionServiceLegacyStub;

        r1 := @parameter0: androidx.media.MediaSessionManager$RemoteUserInfo;

        $r2 = new androidx.media2.session.MediaSession$ControllerInfo;

        $r3 = r0.<androidx.media2.session.MediaSessionServiceLegacyStub: androidx.media.MediaSessionManager mManager>;

        $z0 = virtualinvoke $r3.<androidx.media.MediaSessionManager: boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfo)>(r1);

        specialinvoke $r2.<androidx.media2.session.MediaSession$ControllerInfo: void <init>(androidx.media.MediaSessionManager$RemoteUserInfo,int,boolean,androidx.media2.session.MediaSession$ControllerCb,android.os.Bundle)>(r1, -1, $z0, null, null);

        return $r2;
    }

    androidx.media2.session.ConnectedControllersManager getConnectedControllersManager()
    {
        androidx.media2.session.MediaSessionServiceLegacyStub r0;
        androidx.media2.session.ConnectedControllersManager $r1;

        r0 := @this: androidx.media2.session.MediaSessionServiceLegacyStub;

        $r1 = r0.<androidx.media2.session.MediaSessionServiceLegacyStub: androidx.media2.session.ConnectedControllersManager mConnectedControllersManager>;

        return $r1;
    }

