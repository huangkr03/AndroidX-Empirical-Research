androidx.wear.watchface.WatchState
<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData interruptionFilter>
<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isAmbient>
<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isBatteryLowAndNotCharging>
<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isVisible>
<androidx.wear.watchface.WatchState: boolean hasLowBitAmbient>
<androidx.wear.watchface.WatchState: boolean hasBurnInProtection>
<androidx.wear.watchface.WatchState: long analogPreviewReferenceTimeMillis>
<androidx.wear.watchface.WatchState: long digitalPreviewReferenceTimeMillis>
<androidx.wear.watchface.WatchState: int chinHeight>
<androidx.wear.watchface.WatchState: boolean isHeadless>
    public void <init>(androidx.wear.watchface.ObservableWatchData, androidx.wear.watchface.ObservableWatchData, androidx.wear.watchface.ObservableWatchData, androidx.wear.watchface.ObservableWatchData, boolean, boolean, long, long, int, boolean)
    {
        androidx.wear.watchface.WatchState r0;
        androidx.wear.watchface.ObservableWatchData r1, r2, r3, r4;
        boolean z0, z1, z2;
        long l0, l1;
        int i2;

        r0 := @this: androidx.wear.watchface.WatchState;

        r1 := @parameter0: androidx.wear.watchface.ObservableWatchData;

        r2 := @parameter1: androidx.wear.watchface.ObservableWatchData;

        r3 := @parameter2: androidx.wear.watchface.ObservableWatchData;

        r4 := @parameter3: androidx.wear.watchface.ObservableWatchData;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        l0 := @parameter6: long;

        l1 := @parameter7: long;

        i2 := @parameter8: int;

        z2 := @parameter9: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "interruptionFilter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "isAmbient");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "isBatteryLowAndNotCharging");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "isVisible");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData interruptionFilter> = r1;

        r0.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isAmbient> = r2;

        r0.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isBatteryLowAndNotCharging> = r3;

        r0.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isVisible> = r4;

        r0.<androidx.wear.watchface.WatchState: boolean hasLowBitAmbient> = z0;

        r0.<androidx.wear.watchface.WatchState: boolean hasBurnInProtection> = z1;

        r0.<androidx.wear.watchface.WatchState: long analogPreviewReferenceTimeMillis> = l0;

        r0.<androidx.wear.watchface.WatchState: long digitalPreviewReferenceTimeMillis> = l1;

        r0.<androidx.wear.watchface.WatchState: int chinHeight> = i2;

        r0.<androidx.wear.watchface.WatchState: boolean isHeadless> = z2;

        return;
    }

    public final androidx.wear.watchface.ObservableWatchData getInterruptionFilter()
    {
        androidx.wear.watchface.WatchState r0;
        androidx.wear.watchface.ObservableWatchData $r1;

        r0 := @this: androidx.wear.watchface.WatchState;

        $r1 = r0.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData interruptionFilter>;

        return $r1;
    }

    public final androidx.wear.watchface.ObservableWatchData isAmbient()
    {
        androidx.wear.watchface.WatchState r0;
        androidx.wear.watchface.ObservableWatchData $r1;

        r0 := @this: androidx.wear.watchface.WatchState;

        $r1 = r0.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isAmbient>;

        return $r1;
    }

    public final androidx.wear.watchface.ObservableWatchData isBatteryLowAndNotCharging()
    {
        androidx.wear.watchface.WatchState r0;
        androidx.wear.watchface.ObservableWatchData $r1;

        r0 := @this: androidx.wear.watchface.WatchState;

        $r1 = r0.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isBatteryLowAndNotCharging>;

        return $r1;
    }

    public final androidx.wear.watchface.ObservableWatchData isVisible()
    {
        androidx.wear.watchface.WatchState r0;
        androidx.wear.watchface.ObservableWatchData $r1;

        r0 := @this: androidx.wear.watchface.WatchState;

        $r1 = r0.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isVisible>;

        return $r1;
    }

    public final boolean hasLowBitAmbient()
    {
        androidx.wear.watchface.WatchState r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.WatchState;

        $z0 = r0.<androidx.wear.watchface.WatchState: boolean hasLowBitAmbient>;

        return $z0;
    }

    public final boolean hasBurnInProtection()
    {
        androidx.wear.watchface.WatchState r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.WatchState;

        $z0 = r0.<androidx.wear.watchface.WatchState: boolean hasBurnInProtection>;

        return $z0;
    }

    public final long getAnalogPreviewReferenceTimeMillis()
    {
        androidx.wear.watchface.WatchState r0;
        long $l0;

        r0 := @this: androidx.wear.watchface.WatchState;

        $l0 = r0.<androidx.wear.watchface.WatchState: long analogPreviewReferenceTimeMillis>;

        return $l0;
    }

    public final long getDigitalPreviewReferenceTimeMillis()
    {
        androidx.wear.watchface.WatchState r0;
        long $l0;

        r0 := @this: androidx.wear.watchface.WatchState;

        $l0 = r0.<androidx.wear.watchface.WatchState: long digitalPreviewReferenceTimeMillis>;

        return $l0;
    }

    public final int getChinHeight()
    {
        androidx.wear.watchface.WatchState r0;
        int $i0;

        r0 := @this: androidx.wear.watchface.WatchState;

        $i0 = r0.<androidx.wear.watchface.WatchState: int chinHeight>;

        return $i0;
    }

    public final boolean isHeadless()
    {
        androidx.wear.watchface.WatchState r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.WatchState;

        $z0 = r0.<androidx.wear.watchface.WatchState: boolean isHeadless>;

        return $z0;
    }

    public final void dump$wear_watchface_release(androidx.wear.watchface.IndentingPrintWriter)
    {
        androidx.wear.watchface.WatchState r0;
        androidx.wear.watchface.IndentingPrintWriter r1;
        androidx.wear.watchface.ObservableWatchData $r2, $r4, $r6, $r8;
        java.lang.String $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21;
        boolean $z0, $z1, $z2;
        java.lang.Boolean $r10, $r12, $r20;
        long $l0, $l1;
        java.lang.Long $r14, $r16;
        int $i2;
        java.lang.Integer $r18;

        r0 := @this: androidx.wear.watchface.WatchState;

        r1 := @parameter0: androidx.wear.watchface.IndentingPrintWriter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "writer");

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>("WatchState:");

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void increaseIndent()>();

        $r2 = r0.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData interruptionFilter>;

        $r3 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("interruptionFilter=", $r2);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r3);

        $r4 = r0.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isAmbient>;

        $r5 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("isAmbient=", $r4);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r5);

        $r6 = r0.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isBatteryLowAndNotCharging>;

        $r7 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("isBatteryLowAndNotCharging=", $r6);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r7);

        $r8 = r0.<androidx.wear.watchface.WatchState: androidx.wear.watchface.ObservableWatchData isVisible>;

        $r9 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("isVisible=", $r8);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r9);

        $z0 = r0.<androidx.wear.watchface.WatchState: boolean hasLowBitAmbient>;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r11 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("hasLowBitAmbient=", $r10);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r11);

        $z1 = r0.<androidx.wear.watchface.WatchState: boolean hasBurnInProtection>;

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r13 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("hasBurnInProtection=", $r12);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r13);

        $l0 = r0.<androidx.wear.watchface.WatchState: long analogPreviewReferenceTimeMillis>;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r15 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("analogPreviewReferenceTimeMillis=", $r14);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r15);

        $l1 = r0.<androidx.wear.watchface.WatchState: long digitalPreviewReferenceTimeMillis>;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r17 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("digitalPreviewReferenceTimeMillis=", $r16);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r17);

        $i2 = r0.<androidx.wear.watchface.WatchState: int chinHeight>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r19 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("chinHeight=", $r18);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r19);

        $z2 = r0.<androidx.wear.watchface.WatchState: boolean isHeadless>;

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r21 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("isHeadless=", $r20);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void println(java.lang.String)>($r21);

        virtualinvoke r1.<androidx.wear.watchface.IndentingPrintWriter: void decreaseIndent()>();

        return;
    }

