androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.lang.String TAG>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: boolean DEBUG>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.lang.Object mLock>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30 mServiceImpl>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.util.Map mSessionRecords>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: android.util.SparseArray mSessionIdMap>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProviderDescriptor mProviderDescriptor>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.lang.String SERVICE_INTERFACE>
    void <init>(androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30 r1;
        java.lang.Object $r2;
        androidx.collection.ArrayMap $r3;
        android.util.SparseArray $r4;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30;

        specialinvoke r0.<android.media.MediaRoute2ProviderService: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.lang.Object mLock> = $r2;

        $r3 = new androidx.collection.ArrayMap;

        specialinvoke $r3.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.util.Map mSessionRecords> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: android.util.SparseArray mSessionIdMap> = $r4;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30 mServiceImpl> = r1;

        return;
    }

    public void attachBaseContext(android.content.Context)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        android.content.Context r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.media.MediaRoute2ProviderService: void attachBaseContext(android.content.Context)>(r1);

        return;
    }

    public void onSetRouteVolume(long, java.lang.String, int)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        long l0;
        java.lang.String r1, $r6;
        int i1;
        androidx.mediarouter.media.MediaRouteProvider$RouteController r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProvider$RouteController findControllerByRouteId(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSetRouteVolume: Couldn\'t find a controller for routeId=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", $r6);

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 3);

        return;

     label1:
        virtualinvoke r2.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void onSetVolume(int)>(i1);

        return;
    }

    public void onSetSessionVolume(long, java.lang.String, int)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        long l0;
        java.lang.String r1;
        int i1;
        android.media.RoutingSessionInfo r2;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r3;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 = virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: android.media.RoutingSessionInfo getSessionInfo(java.lang.String)>(r1);

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "onSetSessionVolume: Couldn\'t find a session");

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 4);

        return;

     label1:
        r3 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController findControllerBySessionId(java.lang.String)>(r1);

        if r3 != null goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "onSetSessionVolume: Couldn\'t find a controller");

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 3);

        return;

     label2:
        virtualinvoke r3.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: void onSetVolume(int)>(i1);

        return;
    }

    public void onCreateSession(long, java.lang.String, java.lang.String, android.os.Bundle)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        long l0;
        java.lang.String r1, r2, r6, r8, $r22;
        android.os.Bundle r3;
        androidx.mediarouter.media.MediaRouteProvider r4;
        androidx.mediarouter.media.MediaRouteDescriptor r5;
        android.media.RoutingSessionInfo$Builder r7, $r21, $r23, $r24, $r25;
        androidx.mediarouter.media.MediaRouteProviderDescriptor $r9;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r10, $r12, $r26;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy $r11;
        byte $b1, b4;
        androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30 $r13;
        java.lang.Object $r14;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r17;
        androidx.mediarouter.media.MediaRouteProvider$RouteController r18;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord $r19, r20;
        int $i5, $i6, $i7;
        java.util.Iterator r27;
        android.media.RoutingSessionInfo r28;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        r4 = virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProvider getMediaRouteProvider()>();

        r5 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteDescriptor getRouteDescriptor(java.lang.String,java.lang.String)>(r2, "onCreateSession");

        if r5 != null goto label1;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 3);

        return;

     label1:
        b4 = 1;

        $r9 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProviderDescriptor mProviderDescriptor>;

        $z0 = virtualinvoke $r9.<androidx.mediarouter.media.MediaRouteProviderDescriptor: boolean supportsDynamicGroupRoute()>();

        if $z0 == 0 goto label2;

        r17 = virtualinvoke r4.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController onCreateDynamicGroupRouteController(java.lang.String)>(r2);

        b4 = b4 | 6;

        if r17 != null goto label5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "onCreateSession: Couldn\'t create a dynamic controller");

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 1);

        return;

     label2:
        r18 = virtualinvoke r4.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String)>(r2);

        if r18 != null goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "onCreateSession: Couldn\'t create a controller");

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 1);

        return;

     label3:
        $r10 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getGroupMemberIds()>();

        $z1 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        b4 = b4 | 2;

     label4:
        $r11 = new androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        specialinvoke $r11.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: void <init>(java.lang.String,androidx.mediarouter.media.MediaRouteProvider$RouteController)>(r2, r18);

        r17 = $r11;

     label5:
        virtualinvoke r17.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: void onSelect()>();

        $r19 = new androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        specialinvoke $r19.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: void <init>(androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter,androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController,long,int)>(r0, r17, l0, b4);

        r20 = $r19;

        r6 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.lang.String assignSessionId(androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord)>(r20);

        $r21 = new android.media.RoutingSessionInfo$Builder;

        specialinvoke $r21.<android.media.RoutingSessionInfo$Builder: void <init>(java.lang.String,java.lang.String)>(r6, r1);

        $r22 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getName()>();

        $r23 = virtualinvoke $r21.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setName(java.lang.CharSequence)>($r22);

        $i5 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolumeHandling()>();

        $r24 = virtualinvoke $r23.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setVolumeHandling(int)>($i5);

        $i6 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolume()>();

        $r25 = virtualinvoke $r24.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setVolume(int)>($i6);

        $i7 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolumeMax()>();

        r7 = virtualinvoke $r25.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setVolumeMax(int)>($i7);

        $r26 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getGroupMemberIds()>();

        $z3 = interfaceinvoke $r26.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label6;

        virtualinvoke r7.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addSelectedRoute(java.lang.String)>(r2);

        goto label8;

     label6:
        $r12 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getGroupMemberIds()>();

        r27 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z2 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r14 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r14;

        virtualinvoke r7.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addSelectedRoute(java.lang.String)>(r8);

        goto label7;

     label8:
        r28 = virtualinvoke r7.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo build()>();

        virtualinvoke r20.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: void setSessionInfo(android.media.RoutingSessionInfo)>(r28);

        $b1 = b4 & 6;

        if $b1 != 2 goto label9;

        virtualinvoke r20.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: void updateMemberRouteControllers(java.lang.String,android.media.RoutingSessionInfo,android.media.RoutingSessionInfo)>(r2, null, r28);

     label9:
        $r13 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30 mServiceImpl>;

        virtualinvoke $r13.<androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30: void setDynamicRoutesChangedListener(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController)>(r17);

        return;
    }

    public void onReleaseSession(long, java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        long l0;
        java.lang.String r1;
        android.media.RoutingSessionInfo r2;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r3;
        java.lang.Object r4, $r6, $r8;
        java.lang.Throwable r5, $r9;
        java.util.Map $r7;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: android.media.RoutingSessionInfo getSessionInfo(java.lang.String)>(r1);

        if r2 != null goto label1;

        return;

     label1:
        $r6 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.lang.Object mLock>;

        r4 = $r6;

        entermonitor $r6;

     label2:
        $r7 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.util.Map mSessionRecords>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r3 = (androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord) $r8;

        exitmonitor r4;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r4;

     label5:
        throw r5;

     label6:
        if r3 != null goto label7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "onReleaseSession: Couldn\'t find a session");

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 4);

        return;

     label7:
        virtualinvoke r3.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: void release(boolean)>(1);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void onSelectRoute(long, java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        long l0;
        java.lang.String r1, r2;
        android.media.RoutingSessionInfo r3;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r4;
        androidx.mediarouter.media.MediaRouteDescriptor $r5;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: android.media.RoutingSessionInfo getSessionInfo(java.lang.String)>(r1);

        if r3 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "onSelectRoute: Couldn\'t find a session");

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 4);

        return;

     label1:
        $r5 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteDescriptor getRouteDescriptor(java.lang.String,java.lang.String)>(r2, "onSelectRoute");

        if $r5 != null goto label2;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 3);

        return;

     label2:
        r4 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController findControllerBySessionId(java.lang.String)>(r1);

        if r4 != null goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "onSelectRoute: Couldn\'t find a controller");

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 3);

        return;

     label3:
        virtualinvoke r4.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: void onAddMemberRoute(java.lang.String)>(r2);

        return;
    }

    public void onDeselectRoute(long, java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        long l0;
        java.lang.String r1, r2;
        android.media.RoutingSessionInfo r3;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r4;
        androidx.mediarouter.media.MediaRouteDescriptor $r5;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: android.media.RoutingSessionInfo getSessionInfo(java.lang.String)>(r1);

        if r3 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "onDeselectRoute: Couldn\'t find a session");

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 4);

        return;

     label1:
        $r5 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteDescriptor getRouteDescriptor(java.lang.String,java.lang.String)>(r2, "onDeselectRoute");

        if $r5 != null goto label2;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 3);

        return;

     label2:
        r4 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController findControllerBySessionId(java.lang.String)>(r1);

        if r4 != null goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "onDeselectRoute: Couldn\'t find a controller");

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 3);

        return;

     label3:
        virtualinvoke r4.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: void onRemoveMemberRoute(java.lang.String)>(r2);

        return;
    }

    public void onTransferToRoute(long, java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        long l0;
        java.lang.String r1, r2;
        android.media.RoutingSessionInfo r3;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r4;
        androidx.mediarouter.media.MediaRouteDescriptor $r5;
        java.util.List $r6;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: android.media.RoutingSessionInfo getSessionInfo(java.lang.String)>(r1);

        if r3 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "onTransferToRoute: Couldn\'t find a session");

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 4);

        return;

     label1:
        $r5 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteDescriptor getRouteDescriptor(java.lang.String,java.lang.String)>(r2, "onTransferToRoute");

        if $r5 != null goto label2;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 3);

        return;

     label2:
        r4 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController findControllerBySessionId(java.lang.String)>(r1);

        if r4 != null goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "onTransferToRoute: Couldn\'t find a controller");

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>(l0, 3);

        return;

     label3:
        $r6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r2);

        virtualinvoke r4.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: void onUpdateMemberRoutes(java.util.List)>($r6);

        return;
    }

    public void onDiscoveryPreferenceChanged(android.media.RouteDiscoveryPreference)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        android.media.RouteDiscoveryPreference r1;
        androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30 $r2;
        androidx.mediarouter.media.MediaRouteDiscoveryRequest $r3;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: android.media.RouteDiscoveryPreference;

        $r2 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30 mServiceImpl>;

        $r3 = staticinvoke <androidx.mediarouter.media.MediaRouter2Utils: androidx.mediarouter.media.MediaRouteDiscoveryRequest toMediaRouteDiscoveryRequest(android.media.RouteDiscoveryPreference)>(r1);

        virtualinvoke $r2.<androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30: boolean setBaseDiscoveryRequest(androidx.mediarouter.media.MediaRouteDiscoveryRequest)>($r3);

        return;
    }

    public void setProviderDescriptor(androidx.mediarouter.media.MediaRouteProviderDescriptor)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        androidx.mediarouter.media.MediaRouteProviderDescriptor r1;
        java.util.List r2, $r13;
        androidx.collection.ArrayMap r3, $r6;
        androidx.mediarouter.media.MediaRouteDescriptor r4, r15;
        android.media.MediaRoute2Info r5;
        java.util.ArrayList $r7, r16;
        java.util.Collection $r8;
        boolean $z0, $z2;
        java.lang.Object $r9, $r10;
        java.lang.String $r11;
        java.util.Iterator r14, r17;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteProviderDescriptor;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProviderDescriptor mProviderDescriptor> = r1;

        if r1 != null goto label1;

        $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label2;

     label1:
        $r13 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteProviderDescriptor: java.util.List getRoutes()>();

     label2:
        r2 = $r13;

        $r6 = new androidx.collection.ArrayMap;

        specialinvoke $r6.<androidx.collection.ArrayMap: void <init>()>();

        r3 = $r6;

        r14 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r10 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (androidx.mediarouter.media.MediaRouteDescriptor) $r10;

        if r15 != null goto label4;

        goto label3;

     label4:
        $r11 = virtualinvoke r15.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getId()>();

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r15);

        goto label3;

     label5:
        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void updateStaticSessions(java.util.Map)>(r3);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r16 = $r7;

        $r8 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>();

        r17 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r9 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.mediarouter.media.MediaRouteDescriptor) $r9;

        r5 = staticinvoke <androidx.mediarouter.media.MediaRouter2Utils: android.media.MediaRoute2Info toFwkMediaRoute2Info(androidx.mediarouter.media.MediaRouteDescriptor)>(r4);

        if r5 == null goto label7;

        interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>(r5);

     label7:
        goto label6;

     label8:
        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRoutes(java.util.Collection)>(r16);

        return;
    }

    private androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController findControllerBySessionId(java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        java.lang.String r1;
        java.lang.Object r2, $r5, $r7;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r3;
        java.lang.Throwable r4, $r8;
        java.util.Map $r6;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController $r9;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.util.Map mSessionRecords>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord) $r7;

        if r3 != null goto label2;

        $r9 = null;

        goto label3;

     label2:
        $r9 = virtualinvoke r3.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController getGroupController()>();

     label3:
        exitmonitor r2;

     label4:
        return $r9;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private androidx.mediarouter.media.MediaRouteDescriptor getRouteDescriptor(java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        java.lang.String r1, r2, $r10, $r17, $r19;
        androidx.mediarouter.media.MediaRouteProvider r3;
        java.util.List r4;
        java.util.Iterator r5;
        androidx.mediarouter.media.MediaRouteDescriptor r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r14, $r15, $r16;
        androidx.mediarouter.media.MediaRouteProviderDescriptor $r11, $r12;
        boolean $z0, $z1;
        java.lang.Object $r18;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProvider getMediaRouteProvider()>();

        if r3 == null goto label1;

        $r11 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProviderDescriptor mProviderDescriptor>;

        if $r11 != null goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": no provider info");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", $r10);

        return null;

     label2:
        $r12 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProviderDescriptor mProviderDescriptor>;

        r4 = virtualinvoke $r12.<androidx.mediarouter.media.MediaRouteProviderDescriptor: java.util.List getRoutes()>();

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.mediarouter.media.MediaRouteDescriptor) $r18;

        $r19 = virtualinvoke r6.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getId()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r19, r1);

        if $z1 == 0 goto label4;

        return r6;

     label4:
        goto label3;

     label5:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Couldn\'t find a route : ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", $r17);

        return null;
    }

    private androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord findSessionRecordByController(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r1, $r12;
        java.lang.Object r2, $r7, $r10, $r11;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r5;
        java.lang.Throwable r6, $r13;
        java.util.Map $r8;
        java.util.Set $r9;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        $r7 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.lang.Object mLock>;

        r2 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.util.Map mSessionRecords>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord) $r11;

        $r12 = virtualinvoke r5.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController getGroupController()>();

        if $r12 != r1 goto label4;

        exitmonitor r2;

     label3:
        return r5;

     label4:
        goto label2;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r13 := @caughtexception;

        r6 = $r13;

        exitmonitor r2;

     label8:
        throw r6;

     label9:
        return null;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void setDynamicRouteDescriptor(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController, androidx.mediarouter.media.MediaRouteDescriptor, java.util.Collection)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r1;
        androidx.mediarouter.media.MediaRouteDescriptor r2;
        java.util.Collection r3;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r4;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouteDescriptor;

        r3 := @parameter2: java.util.Collection;

        r4 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord findSessionRecordByController(androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController)>(r1);

        if r4 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "setDynamicRouteDescriptor: Ignoring unknown controller");

        return;

     label1:
        virtualinvoke r4.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: void updateSessionInfo(androidx.mediarouter.media.MediaRouteDescriptor,java.util.Collection)>(r2, r3);

        return;
    }

    void updateStaticSessions(java.util.Map)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        java.util.Map r1, $r6;
        java.util.ArrayList r2, $r4;
        java.lang.Throwable r3, $r15;
        java.lang.Object $r5, $r8, $r12, $r14, r16;
        java.util.Collection $r7;
        boolean $z0, $z1, $z2;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController $r9;
        java.lang.String $r10, $r11;
        androidx.mediarouter.media.MediaRouteDescriptor $r13;
        int $i0, $i1;
        java.util.Iterator r17, r19;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r18, r20;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy r21;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: java.util.Map;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        $r5 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.lang.Object mLock>;

        r16 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.util.Map mSessionRecords>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>();

        r17 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r14 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord) $r14;

        $i0 = virtualinvoke r18.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: int getFlags()>();

        $i1 = $i0 & 4;

        if $i1 != 0 goto label03;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r18);

     label03:
        goto label02;

     label04:
        exitmonitor r16;

     label05:
        goto label08;

     label06:
        $r15 := @caughtexception;

        r3 = $r15;

        exitmonitor r16;

     label07:
        throw r3;

     label08:
        r19 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r8 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord) $r8;

        $r9 = virtualinvoke r20.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController getGroupController()>();

        r21 = (androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy) $r9;

        $r10 = virtualinvoke r21.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: java.lang.String getRouteId()>();

        $z2 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r10);

        if $z2 == 0 goto label10;

        $r11 = virtualinvoke r21.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: java.lang.String getRouteId()>();

        $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r13 = (androidx.mediarouter.media.MediaRouteDescriptor) $r12;

        virtualinvoke r20.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: void updateSessionInfo(androidx.mediarouter.media.MediaRouteDescriptor,java.util.Collection)>($r13, null);

     label10:
        goto label09;

     label11:
        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    void onControlRequest(android.os.Messenger, int, java.lang.String, android.content.Intent)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        android.os.Messenger r1;
        int i0;
        java.lang.String r2;
        android.content.Intent r3;
        android.media.RoutingSessionInfo r4;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r5;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1 r6, $r7;
        long $l2;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: android.os.Messenger;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.content.Intent;

        r4 = virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: android.media.RoutingSessionInfo getSessionInfo(java.lang.String)>(r2);

        if r4 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "onCustomCommand: Couldn\'t find a session");

        return;

     label1:
        r5 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController findControllerBySessionId(java.lang.String)>(r2);

        if r5 != null goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "onControlRequest: Couldn\'t find a controller");

        $l2 = (long) i0;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifyRequestFailed(long,int)>($l2, 3);

        return;

     label2:
        $r7 = new androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1;

        specialinvoke $r7.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: void <init>(androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter,java.lang.String,android.content.Intent,android.os.Messenger,int)>(r0, r2, r3, r1, i0);

        r6 = $r7;

        virtualinvoke r5.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: boolean onControlRequest(android.content.Intent,androidx.mediarouter.media.MediaRouter$ControlRequestCallback)>(r3, r6);

        return;
    }

    void setRouteVolume(java.lang.String, int)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        java.lang.String r1, $r6;
        int i0;
        androidx.mediarouter.media.MediaRouteProvider$RouteController r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProvider$RouteController findControllerByRouteId(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setRouteVolume: Couldn\'t find a controller for routeId=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", $r6);

        return;

     label1:
        virtualinvoke r2.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void onSetVolume(int)>(i0);

        return;
    }

    void updateRouteVolume(java.lang.String, int)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        java.lang.String r1, $r6;
        int i0;
        androidx.mediarouter.media.MediaRouteProvider$RouteController r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProvider$RouteController findControllerByRouteId(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateRouteVolume: Couldn\'t find a controller for routeId=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", $r6);

        return;

     label1:
        virtualinvoke r2.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void onUpdateVolume(int)>(i0);

        return;
    }

    void notifyRouteControllerAdded(androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord, androidx.mediarouter.media.MediaRouteProvider$RouteController, int, java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord r1;
        androidx.mediarouter.media.MediaRouteProvider$RouteController r2;
        int i0, $i2, $i3, $i4;
        java.lang.String r3, r4, r7, r10, $r22;
        androidx.mediarouter.media.MediaRouteDescriptor r5;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r6, $r19;
        android.media.RoutingSessionInfo$Builder r8, $r21, $r23, $r24, $r25;
        java.util.Iterator r9;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r11, $r13, $r26;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy $r12;
        android.media.RoutingSessionInfo $r14;
        java.lang.Object $r15;
        byte b1;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r18;
        android.util.SparseArray $r20;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouteProvider$RouteController;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteDescriptor getRouteDescriptor(java.lang.String,java.lang.String)>(r4, "notifyRouteControllerAdded");

        if r5 != null goto label1;

        return;

     label1:
        b1 = 0;

        $z0 = r2 instanceof androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        if $z0 == 0 goto label2;

        b1 = b1 | 6;

        r18 = (androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController) r2;

        goto label4;

     label2:
        $r11 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getGroupMemberIds()>();

        $z1 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        b1 = b1 | 2;

     label3:
        $r12 = new androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        specialinvoke $r12.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: void <init>(java.lang.String,androidx.mediarouter.media.MediaRouteProvider$RouteController)>(r4, r2);

        r18 = $r12;

     label4:
        $r19 = new androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        specialinvoke $r19.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: void <init>(androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter,androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController,long,int,androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord)>(r0, r18, 0L, b1, r1);

        r6 = $r19;

        r6.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.String mRouteId> = r4;

        r7 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.lang.String assignSessionId(androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord)>(r6);

        $r20 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: android.util.SparseArray mSessionIdMap>;

        virtualinvoke $r20.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r7);

        $r21 = new android.media.RoutingSessionInfo$Builder;

        specialinvoke $r21.<android.media.RoutingSessionInfo$Builder: void <init>(java.lang.String,java.lang.String)>(r7, r3);

        $r22 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getName()>();

        $r23 = virtualinvoke $r21.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setName(java.lang.CharSequence)>($r22);

        $i2 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolumeHandling()>();

        $r24 = virtualinvoke $r23.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setVolumeHandling(int)>($i2);

        $i3 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolume()>();

        $r25 = virtualinvoke $r24.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setVolume(int)>($i3);

        $i4 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolumeMax()>();

        r8 = virtualinvoke $r25.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setVolumeMax(int)>($i4);

        $r26 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getGroupMemberIds()>();

        $z3 = interfaceinvoke $r26.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label5;

        virtualinvoke r8.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addSelectedRoute(java.lang.String)>(r4);

        goto label7;

     label5:
        $r13 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getGroupMemberIds()>();

        r9 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r15 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r15;

        virtualinvoke r8.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addSelectedRoute(java.lang.String)>(r10);

        goto label6;

     label7:
        $r14 = virtualinvoke r8.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo build()>();

        virtualinvoke r6.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: void setSessionInfo(android.media.RoutingSessionInfo)>($r14);

        return;
    }

    void notifyRouteControllerRemoved(int)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        int i0;
        java.lang.String r1;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r2;
        java.lang.Object r3, $r6, $r8, $r10;
        java.lang.Throwable r4, $r11;
        android.util.SparseArray $r5, $r7;
        java.util.Map $r9;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        i0 := @parameter0: int;

        $r5 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: android.util.SparseArray mSessionIdMap>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (java.lang.String) $r6;

        if r1 != null goto label1;

        return;

     label1:
        $r7 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: android.util.SparseArray mSessionIdMap>;

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>(i0);

        $r8 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.lang.Object mLock>;

        r3 = $r8;

        entermonitor $r8;

     label2:
        $r9 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.util.Map mSessionRecords>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord) $r10;

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r3;

     label5:
        throw r4;

     label6:
        if r2 == null goto label7;

        virtualinvoke r2.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: void release(boolean)>(0);

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private androidx.mediarouter.media.MediaRouteProvider$RouteController findControllerByRouteId(java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        java.lang.String r1;
        java.util.ArrayList r2, $r4;
        androidx.mediarouter.media.MediaRouteProvider$RouteController r3;
        java.lang.Object $r5, $r8, r10;
        java.util.Map $r6;
        java.util.Collection $r7;
        boolean $z1;
        java.lang.Throwable $r9, r11;
        java.util.Iterator r12;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r13;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        $r5 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.lang.Object mLock>;

        r10 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.util.Map mSessionRecords>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        exitmonitor r10;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r11 = $r9;

        exitmonitor r10;

     label4:
        throw r11;

     label5:
        r12 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r8 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord) $r8;

        r3 = virtualinvoke r13.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$RouteController findControllerByRouteId(java.lang.String)>(r1);

        if r3 == null goto label7;

        return r3;

     label7:
        goto label6;

     label8:
        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    androidx.mediarouter.media.MediaRouteProvider getMediaRouteProvider()
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        androidx.mediarouter.media.MediaRouteProviderService r1;
        androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30 $r2;
        androidx.mediarouter.media.MediaRouteProvider $r3;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        $r2 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30 mServiceImpl>;

        r1 = virtualinvoke $r2.<androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30: androidx.mediarouter.media.MediaRouteProviderService getService()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteProviderService: androidx.mediarouter.media.MediaRouteProvider getMediaRouteProvider()>();

        return $r3;
    }

    private java.lang.String assignSessionId(androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r0;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r1;
        java.lang.String r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r10;
        java.util.UUID $r6;
        java.util.Map $r7, $r8;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r1 := @parameter0: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        $r5 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        r2 = virtualinvoke $r6.<java.util.UUID: java.lang.String toString()>();

        $r7 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.util.Map mSessionRecords>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        r1.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.String mSessionId> = r2;

        $r8 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: java.util.Map mSessionRecords>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        exitmonitor r3;

     label2:
        return r2;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MR2ProviderService", 3);

        <androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: boolean DEBUG> = $z0;

        return;
    }

androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: java.lang.String val$sessionId>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: android.content.Intent val$intent>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: android.os.Messenger val$messenger>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: int val$requestId>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter this$0>
    void <init>(androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter, java.lang.String, android.content.Intent, android.os.Messenger, int)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1 r0;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r1;
        java.lang.String r2;
        android.content.Intent r3;
        android.os.Messenger r4;
        int i0;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1;

        r1 := @parameter0: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Intent;

        r4 := @parameter3: android.os.Messenger;

        i0 := @parameter4: int;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter this$0> = r1;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: java.lang.String val$sessionId> = r2;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: android.content.Intent val$intent> = r3;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: android.os.Messenger val$messenger> = r4;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: int val$requestId> = i0;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouter$ControlRequestCallback: void <init>()>();

        return;
    }

    public void onResult(android.os.Bundle)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1 r0;
        android.os.Bundle r1;
        boolean $z0;
        int $i0;
        android.os.Messenger $r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9, $r10, $r11;
        java.lang.String $r5, $r12;
        android.content.Intent $r8;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1;

        r1 := @parameter0: android.os.Bundle;

        $z0 = <androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Route control request succeeded, sessionId=");

        $r5 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: java.lang.String val$sessionId>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", intent=");

        $r8 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: android.content.Intent val$intent>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", data=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MR2ProviderService", $r12);

     label1:
        $r2 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: android.os.Messenger val$messenger>;

        $i0 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: int val$requestId>;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: void sendReply(android.os.Messenger,int,int,int,java.lang.Object,android.os.Bundle)>($r2, 3, $i0, 0, r1, null);

        return;
    }

    public void onError(java.lang.String, android.os.Bundle)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1 r0;
        java.lang.String r1, $r9, $r18;
        android.os.Bundle r2, r3, $r5;
        boolean $z0;
        int $i0, $i1;
        android.os.Messenger $r4, $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r16, $r17;
        android.content.Intent $r12;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $z0 = <androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Route control request failed, sessionId=");

        $r9 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: java.lang.String val$sessionId>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", intent=");

        $r12 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: android.content.Intent val$intent>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", error=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", data=");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MR2ProviderService", $r18);

     label1:
        if r1 == null goto label2;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r3 = $r5;

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("error", r1);

        $r6 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: android.os.Messenger val$messenger>;

        $i1 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: int val$requestId>;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: void sendReply(android.os.Messenger,int,int,int,java.lang.Object,android.os.Bundle)>($r6, 4, $i1, 0, r2, r3);

        goto label3;

     label2:
        $r4 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: android.os.Messenger val$messenger>;

        $i0 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: int val$requestId>;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1: void sendReply(android.os.Messenger,int,int,int,java.lang.Object,android.os.Bundle)>($r4, 4, $i0, 0, r2, null);

     label3:
        return;
    }

    void sendReply(android.os.Messenger, int, int, int, java.lang.Object, android.os.Bundle)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1 r0;
        android.os.Messenger r1;
        int i0, i1, i2;
        java.lang.Object r2;
        android.os.Bundle r3;
        android.os.Message r4;
        java.lang.Throwable $r5, $r6, r7, r8;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$1;

        r1 := @parameter0: android.os.Messenger;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        r3 := @parameter5: android.os.Bundle;

        r4 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r4.<android.os.Message: int what> = i0;

        r4.<android.os.Message: int arg1> = i1;

        r4.<android.os.Message: int arg2> = i2;

        r4.<android.os.Message: java.lang.Object obj> = r2;

        virtualinvoke r4.<android.os.Message: void setData(android.os.Bundle)>(r3);

     label1:
        virtualinvoke r1.<android.os.Messenger: void send(android.os.Message)>(r4);

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        goto label5;

     label4:
        $r5 := @caughtexception;

        r8 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MR2ProviderService", "Could not send message to the client.", r8);

     label5:
        return;

        catch android.os.DeadObjectException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label4;
    }

androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: java.lang.String mRouteId>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: androidx.mediarouter.media.MediaRouteProvider$RouteController mRouteController>
    void <init>(java.lang.String, androidx.mediarouter.media.MediaRouteProvider$RouteController)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy r0;
        java.lang.String r1;
        androidx.mediarouter.media.MediaRouteProvider$RouteController r2;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouteProvider$RouteController;

        specialinvoke r0.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: java.lang.String mRouteId> = r1;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: androidx.mediarouter.media.MediaRouteProvider$RouteController mRouteController> = r2;

        return;
    }

    public java.lang.String getRouteId()
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy r0;
        java.lang.String $r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: java.lang.String mRouteId>;

        return $r1;
    }

    public void onRelease()
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy r0;
        androidx.mediarouter.media.MediaRouteProvider$RouteController $r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: androidx.mediarouter.media.MediaRouteProvider$RouteController mRouteController>;

        virtualinvoke $r1.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void onRelease()>();

        return;
    }

    public void onSelect()
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy r0;
        androidx.mediarouter.media.MediaRouteProvider$RouteController $r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: androidx.mediarouter.media.MediaRouteProvider$RouteController mRouteController>;

        virtualinvoke $r1.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void onSelect()>();

        return;
    }

    public void onUnselect(int)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy r0;
        int i0;
        androidx.mediarouter.media.MediaRouteProvider$RouteController $r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: androidx.mediarouter.media.MediaRouteProvider$RouteController mRouteController>;

        virtualinvoke $r1.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void onUnselect(int)>(i0);

        return;
    }

    public void onSetVolume(int)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy r0;
        int i0;
        androidx.mediarouter.media.MediaRouteProvider$RouteController $r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: androidx.mediarouter.media.MediaRouteProvider$RouteController mRouteController>;

        virtualinvoke $r1.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void onSetVolume(int)>(i0);

        return;
    }

    public void onUpdateVolume(int)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy r0;
        int i0;
        androidx.mediarouter.media.MediaRouteProvider$RouteController $r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: androidx.mediarouter.media.MediaRouteProvider$RouteController mRouteController>;

        virtualinvoke $r1.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void onUpdateVolume(int)>(i0);

        return;
    }

    public boolean onControlRequest(android.content.Intent, androidx.mediarouter.media.MediaRouter$ControlRequestCallback)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy r0;
        android.content.Intent r1;
        androidx.mediarouter.media.MediaRouter$ControlRequestCallback r2;
        androidx.mediarouter.media.MediaRouteProvider$RouteController $r3;
        boolean $z0;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouter$ControlRequestCallback;

        $r3 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: androidx.mediarouter.media.MediaRouteProvider$RouteController mRouteController>;

        $z0 = virtualinvoke $r3.<androidx.mediarouter.media.MediaRouteProvider$RouteController: boolean onControlRequest(android.content.Intent,androidx.mediarouter.media.MediaRouter$ControlRequestCallback)>(r1, r2);

        return $z0;
    }

    public void onUpdateMemberRoutes(java.util.List)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy r0;
        java.util.List r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        r1 := @parameter0: java.util.List;

        return;
    }

    public void onAddMemberRoute(java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy r0;
        java.lang.String r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void onRemoveMemberRoute(java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy r0;
        java.lang.String r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        r1 := @parameter0: java.lang.String;

        return;
    }

androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter mServiceAdapter>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler: java.lang.String mSessionId>
    void <init>(androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter, java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler r0;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r1;
        java.lang.String r2;
        android.os.Looper $r3;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler;

        r1 := @parameter0: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter mServiceAdapter> = r1;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler: java.lang.String mSessionId> = r2;

        return;
    }

    public void handleMessage(android.os.Message)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler r0;
        android.os.Message r1;
        android.os.Messenger r2;
        int i0, i1, i2, i3;
        java.lang.Object r3;
        android.os.Bundle r4;
        boolean $z0;
        android.content.Intent $r5;
        java.lang.String $r6, r10, r11;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter $r7, $r8, $r9;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler;

        r1 := @parameter0: android.os.Message;

        r2 = r1.<android.os.Message: android.os.Messenger replyTo>;

        i0 = r1.<android.os.Message: int what>;

        i1 = r1.<android.os.Message: int arg1>;

        r3 = r1.<android.os.Message: java.lang.Object obj>;

        r4 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();

        tableswitch(i0)
        {
            case 7: goto label2;
            case 8: goto label3;
            case 9: goto label1;
            default: goto label4;
        };

     label1:
        $z0 = r3 instanceof android.content.Intent;

        if $z0 == 0 goto label4;

        $r7 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter mServiceAdapter>;

        $r6 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler: java.lang.String mSessionId>;

        $r5 = (android.content.Intent) r3;

        virtualinvoke $r7.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void onControlRequest(android.os.Messenger,int,java.lang.String,android.content.Intent)>(r2, i1, $r6, $r5);

        goto label4;

     label2:
        i2 = virtualinvoke r4.<android.os.Bundle: int getInt(java.lang.String,int)>("volume", -1);

        r10 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("routeId");

        if i2 < 0 goto label4;

        if r10 == null goto label4;

        $r9 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter mServiceAdapter>;

        virtualinvoke $r9.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void setRouteVolume(java.lang.String,int)>(r10, i2);

        goto label4;

     label3:
        i3 = virtualinvoke r4.<android.os.Bundle: int getInt(java.lang.String,int)>("volume", 0);

        r11 = virtualinvoke r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("routeId");

        if i3 == 0 goto label4;

        if r11 == null goto label4;

        $r8 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter mServiceAdapter>;

        virtualinvoke $r8.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void updateRouteVolume(java.lang.String,int)>(r11, i3);

        goto label4;

     label4:
        return;
    }

androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: int SESSION_FLAG_MR2>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: int SESSION_FLAG_GROUP>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: int SESSION_FLAG_DYNAMIC>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.util.Map mRouteIdToControllerMap>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController mController>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: long mRequestId>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: int mFlags>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.ref.WeakReference mClientRecord>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: boolean mIsCreated>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: boolean mIsReleased>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: android.media.RoutingSessionInfo mSessionInfo>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.String mSessionId>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.String mRouteId>
<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter this$0>
    void <init>(androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter, androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController, long, int)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r0;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r1;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r2;
        long l0;
        int i1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        r1 := @parameter0: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: void <init>(androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter,androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController,long,int,androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord)>(r1, r2, l0, i1, null);

        return;
    }

    void <init>(androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter, androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController, long, int, androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r0;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter r1;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController r2;
        long l0;
        int i1;
        androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord r3;
        androidx.collection.ArrayMap $r4;
        java.lang.ref.WeakReference $r5;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        r1 := @parameter0: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter;

        r2 := @parameter1: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        r3 := @parameter4: androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new androidx.collection.ArrayMap;

        specialinvoke $r4.<androidx.collection.ArrayMap: void <init>()>();

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.util.Map mRouteIdToControllerMap> = $r4;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: boolean mIsCreated> = 0;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController mController> = r2;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: long mRequestId> = l0;

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: int mFlags> = i1;

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r3);

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.ref.WeakReference mClientRecord> = $r5;

        return;
    }

    public int getFlags()
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r0;
        int $i0;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        $i0 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: int mFlags>;

        return $i0;
    }

    androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController getGroupController()
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r0;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController $r1;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController mController>;

        return $r1;
    }

    androidx.mediarouter.media.MediaRouteProvider$RouteController findControllerByRouteId(java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r0;
        java.lang.String r1;
        androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4, $r6;
        java.util.Map $r5;
        androidx.mediarouter.media.MediaRouteProvider$RouteController $r7, $r8;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.ref.WeakReference mClientRecord>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord) $r4;

        if r2 == null goto label1;

        $r8 = virtualinvoke r2.<androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord: androidx.mediarouter.media.MediaRouteProvider$RouteController findControllerByRouteId(java.lang.String)>(r1);

        return $r8;

     label1:
        $r5 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.util.Map mRouteIdToControllerMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (androidx.mediarouter.media.MediaRouteProvider$RouteController) $r6;

        return $r7;
    }

    void setSessionInfo(android.media.RoutingSessionInfo)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r0;
        android.media.RoutingSessionInfo r1, $r5, $r15;
        android.os.Messenger r2, $r6;
        android.media.RoutingSessionInfo$Builder r3, $r10, $r14;
        android.os.Bundle r4, $r11;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler $r7;
        java.lang.String $r8, $r18;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter $r9;
        java.lang.CharSequence $r13, $r16;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        r1 := @parameter0: android.media.RoutingSessionInfo;

        $r5 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: android.media.RoutingSessionInfo mSessionInfo>;

        if $r5 == null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "setSessionInfo: This shouldn\'t be called after sessionInfo is set");

        return;

     label1:
        $r6 = new android.os.Messenger;

        $r7 = new androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler;

        $r9 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter this$0>;

        $r8 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.String mSessionId>;

        specialinvoke $r7.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$IncomingHandler: void <init>(androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter,java.lang.String)>($r9, $r8);

        specialinvoke $r6.<android.os.Messenger: void <init>(android.os.Handler)>($r7);

        r2 = $r6;

        $r10 = new android.media.RoutingSessionInfo$Builder;

        specialinvoke $r10.<android.media.RoutingSessionInfo$Builder: void <init>(android.media.RoutingSessionInfo)>(r1);

        r3 = $r10;

        $r11 = new android.os.Bundle;

        specialinvoke $r11.<android.os.Bundle: void <init>()>();

        r4 = $r11;

        virtualinvoke r4.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("androidx.mediarouter.media.KEY_MESSENGER", r2);

        $r13 = virtualinvoke r1.<android.media.RoutingSessionInfo: java.lang.CharSequence getName()>();

        if $r13 == null goto label2;

        $r16 = virtualinvoke r1.<android.media.RoutingSessionInfo: java.lang.CharSequence getName()>();

        $r18 = interfaceinvoke $r16.<java.lang.CharSequence: java.lang.String toString()>();

        goto label3;

     label2:
        $r18 = null;

     label3:
        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("androidx.mediarouter.media.KEY_SESSION_NAME", $r18);

        $r14 = virtualinvoke r3.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setControlHints(android.os.Bundle)>(r4);

        $r15 = virtualinvoke $r14.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo build()>();

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: android.media.RoutingSessionInfo mSessionInfo> = $r15;

        return;
    }

    public void updateSessionInfo(androidx.mediarouter.media.MediaRouteDescriptor, java.util.Collection)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r0;
        androidx.mediarouter.media.MediaRouteDescriptor r1, $r25;
        java.util.Collection r2;
        android.media.RoutingSessionInfo r3, $r8, $r11, $r16, $r23, $r52;
        android.media.RoutingSessionInfo$Builder r4, $r7, $r32, $r33, $r34;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor r5;
        java.lang.String r6, $r10, $r18, $r30, $r31, $r39, $r45, $r47, r50;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter $r9, $r48;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9, $z10;
        java.lang.Object $r24, $r43;
        java.util.List $r37, $r38;
        android.os.Bundle $r40, $r42, r51;
        java.util.Iterator r49, r53;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        r1 := @parameter0: androidx.mediarouter.media.MediaRouteDescriptor;

        r2 := @parameter1: java.util.Collection;

        r3 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: android.media.RoutingSessionInfo mSessionInfo>;

        if r3 != null goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "updateSessionInfo: mSessionInfo is null. This shouldn\'t happen.");

        return;

     label01:
        if r1 == null goto label02;

        $z6 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: boolean isEnabled()>();

        if $z6 != 0 goto label02;

        $r48 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter this$0>;

        $r47 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.String mSessionId>;

        virtualinvoke $r48.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void onReleaseSession(long,java.lang.String)>(0L, $r47);

        return;

     label02:
        $r7 = new android.media.RoutingSessionInfo$Builder;

        specialinvoke $r7.<android.media.RoutingSessionInfo$Builder: void <init>(android.media.RoutingSessionInfo)>(r3);

        r4 = $r7;

        if r1 == null goto label07;

        $r30 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getId()>();

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.String mRouteId> = $r30;

        $r31 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getName()>();

        $r32 = virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setName(java.lang.CharSequence)>($r31);

        $i5 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolume()>();

        $r33 = virtualinvoke $r32.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setVolume(int)>($i5);

        $i6 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolumeMax()>();

        $r34 = virtualinvoke $r33.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setVolumeMax(int)>($i6);

        $i7 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: int getVolumeHandling()>();

        virtualinvoke $r34.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setVolumeHandling(int)>($i7);

        virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder clearSelectedRoutes()>();

        $r37 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getGroupMemberIds()>();

        $z4 = interfaceinvoke $r37.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label03;

        $r45 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.String mRouteId>;

        virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addSelectedRoute(java.lang.String)>($r45);

        goto label05;

     label03:
        $r38 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: java.util.List getGroupMemberIds()>();

        r49 = interfaceinvoke $r38.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z5 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label05;

        $r43 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>();

        r50 = (java.lang.String) $r43;

        virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addSelectedRoute(java.lang.String)>(r50);

        goto label04;

     label05:
        r51 = virtualinvoke r3.<android.media.RoutingSessionInfo: android.os.Bundle getControlHints()>();

        if r51 != null goto label06;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "updateSessionInfo: controlHints is null. This shouldn\'t happen.");

        $r42 = new android.os.Bundle;

        specialinvoke $r42.<android.os.Bundle: void <init>()>();

        r51 = $r42;

     label06:
        $r39 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getName()>();

        virtualinvoke r51.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("androidx.mediarouter.media.KEY_SESSION_NAME", $r39);

        $r40 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: android.os.Bundle asBundle()>();

        virtualinvoke r51.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>("androidx.mediarouter.media.KEY_GROUP_ROUTE", $r40);

        virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder setControlHints(android.os.Bundle)>(r51);

     label07:
        $r52 = virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo build()>();

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: android.media.RoutingSessionInfo mSessionInfo> = $r52;

        if r2 == null goto label15;

        $z0 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label15;

        z7 = 0;

        virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder clearSelectedRoutes()>();

        virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder clearSelectableRoutes()>();

        virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder clearDeselectableRoutes()>();

        virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder clearTransferableRoutes()>();

        r53 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r24 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>();

        r5 = (androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor) $r24;

        $r25 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: androidx.mediarouter.media.MediaRouteDescriptor getRouteDescriptor()>();

        r6 = virtualinvoke $r25.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getId()>();

        $i3 = r5.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: int mSelectionState>;

        if $i3 == 2 goto label09;

        $i4 = r5.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: int mSelectionState>;

        if $i4 != 3 goto label10;

     label09:
        virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addSelectedRoute(java.lang.String)>(r6);

        z7 = 1;

     label10:
        $z8 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean isGroupable()>();

        if $z8 == 0 goto label11;

        virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addSelectableRoute(java.lang.String)>(r6);

     label11:
        $z2 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean isUnselectable()>();

        if $z2 == 0 goto label12;

        virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addDeselectableRoute(java.lang.String)>(r6);

     label12:
        $z3 = virtualinvoke r5.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController$DynamicRouteDescriptor: boolean isTransferable()>();

        if $z3 == 0 goto label13;

        virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo$Builder addTransferableRoute(java.lang.String)>(r6);

     label13:
        goto label08;

     label14:
        if z7 == 0 goto label15;

        $r23 = virtualinvoke r4.<android.media.RoutingSessionInfo$Builder: android.media.RoutingSessionInfo build()>();

        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: android.media.RoutingSessionInfo mSessionInfo> = $r23;

     label15:
        $z9 = <androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: boolean DEBUG>;

        if $z9 == 0 goto label16;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSessionInfo: groupRoute=");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sessionInfo=");

        $r16 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: android.media.RoutingSessionInfo mSessionInfo>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MR2ProviderService", $r18);

     label16:
        $i0 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: int mFlags>;

        $i1 = $i0 & 5;

        if $i1 != 5 goto label17;

        if r1 == null goto label17;

        $r10 = virtualinvoke r1.<androidx.mediarouter.media.MediaRouteDescriptor: java.lang.String getId()>();

        $r11 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: android.media.RoutingSessionInfo mSessionInfo>;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: void updateMemberRouteControllers(java.lang.String,android.media.RoutingSessionInfo,android.media.RoutingSessionInfo)>($r10, r3, $r11);

     label17:
        $z10 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: boolean mIsCreated>;

        if $z10 != 0 goto label18;

        specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: void notifySessionCreated()>();

        goto label19;

     label18:
        $r9 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter this$0>;

        $r8 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: android.media.RoutingSessionInfo mSessionInfo>;

        virtualinvoke $r9.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifySessionUpdated(android.media.RoutingSessionInfo)>($r8);

     label19:
        return;
    }

    public void release(boolean)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r0;
        boolean z0, $z1, $z2;
        androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord r1;
        int $i0, $i1, $i2, $i3;
        androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController $r2, $r3, $r6, $r8;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        java.lang.String $r7, $r13;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy $r9;
        android.media.RoutingSessionInfo $r10;
        androidx.mediarouter.media.MediaRouteProvider$RouteController r11;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter $r12;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        z0 := @parameter0: boolean;

        $z1 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: boolean mIsReleased>;

        if $z1 != 0 goto label4;

        $i0 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: int mFlags>;

        $i1 = $i0 & 3;

        if $i1 != 3 goto label1;

        $r10 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: android.media.RoutingSessionInfo mSessionInfo>;

        virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: void updateMemberRouteControllers(java.lang.String,android.media.RoutingSessionInfo,android.media.RoutingSessionInfo)>(null, $r10, null);

     label1:
        if z0 == 0 goto label3;

        $r2 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController mController>;

        virtualinvoke $r2.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: void onUnselect(int)>(2);

        $r3 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController mController>;

        virtualinvoke $r3.<androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController: void onRelease()>();

        $i2 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: int mFlags>;

        $i3 = $i2 & 1;

        if $i3 != 0 goto label3;

        $r4 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.ref.WeakReference mClientRecord>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord) $r5;

        if r1 == null goto label3;

        r11 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController mController>;

        $r6 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController mController>;

        $z2 = $r6 instanceof androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy;

        if $z2 == 0 goto label2;

        $r8 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$DynamicGroupRouteController mController>;

        $r9 = (androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy) $r8;

        r11 = $r9.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$DynamicGroupRouteControllerProxy: androidx.mediarouter.media.MediaRouteProvider$RouteController mRouteController>;

     label2:
        $r7 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.String mRouteId>;

        virtualinvoke r1.<androidx.mediarouter.media.MediaRouteProviderService$MediaRouteProviderServiceImplApi30$ClientRecord: void releaseControllerByProvider(androidx.mediarouter.media.MediaRouteProvider$RouteController,java.lang.String)>(r11, $r7);

     label3:
        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: boolean mIsReleased> = 1;

        $r12 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter this$0>;

        $r13 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.lang.String mSessionId>;

        virtualinvoke $r12.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifySessionReleased(java.lang.String)>($r13);

     label4:
        return;
    }

    public void updateMemberRouteControllers(java.lang.String, android.media.RoutingSessionInfo, android.media.RoutingSessionInfo)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r0;
        java.lang.String r1, r11, r15;
        android.media.RoutingSessionInfo r2, r3;
        java.util.List r4, r5, $r8, $r9;
        boolean $z0, $z1, $z3;
        java.lang.Object $r6, $r7;
        java.util.Iterator r10, r14;
        androidx.mediarouter.media.MediaRouteProvider$RouteController r12, r13;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.media.RoutingSessionInfo;

        r3 := @parameter2: android.media.RoutingSessionInfo;

        if r2 != null goto label01;

        $r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label02;

     label01:
        $r8 = virtualinvoke r2.<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()>();

     label02:
        r4 = $r8;

        if r3 != null goto label03;

        $r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label04;

     label03:
        $r9 = virtualinvoke r3.<android.media.RoutingSessionInfo: java.util.List getSelectedRoutes()>();

     label04:
        r5 = $r9;

        r10 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r7 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r7;

        r12 = virtualinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$RouteController findControllerByRouteId(java.lang.String)>(r11);

        if r12 != null goto label06;

        r13 = specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRouteProvider$RouteController getOrCreateRouteController(java.lang.String,java.lang.String)>(r11, r1);

        virtualinvoke r13.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void onSelect()>();

     label06:
        goto label05;

     label07:
        r14 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r6 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.String) $r6;

        $z1 = interfaceinvoke r5.<java.util.List: boolean contains(java.lang.Object)>(r15);

        if $z1 != 0 goto label09;

        specialinvoke r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: boolean releaseRouteControllerByRouteId(java.lang.String)>(r15);

     label09:
        goto label08;

     label10:
        return;
    }

    private void notifySessionCreated()
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r0;
        boolean $z0;
        android.media.RoutingSessionInfo $r1;
        long $l0;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter $r2;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        $z0 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: boolean mIsCreated>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MR2ProviderService", "notifySessionCreated: Routing session is already created.");

        return;

     label1:
        r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: boolean mIsCreated> = 1;

        $r2 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter this$0>;

        $l0 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: long mRequestId>;

        $r1 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: android.media.RoutingSessionInfo mSessionInfo>;

        virtualinvoke $r2.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: void notifySessionCreated(long,android.media.RoutingSessionInfo)>($l0, $r1);

        return;
    }

    private androidx.mediarouter.media.MediaRouteProvider$RouteController getOrCreateRouteController(java.lang.String, java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r0;
        java.lang.String r1, r2;
        java.util.Map $r3, $r7;
        java.lang.Object $r4;
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter $r5, $r9;
        androidx.mediarouter.media.MediaRouteProvider $r6, $r10;
        androidx.mediarouter.media.MediaRouteProvider$RouteController r11, $r12, r13;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.util.Map mRouteIdToControllerMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r11 = (androidx.mediarouter.media.MediaRouteProvider$RouteController) $r4;

        if r11 == null goto label1;

        return r11;

     label1:
        if r2 != null goto label2;

        $r9 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter this$0>;

        $r10 = virtualinvoke $r9.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProvider getMediaRouteProvider()>();

        $r12 = virtualinvoke $r10.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String)>(r1);

        goto label3;

     label2:
        $r5 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter this$0>;

        $r6 = virtualinvoke $r5.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter: androidx.mediarouter.media.MediaRouteProvider getMediaRouteProvider()>();

        $r12 = virtualinvoke $r6.<androidx.mediarouter.media.MediaRouteProvider: androidx.mediarouter.media.MediaRouteProvider$RouteController onCreateRouteController(java.lang.String,java.lang.String)>(r1, r2);

     label3:
        r13 = $r12;

        if r13 == null goto label4;

        $r7 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.util.Map mRouteIdToControllerMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r13);

     label4:
        return r13;
    }

    private boolean releaseRouteControllerByRouteId(java.lang.String)
    {
        androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord r0;
        java.lang.String r1;
        androidx.mediarouter.media.MediaRouteProvider$RouteController r2;
        java.util.Map $r3;
        java.lang.Object $r4;

        r0 := @this: androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<androidx.mediarouter.media.MediaRoute2ProviderServiceAdapter$SessionRecord: java.util.Map mRouteIdToControllerMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (androidx.mediarouter.media.MediaRouteProvider$RouteController) $r4;

        if r2 == null goto label1;

        virtualinvoke r2.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void onUnselect(int)>(0);

        virtualinvoke r2.<androidx.mediarouter.media.MediaRouteProvider$RouteController: void onRelease()>();

        return 1;

     label1:
        return 0;
    }

