androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: int pathLastIndex>
<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: boolean hasNext>
    public void <init>(androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode, androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[])
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] r2, $r3;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator $r4;
        java.lang.Object[] $r5;
        int $i0, $i1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator;

        r1 := @parameter0: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode;

        r2 := @parameter1: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[];

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "node");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "path");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path> = r2;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: boolean hasNext> = 1;

        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        $r4 = $r3[0];

        $r5 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: java.lang.Object[] getBuffer$runtime_release()>();

        $i0 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: int entryCount$runtime_release()>();

        $i1 = 2 * $i0;

        virtualinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: void reset(java.lang.Object[],int)>($r5, $i1);

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: int pathLastIndex> = 0;

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: void ensureNextEntryIsReady()>();

        return;
    }

    protected final androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] getPath()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator r0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        return $r1;
    }

    protected final int getPathLastIndex()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator r0;
        int $i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: int pathLastIndex>;

        return $i0;
    }

    protected final void setPathLastIndex(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator r0;
        int i0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator;

        i0 := @parameter0: int;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: int pathLastIndex> = i0;

        return;
    }

    private static void getHasNext$annotations()
    {
        return;
    }

    private final int moveToNextNodeWithData(int)
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] $r2, $r4, $r6, $r8, $r11;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator $r3, $r5, $r7, $r9, $r12;
        boolean $z0, $z1;
        java.lang.Object[] $r10, $r13, $r14;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        $r3 = $r2[i0];

        $z0 = virtualinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: boolean hasNextKey()>();

        if $z0 == 0 goto label1;

        return i0;

     label1:
        $r4 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        $r5 = $r4[i0];

        $z1 = virtualinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: boolean hasNextNode()>();

        if $z1 == 0 goto label4;

        $r6 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        $r7 = $r6[i0];

        r1 = virtualinvoke $r7.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode currentNode()>();

        if i0 != 6 goto label2;

        $r11 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        $i6 = i0 + 1;

        $r12 = $r11[$i6];

        $r13 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: java.lang.Object[] getBuffer$runtime_release()>();

        $r14 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: java.lang.Object[] getBuffer$runtime_release()>();

        $i7 = lengthof $r14;

        virtualinvoke $r12.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: void reset(java.lang.Object[],int)>($r13, $i7);

        goto label3;

     label2:
        $r8 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        $i1 = i0 + 1;

        $r9 = $r8[$i1];

        $r10 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: java.lang.Object[] getBuffer$runtime_release()>();

        $i2 = virtualinvoke r1.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: int entryCount$runtime_release()>();

        $i3 = 2 * $i2;

        virtualinvoke $r9.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: void reset(java.lang.Object[],int)>($r10, $i3);

     label3:
        $i4 = i0 + 1;

        $i5 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: int moveToNextNodeWithData(int)>($i4);

        return $i5;

     label4:
        return -1;
    }

    private final void ensureNextEntryIsReady()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator r0;
        int $i0, $i1, i2, i3;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] $r1, $r3, $r8, $r10, $r12;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator $r2, $r5, $r9, $r11, $r13;
        boolean $z0, $z1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion $r4;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode $r6;
        java.lang.Object[] $r7;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator;

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: int pathLastIndex>;

        $r2 = $r1[$i0];

        $z0 = virtualinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: boolean hasNextKey()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        i2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: int pathLastIndex>;

     label2:
        if -1 >= i2 goto label6;

        i3 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: int moveToNextNodeWithData(int)>(i2);

        if i3 != -1 goto label3;

        $r10 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        $r11 = $r10[i2];

        $z1 = virtualinvoke $r11.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: boolean hasNextNode()>();

        if $z1 == 0 goto label3;

        $r12 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        $r13 = $r12[i2];

        virtualinvoke $r13.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: void moveToNextNode()>();

        i3 = specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: int moveToNextNodeWithData(int)>(i2);

     label3:
        if i3 == -1 goto label4;

        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: int pathLastIndex> = i3;

        return;

     label4:
        if i2 <= 0 goto label5;

        $r8 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        $i1 = i2 - 1;

        $r9 = $r8[$i1];

        virtualinvoke $r9.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: void moveToNextNode()>();

     label5:
        $r3 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        $r5 = $r3[i2];

        $r4 = <androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion Companion>;

        $r6 = virtualinvoke $r4.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode$Companion: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode getEMPTY$runtime_release()>();

        $r7 = virtualinvoke $r6.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNode: java.lang.Object[] getBuffer$runtime_release()>();

        virtualinvoke $r5.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: void reset(java.lang.Object[],int)>($r7, 0);

        i2 = i2 + -1;

        goto label2;

     label6:
        r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: boolean hasNext> = 0;

        return;
    }

    protected final java.lang.Object currentKey()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator r0;
        int $i0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] $r1;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator;

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: void checkHasNext()>();

        $r1 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: int pathLastIndex>;

        $r2 = $r1[$i0];

        $r3 = virtualinvoke $r2.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: java.lang.Object currentKey()>();

        return $r3;
    }

    public boolean hasNext()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator r0;
        boolean $z0;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator;

        $z0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: boolean hasNext>;

        return $z0;
    }

    public java.lang.Object next()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator r0;
        java.lang.Object r1;
        int $i0;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] $r2;
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator $r3;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator;

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: void checkHasNext()>();

        $r2 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator[] path>;

        $i0 = r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: int pathLastIndex>;

        $r3 = $r2[$i0];

        r1 = virtualinvoke $r3.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.TrieNodeBaseIterator: java.lang.Object next()>();

        specialinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: void ensureNextEntryIsReady()>();

        return r1;
    }

    private final void checkHasNext()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator r0;
        boolean $z0;
        java.util.NoSuchElementException $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator;

        $z0 = virtualinvoke r0.<androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public void remove()
    {
        androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.compose.runtime.external.kotlinx.collections.immutable.implementations.immutableMap.PersistentHashMapBaseIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Operation is not supported for read-only collection");

        throw $r1;
    }

