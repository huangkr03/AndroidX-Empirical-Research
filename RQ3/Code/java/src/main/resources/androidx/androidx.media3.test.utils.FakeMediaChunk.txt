androidx.media3.test.utils.FakeMediaChunk
<androidx.media3.test.utils.FakeMediaChunk: androidx.media3.datasource.DataSource DATA_SOURCE>
    public void <init>(androidx.media3.common.Format, long, long)
    {
        androidx.media3.test.utils.FakeMediaChunk r0;
        androidx.media3.common.Format r1;
        long l0, l1;

        r0 := @this: androidx.media3.test.utils.FakeMediaChunk;

        r1 := @parameter0: androidx.media3.common.Format;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        specialinvoke r0.<androidx.media3.test.utils.FakeMediaChunk: void <init>(androidx.media3.common.Format,long,long,int)>(r1, l0, l1, 0);

        return;
    }

    public void <init>(androidx.media3.common.Format, long, long, int)
    {
        androidx.media3.test.utils.FakeMediaChunk r0;
        androidx.media3.common.Format r1;
        long l0, l1;
        int i2;
        androidx.media3.datasource.DataSpec $r2;
        android.net.Uri $r3;
        androidx.media3.datasource.DataSource $r4;

        r0 := @this: androidx.media3.test.utils.FakeMediaChunk;

        r1 := @parameter0: androidx.media3.common.Format;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        $r4 = <androidx.media3.test.utils.FakeMediaChunk: androidx.media3.datasource.DataSource DATA_SOURCE>;

        $r2 = new androidx.media3.datasource.DataSpec;

        $r3 = <android.net.Uri: android.net.Uri EMPTY>;

        specialinvoke $r2.<androidx.media3.datasource.DataSpec: void <init>(android.net.Uri)>($r3);

        specialinvoke r0.<androidx.media3.exoplayer.source.chunk.MediaChunk: void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,int,java.lang.Object,long,long,long)>($r4, $r2, r1, i2, null, l0, l1, 0L);

        return;
    }

    public void cancelLoad()
    {
        androidx.media3.test.utils.FakeMediaChunk r0;

        r0 := @this: androidx.media3.test.utils.FakeMediaChunk;

        return;
    }

    public void load()
    {
        androidx.media3.test.utils.FakeMediaChunk r0;

        r0 := @this: androidx.media3.test.utils.FakeMediaChunk;

        return;
    }

    public boolean isLoadCompleted()
    {
        androidx.media3.test.utils.FakeMediaChunk r0;

        r0 := @this: androidx.media3.test.utils.FakeMediaChunk;

        return 1;
    }

    static void <clinit>()
    {
        androidx.media3.datasource.DefaultHttpDataSource$Factory $r0, $r1;
        androidx.media3.datasource.DefaultHttpDataSource $r2;

        $r0 = new androidx.media3.datasource.DefaultHttpDataSource$Factory;

        specialinvoke $r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: void <init>()>();

        $r1 = virtualinvoke $r0.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource$Factory setUserAgent(java.lang.String)>("TEST_AGENT");

        $r2 = virtualinvoke $r1.<androidx.media3.datasource.DefaultHttpDataSource$Factory: androidx.media3.datasource.DefaultHttpDataSource createDataSource()>();

        <androidx.media3.test.utils.FakeMediaChunk: androidx.media3.datasource.DataSource DATA_SOURCE> = $r2;

        return;
    }

