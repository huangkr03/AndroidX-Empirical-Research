androidx.graphics.surface.JniBindings
<androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>
    public void <init>()
    {
        androidx.graphics.surface.JniBindings r0;

        r0 := @this: androidx.graphics.surface.JniBindings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.graphics.surface.JniBindings$Companion $r0, $r1;

        $r0 = new androidx.graphics.surface.JniBindings$Companion;

        specialinvoke $r0.<androidx.graphics.surface.JniBindings$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion> = $r0;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("graphics-core");

        $r1 = <androidx.graphics.surface.JniBindings: androidx.graphics.surface.JniBindings$Companion Companion>;

        staticinvoke <androidx.graphics.surface.JniBindings$Companion: void access$nLoadLibrary(androidx.graphics.surface.JniBindings$Companion)>($r1);

        return;
    }

androidx.graphics.surface.JniBindings$Companion
    private void <init>()
    {
        androidx.graphics.surface.JniBindings$Companion r0;

        r0 := @this: androidx.graphics.surface.JniBindings$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.graphics.surface.JniBindings$Companion: void nLoadLibrary()>
<androidx.graphics.surface.JniBindings$Companion: long nCreate(long,java.lang.String)>
<androidx.graphics.surface.JniBindings$Companion: long nCreateFromSurface(android.view.Surface,java.lang.String)>
<androidx.graphics.surface.JniBindings$Companion: void nRelease(long)>
<androidx.graphics.surface.JniBindings$Companion: long nTransactionCreate()>
<androidx.graphics.surface.JniBindings$Companion: void nTransactionDelete(long)>
<androidx.graphics.surface.JniBindings$Companion: void nTransactionApply(long)>
<androidx.graphics.surface.JniBindings$Companion: void nTransactionReparent(long,long,long)>
<androidx.graphics.surface.JniBindings$Companion: void nTransactionSetOnComplete(long,androidx.graphics.surface.SurfaceControlCompat$TransactionCompletedListener)>
<androidx.graphics.surface.JniBindings$Companion: void nTransactionSetOnCommit(long,androidx.graphics.surface.SurfaceControlCompat$TransactionCommittedListener)>
<androidx.graphics.surface.JniBindings$Companion: int nExtractFenceFd(androidx.hardware.SyncFence)>
<androidx.graphics.surface.JniBindings$Companion: void nSetBuffer(long,long,android.hardware.HardwareBuffer,androidx.hardware.SyncFence)>
<androidx.graphics.surface.JniBindings$Companion: void nSetGeometry(long,long,int,int,int,int,int)>
<androidx.graphics.surface.JniBindings$Companion: void nSetVisibility(long,long,byte)>
<androidx.graphics.surface.JniBindings$Companion: void nSetZOrder(long,long,int)>
<androidx.graphics.surface.JniBindings$Companion: void nSetDamageRegion(long,long,android.graphics.Rect)>
<androidx.graphics.surface.JniBindings$Companion: void nSetDesiredPresentTime(long,long)>
<androidx.graphics.surface.JniBindings$Companion: void nSetBufferTransparency(long,long,byte)>
<androidx.graphics.surface.JniBindings$Companion: void nSetBufferAlpha(long,long,float)>
<androidx.graphics.surface.JniBindings$Companion: void nSetCrop(long,long,int,int,int,int)>
<androidx.graphics.surface.JniBindings$Companion: void nSetPosition(long,long,float,float)>
<androidx.graphics.surface.JniBindings$Companion: void nSetScale(long,long,float,float)>
<androidx.graphics.surface.JniBindings$Companion: void nSetBufferTransform(long,long,int)>
    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.graphics.surface.JniBindings$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.graphics.surface.JniBindings$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.graphics.surface.JniBindings$Companion: void <init>()>();

        return;
    }

    public static final void access$nLoadLibrary(androidx.graphics.surface.JniBindings$Companion)
    {
        androidx.graphics.surface.JniBindings$Companion $r0;

        $r0 := @parameter0: androidx.graphics.surface.JniBindings$Companion;

        specialinvoke $r0.<androidx.graphics.surface.JniBindings$Companion: void nLoadLibrary()>();

        return;
    }

