androidx.health.connect.client.aggregate.AggregationResult
<androidx.health.connect.client.aggregate.AggregationResult: java.util.Map longValues>
<androidx.health.connect.client.aggregate.AggregationResult: java.util.Map doubleValues>
<androidx.health.connect.client.aggregate.AggregationResult: java.util.Set dataOrigins>
    public void <init>(java.util.Map, java.util.Map, java.util.Set)
    {
        androidx.health.connect.client.aggregate.AggregationResult r0;
        java.util.Map r1, r2;
        java.util.Set r3;

        r0 := @this: androidx.health.connect.client.aggregate.AggregationResult;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Set;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "longValues");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "doubleValues");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "dataOrigins");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.health.connect.client.aggregate.AggregationResult: java.util.Map longValues> = r1;

        r0.<androidx.health.connect.client.aggregate.AggregationResult: java.util.Map doubleValues> = r2;

        r0.<androidx.health.connect.client.aggregate.AggregationResult: java.util.Set dataOrigins> = r3;

        return;
    }

    public final java.util.Map getLongValues$health_connect_client_release()
    {
        androidx.health.connect.client.aggregate.AggregationResult r0;
        java.util.Map $r1;

        r0 := @this: androidx.health.connect.client.aggregate.AggregationResult;

        $r1 = r0.<androidx.health.connect.client.aggregate.AggregationResult: java.util.Map longValues>;

        return $r1;
    }

    public final java.util.Map getDoubleValues$health_connect_client_release()
    {
        androidx.health.connect.client.aggregate.AggregationResult r0;
        java.util.Map $r1;

        r0 := @this: androidx.health.connect.client.aggregate.AggregationResult;

        $r1 = r0.<androidx.health.connect.client.aggregate.AggregationResult: java.util.Map doubleValues>;

        return $r1;
    }

    public final java.util.Set getDataOrigins()
    {
        androidx.health.connect.client.aggregate.AggregationResult r0;
        java.util.Set $r1;

        r0 := @this: androidx.health.connect.client.aggregate.AggregationResult;

        $r1 = r0.<androidx.health.connect.client.aggregate.AggregationResult: java.util.Set dataOrigins>;

        return $r1;
    }

    public final boolean hasMetric(androidx.health.connect.client.aggregate.AggregateMetric)
    {
        androidx.health.connect.client.aggregate.AggregationResult r0;
        androidx.health.connect.client.aggregate.AggregateMetric r1;
        boolean $z0;

        r0 := @this: androidx.health.connect.client.aggregate.AggregationResult;

        r1 := @parameter0: androidx.health.connect.client.aggregate.AggregateMetric;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "metric");

        $z0 = virtualinvoke r0.<androidx.health.connect.client.aggregate.AggregationResult: boolean contains(androidx.health.connect.client.aggregate.AggregateMetric)>(r1);

        return $z0;
    }

    public final boolean contains(androidx.health.connect.client.aggregate.AggregateMetric)
    {
        androidx.health.connect.client.aggregate.AggregationResult r0;
        androidx.health.connect.client.aggregate.AggregateMetric r1;
        androidx.health.connect.client.aggregate.AggregateMetric$Converter r2;
        boolean $z0, $z1, $z2;
        kotlin.NoWhenBranchMatchedException $r3;
        java.util.Map $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: androidx.health.connect.client.aggregate.AggregationResult;

        r1 := @parameter0: androidx.health.connect.client.aggregate.AggregateMetric;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "metric");

        r2 = virtualinvoke r1.<androidx.health.connect.client.aggregate.AggregateMetric: androidx.health.connect.client.aggregate.AggregateMetric$Converter getConverter$health_connect_client_release()>();

        $z0 = r2 instanceof androidx.health.connect.client.aggregate.AggregateMetric$Converter$FromLong;

        if $z0 == 0 goto label1;

        $r6 = r0.<androidx.health.connect.client.aggregate.AggregationResult: java.util.Map longValues>;

        $r7 = virtualinvoke r1.<androidx.health.connect.client.aggregate.AggregateMetric: java.lang.String getMetricKey$health_connect_client_release()>();

        $z2 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r7);

        goto label3;

     label1:
        $z1 = r2 instanceof androidx.health.connect.client.aggregate.AggregateMetric$Converter$FromDouble;

        if $z1 == 0 goto label2;

        $r4 = r0.<androidx.health.connect.client.aggregate.AggregationResult: java.util.Map doubleValues>;

        $r5 = virtualinvoke r1.<androidx.health.connect.client.aggregate.AggregateMetric: java.lang.String getMetricKey$health_connect_client_release()>();

        $z2 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        goto label3;

     label2:
        $r3 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r3.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r3;

     label3:
        return $z2;
    }

    public final java.lang.Object getMetric(androidx.health.connect.client.aggregate.AggregateMetric)
    {
        androidx.health.connect.client.aggregate.AggregationResult r0;
        androidx.health.connect.client.aggregate.AggregateMetric r1;
        java.lang.Object $r2;

        r0 := @this: androidx.health.connect.client.aggregate.AggregationResult;

        r1 := @parameter0: androidx.health.connect.client.aggregate.AggregateMetric;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "metric");

        $r2 = virtualinvoke r0.<androidx.health.connect.client.aggregate.AggregationResult: java.lang.Object get(androidx.health.connect.client.aggregate.AggregateMetric)>(r1);

        return $r2;
    }

    public final java.lang.Object get(androidx.health.connect.client.aggregate.AggregateMetric)
    {
        androidx.health.connect.client.aggregate.AggregationResult r0;
        androidx.health.connect.client.aggregate.AggregateMetric r1;
        androidx.health.connect.client.aggregate.AggregateMetric$Converter r2, $r8, $r14;
        boolean $z0, $z1;
        kotlin.NoWhenBranchMatchedException $r3;
        java.util.Map $r4, $r10;
        java.lang.String $r5, $r11;
        java.lang.Object $r6, $r12, $r17;
        java.lang.Double $r7, r18;
        kotlin.jvm.functions.Function1 $r9, $r15;
        java.lang.Long $r13, r16;

        r0 := @this: androidx.health.connect.client.aggregate.AggregationResult;

        r1 := @parameter0: androidx.health.connect.client.aggregate.AggregateMetric;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "metric");

        r2 = virtualinvoke r1.<androidx.health.connect.client.aggregate.AggregateMetric: androidx.health.connect.client.aggregate.AggregateMetric$Converter getConverter$health_connect_client_release()>();

        $z0 = r2 instanceof androidx.health.connect.client.aggregate.AggregateMetric$Converter$FromLong;

        if $z0 == 0 goto label2;

        $r10 = r0.<androidx.health.connect.client.aggregate.AggregationResult: java.util.Map longValues>;

        $r11 = virtualinvoke r1.<androidx.health.connect.client.aggregate.AggregateMetric: java.lang.String getMetricKey$health_connect_client_release()>();

        $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r13 = (java.lang.Long) $r12;

        if $r13 == null goto label1;

        r16 = $r13;

        $r14 = virtualinvoke r1.<androidx.health.connect.client.aggregate.AggregateMetric: androidx.health.connect.client.aggregate.AggregateMetric$Converter getConverter$health_connect_client_release()>();

        $r15 = (kotlin.jvm.functions.Function1) $r14;

        $r17 = interfaceinvoke $r15.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r16);

        goto label5;

     label1:
        $r17 = null;

        goto label5;

     label2:
        $z1 = r2 instanceof androidx.health.connect.client.aggregate.AggregateMetric$Converter$FromDouble;

        if $z1 == 0 goto label4;

        $r4 = r0.<androidx.health.connect.client.aggregate.AggregationResult: java.util.Map doubleValues>;

        $r5 = virtualinvoke r1.<androidx.health.connect.client.aggregate.AggregateMetric: java.lang.String getMetricKey$health_connect_client_release()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (java.lang.Double) $r6;

        if $r7 == null goto label3;

        r18 = $r7;

        $r8 = virtualinvoke r1.<androidx.health.connect.client.aggregate.AggregateMetric: androidx.health.connect.client.aggregate.AggregateMetric$Converter getConverter$health_connect_client_release()>();

        $r9 = (kotlin.jvm.functions.Function1) $r8;

        $r17 = interfaceinvoke $r9.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r18);

        goto label5;

     label3:
        $r17 = null;

        goto label5;

     label4:
        $r3 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r3.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r3;

     label5:
        return $r17;
    }

