androidx.wear.compose.foundation.PaddingWrapper
<androidx.wear.compose.foundation.PaddingWrapper: androidx.wear.compose.foundation.ArcPaddingValues paddingValues>
<androidx.wear.compose.foundation.PaddingWrapper: float outerPx>
<androidx.wear.compose.foundation.PaddingWrapper: float innerPx>
<androidx.wear.compose.foundation.PaddingWrapper: float beforePx>
<androidx.wear.compose.foundation.PaddingWrapper: float afterPx>
    public void <init>(androidx.wear.compose.foundation.CurvedChild, androidx.wear.compose.foundation.ArcPaddingValues)
    {
        androidx.wear.compose.foundation.PaddingWrapper r0;
        androidx.wear.compose.foundation.CurvedChild r1;
        androidx.wear.compose.foundation.ArcPaddingValues r2;

        r0 := @this: androidx.wear.compose.foundation.PaddingWrapper;

        r1 := @parameter0: androidx.wear.compose.foundation.CurvedChild;

        r2 := @parameter1: androidx.wear.compose.foundation.ArcPaddingValues;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "child");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "paddingValues");

        specialinvoke r0.<androidx.wear.compose.foundation.BaseCurvedChildWrapper: void <init>(androidx.wear.compose.foundation.CurvedChild)>(r1);

        r0.<androidx.wear.compose.foundation.PaddingWrapper: androidx.wear.compose.foundation.ArcPaddingValues paddingValues> = r2;

        return;
    }

    public final androidx.wear.compose.foundation.ArcPaddingValues getPaddingValues()
    {
        androidx.wear.compose.foundation.PaddingWrapper r0;
        androidx.wear.compose.foundation.ArcPaddingValues $r1;

        r0 := @this: androidx.wear.compose.foundation.PaddingWrapper;

        $r1 = r0.<androidx.wear.compose.foundation.PaddingWrapper: androidx.wear.compose.foundation.ArcPaddingValues paddingValues>;

        return $r1;
    }

    public void initializeMeasure(androidx.wear.compose.foundation.CurvedMeasureScope, java.util.Iterator)
    {
        androidx.wear.compose.foundation.PaddingWrapper r0;
        androidx.wear.compose.foundation.CurvedMeasureScope $r1;
        java.util.Iterator r2;
        androidx.wear.compose.foundation.CurvedChild $r3;
        androidx.wear.compose.foundation.ArcPaddingValues $r4, $r6, $r8, $r12;
        androidx.wear.compose.foundation.CurvedLayoutDirection $r5, $r7, $r9, $r11, $r13, $r15;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        androidx.compose.ui.unit.LayoutDirection $r10, $r14;

        r0 := @this: androidx.wear.compose.foundation.PaddingWrapper;

        $r1 := @parameter0: androidx.wear.compose.foundation.CurvedMeasureScope;

        r2 := @parameter1: java.util.Iterator;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "measurables");

        $r4 = r0.<androidx.wear.compose.foundation.PaddingWrapper: androidx.wear.compose.foundation.ArcPaddingValues paddingValues>;

        $r5 = virtualinvoke $r1.<androidx.wear.compose.foundation.CurvedMeasureScope: androidx.wear.compose.foundation.CurvedLayoutDirection getCurvedLayoutDirection()>();

        $i0 = virtualinvoke $r5.<androidx.wear.compose.foundation.CurvedLayoutDirection: int getRadial-Ysh6JRM$compose_foundation_release()>();

        $f0 = interfaceinvoke $r4.<androidx.wear.compose.foundation.ArcPaddingValues: float calculateOuterPadding-bxc3Tjc(int)>($i0);

        $f1 = virtualinvoke $r1.<androidx.wear.compose.foundation.CurvedMeasureScope: float toPx-0680j_4(float)>($f0);

        r0.<androidx.wear.compose.foundation.PaddingWrapper: float outerPx> = $f1;

        $r6 = r0.<androidx.wear.compose.foundation.PaddingWrapper: androidx.wear.compose.foundation.ArcPaddingValues paddingValues>;

        $r7 = virtualinvoke $r1.<androidx.wear.compose.foundation.CurvedMeasureScope: androidx.wear.compose.foundation.CurvedLayoutDirection getCurvedLayoutDirection()>();

        $i1 = virtualinvoke $r7.<androidx.wear.compose.foundation.CurvedLayoutDirection: int getRadial-Ysh6JRM$compose_foundation_release()>();

        $f2 = interfaceinvoke $r6.<androidx.wear.compose.foundation.ArcPaddingValues: float calculateInnerPadding-bxc3Tjc(int)>($i1);

        $f3 = virtualinvoke $r1.<androidx.wear.compose.foundation.CurvedMeasureScope: float toPx-0680j_4(float)>($f2);

        r0.<androidx.wear.compose.foundation.PaddingWrapper: float innerPx> = $f3;

        $r8 = r0.<androidx.wear.compose.foundation.PaddingWrapper: androidx.wear.compose.foundation.ArcPaddingValues paddingValues>;

        $r9 = virtualinvoke $r1.<androidx.wear.compose.foundation.CurvedMeasureScope: androidx.wear.compose.foundation.CurvedLayoutDirection getCurvedLayoutDirection()>();

        $r10 = virtualinvoke $r9.<androidx.wear.compose.foundation.CurvedLayoutDirection: androidx.compose.ui.unit.LayoutDirection getLayoutDirection$compose_foundation_release()>();

        $r11 = virtualinvoke $r1.<androidx.wear.compose.foundation.CurvedMeasureScope: androidx.wear.compose.foundation.CurvedLayoutDirection getCurvedLayoutDirection()>();

        $i2 = virtualinvoke $r11.<androidx.wear.compose.foundation.CurvedLayoutDirection: int getAngular-gmlPZk4$compose_foundation_release()>();

        $f4 = interfaceinvoke $r8.<androidx.wear.compose.foundation.ArcPaddingValues: float calculateBeforePadding-h2ZJBLU(androidx.compose.ui.unit.LayoutDirection,int)>($r10, $i2);

        $f5 = virtualinvoke $r1.<androidx.wear.compose.foundation.CurvedMeasureScope: float toPx-0680j_4(float)>($f4);

        r0.<androidx.wear.compose.foundation.PaddingWrapper: float beforePx> = $f5;

        $r12 = r0.<androidx.wear.compose.foundation.PaddingWrapper: androidx.wear.compose.foundation.ArcPaddingValues paddingValues>;

        $r13 = virtualinvoke $r1.<androidx.wear.compose.foundation.CurvedMeasureScope: androidx.wear.compose.foundation.CurvedLayoutDirection getCurvedLayoutDirection()>();

        $r14 = virtualinvoke $r13.<androidx.wear.compose.foundation.CurvedLayoutDirection: androidx.compose.ui.unit.LayoutDirection getLayoutDirection$compose_foundation_release()>();

        $r15 = virtualinvoke $r1.<androidx.wear.compose.foundation.CurvedMeasureScope: androidx.wear.compose.foundation.CurvedLayoutDirection getCurvedLayoutDirection()>();

        $i3 = virtualinvoke $r15.<androidx.wear.compose.foundation.CurvedLayoutDirection: int getAngular-gmlPZk4$compose_foundation_release()>();

        $f6 = interfaceinvoke $r12.<androidx.wear.compose.foundation.ArcPaddingValues: float calculateAfterPadding-h2ZJBLU(androidx.compose.ui.unit.LayoutDirection,int)>($r14, $i3);

        $f7 = virtualinvoke $r1.<androidx.wear.compose.foundation.CurvedMeasureScope: float toPx-0680j_4(float)>($f6);

        r0.<androidx.wear.compose.foundation.PaddingWrapper: float afterPx> = $f7;

        $r3 = virtualinvoke r0.<androidx.wear.compose.foundation.PaddingWrapper: androidx.wear.compose.foundation.CurvedChild getWrapped()>();

        virtualinvoke $r3.<androidx.wear.compose.foundation.CurvedChild: void initializeMeasure(androidx.wear.compose.foundation.CurvedMeasureScope,java.util.Iterator)>($r1, r2);

        return;
    }

    public float doEstimateThickness(float)
    {
        androidx.wear.compose.foundation.PaddingWrapper r0;
        float f0, $f1, $f2, $f3, $f4, $f5;
        androidx.wear.compose.foundation.CurvedChild $r1;

        r0 := @this: androidx.wear.compose.foundation.PaddingWrapper;

        f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<androidx.wear.compose.foundation.PaddingWrapper: androidx.wear.compose.foundation.CurvedChild getWrapped()>();

        $f1 = virtualinvoke $r1.<androidx.wear.compose.foundation.CurvedChild: float estimateThickness(float)>(f0);

        $f2 = r0.<androidx.wear.compose.foundation.PaddingWrapper: float outerPx>;

        $f4 = $f1 + $f2;

        $f3 = r0.<androidx.wear.compose.foundation.PaddingWrapper: float innerPx>;

        $f5 = $f4 + $f3;

        return $f5;
    }

    public androidx.wear.compose.foundation.PartialLayoutInfo doRadialPosition(float, float)
    {
        androidx.wear.compose.foundation.PaddingWrapper r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        androidx.wear.compose.foundation.PartialLayoutInfo r1, $r3;
        androidx.wear.compose.foundation.CurvedChild $r2;

        r0 := @this: androidx.wear.compose.foundation.PaddingWrapper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = virtualinvoke r0.<androidx.wear.compose.foundation.PaddingWrapper: androidx.wear.compose.foundation.CurvedChild getWrapped()>();

        $f3 = r0.<androidx.wear.compose.foundation.PaddingWrapper: float outerPx>;

        $f8 = f0 - $f3;

        $f4 = r0.<androidx.wear.compose.foundation.PaddingWrapper: float outerPx>;

        $f6 = f1 - $f4;

        $f5 = r0.<androidx.wear.compose.foundation.PaddingWrapper: float innerPx>;

        $f7 = $f6 - $f5;

        r1 = virtualinvoke $r2.<androidx.wear.compose.foundation.CurvedChild: androidx.wear.compose.foundation.PartialLayoutInfo radialPosition(float,float)>($f8, $f7);

        $f10 = r0.<androidx.wear.compose.foundation.PaddingWrapper: float beforePx>;

        $f9 = r0.<androidx.wear.compose.foundation.PaddingWrapper: float afterPx>;

        $f11 = $f10 + $f9;

        $f12 = virtualinvoke r1.<androidx.wear.compose.foundation.PartialLayoutInfo: float getMeasureRadius()>();

        f2 = $f11 / $f12;

        $r3 = new androidx.wear.compose.foundation.PartialLayoutInfo;

        $f13 = virtualinvoke r1.<androidx.wear.compose.foundation.PartialLayoutInfo: float getSweepRadians()>();

        $f14 = $f13 + f2;

        $f15 = virtualinvoke r1.<androidx.wear.compose.foundation.PartialLayoutInfo: float getOuterRadius()>();

        $f16 = r0.<androidx.wear.compose.foundation.PaddingWrapper: float outerPx>;

        $f17 = $f15 + $f16;

        $f18 = virtualinvoke r1.<androidx.wear.compose.foundation.PartialLayoutInfo: float getThickness()>();

        $f19 = r0.<androidx.wear.compose.foundation.PaddingWrapper: float innerPx>;

        $f21 = $f18 + $f19;

        $f20 = r0.<androidx.wear.compose.foundation.PaddingWrapper: float outerPx>;

        $f22 = $f21 + $f20;

        $f23 = virtualinvoke r1.<androidx.wear.compose.foundation.PartialLayoutInfo: float getMeasureRadius()>();

        specialinvoke $r3.<androidx.wear.compose.foundation.PartialLayoutInfo: void <init>(float,float,float,float)>($f14, $f17, $f22, $f23);

        return $r3;
    }

    public float doAngularPosition-0AR0LA0(float, float, long)
    {
        androidx.wear.compose.foundation.PaddingWrapper r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        long l0;
        androidx.wear.compose.foundation.CurvedChild $r1;

        r0 := @this: androidx.wear.compose.foundation.PaddingWrapper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        l0 := @parameter2: long;

        $f4 = r0.<androidx.wear.compose.foundation.PaddingWrapper: float beforePx>;

        $f5 = virtualinvoke r0.<androidx.wear.compose.foundation.PaddingWrapper: float getMeasureRadius$compose_foundation_release()>();

        f2 = $f4 / $f5;

        $f7 = r0.<androidx.wear.compose.foundation.PaddingWrapper: float beforePx>;

        $f6 = r0.<androidx.wear.compose.foundation.PaddingWrapper: float afterPx>;

        $f8 = $f7 + $f6;

        $f9 = virtualinvoke r0.<androidx.wear.compose.foundation.PaddingWrapper: float getMeasureRadius$compose_foundation_release()>();

        f3 = $f8 / $f9;

        $r1 = virtualinvoke r0.<androidx.wear.compose.foundation.PaddingWrapper: androidx.wear.compose.foundation.CurvedChild getWrapped()>();

        $f11 = f0 + f2;

        $f10 = f1 - f3;

        $f12 = virtualinvoke $r1.<androidx.wear.compose.foundation.CurvedChild: float angularPosition-0AR0LA0(float,float,long)>($f11, $f10, l0);

        $f13 = $f12 - f2;

        return $f13;
    }

