androidx.lifecycle.ProcessLifecycleOwner
<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner$Companion Companion>
<androidx.lifecycle.ProcessLifecycleOwner: int startedCounter>
<androidx.lifecycle.ProcessLifecycleOwner: int resumedCounter>
<androidx.lifecycle.ProcessLifecycleOwner: boolean pauseSent>
<androidx.lifecycle.ProcessLifecycleOwner: boolean stopSent>
<androidx.lifecycle.ProcessLifecycleOwner: android.os.Handler handler>
<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry registry>
<androidx.lifecycle.ProcessLifecycleOwner: java.lang.Runnable delayedPauseRunnable>
<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ReportFragment$ActivityInitializationListener initializationListener>
<androidx.lifecycle.ProcessLifecycleOwner: long TIMEOUT_MS>
<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner newInstance>
    private void <init>()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        androidx.lifecycle.LifecycleRegistry $r1;
        androidx.lifecycle.LifecycleOwner $r2;
        java.lang.Runnable $r3;
        androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1 $r4;
        androidx.lifecycle.ReportFragment$ActivityInitializationListener $r5;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean pauseSent> = 1;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean stopSent> = 1;

        $r1 = new androidx.lifecycle.LifecycleRegistry;

        $r2 = (androidx.lifecycle.LifecycleOwner) r0;

        specialinvoke $r1.<androidx.lifecycle.LifecycleRegistry: void <init>(androidx.lifecycle.LifecycleOwner)>($r2);

        r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry registry> = $r1;

        $r3 = dynamicinvoke "run" <java.lang.Runnable (androidx.lifecycle.ProcessLifecycleOwner)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.lifecycle.ProcessLifecycleOwner: void delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner)>, methodtype: void __METHODTYPE__());

        r0.<androidx.lifecycle.ProcessLifecycleOwner: java.lang.Runnable delayedPauseRunnable> = $r3;

        $r4 = new androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1;

        specialinvoke $r4.<androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1: void <init>(androidx.lifecycle.ProcessLifecycleOwner)>(r0);

        $r5 = (androidx.lifecycle.ReportFragment$ActivityInitializationListener) $r4;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ReportFragment$ActivityInitializationListener initializationListener> = $r5;

        return;
    }

    public final void activityStarted$lifecycle_process_release()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        int i0, $i1, $i2;
        boolean $z0;
        androidx.lifecycle.Lifecycle$Event $r1;
        androidx.lifecycle.LifecycleRegistry $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int startedCounter>;

        $i1 = i0 + 1;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: int startedCounter> = $i1;

        $i2 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int startedCounter>;

        if $i2 != 1 goto label1;

        $z0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean stopSent>;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry registry>;

        $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START>;

        virtualinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1);

        r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean stopSent> = 0;

     label1:
        return;
    }

    public final void activityResumed$lifecycle_process_release()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        int i0, $i1, $i2;
        boolean $z0;
        android.os.Handler $r1;
        java.lang.Runnable $r2;
        androidx.lifecycle.Lifecycle$Event $r3;
        androidx.lifecycle.LifecycleRegistry $r4;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int resumedCounter>;

        $i1 = i0 + 1;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: int resumedCounter> = $i1;

        $i2 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int resumedCounter>;

        if $i2 != 1 goto label2;

        $z0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean pauseSent>;

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry registry>;

        $r3 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME>;

        virtualinvoke $r4.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r3);

        r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean pauseSent> = 0;

        goto label2;

     label1:
        $r1 = r0.<androidx.lifecycle.ProcessLifecycleOwner: android.os.Handler handler>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

        $r2 = r0.<androidx.lifecycle.ProcessLifecycleOwner: java.lang.Runnable delayedPauseRunnable>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r2);

     label2:
        return;
    }

    public final void activityPaused$lifecycle_process_release()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        int i0, $i1, $i2;
        android.os.Handler $r1;
        java.lang.Runnable $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int resumedCounter>;

        $i1 = i0 + -1;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: int resumedCounter> = $i1;

        $i2 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int resumedCounter>;

        if $i2 != 0 goto label1;

        $r1 = r0.<androidx.lifecycle.ProcessLifecycleOwner: android.os.Handler handler>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r1);

        $r2 = r0.<androidx.lifecycle.ProcessLifecycleOwner: java.lang.Runnable delayedPauseRunnable>;

        virtualinvoke $r1.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r2, 700L);

     label1:
        return;
    }

    public final void activityStopped$lifecycle_process_release()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        int i0, $i1;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int startedCounter>;

        $i1 = i0 + -1;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: int startedCounter> = $i1;

        virtualinvoke r0.<androidx.lifecycle.ProcessLifecycleOwner: void dispatchStopIfNeeded$lifecycle_process_release()>();

        return;
    }

    public final void dispatchPauseIfNeeded$lifecycle_process_release()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        int $i0;
        androidx.lifecycle.Lifecycle$Event $r1;
        androidx.lifecycle.LifecycleRegistry $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        $i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int resumedCounter>;

        if $i0 != 0 goto label1;

        r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean pauseSent> = 1;

        $r2 = r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry registry>;

        $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE>;

        virtualinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1);

     label1:
        return;
    }

    public final void dispatchStopIfNeeded$lifecycle_process_release()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        int $i0;
        boolean $z0;
        androidx.lifecycle.Lifecycle$Event $r1;
        androidx.lifecycle.LifecycleRegistry $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        $i0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: int startedCounter>;

        if $i0 != 0 goto label1;

        $z0 = r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean pauseSent>;

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry registry>;

        $r1 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP>;

        virtualinvoke $r2.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r1);

        r0.<androidx.lifecycle.ProcessLifecycleOwner: boolean stopSent> = 1;

     label1:
        return;
    }

    public final void attach$lifecycle_process_release(android.content.Context)
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        android.content.Context r1, $r6;
        android.app.Application r2;
        android.os.Handler $r3;
        androidx.lifecycle.Lifecycle$Event $r4;
        androidx.lifecycle.LifecycleRegistry $r5;
        androidx.lifecycle.ProcessLifecycleOwner$attach$1 $r7;
        android.app.Application$ActivityLifecycleCallbacks $r8;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<androidx.lifecycle.ProcessLifecycleOwner: android.os.Handler handler> = $r3;

        $r5 = r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry registry>;

        $r4 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE>;

        virtualinvoke $r5.<androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>($r4);

        $r6 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type android.app.Application");

        r2 = (android.app.Application) $r6;

        $r7 = new androidx.lifecycle.ProcessLifecycleOwner$attach$1;

        specialinvoke $r7.<androidx.lifecycle.ProcessLifecycleOwner$attach$1: void <init>(androidx.lifecycle.ProcessLifecycleOwner)>(r0);

        $r8 = (android.app.Application$ActivityLifecycleCallbacks) $r7;

        virtualinvoke r2.<android.app.Application: void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)>($r8);

        return;
    }

    public androidx.lifecycle.Lifecycle getLifecycle()
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;
        androidx.lifecycle.LifecycleRegistry $r1;
        androidx.lifecycle.Lifecycle $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner;

        $r1 = r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry registry>;

        $r2 = (androidx.lifecycle.Lifecycle) $r1;

        return $r2;
    }

    private static final void delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner)
    {
        androidx.lifecycle.ProcessLifecycleOwner r0;

        r0 := @parameter0: androidx.lifecycle.ProcessLifecycleOwner;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        virtualinvoke r0.<androidx.lifecycle.ProcessLifecycleOwner: void dispatchPauseIfNeeded$lifecycle_process_release()>();

        virtualinvoke r0.<androidx.lifecycle.ProcessLifecycleOwner: void dispatchStopIfNeeded$lifecycle_process_release()>();

        return;
    }

    public static final androidx.lifecycle.LifecycleOwner get()
    {
        androidx.lifecycle.ProcessLifecycleOwner$Companion $r0;
        androidx.lifecycle.LifecycleOwner $r1;

        $r0 = <androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner$Companion Companion>;

        $r1 = virtualinvoke $r0.<androidx.lifecycle.ProcessLifecycleOwner$Companion: androidx.lifecycle.LifecycleOwner get()>();

        return $r1;
    }

    public static final void init$lifecycle_process_release(android.content.Context)
    {
        android.content.Context r0;
        androidx.lifecycle.ProcessLifecycleOwner$Companion $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = <androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner$Companion Companion>;

        virtualinvoke $r1.<androidx.lifecycle.ProcessLifecycleOwner$Companion: void init$lifecycle_process_release(android.content.Context)>(r0);

        return;
    }

    public static final androidx.lifecycle.ProcessLifecycleOwner access$getNewInstance$cp()
    {
        androidx.lifecycle.ProcessLifecycleOwner $r0;

        $r0 = <androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner newInstance>;

        return $r0;
    }

    public static final androidx.lifecycle.ReportFragment$ActivityInitializationListener access$getInitializationListener$p(androidx.lifecycle.ProcessLifecycleOwner)
    {
        androidx.lifecycle.ProcessLifecycleOwner $r0;
        androidx.lifecycle.ReportFragment$ActivityInitializationListener $r1;

        $r0 := @parameter0: androidx.lifecycle.ProcessLifecycleOwner;

        $r1 = $r0.<androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ReportFragment$ActivityInitializationListener initializationListener>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.lifecycle.ProcessLifecycleOwner$Companion $r0;
        androidx.lifecycle.ProcessLifecycleOwner $r1;

        $r0 = new androidx.lifecycle.ProcessLifecycleOwner$Companion;

        specialinvoke $r0.<androidx.lifecycle.ProcessLifecycleOwner$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner$Companion Companion> = $r0;

        $r1 = new androidx.lifecycle.ProcessLifecycleOwner;

        specialinvoke $r1.<androidx.lifecycle.ProcessLifecycleOwner: void <init>()>();

        <androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner newInstance> = $r1;

        return;
    }

androidx.lifecycle.ProcessLifecycleOwner$Api29Impl
<androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: androidx.lifecycle.ProcessLifecycleOwner$Api29Impl INSTANCE>
    private void <init>()
    {
        androidx.lifecycle.ProcessLifecycleOwner$Api29Impl r0;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$Api29Impl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final void registerActivityLifecycleCallbacks(android.app.Activity, android.app.Application$ActivityLifecycleCallbacks)
    {
        android.app.Activity r0;
        android.app.Application$ActivityLifecycleCallbacks r1;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.app.Application$ActivityLifecycleCallbacks;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "callback");

        virtualinvoke r0.<android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)>(r1);

        return;
    }

    static void <clinit>()
    {
        androidx.lifecycle.ProcessLifecycleOwner$Api29Impl $r0;

        $r0 = new androidx.lifecycle.ProcessLifecycleOwner$Api29Impl;

        specialinvoke $r0.<androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void <init>()>();

        <androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: androidx.lifecycle.ProcessLifecycleOwner$Api29Impl INSTANCE> = $r0;

        return;
    }

androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1
<androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0>
    void <init>(androidx.lifecycle.ProcessLifecycleOwner)
    {
        androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1 r0;
        androidx.lifecycle.ProcessLifecycleOwner $r1;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1;

        $r1 := @parameter0: androidx.lifecycle.ProcessLifecycleOwner;

        r0.<androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0> = $r1;

        specialinvoke r0.<androidx.lifecycle.EmptyActivityLifecycleCallbacks: void <init>()>();

        return;
    }

    public void onActivityPostStarted(android.app.Activity)
    {
        androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1 r0;
        android.app.Activity r1;
        androidx.lifecycle.ProcessLifecycleOwner $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1;

        r1 := @parameter0: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        $r2 = r0.<androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0>;

        virtualinvoke $r2.<androidx.lifecycle.ProcessLifecycleOwner: void activityStarted$lifecycle_process_release()>();

        return;
    }

    public void onActivityPostResumed(android.app.Activity)
    {
        androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1 r0;
        android.app.Activity r1;
        androidx.lifecycle.ProcessLifecycleOwner $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1;

        r1 := @parameter0: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        $r2 = r0.<androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0>;

        virtualinvoke $r2.<androidx.lifecycle.ProcessLifecycleOwner: void activityResumed$lifecycle_process_release()>();

        return;
    }

androidx.lifecycle.ProcessLifecycleOwner$attach$1
<androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0>
    void <init>(androidx.lifecycle.ProcessLifecycleOwner)
    {
        androidx.lifecycle.ProcessLifecycleOwner$attach$1 r0;
        androidx.lifecycle.ProcessLifecycleOwner $r1;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$attach$1;

        $r1 := @parameter0: androidx.lifecycle.ProcessLifecycleOwner;

        r0.<androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0> = $r1;

        specialinvoke r0.<androidx.lifecycle.EmptyActivityLifecycleCallbacks: void <init>()>();

        return;
    }

    public void onActivityPreCreated(android.app.Activity, android.os.Bundle)
    {
        androidx.lifecycle.ProcessLifecycleOwner$attach$1 r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1 $r3;
        androidx.lifecycle.ProcessLifecycleOwner $r4;
        android.app.Application$ActivityLifecycleCallbacks $r5;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$attach$1;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        $r3 = new androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1;

        $r4 = r0.<androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0>;

        specialinvoke $r3.<androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void <init>(androidx.lifecycle.ProcessLifecycleOwner)>($r4);

        $r5 = (android.app.Application$ActivityLifecycleCallbacks) $r3;

        staticinvoke <androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)>(r1, $r5);

        return;
    }

    public void onActivityCreated(android.app.Activity, android.os.Bundle)
    {
        androidx.lifecycle.ProcessLifecycleOwner$attach$1 r0;
        android.app.Activity r1;
        android.os.Bundle r2;
        int $i0;
        androidx.lifecycle.ReportFragment$Companion $r3;
        androidx.lifecycle.ReportFragment $r4;
        androidx.lifecycle.ProcessLifecycleOwner $r5;
        androidx.lifecycle.ReportFragment$ActivityInitializationListener $r6;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$attach$1;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: android.os.Bundle;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 29 goto label1;

        $r3 = <androidx.lifecycle.ReportFragment: androidx.lifecycle.ReportFragment$Companion Companion>;

        $r4 = virtualinvoke $r3.<androidx.lifecycle.ReportFragment$Companion: androidx.lifecycle.ReportFragment get(android.app.Activity)>(r1);

        $r5 = r0.<androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0>;

        $r6 = staticinvoke <androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ReportFragment$ActivityInitializationListener access$getInitializationListener$p(androidx.lifecycle.ProcessLifecycleOwner)>($r5);

        virtualinvoke $r4.<androidx.lifecycle.ReportFragment: void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener)>($r6);

     label1:
        return;
    }

    public void onActivityPaused(android.app.Activity)
    {
        androidx.lifecycle.ProcessLifecycleOwner$attach$1 r0;
        android.app.Activity r1;
        androidx.lifecycle.ProcessLifecycleOwner $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$attach$1;

        r1 := @parameter0: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        $r2 = r0.<androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0>;

        virtualinvoke $r2.<androidx.lifecycle.ProcessLifecycleOwner: void activityPaused$lifecycle_process_release()>();

        return;
    }

    public void onActivityStopped(android.app.Activity)
    {
        androidx.lifecycle.ProcessLifecycleOwner$attach$1 r0;
        android.app.Activity r1;
        androidx.lifecycle.ProcessLifecycleOwner $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$attach$1;

        r1 := @parameter0: android.app.Activity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "activity");

        $r2 = r0.<androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0>;

        virtualinvoke $r2.<androidx.lifecycle.ProcessLifecycleOwner: void activityStopped$lifecycle_process_release()>();

        return;
    }

androidx.lifecycle.ProcessLifecycleOwner$Companion
    private void <init>()
    {
        androidx.lifecycle.ProcessLifecycleOwner$Companion r0;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void getTIMEOUT_MS$lifecycle_process_release$annotations()
    {
        return;
    }

    public final androidx.lifecycle.LifecycleOwner get()
    {
        androidx.lifecycle.ProcessLifecycleOwner$Companion r0;
        androidx.lifecycle.ProcessLifecycleOwner $r1;
        androidx.lifecycle.LifecycleOwner $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$Companion;

        $r1 = staticinvoke <androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner access$getNewInstance$cp()>();

        $r2 = (androidx.lifecycle.LifecycleOwner) $r1;

        return $r2;
    }

    public final void init$lifecycle_process_release(android.content.Context)
    {
        androidx.lifecycle.ProcessLifecycleOwner$Companion r0;
        android.content.Context r1;
        androidx.lifecycle.ProcessLifecycleOwner $r2;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$Companion;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r2 = staticinvoke <androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner access$getNewInstance$cp()>();

        virtualinvoke $r2.<androidx.lifecycle.ProcessLifecycleOwner: void attach$lifecycle_process_release(android.content.Context)>(r1);

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.lifecycle.ProcessLifecycleOwner$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.lifecycle.ProcessLifecycleOwner$Companion: void <init>()>();

        return;
    }

androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1
<androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1: androidx.lifecycle.ProcessLifecycleOwner this$0>
    void <init>(androidx.lifecycle.ProcessLifecycleOwner)
    {
        androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1 r0;
        androidx.lifecycle.ProcessLifecycleOwner $r1;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1;

        $r1 := @parameter0: androidx.lifecycle.ProcessLifecycleOwner;

        r0.<androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1: androidx.lifecycle.ProcessLifecycleOwner this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onCreate()
    {
        androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1 r0;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1;

        return;
    }

    public void onStart()
    {
        androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1 r0;
        androidx.lifecycle.ProcessLifecycleOwner $r1;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1;

        $r1 = r0.<androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1: androidx.lifecycle.ProcessLifecycleOwner this$0>;

        virtualinvoke $r1.<androidx.lifecycle.ProcessLifecycleOwner: void activityStarted$lifecycle_process_release()>();

        return;
    }

    public void onResume()
    {
        androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1 r0;
        androidx.lifecycle.ProcessLifecycleOwner $r1;

        r0 := @this: androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1;

        $r1 = r0.<androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1: androidx.lifecycle.ProcessLifecycleOwner this$0>;

        virtualinvoke $r1.<androidx.lifecycle.ProcessLifecycleOwner: void activityResumed$lifecycle_process_release()>();

        return;
    }

