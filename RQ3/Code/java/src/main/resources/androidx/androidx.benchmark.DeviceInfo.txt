androidx.benchmark.DeviceInfo
<androidx.benchmark.DeviceInfo: androidx.benchmark.DeviceInfo INSTANCE>
<androidx.benchmark.DeviceInfo: boolean isEmulator>
<androidx.benchmark.DeviceInfo: boolean isEngBuild>
<androidx.benchmark.DeviceInfo: boolean isRooted>
<androidx.benchmark.DeviceInfo: int MINIMUM_BATTERY_PERCENT>
<androidx.benchmark.DeviceInfo: int initialBatteryPercent>
<androidx.benchmark.DeviceInfo: java.lang.String deviceSummaryString>
<androidx.benchmark.DeviceInfo: java.util.List errors>
    private void <init>()
    {
        androidx.benchmark.DeviceInfo r0;

        r0 := @this: androidx.benchmark.DeviceInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final boolean isEmulator()
    {
        androidx.benchmark.DeviceInfo r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.DeviceInfo;

        $z0 = <androidx.benchmark.DeviceInfo: boolean isEmulator>;

        return $z0;
    }

    public final boolean isEngBuild()
    {
        androidx.benchmark.DeviceInfo r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.DeviceInfo;

        $z0 = <androidx.benchmark.DeviceInfo: boolean isEngBuild>;

        return $z0;
    }

    public final boolean isRooted()
    {
        androidx.benchmark.DeviceInfo r0;
        boolean $z0;

        r0 := @this: androidx.benchmark.DeviceInfo;

        $z0 = <androidx.benchmark.DeviceInfo: boolean isRooted>;

        return $z0;
    }

    public final int getInitialBatteryPercent()
    {
        androidx.benchmark.DeviceInfo r0;
        int $i0;

        r0 := @this: androidx.benchmark.DeviceInfo;

        $i0 = <androidx.benchmark.DeviceInfo: int initialBatteryPercent>;

        return $i0;
    }

    public final java.lang.String getDeviceSummaryString()
    {
        androidx.benchmark.DeviceInfo r0;
        java.lang.String $r1;

        r0 := @this: androidx.benchmark.DeviceInfo;

        $r1 = <androidx.benchmark.DeviceInfo: java.lang.String deviceSummaryString>;

        return $r1;
    }

    public final java.util.List getErrors()
    {
        androidx.benchmark.DeviceInfo r0;
        java.util.List $r1;

        r0 := @this: androidx.benchmark.DeviceInfo;

        $r1 = <androidx.benchmark.DeviceInfo: java.util.List errors>;

        return $r1;
    }

    static void <clinit>()
    {
        int i0, i1, $i2, $i3, $i4, $i6, $i7, i8, $i9, $i10, i11;
        androidx.benchmark.DeviceInfo $r0, $r19, $r21, $r23, $r26, $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z16, z17, $z18;
        java.lang.CharSequence $r1, $r2, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48;
        android.app.Instrumentation $r3;
        android.content.IntentFilter $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r17, $r24, $r25, $r27, $r28, $r30, $r31, $r33, $r34;
        java.lang.String $r7, $r10, $r15, $r18, $r29, $r35, $r36, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, r61, r62;
        androidx.benchmark.ConfigurationError $r20, $r22, $r37;
        java.util.List $r38;
        java.io.File $r40;
        java.lang.String[] $r59, r60;
        android.content.Context $r63;
        android.content.Intent r64, r65;
        androidx.benchmark.ConfigurationError[] r66;

        $r0 = new androidx.benchmark.DeviceInfo;

        specialinvoke $r0.<androidx.benchmark.DeviceInfo: void <init>()>();

        <androidx.benchmark.DeviceInfo: androidx.benchmark.DeviceInfo INSTANCE> = $r0;

        $r50 = <android.os.Build: java.lang.String FINGERPRINT>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r50, "FINGERPRINT");

        $z0 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r50, "generic", 0, 2, null);

        if $z0 != 0 goto label02;

        $r51 = <android.os.Build: java.lang.String FINGERPRINT>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r51, "FINGERPRINT");

        $z5 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r51, "unknown", 0, 2, null);

        if $z5 != 0 goto label02;

        $r52 = <android.os.Build: java.lang.String MODEL>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r52, "MODEL");

        $r42 = (java.lang.CharSequence) $r52;

        $r41 = (java.lang.CharSequence) "google_sdk";

        $z6 = staticinvoke <kotlin.text.StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)>($r42, $r41, 0, 2, null);

        if $z6 != 0 goto label02;

        $r53 = <android.os.Build: java.lang.String MODEL>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r53, "MODEL");

        $r44 = (java.lang.CharSequence) $r53;

        $r43 = (java.lang.CharSequence) "Emulator";

        $z7 = staticinvoke <kotlin.text.StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)>($r44, $r43, 0, 2, null);

        if $z7 != 0 goto label02;

        $r54 = <android.os.Build: java.lang.String MODEL>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r54, "MODEL");

        $r46 = (java.lang.CharSequence) $r54;

        $r45 = (java.lang.CharSequence) "Android SDK built for x86";

        $z8 = staticinvoke <kotlin.text.StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)>($r46, $r45, 0, 2, null);

        if $z8 != 0 goto label02;

        $r55 = <android.os.Build: java.lang.String MANUFACTURER>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r55, "MANUFACTURER");

        $r48 = (java.lang.CharSequence) $r55;

        $r47 = (java.lang.CharSequence) "Genymotion";

        $z9 = staticinvoke <kotlin.text.StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)>($r48, $r47, 0, 2, null);

        if $z9 != 0 goto label02;

        $r56 = <android.os.Build: java.lang.String BRAND>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r56, "BRAND");

        $z10 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r56, "generic", 0, 2, null);

        if $z10 == 0 goto label01;

        $r57 = <android.os.Build: java.lang.String DEVICE>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r57, "DEVICE");

        $z12 = staticinvoke <kotlin.text.StringsKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)>($r57, "generic", 0, 2, null);

        if $z12 != 0 goto label02;

     label01:
        $r49 = <android.os.Build: java.lang.String PRODUCT>;

        $z11 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>("google_sdk", $r49);

        if $z11 == 0 goto label03;

     label02:
        $z13 = 1;

        goto label04;

     label03:
        $z13 = 0;

     label04:
        <androidx.benchmark.DeviceInfo: boolean isEmulator> = $z13;

        $r58 = <android.os.Build: java.lang.String FINGERPRINT>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r58, "FINGERPRINT");

        $r2 = (java.lang.CharSequence) $r58;

        $r1 = (java.lang.CharSequence) ":eng/";

        $z1 = staticinvoke <kotlin.text.StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)>($r2, $r1, 0, 2, null);

        <androidx.benchmark.DeviceInfo: boolean isEngBuild> = $z1;

        $r59 = newarray (java.lang.String)[10];

        $r59[0] = "/system/app/Superuser.apk";

        $r59[1] = "/sbin/su";

        $r59[2] = "/system/bin/su";

        $r59[3] = "/system/xbin/su";

        $r59[4] = "/data/local/xbin/su";

        $r59[5] = "/data/local/bin/su";

        $r59[6] = "/system/sd/xbin/su";

        $r59[7] = "/system/bin/failsafe/su";

        $r59[8] = "/data/local/su";

        $r59[9] = "/su/bin/su";

        r60 = $r59;

        i8 = 0;

        i0 = lengthof r60;

     label05:
        if i8 >= i0 goto label06;

        r61 = r60[i8];

        i8 = i8 + 1;

        r62 = r61;

        $r40 = new java.io.File;

        specialinvoke $r40.<java.io.File: void <init>(java.lang.String)>(r62);

        $z4 = virtualinvoke $r40.<java.io.File: boolean exists()>();

        if $z4 == 0 goto label05;

        $z16 = 1;

        goto label07;

     label06:
        $z16 = 0;

     label07:
        <androidx.benchmark.DeviceInfo: boolean isRooted> = $z16;

        $r3 = staticinvoke <androidx.test.platform.app.InstrumentationRegistry: android.app.Instrumentation getInstrumentation()>();

        $r63 = virtualinvoke $r3.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.BATTERY_CHANGED");

        r64 = virtualinvoke $r63.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(null, $r4);

        if r64 != null goto label08;

        $i9 = 100;

        goto label09;

     label08:
        r65 = r64;

        z17 = 0;

        $i10 = virtualinvoke r65.<android.content.Intent: int getIntExtra(java.lang.String,int)>("level", 100);

        i1 = virtualinvoke r65.<android.content.Intent: int getIntExtra(java.lang.String,int)>("scale", 100);

        $i2 = $i10 * 100;

        i11 = $i2 / i1;

        $i9 = i11;

     label09:
        <androidx.benchmark.DeviceInfo: int initialBatteryPercent> = $i9;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DeviceInfo(Brand=");

        $r7 = <android.os.Build: java.lang.String BRAND>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Model=");

        $r10 = <android.os.Build: java.lang.String MODEL>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", SDK=");

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", BuildFp=");

        $r15 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        <androidx.benchmark.DeviceInfo: java.lang.String deviceSummaryString> = $r18;

        r66 = newarray (androidx.benchmark.ConfigurationError)[3];

        $r19 = <androidx.benchmark.DeviceInfo: androidx.benchmark.DeviceInfo INSTANCE>;

        $z2 = <androidx.benchmark.DeviceInfo: boolean isEngBuild>;

        $r20 = staticinvoke <androidx.benchmark.ConfigurationErrorKt: androidx.benchmark.ConfigurationError conditionalError(boolean,java.lang.String,java.lang.String,java.lang.String)>($z2, "ENG-BUILD", "Running on Eng Build", "Benchmark is running on device flashed with a \'-eng\' build. Eng builds\nof the platform drastically reduce performance to enable testing\nchanges quickly. For this reason they should not be used for\nbenchmarking. Use a \'-user\' or \'-userdebug\' system image.");

        r66[0] = $r20;

        $r21 = <androidx.benchmark.DeviceInfo: androidx.benchmark.DeviceInfo INSTANCE>;

        $z3 = <androidx.benchmark.DeviceInfo: boolean isEmulator>;

        $r22 = staticinvoke <androidx.benchmark.ConfigurationErrorKt: androidx.benchmark.ConfigurationError conditionalError(boolean,java.lang.String,java.lang.String,java.lang.String)>($z3, "EMULATOR", "Running on Emulator", "Benchmark is running on an emulator, which is not representative of\nreal user devices. Use a physical device to benchmark. Emulator\nbenchmark improvements might not carry over to a real user\'s\nexperience (or even regress real device performance).");

        r66[1] = $r22;

        $r23 = <androidx.benchmark.DeviceInfo: androidx.benchmark.DeviceInfo INSTANCE>;

        $i4 = <androidx.benchmark.DeviceInfo: int initialBatteryPercent>;

        if $i4 >= 25 goto label10;

        $z18 = 1;

        goto label11;

     label10:
        $z18 = 0;

     label11:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Device has low battery (");

        $r26 = <androidx.benchmark.DeviceInfo: androidx.benchmark.DeviceInfo INSTANCE>;

        $i6 = <androidx.benchmark.DeviceInfo: int initialBatteryPercent>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n                    When battery is low, devices will often reduce performance (e.g. disabling big\n                    cores) to save remaining battery. This occurs even when they are plugged in.\n                    Wait for your battery to charge to at least 25%.\n                    Currently at ");

        $r32 = <androidx.benchmark.DeviceInfo: androidx.benchmark.DeviceInfo INSTANCE>;

        $i7 = <androidx.benchmark.DeviceInfo: int initialBatteryPercent>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%.\n                ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r36 = staticinvoke <kotlin.text.StringsKt: java.lang.String trimIndent(java.lang.String)>($r35);

        $r37 = staticinvoke <androidx.benchmark.ConfigurationErrorKt: androidx.benchmark.ConfigurationError conditionalError(boolean,java.lang.String,java.lang.String,java.lang.String)>($z18, "LOW-BATTERY", $r29, $r36);

        r66[2] = $r37;

        $r38 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List listOfNotNull(java.lang.Object[])>(r66);

        <androidx.benchmark.DeviceInfo: java.util.List errors> = $r38;

        return;
    }

