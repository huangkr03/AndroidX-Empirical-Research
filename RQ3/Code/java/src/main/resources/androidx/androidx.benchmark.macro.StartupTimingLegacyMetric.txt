androidx.benchmark.macro.StartupTimingLegacyMetric
    public void <init>()
    {
        androidx.benchmark.macro.StartupTimingLegacyMetric r0;

        r0 := @this: androidx.benchmark.macro.StartupTimingLegacyMetric;

        specialinvoke r0.<androidx.benchmark.macro.Metric: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        return;
    }

    public void configure$benchmark_macro_release(java.lang.String)
    {
        androidx.benchmark.macro.StartupTimingLegacyMetric r0;
        java.lang.String r1;

        r0 := @this: androidx.benchmark.macro.StartupTimingLegacyMetric;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "packageName");

        return;
    }

    public void start$benchmark_macro_release()
    {
        androidx.benchmark.macro.StartupTimingLegacyMetric r0;

        r0 := @this: androidx.benchmark.macro.StartupTimingLegacyMetric;

        return;
    }

    public void stop$benchmark_macro_release()
    {
        androidx.benchmark.macro.StartupTimingLegacyMetric r0;

        r0 := @this: androidx.benchmark.macro.StartupTimingLegacyMetric;

        return;
    }

    public androidx.benchmark.macro.IterationResult getMetrics$benchmark_macro_release(androidx.benchmark.macro.Metric$CaptureInfo, java.lang.String)
    {
        androidx.benchmark.macro.StartupTimingLegacyMetric r0;
        androidx.benchmark.macro.Metric$CaptureInfo r1;
        java.lang.String r2, r3, $r6;
        androidx.benchmark.macro.perfetto.PerfettoTraceProcessor $r4;
        androidx.benchmark.macro.perfetto.PerfettoResultsParser $r5;
        androidx.benchmark.macro.IterationResult $r7;

        r0 := @this: androidx.benchmark.macro.StartupTimingLegacyMetric;

        r1 := @parameter0: androidx.benchmark.macro.Metric$CaptureInfo;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "captureInfo");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "tracePath");

        $r4 = <androidx.benchmark.macro.perfetto.PerfettoTraceProcessor: androidx.benchmark.macro.perfetto.PerfettoTraceProcessor INSTANCE>;

        r3 = virtualinvoke $r4.<androidx.benchmark.macro.perfetto.PerfettoTraceProcessor: java.lang.String getJsonMetrics(java.lang.String,java.lang.String)>(r2, "android_startup");

        $r5 = <androidx.benchmark.macro.perfetto.PerfettoResultsParser: androidx.benchmark.macro.perfetto.PerfettoResultsParser INSTANCE>;

        $r6 = virtualinvoke r1.<androidx.benchmark.macro.Metric$CaptureInfo: java.lang.String getTargetPackageName()>();

        $r7 = virtualinvoke $r5.<androidx.benchmark.macro.perfetto.PerfettoResultsParser: androidx.benchmark.macro.IterationResult parseStartupResult(java.lang.String,java.lang.String)>(r3, $r6);

        return $r7;
    }

