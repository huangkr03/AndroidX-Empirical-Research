androidx.ui.text.platform.AndroidParagraph
<androidx.ui.text.platform.AndroidParagraph: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>
<androidx.ui.text.platform.AndroidParagraph: int maxLines>
<androidx.ui.text.platform.AndroidParagraph: boolean ellipsis>
<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.ParagraphConstraints constraints>
<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>
<androidx.ui.text.platform.AndroidParagraph: float width>
<androidx.ui.text.platform.AndroidParagraph: java.util.List placeholderRects>
<androidx.ui.text.platform.AndroidParagraph: kotlin.Lazy wordBoundary$delegate>
    public void <init>(androidx.ui.text.platform.AndroidParagraphIntrinsics, int, boolean, androidx.ui.text.ParagraphConstraints)
    {
        androidx.ui.text.platform.AndroidParagraph r0, r11;
        androidx.ui.text.platform.AndroidParagraphIntrinsics r1, $r13, $r17, $r19, $r20, $r22;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, $i27, i30, $i31, i32, i34, i35, i36, $i37;
        boolean z0, z2, z3, z5, z6, $z8, $z9, $z11, z12, z13, z14, z16, z17;
        androidx.ui.text.ParagraphConstraints r2, $r16, $r18;
        androidx.ui.text.platform.style.PlaceholderSpan r3, r4;
        java.util.Collection r5, r54;
        androidx.ui.text.style.TextDirection r6, r57;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, f25, $f26, f27, $f28, f29;
        android.graphics.Paint$FontMetricsInt r8, $r34, $r35;
        androidx.ui.geometry.Rect r10, $r56;
        java.util.List r12, $r51;
        androidx.ui.text.style.TextAlign $r14, $r44;
        int[] $r15, $r33;
        androidx.ui.text.platform.TextLayout $r21, $r31, $r32, $r38, r58;
        android.text.Spanned $r23, $r29, $r30;
        java.lang.Object[] $r24;
        java.util.ArrayList $r25;
        androidx.ui.text.platform.AndroidParagraph$wordBoundary$2 $r26;
        kotlin.jvm.functions.Function0 $r27;
        kotlin.Lazy $r28;
        java.lang.IllegalStateException $r36;
        kotlin.NoWhenBranchMatchedException $r37;
        java.lang.IllegalArgumentException $r39;
        java.lang.String $r40, r42;
        java.lang.Throwable $r41;
        androidx.ui.text.TextStyle r43;
        byte $b28, b29, b33;
        android.text.TextUtils$TruncateAt $r45;
        java.lang.CharSequence $r46, r49;
        android.text.TextPaint $r47;
        androidx.ui.text.platform.LayoutIntrinsics r48;
        androidx.ui.text.platform.style.PlaceholderSpan[] $r52, r55;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        r1 := @parameter0: androidx.ui.text.platform.AndroidParagraphIntrinsics;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: androidx.ui.text.ParagraphConstraints;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "paragraphIntrinsics");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "constraints");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics> = r1;

        r0.<androidx.ui.text.platform.AndroidParagraph: int maxLines> = i0;

        r0.<androidx.ui.text.platform.AndroidParagraph: boolean ellipsis> = z0;

        r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.ParagraphConstraints constraints> = r2;

        $i5 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: int getMaxLines()>();

        if $i5 < 1 goto label01;

        $z11 = 1;

        goto label02;

     label01:
        $z11 = 0;

     label02:
        z12 = $z11;

        z13 = 0;

        z14 = 0;

        if z12 != 0 goto label03;

        r42 = "maxLines should be greater than 0";

        $r39 = new java.lang.IllegalArgumentException;

        $r40 = virtualinvoke r42.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r40);

        $r41 = (java.lang.Throwable) $r39;

        throw $r41;

     label03:
        $r13 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.AndroidParagraphIntrinsics getParagraphIntrinsics()>();

        r43 = virtualinvoke $r13.<androidx.ui.text.platform.AndroidParagraphIntrinsics: androidx.ui.text.TextStyle getStyle()>();

        $r14 = virtualinvoke r43.<androidx.ui.text.TextStyle: androidx.ui.text.style.TextAlign getTextAlign()>();

        i26 = staticinvoke <androidx.ui.text.platform.AndroidParagraphKt: int access$toLayoutAlign(androidx.ui.text.style.TextAlign)>($r14);

        $r44 = virtualinvoke r43.<androidx.ui.text.TextStyle: androidx.ui.text.style.TextAlign getTextAlign()>();

        if $r44 != null goto label04;

        $i27 = -1;

        goto label05;

     label04:
        $r15 = <androidx.ui.text.platform.AndroidParagraph$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i6 = virtualinvoke $r44.<androidx.ui.text.style.TextAlign: int ordinal()>();

        $i27 = $r15[$i6];

     label05:
        if $i27 != 1 goto label06;

        $b28 = 1;

        goto label07;

     label06:
        $b28 = 0;

     label07:
        b29 = $b28;

        $z8 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: boolean getEllipsis()>();

        if $z8 == 0 goto label08;

        $r45 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        goto label09;

     label08:
        $r45 = (android.text.TextUtils$TruncateAt) null;

     label09:
        $r16 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.ParagraphConstraints getConstraints()>();

        $f1 = virtualinvoke $r16.<androidx.ui.text.ParagraphConstraints: float getWidth()>();

        r0.<androidx.ui.text.platform.AndroidParagraph: float width> = $f1;

        $r17 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.AndroidParagraphIntrinsics getParagraphIntrinsics()>();

        $r46 = virtualinvoke $r17.<androidx.ui.text.platform.AndroidParagraphIntrinsics: java.lang.CharSequence getCharSequence$ui_text_core_release()>();

        $r18 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.ParagraphConstraints getConstraints()>();

        $f23 = virtualinvoke $r18.<androidx.ui.text.ParagraphConstraints: float getWidth()>();

        $r47 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: android.text.TextPaint getTextPaint$ui_text_core_release()>();

        i30 = i26;

        $r19 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.AndroidParagraphIntrinsics getParagraphIntrinsics()>();

        $i31 = virtualinvoke $r19.<androidx.ui.text.platform.AndroidParagraphIntrinsics: int getTextDirectionHeuristic$ui_text_core_release()>();

        i32 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: int getMaxLines()>();

        b33 = b29;

        $r20 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.AndroidParagraphIntrinsics getParagraphIntrinsics()>();

        r48 = virtualinvoke $r20.<androidx.ui.text.platform.AndroidParagraphIntrinsics: androidx.ui.text.platform.LayoutIntrinsics getLayoutIntrinsics$ui_text_core_release()>();

        $r21 = new androidx.ui.text.platform.TextLayout;

        specialinvoke $r21.<androidx.ui.text.platform.TextLayout: void <init>(java.lang.CharSequence,float,android.text.TextPaint,int,android.text.TextUtils$TruncateAt,int,float,float,boolean,int,int,int,int,int[],int[],androidx.ui.text.platform.LayoutIntrinsics,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r46, $f23, $r47, i30, $r45, $i31, 1.0F, 0.0F, 0, i32, 0, 0, b33, null, null, r48, 28032, null);

        r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout> = $r21;

        $r22 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.AndroidParagraphIntrinsics getParagraphIntrinsics()>();

        r49 = virtualinvoke $r22.<androidx.ui.text.platform.AndroidParagraphIntrinsics: java.lang.CharSequence getCharSequence$ui_text_core_release()>();

        r11 = r0;

        z16 = 0;

        z17 = 0;

        $z9 = r49 instanceof android.text.Spanned;

        if $z9 != 0 goto label10;

        $r51 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List emptyList()>();

        goto label28;

     label10:
        $r23 = (android.text.Spanned) r49;

        $i7 = interfaceinvoke r49.<java.lang.CharSequence: int length()>();

        $r24 = interfaceinvoke $r23.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i7, class "Landroidx/ui/text/platform/style/PlaceholderSpan;");

        $r52 = (androidx.ui.text.platform.style.PlaceholderSpan[]) $r24;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r52, "getSpans(0, length, PlaceholderSpan::class.java)");

        $r25 = new java.util.ArrayList;

        $i8 = lengthof $r52;

        specialinvoke $r25.<java.util.ArrayList: void <init>(int)>($i8);

        r54 = (java.util.Collection) $r25;

        r55 = $r52;

        i34 = lengthof r55;

        i35 = 0;

     label11:
        if i35 >= i34 goto label27;

        r3 = r55[i35];

        r4 = r3;

        r5 = r54;

        $r29 = (android.text.Spanned) r49;

        i1 = interfaceinvoke $r29.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r4);

        $r30 = (android.text.Spanned) r49;

        i2 = interfaceinvoke $r30.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r4);

        $r31 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        i3 = virtualinvoke $r31.<androidx.ui.text.platform.TextLayout: int getLineForOffset(int)>(i1);

        $r32 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $i9 = virtualinvoke $r32.<androidx.ui.text.platform.TextLayout: int getLineEllipsisCount(int)>(i3);

        if $i9 <= 0 goto label12;

        $r38 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $i25 = virtualinvoke $r38.<androidx.ui.text.platform.TextLayout: int getLineEllipsisOffset(int)>(i3);

        if i2 <= $i25 goto label12;

        $r56 = (androidx.ui.geometry.Rect) null;

        goto label26;

     label12:
        r6 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.style.TextDirection getBidiRunDirection(int)>(i1);

        r57 = r6;

        $r33 = <androidx.ui.text.platform.AndroidParagraph$WhenMappings: int[] $EnumSwitchMapping$1>;

        $i10 = virtualinvoke r57.<androidx.ui.text.style.TextDirection: int ordinal()>();

        i36 = $r33[$i10];

        tableswitch(i36)
        {
            case 1: goto label13;
            case 2: goto label14;
            default: goto label15;
        };

     label13:
        $f24 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: float getHorizontalPosition(int,boolean)>(i1, 1);

        goto label16;

     label14:
        $f2 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: float getHorizontalPosition(int,boolean)>(i1, 1);

        $i11 = virtualinvoke r4.<androidx.ui.text.platform.style.PlaceholderSpan: int getWidthPx()>();

        $f3 = (float) $i11;

        $f24 = $f2 - $f3;

        goto label16;

     label15:
        $r37 = new kotlin.NoWhenBranchMatchedException;

        specialinvoke $r37.<kotlin.NoWhenBranchMatchedException: void <init>()>();

        throw $r37;

     label16:
        f0 = $f24;

        $i12 = virtualinvoke r4.<androidx.ui.text.platform.style.PlaceholderSpan: int getWidthPx()>();

        $f4 = (float) $i12;

        f25 = f0 + $f4;

        r58 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        z2 = 0;

        z3 = 0;

        i4 = virtualinvoke r4.<androidx.ui.text.platform.style.PlaceholderSpan: int getVerticalAlign()>();

        tableswitch(i4)
        {
            case 0: goto label17;
            case 1: goto label18;
            case 2: goto label19;
            case 3: goto label20;
            case 4: goto label21;
            case 5: goto label22;
            case 6: goto label23;
            default: goto label24;
        };

     label17:
        $f21 = virtualinvoke r58.<androidx.ui.text.platform.TextLayout: float getLineBaseline(int)>(i3);

        $i24 = virtualinvoke r4.<androidx.ui.text.platform.style.PlaceholderSpan: int getHeightPx()>();

        $f22 = (float) $i24;

        $f26 = $f21 - $f22;

        goto label25;

     label18:
        $f26 = virtualinvoke r58.<androidx.ui.text.platform.TextLayout: float getLineTop(int)>(i3);

        goto label25;

     label19:
        $f19 = virtualinvoke r58.<androidx.ui.text.platform.TextLayout: float getLineBottom(int)>(i3);

        $i23 = virtualinvoke r4.<androidx.ui.text.platform.style.PlaceholderSpan: int getHeightPx()>();

        $f20 = (float) $i23;

        $f26 = $f19 - $f20;

        goto label25;

     label20:
        $f13 = virtualinvoke r58.<androidx.ui.text.platform.TextLayout: float getLineTop(int)>(i3);

        $f14 = virtualinvoke r58.<androidx.ui.text.platform.TextLayout: float getLineBottom(int)>(i3);

        $f15 = $f13 + $f14;

        $i22 = virtualinvoke r4.<androidx.ui.text.platform.style.PlaceholderSpan: int getHeightPx()>();

        $f16 = (float) $i22;

        $f18 = $f15 - $f16;

        $f17 = (float) 2;

        $f26 = $f18 / $f17;

        goto label25;

     label21:
        $r35 = virtualinvoke r4.<androidx.ui.text.platform.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt getFontMetrics()>();

        $i21 = $r35.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $f11 = (float) $i21;

        $f12 = virtualinvoke r58.<androidx.ui.text.platform.TextLayout: float getLineBaseline(int)>(i3);

        $f26 = $f11 + $f12;

        goto label25;

     label22:
        $r34 = virtualinvoke r4.<androidx.ui.text.platform.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt getFontMetrics()>();

        $i19 = $r34.<android.graphics.Paint$FontMetricsInt: int descent>;

        $f7 = (float) $i19;

        $f8 = virtualinvoke r58.<androidx.ui.text.platform.TextLayout: float getLineBaseline(int)>(i3);

        $f9 = $f7 + $f8;

        $i20 = virtualinvoke r4.<androidx.ui.text.platform.style.PlaceholderSpan: int getHeightPx()>();

        $f10 = (float) $i20;

        $f26 = $f9 - $f10;

        goto label25;

     label23:
        r8 = virtualinvoke r4.<androidx.ui.text.platform.style.PlaceholderSpan: android.graphics.Paint$FontMetricsInt getFontMetrics()>();

        z5 = 0;

        z6 = 0;

        $i14 = r8.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i13 = r8.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i15 = $i14 + $i13;

        $i16 = virtualinvoke r4.<androidx.ui.text.platform.style.PlaceholderSpan: int getHeightPx()>();

        $i17 = $i15 - $i16;

        $i18 = $i17 / 2;

        $f5 = (float) $i18;

        $f6 = virtualinvoke r58.<androidx.ui.text.platform.TextLayout: float getLineBaseline(int)>(i3);

        $f26 = $f5 + $f6;

        goto label25;

     label24:
        $r36 = new java.lang.IllegalStateException;

        specialinvoke $r36.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unexpected verticalAlignment");

        throw $r36;

     label25:
        f27 = $f26;

        $i37 = virtualinvoke r4.<androidx.ui.text.platform.style.PlaceholderSpan: int getHeightPx()>();

        $f28 = (float) $i37;

        f29 = f27 + $f28;

        $r56 = new androidx.ui.geometry.Rect;

        specialinvoke $r56.<androidx.ui.geometry.Rect: void <init>(float,float,float,float)>(f0, f27, f25, f29);

     label26:
        r10 = $r56;

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r10);

        i35 = i35 + 1;

        goto label11;

     label27:
        $r51 = (java.util.List) r54;

     label28:
        r12 = $r51;

        r11.<androidx.ui.text.platform.AndroidParagraph: java.util.List placeholderRects> = r12;

        $r26 = new androidx.ui.text.platform.AndroidParagraph$wordBoundary$2;

        specialinvoke $r26.<androidx.ui.text.platform.AndroidParagraph$wordBoundary$2: void <init>(androidx.ui.text.platform.AndroidParagraph)>(r0);

        $r27 = (kotlin.jvm.functions.Function0) $r26;

        $r28 = staticinvoke <kotlin.LazyKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)>($r27);

        r0.<androidx.ui.text.platform.AndroidParagraph: kotlin.Lazy wordBoundary$delegate> = $r28;

        return;
    }

    public final androidx.ui.text.platform.AndroidParagraphIntrinsics getParagraphIntrinsics()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        androidx.ui.text.platform.AndroidParagraphIntrinsics $r1;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.AndroidParagraphIntrinsics paragraphIntrinsics>;

        return $r1;
    }

    public final int getMaxLines()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int $i0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $i0 = r0.<androidx.ui.text.platform.AndroidParagraph: int maxLines>;

        return $i0;
    }

    public final boolean getEllipsis()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        boolean $z0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $z0 = r0.<androidx.ui.text.platform.AndroidParagraph: boolean ellipsis>;

        return $z0;
    }

    public final androidx.ui.text.ParagraphConstraints getConstraints()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        androidx.ui.text.ParagraphConstraints $r1;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.ParagraphConstraints constraints>;

        return $r1;
    }

    public void <init>(java.lang.String, androidx.ui.text.TextStyle, java.util.List, java.util.List, int, boolean, androidx.ui.text.ParagraphConstraints, androidx.ui.text.platform.TypefaceAdapter, androidx.ui.unit.Density)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        java.lang.String r1, r8;
        androidx.ui.text.TextStyle r2, r9;
        java.util.List r3, r4, r10, r11;
        int i0;
        boolean z0;
        androidx.ui.text.ParagraphConstraints r5;
        androidx.ui.text.platform.TypefaceAdapter r6, r12;
        androidx.ui.unit.Density r7, r13;
        androidx.ui.text.platform.AndroidParagraphIntrinsics $r14;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.ui.text.TextStyle;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        r5 := @parameter6: androidx.ui.text.ParagraphConstraints;

        r6 := @parameter7: androidx.ui.text.platform.TypefaceAdapter;

        r7 := @parameter8: androidx.ui.unit.Density;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "text");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "style");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "spanStyles");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "placeholders");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "constraints");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r6, "typefaceAdapter");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r7, "density");

        r8 = r1;

        r9 = r2;

        r10 = r4;

        r11 = r3;

        r12 = r6;

        r13 = r7;

        $r14 = new androidx.ui.text.platform.AndroidParagraphIntrinsics;

        specialinvoke $r14.<androidx.ui.text.platform.AndroidParagraphIntrinsics: void <init>(java.lang.String,androidx.ui.text.TextStyle,java.util.List,java.util.List,androidx.ui.text.platform.TypefaceAdapter,androidx.ui.unit.Density)>(r8, r9, r11, r10, r12, r13);

        specialinvoke r0.<androidx.ui.text.platform.AndroidParagraph: void <init>(androidx.ui.text.platform.AndroidParagraphIntrinsics,int,boolean,androidx.ui.text.ParagraphConstraints)>($r14, i0, z0, r5);

        return;
    }

    public float getWidth()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        float $f0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $f0 = r0.<androidx.ui.text.platform.AndroidParagraph: float width>;

        return $f0;
    }

    public float getHeight()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        androidx.ui.text.platform.TextLayout $r1;
        int $i0;
        float $f0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $i0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: int getHeight()>();

        $f0 = (float) $i0;

        return $f0;
    }

    public float getMaxIntrinsicWidth()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        androidx.ui.text.platform.AndroidParagraphIntrinsics $r1;
        float $f0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $r1 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.AndroidParagraphIntrinsics getParagraphIntrinsics()>();

        $f0 = virtualinvoke $r1.<androidx.ui.text.platform.AndroidParagraphIntrinsics: float getMaxIntrinsicWidth()>();

        return $f0;
    }

    public float getMinIntrinsicWidth()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        androidx.ui.text.platform.AndroidParagraphIntrinsics $r1;
        float $f0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $r1 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.AndroidParagraphIntrinsics getParagraphIntrinsics()>();

        $f0 = virtualinvoke $r1.<androidx.ui.text.platform.AndroidParagraphIntrinsics: float getMinIntrinsicWidth()>();

        return $f0;
    }

    public float getFirstBaseline()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        androidx.ui.text.platform.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: float getLineBaseline(int)>(0);

        return $f0;
    }

    public float getLastBaseline()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        androidx.ui.text.platform.TextLayout $r1, $r2;
        float $f0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $i0 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: int getMaxLines()>();

        $i1 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: int getLineCount()>();

        if $i0 >= $i1 goto label1;

        $r2 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $i4 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: int getMaxLines()>();

        $i5 = $i4 - 1;

        $f0 = virtualinvoke $r2.<androidx.ui.text.platform.TextLayout: float getLineBaseline(int)>($i5);

        goto label2;

     label1:
        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $i2 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: int getLineCount()>();

        $i3 = $i2 - 1;

        $f0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: float getLineBaseline(int)>($i3);

     label2:
        return $f0;
    }

    public boolean getDidExceedMaxLines()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        androidx.ui.text.platform.TextLayout $r1;
        boolean $z0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $z0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: boolean getDidExceedMaxLines()>();

        return $z0;
    }

    public final java.util.Locale getTextLocale$ui_text_core_release()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        java.util.Locale r1;
        androidx.ui.text.platform.AndroidParagraphIntrinsics $r2;
        android.text.TextPaint $r3;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $r2 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.AndroidParagraphIntrinsics getParagraphIntrinsics()>();

        $r3 = virtualinvoke $r2.<androidx.ui.text.platform.AndroidParagraphIntrinsics: android.text.TextPaint getTextPaint$ui_text_core_release()>();

        r1 = virtualinvoke $r3.<android.text.TextPaint: java.util.Locale getTextLocale()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "paragraphIntrinsics.textPaint.textLocale");

        return r1;
    }

    public static void getTextLocale$ui_text_core_release$annotations$ui_text_core_release()
    {
        return;
    }

    public int getLineCount()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        androidx.ui.text.platform.TextLayout $r1;
        int $i0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $i0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: int getLineCount()>();

        return $i0;
    }

    public java.util.List getPlaceholderRects()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        java.util.List $r1;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: java.util.List placeholderRects>;

        return $r1;
    }

    public final java.lang.CharSequence getCharSequence$ui_text_core_release()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        androidx.ui.text.platform.AndroidParagraphIntrinsics $r1;
        java.lang.CharSequence $r2;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $r1 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.AndroidParagraphIntrinsics getParagraphIntrinsics()>();

        $r2 = virtualinvoke $r1.<androidx.ui.text.platform.AndroidParagraphIntrinsics: java.lang.CharSequence getCharSequence$ui_text_core_release()>();

        return $r2;
    }

    public static void getCharSequence$ui_text_core_release$annotations$ui_text_core_release()
    {
        return;
    }

    public final android.text.TextPaint getTextPaint$ui_text_core_release()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        androidx.ui.text.platform.AndroidParagraphIntrinsics $r1;
        android.text.TextPaint $r2;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        $r1 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.AndroidParagraphIntrinsics getParagraphIntrinsics()>();

        $r2 = virtualinvoke $r1.<androidx.ui.text.platform.AndroidParagraphIntrinsics: android.text.TextPaint getTextPaint$ui_text_core_release()>();

        return $r2;
    }

    public static void getTextPaint$ui_text_core_release$annotations$ui_text_core_release()
    {
        return;
    }

    public int getOffsetForPosition(androidx.ui.geometry.Offset)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        androidx.ui.geometry.Offset r1;
        int i0, $i1, $i2;
        androidx.ui.text.platform.TextLayout $r2, $r3;
        float $f0, $f1;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        r1 := @parameter0: androidx.ui.geometry.Offset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "position");

        $r2 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $f0 = virtualinvoke r1.<androidx.ui.geometry.Offset: float getY()>();

        $i1 = (int) $f0;

        i0 = virtualinvoke $r2.<androidx.ui.text.platform.TextLayout: int getLineForVertical(int)>($i1);

        $r3 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $f1 = virtualinvoke r1.<androidx.ui.geometry.Offset: float getX()>();

        $i2 = virtualinvoke $r3.<androidx.ui.text.platform.TextLayout: int getOffsetForHorizontal(int,float)>(i0, $f1);

        return $i2;
    }

    public androidx.ui.geometry.Rect getBoundingBox(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0, i1, $i2;
        float f0, f1, f2, f3, f4, f5, f6, f7;
        androidx.ui.text.platform.TextLayout $r1, $r2, $r3, $r4, $r5;
        androidx.ui.geometry.Rect $r6;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        f0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: float getPrimaryHorizontal(int)>(i0);

        $r2 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $i2 = i0 + 1;

        f1 = virtualinvoke $r2.<androidx.ui.text.platform.TextLayout: float getPrimaryHorizontal(int)>($i2);

        $r3 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        i1 = virtualinvoke $r3.<androidx.ui.text.platform.TextLayout: int getLineForOffset(int)>(i0);

        $r4 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        f2 = virtualinvoke $r4.<androidx.ui.text.platform.TextLayout: float getLineTop(int)>(i1);

        $r5 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        f3 = virtualinvoke $r5.<androidx.ui.text.platform.TextLayout: float getLineBottom(int)>(i1);

        f4 = f2;

        f5 = f3;

        f6 = f0;

        f7 = f1;

        $r6 = new androidx.ui.geometry.Rect;

        specialinvoke $r6.<androidx.ui.geometry.Rect: void <init>(float,float,float,float)>(f6, f4, f7, f5);

        return $r6;
    }

    public androidx.ui.graphics.Path getPathForRange(int, int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0, i1, $i2, $i3;
        android.graphics.Path r1, $r15;
        kotlin.ranges.IntRange $r2;
        boolean $z0;
        java.lang.AssertionError $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12;
        java.lang.CharSequence $r10, $r14;
        java.lang.String $r13;
        androidx.ui.text.platform.TextLayout $r16;
        androidx.ui.graphics.Path $r17;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new kotlin.ranges.IntRange;

        specialinvoke $r2.<kotlin.ranges.IntRange: void <init>(int,int)>(0, i1);

        $z0 = virtualinvoke $r2.<kotlin.ranges.IntRange: boolean contains(int)>(i0);

        if $z0 == 0 goto label1;

        $r14 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: java.lang.CharSequence getCharSequence$ui_text_core_release()>();

        $i3 = interfaceinvoke $r14.<java.lang.CharSequence: int length()>();

        if i1 <= $i3 goto label2;

     label1:
        $r3 = new java.lang.AssertionError;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") or End(");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of Range(0..");

        $r10 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: java.lang.CharSequence getCharSequence$ui_text_core_release()>();

        $i2 = interfaceinvoke $r10.<java.lang.CharSequence: int length()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), or start > end!");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r13);

        throw $r3;

     label2:
        $r15 = new android.graphics.Path;

        specialinvoke $r15.<android.graphics.Path: void <init>()>();

        r1 = $r15;

        $r16 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        virtualinvoke $r16.<androidx.ui.text.platform.TextLayout: void getSelectionPath(int,int,android.graphics.Path)>(i0, i1, r1);

        $r17 = staticinvoke <androidx.ui.graphics.AndroidPathKt: androidx.ui.graphics.Path asComposePath(android.graphics.Path)>(r1);

        return $r17;
    }

    public androidx.ui.geometry.Rect getCursorRect(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0, i1, $i2, $i3;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        kotlin.ranges.IntRange $r1;
        java.lang.CharSequence $r2, $r13;
        boolean $z0;
        androidx.ui.text.platform.TextLayout $r3, $r4, $r6, $r7;
        androidx.ui.geometry.Rect $r5;
        java.lang.AssertionError $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14;
        java.lang.String $r15;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = new kotlin.ranges.IntRange;

        $r2 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: java.lang.CharSequence getCharSequence$ui_text_core_release()>();

        $i2 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        specialinvoke $r1.<kotlin.ranges.IntRange: void <init>(int,int)>(0, $i2);

        $z0 = virtualinvoke $r1.<kotlin.ranges.IntRange: boolean contains(int)>(i0);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.AssertionError;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset(");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is out of bounds (0,");

        $r13 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: java.lang.CharSequence getCharSequence$ui_text_core_release()>();

        $i3 = interfaceinvoke $r13.<java.lang.CharSequence: int length()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>($r15);

        throw $r8;

     label1:
        f0 = 4.0F;

        $r3 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        f1 = virtualinvoke $r3.<androidx.ui.text.platform.TextLayout: float getPrimaryHorizontal(int)>(i0);

        $r4 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        i1 = virtualinvoke $r4.<androidx.ui.text.platform.TextLayout: int getLineForOffset(int)>(i0);

        $r5 = new androidx.ui.geometry.Rect;

        $f2 = 0.5F * f0;

        $f3 = f1 - $f2;

        $r6 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $f4 = virtualinvoke $r6.<androidx.ui.text.platform.TextLayout: float getLineTop(int)>(i1);

        $f5 = 0.5F * f0;

        $f6 = f1 + $f5;

        $r7 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $f7 = virtualinvoke $r7.<androidx.ui.text.platform.TextLayout: float getLineBottom(int)>(i1);

        specialinvoke $r5.<androidx.ui.geometry.Rect: void <init>(float,float,float,float)>($f3, $f4, $f6, $f7);

        return $r5;
    }

    private final androidx.ui.text.platform.selection.WordBoundary getWordBoundary()
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        kotlin.Lazy r1;
        kotlin.reflect.KProperty r2;
        boolean z0;
        kotlin.reflect.KProperty[] $r3;
        java.lang.Object $r4;
        androidx.ui.text.platform.selection.WordBoundary $r5;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        r1 = r0.<androidx.ui.text.platform.AndroidParagraph: kotlin.Lazy wordBoundary$delegate>;

        $r3 = <androidx.ui.text.platform.AndroidParagraph: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r3[0];

        z0 = 0;

        $r4 = interfaceinvoke r1.<kotlin.Lazy: java.lang.Object getValue()>();

        $r5 = (androidx.ui.text.platform.selection.WordBoundary) $r4;

        return $r5;
    }

    public androidx.ui.text.TextRange getWordBoundary(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0, $i1, $i2;
        androidx.ui.text.TextRange $r1;
        androidx.ui.text.platform.selection.WordBoundary $r2, $r3;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = new androidx.ui.text.TextRange;

        $r2 = specialinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.selection.WordBoundary getWordBoundary()>();

        $i1 = virtualinvoke $r2.<androidx.ui.text.platform.selection.WordBoundary: int getWordStart(int)>(i0);

        $r3 = specialinvoke r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.selection.WordBoundary getWordBoundary()>();

        $i2 = virtualinvoke $r3.<androidx.ui.text.platform.selection.WordBoundary: int getWordEnd(int)>(i0);

        specialinvoke $r1.<androidx.ui.text.TextRange: void <init>(int,int)>($i1, $i2);

        return $r1;
    }

    public float getLineLeft(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0;
        androidx.ui.text.platform.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: float getLineLeft(int)>(i0);

        return $f0;
    }

    public float getLineRight(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0;
        androidx.ui.text.platform.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: float getLineRight(int)>(i0);

        return $f0;
    }

    public float getLineTop(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0;
        androidx.ui.text.platform.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: float getLineTop(int)>(i0);

        return $f0;
    }

    public float getLineBottom(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0;
        androidx.ui.text.platform.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: float getLineBottom(int)>(i0);

        return $f0;
    }

    public float getLineHeight(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0;
        androidx.ui.text.platform.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: float getLineHeight(int)>(i0);

        return $f0;
    }

    public float getLineWidth(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0;
        androidx.ui.text.platform.TextLayout $r1;
        float $f0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: float getLineWidth(int)>(i0);

        return $f0;
    }

    public int getLineStart(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0, $i1;
        androidx.ui.text.platform.TextLayout $r1;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $i1 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: int getLineStart(int)>(i0);

        return $i1;
    }

    public int getLineEnd(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0, $i1;
        androidx.ui.text.platform.TextLayout $r1;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $i1 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: int getLineEnd(int)>(i0);

        return $i1;
    }

    public int getLineEllipsisOffset(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0, $i1;
        androidx.ui.text.platform.TextLayout $r1;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $i1 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: int getLineEllipsisOffset(int)>(i0);

        return $i1;
    }

    public int getLineEllipsisCount(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0, $i1;
        androidx.ui.text.platform.TextLayout $r1;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $i1 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: int getLineEllipsisCount(int)>(i0);

        return $i1;
    }

    public int getLineForOffset(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0, $i1;
        androidx.ui.text.platform.TextLayout $r1;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $i1 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: int getLineForOffset(int)>(i0);

        return $i1;
    }

    public float getHorizontalPosition(int, boolean)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0;
        boolean z0;
        androidx.ui.text.platform.TextLayout $r1, $r2;
        float $f0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $f0 = virtualinvoke $r2.<androidx.ui.text.platform.TextLayout: float getPrimaryHorizontal(int)>(i0);

        goto label2;

     label1:
        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $f0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: float getSecondaryHorizontal(int)>(i0);

     label2:
        return $f0;
    }

    public androidx.ui.text.style.TextDirection getParagraphDirection(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0, i1, i2;
        androidx.ui.text.platform.TextLayout $r1, $r2;
        androidx.ui.text.style.TextDirection $r3;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        i1 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: int getLineForOffset(int)>(i0);

        $r2 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        i2 = virtualinvoke $r2.<androidx.ui.text.platform.TextLayout: int getParagraphDirection(int)>(i1);

        if i2 != 1 goto label1;

        $r3 = <androidx.ui.text.style.TextDirection: androidx.ui.text.style.TextDirection Ltr>;

        goto label2;

     label1:
        $r3 = <androidx.ui.text.style.TextDirection: androidx.ui.text.style.TextDirection Rtl>;

     label2:
        return $r3;
    }

    public androidx.ui.text.style.TextDirection getBidiRunDirection(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0;
        androidx.ui.text.platform.TextLayout $r1;
        boolean $z0;
        androidx.ui.text.style.TextDirection $r2;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $z0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: boolean isRtlCharAt(int)>(i0);

        if $z0 == 0 goto label1;

        $r2 = <androidx.ui.text.style.TextDirection: androidx.ui.text.style.TextDirection Rtl>;

        goto label2;

     label1:
        $r2 = <androidx.ui.text.style.TextDirection: androidx.ui.text.style.TextDirection Ltr>;

     label2:
        return $r2;
    }

    public final boolean isEllipsisApplied$ui_text_core_release(int)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        int i0;
        androidx.ui.text.platform.TextLayout $r1;
        boolean $z0;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        $z0 = virtualinvoke $r1.<androidx.ui.text.platform.TextLayout: boolean isEllipsisApplied(int)>(i0);

        return $z0;
    }

    public void paint(androidx.ui.graphics.Canvas)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        androidx.ui.graphics.Canvas r1;
        android.graphics.Canvas r2;
        boolean $z0, $z1;
        androidx.ui.text.platform.TextLayout $r3;
        float $f0, $f1;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph;

        r1 := @parameter0: androidx.ui.graphics.Canvas;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "canvas");

        r2 = interfaceinvoke r1.<androidx.ui.graphics.Canvas: android.graphics.Canvas getNativeCanvas()>();

        $z0 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: boolean getDidExceedMaxLines()>();

        if $z0 == 0 goto label1;

        virtualinvoke r2.<android.graphics.Canvas: int save()>();

        $f0 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: float getWidth()>();

        $f1 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: float getHeight()>();

        virtualinvoke r2.<android.graphics.Canvas: boolean clipRect(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

     label1:
        $r3 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        virtualinvoke $r3.<androidx.ui.text.platform.TextLayout: void paint(android.graphics.Canvas)>(r2);

        $z1 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph: boolean getDidExceedMaxLines()>();

        if $z1 == 0 goto label2;

        virtualinvoke r2.<android.graphics.Canvas: void restore()>();

     label2:
        return;
    }

    public static final androidx.ui.text.platform.TextLayout access$getLayout$p(androidx.ui.text.platform.AndroidParagraph)
    {
        androidx.ui.text.platform.AndroidParagraph r0;
        androidx.ui.text.platform.TextLayout $r1;

        r0 := @parameter0: androidx.ui.text.platform.AndroidParagraph;

        $r1 = r0.<androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout layout>;

        return $r1;
    }

    public static final void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        kotlin.jvm.internal.PropertyReference1Impl $r1;
        kotlin.reflect.KClass $r2;
        kotlin.reflect.KDeclarationContainer $r3;
        kotlin.jvm.internal.PropertyReference1 $r4;
        kotlin.reflect.KProperty1 $r5;
        kotlin.reflect.KProperty $r6;

        r0 = newarray (kotlin.reflect.KProperty)[1];

        $r1 = new kotlin.jvm.internal.PropertyReference1Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/ui/text/platform/AndroidParagraph;");

        $r3 = (kotlin.reflect.KDeclarationContainer) $r2;

        specialinvoke $r1.<kotlin.jvm.internal.PropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r3, "wordBoundary", "getWordBoundary()Landroidx/ui/text/platform/selection/WordBoundary;");

        $r4 = (kotlin.jvm.internal.PropertyReference1) $r1;

        $r5 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)>($r4);

        $r6 = (kotlin.reflect.KProperty) $r5;

        r0[0] = $r6;

        <androidx.ui.text.platform.AndroidParagraph: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        return;
    }

androidx.ui.text.platform.AndroidParagraph$WhenMappings
<androidx.ui.text.platform.AndroidParagraph$WhenMappings: int[] $EnumSwitchMapping$0>
<androidx.ui.text.platform.AndroidParagraph$WhenMappings: int[] $EnumSwitchMapping$1>
    public static final void <clinit>()
    {
        androidx.ui.text.style.TextAlign[] $r0;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.ui.text.style.TextAlign $r1;
        androidx.ui.text.style.TextDirection[] $r2;
        androidx.ui.text.style.TextDirection $r3, $r4;
        int[] r5, r6;

        $r0 = staticinvoke <androidx.ui.text.style.TextAlign: androidx.ui.text.style.TextAlign[] values()>();

        $i0 = lengthof $r0;

        r5 = newarray (int)[$i0];

        $r1 = <androidx.ui.text.style.TextAlign: androidx.ui.text.style.TextAlign Justify>;

        $i1 = virtualinvoke $r1.<androidx.ui.text.style.TextAlign: int ordinal()>();

        r5[$i1] = 1;

        <androidx.ui.text.platform.AndroidParagraph$WhenMappings: int[] $EnumSwitchMapping$0> = r5;

        $r2 = staticinvoke <androidx.ui.text.style.TextDirection: androidx.ui.text.style.TextDirection[] values()>();

        $i2 = lengthof $r2;

        r6 = newarray (int)[$i2];

        $r3 = <androidx.ui.text.style.TextDirection: androidx.ui.text.style.TextDirection Ltr>;

        $i3 = virtualinvoke $r3.<androidx.ui.text.style.TextDirection: int ordinal()>();

        r6[$i3] = 1;

        $r4 = <androidx.ui.text.style.TextDirection: androidx.ui.text.style.TextDirection Rtl>;

        $i4 = virtualinvoke $r4.<androidx.ui.text.style.TextDirection: int ordinal()>();

        r6[$i4] = 2;

        <androidx.ui.text.platform.AndroidParagraph$WhenMappings: int[] $EnumSwitchMapping$1> = r6;

        return;
    }

androidx.ui.text.platform.AndroidParagraph$wordBoundary$2
<androidx.ui.text.platform.AndroidParagraph$wordBoundary$2: androidx.ui.text.platform.AndroidParagraph $this>
    void <init>(androidx.ui.text.platform.AndroidParagraph)
    {
        androidx.ui.text.platform.AndroidParagraph$wordBoundary$2 r0;
        androidx.ui.text.platform.AndroidParagraph $r1;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph$wordBoundary$2;

        $r1 := @parameter0: androidx.ui.text.platform.AndroidParagraph;

        r0.<androidx.ui.text.platform.AndroidParagraph$wordBoundary$2: androidx.ui.text.platform.AndroidParagraph $this> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final androidx.ui.text.platform.selection.WordBoundary invoke()
    {
        androidx.ui.text.platform.AndroidParagraph$wordBoundary$2 r0;
        androidx.ui.text.platform.selection.WordBoundary $r1;
        androidx.ui.text.platform.AndroidParagraph $r2, $r4;
        java.util.Locale $r3;
        androidx.ui.text.platform.TextLayout $r5;
        java.lang.CharSequence $r6;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph$wordBoundary$2;

        $r1 = new androidx.ui.text.platform.selection.WordBoundary;

        $r2 = r0.<androidx.ui.text.platform.AndroidParagraph$wordBoundary$2: androidx.ui.text.platform.AndroidParagraph $this>;

        $r3 = virtualinvoke $r2.<androidx.ui.text.platform.AndroidParagraph: java.util.Locale getTextLocale$ui_text_core_release()>();

        $r4 = r0.<androidx.ui.text.platform.AndroidParagraph$wordBoundary$2: androidx.ui.text.platform.AndroidParagraph $this>;

        $r5 = staticinvoke <androidx.ui.text.platform.AndroidParagraph: androidx.ui.text.platform.TextLayout access$getLayout$p(androidx.ui.text.platform.AndroidParagraph)>($r4);

        $r6 = virtualinvoke $r5.<androidx.ui.text.platform.TextLayout: java.lang.CharSequence getText()>();

        specialinvoke $r1.<androidx.ui.text.platform.selection.WordBoundary: void <init>(java.util.Locale,java.lang.CharSequence)>($r3, $r6);

        return $r1;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.ui.text.platform.AndroidParagraph$wordBoundary$2 r0;
        androidx.ui.text.platform.selection.WordBoundary $r1;

        r0 := @this: androidx.ui.text.platform.AndroidParagraph$wordBoundary$2;

        $r1 = virtualinvoke r0.<androidx.ui.text.platform.AndroidParagraph$wordBoundary$2: androidx.ui.text.platform.selection.WordBoundary invoke()>();

        return $r1;
    }

