androidx.health.services.client.impl.ServiceBackedMeasureClient
<androidx.health.services.client.impl.ServiceBackedMeasureClient: androidx.health.services.client.impl.ServiceBackedMeasureClient$Companion Companion>
<androidx.health.services.client.impl.ServiceBackedMeasureClient: android.content.Context context>
<androidx.health.services.client.impl.ServiceBackedMeasureClient: java.lang.String CLIENT>
<androidx.health.services.client.impl.ServiceBackedMeasureClient: androidx.health.services.client.impl.ipc.ClientConfiguration CLIENT_CONFIGURATION>
    public void <init>(android.content.Context, androidx.health.services.client.impl.ipc.internal.ConnectionManager)
    {
        androidx.health.services.client.impl.ServiceBackedMeasureClient r0;
        android.content.Context r1;
        androidx.health.services.client.impl.ipc.internal.ConnectionManager r2;
        androidx.health.services.client.impl.ipc.ClientConfiguration $r3;
        androidx.health.services.client.impl.ipc.Client$ServiceGetter $r4;
        androidx.health.services.client.impl.ipc.RemoteOperation $r5;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedMeasureClient;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: androidx.health.services.client.impl.ipc.internal.ConnectionManager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "connectionManager");

        $r3 = <androidx.health.services.client.impl.ServiceBackedMeasureClient: androidx.health.services.client.impl.ipc.ClientConfiguration CLIENT_CONFIGURATION>;

        $r4 = dynamicinvoke "getService" <androidx.health.services.client.impl.ipc.Client$ServiceGetter ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(android.os.IBinder), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedMeasureClient: androidx.health.services.client.impl.IMeasureApiService _init_$lambda$0(android.os.IBinder)>, methodtype: androidx.health.services.client.impl.IMeasureApiService __METHODTYPE__(android.os.IBinder));

        $r5 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteOperation ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedMeasureClient: java.lang.Integer _init_$lambda$1(androidx.health.services.client.impl.IMeasureApiService)>, methodtype: java.lang.Integer __METHODTYPE__(androidx.health.services.client.impl.IMeasureApiService));

        specialinvoke r0.<androidx.health.services.client.impl.ipc.Client: void <init>(androidx.health.services.client.impl.ipc.ClientConfiguration,androidx.health.services.client.impl.ipc.internal.ConnectionManager,androidx.health.services.client.impl.ipc.Client$ServiceGetter,androidx.health.services.client.impl.ipc.RemoteOperation)>($r3, r2, $r4, $r5);

        r0.<androidx.health.services.client.impl.ServiceBackedMeasureClient: android.content.Context context> = r1;

        return;
    }

    public void <init>(android.content.Context, androidx.health.services.client.impl.ipc.internal.ConnectionManager, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.health.services.client.impl.ServiceBackedMeasureClient r0;
        android.content.Context r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        androidx.health.services.client.impl.ipc.internal.ConnectionManager r3;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedMeasureClient;

        r1 := @parameter0: android.content.Context;

        r3 := @parameter1: androidx.health.services.client.impl.ipc.internal.ConnectionManager;

        i0 := @parameter2: int;

        r2 := @parameter3: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = staticinvoke <androidx.health.services.client.impl.internal.HsConnectionManager: androidx.health.services.client.impl.ipc.internal.ConnectionManager getInstance(android.content.Context)>(r1);

     label1:
        specialinvoke r0.<androidx.health.services.client.impl.ServiceBackedMeasureClient: void <init>(android.content.Context,androidx.health.services.client.impl.ipc.internal.ConnectionManager)>(r1, r3);

        return;
    }

    public void registerMeasureCallback(androidx.health.services.client.data.DeltaDataType, androidx.health.services.client.MeasureCallback)
    {
        androidx.health.services.client.impl.ServiceBackedMeasureClient r0;
        androidx.health.services.client.data.DeltaDataType r1;
        androidx.health.services.client.MeasureCallback r2;
        android.content.Context $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedMeasureClient;

        r1 := @parameter0: androidx.health.services.client.data.DeltaDataType;

        r2 := @parameter1: androidx.health.services.client.MeasureCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "callback");

        $r3 = r0.<androidx.health.services.client.impl.ServiceBackedMeasureClient: android.content.Context context>;

        $r4 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r3);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "getMainExecutor(context)");

        virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedMeasureClient: void registerMeasureCallback(androidx.health.services.client.data.DeltaDataType,java.util.concurrent.Executor,androidx.health.services.client.MeasureCallback)>(r1, $r4, r2);

        return;
    }

    public void registerMeasureCallback(androidx.health.services.client.data.DeltaDataType, java.util.concurrent.Executor, androidx.health.services.client.MeasureCallback)
    {
        androidx.health.services.client.impl.ServiceBackedMeasureClient r0;
        androidx.health.services.client.data.DeltaDataType r1;
        java.util.concurrent.Executor r2;
        androidx.health.services.client.MeasureCallback r3;
        androidx.health.services.client.impl.request.MeasureRegistrationRequest r4, $r7;
        androidx.health.services.client.impl.MeasureCallbackStub r5;
        com.google.common.util.concurrent.ListenableFuture r6;
        android.content.Context $r8;
        java.lang.String $r9;
        androidx.health.services.client.data.DataType $r10, $r11;
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache $r12;
        androidx.health.services.client.impl.ipc.internal.ListenerKey $r13;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r14;
        androidx.health.services.client.impl.ServiceBackedMeasureClient$registerMeasureCallback$1 $r15;
        com.google.common.util.concurrent.FutureCallback $r16;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedMeasureClient;

        r1 := @parameter0: androidx.health.services.client.data.DeltaDataType;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: androidx.health.services.client.MeasureCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "callback");

        $r7 = new androidx.health.services.client.impl.request.MeasureRegistrationRequest;

        $r8 = r0.<androidx.health.services.client.impl.ServiceBackedMeasureClient: android.content.Context context>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.String getPackageName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r9, "context.packageName");

        $r10 = (androidx.health.services.client.data.DataType) r1;

        specialinvoke $r7.<androidx.health.services.client.impl.request.MeasureRegistrationRequest: void <init>(java.lang.String,androidx.health.services.client.data.DataType)>($r9, $r10);

        r4 = $r7;

        $r12 = <androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache INSTANCE>;

        $r11 = (androidx.health.services.client.data.DataType) r1;

        r5 = virtualinvoke $r12.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: androidx.health.services.client.impl.MeasureCallbackStub getOrCreate(androidx.health.services.client.data.DataType,java.util.concurrent.Executor,androidx.health.services.client.MeasureCallback)>($r11, r2, r3);

        $r13 = virtualinvoke r5.<androidx.health.services.client.impl.MeasureCallbackStub: androidx.health.services.client.impl.ipc.internal.ListenerKey getListenerKey()>();

        $r14 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.request.MeasureRegistrationRequest,androidx.health.services.client.impl.MeasureCallbackStub)>(r4, r5) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedMeasureClient: void registerMeasureCallback$lambda$2(androidx.health.services.client.impl.request.MeasureRegistrationRequest,androidx.health.services.client.impl.MeasureCallbackStub,androidx.health.services.client.impl.IMeasureApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IMeasureApiService,com.google.common.util.concurrent.SettableFuture));

        r6 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedMeasureClient: com.google.common.util.concurrent.ListenableFuture registerListener(androidx.health.services.client.impl.ipc.internal.ListenerKey,androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r13, $r14);

        $r15 = new androidx.health.services.client.impl.ServiceBackedMeasureClient$registerMeasureCallback$1;

        specialinvoke $r15.<androidx.health.services.client.impl.ServiceBackedMeasureClient$registerMeasureCallback$1: void <init>(androidx.health.services.client.MeasureCallback)>(r3);

        $r16 = (com.google.common.util.concurrent.FutureCallback) $r15;

        staticinvoke <com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)>(r6, $r16, r2);

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture unregisterMeasureCallbackAsync(androidx.health.services.client.data.DeltaDataType, androidx.health.services.client.MeasureCallback)
    {
        androidx.health.services.client.impl.ServiceBackedMeasureClient r0;
        androidx.health.services.client.data.DeltaDataType r1;
        androidx.health.services.client.MeasureCallback r2;
        androidx.health.services.client.impl.MeasureCallbackStub r3, $r7;
        androidx.health.services.client.impl.request.MeasureUnregistrationRequest r4, $r8;
        androidx.health.services.client.data.DataType $r5, $r11;
        androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache $r6;
        android.content.Context $r9;
        java.lang.String $r10;
        androidx.health.services.client.impl.ipc.internal.ListenerKey $r12;
        androidx.health.services.client.impl.ipc.RemoteFutureOperation $r13;
        com.google.common.util.concurrent.ListenableFuture $r14, $r17;
        java.lang.IllegalArgumentException $r15;
        java.lang.Throwable $r16;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedMeasureClient;

        r1 := @parameter0: androidx.health.services.client.data.DeltaDataType;

        r2 := @parameter1: androidx.health.services.client.MeasureCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "dataType");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "callback");

        $r6 = <androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache INSTANCE>;

        $r5 = (androidx.health.services.client.data.DataType) r1;

        $r7 = virtualinvoke $r6.<androidx.health.services.client.impl.MeasureCallbackStub$MeasureCallbackCache: androidx.health.services.client.impl.MeasureCallbackStub remove(androidx.health.services.client.data.DataType,androidx.health.services.client.MeasureCallback)>($r5, r2);

        if $r7 != null goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Given callback was not registered.");

        $r16 = (java.lang.Throwable) $r15;

        $r17 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable)>($r16);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r17, "immediateFailedFuture(\n \u2026ered.\")\n                )");

        return $r17;

     label1:
        r3 = $r7;

        $r8 = new androidx.health.services.client.impl.request.MeasureUnregistrationRequest;

        $r9 = r0.<androidx.health.services.client.impl.ServiceBackedMeasureClient: android.content.Context context>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getPackageName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "context.packageName");

        $r11 = (androidx.health.services.client.data.DataType) r1;

        specialinvoke $r8.<androidx.health.services.client.impl.request.MeasureUnregistrationRequest: void <init>(java.lang.String,androidx.health.services.client.data.DataType)>($r10, $r11);

        r4 = $r8;

        $r12 = virtualinvoke r3.<androidx.health.services.client.impl.MeasureCallbackStub: androidx.health.services.client.impl.ipc.internal.ListenerKey getListenerKey()>();

        $r13 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteFutureOperation (androidx.health.services.client.impl.request.MeasureUnregistrationRequest,androidx.health.services.client.impl.MeasureCallbackStub)>(r4, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object,com.google.common.util.concurrent.SettableFuture), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedMeasureClient: void unregisterMeasureCallbackAsync$lambda$3(androidx.health.services.client.impl.request.MeasureUnregistrationRequest,androidx.health.services.client.impl.MeasureCallbackStub,androidx.health.services.client.impl.IMeasureApiService,com.google.common.util.concurrent.SettableFuture)>, methodtype: void __METHODTYPE__(androidx.health.services.client.impl.IMeasureApiService,com.google.common.util.concurrent.SettableFuture));

        $r14 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedMeasureClient: com.google.common.util.concurrent.ListenableFuture unregisterListener(androidx.health.services.client.impl.ipc.internal.ListenerKey,androidx.health.services.client.impl.ipc.RemoteFutureOperation)>($r12, $r13);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "unregisterListener(callb\u2026(resultFuture))\n        }");

        return $r14;
    }

    public com.google.common.util.concurrent.ListenableFuture getCapabilitiesAsync()
    {
        androidx.health.services.client.impl.ServiceBackedMeasureClient r0;
        com.google.common.util.concurrent.ListenableFuture r1, $r3;
        androidx.health.services.client.impl.ipc.RemoteOperation $r2;
        androidx.health.services.client.impl.ServiceBackedMeasureClient$getCapabilitiesAsync$2 $r4;
        kotlin.jvm.functions.Function1 $r5;
        com.google.common.base.Function $r6;
        android.content.Context $r7;
        java.util.concurrent.Executor $r8;

        r0 := @this: androidx.health.services.client.impl.ServiceBackedMeasureClient;

        $r2 = dynamicinvoke "execute" <androidx.health.services.client.impl.ipc.RemoteOperation (androidx.health.services.client.impl.ServiceBackedMeasureClient)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedMeasureClient: androidx.health.services.client.impl.response.MeasureCapabilitiesResponse getCapabilitiesAsync$lambda$4(androidx.health.services.client.impl.ServiceBackedMeasureClient,androidx.health.services.client.impl.IMeasureApiService)>, methodtype: androidx.health.services.client.impl.response.MeasureCapabilitiesResponse __METHODTYPE__(androidx.health.services.client.impl.IMeasureApiService));

        $r3 = virtualinvoke r0.<androidx.health.services.client.impl.ServiceBackedMeasureClient: com.google.common.util.concurrent.ListenableFuture execute(androidx.health.services.client.impl.ipc.RemoteOperation)>($r2);

        $r4 = <androidx.health.services.client.impl.ServiceBackedMeasureClient$getCapabilitiesAsync$2: androidx.health.services.client.impl.ServiceBackedMeasureClient$getCapabilitiesAsync$2 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        $r6 = dynamicinvoke "apply" <com.google.common.base.Function (kotlin.jvm.functions.Function1)>($r5) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.health.services.client.impl.ServiceBackedMeasureClient: androidx.health.services.client.data.MeasureCapabilities getCapabilitiesAsync$lambda$5(kotlin.jvm.functions.Function1,java.lang.Object)>, methodtype: androidx.health.services.client.data.MeasureCapabilities __METHODTYPE__(java.lang.Object));

        $r7 = r0.<androidx.health.services.client.impl.ServiceBackedMeasureClient: android.content.Context context>;

        $r8 = staticinvoke <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>($r7);

        r1 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor)>($r3, $r6, $r8);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r1, "transform(\n            e\u2026ecutor(context)\n        )");

        return r1;
    }

    private static final androidx.health.services.client.impl.IMeasureApiService _init_$lambda$0(android.os.IBinder)
    {
        android.os.IBinder r0;
        androidx.health.services.client.impl.IMeasureApiService $r1;

        r0 := @parameter0: android.os.IBinder;

        $r1 = staticinvoke <androidx.health.services.client.impl.IMeasureApiService$Stub: androidx.health.services.client.impl.IMeasureApiService asInterface(android.os.IBinder)>(r0);

        return $r1;
    }

    private static final java.lang.Integer _init_$lambda$1(androidx.health.services.client.impl.IMeasureApiService)
    {
        androidx.health.services.client.impl.IMeasureApiService r0;
        int $i0;
        java.lang.Integer $r1;

        r0 := @parameter0: androidx.health.services.client.impl.IMeasureApiService;

        $i0 = interfaceinvoke r0.<androidx.health.services.client.impl.IMeasureApiService: int getApiVersion()>();

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;
    }

    private static final void registerMeasureCallback$lambda$2(androidx.health.services.client.impl.request.MeasureRegistrationRequest, androidx.health.services.client.impl.MeasureCallbackStub, androidx.health.services.client.impl.IMeasureApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.request.MeasureRegistrationRequest $r0;
        androidx.health.services.client.impl.MeasureCallbackStub $r1;
        androidx.health.services.client.impl.IMeasureApiService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.services.client.impl.internal.StatusCallback $r4;
        androidx.health.services.client.impl.IMeasureCallback $r5;
        androidx.health.services.client.impl.internal.IStatusCallback $r6;

        $r0 := @parameter0: androidx.health.services.client.impl.request.MeasureRegistrationRequest;

        $r1 := @parameter1: androidx.health.services.client.impl.MeasureCallbackStub;

        r2 := @parameter2: androidx.health.services.client.impl.IMeasureApiService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$request");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$callbackStub");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "result");

        $r5 = (androidx.health.services.client.impl.IMeasureCallback) $r1;

        $r4 = new androidx.health.services.client.impl.internal.StatusCallback;

        specialinvoke $r4.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r6 = (androidx.health.services.client.impl.internal.IStatusCallback) $r4;

        interfaceinvoke r2.<androidx.health.services.client.impl.IMeasureApiService: void registerCallback(androidx.health.services.client.impl.request.MeasureRegistrationRequest,androidx.health.services.client.impl.IMeasureCallback,androidx.health.services.client.impl.internal.IStatusCallback)>($r0, $r5, $r6);

        return;
    }

    private static final void unregisterMeasureCallbackAsync$lambda$3(androidx.health.services.client.impl.request.MeasureUnregistrationRequest, androidx.health.services.client.impl.MeasureCallbackStub, androidx.health.services.client.impl.IMeasureApiService, com.google.common.util.concurrent.SettableFuture)
    {
        androidx.health.services.client.impl.request.MeasureUnregistrationRequest $r0;
        androidx.health.services.client.impl.MeasureCallbackStub $r1;
        androidx.health.services.client.impl.IMeasureApiService r2;
        com.google.common.util.concurrent.SettableFuture r3;
        androidx.health.services.client.impl.internal.StatusCallback $r4;
        androidx.health.services.client.impl.IMeasureCallback $r5;
        androidx.health.services.client.impl.internal.IStatusCallback $r6;

        $r0 := @parameter0: androidx.health.services.client.impl.request.MeasureUnregistrationRequest;

        $r1 := @parameter1: androidx.health.services.client.impl.MeasureCallbackStub;

        r2 := @parameter2: androidx.health.services.client.impl.IMeasureApiService;

        r3 := @parameter3: com.google.common.util.concurrent.SettableFuture;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$request");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$callbackStub");

        $r5 = (androidx.health.services.client.impl.IMeasureCallback) $r1;

        $r4 = new androidx.health.services.client.impl.internal.StatusCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r3, "resultFuture");

        specialinvoke $r4.<androidx.health.services.client.impl.internal.StatusCallback: void <init>(com.google.common.util.concurrent.SettableFuture)>(r3);

        $r6 = (androidx.health.services.client.impl.internal.IStatusCallback) $r4;

        interfaceinvoke r2.<androidx.health.services.client.impl.IMeasureApiService: void unregisterCallback(androidx.health.services.client.impl.request.MeasureUnregistrationRequest,androidx.health.services.client.impl.IMeasureCallback,androidx.health.services.client.impl.internal.IStatusCallback)>($r0, $r5, $r6);

        return;
    }

    private static final androidx.health.services.client.impl.response.MeasureCapabilitiesResponse getCapabilitiesAsync$lambda$4(androidx.health.services.client.impl.ServiceBackedMeasureClient, androidx.health.services.client.impl.IMeasureApiService)
    {
        androidx.health.services.client.impl.ServiceBackedMeasureClient r0;
        androidx.health.services.client.impl.IMeasureApiService r1;
        androidx.health.services.client.impl.request.CapabilitiesRequest $r2;
        android.content.Context $r3;
        java.lang.String $r4;
        androidx.health.services.client.impl.response.MeasureCapabilitiesResponse $r5;

        r0 := @parameter0: androidx.health.services.client.impl.ServiceBackedMeasureClient;

        r1 := @parameter1: androidx.health.services.client.impl.IMeasureApiService;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        $r2 = new androidx.health.services.client.impl.request.CapabilitiesRequest;

        $r3 = r0.<androidx.health.services.client.impl.ServiceBackedMeasureClient: android.content.Context context>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r4, "context.packageName");

        specialinvoke $r2.<androidx.health.services.client.impl.request.CapabilitiesRequest: void <init>(java.lang.String)>($r4);

        $r5 = interfaceinvoke r1.<androidx.health.services.client.impl.IMeasureApiService: androidx.health.services.client.impl.response.MeasureCapabilitiesResponse getCapabilities(androidx.health.services.client.impl.request.CapabilitiesRequest)>($r2);

        return $r5;
    }

    private static final androidx.health.services.client.data.MeasureCapabilities getCapabilitiesAsync$lambda$5(kotlin.jvm.functions.Function1, java.lang.Object)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object r1, $r2;
        androidx.health.services.client.data.MeasureCapabilities $r3;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$tmp0");

        $r2 = interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        $r3 = (androidx.health.services.client.data.MeasureCapabilities) $r2;

        return $r3;
    }

    public static final androidx.health.services.client.impl.ipc.ClientConfiguration access$getCLIENT_CONFIGURATION$cp()
    {
        androidx.health.services.client.impl.ipc.ClientConfiguration $r0;

        $r0 = <androidx.health.services.client.impl.ServiceBackedMeasureClient: androidx.health.services.client.impl.ipc.ClientConfiguration CLIENT_CONFIGURATION>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.health.services.client.impl.ServiceBackedMeasureClient$Companion $r0;
        androidx.health.services.client.impl.ipc.ClientConfiguration $r1;

        $r0 = new androidx.health.services.client.impl.ServiceBackedMeasureClient$Companion;

        specialinvoke $r0.<androidx.health.services.client.impl.ServiceBackedMeasureClient$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.health.services.client.impl.ServiceBackedMeasureClient: androidx.health.services.client.impl.ServiceBackedMeasureClient$Companion Companion> = $r0;

        $r1 = new androidx.health.services.client.impl.ipc.ClientConfiguration;

        specialinvoke $r1.<androidx.health.services.client.impl.ipc.ClientConfiguration: void <init>(java.lang.String,java.lang.String,java.lang.String)>("HealthServicesMeasureClient", "com.google.android.wearable.healthservices", "hs.measureclient.BIND");

        <androidx.health.services.client.impl.ServiceBackedMeasureClient: androidx.health.services.client.impl.ipc.ClientConfiguration CLIENT_CONFIGURATION> = $r1;

        return;
    }

