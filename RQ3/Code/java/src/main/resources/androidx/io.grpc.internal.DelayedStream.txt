io.grpc.internal.DelayedStream
<io.grpc.internal.DelayedStream: boolean $assertionsDisabled>
<io.grpc.internal.DelayedStream: io.grpc.internal.DelayedStream$DelayedStreamListener delayedListener>
<io.grpc.internal.DelayedStream: io.grpc.Status error>
<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>
<io.grpc.internal.DelayedStream: boolean passThrough>
<io.grpc.internal.DelayedStream: java.util.List pendingCalls>
<io.grpc.internal.DelayedStream: java.util.List preStartPendingCalls>
<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream>
<io.grpc.internal.DelayedStream: long startTimeNanos>
<io.grpc.internal.DelayedStream: long streamSetTimeNanos>
    static void <clinit>()
    {
        <io.grpc.internal.DelayedStream: boolean $assertionsDisabled> = 1;

        return;
    }

    void <init>()
    {
        io.grpc.internal.DelayedStream $r0;
        java.util.ArrayList r1;
        java.util.List r2;

        $r0 := @this: io.grpc.internal.DelayedStream;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) r1;

        $r0.<io.grpc.internal.DelayedStream: java.util.List pendingCalls> = r2;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) r1;

        $r0.<io.grpc.internal.DelayedStream: java.util.List preStartPendingCalls> = r2;

        return;
    }

    static io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)
    {
        io.grpc.internal.DelayedStream $r0;
        io.grpc.internal.ClientStream r1;

        $r0 := @parameter0: io.grpc.internal.DelayedStream;

        r1 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream>;

        return r1;
    }

    static void access$100(io.grpc.internal.DelayedStream)
    {
        io.grpc.internal.DelayedStream $r0;

        $r0 := @parameter0: io.grpc.internal.DelayedStream;

        specialinvoke $r0.<io.grpc.internal.DelayedStream: void drainPendingCalls()>();

        return;
    }

    private void delayOrExecute(java.lang.Runnable)
    {
        io.grpc.internal.DelayedStream $r0;
        java.lang.Runnable $r1;
        io.grpc.internal.ClientStreamListener $r2;
        boolean $z0;
        java.util.List $r3;
        java.lang.Throwable $r4;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 := @parameter0: java.lang.Runnable;

        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "May only be called after start");

        entermonitor $r0;

     label3:
        $z0 = $r0.<io.grpc.internal.DelayedStream: boolean passThrough>;

        if $z0 != 0 goto label5;

        $r3 = $r0.<io.grpc.internal.DelayedStream: java.util.List pendingCalls>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

     label4:
        exitmonitor $r0;

        return;

     label5:
        exitmonitor $r0;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        return;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label3 to label4 with label6;
    }

    private void drainPendingCalls()
    {
        io.grpc.internal.DelayedStream $r0;
        boolean $z0;
        io.grpc.internal.ClientStream $r1;
        java.lang.Object $r2;
        java.util.List $r3, r10;
        io.grpc.internal.DelayedStream$DelayedStreamListener $r4;
        java.util.Iterator $r5;
        java.lang.Runnable $r6;
        java.lang.Throwable $r7;
        java.lang.AssertionError r8;
        java.util.ArrayList r9;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $z0 = <io.grpc.internal.DelayedStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $r1 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream>;

        if $r1 == null goto label01;

        goto label02;

     label01:
        r8 = new java.lang.AssertionError;

        specialinvoke r8.<java.lang.AssertionError: void <init>()>();

        throw r8;

     label02:
        if $z0 != 0 goto label04;

        $z0 = $r0.<io.grpc.internal.DelayedStream: boolean passThrough>;

        if $z0 != 0 goto label03;

        goto label04;

     label03:
        r8 = new java.lang.AssertionError;

        specialinvoke r8.<java.lang.AssertionError: void <init>()>();

        throw r8;

     label04:
        r9 = new java.util.ArrayList;

        $r2 = r9;

        specialinvoke r9.<java.util.ArrayList: void <init>()>();

     label05:
        entermonitor $r0;

     label06:
        $r3 = $r0.<io.grpc.internal.DelayedStream: java.util.List pendingCalls>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label08;

        $r0.<io.grpc.internal.DelayedStream: java.util.List pendingCalls> = null;

        $r0.<io.grpc.internal.DelayedStream: boolean passThrough> = 1;

        $r4 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.DelayedStream$DelayedStreamListener delayedListener>;

     label07:
        exitmonitor $r0;

        if $r4 == null goto label14;

        virtualinvoke $r4.<io.grpc.internal.DelayedStream$DelayedStreamListener: void drainPendingCallbacks()>();

        return;

     label08:
        $r3 = $r0.<io.grpc.internal.DelayedStream: java.util.List pendingCalls>;

        r10 = (java.util.List) $r2;

        $r0.<io.grpc.internal.DelayedStream: java.util.List pendingCalls> = r10;

     label09:
        exitmonitor $r0;

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r2 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Runnable) $r2;

        interfaceinvoke $r6.<java.lang.Runnable: void run()>();

        goto label10;

     label11:
        interfaceinvoke $r3.<java.util.List: void clear()>();

        $r2 = $r3;

        goto label05;

     label12:
        $r7 := @caughtexception;

        exitmonitor $r0;

        goto label13;

     label13:
        throw $r7;

     label14:
        return;

        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
    }

    private void internalStart(io.grpc.internal.ClientStreamListener)
    {
        io.grpc.internal.DelayedStream $r0;
        io.grpc.internal.ClientStreamListener $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Runnable $r5;
        io.grpc.internal.ClientStream $r6;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 := @parameter0: io.grpc.internal.ClientStreamListener;

        $r2 = $r0.<io.grpc.internal.DelayedStream: java.util.List preStartPendingCalls>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Runnable) $r4;

        interfaceinvoke $r5.<java.lang.Runnable: void run()>();

        goto label1;

     label2:
        $r0.<io.grpc.internal.DelayedStream: java.util.List preStartPendingCalls> = null;

        $r6 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream>;

        interfaceinvoke $r6.<io.grpc.internal.ClientStream: void start(io.grpc.internal.ClientStreamListener)>($r1);

        return;
    }

    private void setRealStream(io.grpc.internal.ClientStream)
    {
        io.grpc.internal.DelayedStream $r0;
        io.grpc.internal.ClientStream $r1, $r2;
        long $l0;
        boolean $z0;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 := @parameter0: io.grpc.internal.ClientStream;

        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream>;

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object)>($z0, "realStream already set to %s", $r2);

        $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream> = $r1;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $r0.<io.grpc.internal.DelayedStream: long streamSetTimeNanos> = $l0;

        return;
    }

    public void appendTimeoutInsight(io.grpc.internal.InsightBuilder)
    {
        io.grpc.internal.DelayedStream $r0;
        io.grpc.internal.InsightBuilder $r1;
        io.grpc.internal.ClientStreamListener $r2;
        io.grpc.internal.ClientStream $r3;
        long $l0, $l1;
        java.lang.Long $r4;
        java.lang.Throwable $r5;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 := @parameter0: io.grpc.internal.InsightBuilder;

        entermonitor $r0;

     label1:
        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r2 != null goto label3;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r3 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream>;

        if $r3 == null goto label4;

        $l0 = $r0.<io.grpc.internal.DelayedStream: long streamSetTimeNanos>;

        $l1 = $r0.<io.grpc.internal.DelayedStream: long startTimeNanos>;

        $l0 = $l0 - $l1;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r1.<io.grpc.internal.InsightBuilder: io.grpc.internal.InsightBuilder appendKeyValue(java.lang.String,java.lang.Object)>("buffered_nanos", $r4);

        $r3 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream>;

        interfaceinvoke $r3.<io.grpc.internal.ClientStream: void appendTimeoutInsight(io.grpc.internal.InsightBuilder)>($r1);

        goto label5;

     label4:
        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $l1 = $r0.<io.grpc.internal.DelayedStream: long startTimeNanos>;

        $l0 = $l0 - $l1;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r1.<io.grpc.internal.InsightBuilder: io.grpc.internal.InsightBuilder appendKeyValue(java.lang.String,java.lang.Object)>("buffered_nanos", $r4);

        virtualinvoke $r1.<io.grpc.internal.InsightBuilder: io.grpc.internal.InsightBuilder append(java.lang.Object)>("waiting_for_connection");

     label5:
        exitmonitor $r0;

        return;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void cancel(io.grpc.Status)
    {
        io.grpc.internal.DelayedStream $r0;
        io.grpc.Status $r1;
        io.grpc.internal.ClientStreamListener $r2;
        boolean $z0, $z1;
        io.grpc.internal.ClientStream $r3;
        io.grpc.internal.NoopClientStream $r4;
        io.grpc.internal.DelayedStream$8 $r5;
        io.grpc.internal.ClientStreamListener$RpcProgress $r6;
        io.grpc.Metadata $r7;
        java.lang.Throwable $r8;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 := @parameter0: io.grpc.Status;

        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        $z0 = 1;

        if $r2 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "May only be called after start");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "reason");

        entermonitor $r0;

     label3:
        $r3 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream>;

        if $r3 != null goto label4;

        $r4 = <io.grpc.internal.NoopClientStream: io.grpc.internal.NoopClientStream INSTANCE>;

        specialinvoke $r0.<io.grpc.internal.DelayedStream: void setRealStream(io.grpc.internal.ClientStream)>($r4);

        $r0.<io.grpc.internal.DelayedStream: io.grpc.Status error> = $r1;

        $z0 = 0;

        goto label4;

     label4:
        exitmonitor $r0;

        if $z0 == 0 goto label5;

        $r5 = new io.grpc.internal.DelayedStream$8;

        specialinvoke $r5.<io.grpc.internal.DelayedStream$8: void <init>(io.grpc.internal.DelayedStream,io.grpc.Status)>($r0, $r1);

        specialinvoke $r0.<io.grpc.internal.DelayedStream: void delayOrExecute(java.lang.Runnable)>($r5);

        return;

     label5:
        specialinvoke $r0.<io.grpc.internal.DelayedStream: void drainPendingCalls()>();

        virtualinvoke $r0.<io.grpc.internal.DelayedStream: void onEarlyCancellation(io.grpc.Status)>($r1);

        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        $r6 = <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress PROCESSED>;

        $r7 = new io.grpc.Metadata;

        specialinvoke $r7.<io.grpc.Metadata: void <init>()>();

        interfaceinvoke $r2.<io.grpc.internal.ClientStreamListener: void closed(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)>($r1, $r6, $r7);

        return;

     label6:
        $r8 := @caughtexception;

        exitmonitor $r0;

        goto label7;

     label7:
        throw $r8;

        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public void flush()
    {
        io.grpc.internal.DelayedStream $r0;
        io.grpc.internal.ClientStreamListener $r1;
        boolean $z0;
        io.grpc.internal.ClientStream $r2;
        io.grpc.internal.DelayedStream$7 $r3;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "May only be called after start");

        $z0 = $r0.<io.grpc.internal.DelayedStream: boolean passThrough>;

        if $z0 == 0 goto label3;

        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream>;

        interfaceinvoke $r2.<io.grpc.internal.ClientStream: void flush()>();

        return;

     label3:
        $r3 = new io.grpc.internal.DelayedStream$7;

        specialinvoke $r3.<io.grpc.internal.DelayedStream$7: void <init>(io.grpc.internal.DelayedStream)>($r0);

        specialinvoke $r0.<io.grpc.internal.DelayedStream: void delayOrExecute(java.lang.Runnable)>($r3);

        return;
    }

    public io.grpc.Attributes getAttributes()
    {
        io.grpc.internal.DelayedStream $r0;
        java.lang.NullPointerException r1;

        $r0 := @this: io.grpc.internal.DelayedStream;

        r1 = new java.lang.NullPointerException;

        specialinvoke r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null throw statement replaced by Soot");

        throw r1;
    }

    public void halfClose()
    {
        io.grpc.internal.DelayedStream $r0;
        io.grpc.internal.ClientStreamListener $r1;
        boolean $z0;
        io.grpc.internal.DelayedStream$9 $r2;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "May only be called after start");

        $r2 = new io.grpc.internal.DelayedStream$9;

        specialinvoke $r2.<io.grpc.internal.DelayedStream$9: void <init>(io.grpc.internal.DelayedStream)>($r0);

        specialinvoke $r0.<io.grpc.internal.DelayedStream: void delayOrExecute(java.lang.Runnable)>($r2);

        return;
    }

    public boolean isReady()
    {
        io.grpc.internal.DelayedStream $r0;
        boolean $z0;
        io.grpc.internal.ClientStream $r1;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $z0 = $r0.<io.grpc.internal.DelayedStream: boolean passThrough>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream>;

        $z0 = interfaceinvoke $r1.<io.grpc.internal.ClientStream: boolean isReady()>();

        return $z0;

     label1:
        return 0;
    }

    protected void onEarlyCancellation(io.grpc.Status)
    {
        io.grpc.internal.DelayedStream $r0;
        io.grpc.Status $r1;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 := @parameter0: io.grpc.Status;

        return;
    }

    public void optimizeForDirectExecutor()
    {
        io.grpc.internal.DelayedStream $r0;
        io.grpc.internal.ClientStreamListener $r1;
        boolean $z0;
        java.util.List $r2;
        io.grpc.internal.DelayedStream$11 $r3;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "May only be called before start");

        $r2 = $r0.<io.grpc.internal.DelayedStream: java.util.List preStartPendingCalls>;

        $r3 = new io.grpc.internal.DelayedStream$11;

        specialinvoke $r3.<io.grpc.internal.DelayedStream$11: void <init>(io.grpc.internal.DelayedStream)>($r0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void request(int)
    {
        io.grpc.internal.DelayedStream $r0;
        int $i0;
        io.grpc.internal.ClientStreamListener $r1;
        boolean $z0;
        io.grpc.internal.ClientStream $r2;
        io.grpc.internal.DelayedStream$10 $r3;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $i0 := @parameter0: int;

        $r1 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "May only be called after start");

        $z0 = $r0.<io.grpc.internal.DelayedStream: boolean passThrough>;

        if $z0 == 0 goto label3;

        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream>;

        interfaceinvoke $r2.<io.grpc.internal.ClientStream: void request(int)>($i0);

        return;

     label3:
        $r3 = new io.grpc.internal.DelayedStream$10;

        specialinvoke $r3.<io.grpc.internal.DelayedStream$10: void <init>(io.grpc.internal.DelayedStream,int)>($r0, $i0);

        specialinvoke $r0.<io.grpc.internal.DelayedStream: void delayOrExecute(java.lang.Runnable)>($r3);

        return;
    }

    public void setAuthority(java.lang.String)
    {
        io.grpc.internal.DelayedStream $r0;
        java.lang.String $r1;
        io.grpc.internal.ClientStreamListener $r2;
        boolean $z0;
        java.util.List $r3;
        io.grpc.internal.DelayedStream$5 $r4;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "May only be called before start");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "authority");

        $r3 = $r0.<io.grpc.internal.DelayedStream: java.util.List preStartPendingCalls>;

        $r4 = new io.grpc.internal.DelayedStream$5;

        specialinvoke $r4.<io.grpc.internal.DelayedStream$5: void <init>(io.grpc.internal.DelayedStream,java.lang.String)>($r0, $r1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    public void setCompressor(io.grpc.Compressor)
    {
        io.grpc.internal.DelayedStream $r0;
        io.grpc.Compressor $r1;
        io.grpc.internal.ClientStreamListener $r2;
        boolean $z0;
        java.util.List $r3;
        io.grpc.internal.DelayedStream$12 $r4;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 := @parameter0: io.grpc.Compressor;

        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "May only be called before start");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "compressor");

        $r3 = $r0.<io.grpc.internal.DelayedStream: java.util.List preStartPendingCalls>;

        $r4 = new io.grpc.internal.DelayedStream$12;

        specialinvoke $r4.<io.grpc.internal.DelayedStream$12: void <init>(io.grpc.internal.DelayedStream,io.grpc.Compressor)>($r0, $r1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    public void setDeadline(io.grpc.Deadline)
    {
        io.grpc.internal.DelayedStream $r0;
        io.grpc.Deadline $r1;
        io.grpc.internal.ClientStreamListener $r2;
        boolean $z0;
        java.util.List $r3;
        io.grpc.internal.DelayedStream$3 $r4;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 := @parameter0: io.grpc.Deadline;

        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "May only be called before start");

        $r3 = $r0.<io.grpc.internal.DelayedStream: java.util.List preStartPendingCalls>;

        $r4 = new io.grpc.internal.DelayedStream$3;

        specialinvoke $r4.<io.grpc.internal.DelayedStream$3: void <init>(io.grpc.internal.DelayedStream,io.grpc.Deadline)>($r0, $r1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    public void setDecompressorRegistry(io.grpc.DecompressorRegistry)
    {
        io.grpc.internal.DelayedStream $r0;
        io.grpc.DecompressorRegistry $r1;
        io.grpc.internal.ClientStreamListener $r2;
        boolean $z0;
        java.util.List $r3;
        io.grpc.internal.DelayedStream$14 $r4;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 := @parameter0: io.grpc.DecompressorRegistry;

        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "May only be called before start");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "decompressorRegistry");

        $r3 = $r0.<io.grpc.internal.DelayedStream: java.util.List preStartPendingCalls>;

        $r4 = new io.grpc.internal.DelayedStream$14;

        specialinvoke $r4.<io.grpc.internal.DelayedStream$14: void <init>(io.grpc.internal.DelayedStream,io.grpc.DecompressorRegistry)>($r0, $r1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    public void setFullStreamDecompression(boolean)
    {
        io.grpc.internal.DelayedStream $r0;
        boolean $z0, $z1;
        io.grpc.internal.ClientStreamListener $r1;
        java.util.List $r2;
        io.grpc.internal.DelayedStream$13 $r3;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "May only be called before start");

        $r2 = $r0.<io.grpc.internal.DelayedStream: java.util.List preStartPendingCalls>;

        $r3 = new io.grpc.internal.DelayedStream$13;

        specialinvoke $r3.<io.grpc.internal.DelayedStream$13: void <init>(io.grpc.internal.DelayedStream,boolean)>($r0, $z0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void setMaxInboundMessageSize(int)
    {
        io.grpc.internal.DelayedStream $r0;
        int $i0;
        io.grpc.internal.ClientStreamListener $r1;
        boolean $z0;
        java.util.List $r2;
        io.grpc.internal.DelayedStream$1 $r3;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $i0 := @parameter0: int;

        $r1 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "May only be called before start");

        $r2 = $r0.<io.grpc.internal.DelayedStream: java.util.List preStartPendingCalls>;

        $r3 = new io.grpc.internal.DelayedStream$1;

        specialinvoke $r3.<io.grpc.internal.DelayedStream$1: void <init>(io.grpc.internal.DelayedStream,int)>($r0, $i0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void setMaxOutboundMessageSize(int)
    {
        io.grpc.internal.DelayedStream $r0;
        int $i0;
        io.grpc.internal.ClientStreamListener $r1;
        boolean $z0;
        java.util.List $r2;
        io.grpc.internal.DelayedStream$2 $r3;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $i0 := @parameter0: int;

        $r1 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "May only be called before start");

        $r2 = $r0.<io.grpc.internal.DelayedStream: java.util.List preStartPendingCalls>;

        $r3 = new io.grpc.internal.DelayedStream$2;

        specialinvoke $r3.<io.grpc.internal.DelayedStream$2: void <init>(io.grpc.internal.DelayedStream,int)>($r0, $i0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    final java.lang.Runnable setStream(io.grpc.internal.ClientStream)
    {
        io.grpc.internal.DelayedStream $r0;
        io.grpc.internal.ClientStream $r1, $r2;
        java.lang.Object $r3;
        io.grpc.internal.ClientStreamListener $r4;
        boolean $z0;
        java.util.List $r5;
        java.lang.AssertionError $r6;
        io.grpc.internal.DelayedStream$4 $r7;
        java.lang.Throwable $r8;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 := @parameter0: io.grpc.internal.ClientStream;

        entermonitor $r0;

     label1:
        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream>;

        if $r2 == null goto label3;

     label2:
        exitmonitor $r0;

        return null;

     label3:
        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "stream");

        $r1 = (io.grpc.internal.ClientStream) $r3;

        specialinvoke $r0.<io.grpc.internal.DelayedStream: void setRealStream(io.grpc.internal.ClientStream)>($r1);

        $r4 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r4 != null goto label6;

        $z0 = <io.grpc.internal.DelayedStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $r5 = $r0.<io.grpc.internal.DelayedStream: java.util.List pendingCalls>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        goto label5;

     label4:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label5:
        $r0.<io.grpc.internal.DelayedStream: java.util.List pendingCalls> = null;

        $r0.<io.grpc.internal.DelayedStream: boolean passThrough> = 1;

     label6:
        exitmonitor $r0;

        if $r4 != null goto label7;

        return null;

     label7:
        specialinvoke $r0.<io.grpc.internal.DelayedStream: void internalStart(io.grpc.internal.ClientStreamListener)>($r4);

        $r7 = new io.grpc.internal.DelayedStream$4;

        specialinvoke $r7.<io.grpc.internal.DelayedStream$4: void <init>(io.grpc.internal.DelayedStream)>($r0);

        return $r7;

     label8:
        $r8 := @caughtexception;

        exitmonitor $r0;

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label6 with label8;
    }

    public void start(io.grpc.internal.ClientStreamListener)
    {
        io.grpc.internal.DelayedStream $r0;
        long $l0;
        io.grpc.internal.ClientStreamListener $r1, $r2;
        boolean $z0;
        io.grpc.Status $r3;
        io.grpc.internal.DelayedStream$DelayedStreamListener $r4;
        io.grpc.internal.ClientStreamListener$RpcProgress $r5;
        io.grpc.Metadata $r6;
        java.lang.Throwable $r7;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 := @parameter0: io.grpc.internal.ClientStreamListener;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "listener");

        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "already started");

        entermonitor $r0;

     label3:
        $r3 = $r0.<io.grpc.internal.DelayedStream: io.grpc.Status error>;

        $z0 = $r0.<io.grpc.internal.DelayedStream: boolean passThrough>;

        if $z0 != 0 goto label4;

        $r4 = new io.grpc.internal.DelayedStream$DelayedStreamListener;

        specialinvoke $r4.<io.grpc.internal.DelayedStream$DelayedStreamListener: void <init>(io.grpc.internal.ClientStreamListener)>($r1);

        $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.DelayedStream$DelayedStreamListener delayedListener> = $r4;

        $r1 = $r4;

     label4:
        $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener> = $r1;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $r0.<io.grpc.internal.DelayedStream: long startTimeNanos> = $l0;

     label5:
        exitmonitor $r0;

        if $r3 == null goto label6;

        $r5 = <io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress PROCESSED>;

        $r6 = new io.grpc.Metadata;

        specialinvoke $r6.<io.grpc.Metadata: void <init>()>();

        interfaceinvoke $r1.<io.grpc.internal.ClientStreamListener: void closed(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)>($r3, $r5, $r6);

        return;

     label6:
        if $z0 == 0 goto label8;

        specialinvoke $r0.<io.grpc.internal.DelayedStream: void internalStart(io.grpc.internal.ClientStreamListener)>($r1);

        return;

     label7:
        $r7 := @caughtexception;

        exitmonitor $r0;

        throw $r7;

     label8:
        return;

        catch java.lang.Throwable from label3 to label5 with label7;
    }

    public void writeMessage(java.io.InputStream)
    {
        io.grpc.internal.DelayedStream $r0;
        java.io.InputStream $r1;
        io.grpc.internal.ClientStreamListener $r2;
        boolean $z0;
        io.grpc.internal.ClientStream $r3;
        io.grpc.internal.DelayedStream$6 $r4;

        $r0 := @this: io.grpc.internal.DelayedStream;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStreamListener listener>;

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "May only be called after start");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "message");

        $z0 = $r0.<io.grpc.internal.DelayedStream: boolean passThrough>;

        if $z0 == 0 goto label3;

        $r3 = $r0.<io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream realStream>;

        interfaceinvoke $r3.<io.grpc.internal.ClientStream: void writeMessage(java.io.InputStream)>($r1);

        return;

     label3:
        $r4 = new io.grpc.internal.DelayedStream$6;

        specialinvoke $r4.<io.grpc.internal.DelayedStream$6: void <init>(io.grpc.internal.DelayedStream,java.io.InputStream)>($r0, $r1);

        specialinvoke $r0.<io.grpc.internal.DelayedStream: void delayOrExecute(java.lang.Runnable)>($r4);

        return;
    }

io.grpc.internal.DelayedStream$1
<io.grpc.internal.DelayedStream$1: io.grpc.internal.DelayedStream this$0>
<io.grpc.internal.DelayedStream$1: int val$maxSize>
    void <init>(io.grpc.internal.DelayedStream, int)
    {
        io.grpc.internal.DelayedStream$1 $r0;
        io.grpc.internal.DelayedStream $r1;
        int $i0;

        $r0 := @this: io.grpc.internal.DelayedStream$1;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $i0 := @parameter1: int;

        $r0.<io.grpc.internal.DelayedStream$1: io.grpc.internal.DelayedStream this$0> = $r1;

        $r0.<io.grpc.internal.DelayedStream$1: int val$maxSize> = $i0;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$1 $r0;
        int $i0;
        io.grpc.internal.ClientStream $r1;
        io.grpc.internal.DelayedStream $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$1;

        $r2 = $r0.<io.grpc.internal.DelayedStream$1: io.grpc.internal.DelayedStream this$0>;

        $r1 = staticinvoke <io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)>($r2);

        $i0 = $r0.<io.grpc.internal.DelayedStream$1: int val$maxSize>;

        interfaceinvoke $r1.<io.grpc.internal.ClientStream: void setMaxInboundMessageSize(int)>($i0);

        return;
    }

io.grpc.internal.DelayedStream$10
<io.grpc.internal.DelayedStream$10: io.grpc.internal.DelayedStream this$0>
<io.grpc.internal.DelayedStream$10: int val$numMessages>
    void <init>(io.grpc.internal.DelayedStream, int)
    {
        io.grpc.internal.DelayedStream$10 $r0;
        io.grpc.internal.DelayedStream $r1;
        int $i0;

        $r0 := @this: io.grpc.internal.DelayedStream$10;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $i0 := @parameter1: int;

        $r0.<io.grpc.internal.DelayedStream$10: io.grpc.internal.DelayedStream this$0> = $r1;

        $r0.<io.grpc.internal.DelayedStream$10: int val$numMessages> = $i0;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$10 $r0;
        int $i0;
        io.grpc.internal.ClientStream $r1;
        io.grpc.internal.DelayedStream $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$10;

        $r2 = $r0.<io.grpc.internal.DelayedStream$10: io.grpc.internal.DelayedStream this$0>;

        $r1 = staticinvoke <io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)>($r2);

        $i0 = $r0.<io.grpc.internal.DelayedStream$10: int val$numMessages>;

        interfaceinvoke $r1.<io.grpc.internal.ClientStream: void request(int)>($i0);

        return;
    }

io.grpc.internal.DelayedStream$11
<io.grpc.internal.DelayedStream$11: io.grpc.internal.DelayedStream this$0>
    void <init>(io.grpc.internal.DelayedStream)
    {
        io.grpc.internal.DelayedStream$11 $r0;
        io.grpc.internal.DelayedStream $r1;

        $r0 := @this: io.grpc.internal.DelayedStream$11;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $r0.<io.grpc.internal.DelayedStream$11: io.grpc.internal.DelayedStream this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$11 $r0;
        io.grpc.internal.ClientStream $r1;
        io.grpc.internal.DelayedStream $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$11;

        $r2 = $r0.<io.grpc.internal.DelayedStream$11: io.grpc.internal.DelayedStream this$0>;

        $r1 = staticinvoke <io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)>($r2);

        interfaceinvoke $r1.<io.grpc.internal.ClientStream: void optimizeForDirectExecutor()>();

        return;
    }

io.grpc.internal.DelayedStream$12
<io.grpc.internal.DelayedStream$12: io.grpc.internal.DelayedStream this$0>
<io.grpc.internal.DelayedStream$12: io.grpc.Compressor val$compressor>
    void <init>(io.grpc.internal.DelayedStream, io.grpc.Compressor)
    {
        io.grpc.internal.DelayedStream$12 $r0;
        io.grpc.internal.DelayedStream $r1;
        io.grpc.Compressor $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$12;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $r2 := @parameter1: io.grpc.Compressor;

        $r0.<io.grpc.internal.DelayedStream$12: io.grpc.internal.DelayedStream this$0> = $r1;

        $r0.<io.grpc.internal.DelayedStream$12: io.grpc.Compressor val$compressor> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$12 $r0;
        io.grpc.Compressor $r1;
        io.grpc.internal.ClientStream $r2;
        io.grpc.internal.DelayedStream $r3;

        $r0 := @this: io.grpc.internal.DelayedStream$12;

        $r3 = $r0.<io.grpc.internal.DelayedStream$12: io.grpc.internal.DelayedStream this$0>;

        $r2 = staticinvoke <io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)>($r3);

        $r1 = $r0.<io.grpc.internal.DelayedStream$12: io.grpc.Compressor val$compressor>;

        interfaceinvoke $r2.<io.grpc.internal.ClientStream: void setCompressor(io.grpc.Compressor)>($r1);

        return;
    }

io.grpc.internal.DelayedStream$13
<io.grpc.internal.DelayedStream$13: io.grpc.internal.DelayedStream this$0>
<io.grpc.internal.DelayedStream$13: boolean val$fullStreamDecompression>
    void <init>(io.grpc.internal.DelayedStream, boolean)
    {
        io.grpc.internal.DelayedStream$13 $r0;
        io.grpc.internal.DelayedStream $r1;
        boolean $z0;

        $r0 := @this: io.grpc.internal.DelayedStream$13;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $z0 := @parameter1: boolean;

        $r0.<io.grpc.internal.DelayedStream$13: io.grpc.internal.DelayedStream this$0> = $r1;

        $r0.<io.grpc.internal.DelayedStream$13: boolean val$fullStreamDecompression> = $z0;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$13 $r0;
        boolean $z0;
        io.grpc.internal.ClientStream $r1;
        io.grpc.internal.DelayedStream $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$13;

        $r2 = $r0.<io.grpc.internal.DelayedStream$13: io.grpc.internal.DelayedStream this$0>;

        $r1 = staticinvoke <io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)>($r2);

        $z0 = $r0.<io.grpc.internal.DelayedStream$13: boolean val$fullStreamDecompression>;

        interfaceinvoke $r1.<io.grpc.internal.ClientStream: void setFullStreamDecompression(boolean)>($z0);

        return;
    }

io.grpc.internal.DelayedStream$14
<io.grpc.internal.DelayedStream$14: io.grpc.internal.DelayedStream this$0>
<io.grpc.internal.DelayedStream$14: io.grpc.DecompressorRegistry val$decompressorRegistry>
    void <init>(io.grpc.internal.DelayedStream, io.grpc.DecompressorRegistry)
    {
        io.grpc.internal.DelayedStream$14 $r0;
        io.grpc.internal.DelayedStream $r1;
        io.grpc.DecompressorRegistry $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$14;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $r2 := @parameter1: io.grpc.DecompressorRegistry;

        $r0.<io.grpc.internal.DelayedStream$14: io.grpc.internal.DelayedStream this$0> = $r1;

        $r0.<io.grpc.internal.DelayedStream$14: io.grpc.DecompressorRegistry val$decompressorRegistry> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$14 $r0;
        io.grpc.DecompressorRegistry $r1;
        io.grpc.internal.ClientStream $r2;
        io.grpc.internal.DelayedStream $r3;

        $r0 := @this: io.grpc.internal.DelayedStream$14;

        $r3 = $r0.<io.grpc.internal.DelayedStream$14: io.grpc.internal.DelayedStream this$0>;

        $r2 = staticinvoke <io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)>($r3);

        $r1 = $r0.<io.grpc.internal.DelayedStream$14: io.grpc.DecompressorRegistry val$decompressorRegistry>;

        interfaceinvoke $r2.<io.grpc.internal.ClientStream: void setDecompressorRegistry(io.grpc.DecompressorRegistry)>($r1);

        return;
    }

io.grpc.internal.DelayedStream$2
<io.grpc.internal.DelayedStream$2: io.grpc.internal.DelayedStream this$0>
<io.grpc.internal.DelayedStream$2: int val$maxSize>
    void <init>(io.grpc.internal.DelayedStream, int)
    {
        io.grpc.internal.DelayedStream$2 $r0;
        io.grpc.internal.DelayedStream $r1;
        int $i0;

        $r0 := @this: io.grpc.internal.DelayedStream$2;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $i0 := @parameter1: int;

        $r0.<io.grpc.internal.DelayedStream$2: io.grpc.internal.DelayedStream this$0> = $r1;

        $r0.<io.grpc.internal.DelayedStream$2: int val$maxSize> = $i0;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$2 $r0;
        int $i0;
        io.grpc.internal.ClientStream $r1;
        io.grpc.internal.DelayedStream $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$2;

        $r2 = $r0.<io.grpc.internal.DelayedStream$2: io.grpc.internal.DelayedStream this$0>;

        $r1 = staticinvoke <io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)>($r2);

        $i0 = $r0.<io.grpc.internal.DelayedStream$2: int val$maxSize>;

        interfaceinvoke $r1.<io.grpc.internal.ClientStream: void setMaxOutboundMessageSize(int)>($i0);

        return;
    }

io.grpc.internal.DelayedStream$3
<io.grpc.internal.DelayedStream$3: io.grpc.internal.DelayedStream this$0>
<io.grpc.internal.DelayedStream$3: io.grpc.Deadline val$deadline>
    void <init>(io.grpc.internal.DelayedStream, io.grpc.Deadline)
    {
        io.grpc.internal.DelayedStream$3 $r0;
        io.grpc.internal.DelayedStream $r1;
        io.grpc.Deadline $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$3;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $r2 := @parameter1: io.grpc.Deadline;

        $r0.<io.grpc.internal.DelayedStream$3: io.grpc.internal.DelayedStream this$0> = $r1;

        $r0.<io.grpc.internal.DelayedStream$3: io.grpc.Deadline val$deadline> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$3 $r0;
        io.grpc.Deadline $r1;
        io.grpc.internal.ClientStream $r2;
        io.grpc.internal.DelayedStream $r3;

        $r0 := @this: io.grpc.internal.DelayedStream$3;

        $r3 = $r0.<io.grpc.internal.DelayedStream$3: io.grpc.internal.DelayedStream this$0>;

        $r2 = staticinvoke <io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)>($r3);

        $r1 = $r0.<io.grpc.internal.DelayedStream$3: io.grpc.Deadline val$deadline>;

        interfaceinvoke $r2.<io.grpc.internal.ClientStream: void setDeadline(io.grpc.Deadline)>($r1);

        return;
    }

io.grpc.internal.DelayedStream$4
<io.grpc.internal.DelayedStream$4: io.grpc.internal.DelayedStream this$0>
    void <init>(io.grpc.internal.DelayedStream)
    {
        io.grpc.internal.DelayedStream$4 $r0;
        io.grpc.internal.DelayedStream $r1;

        $r0 := @this: io.grpc.internal.DelayedStream$4;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $r0.<io.grpc.internal.DelayedStream$4: io.grpc.internal.DelayedStream this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$4 $r0;
        io.grpc.internal.DelayedStream $r1;

        $r0 := @this: io.grpc.internal.DelayedStream$4;

        $r1 = $r0.<io.grpc.internal.DelayedStream$4: io.grpc.internal.DelayedStream this$0>;

        staticinvoke <io.grpc.internal.DelayedStream: void access$100(io.grpc.internal.DelayedStream)>($r1);

        return;
    }

io.grpc.internal.DelayedStream$5
<io.grpc.internal.DelayedStream$5: io.grpc.internal.DelayedStream this$0>
<io.grpc.internal.DelayedStream$5: java.lang.String val$authority>
    void <init>(io.grpc.internal.DelayedStream, java.lang.String)
    {
        io.grpc.internal.DelayedStream$5 $r0;
        io.grpc.internal.DelayedStream $r1;
        java.lang.String $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$5;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $r2 := @parameter1: java.lang.String;

        $r0.<io.grpc.internal.DelayedStream$5: io.grpc.internal.DelayedStream this$0> = $r1;

        $r0.<io.grpc.internal.DelayedStream$5: java.lang.String val$authority> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$5 $r0;
        java.lang.String $r1;
        io.grpc.internal.ClientStream $r2;
        io.grpc.internal.DelayedStream $r3;

        $r0 := @this: io.grpc.internal.DelayedStream$5;

        $r3 = $r0.<io.grpc.internal.DelayedStream$5: io.grpc.internal.DelayedStream this$0>;

        $r2 = staticinvoke <io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)>($r3);

        $r1 = $r0.<io.grpc.internal.DelayedStream$5: java.lang.String val$authority>;

        interfaceinvoke $r2.<io.grpc.internal.ClientStream: void setAuthority(java.lang.String)>($r1);

        return;
    }

io.grpc.internal.DelayedStream$6
<io.grpc.internal.DelayedStream$6: io.grpc.internal.DelayedStream this$0>
<io.grpc.internal.DelayedStream$6: java.io.InputStream val$message>
    void <init>(io.grpc.internal.DelayedStream, java.io.InputStream)
    {
        io.grpc.internal.DelayedStream$6 $r0;
        io.grpc.internal.DelayedStream $r1;
        java.io.InputStream $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$6;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $r2 := @parameter1: java.io.InputStream;

        $r0.<io.grpc.internal.DelayedStream$6: io.grpc.internal.DelayedStream this$0> = $r1;

        $r0.<io.grpc.internal.DelayedStream$6: java.io.InputStream val$message> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$6 $r0;
        java.io.InputStream $r1;
        io.grpc.internal.ClientStream $r2;
        io.grpc.internal.DelayedStream $r3;

        $r0 := @this: io.grpc.internal.DelayedStream$6;

        $r3 = $r0.<io.grpc.internal.DelayedStream$6: io.grpc.internal.DelayedStream this$0>;

        $r2 = staticinvoke <io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)>($r3);

        $r1 = $r0.<io.grpc.internal.DelayedStream$6: java.io.InputStream val$message>;

        interfaceinvoke $r2.<io.grpc.internal.ClientStream: void writeMessage(java.io.InputStream)>($r1);

        return;
    }

io.grpc.internal.DelayedStream$7
<io.grpc.internal.DelayedStream$7: io.grpc.internal.DelayedStream this$0>
    void <init>(io.grpc.internal.DelayedStream)
    {
        io.grpc.internal.DelayedStream$7 $r0;
        io.grpc.internal.DelayedStream $r1;

        $r0 := @this: io.grpc.internal.DelayedStream$7;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $r0.<io.grpc.internal.DelayedStream$7: io.grpc.internal.DelayedStream this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$7 $r0;
        io.grpc.internal.ClientStream $r1;
        io.grpc.internal.DelayedStream $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$7;

        $r2 = $r0.<io.grpc.internal.DelayedStream$7: io.grpc.internal.DelayedStream this$0>;

        $r1 = staticinvoke <io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)>($r2);

        interfaceinvoke $r1.<io.grpc.internal.ClientStream: void flush()>();

        return;
    }

io.grpc.internal.DelayedStream$8
<io.grpc.internal.DelayedStream$8: io.grpc.internal.DelayedStream this$0>
<io.grpc.internal.DelayedStream$8: io.grpc.Status val$reason>
    void <init>(io.grpc.internal.DelayedStream, io.grpc.Status)
    {
        io.grpc.internal.DelayedStream$8 $r0;
        io.grpc.internal.DelayedStream $r1;
        io.grpc.Status $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$8;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $r2 := @parameter1: io.grpc.Status;

        $r0.<io.grpc.internal.DelayedStream$8: io.grpc.internal.DelayedStream this$0> = $r1;

        $r0.<io.grpc.internal.DelayedStream$8: io.grpc.Status val$reason> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$8 $r0;
        io.grpc.Status $r1;
        io.grpc.internal.ClientStream $r2;
        io.grpc.internal.DelayedStream $r3;

        $r0 := @this: io.grpc.internal.DelayedStream$8;

        $r3 = $r0.<io.grpc.internal.DelayedStream$8: io.grpc.internal.DelayedStream this$0>;

        $r2 = staticinvoke <io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)>($r3);

        $r1 = $r0.<io.grpc.internal.DelayedStream$8: io.grpc.Status val$reason>;

        interfaceinvoke $r2.<io.grpc.internal.ClientStream: void cancel(io.grpc.Status)>($r1);

        return;
    }

io.grpc.internal.DelayedStream$9
<io.grpc.internal.DelayedStream$9: io.grpc.internal.DelayedStream this$0>
    void <init>(io.grpc.internal.DelayedStream)
    {
        io.grpc.internal.DelayedStream$9 $r0;
        io.grpc.internal.DelayedStream $r1;

        $r0 := @this: io.grpc.internal.DelayedStream$9;

        $r1 := @parameter0: io.grpc.internal.DelayedStream;

        $r0.<io.grpc.internal.DelayedStream$9: io.grpc.internal.DelayedStream this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$9 $r0;
        io.grpc.internal.ClientStream $r1;
        io.grpc.internal.DelayedStream $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$9;

        $r2 = $r0.<io.grpc.internal.DelayedStream$9: io.grpc.internal.DelayedStream this$0>;

        $r1 = staticinvoke <io.grpc.internal.DelayedStream: io.grpc.internal.ClientStream access$000(io.grpc.internal.DelayedStream)>($r2);

        interfaceinvoke $r1.<io.grpc.internal.ClientStream: void halfClose()>();

        return;
    }

io.grpc.internal.DelayedStream$DelayedStreamListener$1
<io.grpc.internal.DelayedStream$DelayedStreamListener$1: io.grpc.internal.DelayedStream$DelayedStreamListener this$0>
<io.grpc.internal.DelayedStream$DelayedStreamListener$1: io.grpc.internal.StreamListener$MessageProducer val$producer>
    void <init>(io.grpc.internal.DelayedStream$DelayedStreamListener, io.grpc.internal.StreamListener$MessageProducer)
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener$1 $r0;
        io.grpc.internal.DelayedStream$DelayedStreamListener $r1;
        io.grpc.internal.StreamListener$MessageProducer $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener$1;

        $r1 := @parameter0: io.grpc.internal.DelayedStream$DelayedStreamListener;

        $r2 := @parameter1: io.grpc.internal.StreamListener$MessageProducer;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$1: io.grpc.internal.DelayedStream$DelayedStreamListener this$0> = $r1;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$1: io.grpc.internal.StreamListener$MessageProducer val$producer> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener$1 $r0;
        io.grpc.internal.StreamListener$MessageProducer $r1;
        io.grpc.internal.ClientStreamListener $r2;
        io.grpc.internal.DelayedStream$DelayedStreamListener $r3;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener$1;

        $r3 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$1: io.grpc.internal.DelayedStream$DelayedStreamListener this$0>;

        $r2 = staticinvoke <io.grpc.internal.DelayedStream$DelayedStreamListener: io.grpc.internal.ClientStreamListener access$200(io.grpc.internal.DelayedStream$DelayedStreamListener)>($r3);

        $r1 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$1: io.grpc.internal.StreamListener$MessageProducer val$producer>;

        interfaceinvoke $r2.<io.grpc.internal.ClientStreamListener: void messagesAvailable(io.grpc.internal.StreamListener$MessageProducer)>($r1);

        return;
    }

io.grpc.internal.DelayedStream$DelayedStreamListener$2
<io.grpc.internal.DelayedStream$DelayedStreamListener$2: io.grpc.internal.DelayedStream$DelayedStreamListener this$0>
    void <init>(io.grpc.internal.DelayedStream$DelayedStreamListener)
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener$2 $r0;
        io.grpc.internal.DelayedStream$DelayedStreamListener $r1;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener$2;

        $r1 := @parameter0: io.grpc.internal.DelayedStream$DelayedStreamListener;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$2: io.grpc.internal.DelayedStream$DelayedStreamListener this$0> = $r1;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener$2 $r0;
        io.grpc.internal.ClientStreamListener $r1;
        io.grpc.internal.DelayedStream$DelayedStreamListener $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener$2;

        $r2 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$2: io.grpc.internal.DelayedStream$DelayedStreamListener this$0>;

        $r1 = staticinvoke <io.grpc.internal.DelayedStream$DelayedStreamListener: io.grpc.internal.ClientStreamListener access$200(io.grpc.internal.DelayedStream$DelayedStreamListener)>($r2);

        interfaceinvoke $r1.<io.grpc.internal.ClientStreamListener: void onReady()>();

        return;
    }

io.grpc.internal.DelayedStream$DelayedStreamListener$3
<io.grpc.internal.DelayedStream$DelayedStreamListener$3: io.grpc.internal.DelayedStream$DelayedStreamListener this$0>
<io.grpc.internal.DelayedStream$DelayedStreamListener$3: io.grpc.Metadata val$headers>
    void <init>(io.grpc.internal.DelayedStream$DelayedStreamListener, io.grpc.Metadata)
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener$3 $r0;
        io.grpc.internal.DelayedStream$DelayedStreamListener $r1;
        io.grpc.Metadata $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener$3;

        $r1 := @parameter0: io.grpc.internal.DelayedStream$DelayedStreamListener;

        $r2 := @parameter1: io.grpc.Metadata;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$3: io.grpc.internal.DelayedStream$DelayedStreamListener this$0> = $r1;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$3: io.grpc.Metadata val$headers> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener$3 $r0;
        io.grpc.Metadata $r1;
        io.grpc.internal.ClientStreamListener $r2;
        io.grpc.internal.DelayedStream$DelayedStreamListener $r3;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener$3;

        $r3 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$3: io.grpc.internal.DelayedStream$DelayedStreamListener this$0>;

        $r2 = staticinvoke <io.grpc.internal.DelayedStream$DelayedStreamListener: io.grpc.internal.ClientStreamListener access$200(io.grpc.internal.DelayedStream$DelayedStreamListener)>($r3);

        $r1 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$3: io.grpc.Metadata val$headers>;

        interfaceinvoke $r2.<io.grpc.internal.ClientStreamListener: void headersRead(io.grpc.Metadata)>($r1);

        return;
    }

io.grpc.internal.DelayedStream$DelayedStreamListener$4
<io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.internal.DelayedStream$DelayedStreamListener this$0>
<io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.internal.ClientStreamListener$RpcProgress val$rpcProgress>
<io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.Status val$status>
<io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.Metadata val$trailers>
    void <init>(io.grpc.internal.DelayedStream$DelayedStreamListener, io.grpc.Status, io.grpc.internal.ClientStreamListener$RpcProgress, io.grpc.Metadata)
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener$4 $r0;
        io.grpc.internal.DelayedStream$DelayedStreamListener $r1;
        io.grpc.Status $r2;
        io.grpc.internal.ClientStreamListener$RpcProgress $r3;
        io.grpc.Metadata $r4;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener$4;

        $r1 := @parameter0: io.grpc.internal.DelayedStream$DelayedStreamListener;

        $r2 := @parameter1: io.grpc.Status;

        $r3 := @parameter2: io.grpc.internal.ClientStreamListener$RpcProgress;

        $r4 := @parameter3: io.grpc.Metadata;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.internal.DelayedStream$DelayedStreamListener this$0> = $r1;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.Status val$status> = $r2;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.internal.ClientStreamListener$RpcProgress val$rpcProgress> = $r3;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.Metadata val$trailers> = $r4;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener$4 $r0;
        io.grpc.Status $r1;
        io.grpc.internal.ClientStreamListener$RpcProgress $r2;
        io.grpc.Metadata $r3;
        io.grpc.internal.ClientStreamListener $r4;
        io.grpc.internal.DelayedStream$DelayedStreamListener $r5;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener$4;

        $r5 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.internal.DelayedStream$DelayedStreamListener this$0>;

        $r4 = staticinvoke <io.grpc.internal.DelayedStream$DelayedStreamListener: io.grpc.internal.ClientStreamListener access$200(io.grpc.internal.DelayedStream$DelayedStreamListener)>($r5);

        $r1 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.Status val$status>;

        $r2 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.internal.ClientStreamListener$RpcProgress val$rpcProgress>;

        $r3 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener$4: io.grpc.Metadata val$trailers>;

        interfaceinvoke $r4.<io.grpc.internal.ClientStreamListener: void closed(io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)>($r1, $r2, $r3);

        return;
    }

io.grpc.internal.DelayedStream$DelayedStreamListener
<io.grpc.internal.DelayedStream$DelayedStreamListener: boolean $assertionsDisabled>
<io.grpc.internal.DelayedStream$DelayedStreamListener: boolean passThrough>
<io.grpc.internal.DelayedStream$DelayedStreamListener: java.util.List pendingCallbacks>
<io.grpc.internal.DelayedStream$DelayedStreamListener: io.grpc.internal.ClientStreamListener realListener>
    static void <clinit>()
    {
        <io.grpc.internal.DelayedStream$DelayedStreamListener: boolean $assertionsDisabled> = 1;

        return;
    }

    public void <init>(io.grpc.internal.ClientStreamListener)
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener $r0;
        io.grpc.internal.ClientStreamListener $r1;
        java.util.ArrayList r2;
        java.util.List r3;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener;

        $r1 := @parameter0: io.grpc.internal.ClientStreamListener;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = (java.util.List) r2;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: java.util.List pendingCallbacks> = r3;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: io.grpc.internal.ClientStreamListener realListener> = $r1;

        return;
    }

    static io.grpc.internal.ClientStreamListener access$200(io.grpc.internal.DelayedStream$DelayedStreamListener)
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener $r0;
        io.grpc.internal.ClientStreamListener r1;

        $r0 := @parameter0: io.grpc.internal.DelayedStream$DelayedStreamListener;

        r1 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: io.grpc.internal.ClientStreamListener realListener>;

        return r1;
    }

    private void delayOrExecute(java.lang.Runnable)
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener $r0;
        java.lang.Runnable $r1;
        boolean $z0;
        java.util.List $r2;
        java.lang.Throwable $r3;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener;

        $r1 := @parameter0: java.lang.Runnable;

        entermonitor $r0;

     label1:
        $z0 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: boolean passThrough>;

        if $z0 != 0 goto label3;

        $r2 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: java.util.List pendingCallbacks>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        exitmonitor $r0;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void closed(io.grpc.Status, io.grpc.internal.ClientStreamListener$RpcProgress, io.grpc.Metadata)
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener $r0;
        io.grpc.Status $r1;
        io.grpc.internal.ClientStreamListener$RpcProgress $r2;
        io.grpc.Metadata $r3;
        io.grpc.internal.DelayedStream$DelayedStreamListener$4 $r4;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener;

        $r1 := @parameter0: io.grpc.Status;

        $r2 := @parameter1: io.grpc.internal.ClientStreamListener$RpcProgress;

        $r3 := @parameter2: io.grpc.Metadata;

        $r4 = new io.grpc.internal.DelayedStream$DelayedStreamListener$4;

        specialinvoke $r4.<io.grpc.internal.DelayedStream$DelayedStreamListener$4: void <init>(io.grpc.internal.DelayedStream$DelayedStreamListener,io.grpc.Status,io.grpc.internal.ClientStreamListener$RpcProgress,io.grpc.Metadata)>($r0, $r1, $r2, $r3);

        specialinvoke $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: void delayOrExecute(java.lang.Runnable)>($r4);

        return;
    }

    public void drainPendingCallbacks()
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener $r0;
        boolean $z0;
        java.lang.Object $r1;
        java.util.List $r2, r8;
        java.util.Iterator $r3;
        java.lang.Runnable $r4;
        java.lang.Throwable $r5;
        java.lang.AssertionError r6;
        java.util.ArrayList r7;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener;

        $z0 = <io.grpc.internal.DelayedStream$DelayedStreamListener: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $z0 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: boolean passThrough>;

        if $z0 != 0 goto label01;

        goto label02;

     label01:
        r6 = new java.lang.AssertionError;

        specialinvoke r6.<java.lang.AssertionError: void <init>()>();

        throw r6;

     label02:
        r7 = new java.util.ArrayList;

        $r1 = r7;

        specialinvoke r7.<java.util.ArrayList: void <init>()>();

     label03:
        entermonitor $r0;

     label04:
        $r2 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: java.util.List pendingCallbacks>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label06;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: java.util.List pendingCallbacks> = null;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: boolean passThrough> = 1;

     label05:
        exitmonitor $r0;

        return;

     label06:
        $r2 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: java.util.List pendingCallbacks>;

        r8 = (java.util.List) $r1;

        $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: java.util.List pendingCallbacks> = r8;

     label07:
        exitmonitor $r0;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r1 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Runnable) $r1;

        interfaceinvoke $r4.<java.lang.Runnable: void run()>();

        goto label08;

     label09:
        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r1 = $r2;

        goto label03;

     label10:
        $r5 := @caughtexception;

        exitmonitor $r0;

        goto label11;

     label11:
        throw $r5;

        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
    }

    public void headersRead(io.grpc.Metadata)
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener $r0;
        io.grpc.Metadata $r1;
        io.grpc.internal.DelayedStream$DelayedStreamListener$3 $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener;

        $r1 := @parameter0: io.grpc.Metadata;

        $r2 = new io.grpc.internal.DelayedStream$DelayedStreamListener$3;

        specialinvoke $r2.<io.grpc.internal.DelayedStream$DelayedStreamListener$3: void <init>(io.grpc.internal.DelayedStream$DelayedStreamListener,io.grpc.Metadata)>($r0, $r1);

        specialinvoke $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: void delayOrExecute(java.lang.Runnable)>($r2);

        return;
    }

    public void messagesAvailable(io.grpc.internal.StreamListener$MessageProducer)
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener $r0;
        io.grpc.internal.StreamListener$MessageProducer $r1;
        boolean $z0;
        io.grpc.internal.ClientStreamListener $r2;
        io.grpc.internal.DelayedStream$DelayedStreamListener$1 $r3;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener;

        $r1 := @parameter0: io.grpc.internal.StreamListener$MessageProducer;

        $z0 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: boolean passThrough>;

        if $z0 == 0 goto label1;

        $r2 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: io.grpc.internal.ClientStreamListener realListener>;

        interfaceinvoke $r2.<io.grpc.internal.ClientStreamListener: void messagesAvailable(io.grpc.internal.StreamListener$MessageProducer)>($r1);

        return;

     label1:
        $r3 = new io.grpc.internal.DelayedStream$DelayedStreamListener$1;

        specialinvoke $r3.<io.grpc.internal.DelayedStream$DelayedStreamListener$1: void <init>(io.grpc.internal.DelayedStream$DelayedStreamListener,io.grpc.internal.StreamListener$MessageProducer)>($r0, $r1);

        specialinvoke $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: void delayOrExecute(java.lang.Runnable)>($r3);

        return;
    }

    public void onReady()
    {
        io.grpc.internal.DelayedStream$DelayedStreamListener $r0;
        boolean $z0;
        io.grpc.internal.ClientStreamListener $r1;
        io.grpc.internal.DelayedStream$DelayedStreamListener$2 $r2;

        $r0 := @this: io.grpc.internal.DelayedStream$DelayedStreamListener;

        $z0 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: boolean passThrough>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: io.grpc.internal.ClientStreamListener realListener>;

        interfaceinvoke $r1.<io.grpc.internal.ClientStreamListener: void onReady()>();

        return;

     label1:
        $r2 = new io.grpc.internal.DelayedStream$DelayedStreamListener$2;

        specialinvoke $r2.<io.grpc.internal.DelayedStream$DelayedStreamListener$2: void <init>(io.grpc.internal.DelayedStream$DelayedStreamListener)>($r0);

        specialinvoke $r0.<io.grpc.internal.DelayedStream$DelayedStreamListener: void delayOrExecute(java.lang.Runnable)>($r2);

        return;
    }

