androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest
<androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest: java.lang.String mWorkerClassName>
<androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters mParcelableWorkerParameters>
<androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest: android.os.Parcelable$Creator CREATOR>
    public void <init>(java.lang.String, androidx.work.WorkerParameters)
    {
        androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest r0;
        java.lang.String r1;
        androidx.work.WorkerParameters r2;
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters $r3;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: androidx.work.WorkerParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest: java.lang.String mWorkerClassName> = r1;

        $r3 = new androidx.work.multiprocess.parcelable.ParcelableWorkerParameters;

        specialinvoke $r3.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: void <init>(androidx.work.WorkerParameters)>(r2);

        r0.<androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters mParcelableWorkerParameters> = $r3;

        return;
    }

    protected void <init>(android.os.Parcel)
    {
        androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest r0;
        android.os.Parcel r1;
        java.lang.String $r2;
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters $r3;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest: java.lang.String mWorkerClassName> = $r2;

        $r3 = new androidx.work.multiprocess.parcelable.ParcelableWorkerParameters;

        specialinvoke $r3.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: void <init>(android.os.Parcel)>(r1);

        r0.<androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters mParcelableWorkerParameters> = $r3;

        return;
    }

    public int describeContents()
    {
        androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest r0;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest r0;
        android.os.Parcel r1;
        int i0;
        java.lang.String $r2;
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters $r3;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest: java.lang.String mWorkerClassName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters mParcelableWorkerParameters>;

        virtualinvoke $r3.<androidx.work.multiprocess.parcelable.ParcelableWorkerParameters: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        return;
    }

    public java.lang.String getWorkerClassName()
    {
        androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest r0;
        java.lang.String $r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest;

        $r1 = r0.<androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest: java.lang.String mWorkerClassName>;

        return $r1;
    }

    public androidx.work.multiprocess.parcelable.ParcelableWorkerParameters getParcelableWorkerParameters()
    {
        androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest r0;
        androidx.work.multiprocess.parcelable.ParcelableWorkerParameters $r1;

        r0 := @this: androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest;

        $r1 = r0.<androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest: androidx.work.multiprocess.parcelable.ParcelableWorkerParameters mParcelableWorkerParameters>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest$1 $r0;

        $r0 = new androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest$1;

        specialinvoke $r0.<androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest$1: void <init>()>();

        <androidx.work.multiprocess.parcelable.ParcelableRemoteWorkRequest: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

