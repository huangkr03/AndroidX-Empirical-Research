androidx.media3.session.MediaSessionStub
<androidx.media3.session.MediaSessionStub: java.lang.String TAG>
<androidx.media3.session.MediaSessionStub: int VERSION_INT>
<androidx.media3.session.MediaSessionStub: java.lang.ref.WeakReference sessionImpl>
<androidx.media3.session.MediaSessionStub: androidx.media.MediaSessionManager sessionManager>
<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>
<androidx.media3.session.MediaSessionStub: java.util.Set pendingControllers>
    public void <init>(androidx.media3.session.MediaSessionImpl)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.MediaSessionImpl r1;
        java.lang.ref.WeakReference $r2;
        android.content.Context $r3;
        androidx.media.MediaSessionManager $r4;
        androidx.media3.session.ConnectedControllersManager $r5;
        java.util.HashSet $r6;
        java.util.Set $r7;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.MediaSessionImpl;

        specialinvoke r0.<androidx.media3.session.IMediaSession$Stub: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<androidx.media3.session.MediaSessionStub: java.lang.ref.WeakReference sessionImpl> = $r2;

        $r3 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: android.content.Context getContext()>();

        $r4 = staticinvoke <androidx.media.MediaSessionManager: androidx.media.MediaSessionManager getSessionManager(android.content.Context)>($r3);

        r0.<androidx.media3.session.MediaSessionStub: androidx.media.MediaSessionManager sessionManager> = $r4;

        $r5 = new androidx.media3.session.ConnectedControllersManager;

        specialinvoke $r5.<androidx.media3.session.ConnectedControllersManager: void <init>(androidx.media3.session.MediaSessionImpl)>(r1);

        r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager> = $r5;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        $r7 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r6);

        r0.<androidx.media3.session.MediaSessionStub: java.util.Set pendingControllers> = $r7;

        return;
    }

    public androidx.media3.session.ConnectedControllersManager getConnectedControllersManager()
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.ConnectedControllersManager $r1;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        $r1 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        return $r1;
    }

    private static void sendSessionResult(androidx.media3.session.MediaSession$ControllerInfo, int, androidx.media3.session.SessionResult)
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        int i0;
        androidx.media3.session.SessionResult r1;
        java.lang.Throwable r2, $r6;
        androidx.media3.session.MediaSession$ControllerCb $r3, $r5;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.media3.session.SessionResult;

     label1:
        $r3 = virtualinvoke r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb getControllerCb()>();

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r3);

        $r5 = (androidx.media3.session.MediaSession$ControllerCb) $r4;

        interfaceinvoke $r5.<androidx.media3.session.MediaSession$ControllerCb: void onSessionResult(int,androidx.media3.session.SessionResult)>(i0, r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to send result to controller ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", $r10, r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)
    {
        androidx.media3.common.util.Consumer r0;
        androidx.media3.session.MediaSessionStub$ControllerPlayerTask $r1;
        androidx.media3.session.MediaSessionStub$SessionTask $r2;

        r0 := @parameter0: androidx.media3.common.util.Consumer;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$ControllerPlayerTask (androidx.media3.common.util.Consumer)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$sendSessionResultSuccess$0(androidx.media3.common.util.Consumer,androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo));

        $r2 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.session.MediaSessionStub$ControllerPlayerTask)>($r1);

        return $r2;
    }

    private static androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.session.MediaSessionStub$ControllerPlayerTask)
    {
        androidx.media3.session.MediaSessionStub$ControllerPlayerTask r0;
        androidx.media3.session.MediaSessionStub$SessionTask $r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionStub$ControllerPlayerTask;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (androidx.media3.session.MediaSessionStub$ControllerPlayerTask)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$sendSessionResultSuccess$1(androidx.media3.session.MediaSessionStub$ControllerPlayerTask,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        return $r1;
    }

    private static androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)
    {
        androidx.media3.session.MediaSessionStub$SessionTask r0, $r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionStub$SessionTask;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (androidx.media3.session.MediaSessionStub$SessionTask)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$sendSessionResultWhenReady$3(androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        return $r1;
    }

    private static androidx.media3.session.MediaSessionStub$SessionTask handleMediaItemsWhenReady(androidx.media3.session.MediaSessionStub$SessionTask, androidx.media3.session.MediaSessionStub$MediaItemPlayerTask)
    {
        androidx.media3.session.MediaSessionStub$SessionTask r0, $r2;
        androidx.media3.session.MediaSessionStub$MediaItemPlayerTask r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionStub$SessionTask;

        r1 := @parameter1: androidx.media3.session.MediaSessionStub$MediaItemPlayerTask;

        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionStub$MediaItemPlayerTask)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$handleMediaItemsWhenReady$6(androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionStub$MediaItemPlayerTask,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        return $r2;
    }

    private static androidx.media3.session.MediaSessionStub$SessionTask handleMediaItemsWithStartPositionWhenReady(androidx.media3.session.MediaSessionStub$SessionTask, androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask)
    {
        androidx.media3.session.MediaSessionStub$SessionTask r0, $r2;
        androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionStub$SessionTask;

        r1 := @parameter1: androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask;

        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$handleMediaItemsWithStartPositionWhenReady$9(androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        return $r2;
    }

    private static void sendLibraryResult(androidx.media3.session.MediaSession$ControllerInfo, int, androidx.media3.session.LibraryResult)
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        int i0;
        androidx.media3.session.LibraryResult r1;
        java.lang.Throwable r2, $r6;
        androidx.media3.session.MediaSession$ControllerCb $r3, $r5;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.media3.session.LibraryResult;

     label1:
        $r3 = virtualinvoke r0.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb getControllerCb()>();

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r3);

        $r5 = (androidx.media3.session.MediaSession$ControllerCb) $r4;

        interfaceinvoke $r5.<androidx.media3.session.MediaSession$ControllerCb: void onLibraryResult(int,androidx.media3.session.LibraryResult)>(i0, r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to send result to browser ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", $r10, r2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static androidx.media3.session.MediaSessionStub$SessionTask sendLibraryResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)
    {
        androidx.media3.session.MediaSessionStub$SessionTask r0, $r1;

        r0 := @parameter0: androidx.media3.session.MediaSessionStub$SessionTask;

        $r1 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (androidx.media3.session.MediaSessionStub$SessionTask)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$sendLibraryResultWhenReady$11(androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        return $r1;
    }

    private void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController, int, int, androidx.media3.session.MediaSessionStub$SessionTask)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1;
        androidx.media3.session.MediaSessionStub$SessionTask r2;
        long l2;
        androidx.media3.session.MediaSessionImpl r3;
        androidx.media3.session.MediaSession$ControllerInfo r4;
        java.lang.Throwable r5, $r12;
        java.lang.ref.WeakReference $r6;
        java.lang.Object $r7;
        boolean $z0;
        androidx.media3.session.ConnectedControllersManager $r8;
        android.os.IBinder $r9;
        android.os.Handler $r10;
        java.lang.Runnable $r11;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media3.session.MediaSessionStub$SessionTask;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r6 = r0.<androidx.media3.session.MediaSessionStub: java.lang.ref.WeakReference sessionImpl>;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (androidx.media3.session.MediaSessionImpl) $r7;

        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label3;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label3:
        $r8 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $r9 = interfaceinvoke r1.<androidx.media3.session.IMediaController: android.os.IBinder asBinder()>();

        r4 = virtualinvoke $r8.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSession$ControllerInfo getController(java.lang.Object)>($r9);

        if r4 != null goto label5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label5:
        $r10 = virtualinvoke r3.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $r11 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionStub,androidx.media3.session.MediaSession$ControllerInfo,int,int,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionStub$SessionTask)>(r0, r4, i1, i0, r3, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionStub: void lambda$queueSessionTaskWithPlayerCommand$13(androidx.media3.session.MediaSession$ControllerInfo,int,int,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionStub$SessionTask)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r10, $r11);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label9;

     label7:
        $r12 := @caughtexception;

        r5 = $r12;

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController, int, int, androidx.media3.session.MediaSessionStub$SessionTask)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1;
        androidx.media3.session.MediaSessionStub$SessionTask r2;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media3.session.MediaSessionStub$SessionTask;

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController,int,androidx.media3.session.SessionCommand,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, null, i1, r2);

        return;
    }

    private void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController, int, androidx.media3.session.SessionCommand, androidx.media3.session.MediaSessionStub$SessionTask)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.session.SessionCommand r2;
        androidx.media3.session.MediaSessionStub$SessionTask r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.session.SessionCommand;

        r3 := @parameter3: androidx.media3.session.MediaSessionStub$SessionTask;

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController,int,androidx.media3.session.SessionCommand,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, r2, 0, r3);

        return;
    }

    private void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController, int, androidx.media3.session.SessionCommand, int, androidx.media3.session.MediaSessionStub$SessionTask)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1;
        androidx.media3.session.SessionCommand r2;
        androidx.media3.session.MediaSessionStub$SessionTask r3;
        long l2;
        androidx.media3.session.MediaSessionImpl r4;
        androidx.media3.session.MediaSession$ControllerInfo r5;
        java.lang.Throwable r6, $r13;
        java.lang.ref.WeakReference $r7;
        java.lang.Object $r8;
        boolean $z0;
        androidx.media3.session.ConnectedControllersManager $r9;
        android.os.IBinder $r10;
        android.os.Handler $r11;
        java.lang.Runnable $r12;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: androidx.media3.session.SessionCommand;

        i1 := @parameter3: int;

        r3 := @parameter4: androidx.media3.session.MediaSessionStub$SessionTask;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r7 = r0.<androidx.media3.session.MediaSessionStub: java.lang.ref.WeakReference sessionImpl>;

        $r8 = virtualinvoke $r7.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (androidx.media3.session.MediaSessionImpl) $r8;

        if r4 == null goto label2;

        $z0 = virtualinvoke r4.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label3;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label3:
        $r9 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $r10 = interfaceinvoke r1.<androidx.media3.session.IMediaController: android.os.IBinder asBinder()>();

        r5 = virtualinvoke $r9.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSession$ControllerInfo getController(java.lang.Object)>($r10);

        if r5 != null goto label5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        return;

     label5:
        $r11 = virtualinvoke r4.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $r12 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionStub,androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommand,int,int,androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionImpl)>(r0, r5, r2, i0, i1, r3, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionStub: void lambda$dispatchSessionTaskWithSessionCommand$14(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommand,int,int,androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionImpl)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r11, $r12);

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label9;

     label7:
        $r13 := @caughtexception;

        r6 = $r13;

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r6;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private static com.google.common.util.concurrent.ListenableFuture handleSessionTaskWhenReady(androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int, androidx.media3.session.MediaSessionStub$SessionTask, androidx.media3.common.util.Consumer)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        int i0;
        androidx.media3.session.MediaSessionStub$SessionTask r2;
        androidx.media3.common.util.Consumer r3;
        com.google.common.util.concurrent.ListenableFuture r4, $r9;
        com.google.common.util.concurrent.SettableFuture r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.Runnable $r7;
        java.util.concurrent.Executor $r8;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter2: int;

        r2 := @parameter3: androidx.media3.session.MediaSessionStub$SessionTask;

        r3 := @parameter4: androidx.media3.common.util.Consumer;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label1;

        $r9 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateVoidFuture()>();

        return $r9;

     label1:
        $r6 = interfaceinvoke r2.<androidx.media3.session.MediaSessionStub$SessionTask: java.lang.Object run(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>(r0, r1, i0);

        r4 = (com.google.common.util.concurrent.ListenableFuture) $r6;

        r5 = staticinvoke <com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>();

        $r7 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionImpl,com.google.common.util.concurrent.SettableFuture,androidx.media3.common.util.Consumer,com.google.common.util.concurrent.ListenableFuture)>(r0, r5, r3, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$handleSessionTaskWhenReady$15(androidx.media3.session.MediaSessionImpl,com.google.common.util.concurrent.SettableFuture,androidx.media3.common.util.Consumer,com.google.common.util.concurrent.ListenableFuture)>, methodtype: void __METHODTYPE__());

        $r8 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.Executor directExecutor()>();

        interfaceinvoke r4.<com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>($r7, $r8);

        return r5;
    }

    private int maybeCorrectMediaItemIndex(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.PlayerWrapper, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.PlayerWrapper r2;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        androidx.media3.session.ConnectedControllersManager $r3, $r4;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.PlayerWrapper;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: boolean isCommandAvailable(int)>(17);

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $z1 = virtualinvoke $r3.<androidx.media3.session.ConnectedControllersManager: boolean isPlayerCommandAvailable(androidx.media3.session.MediaSession$ControllerInfo,int)>(r1, 17);

        if $z1 != 0 goto label1;

        $r4 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $z2 = virtualinvoke $r4.<androidx.media3.session.ConnectedControllersManager: boolean isPlayerCommandAvailable(androidx.media3.session.MediaSession$ControllerInfo,int)>(r1, 16);

        if $z2 == 0 goto label1;

        $i1 = virtualinvoke r2.<androidx.media3.session.PlayerWrapper: int getCurrentMediaItemIndex()>();

        $i2 = i0 + $i1;

        return $i2;

     label1:
        return i0;
    }

    public void connect(androidx.media3.session.IMediaController, int, int, java.lang.String, int, int, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1, i2, i3;
        java.lang.String r2;
        android.os.Bundle r3;
        androidx.media.MediaSessionManager$RemoteUserInfo r4, $r8;
        androidx.media3.session.MediaSession$ControllerInfo r5, $r9;
        androidx.media3.session.MediaSessionImpl r6;
        java.lang.Throwable r7, $r17;
        androidx.media.MediaSessionManager $r10;
        boolean $z0, $z1;
        androidx.media3.session.MediaSessionStub$Controller2Cb $r11;
        java.lang.ref.WeakReference $r12;
        java.lang.Object $r13;
        java.util.Set $r14;
        android.os.Handler $r15;
        java.lang.Runnable $r16;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r3 := @parameter6: android.os.Bundle;

        $r8 = new androidx.media.MediaSessionManager$RemoteUserInfo;

        specialinvoke $r8.<androidx.media.MediaSessionManager$RemoteUserInfo: void <init>(java.lang.String,int,int)>(r2, i2, i3);

        r4 = $r8;

        $r9 = new androidx.media3.session.MediaSession$ControllerInfo;

        $r10 = r0.<androidx.media3.session.MediaSessionStub: androidx.media.MediaSessionManager sessionManager>;

        $z0 = virtualinvoke $r10.<androidx.media.MediaSessionManager: boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfo)>(r4);

        $r11 = new androidx.media3.session.MediaSessionStub$Controller2Cb;

        specialinvoke $r11.<androidx.media3.session.MediaSessionStub$Controller2Cb: void <init>(androidx.media3.session.IMediaController)>(r1);

        specialinvoke $r9.<androidx.media3.session.MediaSession$ControllerInfo: void <init>(androidx.media.MediaSessionManager$RemoteUserInfo,int,int,boolean,androidx.media3.session.MediaSession$ControllerCb,android.os.Bundle)>(r4, i0, i1, $z0, $r11, r3);

        r5 = $r9;

        $r12 = r0.<androidx.media3.session.MediaSessionStub: java.lang.ref.WeakReference sessionImpl>;

        $r13 = virtualinvoke $r12.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r6 = (androidx.media3.session.MediaSessionImpl) $r13;

        if r6 == null goto label1;

        $z1 = virtualinvoke r6.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z1 == 0 goto label5;

     label1:
        interfaceinvoke r1.<androidx.media3.session.IMediaController: void onDisconnected(int)>(0);

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

        r7 = $r17;

     label4:
        return;

     label5:
        $r14 = r0.<androidx.media3.session.MediaSessionStub: java.util.Set pendingControllers>;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>(r5);

        $r15 = virtualinvoke r6.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $r16 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionStub,androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.MediaSessionImpl,androidx.media3.session.IMediaController)>(r0, r5, r6, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionStub: void lambda$connect$16(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.MediaSessionImpl,androidx.media3.session.IMediaController)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r15, $r16);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void release()
    {
        androidx.media3.session.MediaSessionStub r0;
        com.google.common.collect.ImmutableList r1;
        androidx.media3.session.ConnectedControllersManager $r2;
        boolean $z0, $z1;
        java.util.Set $r3;
        java.lang.Object $r4, $r5;
        java.lang.Throwable $r6, $r7, r11, r15;
        java.util.Iterator r8, r12;
        androidx.media3.session.MediaSession$ControllerInfo r9, r13;
        androidx.media3.session.MediaSession$ControllerCb r10, r14;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        $r2 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        r1 = virtualinvoke $r2.<androidx.media3.session.ConnectedControllersManager: com.google.common.collect.ImmutableList getConnectedControllers()>();

        r8 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r5 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (androidx.media3.session.MediaSession$ControllerInfo) $r5;

        r10 = virtualinvoke r9.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb getControllerCb()>();

        if r10 == null goto label05;

     label02:
        interfaceinvoke r10.<androidx.media3.session.MediaSession$ControllerCb: void onDisconnected(int)>(0);

     label03:
        goto label05;

     label04:
        $r7 := @caughtexception;

        r11 = $r7;

     label05:
        goto label01;

     label06:
        $r3 = r0.<androidx.media3.session.MediaSessionStub: java.util.Set pendingControllers>;

        r12 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r4 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (androidx.media3.session.MediaSession$ControllerInfo) $r4;

        r14 = virtualinvoke r13.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb getControllerCb()>();

        if r14 == null goto label11;

     label08:
        interfaceinvoke r14.<androidx.media3.session.MediaSession$ControllerCb: void onDisconnected(int)>(0);

     label09:
        goto label11;

     label10:
        $r6 := @caughtexception;

        r15 = $r6;

     label11:
        goto label07;

     label12:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    public void connect(androidx.media3.session.IMediaController, int, android.os.Bundle) throws java.lang.RuntimeException
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1, i3, $i4, $i5, i6, $i7;
        android.os.Bundle r2, $r7;
        androidx.media3.session.ConnectionRequest r3;
        long l2;
        java.lang.Throwable r4, $r9, $r10, r11;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.common.Bundleable $r6;
        java.lang.String $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        if r1 == null goto label01;

        if r2 != null goto label02;

     label01:
        return;

     label02:
        $r5 = <androidx.media3.session.ConnectionRequest: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        r3 = (androidx.media3.session.ConnectionRequest) $r6;

     label03:
        goto label05;

     label04:
        $r10 := @caughtexception;

        r11 = $r10;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for ConnectionRequest", r11);

        return;

     label05:
        i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        if i1 == 0 goto label06;

        $i7 = i1;

        goto label07;

     label06:
        $i7 = r3.<androidx.media3.session.ConnectionRequest: int pid>;

     label07:
        i3 = $i7;

     label08:
        $i5 = r3.<androidx.media3.session.ConnectionRequest: int libraryVersion>;

        $i4 = r3.<androidx.media3.session.ConnectionRequest: int controllerInterfaceVersion>;

        $r8 = r3.<androidx.media3.session.ConnectionRequest: java.lang.String packageName>;

        $r7 = r3.<androidx.media3.session.ConnectionRequest: android.os.Bundle connectionHints>;

        virtualinvoke r0.<androidx.media3.session.MediaSessionStub: void connect(androidx.media3.session.IMediaController,int,int,java.lang.String,int,int,android.os.Bundle)>(r1, $i5, $i4, $r8, i3, i6, $r7);

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label12;

     label10:
        $r9 := @caughtexception;

        r4 = $r9;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r4;

     label12:
        return;

        catch java.lang.RuntimeException from label02 to label03 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void stop(androidx.media3.session.IMediaController, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$stop$17(androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 3, $r3);

        return;
    }

    public void release(androidx.media3.session.IMediaController, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        long l1;
        androidx.media3.session.MediaSessionImpl r2;
        java.lang.Throwable r3, $r8;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        boolean $z0;
        android.os.Handler $r6;
        java.lang.Runnable $r7;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r4 = r0.<androidx.media3.session.MediaSessionStub: java.lang.ref.WeakReference sessionImpl>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.MediaSessionImpl) $r5;

        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label4;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label4:
        $r6 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $r7 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionStub,androidx.media3.session.IMediaController)>(r0, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionStub: void lambda$release$18(androidx.media3.session.IMediaController)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r6, $r7);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label8;

     label6:
        $r8 := @caughtexception;

        r3 = $r8;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void onControllerResult(androidx.media3.session.IMediaController, int, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.Bundle r2;
        androidx.media3.session.SessionResult r3;
        androidx.media3.session.SequencedFutureManager r4;
        java.lang.Throwable r5, $r10, $r11, r12;
        androidx.media3.common.Bundleable$Creator $r6;
        androidx.media3.common.Bundleable $r7;
        androidx.media3.session.ConnectedControllersManager $r8;
        android.os.IBinder $r9;
        long l1;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        if r1 == null goto label01;

        if r2 != null goto label02;

     label01:
        return;

     label02:
        $r6 = <androidx.media3.session.SessionResult: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        r3 = (androidx.media3.session.SessionResult) $r7;

     label03:
        goto label05;

     label04:
        $r11 := @caughtexception;

        r12 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for SessionResult", r12);

        return;

     label05:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        $r8 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $r9 = interfaceinvoke r1.<androidx.media3.session.IMediaController: android.os.IBinder asBinder()>();

        r4 = virtualinvoke $r8.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.SequencedFutureManager getSequencedFutureManager(java.lang.Object)>($r9);

        if r4 != null goto label08;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label08:
        virtualinvoke r4.<androidx.media3.session.SequencedFutureManager: void setFutureResult(int,java.lang.Object)>(i0, r3);

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label12;

     label10:
        $r10 := @caughtexception;

        r5 = $r10;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r5;

     label12:
        return;

        catch java.lang.RuntimeException from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void play(androidx.media3.session.IMediaController, int) throws java.lang.RuntimeException
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaSessionStub)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionStub: void lambda$play$19(androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 1, $r3);

        return;
    }

    public void pause(androidx.media3.session.IMediaController, int) throws java.lang.RuntimeException
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.common.Player: void pause()>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 1, $r3);

        return;
    }

    public void prepare(androidx.media3.session.IMediaController, int) throws java.lang.RuntimeException
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.common.Player: void prepare()>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 2, $r3);

        return;
    }

    public void seekToDefaultPosition(androidx.media3.session.IMediaController, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$seekToDefaultPosition$20(androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 4, $r3);

        return;
    }

    public void seekToDefaultPositionWithMediaItemIndex(androidx.media3.session.IMediaController, int, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1;
        androidx.media3.session.MediaSessionStub$ControllerPlayerTask $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$ControllerPlayerTask (androidx.media3.session.MediaSessionStub,int)>(r0, i1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionStub: void lambda$seekToDefaultPositionWithMediaItemIndex$21(int,androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.session.MediaSessionStub$ControllerPlayerTask)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 10, $r3);

        return;
    }

    public void seekTo(androidx.media3.session.IMediaController, int, long) throws java.lang.RuntimeException
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        long l1;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (long)>(l1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$seekTo$22(long,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 5, $r3);

        return;
    }

    public void seekToWithMediaItemIndex(androidx.media3.session.IMediaController, int, int, long) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1;
        long l2;
        androidx.media3.session.MediaSessionStub$ControllerPlayerTask $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$ControllerPlayerTask (androidx.media3.session.MediaSessionStub,int,long)>(r0, i1, l2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionStub: void lambda$seekToWithMediaItemIndex$23(int,long,androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.session.MediaSessionStub$ControllerPlayerTask)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 10, $r3);

        return;
    }

    public void seekBack(androidx.media3.session.IMediaController, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.common.Player: void seekBack()>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 11, $r3);

        return;
    }

    public void seekForward(androidx.media3.session.IMediaController, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.common.Player: void seekForward()>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 12, $r3);

        return;
    }

    public void onCustomCommand(androidx.media3.session.IMediaController, int, android.os.Bundle, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.Bundle r2, r3;
        androidx.media3.session.SessionCommand r4;
        java.lang.Throwable r5, $r10;
        androidx.media3.common.Bundleable$Creator $r6;
        androidx.media3.common.Bundleable $r7;
        androidx.media3.session.MediaSessionStub$SessionTask $r8, $r9;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: android.os.Bundle;

        if r1 == null goto label1;

        if r2 == null goto label1;

        if r3 != null goto label2;

     label1:
        return;

     label2:
        $r6 = <androidx.media3.session.SessionCommand: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        r4 = (androidx.media3.session.SessionCommand) $r7;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        r5 = $r10;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for SessionCommand", r5);

        return;

     label5:
        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (androidx.media3.session.SessionCommand,android.os.Bundle)>(r4, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$onCustomCommand$24(androidx.media3.session.SessionCommand,android.os.Bundle,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r9 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r8);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController,int,androidx.media3.session.SessionCommand,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, r4, $r9);

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void setRatingWithMediaId(androidx.media3.session.IMediaController, int, java.lang.String, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        java.lang.String r2;
        android.os.Bundle r3;
        androidx.media3.common.Rating r4;
        java.lang.Throwable r5, $r10;
        boolean $z0;
        androidx.media3.common.Bundleable$Creator $r6;
        androidx.media3.common.Bundleable $r7;
        androidx.media3.session.MediaSessionStub$SessionTask $r8, $r9;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        if r1 == null goto label1;

        if r3 != null goto label2;

     label1:
        return;

     label2:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label3;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionStub", "setRatingWithMediaId(): Ignoring empty mediaId");

        return;

     label3:
        $r6 = <androidx.media3.common.Rating: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r7 = interfaceinvoke $r6.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r3);

        r4 = (androidx.media3.common.Rating) $r7;

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        r5 = $r10;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for Rating", r5);

        return;

     label6:
        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (java.lang.String,androidx.media3.common.Rating)>(r2, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$setRatingWithMediaId$25(java.lang.String,androidx.media3.common.Rating,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r9 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r8);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 40010, $r9);

        return;

        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public void setRating(androidx.media3.session.IMediaController, int, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.Bundle r2;
        androidx.media3.common.Rating r3;
        java.lang.Throwable r4, $r9;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.common.Bundleable $r6;
        androidx.media3.session.MediaSessionStub$SessionTask $r7, $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r5 = <androidx.media3.common.Rating: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        r3 = (androidx.media3.common.Rating) $r6;

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for Rating", r4);

        return;

     label5:
        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (androidx.media3.common.Rating)>(r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$setRating$26(androidx.media3.common.Rating,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r8 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r7);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 40010, $r8);

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void setPlaybackSpeed(androidx.media3.session.IMediaController, int, float)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        float f0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (float)>(f0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$setPlaybackSpeed$27(float,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 13, $r3);

        return;
    }

    public void setPlaybackParameters(androidx.media3.session.IMediaController, int, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.Bundle r2;
        androidx.media3.common.PlaybackParameters r3;
        androidx.media3.common.Bundleable$Creator $r4;
        androidx.media3.common.Bundleable $r5;
        androidx.media3.common.util.Consumer $r6;
        androidx.media3.session.MediaSessionStub$SessionTask $r7;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r4 = <androidx.media3.common.PlaybackParameters: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        r3 = (androidx.media3.common.PlaybackParameters) $r5;

        $r6 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.common.PlaybackParameters)>(r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$setPlaybackParameters$28(androidx.media3.common.PlaybackParameters,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r7 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r6);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 13, $r7);

        return;
    }

    public void setMediaItem(androidx.media3.session.IMediaController, int, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.Bundle r2;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        virtualinvoke r0.<androidx.media3.session.MediaSessionStub: void setMediaItemWithResetPosition(androidx.media3.session.IMediaController,int,android.os.Bundle,boolean)>(r1, i0, r2, 1);

        return;
    }

    public void setMediaItemWithStartPosition(androidx.media3.session.IMediaController, int, android.os.Bundle, long)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.Bundle r2;
        long l1;
        androidx.media3.common.MediaItem r3;
        java.lang.Throwable r4, $r11;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.common.Bundleable $r6;
        androidx.media3.session.MediaSessionStub$SessionTask $r7, $r9, $r10;
        androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        l1 := @parameter3: long;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r5 = <androidx.media3.common.MediaItem: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        r3 = (androidx.media3.common.MediaItem) $r6;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for MediaItem", r4);

        return;

     label5:
        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (androidx.media3.common.MediaItem,long)>(r3, l1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$setMediaItemWithStartPosition$29(androidx.media3.common.MediaItem,long,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaUtils: void setMediaItemsWithStartIndexAndPosition(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition));

        $r9 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask handleMediaItemsWithStartPositionWhenReady(androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask)>($r7, $r8);

        $r10 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r9);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 31, $r10);

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void setMediaItemWithResetPosition(androidx.media3.session.IMediaController, int, android.os.Bundle, boolean)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.Bundle r2;
        boolean z0;
        androidx.media3.common.MediaItem r3;
        java.lang.Throwable r4, $r11;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.common.Bundleable $r6;
        androidx.media3.session.MediaSessionStub$SessionTask $r7, $r9, $r10;
        androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        z0 := @parameter3: boolean;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r5 = <androidx.media3.common.MediaItem: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        r3 = (androidx.media3.common.MediaItem) $r6;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for MediaItem", r4);

        return;

     label5:
        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (androidx.media3.common.MediaItem,boolean)>(r3, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$setMediaItemWithResetPosition$30(androidx.media3.common.MediaItem,boolean,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaUtils: void setMediaItemsWithStartIndexAndPosition(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition));

        $r9 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask handleMediaItemsWithStartPositionWhenReady(androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask)>($r7, $r8);

        $r10 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r9);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 31, $r10);

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void setMediaItems(androidx.media3.session.IMediaController, int, android.os.IBinder)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.IBinder r2;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.IBinder;

        virtualinvoke r0.<androidx.media3.session.MediaSessionStub: void setMediaItemsWithResetPosition(androidx.media3.session.IMediaController,int,android.os.IBinder,boolean)>(r1, i0, r2, 1);

        return;
    }

    public void setMediaItemsWithResetPosition(androidx.media3.session.IMediaController, int, android.os.IBinder, boolean)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.IBinder r2;
        boolean z0;
        com.google.common.collect.ImmutableList r3, $r6;
        java.lang.Throwable r4, $r11;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.session.MediaSessionStub$SessionTask $r7, $r9, $r10;
        androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.IBinder;

        z0 := @parameter3: boolean;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r5 = <androidx.media3.common.MediaItem: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = staticinvoke <androidx.media3.common.BundleListRetriever: com.google.common.collect.ImmutableList getList(android.os.IBinder)>(r2);

        r3 = staticinvoke <androidx.media3.common.util.BundleableUtil: com.google.common.collect.ImmutableList fromBundleList(androidx.media3.common.Bundleable$Creator,java.util.List)>($r5, $r6);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for MediaItem", r4);

        return;

     label5:
        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (java.util.List,boolean)>(r3, z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$setMediaItemsWithResetPosition$31(java.util.List,boolean,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaUtils: void setMediaItemsWithStartIndexAndPosition(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition));

        $r9 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask handleMediaItemsWithStartPositionWhenReady(androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask)>($r7, $r8);

        $r10 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r9);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 20, $r10);

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void setMediaItemsWithStartIndex(androidx.media3.session.IMediaController, int, android.os.IBinder, int, long)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1;
        android.os.IBinder r2;
        long l2;
        com.google.common.collect.ImmutableList r3, $r6;
        java.lang.Throwable r4, $r11;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.session.MediaSessionStub$SessionTask $r7, $r9, $r10;
        androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.IBinder;

        i1 := @parameter3: int;

        l2 := @parameter4: long;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r5 = <androidx.media3.common.MediaItem: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = staticinvoke <androidx.media3.common.BundleListRetriever: com.google.common.collect.ImmutableList getList(android.os.IBinder)>(r2);

        r3 = staticinvoke <androidx.media3.common.util.BundleableUtil: com.google.common.collect.ImmutableList fromBundleList(androidx.media3.common.Bundleable$Creator,java.util.List)>($r5, $r6);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for MediaItem", r4);

        return;

     label5:
        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (java.util.List,int,long)>(r3, i1, l2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$setMediaItemsWithStartIndex$32(java.util.List,int,long,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaUtils: void setMediaItemsWithStartIndexAndPosition(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition));

        $r9 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask handleMediaItemsWithStartPositionWhenReady(androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask)>($r7, $r8);

        $r10 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r9);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 20, $r10);

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void setPlaylistMetadata(androidx.media3.session.IMediaController, int, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.Bundle r2;
        androidx.media3.common.MediaMetadata r3;
        java.lang.Throwable r4, $r9;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.common.Bundleable $r6;
        androidx.media3.common.util.Consumer $r7;
        androidx.media3.session.MediaSessionStub$SessionTask $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r5 = <androidx.media3.common.MediaMetadata: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        r3 = (androidx.media3.common.MediaMetadata) $r6;

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for MediaMetadata", r4);

        return;

     label5:
        $r7 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.common.MediaMetadata)>(r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$setPlaylistMetadata$33(androidx.media3.common.MediaMetadata,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r8 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r7);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 19, $r8);

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void addMediaItem(androidx.media3.session.IMediaController, int, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.Bundle r2;
        androidx.media3.common.MediaItem r3;
        java.lang.Throwable r4, $r11;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.common.Bundleable $r6;
        androidx.media3.session.MediaSessionStub$SessionTask $r7, $r9, $r10;
        androidx.media3.session.MediaSessionStub$MediaItemPlayerTask $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r5 = <androidx.media3.common.MediaItem: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        r3 = (androidx.media3.common.MediaItem) $r6;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for MediaItem", r4);

        return;

     label5:
        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (androidx.media3.common.MediaItem)>(r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$addMediaItem$34(androidx.media3.common.MediaItem,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$MediaItemPlayerTask ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$addMediaItem$35(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List));

        $r9 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask handleMediaItemsWhenReady(androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionStub$MediaItemPlayerTask)>($r7, $r8);

        $r10 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r9);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 20, $r10);

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void addMediaItemWithIndex(androidx.media3.session.IMediaController, int, int, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1;
        android.os.Bundle r2;
        androidx.media3.common.MediaItem r3;
        java.lang.Throwable r4, $r11;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.common.Bundleable $r6;
        androidx.media3.session.MediaSessionStub$SessionTask $r7, $r9, $r10;
        androidx.media3.session.MediaSessionStub$MediaItemPlayerTask $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Bundle;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r5 = <androidx.media3.common.MediaItem: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        r3 = (androidx.media3.common.MediaItem) $r6;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for MediaItem", r4);

        return;

     label5:
        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (androidx.media3.common.MediaItem)>(r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$addMediaItemWithIndex$36(androidx.media3.common.MediaItem,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$MediaItemPlayerTask (androidx.media3.session.MediaSessionStub,int)>(r0, i1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionStub: void lambda$addMediaItemWithIndex$37(int,androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List));

        $r9 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask handleMediaItemsWhenReady(androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionStub$MediaItemPlayerTask)>($r7, $r8);

        $r10 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r9);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 20, $r10);

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void addMediaItems(androidx.media3.session.IMediaController, int, android.os.IBinder)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.IBinder r2;
        com.google.common.collect.ImmutableList r3, $r6;
        java.lang.Throwable r4, $r11;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.session.MediaSessionStub$SessionTask $r7, $r9, $r10;
        androidx.media3.session.MediaSessionStub$MediaItemPlayerTask $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.IBinder;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r5 = <androidx.media3.common.MediaItem: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = staticinvoke <androidx.media3.common.BundleListRetriever: com.google.common.collect.ImmutableList getList(android.os.IBinder)>(r2);

        r3 = staticinvoke <androidx.media3.common.util.BundleableUtil: com.google.common.collect.ImmutableList fromBundleList(androidx.media3.common.Bundleable$Creator,java.util.List)>($r5, $r6);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for MediaItem", r4);

        return;

     label5:
        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (java.util.List)>(r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$addMediaItems$38(java.util.List,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$MediaItemPlayerTask ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$addMediaItems$39(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List));

        $r9 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask handleMediaItemsWhenReady(androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionStub$MediaItemPlayerTask)>($r7, $r8);

        $r10 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r9);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 20, $r10);

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void addMediaItemsWithIndex(androidx.media3.session.IMediaController, int, int, android.os.IBinder)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1;
        android.os.IBinder r2;
        com.google.common.collect.ImmutableList r3, $r6;
        java.lang.Throwable r4, $r11;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.session.MediaSessionStub$SessionTask $r7, $r9, $r10;
        androidx.media3.session.MediaSessionStub$MediaItemPlayerTask $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.IBinder;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r5 = <androidx.media3.common.MediaItem: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = staticinvoke <androidx.media3.common.BundleListRetriever: com.google.common.collect.ImmutableList getList(android.os.IBinder)>(r2);

        r3 = staticinvoke <androidx.media3.common.util.BundleableUtil: com.google.common.collect.ImmutableList fromBundleList(androidx.media3.common.Bundleable$Creator,java.util.List)>($r5, $r6);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for MediaItem", r4);

        return;

     label5:
        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (java.util.List)>(r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$addMediaItemsWithIndex$40(java.util.List,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r8 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$MediaItemPlayerTask (androidx.media3.session.MediaSessionStub,int)>(r0, i1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionStub: void lambda$addMediaItemsWithIndex$41(int,androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List));

        $r9 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask handleMediaItemsWhenReady(androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionStub$MediaItemPlayerTask)>($r7, $r8);

        $r10 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r9);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 20, $r10);

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void removeMediaItem(androidx.media3.session.IMediaController, int, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1;
        androidx.media3.session.MediaSessionStub$ControllerPlayerTask $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$ControllerPlayerTask (androidx.media3.session.MediaSessionStub,int)>(r0, i1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionStub: void lambda$removeMediaItem$42(int,androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.session.MediaSessionStub$ControllerPlayerTask)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 20, $r3);

        return;
    }

    public void removeMediaItems(androidx.media3.session.IMediaController, int, int, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1, i2;
        androidx.media3.session.MediaSessionStub$ControllerPlayerTask $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$ControllerPlayerTask (androidx.media3.session.MediaSessionStub,int,int)>(r0, i1, i2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionStub: void lambda$removeMediaItems$43(int,int,androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.session.MediaSessionStub$ControllerPlayerTask)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 20, $r3);

        return;
    }

    public void clearMediaItems(androidx.media3.session.IMediaController, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.common.Player: void clearMediaItems()>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 20, $r3);

        return;
    }

    public void moveMediaItem(androidx.media3.session.IMediaController, int, int, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1, i2;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (int,int)>(i1, i2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$moveMediaItem$44(int,int,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 20, $r3);

        return;
    }

    public void moveMediaItems(androidx.media3.session.IMediaController, int, int, int, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1, i2, i3;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (int,int,int)>(i1, i2, i3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$moveMediaItems$45(int,int,int,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 20, $r3);

        return;
    }

    public void seekToPreviousMediaItem(androidx.media3.session.IMediaController, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.common.Player: void seekToPreviousMediaItem()>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 6, $r3);

        return;
    }

    public void seekToNextMediaItem(androidx.media3.session.IMediaController, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.common.Player: void seekToNextMediaItem()>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 8, $r3);

        return;
    }

    public void seekToPrevious(androidx.media3.session.IMediaController, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.common.Player: void seekToPrevious()>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 7, $r3);

        return;
    }

    public void seekToNext(androidx.media3.session.IMediaController, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.common.Player: void seekToNext()>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 9, $r3);

        return;
    }

    public void setRepeatMode(androidx.media3.session.IMediaController, int, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (int)>(i1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$setRepeatMode$46(int,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 15, $r3);

        return;
    }

    public void setShuffleModeEnabled(androidx.media3.session.IMediaController, int, boolean)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        boolean z0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (boolean)>(z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$setShuffleModeEnabled$47(boolean,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 14, $r3);

        return;
    }

    public void setVideoSurface(androidx.media3.session.IMediaController, int, android.view.Surface)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.view.Surface r2;
        androidx.media3.common.util.Consumer $r3;
        androidx.media3.session.MediaSessionStub$SessionTask $r4;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.Surface;

        if r1 != null goto label1;

        return;

     label1:
        $r3 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (android.view.Surface)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$setVideoSurface$48(android.view.Surface,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r4 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r3);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 27, $r4);

        return;
    }

    public void setVolume(androidx.media3.session.IMediaController, int, float)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        float f0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (float)>(f0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$setVolume$49(float,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 24, $r3);

        return;
    }

    public void setDeviceVolume(androidx.media3.session.IMediaController, int, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (int)>(i1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$setDeviceVolume$50(int,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 25, $r3);

        return;
    }

    public void increaseDeviceVolume(androidx.media3.session.IMediaController, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.common.Player: void increaseDeviceVolume()>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 26, $r3);

        return;
    }

    public void decreaseDeviceVolume(androidx.media3.session.IMediaController, int)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_INTERFACE" <androidx.media3.common.Player: void decreaseDeviceVolume()>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 26, $r3);

        return;
    }

    public void setDeviceMuted(androidx.media3.session.IMediaController, int, boolean)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        boolean z0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (boolean)>(z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$setDeviceMuted$51(boolean,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 26, $r3);

        return;
    }

    public void setPlayWhenReady(androidx.media3.session.IMediaController, int, boolean)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        boolean z0;
        androidx.media3.common.util.Consumer $r2;
        androidx.media3.session.MediaSessionStub$SessionTask $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (boolean)>(z0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$setPlayWhenReady$52(boolean,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r3 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r2);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 1, $r3);

        return;
    }

    public void flushCommandQueue(androidx.media3.session.IMediaController)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        long l0;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.MediaSession$ControllerInfo r3;
        java.lang.Throwable r4, $r11;
        java.lang.ref.WeakReference $r5;
        java.lang.Object $r6;
        boolean $z0;
        androidx.media3.session.ConnectedControllersManager $r7;
        android.os.IBinder $r8;
        android.os.Handler $r9;
        java.lang.Runnable $r10;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        if r1 != null goto label1;

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r5 = r0.<androidx.media3.session.MediaSessionStub: java.lang.ref.WeakReference sessionImpl>;

        $r6 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.MediaSessionImpl) $r6;

        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label4;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label4:
        $r7 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $r8 = interfaceinvoke r1.<androidx.media3.session.IMediaController: android.os.IBinder asBinder()>();

        r3 = virtualinvoke $r7.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.MediaSession$ControllerInfo getController(java.lang.Object)>($r8);

        if r3 == null goto label5;

        $r9 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $r10 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionStub,androidx.media3.session.MediaSession$ControllerInfo)>(r0, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_SPECIAL" <androidx.media3.session.MediaSessionStub: void lambda$flushCommandQueue$53(androidx.media3.session.MediaSession$ControllerInfo)>, methodtype: void __METHODTYPE__());

        staticinvoke <androidx.media3.common.util.Util: boolean postOrRun(android.os.Handler,java.lang.Runnable)>($r9, $r10);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label8;

     label6:
        $r11 := @caughtexception;

        r4 = $r11;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void setTrackSelectionParameters(androidx.media3.session.IMediaController, int, android.os.Bundle) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.Bundle r2;
        androidx.media3.common.TrackSelectionParameters r3;
        java.lang.Throwable r4, $r7;
        androidx.media3.common.util.Consumer $r5;
        androidx.media3.session.MediaSessionStub$SessionTask $r6;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        if r1 != null goto label1;

        return;

     label1:
        r3 = staticinvoke <androidx.media3.common.TrackSelectionParameters: androidx.media3.common.TrackSelectionParameters fromBundle(android.os.Bundle)>(r2);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaSessionStub", "Ignoring malformed Bundle for TrackSelectionParameters", r4);

        return;

     label4:
        $r5 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.common.TrackSelectionParameters)>(r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$setTrackSelectionParameters$54(androidx.media3.common.TrackSelectionParameters,androidx.media3.session.PlayerWrapper)>, methodtype: void __METHODTYPE__(androidx.media3.session.PlayerWrapper));

        $r6 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendSessionResultSuccess(androidx.media3.common.util.Consumer)>($r5);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void queueSessionTaskWithPlayerCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 29, $r6);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void getLibraryRoot(androidx.media3.session.IMediaController, int, android.os.Bundle) throws java.lang.RuntimeException
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        android.os.Bundle r2;
        androidx.media3.session.MediaLibraryService$LibraryParams r3, $r8;
        androidx.media3.common.Bundleable$Creator $r4;
        androidx.media3.common.Bundleable $r5;
        androidx.media3.session.MediaSessionStub$SessionTask $r6, $r7;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        if r1 != null goto label1;

        return;

     label1:
        if r2 != null goto label2;

        $r8 = null;

        goto label3;

     label2:
        $r4 = <androidx.media3.session.MediaLibraryService$LibraryParams: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r2);

        $r8 = (androidx.media3.session.MediaLibraryService$LibraryParams) $r5;

     label3:
        r3 = $r8;

        $r6 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (androidx.media3.session.MediaLibraryService$LibraryParams)>(r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$getLibraryRoot$55(androidx.media3.session.MediaLibraryService$LibraryParams,androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r7 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendLibraryResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r6);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 50000, $r7);

        return;
    }

    public void getItem(androidx.media3.session.IMediaController, int, java.lang.String) throws java.lang.RuntimeException
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        java.lang.String r2;
        boolean $z0;
        androidx.media3.session.MediaSessionStub$SessionTask $r3, $r4;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionStub", "getItem(): Ignoring empty mediaId");

        return;

     label2:
        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (java.lang.String)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$getItem$56(java.lang.String,androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r4 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendLibraryResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r3);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 50004, $r4);

        return;
    }

    public void getChildren(androidx.media3.session.IMediaController, int, java.lang.String, int, int, android.os.Bundle) throws java.lang.RuntimeException
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1, i2;
        java.lang.String r2;
        android.os.Bundle r3;
        androidx.media3.session.MediaLibraryService$LibraryParams r4, $r9;
        boolean $z0;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.common.Bundleable $r6;
        androidx.media3.session.MediaSessionStub$SessionTask $r7, $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.os.Bundle;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionStub", "getChildren(): Ignoring empty parentId");

        return;

     label2:
        if i1 >= 0 goto label3;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionStub", "getChildren(): Ignoring negative page");

        return;

     label3:
        if i2 >= 1 goto label4;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionStub", "getChildren(): Ignoring pageSize less than 1");

        return;

     label4:
        if r3 != null goto label5;

        $r9 = null;

        goto label6;

     label5:
        $r5 = <androidx.media3.session.MediaLibraryService$LibraryParams: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r3);

        $r9 = (androidx.media3.session.MediaLibraryService$LibraryParams) $r6;

     label6:
        r4 = $r9;

        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (java.lang.String,int,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(r2, i1, i2, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$getChildren$57(java.lang.String,int,int,androidx.media3.session.MediaLibraryService$LibraryParams,androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r8 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendLibraryResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r7);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 50003, $r8);

        return;
    }

    public void search(androidx.media3.session.IMediaController, int, java.lang.String, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        java.lang.String r2;
        android.os.Bundle r3;
        androidx.media3.session.MediaLibraryService$LibraryParams r4, $r9;
        boolean $z0;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.common.Bundleable $r6;
        androidx.media3.session.MediaSessionStub$SessionTask $r7, $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionStub", "search(): Ignoring empty query");

        return;

     label2:
        if r3 != null goto label3;

        $r9 = null;

        goto label4;

     label3:
        $r5 = <androidx.media3.session.MediaLibraryService$LibraryParams: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r3);

        $r9 = (androidx.media3.session.MediaLibraryService$LibraryParams) $r6;

     label4:
        r4 = $r9;

        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (java.lang.String,androidx.media3.session.MediaLibraryService$LibraryParams)>(r2, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$search$58(java.lang.String,androidx.media3.session.MediaLibraryService$LibraryParams,androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r8 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendLibraryResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r7);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 50005, $r8);

        return;
    }

    public void getSearchResult(androidx.media3.session.IMediaController, int, java.lang.String, int, int, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0, i1, i2;
        java.lang.String r2;
        android.os.Bundle r3;
        androidx.media3.session.MediaLibraryService$LibraryParams r4, $r9;
        boolean $z0;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.common.Bundleable $r6;
        androidx.media3.session.MediaSessionStub$SessionTask $r7, $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.os.Bundle;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionStub", "getSearchResult(): Ignoring empty query");

        return;

     label2:
        if i1 >= 0 goto label3;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionStub", "getSearchResult(): Ignoring negative page");

        return;

     label3:
        if i2 >= 1 goto label4;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionStub", "getSearchResult(): Ignoring pageSize less than 1");

        return;

     label4:
        if r3 != null goto label5;

        $r9 = null;

        goto label6;

     label5:
        $r5 = <androidx.media3.session.MediaLibraryService$LibraryParams: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r3);

        $r9 = (androidx.media3.session.MediaLibraryService$LibraryParams) $r6;

     label6:
        r4 = $r9;

        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (java.lang.String,int,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(r2, i1, i2, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$getSearchResult$59(java.lang.String,int,int,androidx.media3.session.MediaLibraryService$LibraryParams,androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r8 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendLibraryResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r7);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 50006, $r8);

        return;
    }

    public void subscribe(androidx.media3.session.IMediaController, int, java.lang.String, android.os.Bundle)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        java.lang.String r2;
        android.os.Bundle r3;
        androidx.media3.session.MediaLibraryService$LibraryParams r4, $r9;
        boolean $z0;
        androidx.media3.common.Bundleable$Creator $r5;
        androidx.media3.common.Bundleable $r6;
        androidx.media3.session.MediaSessionStub$SessionTask $r7, $r8;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Bundle;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionStub", "subscribe(): Ignoring empty parentId");

        return;

     label2:
        if r3 != null goto label3;

        $r9 = null;

        goto label4;

     label3:
        $r5 = <androidx.media3.session.MediaLibraryService$LibraryParams: androidx.media3.common.Bundleable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<androidx.media3.common.Bundleable$Creator: androidx.media3.common.Bundleable fromBundle(android.os.Bundle)>(r3);

        $r9 = (androidx.media3.session.MediaLibraryService$LibraryParams) $r6;

     label4:
        r4 = $r9;

        $r7 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (java.lang.String,androidx.media3.session.MediaLibraryService$LibraryParams)>(r2, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$subscribe$60(java.lang.String,androidx.media3.session.MediaLibraryService$LibraryParams,androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r8 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendLibraryResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r7);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 50001, $r8);

        return;
    }

    public void unsubscribe(androidx.media3.session.IMediaController, int, java.lang.String)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        int i0;
        java.lang.String r2;
        boolean $z0;
        androidx.media3.session.MediaSessionStub$SessionTask $r3, $r4;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionStub", "unsubscribe(): Ignoring empty parentId");

        return;

     label2:
        $r3 = dynamicinvoke "run" <androidx.media3.session.MediaSessionStub$SessionTask (java.lang.String)>(r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$unsubscribe$61(java.lang.String,androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaLibrarySessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int));

        $r4 = staticinvoke <androidx.media3.session.MediaSessionStub: androidx.media3.session.MediaSessionStub$SessionTask sendLibraryResultWhenReady(androidx.media3.session.MediaSessionStub$SessionTask)>($r3);

        specialinvoke r0.<androidx.media3.session.MediaSessionStub: void dispatchSessionTaskWithSessionCommand(androidx.media3.session.IMediaController,int,int,androidx.media3.session.MediaSessionStub$SessionTask)>(r1, i0, 50002, $r4);

        return;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$unsubscribe$61(java.lang.String, androidx.media3.session.MediaLibrarySessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        java.lang.String r0;
        androidx.media3.session.MediaLibrarySessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.media3.session.MediaLibrarySessionImpl;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter3: int;

        $r3 = virtualinvoke r1.<androidx.media3.session.MediaLibrarySessionImpl: com.google.common.util.concurrent.ListenableFuture onUnsubscribeOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.lang.String)>(r2, r0);

        return $r3;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$subscribe$60(java.lang.String, androidx.media3.session.MediaLibraryService$LibraryParams, androidx.media3.session.MediaLibrarySessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        java.lang.String r0;
        androidx.media3.session.MediaLibraryService$LibraryParams r1;
        androidx.media3.session.MediaLibrarySessionImpl r2;
        androidx.media3.session.MediaSession$ControllerInfo r3;
        int i0;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.media3.session.MediaLibraryService$LibraryParams;

        r2 := @parameter2: androidx.media3.session.MediaLibrarySessionImpl;

        r3 := @parameter3: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter4: int;

        $r4 = virtualinvoke r2.<androidx.media3.session.MediaLibrarySessionImpl: com.google.common.util.concurrent.ListenableFuture onSubscribeOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.lang.String,androidx.media3.session.MediaLibraryService$LibraryParams)>(r3, r0, r1);

        return $r4;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$getSearchResult$59(java.lang.String, int, int, androidx.media3.session.MediaLibraryService$LibraryParams, androidx.media3.session.MediaLibrarySessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        java.lang.String r0;
        int i0, i1, i2;
        androidx.media3.session.MediaLibraryService$LibraryParams r1;
        androidx.media3.session.MediaLibrarySessionImpl r2;
        androidx.media3.session.MediaSession$ControllerInfo r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: androidx.media3.session.MediaLibraryService$LibraryParams;

        r2 := @parameter4: androidx.media3.session.MediaLibrarySessionImpl;

        r3 := @parameter5: androidx.media3.session.MediaSession$ControllerInfo;

        i2 := @parameter6: int;

        $r4 = virtualinvoke r2.<androidx.media3.session.MediaLibrarySessionImpl: com.google.common.util.concurrent.ListenableFuture onGetSearchResultOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.lang.String,int,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(r3, r0, i0, i1, r1);

        return $r4;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$search$58(java.lang.String, androidx.media3.session.MediaLibraryService$LibraryParams, androidx.media3.session.MediaLibrarySessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        java.lang.String r0;
        androidx.media3.session.MediaLibraryService$LibraryParams r1;
        androidx.media3.session.MediaLibrarySessionImpl r2;
        androidx.media3.session.MediaSession$ControllerInfo r3;
        int i0;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.media3.session.MediaLibraryService$LibraryParams;

        r2 := @parameter2: androidx.media3.session.MediaLibrarySessionImpl;

        r3 := @parameter3: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter4: int;

        $r4 = virtualinvoke r2.<androidx.media3.session.MediaLibrarySessionImpl: com.google.common.util.concurrent.ListenableFuture onSearchOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.lang.String,androidx.media3.session.MediaLibraryService$LibraryParams)>(r3, r0, r1);

        return $r4;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$getChildren$57(java.lang.String, int, int, androidx.media3.session.MediaLibraryService$LibraryParams, androidx.media3.session.MediaLibrarySessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        java.lang.String r0;
        int i0, i1, i2;
        androidx.media3.session.MediaLibraryService$LibraryParams r1;
        androidx.media3.session.MediaLibrarySessionImpl r2;
        androidx.media3.session.MediaSession$ControllerInfo r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: androidx.media3.session.MediaLibraryService$LibraryParams;

        r2 := @parameter4: androidx.media3.session.MediaLibrarySessionImpl;

        r3 := @parameter5: androidx.media3.session.MediaSession$ControllerInfo;

        i2 := @parameter6: int;

        $r4 = virtualinvoke r2.<androidx.media3.session.MediaLibrarySessionImpl: com.google.common.util.concurrent.ListenableFuture onGetChildrenOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.lang.String,int,int,androidx.media3.session.MediaLibraryService$LibraryParams)>(r3, r0, i0, i1, r1);

        return $r4;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$getItem$56(java.lang.String, androidx.media3.session.MediaLibrarySessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        java.lang.String r0;
        androidx.media3.session.MediaLibrarySessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.media3.session.MediaLibrarySessionImpl;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter3: int;

        $r3 = virtualinvoke r1.<androidx.media3.session.MediaLibrarySessionImpl: com.google.common.util.concurrent.ListenableFuture onGetItemOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.lang.String)>(r2, r0);

        return $r3;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$getLibraryRoot$55(androidx.media3.session.MediaLibraryService$LibraryParams, androidx.media3.session.MediaLibrarySessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.session.MediaLibraryService$LibraryParams r0;
        androidx.media3.session.MediaLibrarySessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @parameter0: androidx.media3.session.MediaLibraryService$LibraryParams;

        r1 := @parameter1: androidx.media3.session.MediaLibrarySessionImpl;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter3: int;

        $r3 = virtualinvoke r1.<androidx.media3.session.MediaLibrarySessionImpl: com.google.common.util.concurrent.ListenableFuture onGetLibraryRootOnHandler(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.MediaLibraryService$LibraryParams)>(r2, r0);

        return $r3;
    }

    private static void lambda$setTrackSelectionParameters$54(androidx.media3.common.TrackSelectionParameters, androidx.media3.session.PlayerWrapper)
    {
        androidx.media3.common.TrackSelectionParameters r0;
        androidx.media3.session.PlayerWrapper r1;

        r0 := @parameter0: androidx.media3.common.TrackSelectionParameters;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        virtualinvoke r1.<androidx.media3.session.PlayerWrapper: void setTrackSelectionParameters(androidx.media3.common.TrackSelectionParameters)>(r0);

        return;
    }

    private void lambda$flushCommandQueue$53(androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.ConnectedControllersManager $r2;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        $r2 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        virtualinvoke $r2.<androidx.media3.session.ConnectedControllersManager: void flushCommandQueue(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        return;
    }

    private static void lambda$setPlayWhenReady$52(boolean, androidx.media3.session.PlayerWrapper)
    {
        boolean z0;
        androidx.media3.session.PlayerWrapper r0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: androidx.media3.session.PlayerWrapper;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void setPlayWhenReady(boolean)>(z0);

        return;
    }

    private static void lambda$setDeviceMuted$51(boolean, androidx.media3.session.PlayerWrapper)
    {
        boolean z0;
        androidx.media3.session.PlayerWrapper r0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: androidx.media3.session.PlayerWrapper;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void setDeviceMuted(boolean)>(z0);

        return;
    }

    private static void lambda$setDeviceVolume$50(int, androidx.media3.session.PlayerWrapper)
    {
        int i0;
        androidx.media3.session.PlayerWrapper r0;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media3.session.PlayerWrapper;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void setDeviceVolume(int)>(i0);

        return;
    }

    private static void lambda$setVolume$49(float, androidx.media3.session.PlayerWrapper)
    {
        float f0;
        androidx.media3.session.PlayerWrapper r0;

        f0 := @parameter0: float;

        r0 := @parameter1: androidx.media3.session.PlayerWrapper;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void setVolume(float)>(f0);

        return;
    }

    private static void lambda$setVideoSurface$48(android.view.Surface, androidx.media3.session.PlayerWrapper)
    {
        android.view.Surface r0;
        androidx.media3.session.PlayerWrapper r1;

        r0 := @parameter0: android.view.Surface;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        virtualinvoke r1.<androidx.media3.session.PlayerWrapper: void setVideoSurface(android.view.Surface)>(r0);

        return;
    }

    private static void lambda$setShuffleModeEnabled$47(boolean, androidx.media3.session.PlayerWrapper)
    {
        boolean z0;
        androidx.media3.session.PlayerWrapper r0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: androidx.media3.session.PlayerWrapper;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void setShuffleModeEnabled(boolean)>(z0);

        return;
    }

    private static void lambda$setRepeatMode$46(int, androidx.media3.session.PlayerWrapper)
    {
        int i0;
        androidx.media3.session.PlayerWrapper r0;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.media3.session.PlayerWrapper;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void setRepeatMode(int)>(i0);

        return;
    }

    private static void lambda$moveMediaItems$45(int, int, int, androidx.media3.session.PlayerWrapper)
    {
        int i0, i1, i2;
        androidx.media3.session.PlayerWrapper r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: androidx.media3.session.PlayerWrapper;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void moveMediaItems(int,int,int)>(i0, i1, i2);

        return;
    }

    private static void lambda$moveMediaItem$44(int, int, androidx.media3.session.PlayerWrapper)
    {
        int i0, i1;
        androidx.media3.session.PlayerWrapper r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: androidx.media3.session.PlayerWrapper;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void moveMediaItem(int,int)>(i0, i1);

        return;
    }

    private void lambda$removeMediaItems$43(int, int, androidx.media3.session.PlayerWrapper, androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaSessionStub r0;
        int i0, i1, $i2, $i3;
        androidx.media3.session.PlayerWrapper r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: androidx.media3.session.PlayerWrapper;

        r2 := @parameter3: androidx.media3.session.MediaSession$ControllerInfo;

        $i2 = specialinvoke r0.<androidx.media3.session.MediaSessionStub: int maybeCorrectMediaItemIndex(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.PlayerWrapper,int)>(r2, r1, i0);

        $i3 = specialinvoke r0.<androidx.media3.session.MediaSessionStub: int maybeCorrectMediaItemIndex(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.PlayerWrapper,int)>(r2, r1, i1);

        virtualinvoke r1.<androidx.media3.session.PlayerWrapper: void removeMediaItems(int,int)>($i2, $i3);

        return;
    }

    private void lambda$removeMediaItem$42(int, androidx.media3.session.PlayerWrapper, androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaSessionStub r0;
        int i0, $i1;
        androidx.media3.session.PlayerWrapper r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        $i1 = specialinvoke r0.<androidx.media3.session.MediaSessionStub: int maybeCorrectMediaItemIndex(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.PlayerWrapper,int)>(r2, r1, i0);

        virtualinvoke r1.<androidx.media3.session.PlayerWrapper: void removeMediaItem(int)>($i1);

        return;
    }

    private void lambda$addMediaItemsWithIndex$41(int, androidx.media3.session.PlayerWrapper, androidx.media3.session.MediaSession$ControllerInfo, java.util.List)
    {
        androidx.media3.session.MediaSessionStub r0;
        int i0, $i1;
        androidx.media3.session.PlayerWrapper r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        java.util.List r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        r3 := @parameter3: java.util.List;

        $i1 = specialinvoke r0.<androidx.media3.session.MediaSessionStub: int maybeCorrectMediaItemIndex(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.PlayerWrapper,int)>(r2, r1, i0);

        virtualinvoke r1.<androidx.media3.session.PlayerWrapper: void addMediaItems(int,java.util.List)>($i1, r3);

        return;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$addMediaItemsWithIndex$40(java.util.List, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        java.util.List r0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter3: int;

        $r3 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onAddMediaItemsOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>(r2, r0);

        return $r3;
    }

    private static void lambda$addMediaItems$39(androidx.media3.session.PlayerWrapper, androidx.media3.session.MediaSession$ControllerInfo, java.util.List)
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.util.List r2;

        r0 := @parameter0: androidx.media3.session.PlayerWrapper;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter2: java.util.List;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void addMediaItems(java.util.List)>(r2);

        return;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$addMediaItems$38(java.util.List, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        java.util.List r0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter3: int;

        $r3 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onAddMediaItemsOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>(r2, r0);

        return $r3;
    }

    private void lambda$addMediaItemWithIndex$37(int, androidx.media3.session.PlayerWrapper, androidx.media3.session.MediaSession$ControllerInfo, java.util.List)
    {
        androidx.media3.session.MediaSessionStub r0;
        int i0, $i1;
        androidx.media3.session.PlayerWrapper r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        java.util.List r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        r3 := @parameter3: java.util.List;

        $i1 = specialinvoke r0.<androidx.media3.session.MediaSessionStub: int maybeCorrectMediaItemIndex(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.PlayerWrapper,int)>(r2, r1, i0);

        virtualinvoke r1.<androidx.media3.session.PlayerWrapper: void addMediaItems(int,java.util.List)>($i1, r3);

        return;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$addMediaItemWithIndex$36(androidx.media3.common.MediaItem, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.common.MediaItem r0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0;
        com.google.common.collect.ImmutableList $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: androidx.media3.common.MediaItem;

        r1 := @parameter1: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter3: int;

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r0);

        $r4 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onAddMediaItemsOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>(r2, $r3);

        return $r4;
    }

    private static void lambda$addMediaItem$35(androidx.media3.session.PlayerWrapper, androidx.media3.session.MediaSession$ControllerInfo, java.util.List)
    {
        androidx.media3.session.PlayerWrapper r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        java.util.List r2;

        r0 := @parameter0: androidx.media3.session.PlayerWrapper;

        r1 := @parameter1: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter2: java.util.List;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void addMediaItems(java.util.List)>(r2);

        return;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$addMediaItem$34(androidx.media3.common.MediaItem, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.common.MediaItem r0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0;
        com.google.common.collect.ImmutableList $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: androidx.media3.common.MediaItem;

        r1 := @parameter1: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter3: int;

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r0);

        $r4 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onAddMediaItemsOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>(r2, $r3);

        return $r4;
    }

    private static void lambda$setPlaylistMetadata$33(androidx.media3.common.MediaMetadata, androidx.media3.session.PlayerWrapper)
    {
        androidx.media3.common.MediaMetadata r0;
        androidx.media3.session.PlayerWrapper r1;

        r0 := @parameter0: androidx.media3.common.MediaMetadata;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        virtualinvoke r1.<androidx.media3.session.PlayerWrapper: void setPlaylistMetadata(androidx.media3.common.MediaMetadata)>(r0);

        return;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$setMediaItemsWithStartIndex$32(java.util.List, int, long, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        java.util.List r0;
        int i0, i2, $i3, $i5;
        long l1, $l6;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        androidx.media3.session.PlayerWrapper $r3, $r4;
        com.google.common.util.concurrent.ListenableFuture $r8;

        r0 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        r1 := @parameter3: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter4: androidx.media3.session.MediaSession$ControllerInfo;

        i2 := @parameter5: int;

        if i0 != -1 goto label1;

        $r4 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $i3 = virtualinvoke $r4.<androidx.media3.session.PlayerWrapper: int getCurrentMediaItemIndex()>();

        $i5 = $i3;

        goto label2;

     label1:
        $i5 = i0;

     label2:
        if i0 != -1 goto label3;

        $r3 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $l6 = virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: long getCurrentPosition()>();

        goto label4;

     label3:
        $l6 = l1;

     label4:
        $r8 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onSetMediaItemsOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.util.List,int,long)>(r2, r0, $i5, $l6);

        return $r8;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$setMediaItemsWithResetPosition$31(java.util.List, boolean, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        java.util.List r0;
        boolean z0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0, $i3;
        androidx.media3.session.PlayerWrapper $r3, $r4;
        long $l4;
        com.google.common.util.concurrent.ListenableFuture $r8;

        r0 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        r1 := @parameter2: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter3: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter4: int;

        if z0 == 0 goto label1;

        $i3 = -1;

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $i3 = virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: int getCurrentMediaItemIndex()>();

     label2:
        if z0 == 0 goto label3;

        $l4 = -9223372036854775807L;

        goto label4;

     label3:
        $r4 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $l4 = virtualinvoke $r4.<androidx.media3.session.PlayerWrapper: long getCurrentPosition()>();

     label4:
        $r8 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onSetMediaItemsOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.util.List,int,long)>(r2, r0, $i3, $l4);

        return $r8;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$setMediaItemWithResetPosition$30(androidx.media3.common.MediaItem, boolean, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.common.MediaItem r0;
        boolean z0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0, $i3;
        androidx.media3.session.PlayerWrapper $r3, $r4;
        com.google.common.collect.ImmutableList $r7;
        long $l4;
        com.google.common.util.concurrent.ListenableFuture $r8;

        r0 := @parameter0: androidx.media3.common.MediaItem;

        z0 := @parameter1: boolean;

        r1 := @parameter2: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter3: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter4: int;

        $r7 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r0);

        if z0 == 0 goto label1;

        $i3 = -1;

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $i3 = virtualinvoke $r3.<androidx.media3.session.PlayerWrapper: int getCurrentMediaItemIndex()>();

     label2:
        if z0 == 0 goto label3;

        $l4 = -9223372036854775807L;

        goto label4;

     label3:
        $r4 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        $l4 = virtualinvoke $r4.<androidx.media3.session.PlayerWrapper: long getCurrentPosition()>();

     label4:
        $r8 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onSetMediaItemsOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.util.List,int,long)>(r2, $r7, $i3, $l4);

        return $r8;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$setMediaItemWithStartPosition$29(androidx.media3.common.MediaItem, long, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.common.MediaItem r0;
        long l0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i1;
        com.google.common.collect.ImmutableList $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: androidx.media3.common.MediaItem;

        l0 := @parameter1: long;

        r1 := @parameter2: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter3: androidx.media3.session.MediaSession$ControllerInfo;

        i1 := @parameter4: int;

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>(r0);

        $r4 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onSetMediaItemsOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.util.List,int,long)>(r2, $r3, 0, l0);

        return $r4;
    }

    private static void lambda$setPlaybackParameters$28(androidx.media3.common.PlaybackParameters, androidx.media3.session.PlayerWrapper)
    {
        androidx.media3.common.PlaybackParameters r0;
        androidx.media3.session.PlayerWrapper r1;

        r0 := @parameter0: androidx.media3.common.PlaybackParameters;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        virtualinvoke r1.<androidx.media3.session.PlayerWrapper: void setPlaybackParameters(androidx.media3.common.PlaybackParameters)>(r0);

        return;
    }

    private static void lambda$setPlaybackSpeed$27(float, androidx.media3.session.PlayerWrapper)
    {
        float f0;
        androidx.media3.session.PlayerWrapper r0;

        f0 := @parameter0: float;

        r0 := @parameter1: androidx.media3.session.PlayerWrapper;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void setPlaybackSpeed(float)>(f0);

        return;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$setRating$26(androidx.media3.common.Rating, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.common.Rating r0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @parameter0: androidx.media3.common.Rating;

        r1 := @parameter1: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter3: int;

        $r3 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onSetRatingOnHandler(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.common.Rating)>(r2, r0);

        return $r3;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$setRatingWithMediaId$25(java.lang.String, androidx.media3.common.Rating, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        java.lang.String r0;
        androidx.media3.common.Rating r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.MediaSession$ControllerInfo r3;
        int i0;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: androidx.media3.common.Rating;

        r2 := @parameter2: androidx.media3.session.MediaSessionImpl;

        r3 := @parameter3: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter4: int;

        $r4 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onSetRatingOnHandler(androidx.media3.session.MediaSession$ControllerInfo,java.lang.String,androidx.media3.common.Rating)>(r3, r0, r1);

        return $r4;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$onCustomCommand$24(androidx.media3.session.SessionCommand, android.os.Bundle, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.session.SessionCommand r0;
        android.os.Bundle r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.MediaSession$ControllerInfo r3;
        int i0;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: androidx.media3.session.SessionCommand;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: androidx.media3.session.MediaSessionImpl;

        r3 := @parameter3: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter4: int;

        $r4 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: com.google.common.util.concurrent.ListenableFuture onCustomCommandOnHandler(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommand,android.os.Bundle)>(r3, r0, r1);

        return $r4;
    }

    private void lambda$seekToWithMediaItemIndex$23(int, long, androidx.media3.session.PlayerWrapper, androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaSessionStub r0;
        int i0, $i2;
        long l1;
        androidx.media3.session.PlayerWrapper r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: androidx.media3.session.PlayerWrapper;

        r2 := @parameter3: androidx.media3.session.MediaSession$ControllerInfo;

        $i2 = specialinvoke r0.<androidx.media3.session.MediaSessionStub: int maybeCorrectMediaItemIndex(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.PlayerWrapper,int)>(r2, r1, i0);

        virtualinvoke r1.<androidx.media3.session.PlayerWrapper: void seekTo(int,long)>($i2, l1);

        return;
    }

    private static void lambda$seekTo$22(long, androidx.media3.session.PlayerWrapper)
    {
        long l0;
        androidx.media3.session.PlayerWrapper r0;

        l0 := @parameter0: long;

        r0 := @parameter1: androidx.media3.session.PlayerWrapper;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void seekTo(long)>(l0);

        return;
    }

    private void lambda$seekToDefaultPositionWithMediaItemIndex$21(int, androidx.media3.session.PlayerWrapper, androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.session.MediaSessionStub r0;
        int i0, $i1;
        androidx.media3.session.PlayerWrapper r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        $i1 = specialinvoke r0.<androidx.media3.session.MediaSessionStub: int maybeCorrectMediaItemIndex(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.PlayerWrapper,int)>(r2, r1, i0);

        virtualinvoke r1.<androidx.media3.session.PlayerWrapper: void seekToDefaultPosition(int)>($i1);

        return;
    }

    private static void lambda$seekToDefaultPosition$20(androidx.media3.session.PlayerWrapper)
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @parameter0: androidx.media3.session.PlayerWrapper;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void seekToDefaultPosition()>();

        return;
    }

    private void lambda$play$19(androidx.media3.session.PlayerWrapper)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.PlayerWrapper r1;
        androidx.media3.session.MediaSessionImpl r2;
        java.lang.ref.WeakReference $r3;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.PlayerWrapper;

        $r3 = r0.<androidx.media3.session.MediaSessionStub: java.lang.ref.WeakReference sessionImpl>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (androidx.media3.session.MediaSessionImpl) $r4;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $z1 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: boolean onPlayRequested()>();

        if $z1 == 0 goto label3;

        virtualinvoke r1.<androidx.media3.session.PlayerWrapper: void play()>();

     label3:
        return;
    }

    private void lambda$release$18(androidx.media3.session.IMediaController)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.IMediaController r1;
        androidx.media3.session.ConnectedControllersManager $r2;
        android.os.IBinder $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        $r2 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $r3 = interfaceinvoke r1.<androidx.media3.session.IMediaController: android.os.IBinder asBinder()>();

        virtualinvoke $r2.<androidx.media3.session.ConnectedControllersManager: void removeController(java.lang.Object)>($r3);

        return;
    }

    private static void lambda$stop$17(androidx.media3.session.PlayerWrapper)
    {
        androidx.media3.session.PlayerWrapper r0;

        r0 := @parameter0: androidx.media3.session.PlayerWrapper;

        virtualinvoke r0.<androidx.media3.session.PlayerWrapper: void stop()>();

        return;
    }

    private void lambda$connect$16(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.MediaSessionImpl, androidx.media3.session.IMediaController)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.IMediaController r3;
        androidx.media3.session.PlayerWrapper r4;
        androidx.media3.session.PlayerInfo r5;
        androidx.media3.session.ConnectionState r6, $r21;
        java.lang.Throwable r7, r8, $r36, $r37, $r38, $r39, $r40, $r41, $r42, r43, r46, r48, r49, r50;
        java.util.Set $r9;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, z7;
        androidx.media3.session.MediaSession$ControllerCb $r10;
        androidx.media3.session.MediaSessionStub$Controller2Cb $r11, $r13;
        java.lang.Object $r12, $r20;
        androidx.media3.session.ConnectedControllersManager $r14, $r17, $r18;
        androidx.media3.common.Player$Commands $r15, $r24, $r25, $r34;
        androidx.media3.session.SessionCommands $r16, $r23, $r35;
        androidx.media3.session.SequencedFutureManager $r19, r47;
        android.app.PendingIntent $r22;
        androidx.media3.session.SessionToken $r26;
        android.os.Bundle $r27, $r28;
        int $i0;
        java.lang.StringBuilder $r29, $r30, $r31, $r32;
        java.lang.String $r33;
        android.os.IBinder r44;
        androidx.media3.session.MediaSession$ConnectionResult r45;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.MediaSessionImpl;

        r3 := @parameter2: androidx.media3.session.IMediaController;

        z7 = 0;

     label01:
        $r9 = r0.<androidx.media3.session.MediaSessionStub: java.util.Set pendingControllers>;

        interfaceinvoke $r9.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        $z1 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z1 == 0 goto label07;

     label02:
        if z7 != 0 goto label06;

     label03:
        interfaceinvoke r3.<androidx.media3.session.IMediaController: void onDisconnected(int)>(0);

     label04:
        goto label06;

     label05:
        $r38 := @caughtexception;

        r43 = $r38;

     label06:
        return;

     label07:
        $r10 = virtualinvoke r1.<androidx.media3.session.MediaSession$ControllerInfo: androidx.media3.session.MediaSession$ControllerCb getControllerCb()>();

        $r11 = (androidx.media3.session.MediaSessionStub$Controller2Cb) $r10;

        $r12 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r11);

        $r13 = (androidx.media3.session.MediaSessionStub$Controller2Cb) $r12;

        r44 = virtualinvoke $r13.<androidx.media3.session.MediaSessionStub$Controller2Cb: android.os.IBinder getCallbackBinder()>();

        r45 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.MediaSession$ConnectionResult onConnectOnHandler(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        $z2 = r45.<androidx.media3.session.MediaSession$ConnectionResult: boolean isAccepted>;

        if $z2 != 0 goto label13;

        $z6 = virtualinvoke r1.<androidx.media3.session.MediaSession$ControllerInfo: boolean isTrusted()>();

        if $z6 != 0 goto label13;

     label08:
        if z7 != 0 goto label12;

     label09:
        interfaceinvoke r3.<androidx.media3.session.IMediaController: void onDisconnected(int)>(0);

     label10:
        goto label12;

     label11:
        $r40 := @caughtexception;

        r46 = $r40;

     label12:
        return;

     label13:
        $z3 = r45.<androidx.media3.session.MediaSession$ConnectionResult: boolean isAccepted>;

        if $z3 != 0 goto label14;

        $r35 = <androidx.media3.session.SessionCommands: androidx.media3.session.SessionCommands EMPTY>;

        $r34 = <androidx.media3.common.Player$Commands: androidx.media3.common.Player$Commands EMPTY>;

        r45 = staticinvoke <androidx.media3.session.MediaSession$ConnectionResult: androidx.media3.session.MediaSession$ConnectionResult accept(androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>($r35, $r34);

     label14:
        $r14 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $z4 = virtualinvoke $r14.<androidx.media3.session.ConnectedControllersManager: boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        if $z4 == 0 goto label15;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Controller ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has sent connection request multiple times");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <androidx.media3.common.util.Log: void w(java.lang.String,java.lang.String)>("MediaSessionStub", $r33);

     label15:
        $r17 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $r16 = r45.<androidx.media3.session.MediaSession$ConnectionResult: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r15 = r45.<androidx.media3.session.MediaSession$ConnectionResult: androidx.media3.common.Player$Commands availablePlayerCommands>;

        virtualinvoke $r17.<androidx.media3.session.ConnectedControllersManager: void addController(java.lang.Object,androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands)>(r44, r1, $r16, $r15);

        $r18 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $r19 = virtualinvoke $r18.<androidx.media3.session.ConnectedControllersManager: androidx.media3.session.SequencedFutureManager getSequencedFutureManager(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        $r20 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)>($r19);

        r47 = (androidx.media3.session.SequencedFutureManager) $r20;

        r4 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        r5 = virtualinvoke r4.<androidx.media3.session.PlayerWrapper: androidx.media3.session.PlayerInfo createPlayerInfoForBundling()>();

        $r21 = new androidx.media3.session.ConnectionState;

        $r22 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: android.app.PendingIntent getSessionActivity()>();

        $r23 = r45.<androidx.media3.session.MediaSession$ConnectionResult: androidx.media3.session.SessionCommands availableSessionCommands>;

        $r24 = r45.<androidx.media3.session.MediaSession$ConnectionResult: androidx.media3.common.Player$Commands availablePlayerCommands>;

        $r25 = virtualinvoke r4.<androidx.media3.session.PlayerWrapper: androidx.media3.common.Player$Commands getAvailableCommands()>();

        $r26 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.SessionToken getToken()>();

        $r27 = virtualinvoke $r26.<androidx.media3.session.SessionToken: android.os.Bundle getExtras()>();

        specialinvoke $r21.<androidx.media3.session.ConnectionState: void <init>(int,int,androidx.media3.session.IMediaSession,android.app.PendingIntent,androidx.media3.session.SessionCommands,androidx.media3.common.Player$Commands,androidx.media3.common.Player$Commands,android.os.Bundle,androidx.media3.session.PlayerInfo)>(1000000202, 1, r0, $r22, $r23, $r24, $r25, $r27, r5);

        r6 = $r21;

        $z5 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z5 == 0 goto label21;

     label16:
        if z7 != 0 goto label20;

     label17:
        interfaceinvoke r3.<androidx.media3.session.IMediaController: void onDisconnected(int)>(0);

     label18:
        goto label20;

     label19:
        $r37 := @caughtexception;

        r48 = $r37;

     label20:
        return;

     label21:
        $i0 = virtualinvoke r47.<androidx.media3.session.SequencedFutureManager: int obtainNextSequenceNumber()>();

        $r28 = virtualinvoke r6.<androidx.media3.session.ConnectionState: android.os.Bundle toBundle()>();

        interfaceinvoke r3.<androidx.media3.session.IMediaController: void onConnected(int,android.os.Bundle)>($i0, $r28);

        z7 = 1;

     label22:
        goto label24;

     label23:
        $r36 := @caughtexception;

        r49 = $r36;

     label24:
        virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: void onPostConnectOnHandler(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

     label25:
        if z7 != 0 goto label35;

     label26:
        interfaceinvoke r3.<androidx.media3.session.IMediaController: void onDisconnected(int)>(0);

     label27:
        goto label35;

     label28:
        $r42 := @caughtexception;

        r50 = $r42;

        goto label35;

     label29:
        $r39 := @caughtexception;

        r7 = $r39;

     label30:
        if z7 != 0 goto label34;

     label31:
        interfaceinvoke r3.<androidx.media3.session.IMediaController: void onDisconnected(int)>(0);

     label32:
        goto label34;

     label33:
        $r41 := @caughtexception;

        r8 = $r41;

     label34:
        throw r7;

     label35:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch android.os.RemoteException from label09 to label10 with label11;
        catch android.os.RemoteException from label17 to label18 with label19;
        catch android.os.RemoteException from label21 to label22 with label23;
        catch android.os.RemoteException from label26 to label27 with label28;
        catch java.lang.Throwable from label01 to label02 with label29;
        catch java.lang.Throwable from label07 to label08 with label29;
        catch java.lang.Throwable from label13 to label16 with label29;
        catch java.lang.Throwable from label21 to label25 with label29;
        catch android.os.RemoteException from label31 to label32 with label33;
        catch java.lang.Throwable from label29 to label30 with label29;
    }

    private static void lambda$handleSessionTaskWhenReady$15(androidx.media3.session.MediaSessionImpl, com.google.common.util.concurrent.SettableFuture, androidx.media3.common.util.Consumer, com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.media3.session.MediaSessionImpl r0;
        com.google.common.util.concurrent.SettableFuture r1;
        androidx.media3.common.util.Consumer r2;
        com.google.common.util.concurrent.ListenableFuture r3;
        java.lang.Throwable r4, $r5;
        boolean $z0;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter1: com.google.common.util.concurrent.SettableFuture;

        r2 := @parameter2: androidx.media3.common.util.Consumer;

        r3 := @parameter3: com.google.common.util.concurrent.ListenableFuture;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>(null);

        return;

     label1:
        interfaceinvoke r2.<androidx.media3.common.util.Consumer: void accept(java.lang.Object)>(r3);

        virtualinvoke r1.<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>(null);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r4 = $r5;

        virtualinvoke r1.<com.google.common.util.concurrent.SettableFuture: boolean setException(java.lang.Throwable)>(r4);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void lambda$dispatchSessionTaskWithSessionCommand$14(androidx.media3.session.MediaSession$ControllerInfo, androidx.media3.session.SessionCommand, int, int, androidx.media3.session.MediaSessionStub$SessionTask, androidx.media3.session.MediaSessionImpl)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        androidx.media3.session.SessionCommand r2;
        int i0, i1;
        androidx.media3.session.MediaSessionStub$SessionTask r3;
        androidx.media3.session.MediaSessionImpl r4;
        androidx.media3.session.ConnectedControllersManager $r5, $r6, $r9;
        boolean $z0, $z1, $z2;
        androidx.media3.session.SessionResult $r8, $r10;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        r2 := @parameter1: androidx.media3.session.SessionCommand;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: androidx.media3.session.MediaSessionStub$SessionTask;

        r4 := @parameter5: androidx.media3.session.MediaSessionImpl;

        $r5 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $z0 = virtualinvoke $r5.<androidx.media3.session.ConnectedControllersManager: boolean isConnected(androidx.media3.session.MediaSession$ControllerInfo)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        if r2 == null goto label2;

        $r9 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $z2 = virtualinvoke $r9.<androidx.media3.session.ConnectedControllersManager: boolean isSessionCommandAvailable(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.SessionCommand)>(r1, r2);

        if $z2 != 0 goto label3;

        $r10 = new androidx.media3.session.SessionResult;

        specialinvoke $r10.<androidx.media3.session.SessionResult: void <init>(int)>(-4);

        staticinvoke <androidx.media3.session.MediaSessionStub: void sendSessionResult(androidx.media3.session.MediaSession$ControllerInfo,int,androidx.media3.session.SessionResult)>(r1, i0, $r10);

        return;

     label2:
        $r6 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $z1 = virtualinvoke $r6.<androidx.media3.session.ConnectedControllersManager: boolean isSessionCommandAvailable(androidx.media3.session.MediaSession$ControllerInfo,int)>(r1, i1);

        if $z1 != 0 goto label3;

        $r8 = new androidx.media3.session.SessionResult;

        specialinvoke $r8.<androidx.media3.session.SessionResult: void <init>(int)>(-4);

        staticinvoke <androidx.media3.session.MediaSessionStub: void sendSessionResult(androidx.media3.session.MediaSession$ControllerInfo,int,androidx.media3.session.SessionResult)>(r1, i0, $r8);

        return;

     label3:
        interfaceinvoke r3.<androidx.media3.session.MediaSessionStub$SessionTask: java.lang.Object run(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>(r4, r1, i0);

        return;
    }

    private void lambda$queueSessionTaskWithPlayerCommand$13(androidx.media3.session.MediaSession$ControllerInfo, int, int, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSessionStub$SessionTask)
    {
        androidx.media3.session.MediaSessionStub r0;
        androidx.media3.session.MediaSession$ControllerInfo r1;
        int i0, i1, i2;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.MediaSessionStub$SessionTask r3;
        androidx.media3.session.ConnectedControllersManager $r4, $r5;
        boolean $z0;
        androidx.media3.session.ConnectedControllersManager$AsyncCommand $r6;
        androidx.media3.session.SessionResult $r8, $r9;

        r0 := @this: androidx.media3.session.MediaSessionStub;

        r1 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media3.session.MediaSessionImpl;

        r3 := @parameter4: androidx.media3.session.MediaSessionStub$SessionTask;

        $r4 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $z0 = virtualinvoke $r4.<androidx.media3.session.ConnectedControllersManager: boolean isPlayerCommandAvailable(androidx.media3.session.MediaSession$ControllerInfo,int)>(r1, i0);

        if $z0 != 0 goto label1;

        $r9 = new androidx.media3.session.SessionResult;

        specialinvoke $r9.<androidx.media3.session.SessionResult: void <init>(int)>(-4);

        staticinvoke <androidx.media3.session.MediaSessionStub: void sendSessionResult(androidx.media3.session.MediaSession$ControllerInfo,int,androidx.media3.session.SessionResult)>(r1, i1, $r9);

        return;

     label1:
        i2 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: int onPlayerCommandRequestOnHandler(androidx.media3.session.MediaSession$ControllerInfo,int)>(r1, i0);

        if i2 == 0 goto label2;

        $r8 = new androidx.media3.session.SessionResult;

        specialinvoke $r8.<androidx.media3.session.SessionResult: void <init>(int)>(i2);

        staticinvoke <androidx.media3.session.MediaSessionStub: void sendSessionResult(androidx.media3.session.MediaSession$ControllerInfo,int,androidx.media3.session.SessionResult)>(r1, i1, $r8);

        return;

     label2:
        if i0 != 27 goto label3;

        interfaceinvoke r3.<androidx.media3.session.MediaSessionStub$SessionTask: java.lang.Object run(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>(r2, r1, i1);

        goto label4;

     label3:
        $r5 = r0.<androidx.media3.session.MediaSessionStub: androidx.media3.session.ConnectedControllersManager connectedControllersManager>;

        $r6 = dynamicinvoke "run" <androidx.media3.session.ConnectedControllersManager$AsyncCommand (androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>(r3, r2, r1, i1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$queueSessionTaskWithPlayerCommand$12(androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__());

        virtualinvoke $r5.<androidx.media3.session.ConnectedControllersManager: void addToCommandQueue(androidx.media3.session.MediaSession$ControllerInfo,androidx.media3.session.ConnectedControllersManager$AsyncCommand)>(r1, $r6);

     label4:
        return;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$queueSessionTaskWithPlayerCommand$12(androidx.media3.session.MediaSessionStub$SessionTask, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.session.MediaSessionStub$SessionTask r0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0;
        java.lang.Object $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: androidx.media3.session.MediaSessionStub$SessionTask;

        r1 := @parameter1: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter3: int;

        $r3 = interfaceinvoke r0.<androidx.media3.session.MediaSessionStub$SessionTask: java.lang.Object run(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>(r1, r2, i0);

        $r4 = (com.google.common.util.concurrent.ListenableFuture) $r3;

        return $r4;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$sendLibraryResultWhenReady$11(androidx.media3.session.MediaSessionStub$SessionTask, androidx.media3.session.MediaLibrarySessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.session.MediaSessionStub$SessionTask r0;
        androidx.media3.session.MediaLibrarySessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0;
        androidx.media3.common.util.Consumer $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: androidx.media3.session.MediaSessionStub$SessionTask;

        r1 := @parameter1: androidx.media3.session.MediaLibrarySessionImpl;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter3: int;

        $r3 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaSession$ControllerInfo,int)>(r2, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$sendLibraryResultWhenReady$10(androidx.media3.session.MediaSession$ControllerInfo,int,com.google.common.util.concurrent.ListenableFuture)>, methodtype: void __METHODTYPE__(com.google.common.util.concurrent.ListenableFuture));

        $r4 = staticinvoke <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture handleSessionTaskWhenReady(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int,androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.common.util.Consumer)>(r1, r2, i0, r0, $r3);

        return $r4;
    }

    private static void lambda$sendLibraryResultWhenReady$10(androidx.media3.session.MediaSession$ControllerInfo, int, com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        int i0;
        com.google.common.util.concurrent.ListenableFuture r1;
        java.lang.Object $r2, $r4;
        androidx.media3.session.LibraryResult $r3, r7;
        java.lang.Throwable $r5, $r6, r8, r9;

        r0 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: com.google.common.util.concurrent.ListenableFuture;

     label1:
        $r2 = interfaceinvoke r1.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        $r3 = (androidx.media3.session.LibraryResult) $r2;

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, "LibraryResult must not be null");

        r7 = (androidx.media3.session.LibraryResult) $r4;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r8 = $r5;

        r7 = staticinvoke <androidx.media3.session.LibraryResult: androidx.media3.session.LibraryResult ofError(int)>(1);

        goto label5;

     label4:
        $r6 := @caughtexception;

        r9 = $r6;

        r7 = staticinvoke <androidx.media3.session.LibraryResult: androidx.media3.session.LibraryResult ofError(int)>(-1);

     label5:
        staticinvoke <androidx.media3.session.MediaSessionStub: void sendLibraryResult(androidx.media3.session.MediaSession$ControllerInfo,int,androidx.media3.session.LibraryResult)>(r0, i0, r7);

        return;

        catch java.util.concurrent.CancellationException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
        catch java.lang.InterruptedException from label1 to label2 with label4;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$handleMediaItemsWithStartPositionWhenReady$9(androidx.media3.session.MediaSessionStub$SessionTask, androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.session.MediaSessionStub$SessionTask r0;
        androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.MediaSession$ControllerInfo r3;
        int i0;
        boolean $z0;
        java.lang.Object $r4;
        com.google.common.util.concurrent.ListenableFuture $r5, $r7, $r9;
        com.google.common.util.concurrent.AsyncFunction $r6;
        androidx.media3.session.SessionResult $r8;

        r0 := @parameter0: androidx.media3.session.MediaSessionStub$SessionTask;

        r1 := @parameter1: androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask;

        r2 := @parameter2: androidx.media3.session.MediaSessionImpl;

        r3 := @parameter3: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter4: int;

        $z0 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label1;

        $r8 = new androidx.media3.session.SessionResult;

        specialinvoke $r8.<androidx.media3.session.SessionResult: void <init>(int)>(-100);

        $r9 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r8);

        return $r9;

     label1:
        $r4 = interfaceinvoke r0.<androidx.media3.session.MediaSessionStub$SessionTask: java.lang.Object run(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>(r2, r3, i0);

        $r5 = (com.google.common.util.concurrent.ListenableFuture) $r4;

        $r6 = dynamicinvoke "apply" <com.google.common.util.concurrent.AsyncFunction (androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask)>(r2, r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$handleMediaItemsWithStartPositionWhenReady$8(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask,androidx.media3.session.MediaSession$MediaItemsWithStartPosition)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(androidx.media3.session.MediaSession$MediaItemsWithStartPosition));

        $r7 = staticinvoke <androidx.media3.common.util.Util: com.google.common.util.concurrent.ListenableFuture transformFutureAsync(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction)>($r5, $r6);

        return $r7;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$handleMediaItemsWithStartPositionWhenReady$8(androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask, androidx.media3.session.MediaSession$MediaItemsWithStartPosition) throws java.lang.Exception
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask r1;
        androidx.media3.session.MediaSession$MediaItemsWithStartPosition r2;
        android.os.Handler $r3;
        java.lang.Runnable $r4;
        androidx.media3.session.SessionResult $r5;
        com.google.common.util.concurrent.ListenableFuture $r6;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter1: androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask;

        r2 := @parameter2: androidx.media3.session.MediaSession$MediaItemsWithStartPosition;

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $r4 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask,androidx.media3.session.MediaSession$MediaItemsWithStartPosition)>(r0, r1, r2) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$handleMediaItemsWithStartPositionWhenReady$7(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask,androidx.media3.session.MediaSession$MediaItemsWithStartPosition)>, methodtype: void __METHODTYPE__());

        $r5 = new androidx.media3.session.SessionResult;

        specialinvoke $r5.<androidx.media3.session.SessionResult: void <init>(int)>(0);

        $r6 = staticinvoke <androidx.media3.common.util.Util: com.google.common.util.concurrent.ListenableFuture postOrRunWithCompletion(android.os.Handler,java.lang.Runnable,java.lang.Object)>($r3, $r4, $r5);

        return $r6;
    }

    private static void lambda$handleMediaItemsWithStartPositionWhenReady$7(androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask, androidx.media3.session.MediaSession$MediaItemsWithStartPosition)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask r1;
        androidx.media3.session.MediaSession$MediaItemsWithStartPosition r2;
        boolean $z0;
        androidx.media3.session.PlayerWrapper $r3;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter1: androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask;

        r2 := @parameter2: androidx.media3.session.MediaSession$MediaItemsWithStartPosition;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        interfaceinvoke r1.<androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask: void run(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition)>($r3, r2);

     label1:
        return;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$handleMediaItemsWhenReady$6(androidx.media3.session.MediaSessionStub$SessionTask, androidx.media3.session.MediaSessionStub$MediaItemPlayerTask, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.session.MediaSessionStub$SessionTask r0;
        androidx.media3.session.MediaSessionStub$MediaItemPlayerTask r1;
        androidx.media3.session.MediaSessionImpl r2;
        androidx.media3.session.MediaSession$ControllerInfo r3;
        int i0;
        boolean $z0;
        java.lang.Object $r4;
        com.google.common.util.concurrent.ListenableFuture $r5, $r7, $r9;
        com.google.common.util.concurrent.AsyncFunction $r6;
        androidx.media3.session.SessionResult $r8;

        r0 := @parameter0: androidx.media3.session.MediaSessionStub$SessionTask;

        r1 := @parameter1: androidx.media3.session.MediaSessionStub$MediaItemPlayerTask;

        r2 := @parameter2: androidx.media3.session.MediaSessionImpl;

        r3 := @parameter3: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter4: int;

        $z0 = virtualinvoke r2.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label1;

        $r8 = new androidx.media3.session.SessionResult;

        specialinvoke $r8.<androidx.media3.session.SessionResult: void <init>(int)>(-100);

        $r9 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>($r8);

        return $r9;

     label1:
        $r4 = interfaceinvoke r0.<androidx.media3.session.MediaSessionStub$SessionTask: java.lang.Object run(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>(r2, r3, i0);

        $r5 = (com.google.common.util.concurrent.ListenableFuture) $r4;

        $r6 = dynamicinvoke "apply" <com.google.common.util.concurrent.AsyncFunction (androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionStub$MediaItemPlayerTask,androidx.media3.session.MediaSession$ControllerInfo)>(r2, r1, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture lambda$handleMediaItemsWhenReady$5(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionStub$MediaItemPlayerTask,androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>, methodtype: com.google.common.util.concurrent.ListenableFuture __METHODTYPE__(java.util.List));

        $r7 = staticinvoke <androidx.media3.common.util.Util: com.google.common.util.concurrent.ListenableFuture transformFutureAsync(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction)>($r5, $r6);

        return $r7;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$handleMediaItemsWhenReady$5(androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSessionStub$MediaItemPlayerTask, androidx.media3.session.MediaSession$ControllerInfo, java.util.List) throws java.lang.Exception
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSessionStub$MediaItemPlayerTask r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        java.util.List r3;
        android.os.Handler $r4;
        java.lang.Runnable $r5;
        androidx.media3.session.SessionResult $r6;
        com.google.common.util.concurrent.ListenableFuture $r7;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter1: androidx.media3.session.MediaSessionStub$MediaItemPlayerTask;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        r3 := @parameter3: java.util.List;

        $r4 = virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: android.os.Handler getApplicationHandler()>();

        $r5 = dynamicinvoke "run" <java.lang.Runnable (androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionStub$MediaItemPlayerTask,androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>(r0, r1, r2, r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$handleMediaItemsWhenReady$4(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSessionStub$MediaItemPlayerTask,androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>, methodtype: void __METHODTYPE__());

        $r6 = new androidx.media3.session.SessionResult;

        specialinvoke $r6.<androidx.media3.session.SessionResult: void <init>(int)>(0);

        $r7 = staticinvoke <androidx.media3.common.util.Util: com.google.common.util.concurrent.ListenableFuture postOrRunWithCompletion(android.os.Handler,java.lang.Runnable,java.lang.Object)>($r4, $r5, $r6);

        return $r7;
    }

    private static void lambda$handleMediaItemsWhenReady$4(androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSessionStub$MediaItemPlayerTask, androidx.media3.session.MediaSession$ControllerInfo, java.util.List)
    {
        androidx.media3.session.MediaSessionImpl r0;
        androidx.media3.session.MediaSessionStub$MediaItemPlayerTask r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        java.util.List r3;
        boolean $z0;
        androidx.media3.session.PlayerWrapper $r4;

        r0 := @parameter0: androidx.media3.session.MediaSessionImpl;

        r1 := @parameter1: androidx.media3.session.MediaSessionStub$MediaItemPlayerTask;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        r3 := @parameter3: java.util.List;

        $z0 = virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke r0.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        interfaceinvoke r1.<androidx.media3.session.MediaSessionStub$MediaItemPlayerTask: void run(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>($r4, r2, r3);

     label1:
        return;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$sendSessionResultWhenReady$3(androidx.media3.session.MediaSessionStub$SessionTask, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.session.MediaSessionStub$SessionTask r0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0;
        androidx.media3.common.util.Consumer $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;

        r0 := @parameter0: androidx.media3.session.MediaSessionStub$SessionTask;

        r1 := @parameter1: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter3: int;

        $r3 = dynamicinvoke "accept" <androidx.media3.common.util.Consumer (androidx.media3.session.MediaSession$ControllerInfo,int)>(r2, i0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.media3.session.MediaSessionStub: void lambda$sendSessionResultWhenReady$2(androidx.media3.session.MediaSession$ControllerInfo,int,com.google.common.util.concurrent.ListenableFuture)>, methodtype: void __METHODTYPE__(com.google.common.util.concurrent.ListenableFuture));

        $r4 = staticinvoke <androidx.media3.session.MediaSessionStub: com.google.common.util.concurrent.ListenableFuture handleSessionTaskWhenReady(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int,androidx.media3.session.MediaSessionStub$SessionTask,androidx.media3.common.util.Consumer)>(r1, r2, i0, r0, $r3);

        return $r4;
    }

    private static void lambda$sendSessionResultWhenReady$2(androidx.media3.session.MediaSession$ControllerInfo, int, com.google.common.util.concurrent.ListenableFuture)
    {
        androidx.media3.session.MediaSession$ControllerInfo r0;
        int i0;
        com.google.common.util.concurrent.ListenableFuture r1;
        java.lang.Object $r2, $r4;
        androidx.media3.session.SessionResult $r3, $r6, $r9, r10;
        java.lang.Throwable $r5, $r7, $r8, r11, r12;
        boolean $z0;
        byte $b1;

        r0 := @parameter0: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter1: int;

        r1 := @parameter2: com.google.common.util.concurrent.ListenableFuture;

     label1:
        $r2 = interfaceinvoke r1.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

        $r3 = (androidx.media3.session.SessionResult) $r2;

        $r4 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, "SessionResult must not be null");

        r10 = (androidx.media3.session.SessionResult) $r4;

     label2:
        goto label7;

     label3:
        $r8 := @caughtexception;

        r11 = $r8;

        $r9 = new androidx.media3.session.SessionResult;

        specialinvoke $r9.<androidx.media3.session.SessionResult: void <init>(int)>(1);

        r10 = $r9;

        goto label7;

     label4:
        $r5 := @caughtexception;

        r12 = $r5;

        $r6 = new androidx.media3.session.SessionResult;

        $r7 = virtualinvoke r12.<java.lang.Exception: java.lang.Throwable getCause()>();

        $z0 = $r7 instanceof java.lang.UnsupportedOperationException;

        if $z0 == 0 goto label5;

        $b1 = -6;

        goto label6;

     label5:
        $b1 = -1;

     label6:
        specialinvoke $r6.<androidx.media3.session.SessionResult: void <init>(int)>($b1);

        r10 = $r6;

     label7:
        staticinvoke <androidx.media3.session.MediaSessionStub: void sendSessionResult(androidx.media3.session.MediaSession$ControllerInfo,int,androidx.media3.session.SessionResult)>(r0, i0, r10);

        return;

        catch java.util.concurrent.CancellationException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
        catch java.lang.InterruptedException from label1 to label2 with label4;
    }

    private static com.google.common.util.concurrent.ListenableFuture lambda$sendSessionResultSuccess$1(androidx.media3.session.MediaSessionStub$ControllerPlayerTask, androidx.media3.session.MediaSessionImpl, androidx.media3.session.MediaSession$ControllerInfo, int)
    {
        androidx.media3.session.MediaSessionStub$ControllerPlayerTask r0;
        androidx.media3.session.MediaSessionImpl r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;
        int i0;
        boolean $z0;
        androidx.media3.session.PlayerWrapper $r3;
        androidx.media3.session.SessionResult $r4;
        com.google.common.util.concurrent.ListenableFuture $r5, $r6;

        r0 := @parameter0: androidx.media3.session.MediaSessionStub$ControllerPlayerTask;

        r1 := @parameter1: androidx.media3.session.MediaSessionImpl;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        i0 := @parameter3: int;

        $z0 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: boolean isReleased()>();

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateVoidFuture()>();

        return $r6;

     label1:
        $r3 = virtualinvoke r1.<androidx.media3.session.MediaSessionImpl: androidx.media3.session.PlayerWrapper getPlayerWrapper()>();

        interfaceinvoke r0.<androidx.media3.session.MediaSessionStub$ControllerPlayerTask: void run(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo)>($r3, r2);

        $r4 = new androidx.media3.session.SessionResult;

        specialinvoke $r4.<androidx.media3.session.SessionResult: void <init>(int)>(0);

        staticinvoke <androidx.media3.session.MediaSessionStub: void sendSessionResult(androidx.media3.session.MediaSession$ControllerInfo,int,androidx.media3.session.SessionResult)>(r2, i0, $r4);

        $r5 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateVoidFuture()>();

        return $r5;
    }

    private static void lambda$sendSessionResultSuccess$0(androidx.media3.common.util.Consumer, androidx.media3.session.PlayerWrapper, androidx.media3.session.MediaSession$ControllerInfo)
    {
        androidx.media3.common.util.Consumer r0;
        androidx.media3.session.PlayerWrapper r1;
        androidx.media3.session.MediaSession$ControllerInfo r2;

        r0 := @parameter0: androidx.media3.common.util.Consumer;

        r1 := @parameter1: androidx.media3.session.PlayerWrapper;

        r2 := @parameter2: androidx.media3.session.MediaSession$ControllerInfo;

        interfaceinvoke r0.<androidx.media3.common.util.Consumer: void accept(java.lang.Object)>(r1);

        return;
    }

androidx.media3.session.MediaSessionStub$Controller2Cb
<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>
    public void <init>(androidx.media3.session.IMediaController)
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        androidx.media3.session.IMediaController r1;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        r1 := @parameter0: androidx.media3.session.IMediaController;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController> = r1;

        return;
    }

    public android.os.IBinder getCallbackBinder()
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        androidx.media3.session.IMediaController $r1;
        android.os.IBinder $r2;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        $r1 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        $r2 = interfaceinvoke $r1.<androidx.media3.session.IMediaController: android.os.IBinder asBinder()>();

        return $r2;
    }

    public void onSessionResult(int, androidx.media3.session.SessionResult) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        int i0;
        androidx.media3.session.SessionResult r1;
        androidx.media3.session.IMediaController $r2;
        android.os.Bundle $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.SessionResult;

        $r2 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        $r3 = virtualinvoke r1.<androidx.media3.session.SessionResult: android.os.Bundle toBundle()>();

        interfaceinvoke $r2.<androidx.media3.session.IMediaController: void onSessionResult(int,android.os.Bundle)>(i0, $r3);

        return;
    }

    public void onLibraryResult(int, androidx.media3.session.LibraryResult) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        int i0;
        androidx.media3.session.LibraryResult r1;
        androidx.media3.session.IMediaController $r2;
        android.os.Bundle $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.LibraryResult;

        $r2 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        $r3 = virtualinvoke r1.<androidx.media3.session.LibraryResult: android.os.Bundle toBundle()>();

        interfaceinvoke $r2.<androidx.media3.session.IMediaController: void onLibraryResult(int,android.os.Bundle)>(i0, $r3);

        return;
    }

    public void onPlayerInfoChanged(int, androidx.media3.session.PlayerInfo, androidx.media3.common.Player$Commands, boolean, boolean, int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        int i0, i1;
        androidx.media3.session.PlayerInfo r1;
        androidx.media3.common.Player$Commands r2;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8;
        androidx.media3.session.IMediaController $r3, $r5;
        android.os.Bundle $r4, $r6, $r8;
        androidx.media3.session.PlayerInfo$BundlingExclusions $r7;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.PlayerInfo;

        r2 := @parameter2: androidx.media3.common.Player$Commands;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        i1 := @parameter5: int;

        if i1 == 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        staticinvoke <androidx.media3.common.util.Assertions: void checkState(boolean)>($z6);

        if z0 != 0 goto label03;

        $z5 = virtualinvoke r2.<androidx.media3.common.Player$Commands: boolean contains(int)>(17);

        if $z5 != 0 goto label04;

     label03:
        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        z2 = $z7;

        if z1 != 0 goto label06;

        $z4 = virtualinvoke r2.<androidx.media3.common.Player$Commands: boolean contains(int)>(30);

        if $z4 != 0 goto label07;

     label06:
        $z8 = 1;

        goto label08;

     label07:
        $z8 = 0;

     label08:
        z3 = $z8;

        if i1 < 2 goto label09;

        $r5 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        $r6 = virtualinvoke r1.<androidx.media3.session.PlayerInfo: android.os.Bundle toBundle(androidx.media3.common.Player$Commands,boolean,boolean)>(r2, z0, z1);

        $r7 = new androidx.media3.session.PlayerInfo$BundlingExclusions;

        specialinvoke $r7.<androidx.media3.session.PlayerInfo$BundlingExclusions: void <init>(boolean,boolean)>(z2, z3);

        $r8 = virtualinvoke $r7.<androidx.media3.session.PlayerInfo$BundlingExclusions: android.os.Bundle toBundle()>();

        interfaceinvoke $r5.<androidx.media3.session.IMediaController: void onPlayerInfoChangedWithExclusions(int,android.os.Bundle,android.os.Bundle)>(i0, $r6, $r8);

        goto label10;

     label09:
        $r3 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        $r4 = virtualinvoke r1.<androidx.media3.session.PlayerInfo: android.os.Bundle toBundle(androidx.media3.common.Player$Commands,boolean,boolean)>(r2, z0, 1);

        interfaceinvoke $r3.<androidx.media3.session.IMediaController: void onPlayerInfoChanged(int,android.os.Bundle,boolean)>(i0, $r4, z2);

     label10:
        return;
    }

    public void setCustomLayout(int, java.util.List) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        int i0;
        java.util.List r1;
        androidx.media3.session.IMediaController $r2;
        com.google.common.collect.ImmutableList $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        $r2 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        $r3 = staticinvoke <androidx.media3.common.util.BundleableUtil: com.google.common.collect.ImmutableList toBundleList(java.util.List)>(r1);

        interfaceinvoke $r2.<androidx.media3.session.IMediaController: void onSetCustomLayout(int,java.util.List)>(i0, $r3);

        return;
    }

    public void onAvailableCommandsChangedFromSession(int, androidx.media3.session.SessionCommands, androidx.media3.common.Player$Commands) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        int i0;
        androidx.media3.session.SessionCommands r1;
        androidx.media3.common.Player$Commands r2;
        androidx.media3.session.IMediaController $r3;
        android.os.Bundle $r4, $r5;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.SessionCommands;

        r2 := @parameter2: androidx.media3.common.Player$Commands;

        $r3 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        $r4 = virtualinvoke r1.<androidx.media3.session.SessionCommands: android.os.Bundle toBundle()>();

        $r5 = virtualinvoke r2.<androidx.media3.common.Player$Commands: android.os.Bundle toBundle()>();

        interfaceinvoke $r3.<androidx.media3.session.IMediaController: void onAvailableCommandsChangedFromSession(int,android.os.Bundle,android.os.Bundle)>(i0, $r4, $r5);

        return;
    }

    public void onAvailableCommandsChangedFromPlayer(int, androidx.media3.common.Player$Commands) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        int i0;
        androidx.media3.common.Player$Commands r1;
        androidx.media3.session.IMediaController $r2;
        android.os.Bundle $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.common.Player$Commands;

        $r2 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        $r3 = virtualinvoke r1.<androidx.media3.common.Player$Commands: android.os.Bundle toBundle()>();

        interfaceinvoke $r2.<androidx.media3.session.IMediaController: void onAvailableCommandsChangedFromPlayer(int,android.os.Bundle)>(i0, $r3);

        return;
    }

    public void sendCustomCommand(int, androidx.media3.session.SessionCommand, android.os.Bundle) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        int i0;
        androidx.media3.session.SessionCommand r1;
        android.os.Bundle r2, $r4;
        androidx.media3.session.IMediaController $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.SessionCommand;

        r2 := @parameter2: android.os.Bundle;

        $r3 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        $r4 = virtualinvoke r1.<androidx.media3.session.SessionCommand: android.os.Bundle toBundle()>();

        interfaceinvoke $r3.<androidx.media3.session.IMediaController: void onCustomCommand(int,android.os.Bundle,android.os.Bundle)>(i0, $r4, r2);

        return;
    }

    public void onChildrenChanged(int, java.lang.String, int, androidx.media3.session.MediaLibraryService$LibraryParams) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        int i0, i1;
        java.lang.String r1;
        androidx.media3.session.MediaLibraryService$LibraryParams r2;
        androidx.media3.session.IMediaController $r3;
        android.os.Bundle $r5;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media3.session.MediaLibraryService$LibraryParams;

        $r3 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        if r2 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke r2.<androidx.media3.session.MediaLibraryService$LibraryParams: android.os.Bundle toBundle()>();

     label2:
        interfaceinvoke $r3.<androidx.media3.session.IMediaController: void onChildrenChanged(int,java.lang.String,int,android.os.Bundle)>(i0, r1, i1, $r5);

        return;
    }

    public void onSearchResultChanged(int, java.lang.String, int, androidx.media3.session.MediaLibraryService$LibraryParams) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        int i0, i1;
        java.lang.String r1;
        androidx.media3.session.MediaLibraryService$LibraryParams r2;
        androidx.media3.session.IMediaController $r3;
        android.os.Bundle $r5;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: androidx.media3.session.MediaLibraryService$LibraryParams;

        $r3 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        if r2 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke r2.<androidx.media3.session.MediaLibraryService$LibraryParams: android.os.Bundle toBundle()>();

     label2:
        interfaceinvoke $r3.<androidx.media3.session.IMediaController: void onSearchResultChanged(int,java.lang.String,int,android.os.Bundle)>(i0, r1, i1, $r5);

        return;
    }

    public void onDisconnected(int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        int i0;
        androidx.media3.session.IMediaController $r1;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        interfaceinvoke $r1.<androidx.media3.session.IMediaController: void onDisconnected(int)>(i0);

        return;
    }

    public void onPeriodicSessionPositionInfoChanged(int, androidx.media3.session.SessionPositionInfo, boolean, boolean) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        int i0;
        androidx.media3.session.SessionPositionInfo r1;
        boolean z0, z1;
        androidx.media3.session.IMediaController $r2;
        android.os.Bundle $r3;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        i0 := @parameter0: int;

        r1 := @parameter1: androidx.media3.session.SessionPositionInfo;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r2 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        $r3 = virtualinvoke r1.<androidx.media3.session.SessionPositionInfo: android.os.Bundle toBundle(boolean,boolean)>(z0, z1);

        interfaceinvoke $r2.<androidx.media3.session.IMediaController: void onPeriodicSessionPositionInfoChanged(int,android.os.Bundle)>(i0, $r3);

        return;
    }

    public void onRenderedFirstFrame(int) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        int i0;
        androidx.media3.session.IMediaController $r1;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        interfaceinvoke $r1.<androidx.media3.session.IMediaController: void onRenderedFirstFrame(int)>(i0);

        return;
    }

    public void onSessionExtrasChanged(int, android.os.Bundle) throws android.os.RemoteException
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        int i0;
        android.os.Bundle r1;
        androidx.media3.session.IMediaController $r2;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: androidx.media3.session.IMediaController iController>;

        interfaceinvoke $r2.<androidx.media3.session.IMediaController: void onExtrasChanged(int,android.os.Bundle)>(i0, r1);

        return;
    }

    public int hashCode()
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0;
        java.lang.Object[] $r1;
        android.os.IBinder $r2;
        int $i0;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: android.os.IBinder getCallbackBinder()>();

        $r1[0] = $r2;

        $i0 = staticinvoke <androidx.core.util.ObjectsCompat: int hash(java.lang.Object[])>($r1);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.media3.session.MediaSessionStub$Controller2Cb r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3;
        android.os.IBinder $r4, $r5;
        boolean $z0;

        r0 := @this: androidx.media3.session.MediaSessionStub$Controller2Cb;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == class "Landroidx/media3/session/MediaSessionStub$Controller2Cb;" goto label3;

     label2:
        return 0;

     label3:
        r2 = (androidx.media3.session.MediaSessionStub$Controller2Cb) r1;

        $r4 = virtualinvoke r0.<androidx.media3.session.MediaSessionStub$Controller2Cb: android.os.IBinder getCallbackBinder()>();

        $r5 = virtualinvoke r2.<androidx.media3.session.MediaSessionStub$Controller2Cb: android.os.IBinder getCallbackBinder()>();

        $z0 = staticinvoke <androidx.media3.common.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $z0;
    }

androidx.media3.session.MediaSessionStub$ControllerPlayerTask
<androidx.media3.session.MediaSessionStub$ControllerPlayerTask: void run(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo)>
androidx.media3.session.MediaSessionStub$MediaItemPlayerTask
<androidx.media3.session.MediaSessionStub$MediaItemPlayerTask: void run(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$ControllerInfo,java.util.List)>
androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask
<androidx.media3.session.MediaSessionStub$MediaItemsWithStartPositionPlayerTask: void run(androidx.media3.session.PlayerWrapper,androidx.media3.session.MediaSession$MediaItemsWithStartPosition)>
androidx.media3.session.MediaSessionStub$SessionTask
<androidx.media3.session.MediaSessionStub$SessionTask: java.lang.Object run(androidx.media3.session.MediaSessionImpl,androidx.media3.session.MediaSession$ControllerInfo,int)>
