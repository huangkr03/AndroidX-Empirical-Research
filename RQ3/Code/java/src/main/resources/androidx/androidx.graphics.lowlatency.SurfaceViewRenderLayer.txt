androidx.graphics.lowlatency.SurfaceViewRenderLayer
<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.SurfaceViewRenderLayer$Companion Companion>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer: android.view.SurfaceView surfaceView>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.ParentRenderLayer$Callback mLayerCallback>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.FrameBufferRenderer mFrameBufferRenderer>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.opengl.GLRenderer$RenderTarget mRenderTarget>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.surface.SurfaceControlCompat mParentSurfaceControl>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.BufferTransformer mBufferTransform>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.BufferTransformHintResolver mTransformResolver>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer: int transformHint>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer: int inverse>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer: java.lang.String TAG>
    public void <init>(android.view.SurfaceView)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer r0;
        android.view.SurfaceView r1, $r4;
        androidx.graphics.lowlatency.BufferTransformer $r2;
        androidx.graphics.lowlatency.BufferTransformHintResolver $r3;
        android.view.SurfaceHolder $r5;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$1 $r6;
        android.view.SurfaceHolder$Callback $r7;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        r1 := @parameter0: android.view.SurfaceView;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "surfaceView");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: android.view.SurfaceView surfaceView> = r1;

        $r2 = new androidx.graphics.lowlatency.BufferTransformer;

        specialinvoke $r2.<androidx.graphics.lowlatency.BufferTransformer: void <init>()>();

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.BufferTransformer mBufferTransform> = $r2;

        $r3 = new androidx.graphics.lowlatency.BufferTransformHintResolver;

        specialinvoke $r3.<androidx.graphics.lowlatency.BufferTransformHintResolver: void <init>()>();

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.BufferTransformHintResolver mTransformResolver> = $r3;

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: int transformHint> = -1;

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: int inverse> = -1;

        $r4 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: android.view.SurfaceView surfaceView>;

        $r5 = virtualinvoke $r4.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        $r6 = new androidx.graphics.lowlatency.SurfaceViewRenderLayer$1;

        specialinvoke $r6.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: void <init>(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>(r0);

        $r7 = (android.view.SurfaceHolder$Callback) $r6;

        interfaceinvoke $r5.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>($r7);

        return;
    }

    public int getBufferTransformHint()
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer r0;
        android.view.SurfaceView $r1;
        android.view.View $r2;
        androidx.graphics.lowlatency.BufferTransformHintResolver $r3;
        int $i0;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        $r3 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.BufferTransformHintResolver mTransformResolver>;

        $r1 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: android.view.SurfaceView surfaceView>;

        $r2 = (android.view.View) $r1;

        $i0 = virtualinvoke $r3.<androidx.graphics.lowlatency.BufferTransformHintResolver: int getBufferTransformHint(android.view.View)>($r2);

        return $i0;
    }

    public void buildReparentTransaction(androidx.graphics.surface.SurfaceControlCompat, androidx.graphics.surface.SurfaceControlCompat$Transaction)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer r0;
        androidx.graphics.surface.SurfaceControlCompat r1, $r3;
        androidx.graphics.surface.SurfaceControlCompat$Transaction r2;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlCompat;

        r2 := @parameter1: androidx.graphics.surface.SurfaceControlCompat$Transaction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "child");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "transaction");

        $r3 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.surface.SurfaceControlCompat mParentSurfaceControl>;

        virtualinvoke r2.<androidx.graphics.surface.SurfaceControlCompat$Transaction: androidx.graphics.surface.SurfaceControlCompat$Transaction reparent(androidx.graphics.surface.SurfaceControlCompat,androidx.graphics.surface.SurfaceControlCompat)>(r1, $r3);

        return;
    }

    public void setParent(androidx.graphics.surface.SurfaceControlCompat$Builder)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer r0;
        androidx.graphics.surface.SurfaceControlCompat$Builder r1;
        android.view.SurfaceView $r2;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlCompat$Builder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "builder");

        $r2 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: android.view.SurfaceView surfaceView>;

        virtualinvoke r1.<androidx.graphics.surface.SurfaceControlCompat$Builder: androidx.graphics.surface.SurfaceControlCompat$Builder setParent(android.view.SurfaceView)>($r2);

        return;
    }

    public androidx.graphics.opengl.GLRenderer$RenderTarget createRenderTarget(androidx.graphics.opengl.GLRenderer, androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer r0;
        androidx.graphics.opengl.GLRenderer r1;
        androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback r2;
        kotlin.jvm.internal.Ref$ObjectRef r3, $r7;
        androidx.graphics.lowlatency.FrameBufferRenderer r4, $r8;
        androidx.graphics.lowlatency.WrapperFrameBufferRenderer r5, $r11;
        androidx.graphics.opengl.GLRenderer$RenderTarget r6;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1 $r9;
        androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback $r10;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1 $r12;
        kotlin.jvm.functions.Function0 $r13;
        androidx.graphics.opengl.GLRenderer$RenderCallback $r14;
        android.view.SurfaceView $r15;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        r1 := @parameter0: androidx.graphics.opengl.GLRenderer;

        r2 := @parameter1: androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "renderer");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "renderLayerCallback");

        $r7 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r7.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r3 = $r7;

        $r8 = new androidx.graphics.lowlatency.FrameBufferRenderer;

        $r9 = new androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1;

        specialinvoke $r9.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: void <init>(androidx.graphics.lowlatency.SurfaceViewRenderLayer,androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback,kotlin.jvm.internal.Ref$ObjectRef)>(r0, r2, r3);

        $r10 = (androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback) $r9;

        specialinvoke $r8.<androidx.graphics.lowlatency.FrameBufferRenderer: void <init>(androidx.graphics.lowlatency.FrameBufferRenderer$RenderCallback,androidx.graphics.lowlatency.SyncStrategy,int,kotlin.jvm.internal.DefaultConstructorMarker)>($r10, null, 2, null);

        r4 = $r8;

        $r11 = new androidx.graphics.lowlatency.WrapperFrameBufferRenderer;

        $r12 = new androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1;

        specialinvoke $r12.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1: void <init>(kotlin.jvm.internal.Ref$ObjectRef,androidx.graphics.lowlatency.SurfaceViewRenderLayer)>(r3, r0);

        $r13 = (kotlin.jvm.functions.Function0) $r12;

        specialinvoke $r11.<androidx.graphics.lowlatency.WrapperFrameBufferRenderer: void <init>(androidx.graphics.lowlatency.FrameBufferRenderer,kotlin.jvm.functions.Function0)>(r4, $r13);

        r5 = $r11;

        $r15 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: android.view.SurfaceView surfaceView>;

        $r14 = (androidx.graphics.opengl.GLRenderer$RenderCallback) r5;

        r6 = virtualinvoke r1.<androidx.graphics.opengl.GLRenderer: androidx.graphics.opengl.GLRenderer$RenderTarget attach(android.view.SurfaceView,androidx.graphics.opengl.GLRenderer$RenderCallback)>($r15, $r14);

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.opengl.GLRenderer$RenderTarget mRenderTarget> = r6;

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.FrameBufferRenderer mFrameBufferRenderer> = r4;

        return r6;
    }

    public final androidx.graphics.surface.SurfaceControlCompat createDoubleBufferedSurfaceControl$graphics_core_release()
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer r0;
        androidx.graphics.surface.SurfaceControlCompat r1;
        androidx.graphics.surface.SurfaceControlCompat$Builder $r2, $r4, $r5;
        android.view.SurfaceView $r3;
        androidx.graphics.surface.SurfaceControlCompat$Transaction $r6, $r7;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        $r2 = new androidx.graphics.surface.SurfaceControlCompat$Builder;

        specialinvoke $r2.<androidx.graphics.surface.SurfaceControlCompat$Builder: void <init>()>();

        $r3 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: android.view.SurfaceView surfaceView>;

        $r4 = virtualinvoke $r2.<androidx.graphics.surface.SurfaceControlCompat$Builder: androidx.graphics.surface.SurfaceControlCompat$Builder setParent(android.view.SurfaceView)>($r3);

        $r5 = virtualinvoke $r4.<androidx.graphics.surface.SurfaceControlCompat$Builder: androidx.graphics.surface.SurfaceControlCompat$Builder setName(java.lang.String)>("DoubleBufferedLayer");

        r1 = virtualinvoke $r5.<androidx.graphics.surface.SurfaceControlCompat$Builder: androidx.graphics.surface.SurfaceControlCompat build()>();

        $r6 = new androidx.graphics.surface.SurfaceControlCompat$Transaction;

        specialinvoke $r6.<androidx.graphics.surface.SurfaceControlCompat$Transaction: void <init>()>();

        $r7 = virtualinvoke $r6.<androidx.graphics.surface.SurfaceControlCompat$Transaction: androidx.graphics.surface.SurfaceControlCompat$Transaction setVisibility(androidx.graphics.surface.SurfaceControlCompat,boolean)>(r1, 1);

        virtualinvoke $r7.<androidx.graphics.surface.SurfaceControlCompat$Transaction: void commit()>();

        return r1;
    }

    public void setParentLayerCallbacks(androidx.graphics.lowlatency.ParentRenderLayer$Callback)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer r0;
        androidx.graphics.lowlatency.ParentRenderLayer$Callback r1;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        r1 := @parameter0: androidx.graphics.lowlatency.ParentRenderLayer$Callback;

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.ParentRenderLayer$Callback mLayerCallback> = r1;

        return;
    }

    public void clear()
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer r0;
        androidx.graphics.lowlatency.FrameBufferRenderer $r1;
        androidx.graphics.opengl.GLRenderer$RenderTarget $r2;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        $r1 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.FrameBufferRenderer mFrameBufferRenderer>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.graphics.lowlatency.FrameBufferRenderer: void clear()>();

        goto label1;

     label1:
        $r2 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.opengl.GLRenderer$RenderTarget mRenderTarget>;

        if $r2 == null goto label2;

        staticinvoke <androidx.graphics.opengl.GLRenderer$RenderTarget: void requestRender$default(androidx.graphics.opengl.GLRenderer$RenderTarget,kotlin.jvm.functions.Function1,int,java.lang.Object)>($r2, null, 1, null);

        goto label2;

     label2:
        return;
    }

    public void release(androidx.graphics.surface.SurfaceControlCompat$Transaction)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer r0;
        androidx.graphics.surface.SurfaceControlCompat$Transaction r1;
        androidx.graphics.surface.SurfaceControlCompat r2, $r3;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        r1 := @parameter0: androidx.graphics.surface.SurfaceControlCompat$Transaction;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "transaction");

        $r3 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.surface.SurfaceControlCompat mParentSurfaceControl>;

        if $r3 == null goto label1;

        r2 = $r3;

        virtualinvoke r1.<androidx.graphics.surface.SurfaceControlCompat$Transaction: androidx.graphics.surface.SurfaceControlCompat$Transaction reparent(androidx.graphics.surface.SurfaceControlCompat,androidx.graphics.surface.SurfaceControlCompat)>(r2, null);

        virtualinvoke r2.<androidx.graphics.surface.SurfaceControlCompat: void release()>();

        goto label1;

     label1:
        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.surface.SurfaceControlCompat mParentSurfaceControl> = null;

        return;
    }

    public static final androidx.graphics.lowlatency.ParentRenderLayer$Callback access$getMLayerCallback$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r0;
        androidx.graphics.lowlatency.ParentRenderLayer$Callback $r1;

        $r0 := @parameter0: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        $r1 = $r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.ParentRenderLayer$Callback mLayerCallback>;

        return $r1;
    }

    public static final androidx.graphics.lowlatency.BufferTransformer access$getMBufferTransform$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r0;
        androidx.graphics.lowlatency.BufferTransformer $r1;

        $r0 := @parameter0: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        $r1 = $r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.BufferTransformer mBufferTransform>;

        return $r1;
    }

    public static final androidx.graphics.surface.SurfaceControlCompat access$getMParentSurfaceControl$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r0;
        androidx.graphics.surface.SurfaceControlCompat $r1;

        $r0 := @parameter0: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        $r1 = $r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.surface.SurfaceControlCompat mParentSurfaceControl>;

        return $r1;
    }

    public static final int access$getTransformHint$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r0;
        int $i0;

        $r0 := @parameter0: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        $i0 = $r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: int transformHint>;

        return $i0;
    }

    public static final int access$getInverse$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r0;
        int $i0;

        $r0 := @parameter0: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        $i0 = $r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: int inverse>;

        return $i0;
    }

    public static final void access$setMParentSurfaceControl$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer, androidx.graphics.surface.SurfaceControlCompat)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r0;
        androidx.graphics.surface.SurfaceControlCompat r1;

        $r0 := @parameter0: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        r1 := @parameter1: androidx.graphics.surface.SurfaceControlCompat;

        $r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.surface.SurfaceControlCompat mParentSurfaceControl> = r1;

        return;
    }

    public static final void access$setTransformHint$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer, int)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r0;
        int i0;

        $r0 := @parameter0: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        i0 := @parameter1: int;

        $r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: int transformHint> = i0;

        return;
    }

    public static final void access$setInverse$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer, int)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r0;
        int i0;

        $r0 := @parameter0: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        i0 := @parameter1: int;

        $r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: int inverse> = i0;

        return;
    }

    static void <clinit>()
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$Companion $r0;

        $r0 = new androidx.graphics.lowlatency.SurfaceViewRenderLayer$Companion;

        specialinvoke $r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.SurfaceViewRenderLayer$Companion Companion> = $r0;

        return;
    }

androidx.graphics.lowlatency.SurfaceViewRenderLayer$1
<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>
    void <init>(androidx.graphics.lowlatency.SurfaceViewRenderLayer)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$1 r0;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r1;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$1;

        $r1 := @parameter0: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$1 r0;
        android.view.SurfaceHolder r1;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$1;

        r1 := @parameter0: android.view.SurfaceHolder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "holder");

        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$1 r0;
        android.view.SurfaceHolder r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r2, $r3, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r15, $r16;
        androidx.graphics.lowlatency.BufferTransformer $r6, $r9;
        androidx.graphics.surface.SurfaceControlCompat $r12, $r17;
        androidx.graphics.lowlatency.ParentRenderLayer$Callback $r14;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$1;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "holder");

        $r3 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r2 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $i3 = virtualinvoke $r2.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: int getBufferTransformHint()>();

        staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: void access$setTransformHint$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer,int)>($r3, $i3);

        $r5 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r4 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r6 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.BufferTransformer access$getMBufferTransform$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r4);

        $r7 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $i4 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: int access$getTransformHint$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r7);

        $i5 = virtualinvoke $r6.<androidx.graphics.lowlatency.BufferTransformer: int invertBufferTransform(int)>($i4);

        staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: void access$setInverse$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer,int)>($r5, $i5);

        $r8 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r9 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.BufferTransformer access$getMBufferTransform$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r8);

        $r10 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $i6 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: int access$getInverse$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r10);

        virtualinvoke $r9.<androidx.graphics.lowlatency.BufferTransformer: void computeTransform(int,int,int)>(i1, i2, $i6);

        $r11 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r12 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.surface.SurfaceControlCompat access$getMParentSurfaceControl$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r11);

        if $r12 == null goto label1;

        virtualinvoke $r12.<androidx.graphics.surface.SurfaceControlCompat: void release()>();

        goto label1;

     label1:
        $r13 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r14 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.ParentRenderLayer$Callback access$getMLayerCallback$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r13);

        if $r14 == null goto label2;

        interfaceinvoke $r14.<androidx.graphics.lowlatency.ParentRenderLayer$Callback: void onSizeChanged(int,int)>(i1, i2);

        goto label2;

     label2:
        $r16 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r15 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r17 = virtualinvoke $r15.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.surface.SurfaceControlCompat createDoubleBufferedSurfaceControl$graphics_core_release()>();

        staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: void access$setMParentSurfaceControl$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer,androidx.graphics.surface.SurfaceControlCompat)>($r16, $r17);

        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$1 r0;
        android.view.SurfaceHolder r1;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r2;
        androidx.graphics.lowlatency.ParentRenderLayer$Callback $r3;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$1;

        r1 := @parameter0: android.view.SurfaceHolder;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "p0");

        $r2 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r3 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.ParentRenderLayer$Callback access$getMLayerCallback$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r2);

        if $r3 == null goto label1;

        interfaceinvoke $r3.<androidx.graphics.lowlatency.ParentRenderLayer$Callback: void onLayerDestroyed()>();

        goto label1;

     label1:
        return;
    }

androidx.graphics.lowlatency.SurfaceViewRenderLayer$Companion
    private void <init>()
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$Companion r0;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$Companion: void <init>()>();

        return;
    }

androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1
<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1: androidx.graphics.lowlatency.FrameBuffer $frameBuffer>
    void <init>(androidx.graphics.lowlatency.SurfaceViewRenderLayer, androidx.graphics.lowlatency.FrameBuffer)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1 r0;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r1;
        androidx.graphics.lowlatency.FrameBuffer $r2;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1;

        $r1 := @parameter0: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        $r2 := @parameter1: androidx.graphics.lowlatency.FrameBuffer;

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0> = $r1;

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1: androidx.graphics.lowlatency.FrameBuffer $frameBuffer> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final void invoke()
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1 r0;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r1;
        androidx.graphics.lowlatency.ParentRenderLayer$Callback $r2;
        androidx.graphics.lowlatency.FrameBufferPool $r3;
        androidx.graphics.lowlatency.FrameBuffer $r4;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1;

        $r1 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r2 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.ParentRenderLayer$Callback access$getMLayerCallback$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r1);

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<androidx.graphics.lowlatency.ParentRenderLayer$Callback: androidx.graphics.lowlatency.FrameBufferPool getFrameBufferPool()>();

        if $r3 == null goto label1;

        $r4 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1: androidx.graphics.lowlatency.FrameBuffer $frameBuffer>;

        virtualinvoke $r3.<androidx.graphics.lowlatency.FrameBufferPool: void release(androidx.graphics.lowlatency.FrameBuffer)>($r4);

        goto label1;

     label1:
        return;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1 r0;
        kotlin.Unit $r1;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1;

        virtualinvoke r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1: void invoke()>();

        $r1 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r1;
    }

androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1
<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback $renderLayerCallback>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: kotlin.jvm.internal.Ref$ObjectRef $params>
    void <init>(androidx.graphics.lowlatency.SurfaceViewRenderLayer, androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback, kotlin.jvm.internal.Ref$ObjectRef)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1 r0;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r1;
        androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback $r2;
        kotlin.jvm.internal.Ref$ObjectRef $r3;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1;

        $r1 := @parameter0: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        $r2 := @parameter1: androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback;

        $r3 := @parameter2: kotlin.jvm.internal.Ref$ObjectRef;

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0> = $r1;

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback $renderLayerCallback> = $r2;

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: kotlin.jvm.internal.Ref$ObjectRef $params> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.graphics.lowlatency.FrameBuffer obtainFrameBuffer(androidx.graphics.opengl.egl.EGLSpec)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1 r0;
        androidx.graphics.opengl.egl.EGLSpec r1;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r2;
        androidx.graphics.lowlatency.ParentRenderLayer$Callback $r3;
        androidx.graphics.lowlatency.FrameBufferPool $r4;
        androidx.graphics.lowlatency.FrameBuffer $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1;

        r1 := @parameter0: androidx.graphics.opengl.egl.EGLSpec;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "egl");

        $r2 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r3 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.ParentRenderLayer$Callback access$getMLayerCallback$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r2);

        if $r3 == null goto label1;

        $r4 = interfaceinvoke $r3.<androidx.graphics.lowlatency.ParentRenderLayer$Callback: androidx.graphics.lowlatency.FrameBufferPool getFrameBufferPool()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.<androidx.graphics.lowlatency.FrameBufferPool: androidx.graphics.lowlatency.FrameBuffer obtain(androidx.graphics.opengl.egl.EGLSpec)>(r1);

        if $r5 != null goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No FrameBufferPool available");

        throw $r6;

     label2:
        return $r5;
    }

    public void onDraw(androidx.graphics.opengl.egl.EGLManager)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1 r0;
        androidx.graphics.opengl.egl.EGLManager r1;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r2, $r5, $r7;
        androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback $r3;
        androidx.graphics.lowlatency.BufferTransformer $r4, $r6, $r8;
        int $i0, $i1;
        float[] $r9;
        kotlin.jvm.internal.Ref$ObjectRef $r10;
        java.lang.Object $r11;
        java.util.List $r12;
        java.util.Collection $r14;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1;

        r1 := @parameter0: androidx.graphics.opengl.egl.EGLManager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "eglManager");

        $r3 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback $renderLayerCallback>;

        $r2 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r4 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.BufferTransformer access$getMBufferTransform$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r2);

        $i0 = virtualinvoke $r4.<androidx.graphics.lowlatency.BufferTransformer: int getGlWidth()>();

        $r5 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r6 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.BufferTransformer access$getMBufferTransform$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r5);

        $i1 = virtualinvoke $r6.<androidx.graphics.lowlatency.BufferTransformer: int getGlHeight()>();

        $r7 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r8 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.BufferTransformer access$getMBufferTransform$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r7);

        $r9 = virtualinvoke $r8.<androidx.graphics.lowlatency.BufferTransformer: float[] getTransform()>();

        $r10 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: kotlin.jvm.internal.Ref$ObjectRef $params>;

        $r11 = $r10.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        $r14 = (java.util.Collection) $r11;

        if $r14 != null goto label1;

        $r12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r12, "emptyList()");

        $r14 = (java.util.Collection) $r12;

     label1:
        interfaceinvoke $r3.<androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback: void onDrawDoubleBufferedLayer(androidx.graphics.opengl.egl.EGLManager,int,int,float[],java.util.Collection)>(r1, $i0, $i1, $r9, $r14);

        return;
    }

    public void onDrawComplete(androidx.graphics.lowlatency.FrameBuffer, androidx.graphics.lowlatency.SyncFenceCompat)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1 r0;
        androidx.graphics.lowlatency.FrameBuffer r1;
        androidx.graphics.lowlatency.SyncFenceCompat r2;
        androidx.graphics.surface.SurfaceControlCompat r3, r5, r7, $r23, $r24, r25;
        androidx.graphics.surface.SurfaceControlCompat$Transaction r4, $r10, $r11, $r12;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer r6, $r8, $r9, $r15, $r17, $r19, $r21;
        android.hardware.HardwareBuffer $r13;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1 $r14;
        kotlin.jvm.functions.Function0 $r16;
        int $i1, $i2;
        androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback $r18;
        androidx.graphics.lowlatency.ParentRenderLayer$Callback r22;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1;

        r1 := @parameter0: androidx.graphics.lowlatency.FrameBuffer;

        r2 := @parameter1: androidx.graphics.lowlatency.SyncFenceCompat;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "frameBuffer");

        $r8 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        r22 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.ParentRenderLayer$Callback access$getMLayerCallback$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r8);

        if r22 == null goto label1;

        $r23 = interfaceinvoke r22.<androidx.graphics.lowlatency.ParentRenderLayer$Callback: androidx.graphics.surface.SurfaceControlCompat getFrontBufferedLayerSurfaceControl()>();

        goto label2;

     label1:
        $r23 = null;

     label2:
        r3 = $r23;

        $r9 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r24 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.surface.SurfaceControlCompat access$getMParentSurfaceControl$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r9);

        if $r24 != null goto label3;

        $r21 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        r5 = virtualinvoke $r21.<androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.surface.SurfaceControlCompat createDoubleBufferedSurfaceControl$graphics_core_release()>();

        r6 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        r7 = r5;

        staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: void access$setMParentSurfaceControl$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer,androidx.graphics.surface.SurfaceControlCompat)>(r6, r7);

        $r24 = r5;

     label3:
        r25 = $r24;

        if r3 == null goto label5;

        $r10 = new androidx.graphics.surface.SurfaceControlCompat$Transaction;

        specialinvoke $r10.<androidx.graphics.surface.SurfaceControlCompat$Transaction: void <init>()>();

        $r11 = virtualinvoke $r10.<androidx.graphics.surface.SurfaceControlCompat$Transaction: androidx.graphics.surface.SurfaceControlCompat$Transaction setVisibility(androidx.graphics.surface.SurfaceControlCompat,boolean)>(r3, 0);

        $r12 = virtualinvoke $r11.<androidx.graphics.surface.SurfaceControlCompat$Transaction: androidx.graphics.surface.SurfaceControlCompat$Transaction setVisibility(androidx.graphics.surface.SurfaceControlCompat,boolean)>(r25, 1);

        $r13 = virtualinvoke r1.<androidx.graphics.lowlatency.FrameBuffer: android.hardware.HardwareBuffer getHardwareBuffer()>();

        $r14 = new androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1;

        $r15 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        specialinvoke $r14.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1$onDrawComplete$transaction$1: void <init>(androidx.graphics.lowlatency.SurfaceViewRenderLayer,androidx.graphics.lowlatency.FrameBuffer)>($r15, r1);

        $r16 = (kotlin.jvm.functions.Function0) $r14;

        r4 = virtualinvoke $r12.<androidx.graphics.surface.SurfaceControlCompat$Transaction: androidx.graphics.surface.SurfaceControlCompat$Transaction setBuffer(androidx.graphics.surface.SurfaceControlCompat,android.hardware.HardwareBuffer,androidx.graphics.lowlatency.SyncFenceCompat,kotlin.jvm.functions.Function0)>(r25, $r13, r2, $r16);

        $r17 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $i1 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: int access$getTransformHint$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r17);

        if $i1 == -1 goto label4;

        $r19 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $i2 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: int access$getInverse$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r19);

        virtualinvoke r4.<androidx.graphics.surface.SurfaceControlCompat$Transaction: androidx.graphics.surface.SurfaceControlCompat$Transaction setBufferTransform(androidx.graphics.surface.SurfaceControlCompat,int)>(r25, $i2);

     label4:
        $r18 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$frameBufferRenderer$1: androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback $renderLayerCallback>;

        interfaceinvoke $r18.<androidx.graphics.lowlatency.GLFrontBufferedRenderer$Callback: void onDoubleBufferedLayerRenderComplete(androidx.graphics.surface.SurfaceControlCompat,androidx.graphics.surface.SurfaceControlCompat$Transaction)>(r3, r4);

        virtualinvoke r4.<androidx.graphics.surface.SurfaceControlCompat$Transaction: void commit()>();

        goto label6;

     label5:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SurfaceViewRenderLayer", "Error, no front buffered SurfaceControl available to synchronize transaction with");

     label6:
        return;
    }

androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1
<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1: kotlin.jvm.internal.Ref$ObjectRef $params>
<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>
    void <init>(kotlin.jvm.internal.Ref$ObjectRef, androidx.graphics.lowlatency.SurfaceViewRenderLayer)
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1 r0;
        kotlin.jvm.internal.Ref$ObjectRef $r1;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r2;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1;

        $r1 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        $r2 := @parameter1: androidx.graphics.lowlatency.SurfaceViewRenderLayer;

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1: kotlin.jvm.internal.Ref$ObjectRef $params> = $r1;

        r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.lang.Boolean invoke()
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1 r0;
        androidx.graphics.lowlatency.SurfaceViewRenderLayer $r1;
        kotlin.jvm.internal.Ref$ObjectRef $r2, $r4;
        androidx.graphics.lowlatency.ParentRenderLayer$Callback $r3;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        java.util.Collection $r7;
        boolean $z0;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1;

        $r2 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1: kotlin.jvm.internal.Ref$ObjectRef $params>;

        $r1 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1: androidx.graphics.lowlatency.SurfaceViewRenderLayer this$0>;

        $r3 = staticinvoke <androidx.graphics.lowlatency.SurfaceViewRenderLayer: androidx.graphics.lowlatency.ParentRenderLayer$Callback access$getMLayerCallback$p(androidx.graphics.lowlatency.SurfaceViewRenderLayer)>($r1);

        if $r3 == null goto label1;

        $r7 = interfaceinvoke $r3.<androidx.graphics.lowlatency.ParentRenderLayer$Callback: java.util.Collection obtainDoubleBufferedLayerParams()>();

        goto label2;

     label1:
        $r7 = null;

     label2:
        $r2.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = $r7;

        $r4 = r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1: kotlin.jvm.internal.Ref$ObjectRef $params>;

        $r5 = $r4.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if $r5 == null goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r6;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1 r0;
        java.lang.Boolean $r1;

        r0 := @this: androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1;

        $r1 = virtualinvoke r0.<androidx.graphics.lowlatency.SurfaceViewRenderLayer$createRenderTarget$parentFrameBufferRenderer$1: java.lang.Boolean invoke()>();

        return $r1;
    }

