androidx.paging.PagingConfig
<androidx.paging.PagingConfig: androidx.paging.PagingConfig$Companion Companion>
<androidx.paging.PagingConfig: int pageSize>
<androidx.paging.PagingConfig: int prefetchDistance>
<androidx.paging.PagingConfig: boolean enablePlaceholders>
<androidx.paging.PagingConfig: int initialLoadSize>
<androidx.paging.PagingConfig: int maxSize>
<androidx.paging.PagingConfig: int jumpThreshold>
<androidx.paging.PagingConfig: int MAX_SIZE_UNBOUNDED>
<androidx.paging.PagingConfig: int DEFAULT_INITIAL_PAGE_MULTIPLIER>
    public void <init>(int, int, boolean, int, int, int)
    {
        androidx.paging.PagingConfig r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean z0, z1, z2, $z4, $z5, z6;
        java.lang.IllegalArgumentException $r1, $r4, $r13;
        java.lang.String $r2, $r12, r14;
        java.lang.Throwable $r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: androidx.paging.PagingConfig;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.PagingConfig: int pageSize> = i0;

        r0.<androidx.paging.PagingConfig: int prefetchDistance> = i1;

        r0.<androidx.paging.PagingConfig: boolean enablePlaceholders> = z0;

        r0.<androidx.paging.PagingConfig: int initialLoadSize> = i2;

        r0.<androidx.paging.PagingConfig: int maxSize> = i3;

        r0.<androidx.paging.PagingConfig: int jumpThreshold> = i4;

        $z4 = r0.<androidx.paging.PagingConfig: boolean enablePlaceholders>;

        if $z4 != 0 goto label1;

        $i16 = r0.<androidx.paging.PagingConfig: int prefetchDistance>;

        if $i16 != 0 goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Placeholders and prefetch are the only ways to trigger loading of more data in PagingData, so either placeholders must be enabled, or prefetch distance must be > 0.");

        throw $r13;

     label1:
        $i5 = r0.<androidx.paging.PagingConfig: int maxSize>;

        if $i5 == 2147483647 goto label2;

        $i12 = r0.<androidx.paging.PagingConfig: int maxSize>;

        $i10 = r0.<androidx.paging.PagingConfig: int pageSize>;

        $i8 = r0.<androidx.paging.PagingConfig: int prefetchDistance>;

        $i9 = $i8 * 2;

        $i11 = $i10 + $i9;

        if $i12 >= $i11 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum size must be at least pageSize + 2*prefetchDist, pageSize=");

        $i13 = r0.<androidx.paging.PagingConfig: int pageSize>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", prefetchDist=");

        $i14 = r0.<androidx.paging.PagingConfig: int prefetchDistance>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxSize=");

        $i15 = r0.<androidx.paging.PagingConfig: int maxSize>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r4;

     label2:
        $i6 = r0.<androidx.paging.PagingConfig: int jumpThreshold>;

        if $i6 == -2147483648 goto label3;

        $i7 = r0.<androidx.paging.PagingConfig: int jumpThreshold>;

        if $i7 <= 0 goto label4;

     label3:
        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        z1 = $z5;

        z2 = 0;

        z6 = 0;

        if z1 != 0 goto label6;

        r14 = "jumpThreshold must be positive to enable jumps or COUNT_UNDEFINED to disable jumping.";

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = virtualinvoke r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        $r3 = (java.lang.Throwable) $r1;

        throw $r3;

     label6:
        return;
    }

    public void <init>(int, int, boolean, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.PagingConfig r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        boolean z0;

        r0 := @this: androidx.paging.PagingConfig;

        i0 := @parameter0: int;

        i7 := @parameter1: int;

        z0 := @parameter2: boolean;

        i8 := @parameter3: int;

        i9 := @parameter4: int;

        i10 := @parameter5: int;

        i1 := @parameter6: int;

        r1 := @parameter7: kotlin.jvm.internal.DefaultConstructorMarker;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        i7 = i0;

     label1:
        $i3 = i1 & 4;

        if $i3 == 0 goto label2;

        z0 = 1;

     label2:
        $i4 = i1 & 8;

        if $i4 == 0 goto label3;

        i8 = i0 * 3;

     label3:
        $i5 = i1 & 16;

        if $i5 == 0 goto label4;

        i9 = 2147483647;

     label4:
        $i6 = i1 & 32;

        if $i6 == 0 goto label5;

        i10 = -2147483648;

     label5:
        specialinvoke r0.<androidx.paging.PagingConfig: void <init>(int,int,boolean,int,int,int)>(i0, i7, z0, i8, i9, i10);

        return;
    }

    public void <init>(int, int, boolean, int, int)
    {
        androidx.paging.PagingConfig r0;
        int i0, i1, i2, i3;
        boolean z0;

        r0 := @this: androidx.paging.PagingConfig;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<androidx.paging.PagingConfig: void <init>(int,int,boolean,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, i1, z0, i2, i3, 0, 32, null);

        return;
    }

    public void <init>(int, int, boolean, int)
    {
        androidx.paging.PagingConfig r0;
        int i0, i1, i2;
        boolean z0;

        r0 := @this: androidx.paging.PagingConfig;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i2 := @parameter3: int;

        specialinvoke r0.<androidx.paging.PagingConfig: void <init>(int,int,boolean,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, i1, z0, i2, 0, 0, 48, null);

        return;
    }

    public void <init>(int, int, boolean)
    {
        androidx.paging.PagingConfig r0;
        int i0, i1;
        boolean z0;

        r0 := @this: androidx.paging.PagingConfig;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<androidx.paging.PagingConfig: void <init>(int,int,boolean,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, i1, z0, 0, 0, 0, 56, null);

        return;
    }

    public void <init>(int, int)
    {
        androidx.paging.PagingConfig r0;
        int i0, i1;

        r0 := @this: androidx.paging.PagingConfig;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<androidx.paging.PagingConfig: void <init>(int,int,boolean,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, i1, 0, 0, 0, 0, 60, null);

        return;
    }

    public void <init>(int)
    {
        androidx.paging.PagingConfig r0;
        int i0;

        r0 := @this: androidx.paging.PagingConfig;

        i0 := @parameter0: int;

        specialinvoke r0.<androidx.paging.PagingConfig: void <init>(int,int,boolean,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)>(i0, 0, 0, 0, 0, 0, 62, null);

        return;
    }

    static void <clinit>()
    {
        androidx.paging.PagingConfig$Companion $r0;

        $r0 = new androidx.paging.PagingConfig$Companion;

        specialinvoke $r0.<androidx.paging.PagingConfig$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.paging.PagingConfig: androidx.paging.PagingConfig$Companion Companion> = $r0;

        return;
    }

androidx.paging.PagingConfig$Companion
    private void <init>()
    {
        androidx.paging.PagingConfig$Companion r0;

        r0 := @this: androidx.paging.PagingConfig$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void getMAX_SIZE_UNBOUNDED$annotations()
    {
        return;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.PagingConfig$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.paging.PagingConfig$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.paging.PagingConfig$Companion: void <init>()>();

        return;
    }

