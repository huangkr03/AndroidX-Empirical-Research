androidx.customview.widget.ExploreByTouchHelper
<androidx.customview.widget.ExploreByTouchHelper: int INVALID_ID>
<androidx.customview.widget.ExploreByTouchHelper: int HOST_ID>
<androidx.customview.widget.ExploreByTouchHelper: java.lang.String DEFAULT_CLASS_NAME>
<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS>
<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>
<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect>
<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect>
<androidx.customview.widget.ExploreByTouchHelper: int[] mTempGlobalRect>
<androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager>
<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>
<androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider>
<androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>
<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>
<androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId>
<androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER>
<androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER>
    public void <init>(android.view.View)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.View r1;
        android.content.Context r2;
        android.graphics.Rect $r3, $r4, $r5;
        int[] $r6;
        java.lang.Object $r7;
        android.view.accessibility.AccessibilityManager $r8;
        int $i0;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<androidx.core.view.AccessibilityDelegateCompat: void <init>()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect> = $r5;

        $r6 = newarray (int)[2];

        r0.<androidx.customview.widget.ExploreByTouchHelper: int[] mTempGlobalRect> = $r6;

        r0.<androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId> = -2147483648;

        r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId> = -2147483648;

        r0.<androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId> = -2147483648;

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("View may not be null");

        throw $r9;

     label1:
        r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost> = r1;

        r2 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        $r7 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r8 = (android.view.accessibility.AccessibilityManager) $r7;

        r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager> = $r8;

        virtualinvoke r1.<android.view.View: void setFocusable(boolean)>(1);

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>(r1);

        if $i0 != 0 goto label2;

        staticinvoke <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r1, 1);

     label2:
        return;
    }

    public androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.View r1;
        androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider $r2, $r3, $r4;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider>;

        if $r2 != null goto label1;

        $r4 = new androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider;

        specialinvoke $r4.<androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: void <init>(androidx.customview.widget.ExploreByTouchHelper)>(r0);

        r0.<androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider> = $r4;

     label1:
        $r3 = r0.<androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider>;

        return $r3;
    }

    public final boolean dispatchHoverEvent(android.view.MotionEvent)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2;
        android.view.accessibility.AccessibilityManager $r2, $r3;
        boolean $z0, $z1, $z2;
        float $f0, $f1;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager>;

        $z1 = virtualinvoke $r3.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        tableswitch($i1)
        {
            case 7: goto label3;
            case 8: goto label8;
            case 9: goto label3;
            case 10: goto label6;
            default: goto label8;
        };

     label3:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i0 = virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: int getVirtualViewAt(float,float)>($f0, $f1);

        specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void updateHoveredVirtualView(int)>(i0);

        if i0 == -2147483648 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;

     label6:
        $i2 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId>;

        if $i2 == -2147483648 goto label7;

        specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void updateHoveredVirtualView(int)>(-2147483648);

        return 1;

     label7:
        return 0;

     label8:
        return 0;
    }

    public final boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.KeyEvent r1;
        int i0, i1, i2, i3, $i4, $i5, i6;
        boolean $z0, $z1, $z2, $z4, $z5, z6;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        r1 := @parameter0: android.view.KeyEvent;

        z6 = 0;

        i0 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if i0 == 1 goto label7;

        i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        lookupswitch(i1)
        {
            case 19: goto label1;
            case 20: goto label1;
            case 21: goto label1;
            case 22: goto label1;
            case 23: goto label4;
            case 61: goto label5;
            case 66: goto label4;
            default: goto label7;
        };

     label1:
        $z4 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z4 == 0 goto label7;

        i2 = staticinvoke <androidx.customview.widget.ExploreByTouchHelper: int keyToDirection(int)>(i1);

        $i5 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        i3 = 1 + $i5;

        i6 = 0;

     label2:
        if i6 >= i3 goto label3;

        $z5 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)>(i2, null);

        if $z5 == 0 goto label3;

        z6 = 1;

        i6 = i6 + 1;

        goto label2;

     label3:
        goto label7;

     label4:
        $z2 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z2 == 0 goto label7;

        $i4 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i4 != 0 goto label7;

        specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean clickKeyboardFocusedVirtualView()>();

        z6 = 1;

        goto label7;

     label5:
        $z0 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z0 == 0 goto label6;

        z6 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)>(2, null);

        goto label7;

     label6:
        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean hasModifiers(int)>(1);

        if $z1 == 0 goto label7;

        z6 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)>(1, null);

     label7:
        return z6;
    }

    public final void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        boolean z0;
        int i0, $i1, $i2;
        android.graphics.Rect r1;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        $i1 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if $i1 == -2147483648 goto label1;

        $i2 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)>($i2);

     label1:
        if z0 == 0 goto label2;

        specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)>(i0, r1);

     label2:
        return;
    }

    public final int getAccessibilityFocusedVirtualViewId()
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int $i0;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        $i0 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        return $i0;
    }

    public final int getKeyboardFocusedVirtualViewId()
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int $i0;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        $i0 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        return $i0;
    }

    private static int keyToDirection(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 19: goto label2;
            case 20: goto label4;
            case 21: goto label1;
            case 22: goto label3;
            default: goto label4;
        };

     label1:
        return 17;

     label2:
        return 33;

     label3:
        return 66;

     label4:
        return 130;
    }

    private void getBoundsInParent(int, android.graphics.Rect)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0;
        android.graphics.Rect r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r2;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        r2 = virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>(i0);

        virtualinvoke r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>(r1);

        return;
    }

    private boolean moveFocus(int, android.graphics.Rect)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        android.graphics.Rect r1, $r5, r15;
        androidx.collection.SparseArrayCompat r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r3, $r13, r14;
        java.lang.Object $r4, $r11, $r18;
        android.view.View $r6, $r8;
        boolean $z0, $z1, z2;
        androidx.customview.widget.FocusStrategy$BoundsAdapter $r9, $r17;
        androidx.customview.widget.FocusStrategy$CollectionAdapter $r10, $r16;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        r2 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: androidx.collection.SparseArrayCompat getAllNodes()>();

        i1 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if i1 != -2147483648 goto label01;

        $r13 = null;

        goto label02;

     label01:
        $r4 = virtualinvoke r2.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>(i1);

        $r13 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat) $r4;

     label02:
        r3 = $r13;

        lookupswitch(i0)
        {
            case 1: goto label03;
            case 2: goto label03;
            case 17: goto label06;
            case 33: goto label06;
            case 66: goto label06;
            case 130: goto label06;
            default: goto label10;
        };

     label03:
        $r8 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $i4 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>($r8);

        if $i4 != 1 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        z2 = $z1;

        $r10 = <androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER>;

        $r9 = <androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER>;

        $r11 = staticinvoke <androidx.customview.widget.FocusStrategy: java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean)>(r2, $r10, $r9, r3, i0, z2, 0);

        r14 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat) $r11;

        goto label11;

     label06:
        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r15 = $r5;

        $i2 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if $i2 == -2147483648 goto label07;

        $i3 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void getBoundsInParent(int,android.graphics.Rect)>($i3, r15);

        goto label09;

     label07:
        if r1 == null goto label08;

        virtualinvoke r15.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        goto label09;

     label08:
        $r6 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        staticinvoke <androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect)>($r6, i0, r15);

     label09:
        $r16 = <androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER>;

        $r17 = <androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER>;

        $r18 = staticinvoke <androidx.customview.widget.FocusStrategy: java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int)>(r2, $r16, $r17, r3, r15, i0);

        r14 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat) $r18;

        goto label11;

     label10:
        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_FORWARD, FOCUS_BACKWARD, FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r12;

     label11:
        if r14 != null goto label12;

        i5 = -2147483648;

        goto label13;

     label12:
        i6 = virtualinvoke r2.<androidx.collection.SparseArrayCompat: int indexOfValue(java.lang.Object)>(r14);

        i5 = virtualinvoke r2.<androidx.collection.SparseArrayCompat: int keyAt(int)>(i6);

     label13:
        $z0 = virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)>(i5);

        return $z0;
    }

    private androidx.collection.SparseArrayCompat getAllNodes()
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        java.util.ArrayList r1, $r4;
        androidx.collection.SparseArrayCompat r2, $r5;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r3;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r6, $r8;
        java.lang.Integer $r7, $r9;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void getVisibleVirtualViews(java.util.List)>(r1);

        $r5 = new androidx.collection.SparseArrayCompat;

        specialinvoke $r5.<androidx.collection.SparseArrayCompat: void <init>()>();

        r2 = $r5;

        i3 = 0;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i3 >= $i0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r7 = (java.lang.Integer) $r6;

        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        r3 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>($i1);

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r9 = (java.lang.Integer) $r8;

        $i2 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        virtualinvoke r2.<androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)>($i2, r3);

        i3 = i3 + 1;

        goto label1;

     label2:
        return r2;
    }

    private static android.graphics.Rect guessPreviouslyFocusedRect(android.view.View, int, android.graphics.Rect)
    {
        android.view.View r0;
        int i0, i1, i2;
        android.graphics.Rect r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        i1 = virtualinvoke r0.<android.view.View: int getWidth()>();

        i2 = virtualinvoke r0.<android.view.View: int getHeight()>();

        lookupswitch(i0)
        {
            case 17: goto label1;
            case 33: goto label2;
            case 66: goto label3;
            case 130: goto label4;
            default: goto label5;
        };

     label1:
        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(i1, 0, i1, i2);

        goto label6;

     label2:
        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, i2, i1, i2);

        goto label6;

     label3:
        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(-1, 0, -1, i2);

        goto label6;

     label4:
        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, -1, i1, -1);

        goto label6;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label6:
        return r1;
    }

    private boolean clickKeyboardFocusedVirtualView()
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        $i0 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if $i0 == -2147483648 goto label1;

        $i1 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        $z0 = virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>($i1, 16, null);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public final boolean sendEventForVirtualView(int, int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, i1;
        android.view.ViewParent r1;
        android.view.accessibility.AccessibilityEvent r2;
        android.view.accessibility.AccessibilityManager $r3;
        boolean $z0, $z1;
        android.view.View $r4, $r5;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == -2147483648 goto label1;

        $r3 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r3.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r4 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        r1 = virtualinvoke $r4.<android.view.View: android.view.ViewParent getParent()>();

        if r1 != null goto label3;

        return 0;

     label3:
        r2 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>(i0, i1);

        $r5 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $z1 = interfaceinvoke r1.<android.view.ViewParent: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($r5, r2);

        return $z1;
    }

    public final void invalidateRoot()
    {
        androidx.customview.widget.ExploreByTouchHelper r0;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int,int)>(-1, 1);

        return;
    }

    public final void invalidateVirtualView(int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int,int)>(i0, 0);

        return;
    }

    public final void invalidateVirtualView(int, int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, i1;
        android.view.ViewParent r1;
        android.view.accessibility.AccessibilityEvent r2;
        android.view.accessibility.AccessibilityManager $r3;
        boolean $z0;
        android.view.View $r4, $r5;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == -2147483648 goto label1;

        $r3 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r3.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        r1 = virtualinvoke $r4.<android.view.View: android.view.ViewParent getParent()>();

        if r1 == null goto label1;

        r2 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>(i0, 2048);

        staticinvoke <androidx.core.view.accessibility.AccessibilityEventCompat: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)>(r2, i1);

        $r5 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        interfaceinvoke r1.<android.view.ViewParent: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($r5, r2);

     label1:
        return;
    }

    public int getFocusedVirtualView()
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int $i0;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        $i0 = virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: int getAccessibilityFocusedVirtualViewId()>();

        return $i0;
    }

    protected void onVirtualViewKeyboardFocusChanged(int, boolean)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0;
        boolean z0;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    private void updateHoveredVirtualView(int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, i1, $i2;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        $i2 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId>;

        if $i2 != i0 goto label1;

        return;

     label1:
        i1 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId>;

        r0.<androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId> = i0;

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>(i0, 128);

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>(i1, 256);

        return;
    }

    private android.view.accessibility.AccessibilityEvent createEvent(int, int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, i1;
        android.view.accessibility.AccessibilityEvent $r1, $r2;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        lookupswitch(i0)
        {
            case -1: goto label1;
            default: goto label2;
        };

     label1:
        $r1 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForHost(int)>(i1);

        return $r1;

     label2:
        $r2 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>(i0, i1);

        return $r2;
    }

    private android.view.accessibility.AccessibilityEvent createEventForHost(int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.View $r2;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(i0);

        $r2 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        virtualinvoke $r2.<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return r1;
    }

    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityEvent r2;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r1, r2);

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)>(r2);

        return;
    }

    private android.view.accessibility.AccessibilityEvent createEventForChild(int, int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, i1;
        android.view.accessibility.AccessibilityEvent r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r2;
        java.util.List $r3, $r6;
        java.lang.CharSequence $r4, $r5, $r7, $r12;
        boolean $z1, $z2, $z3, $z4, $z5;
        android.view.View $r8, $r9;
        android.content.Context $r10;
        java.lang.String $r11;
        java.lang.RuntimeException $r13;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(i1);

        r2 = virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>(i0);

        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $r4 = virtualinvoke r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = virtualinvoke r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>($r5);

        $z1 = virtualinvoke r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScrollable()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setScrollable(boolean)>($z1);

        $z2 = virtualinvoke r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isPassword()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setPassword(boolean)>($z2);

        $z3 = virtualinvoke r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setEnabled(boolean)>($z3);

        $z4 = virtualinvoke r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isChecked()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setChecked(boolean)>($z4);

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)>(i0, r1);

        $r6 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        $z5 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z5 == 0 goto label1;

        $r12 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getContentDescription()>();

        if $r12 != null goto label1;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must add text or a content description in populateEventForVirtualViewId()");

        throw $r13;

     label1:
        $r7 = virtualinvoke r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r7);

        $r8 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        staticinvoke <androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)>(r1, $r8, i0);

        $r9 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r10 = virtualinvoke $r9.<android.view.View: android.content.Context getContext()>();

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>($r11);

        return r1;
    }

    androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r1, $r2;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        if i0 != -1 goto label1;

        $r2 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost()>();

        return $r2;

     label1:
        $r1 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>(i0);

        return $r1;
    }

    private androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost()
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r1;
        java.util.ArrayList r2, $r5;
        int i0, i1, $i2, $i3, i4;
        android.view.View $r3, $r4, $r6;
        java.lang.Object $r7;
        java.lang.Integer $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        $r3 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        r1 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)>($r3);

        $r4 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        staticinvoke <androidx.core.view.ViewCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>($r4, r1);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void getVisibleVirtualViews(java.util.List)>(r2);

        i0 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getChildCount()>();

        if i0 <= 0 goto label1;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label1;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("Views cannot have both real and virtual children");

        throw $r9;

     label1:
        i4 = 0;

        i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

     label2:
        if i4 >= i1 goto label3;

        $r6 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r8 = (java.lang.Integer) $r7;

        $i2 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View,int)>($r6, $i2);

        i4 = i4 + 1;

        goto label2;

     label3:
        return r1;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.View r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r2;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        specialinvoke r0.<androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>(r1, r2);

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>(r2);

        return;
    }

    private androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r1, r44;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        android.graphics.Rect $r2, $r3, $r6, $r7, $r8, $r15, $r18, $r19, $r20, $r21, $r22, $r25, $r29, $r30, $r31, $r32, $r33, $r41, $r42, $r43, $r46;
        android.view.View $r4, $r9, $r12, $r14, $r17, $r24, $r27, $r28, $r39, $r45;
        java.lang.CharSequence $r5, $r37;
        android.content.Context $r10;
        java.lang.String $r11;
        int[] $r13, $r16, $r23, $r26, $r40;
        java.lang.RuntimeException $r34, $r35, $r36, $r38;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        r1 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()>();

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)>(1);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)>(1);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>("android.view.View");

        $r2 = <androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>($r2);

        $r3 = <androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>($r3);

        $r4 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)>($r4);

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>(i0, r1);

        $r5 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>();

        if $r5 != null goto label01;

        $r37 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>();

        if $r37 != null goto label01;

        $r38 = new java.lang.RuntimeException;

        specialinvoke $r38.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must add text or a content description in populateNodeForVirtualViewId()");

        throw $r38;

     label01:
        $r6 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>($r6);

        $r8 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect>;

        $r7 = <androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        $z1 = virtualinvoke $r8.<android.graphics.Rect: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label02;

        $r36 = new java.lang.RuntimeException;

        specialinvoke $r36.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must set parent bounds in populateNodeForVirtualViewId()");

        throw $r36;

     label02:
        i1 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getActions()>();

        $i2 = i1 & 64;

        if $i2 == 0 goto label03;

        $r35 = new java.lang.RuntimeException;

        specialinvoke $r35.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must not add ACTION_ACCESSIBILITY_FOCUS in populateNodeForVirtualViewId()");

        throw $r35;

     label03:
        $i3 = i1 & 128;

        if $i3 == 0 goto label04;

        $r34 = new java.lang.RuntimeException;

        specialinvoke $r34.<java.lang.RuntimeException: void <init>(java.lang.String)>("Callbacks must not add ACTION_CLEAR_ACCESSIBILITY_FOCUS in populateNodeForVirtualViewId()");

        throw $r34;

     label04:
        $r9 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r10 = virtualinvoke $r9.<android.view.View: android.content.Context getContext()>();

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)>($r11);

        $r12 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)>($r12, i0);

        $i4 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        if $i4 != i0 goto label05;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>(1);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(128);

        goto label06;

     label05:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>(0);

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(64);

     label06:
        $i5 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if $i5 != i0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        z0 = $z4;

        if z0 == 0 goto label09;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(2);

        goto label10;

     label09:
        $z2 = virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()>();

        if $z2 == 0 goto label10;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(1);

     label10:
        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)>(z0);

        $r39 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r40 = r0.<androidx.customview.widget.ExploreByTouchHelper: int[] mTempGlobalRect>;

        virtualinvoke $r39.<android.view.View: void getLocationOnScreen(int[])>($r40);

        $r41 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)>($r41);

        $r42 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        $r43 = <androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        $z5 = virtualinvoke $r42.<android.graphics.Rect: boolean equals(java.lang.Object)>($r43);

        if $z5 == 0 goto label14;

        $r22 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>($r22);

        $i12 = r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId>;

        if $i12 == -1 goto label13;

        r44 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()>();

        i21 = r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId>;

     label11:
        if i21 == -1 goto label12;

        $r28 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        virtualinvoke r44.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View,int)>($r28, -1);

        $r29 = <androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS>;

        virtualinvoke r44.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>($r29);

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>(i21, r44);

        $r30 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect>;

        virtualinvoke r44.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>($r30);

        $r33 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        $r31 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect>;

        $i20 = $r31.<android.graphics.Rect: int left>;

        $r32 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect>;

        $i19 = $r32.<android.graphics.Rect: int top>;

        virtualinvoke $r33.<android.graphics.Rect: void offset(int,int)>($i20, $i19);

        i21 = r44.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId>;

        goto label11;

     label12:
        virtualinvoke r44.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void recycle()>();

     label13:
        $r25 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        $r23 = r0.<androidx.customview.widget.ExploreByTouchHelper: int[] mTempGlobalRect>;

        $i13 = $r23[0];

        $r24 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $i14 = virtualinvoke $r24.<android.view.View: int getScrollX()>();

        $i15 = $i13 - $i14;

        $r26 = r0.<androidx.customview.widget.ExploreByTouchHelper: int[] mTempGlobalRect>;

        $i16 = $r26[1];

        $r27 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $i17 = virtualinvoke $r27.<android.view.View: int getScrollY()>();

        $i18 = $i16 - $i17;

        virtualinvoke $r25.<android.graphics.Rect: void offset(int,int)>($i15, $i18);

     label14:
        $r45 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $r46 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect>;

        $z6 = virtualinvoke $r45.<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)>($r46);

        if $z6 == 0 goto label15;

        $r15 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect>;

        $r13 = r0.<androidx.customview.widget.ExploreByTouchHelper: int[] mTempGlobalRect>;

        $i6 = $r13[0];

        $r14 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $i7 = virtualinvoke $r14.<android.view.View: int getScrollX()>();

        $i8 = $i6 - $i7;

        $r16 = r0.<androidx.customview.widget.ExploreByTouchHelper: int[] mTempGlobalRect>;

        $i9 = $r16[1];

        $r17 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $i10 = virtualinvoke $r17.<android.view.View: int getScrollY()>();

        $i11 = $i9 - $i10;

        virtualinvoke $r15.<android.graphics.Rect: void offset(int,int)>($i8, $i11);

        $r19 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        $r18 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect>;

        z7 = virtualinvoke $r19.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>($r18);

        if z7 == 0 goto label15;

        $r20 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>($r20);

        $r21 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect>;

        $z3 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean isVisibleToUser(android.graphics.Rect)>($r21);

        if $z3 == 0 goto label15;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)>(1);

     label15:
        return r1;
    }

    boolean performAction(int, int, android.os.Bundle)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, i1;
        android.os.Bundle r1;
        boolean $z0, $z1;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        lookupswitch(i0)
        {
            case -1: goto label1;
            default: goto label2;
        };

     label1:
        $z0 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean performActionForHost(int,android.os.Bundle)>(i1, r1);

        return $z0;

     label2:
        $z1 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean performActionForChild(int,int,android.os.Bundle)>(i0, i1, r1);

        return $z1;
    }

    private boolean performActionForHost(int, android.os.Bundle)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0;
        android.os.Bundle r1;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>($r2, i0, r1);

        return $z0;
    }

    private boolean performActionForChild(int, int, android.os.Bundle)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, i1;
        android.os.Bundle r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        lookupswitch(i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 64: goto label1;
            case 128: goto label2;
            default: goto label5;
        };

     label1:
        $z1 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean requestAccessibilityFocus(int)>(i0);

        return $z1;

     label2:
        $z0 = specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean clearAccessibilityFocus(int)>(i0);

        return $z0;

     label3:
        $z3 = virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)>(i0);

        return $z3;

     label4:
        $z2 = virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)>(i0);

        return $z2;

     label5:
        $z4 = virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>(i0, i1, r1);

        return $z4;
    }

    private boolean isVisibleToUser(android.graphics.Rect)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.graphics.Rect r1;
        android.view.View r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        int $i0, $i2;
        float $f0;
        byte $b1;
        android.view.ViewParent r5;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        r1 := @parameter0: android.graphics.Rect;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $i0 = virtualinvoke $r3.<android.view.View: int getWindowVisibility()>();

        if $i0 == 0 goto label3;

        return 0;

     label3:
        $r4 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        r5 = virtualinvoke $r4.<android.view.View: android.view.ViewParent getParent()>();

     label4:
        $z1 = r5 instanceof android.view.View;

        if $z1 == 0 goto label7;

        r2 = (android.view.View) r5;

        $f0 = virtualinvoke r2.<android.view.View: float getAlpha()>();

        $b1 = $f0 cmpg 0.0F;

        if $b1 <= 0 goto label5;

        $i2 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i2 == 0 goto label6;

     label5:
        return 0;

     label6:
        r5 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        goto label4;

     label7:
        if r5 == null goto label8;

        $z2 = 1;

        goto label9;

     label8:
        $z2 = 0;

     label9:
        return $z2;
    }

    private boolean requestAccessibilityFocus(int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, $i1, $i2, $i3;
        android.view.accessibility.AccessibilityManager $r1, $r2;
        boolean $z0, $z1;
        android.view.View $r3;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager>;

        $z1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i1 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        if $i1 == i0 goto label4;

        $i2 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        if $i2 == -2147483648 goto label3;

        $i3 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        specialinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean clearAccessibilityFocus(int)>($i3);

     label3:
        r0.<androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId> = i0;

        $r3 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        virtualinvoke $r3.<android.view.View: void invalidate()>();

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>(i0, 32768);

        return 1;

     label4:
        return 0;
    }

    private boolean clearAccessibilityFocus(int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, $i1;
        android.view.View $r1;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        if $i1 != i0 goto label1;

        r0.<androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId> = -2147483648;

        $r1 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        virtualinvoke $r1.<android.view.View: void invalidate()>();

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>(i0, 65536);

        return 1;

     label1:
        return 0;
    }

    public final boolean requestKeyboardFocusForVirtualView(int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, $i1, $i2, $i3;
        android.view.View $r1, $r2;
        boolean $z0, $z3;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $z0 = virtualinvoke $r1.<android.view.View: boolean isFocused()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost>;

        $z3 = virtualinvoke $r2.<android.view.View: boolean requestFocus()>();

        if $z3 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if $i1 != i0 goto label2;

        return 0;

     label2:
        $i2 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if $i2 == -2147483648 goto label3;

        $i3 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)>($i3);

     label3:
        if i0 != -2147483648 goto label4;

        return 0;

     label4:
        r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId> = i0;

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void onVirtualViewKeyboardFocusChanged(int,boolean)>(i0, 1);

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>(i0, 8);

        return 1;
    }

    public final boolean clearKeyboardFocusForVirtualView(int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, $i1;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        $i1 = r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

        if $i1 == i0 goto label1;

        return 0;

     label1:
        r0.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId> = -2147483648;

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: void onVirtualViewKeyboardFocusChanged(int,boolean)>(i0, 0);

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>(i0, 8);

        return 1;
    }

<androidx.customview.widget.ExploreByTouchHelper: int getVirtualViewAt(float,float)>
<androidx.customview.widget.ExploreByTouchHelper: void getVisibleVirtualViews(java.util.List)>
    protected void onPopulateEventForVirtualView(int, android.view.accessibility.AccessibilityEvent)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.accessibility.AccessibilityEvent;

        return;
    }

    protected void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        return;
    }

<androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>
    protected void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r1;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper;

        r1 := @parameter0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        return;
    }

<androidx.customview.widget.ExploreByTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>
    static void <clinit>()
    {
        android.graphics.Rect $r0;
        androidx.customview.widget.ExploreByTouchHelper$1 $r1;
        androidx.customview.widget.ExploreByTouchHelper$2 $r2;

        $r0 = new android.graphics.Rect;

        specialinvoke $r0.<android.graphics.Rect: void <init>(int,int,int,int)>(2147483647, 2147483647, -2147483648, -2147483648);

        <androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS> = $r0;

        $r1 = new androidx.customview.widget.ExploreByTouchHelper$1;

        specialinvoke $r1.<androidx.customview.widget.ExploreByTouchHelper$1: void <init>()>();

        <androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER> = $r1;

        $r2 = new androidx.customview.widget.ExploreByTouchHelper$2;

        specialinvoke $r2.<androidx.customview.widget.ExploreByTouchHelper$2: void <init>()>();

        <androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER> = $r2;

        return;
    }

androidx.customview.widget.ExploreByTouchHelper$1
    void <init>()
    {
        androidx.customview.widget.ExploreByTouchHelper$1 r0;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat, android.graphics.Rect)
    {
        androidx.customview.widget.ExploreByTouchHelper$1 r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r1;
        android.graphics.Rect r2;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper$1;

        r1 := @parameter0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        r2 := @parameter1: android.graphics.Rect;

        virtualinvoke r1.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>(r2);

        return;
    }

    public volatile void obtainBounds(java.lang.Object, android.graphics.Rect)
    {
        androidx.customview.widget.ExploreByTouchHelper$1 r0;
        java.lang.Object r1;
        android.graphics.Rect r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r3;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: android.graphics.Rect;

        $r3 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat) r1;

        virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper$1: void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect)>($r3, r2);

        return;
    }

androidx.customview.widget.ExploreByTouchHelper$2
    void <init>()
    {
        androidx.customview.widget.ExploreByTouchHelper$2 r0;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat, int)
    {
        androidx.customview.widget.ExploreByTouchHelper$2 r0;
        androidx.collection.SparseArrayCompat r1;
        int i0;
        java.lang.Object $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r3;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper$2;

        r1 := @parameter0: androidx.collection.SparseArrayCompat;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)>(i0);

        $r3 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat) $r2;

        return $r3;
    }

    public int size(androidx.collection.SparseArrayCompat)
    {
        androidx.customview.widget.ExploreByTouchHelper$2 r0;
        androidx.collection.SparseArrayCompat r1;
        int $i0;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper$2;

        r1 := @parameter0: androidx.collection.SparseArrayCompat;

        $i0 = virtualinvoke r1.<androidx.collection.SparseArrayCompat: int size()>();

        return $i0;
    }

    public volatile int size(java.lang.Object)
    {
        androidx.customview.widget.ExploreByTouchHelper$2 r0;
        java.lang.Object r1;
        androidx.collection.SparseArrayCompat $r2;
        int $i0;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.collection.SparseArrayCompat) r1;

        $i0 = virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper$2: int size(androidx.collection.SparseArrayCompat)>($r2);

        return $i0;
    }

    public volatile java.lang.Object get(java.lang.Object, int)
    {
        androidx.customview.widget.ExploreByTouchHelper$2 r0;
        java.lang.Object r1;
        int i0;
        androidx.collection.SparseArrayCompat $r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r3;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper$2;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = (androidx.collection.SparseArrayCompat) r1;

        $r3 = virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper$2: androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int)>($r2, i0);

        return $r3;
    }

androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider
<androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.customview.widget.ExploreByTouchHelper this$0>
    void <init>(androidx.customview.widget.ExploreByTouchHelper)
    {
        androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider r0;
        androidx.customview.widget.ExploreByTouchHelper r1;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider;

        r1 := @parameter0: androidx.customview.widget.ExploreByTouchHelper;

        r0.<androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.customview.widget.ExploreByTouchHelper this$0> = r1;

        specialinvoke r0.<androidx.core.view.accessibility.AccessibilityNodeProviderCompat: void <init>()>();

        return;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)
    {
        androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider r0;
        int i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r1, $r3;
        androidx.customview.widget.ExploreByTouchHelper $r2;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider;

        i0 := @parameter0: int;

        $r2 = r0.<androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.customview.widget.ExploreByTouchHelper this$0>;

        r1 = virtualinvoke $r2.<androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>(i0);

        $r3 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>(r1);

        return $r3;
    }

    public boolean performAction(int, int, android.os.Bundle)
    {
        androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider r0;
        int i0, i1;
        android.os.Bundle r1;
        androidx.customview.widget.ExploreByTouchHelper $r2;
        boolean $z0;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        $r2 = r0.<androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.customview.widget.ExploreByTouchHelper this$0>;

        $z0 = virtualinvoke $r2.<androidx.customview.widget.ExploreByTouchHelper: boolean performAction(int,int,android.os.Bundle)>(i0, i1, r1);

        return $z0;
    }

    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
    {
        androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider r0;
        int i0, i1, $i2;
        androidx.customview.widget.ExploreByTouchHelper $r1, $r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r2;

        r0 := @this: androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider;

        i0 := @parameter0: int;

        if i0 != 2 goto label1;

        $r3 = r0.<androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.customview.widget.ExploreByTouchHelper this$0>;

        $i2 = $r3.<androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId>;

        goto label2;

     label1:
        $r1 = r0.<androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.customview.widget.ExploreByTouchHelper this$0>;

        $i2 = $r1.<androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId>;

     label2:
        i1 = $i2;

        if i1 != -2147483648 goto label3;

        return null;

     label3:
        $r2 = virtualinvoke r0.<androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)>(i1);

        return $r2;
    }

