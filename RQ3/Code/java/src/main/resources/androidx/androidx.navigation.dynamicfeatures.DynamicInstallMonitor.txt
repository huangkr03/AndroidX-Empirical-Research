androidx.navigation.dynamicfeatures.DynamicInstallMonitor
<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: java.lang.Exception exception>
<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: androidx.lifecycle.LiveData status>
<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: boolean isInstallRequired>
<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: int sessionId>
<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: com.google.android.play.core.splitinstall.SplitInstallManager splitInstallManager>
<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: boolean isUsed>
    public void <init>()
    {
        androidx.navigation.dynamicfeatures.DynamicInstallMonitor r0;
        androidx.lifecycle.MutableLiveData $r1;
        androidx.lifecycle.LiveData $r2;

        r0 := @this: androidx.navigation.dynamicfeatures.DynamicInstallMonitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r1.<androidx.lifecycle.MutableLiveData: void <init>()>();

        $r2 = (androidx.lifecycle.LiveData) $r1;

        r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: androidx.lifecycle.LiveData status> = $r2;

        return;
    }

    public final java.lang.Exception getException()
    {
        androidx.navigation.dynamicfeatures.DynamicInstallMonitor r0;
        java.lang.Exception $r1;

        r0 := @this: androidx.navigation.dynamicfeatures.DynamicInstallMonitor;

        $r1 = r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: java.lang.Exception exception>;

        return $r1;
    }

    public final void setException$navigation_dynamic_features_runtime_release(java.lang.Exception)
    {
        androidx.navigation.dynamicfeatures.DynamicInstallMonitor r0;
        java.lang.Exception r1;

        r0 := @this: androidx.navigation.dynamicfeatures.DynamicInstallMonitor;

        r1 := @parameter0: java.lang.Exception;

        r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: java.lang.Exception exception> = r1;

        return;
    }

    public final androidx.lifecycle.LiveData getStatus()
    {
        androidx.navigation.dynamicfeatures.DynamicInstallMonitor r0;
        androidx.lifecycle.LiveData $r1;

        r0 := @this: androidx.navigation.dynamicfeatures.DynamicInstallMonitor;

        $r1 = r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: androidx.lifecycle.LiveData status>;

        return $r1;
    }

    public final boolean isInstallRequired()
    {
        androidx.navigation.dynamicfeatures.DynamicInstallMonitor r0;
        boolean $z0;

        r0 := @this: androidx.navigation.dynamicfeatures.DynamicInstallMonitor;

        $z0 = r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: boolean isInstallRequired>;

        return $z0;
    }

    public final void setInstallRequired$navigation_dynamic_features_runtime_release(boolean)
    {
        androidx.navigation.dynamicfeatures.DynamicInstallMonitor r0;
        boolean z0;

        r0 := @this: androidx.navigation.dynamicfeatures.DynamicInstallMonitor;

        z0 := @parameter0: boolean;

        r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: boolean isInstallRequired> = z0;

        if z0 == 0 goto label1;

        r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: boolean isUsed> = 1;

     label1:
        return;
    }

    public final int getSessionId()
    {
        androidx.navigation.dynamicfeatures.DynamicInstallMonitor r0;
        int $i0;

        r0 := @this: androidx.navigation.dynamicfeatures.DynamicInstallMonitor;

        $i0 = r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: int sessionId>;

        return $i0;
    }

    public final void setSessionId$navigation_dynamic_features_runtime_release(int)
    {
        androidx.navigation.dynamicfeatures.DynamicInstallMonitor r0;
        int i0;

        r0 := @this: androidx.navigation.dynamicfeatures.DynamicInstallMonitor;

        i0 := @parameter0: int;

        r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: int sessionId> = i0;

        return;
    }

    public final com.google.android.play.core.splitinstall.SplitInstallManager getSplitInstallManager()
    {
        androidx.navigation.dynamicfeatures.DynamicInstallMonitor r0;
        com.google.android.play.core.splitinstall.SplitInstallManager $r1;

        r0 := @this: androidx.navigation.dynamicfeatures.DynamicInstallMonitor;

        $r1 = r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: com.google.android.play.core.splitinstall.SplitInstallManager splitInstallManager>;

        return $r1;
    }

    public final void setSplitInstallManager(com.google.android.play.core.splitinstall.SplitInstallManager)
    {
        androidx.navigation.dynamicfeatures.DynamicInstallMonitor r0;
        com.google.android.play.core.splitinstall.SplitInstallManager r1;

        r0 := @this: androidx.navigation.dynamicfeatures.DynamicInstallMonitor;

        r1 := @parameter0: com.google.android.play.core.splitinstall.SplitInstallManager;

        r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: com.google.android.play.core.splitinstall.SplitInstallManager splitInstallManager> = r1;

        return;
    }

    public final boolean isUsed$navigation_dynamic_features_runtime_release()
    {
        androidx.navigation.dynamicfeatures.DynamicInstallMonitor r0;
        boolean $z0;

        r0 := @this: androidx.navigation.dynamicfeatures.DynamicInstallMonitor;

        $z0 = r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: boolean isUsed>;

        return $z0;
    }

    public final void cancelInstall()
    {
        androidx.navigation.dynamicfeatures.DynamicInstallMonitor r0;
        com.google.android.play.core.splitinstall.SplitInstallManager r1;
        int $i0, $i1;

        r0 := @this: androidx.navigation.dynamicfeatures.DynamicInstallMonitor;

        r1 = r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: com.google.android.play.core.splitinstall.SplitInstallManager splitInstallManager>;

        if r1 == null goto label1;

        $i0 = r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: int sessionId>;

        if $i0 == 0 goto label1;

        $i1 = r0.<androidx.navigation.dynamicfeatures.DynamicInstallMonitor: int sessionId>;

        interfaceinvoke r1.<com.google.android.play.core.splitinstall.SplitInstallManager: com.google.android.play.core.tasks.Task cancelInstall(int)>($i1);

     label1:
        return;
    }

