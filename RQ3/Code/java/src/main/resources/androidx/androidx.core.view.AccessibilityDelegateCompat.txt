androidx.core.view.AccessibilityDelegateCompat
<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE>
<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate>
<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mBridge>
    public void <init>()
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.View$AccessibilityDelegate $r1;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        $r1 = <androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE>;

        specialinvoke r0.<androidx.core.view.AccessibilityDelegateCompat: void <init>(android.view.View$AccessibilityDelegate)>($r1);

        return;
    }

    public void <init>(android.view.View$AccessibilityDelegate)
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.View$AccessibilityDelegate r1;
        androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter $r2;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        r1 := @parameter0: android.view.View$AccessibilityDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate> = r1;

        $r2 = new androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter;

        specialinvoke $r2.<androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void <init>(androidx.core.view.AccessibilityDelegateCompat)>(r0);

        r0.<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mBridge> = $r2;

        return;
    }

    android.view.View$AccessibilityDelegate getBridge()
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.View$AccessibilityDelegate $r1;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        $r1 = r0.<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mBridge>;

        return $r1;
    }

    public void sendAccessibilityEvent(android.view.View, int)
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.View r1;
        int i0;
        android.view.View$AccessibilityDelegate $r2;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = r0.<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate>;

        virtualinvoke $r2.<android.view.View$AccessibilityDelegate: void sendAccessibilityEvent(android.view.View,int)>(r1, i0);

        return;
    }

    public void sendAccessibilityEventUnchecked(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityEvent r2;
        android.view.View$AccessibilityDelegate $r3;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        $r3 = r0.<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate>;

        virtualinvoke $r3.<android.view.View$AccessibilityDelegate: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)>(r1, r2);

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityEvent r2;
        android.view.View$AccessibilityDelegate $r3;
        boolean $z0;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        $r3 = r0.<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate>;

        $z0 = virtualinvoke $r3.<android.view.View$AccessibilityDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r1, r2);

        return $z0;
    }

    public void onPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityEvent r2;
        android.view.View$AccessibilityDelegate $r3;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        $r3 = r0.<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate>;

        virtualinvoke $r3.<android.view.View$AccessibilityDelegate: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r1, r2);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityEvent r2;
        android.view.View$AccessibilityDelegate $r3;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        $r3 = r0.<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate>;

        virtualinvoke $r3.<android.view.View$AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r1, r2);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.View r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r2;
        android.view.View$AccessibilityDelegate $r3;
        android.view.accessibility.AccessibilityNodeInfo $r4;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        $r3 = r0.<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate>;

        $r4 = virtualinvoke r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo unwrap()>();

        virtualinvoke $r3.<android.view.View$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>(r1, $r4);

        return;
    }

    public boolean onRequestSendAccessibilityEvent(android.view.ViewGroup, android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        android.view.accessibility.AccessibilityEvent r3;
        android.view.View$AccessibilityDelegate $r4;
        boolean $z0;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.accessibility.AccessibilityEvent;

        $r4 = r0.<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate>;

        $z0 = virtualinvoke $r4.<android.view.View$AccessibilityDelegate: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>(r1, r2, r3);

        return $z0;
    }

    public androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityNodeProvider r2;
        int $i0;
        android.view.View$AccessibilityDelegate $r3;
        androidx.core.view.accessibility.AccessibilityNodeProviderCompat $r4;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        r1 := @parameter0: android.view.View;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $r3 = r0.<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate>;

        r2 = staticinvoke <androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)>($r3, r1);

        if r2 == null goto label1;

        $r4 = new androidx.core.view.accessibility.AccessibilityNodeProviderCompat;

        specialinvoke $r4.<androidx.core.view.accessibility.AccessibilityNodeProviderCompat: void <init>(java.lang.Object)>(r2);

        return $r4;

     label1:
        return null;
    }

    public boolean performAccessibilityAction(android.view.View, int, android.os.Bundle)
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.View r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        android.os.Bundle r2;
        java.util.List r3;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat r4;
        android.view.View$AccessibilityDelegate $r5;
        java.lang.Object $r6;
        boolean z0;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        z0 = 0;

        r3 = staticinvoke <androidx.core.view.AccessibilityDelegateCompat: java.util.List getActionList(android.view.View)>(r1);

        i6 = 0;

     label1:
        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if i6 >= $i1 goto label3;

        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i6);

        r4 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) $r6;

        $i5 = virtualinvoke r4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()>();

        if $i5 != i0 goto label2;

        z0 = virtualinvoke r4.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean perform(android.view.View,android.os.Bundle)>(r1, r2);

        goto label3;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 16 goto label4;

        $r5 = r0.<androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate>;

        z0 = staticinvoke <androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)>($r5, r1, i0, r2);

     label4:
        if z0 != 0 goto label5;

        $i2 = <androidx.core.R$id: int accessibility_action_clickable_span>;

        if i0 != $i2 goto label5;

        if r2 == null goto label5;

        $i3 = virtualinvoke r2.<android.os.Bundle: int getInt(java.lang.String,int)>("ACCESSIBILITY_CLICKABLE_SPAN_ID", -1);

        z0 = specialinvoke r0.<androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>($i3, r1);

     label5:
        return z0;
    }

    private boolean performClickableSpanAction(int, android.view.View)
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        int i0, $i1;
        android.view.View r1;
        android.util.SparseArray r2;
        java.lang.ref.WeakReference r3;
        android.text.style.ClickableSpan r4;
        java.lang.Object $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        $i1 = <androidx.core.R$id: int tag_accessibility_clickable_spans>;

        $r5 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>($i1);

        r2 = (android.util.SparseArray) $r5;

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (java.lang.ref.WeakReference) $r6;

        if r3 == null goto label1;

        $r7 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.text.style.ClickableSpan) $r7;

        $z0 = specialinvoke r0.<androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>(r4, r1);

        if $z0 == 0 goto label1;

        virtualinvoke r4.<android.text.style.ClickableSpan: void onClick(android.view.View)>(r1);

        return 1;

     label1:
        return 0;
    }

    private boolean isSpanStillValid(android.text.style.ClickableSpan, android.view.View)
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.text.style.ClickableSpan r1, $r6;
        android.view.View r2;
        android.view.accessibility.AccessibilityNodeInfo r3;
        android.text.style.ClickableSpan[] r4;
        java.lang.CharSequence $r5;
        int $i0, i1;
        boolean $z0;

        r0 := @this: androidx.core.view.AccessibilityDelegateCompat;

        r1 := @parameter0: android.text.style.ClickableSpan;

        r2 := @parameter1: android.view.View;

        if r1 == null goto label3;

        r3 = virtualinvoke r2.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

        $r5 = virtualinvoke r3.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        r4 = staticinvoke <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>($r5);

        i1 = 0;

     label1:
        if r4 == null goto label3;

        $i0 = lengthof r4;

        if i1 >= $i0 goto label3;

        $r6 = r4[i1];

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    static java.util.List getActionList(android.view.View)
    {
        android.view.View r0;
        java.util.List r1, $r3;
        int $i0;
        java.lang.Object $r2;

        r0 := @parameter0: android.view.View;

        $i0 = <androidx.core.R$id: int tag_accessibility_actions>;

        $r2 = virtualinvoke r0.<android.view.View: java.lang.Object getTag(int)>($i0);

        r1 = (java.util.List) $r2;

        if r1 != null goto label1;

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label2;

     label1:
        $r3 = r1;

     label2:
        return $r3;
    }

    static void <clinit>()
    {
        android.view.View$AccessibilityDelegate $r0;

        $r0 = new android.view.View$AccessibilityDelegate;

        specialinvoke $r0.<android.view.View$AccessibilityDelegate: void <init>()>();

        <androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE> = $r0;

        return;
    }

