androidx.ui.graphics.AndroidPath
<androidx.ui.graphics.AndroidPath: android.graphics.Path internalPath>
<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>
<androidx.ui.graphics.AndroidPath: float[] radii>
<androidx.ui.graphics.AndroidPath: android.graphics.Matrix mMatrix>
    public void <init>(android.graphics.Path)
    {
        androidx.ui.graphics.AndroidPath r0;
        android.graphics.Path r1;
        android.graphics.RectF $r2;
        float[] $r3;
        android.graphics.Matrix $r4;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r1 := @parameter0: android.graphics.Path;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "internalPath");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path internalPath> = r1;

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF> = $r2;

        $r3 = newarray (float)[8];

        r0.<androidx.ui.graphics.AndroidPath: float[] radii> = $r3;

        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        r0.<androidx.ui.graphics.AndroidPath: android.graphics.Matrix mMatrix> = $r4;

        return;
    }

    public void <init>(android.graphics.Path, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.ui.graphics.AndroidPath r0;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r1;
        android.graphics.Path $r2, r3;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r3 := @parameter0: android.graphics.Path;

        i0 := @parameter1: int;

        r1 := @parameter2: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r2 = new android.graphics.Path;

        specialinvoke $r2.<android.graphics.Path: void <init>()>();

        r3 = $r2;

     label1:
        specialinvoke r0.<androidx.ui.graphics.AndroidPath: void <init>(android.graphics.Path)>(r3);

        return;
    }

    public final android.graphics.Path getInternalPath()
    {
        androidx.ui.graphics.AndroidPath r0;
        android.graphics.Path $r1;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        $r1 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path internalPath>;

        return $r1;
    }

    public androidx.ui.graphics.PathFillType getFillType()
    {
        androidx.ui.graphics.AndroidPath r0;
        android.graphics.Path $r1;
        android.graphics.Path$FillType $r2, $r3;
        boolean $z0;
        androidx.ui.graphics.PathFillType $r4, $r5;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $r2 = virtualinvoke $r1.<android.graphics.Path: android.graphics.Path$FillType getFillType()>();

        $r3 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 == 0 goto label1;

        $r5 = <androidx.ui.graphics.PathFillType: androidx.ui.graphics.PathFillType evenOdd>;

        return $r5;

     label1:
        $r4 = <androidx.ui.graphics.PathFillType: androidx.ui.graphics.PathFillType nonZero>;

        return $r4;
    }

    public void setFillType(androidx.ui.graphics.PathFillType)
    {
        androidx.ui.graphics.AndroidPath r0;
        androidx.ui.graphics.PathFillType r1, $r4;
        android.graphics.Path$FillType r2, $r5;
        android.graphics.Path $r3;
        boolean $z0;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r1 := @parameter0: androidx.ui.graphics.PathFillType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "value");

        $r3 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $r4 = <androidx.ui.graphics.PathFillType: androidx.ui.graphics.PathFillType evenOdd>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r4);

        if $z0 == 0 goto label1;

        $r5 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

        goto label2;

     label1:
        $r5 = <android.graphics.Path$FillType: android.graphics.Path$FillType WINDING>;

     label2:
        r2 = $r5;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>(r2, "if (value == PathFillType.evenOdd) {\n                    android.graphics.Path.FillType.EVEN_ODD\n                } else {\n                    android.graphics.Path.FillType.WINDING\n                }");

        virtualinvoke $r3.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>(r2);

        return;
    }

    public void moveTo(float, float)
    {
        androidx.ui.graphics.AndroidPath r0;
        float f0, f1;
        android.graphics.Path $r1;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>(f0, f1);

        return;
    }

    public void relativeMoveTo(float, float)
    {
        androidx.ui.graphics.AndroidPath r0;
        float f0, f1;
        android.graphics.Path $r1;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        virtualinvoke $r1.<android.graphics.Path: void rMoveTo(float,float)>(f0, f1);

        return;
    }

    public void lineTo(float, float)
    {
        androidx.ui.graphics.AndroidPath r0;
        float f0, f1;
        android.graphics.Path $r1;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        virtualinvoke $r1.<android.graphics.Path: void lineTo(float,float)>(f0, f1);

        return;
    }

    public void relativeLineTo(float, float)
    {
        androidx.ui.graphics.AndroidPath r0;
        float f0, f1;
        android.graphics.Path $r1;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        virtualinvoke $r1.<android.graphics.Path: void rLineTo(float,float)>(f0, f1);

        return;
    }

    public void quadraticBezierTo(float, float, float, float)
    {
        androidx.ui.graphics.AndroidPath r0;
        float f0, f1, f2, f3;
        android.graphics.Path $r1;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        virtualinvoke $r1.<android.graphics.Path: void quadTo(float,float,float,float)>(f0, f1, f2, f3);

        return;
    }

    public void relativeQuadraticBezierTo(float, float, float, float)
    {
        androidx.ui.graphics.AndroidPath r0;
        float f0, f1, f2, f3;
        android.graphics.Path $r1;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        virtualinvoke $r1.<android.graphics.Path: void rQuadTo(float,float,float,float)>(f0, f1, f2, f3);

        return;
    }

    public void cubicTo(float, float, float, float, float, float)
    {
        androidx.ui.graphics.AndroidPath r0;
        float f0, f1, f2, f3, f4, f5;
        android.graphics.Path $r1;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        virtualinvoke $r1.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f0, f1, f2, f3, f4, f5);

        return;
    }

    public void relativeCubicTo(float, float, float, float, float, float)
    {
        androidx.ui.graphics.AndroidPath r0;
        float f0, f1, f2, f3, f4, f5;
        android.graphics.Path $r1;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        virtualinvoke $r1.<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>(f0, f1, f2, f3, f4, f5);

        return;
    }

    public void arcTo(androidx.ui.geometry.Rect, float, float, boolean)
    {
        androidx.ui.graphics.AndroidPath r0;
        androidx.ui.geometry.Rect r1;
        float f0, f1, f2, f3, f4, f5;
        boolean z0;
        android.graphics.RectF $r2, $r4;
        android.graphics.Path $r3;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        f2 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getLeft()>();

        f3 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getTop()>();

        f4 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getRight()>();

        f5 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getBottom()>();

        $r2 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        virtualinvoke $r2.<android.graphics.RectF: void set(float,float,float,float)>(f2, f3, f4, f5);

        $r3 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $r4 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        virtualinvoke $r3.<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>($r4, f0, f1, z0);

        return;
    }

    public void addRect(androidx.ui.geometry.Rect)
    {
        androidx.ui.graphics.AndroidPath r0;
        androidx.ui.geometry.Rect r1;
        boolean z0, z1, z2, z3, z4, z5;
        android.graphics.RectF $r2, $r6;
        android.graphics.Rect $r3;
        android.graphics.Path $r4;
        android.graphics.Path$Direction $r5;
        java.lang.IllegalStateException $r7;
        java.lang.String $r8, r10;
        java.lang.Throwable $r9;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rect");

        z0 = specialinvoke r0.<androidx.ui.graphics.AndroidPath: boolean _rectIsValid(androidx.ui.geometry.Rect)>(r1);

        z1 = 0;

        z3 = 0;

        z4 = 0;

        z5 = 0;

        if z0 != 0 goto label1;

        z2 = 0;

        r10 = "Check failed.";

        $r7 = new java.lang.IllegalStateException;

        $r8 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        $r9 = (java.lang.Throwable) $r7;

        throw $r9;

     label1:
        $r2 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        $r3 = staticinvoke <androidx.ui.core.RectHelperKt: android.graphics.Rect toAndroidRect(androidx.ui.geometry.Rect)>(r1);

        virtualinvoke $r2.<android.graphics.RectF: void set(android.graphics.Rect)>($r3);

        $r4 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $r6 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        $r5 = <android.graphics.Path$Direction: android.graphics.Path$Direction CCW>;

        virtualinvoke $r4.<android.graphics.Path: void addRect(android.graphics.RectF,android.graphics.Path$Direction)>($r6, $r5);

        return;
    }

    public void addOval(androidx.ui.geometry.Rect)
    {
        androidx.ui.graphics.AndroidPath r0;
        androidx.ui.geometry.Rect r1;
        android.graphics.RectF $r2, $r6;
        android.graphics.Rect $r3;
        android.graphics.Path $r4;
        android.graphics.Path$Direction $r5;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "oval");

        $r2 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        $r3 = staticinvoke <androidx.ui.core.RectHelperKt: android.graphics.Rect toAndroidRect(androidx.ui.geometry.Rect)>(r1);

        virtualinvoke $r2.<android.graphics.RectF: void set(android.graphics.Rect)>($r3);

        $r4 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $r6 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        $r5 = <android.graphics.Path$Direction: android.graphics.Path$Direction CCW>;

        virtualinvoke $r4.<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path$Direction)>($r6, $r5);

        return;
    }

    public void addArcRad(androidx.ui.geometry.Rect, float, float)
    {
        androidx.ui.graphics.AndroidPath r0, r3, r5;
        androidx.ui.geometry.Rect r1, r2, r4;
        float f0, f1, f2, f3, f4;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "oval");

        r2 = r1;

        r3 = r0;

        f3 = f0 * 57.295776F;

        f4 = f3;

        r4 = r2;

        r5 = r3;

        f2 = f1 * 57.295776F;

        virtualinvoke r5.<androidx.ui.graphics.AndroidPath: void addArc(androidx.ui.geometry.Rect,float,float)>(r4, f4, f2);

        return;
    }

    public void addArc(androidx.ui.geometry.Rect, float, float)
    {
        androidx.ui.graphics.AndroidPath r0;
        androidx.ui.geometry.Rect r1;
        float f0, f1;
        boolean z0, z1, z2, z3, z4, z5;
        android.graphics.RectF $r2, $r5;
        android.graphics.Rect $r3;
        android.graphics.Path $r4;
        java.lang.IllegalStateException $r6;
        java.lang.String $r7, r9;
        java.lang.Throwable $r8;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "oval");

        z0 = specialinvoke r0.<androidx.ui.graphics.AndroidPath: boolean _rectIsValid(androidx.ui.geometry.Rect)>(r1);

        z1 = 0;

        z3 = 0;

        z4 = 0;

        z5 = 0;

        if z0 != 0 goto label1;

        z2 = 0;

        r9 = "Check failed.";

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        $r8 = (java.lang.Throwable) $r6;

        throw $r8;

     label1:
        $r2 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        $r3 = staticinvoke <androidx.ui.core.RectHelperKt: android.graphics.Rect toAndroidRect(androidx.ui.geometry.Rect)>(r1);

        virtualinvoke $r2.<android.graphics.RectF: void set(android.graphics.Rect)>($r3);

        $r4 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $r5 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        virtualinvoke $r4.<android.graphics.Path: void addArc(android.graphics.RectF,float,float)>($r5, f0, f1);

        return;
    }

    public void addRRect(androidx.ui.geometry.RRect)
    {
        androidx.ui.graphics.AndroidPath r0;
        androidx.ui.geometry.RRect r1;
        android.graphics.RectF $r2, $r14;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        float[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13;
        android.graphics.Path $r11;
        android.graphics.Path$Direction $r12;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r1 := @parameter0: androidx.ui.geometry.RRect;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rrect");

        $r2 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        $f0 = virtualinvoke r1.<androidx.ui.geometry.RRect: float getLeft()>();

        $f1 = virtualinvoke r1.<androidx.ui.geometry.RRect: float getTop()>();

        $f2 = virtualinvoke r1.<androidx.ui.geometry.RRect: float getRight()>();

        $f3 = virtualinvoke r1.<androidx.ui.geometry.RRect: float getBottom()>();

        virtualinvoke $r2.<android.graphics.RectF: void set(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r3 = r0.<androidx.ui.graphics.AndroidPath: float[] radii>;

        $f4 = virtualinvoke r1.<androidx.ui.geometry.RRect: float getTopLeftRadiusX()>();

        $r3[0] = $f4;

        $r4 = r0.<androidx.ui.graphics.AndroidPath: float[] radii>;

        $f5 = virtualinvoke r1.<androidx.ui.geometry.RRect: float getTopLeftRadiusY()>();

        $r4[1] = $f5;

        $r5 = r0.<androidx.ui.graphics.AndroidPath: float[] radii>;

        $f6 = virtualinvoke r1.<androidx.ui.geometry.RRect: float getTopRightRadiusX()>();

        $r5[2] = $f6;

        $r6 = r0.<androidx.ui.graphics.AndroidPath: float[] radii>;

        $f7 = virtualinvoke r1.<androidx.ui.geometry.RRect: float getTopRightRadiusY()>();

        $r6[3] = $f7;

        $r7 = r0.<androidx.ui.graphics.AndroidPath: float[] radii>;

        $f8 = virtualinvoke r1.<androidx.ui.geometry.RRect: float getBottomRightRadiusX()>();

        $r7[4] = $f8;

        $r8 = r0.<androidx.ui.graphics.AndroidPath: float[] radii>;

        $f9 = virtualinvoke r1.<androidx.ui.geometry.RRect: float getBottomRightRadiusY()>();

        $r8[5] = $f9;

        $r9 = r0.<androidx.ui.graphics.AndroidPath: float[] radii>;

        $f10 = virtualinvoke r1.<androidx.ui.geometry.RRect: float getBottomLeftRadiusX()>();

        $r9[6] = $f10;

        $r10 = r0.<androidx.ui.graphics.AndroidPath: float[] radii>;

        $f11 = virtualinvoke r1.<androidx.ui.geometry.RRect: float getBottomLeftRadiusY()>();

        $r10[7] = $f11;

        $r11 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $r14 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        $r13 = r0.<androidx.ui.graphics.AndroidPath: float[] radii>;

        $r12 = <android.graphics.Path$Direction: android.graphics.Path$Direction CCW>;

        virtualinvoke $r11.<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction)>($r14, $r13, $r12);

        return;
    }

    public void addPath(androidx.ui.graphics.Path, androidx.ui.geometry.Offset)
    {
        androidx.ui.graphics.AndroidPath r0, $r7;
        androidx.ui.graphics.Path r1;
        androidx.ui.geometry.Offset r2;
        android.graphics.Path r4, r5;
        boolean $z1;
        java.lang.UnsupportedOperationException $r6;
        float $f0, $f1;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r1 := @parameter0: androidx.ui.graphics.Path;

        r2 := @parameter1: androidx.ui.geometry.Offset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "path");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "offset");

        r4 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $z1 = r1 instanceof androidx.ui.graphics.AndroidPath;

        if $z1 == 0 goto label1;

        $r7 = (androidx.ui.graphics.AndroidPath) r1;

        goto label2;

     label1:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Unable to obtain android.graphics.Path");

        throw $r6;

     label2:
        r5 = virtualinvoke $r7.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $f0 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getX()>();

        $f1 = virtualinvoke r2.<androidx.ui.geometry.Offset: float getY()>();

        virtualinvoke r4.<android.graphics.Path: void addPath(android.graphics.Path,float,float)>(r5, $f0, $f1);

        return;
    }

    public void close()
    {
        androidx.ui.graphics.AndroidPath r0;
        android.graphics.Path $r1;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        virtualinvoke $r1.<android.graphics.Path: void close()>();

        return;
    }

    public void reset()
    {
        androidx.ui.graphics.AndroidPath r0;
        android.graphics.Path $r1;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        virtualinvoke $r1.<android.graphics.Path: void reset()>();

        return;
    }

    public void shift(androidx.ui.geometry.Offset)
    {
        androidx.ui.graphics.AndroidPath r0;
        androidx.ui.geometry.Offset r1;
        android.graphics.Matrix $r2, $r3, $r5;
        float $f0, $f1;
        android.graphics.Path $r4;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r1 := @parameter0: androidx.ui.geometry.Offset;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "offset");

        $r2 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.Matrix mMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void reset()>();

        $r3 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.Matrix mMatrix>;

        $f0 = virtualinvoke r1.<androidx.ui.geometry.Offset: float getX()>();

        $f1 = virtualinvoke r1.<androidx.ui.geometry.Offset: float getY()>();

        virtualinvoke $r3.<android.graphics.Matrix: void setTranslate(float,float)>($f0, $f1);

        $r4 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $r5 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.Matrix mMatrix>;

        virtualinvoke $r4.<android.graphics.Path: void transform(android.graphics.Matrix)>($r5);

        return;
    }

    public androidx.ui.geometry.Rect getBounds()
    {
        androidx.ui.graphics.AndroidPath r0;
        android.graphics.Path $r1;
        android.graphics.RectF $r2, $r4, $r5, $r6, $r7;
        androidx.ui.geometry.Rect $r3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $r2 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        virtualinvoke $r1.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>($r2, 1);

        $r3 = new androidx.ui.geometry.Rect;

        $r4 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        $f3 = $r4.<android.graphics.RectF: float left>;

        $r5 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        $f2 = $r5.<android.graphics.RectF: float top>;

        $r6 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        $f1 = $r6.<android.graphics.RectF: float right>;

        $r7 = r0.<androidx.ui.graphics.AndroidPath: android.graphics.RectF rectF>;

        $f0 = $r7.<android.graphics.RectF: float bottom>;

        specialinvoke $r3.<androidx.ui.geometry.Rect: void <init>(float,float,float,float)>($f3, $f2, $f1, $f0);

        return $r3;
    }

    public boolean op(androidx.ui.graphics.Path, androidx.ui.graphics.Path, androidx.ui.graphics.PathOperation)
    {
        androidx.ui.graphics.AndroidPath r0, $r8, $r10;
        androidx.ui.graphics.Path r1, r2;
        androidx.ui.graphics.PathOperation r3;
        android.graphics.Path$Op r4, $r11;
        android.graphics.Path r5, r13, r14, r16, r17;
        int[] $r6;
        int $i0, $i1;
        java.lang.UnsupportedOperationException $r7, $r9;
        boolean $z0, $z1, $z3;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r1 := @parameter0: androidx.ui.graphics.Path;

        r2 := @parameter1: androidx.ui.graphics.Path;

        r3 := @parameter2: androidx.ui.graphics.PathOperation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "path1");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "path2");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "operation");

        $r6 = <androidx.ui.graphics.AndroidPath$WhenMappings: int[] $EnumSwitchMapping$0>;

        $i0 = virtualinvoke r3.<androidx.ui.graphics.PathOperation: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            default: goto label05;
        };

     label01:
        $r11 = <android.graphics.Path$Op: android.graphics.Path$Op DIFFERENCE>;

        goto label06;

     label02:
        $r11 = <android.graphics.Path$Op: android.graphics.Path$Op INTERSECT>;

        goto label06;

     label03:
        $r11 = <android.graphics.Path$Op: android.graphics.Path$Op REVERSE_DIFFERENCE>;

        goto label06;

     label04:
        $r11 = <android.graphics.Path$Op: android.graphics.Path$Op UNION>;

        goto label06;

     label05:
        $r11 = <android.graphics.Path$Op: android.graphics.Path$Op XOR>;

     label06:
        r4 = $r11;

        r13 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $z3 = r1 instanceof androidx.ui.graphics.AndroidPath;

        if $z3 == 0 goto label07;

        $r8 = (androidx.ui.graphics.AndroidPath) r1;

        goto label08;

     label07:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Unable to obtain android.graphics.Path");

        throw $r7;

     label08:
        r14 = virtualinvoke $r8.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        r16 = r14;

        r17 = r13;

        $z0 = r2 instanceof androidx.ui.graphics.AndroidPath;

        if $z0 == 0 goto label09;

        $r10 = (androidx.ui.graphics.AndroidPath) r2;

        goto label10;

     label09:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Unable to obtain android.graphics.Path");

        throw $r9;

     label10:
        r5 = virtualinvoke $r10.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $z1 = virtualinvoke r17.<android.graphics.Path: boolean op(android.graphics.Path,android.graphics.Path,android.graphics.Path$Op)>(r16, r5, r4);

        return $z1;
    }

    public boolean isConvex()
    {
        androidx.ui.graphics.AndroidPath r0;
        android.graphics.Path $r1;
        boolean $z0;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $z0 = virtualinvoke $r1.<android.graphics.Path: boolean isConvex()>();

        return $z0;
    }

    public static void isConvex$annotations()
    {
        return;
    }

    public boolean isEmpty()
    {
        androidx.ui.graphics.AndroidPath r0;
        android.graphics.Path $r1;
        boolean $z0;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        $r1 = virtualinvoke r0.<androidx.ui.graphics.AndroidPath: android.graphics.Path getInternalPath()>();

        $z0 = virtualinvoke $r1.<android.graphics.Path: boolean isEmpty()>();

        return $z0;
    }

    private final boolean _rectIsValid(androidx.ui.geometry.Rect)
    {
        androidx.ui.graphics.AndroidPath r0;
        androidx.ui.geometry.Rect r1;
        boolean $z0, $z1, $z2, $z3, z4, $z5, z6, z7, z8, z10, $z11, z12, z13, z14, z16, $z17, z18, z19, z20, z22, $z23, z24, z25, z26;
        java.lang.IllegalStateException $r2, $r5, $r8, $r11;
        java.lang.String $r3, $r6, $r9, $r12, r14, r15, r16, r17;
        java.lang.Throwable $r4, $r7, $r10, $r13;
        float f0, f1, f2, f3;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        f0 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getLeft()>();

        z4 = 0;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z0 != 0 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z6 = $z5;

        z7 = 0;

        z8 = 0;

        if z6 != 0 goto label03;

        r14 = "Rect.left is NaN";

        $r11 = new java.lang.IllegalStateException;

        $r12 = virtualinvoke r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        $r13 = (java.lang.Throwable) $r11;

        throw $r13;

     label03:
        f1 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getTop()>();

        z10 = 0;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f1);

        if $z1 != 0 goto label04;

        $z11 = 1;

        goto label05;

     label04:
        $z11 = 0;

     label05:
        z12 = $z11;

        z13 = 0;

        z14 = 0;

        if z12 != 0 goto label06;

        r15 = "Rect.top is NaN";

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke r15.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        $r10 = (java.lang.Throwable) $r8;

        throw $r10;

     label06:
        f2 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getRight()>();

        z16 = 0;

        $z2 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f2);

        if $z2 != 0 goto label07;

        $z17 = 1;

        goto label08;

     label07:
        $z17 = 0;

     label08:
        z18 = $z17;

        z19 = 0;

        z20 = 0;

        if z18 != 0 goto label09;

        r16 = "Rect.right is NaN";

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r16.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        $r7 = (java.lang.Throwable) $r5;

        throw $r7;

     label09:
        f3 = virtualinvoke r1.<androidx.ui.geometry.Rect: float getBottom()>();

        z22 = 0;

        $z3 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f3);

        if $z3 != 0 goto label10;

        $z23 = 1;

        goto label11;

     label10:
        $z23 = 0;

     label11:
        z24 = $z23;

        z25 = 0;

        z26 = 0;

        if z24 != 0 goto label12;

        r17 = "Rect.bottom is NaN";

        $r2 = new java.lang.IllegalStateException;

        $r3 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        $r4 = (java.lang.Throwable) $r2;

        throw $r4;

     label12:
        return 1;
    }

    public void arcToRad(androidx.ui.geometry.Rect, float, float, boolean)
    {
        androidx.ui.graphics.AndroidPath r0;
        androidx.ui.geometry.Rect r1;
        float f0, f1;
        boolean z0;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        r1 := @parameter0: androidx.ui.geometry.Rect;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        staticinvoke <androidx.ui.graphics.Path$DefaultImpls: void arcToRad(androidx.ui.graphics.Path,androidx.ui.geometry.Rect,float,float,boolean)>(r0, r1, f0, f1, z0);

        return;
    }

    public void <init>()
    {
        androidx.ui.graphics.AndroidPath r0;

        r0 := @this: androidx.ui.graphics.AndroidPath;

        specialinvoke r0.<androidx.ui.graphics.AndroidPath: void <init>(android.graphics.Path,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        return;
    }

androidx.ui.graphics.AndroidPath$WhenMappings
<androidx.ui.graphics.AndroidPath$WhenMappings: int[] $EnumSwitchMapping$0>
    public static final void <clinit>()
    {
        int[] r0;
        androidx.ui.graphics.PathOperation[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.ui.graphics.PathOperation $r2, $r3, $r4, $r5;

        $r1 = staticinvoke <androidx.ui.graphics.PathOperation: androidx.ui.graphics.PathOperation[] values()>();

        $i0 = lengthof $r1;

        r0 = newarray (int)[$i0];

        $r2 = <androidx.ui.graphics.PathOperation: androidx.ui.graphics.PathOperation difference>;

        $i1 = virtualinvoke $r2.<androidx.ui.graphics.PathOperation: int ordinal()>();

        r0[$i1] = 1;

        $r3 = <androidx.ui.graphics.PathOperation: androidx.ui.graphics.PathOperation intersect>;

        $i2 = virtualinvoke $r3.<androidx.ui.graphics.PathOperation: int ordinal()>();

        r0[$i2] = 2;

        $r4 = <androidx.ui.graphics.PathOperation: androidx.ui.graphics.PathOperation reverseDifference>;

        $i3 = virtualinvoke $r4.<androidx.ui.graphics.PathOperation: int ordinal()>();

        r0[$i3] = 3;

        $r5 = <androidx.ui.graphics.PathOperation: androidx.ui.graphics.PathOperation union>;

        $i4 = virtualinvoke $r5.<androidx.ui.graphics.PathOperation: int ordinal()>();

        r0[$i4] = 4;

        <androidx.ui.graphics.AndroidPath$WhenMappings: int[] $EnumSwitchMapping$0> = r0;

        return;
    }

