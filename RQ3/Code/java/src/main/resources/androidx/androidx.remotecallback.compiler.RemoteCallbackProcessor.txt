androidx.remotecallback.compiler.RemoteCallbackProcessor
<androidx.remotecallback.compiler.RemoteCallbackProcessor: java.lang.String REMOTE_CALLABLE>
<androidx.remotecallback.compiler.RemoteCallbackProcessor: java.util.HashMap mMap>
<androidx.remotecallback.compiler.RemoteCallbackProcessor: javax.'annotation'.processing.ProcessingEnvironment mEnv>
<androidx.remotecallback.compiler.RemoteCallbackProcessor: javax.'annotation'.processing.Messager mMessager>
    public void <init>()
    {
        androidx.remotecallback.compiler.RemoteCallbackProcessor r0;
        java.util.HashMap $r1;

        r0 := @this: androidx.remotecallback.compiler.RemoteCallbackProcessor;

        specialinvoke r0.<javax.'annotation'.processing.AbstractProcessor: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<androidx.remotecallback.compiler.RemoteCallbackProcessor: java.util.HashMap mMap> = $r1;

        return;
    }

    public synchronized void init(javax.'annotation'.processing.ProcessingEnvironment)
    {
        androidx.remotecallback.compiler.RemoteCallbackProcessor r0;
        javax.'annotation'.processing.ProcessingEnvironment r1;
        javax.'annotation'.processing.Messager $r2;

        r0 := @this: androidx.remotecallback.compiler.RemoteCallbackProcessor;

        r1 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;

        r0.<androidx.remotecallback.compiler.RemoteCallbackProcessor: javax.'annotation'.processing.ProcessingEnvironment mEnv> = r1;

        $r2 = interfaceinvoke r1.<javax.'annotation'.processing.ProcessingEnvironment: javax.'annotation'.processing.Messager getMessager()>();

        r0.<androidx.remotecallback.compiler.RemoteCallbackProcessor: javax.'annotation'.processing.Messager mMessager> = $r2;

        return;
    }

    public boolean process(java.util.Set, javax.'annotation'.processing.RoundEnvironment)
    {
        androidx.remotecallback.compiler.RemoteCallbackProcessor r0;
        java.util.Set r1, $r5;
        javax.'annotation'.processing.RoundEnvironment r2;
        javax.lang.model.element.TypeElement r3;
        javax.lang.model.element.Element r4, r17;
        boolean $z0, $z1, $z2;
        java.util.HashMap $r6, $r12;
        java.util.Collection $r7;
        java.lang.Object $r8, $r11, $r14;
        javax.'annotation'.processing.Messager $r9;
        javax.'annotation'.processing.ProcessingEnvironment $r10;
        java.util.function.Function $r13;
        androidx.remotecallback.compiler.CallbackReceiver $r15, r19;
        java.util.Iterator r16, r18;

        r0 := @this: androidx.remotecallback.compiler.RemoteCallbackProcessor;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: javax.'annotation'.processing.RoundEnvironment;

        $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r3 = specialinvoke r0.<androidx.remotecallback.compiler.RemoteCallbackProcessor: javax.lang.model.element.TypeElement findAnnotation(java.util.Set,java.lang.String)>(r1, "androidx.remotecallback.RemoteCallable");

        $r5 = interfaceinvoke r2.<javax.'annotation'.processing.RoundEnvironment: java.util.Set getElementsAnnotatedWith(javax.lang.model.element.TypeElement)>(r3);

        r16 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r11 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (javax.lang.model.element.Element) $r11;

        r4 = specialinvoke r0.<androidx.remotecallback.compiler.RemoteCallbackProcessor: javax.lang.model.element.Element findClass(javax.lang.model.element.Element)>(r17);

        $r12 = r0.<androidx.remotecallback.compiler.RemoteCallbackProcessor: java.util.HashMap mMap>;

        $r13 = dynamicinvoke "apply" <java.util.function.Function (androidx.remotecallback.compiler.RemoteCallbackProcessor)>(r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_SPECIAL" <androidx.remotecallback.compiler.RemoteCallbackProcessor: androidx.remotecallback.compiler.CallbackReceiver lambda$process$0(javax.lang.model.element.Element)>, methodtype: androidx.remotecallback.compiler.CallbackReceiver __METHODTYPE__(javax.lang.model.element.Element));

        $r14 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(r4, $r13);

        $r15 = (androidx.remotecallback.compiler.CallbackReceiver) $r14;

        virtualinvoke $r15.<androidx.remotecallback.compiler.CallbackReceiver: void addMethod(javax.lang.model.element.Element)>(r17);

        goto label2;

     label3:
        $r6 = r0.<androidx.remotecallback.compiler.RemoteCallbackProcessor: java.util.HashMap mMap>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Collection values()>();

        r18 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r8 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (androidx.remotecallback.compiler.CallbackReceiver) $r8;

        $r10 = r0.<androidx.remotecallback.compiler.RemoteCallbackProcessor: javax.'annotation'.processing.ProcessingEnvironment mEnv>;

        $r9 = r0.<androidx.remotecallback.compiler.RemoteCallbackProcessor: javax.'annotation'.processing.Messager mMessager>;

        virtualinvoke r19.<androidx.remotecallback.compiler.CallbackReceiver: void finish(javax.'annotation'.processing.ProcessingEnvironment,javax.'annotation'.processing.Messager)>($r10, $r9);

        goto label4;

     label5:
        return 1;
    }

    private javax.lang.model.element.Element findClass(javax.lang.model.element.Element)
    {
        androidx.remotecallback.compiler.RemoteCallbackProcessor r0;
        javax.lang.model.element.Element r1, $r4, $r5;
        javax.lang.model.element.ElementKind $r2, $r3;

        r0 := @this: androidx.remotecallback.compiler.RemoteCallbackProcessor;

        r1 := @parameter0: javax.lang.model.element.Element;

        if r1 == null goto label1;

        $r2 = interfaceinvoke r1.<javax.lang.model.element.Element: javax.lang.model.element.ElementKind getKind()>();

        $r3 = <javax.lang.model.element.ElementKind: javax.lang.model.element.ElementKind CLASS>;

        if $r2 == $r3 goto label1;

        $r4 = interfaceinvoke r1.<javax.lang.model.element.Element: javax.lang.model.element.Element getEnclosingElement()>();

        $r5 = specialinvoke r0.<androidx.remotecallback.compiler.RemoteCallbackProcessor: javax.lang.model.element.Element findClass(javax.lang.model.element.Element)>($r4);

        return $r5;

     label1:
        return r1;
    }

    private javax.lang.model.element.TypeElement findAnnotation(java.util.Set, java.lang.String)
    {
        androidx.remotecallback.compiler.RemoteCallbackProcessor r0;
        java.util.Set r1;
        java.lang.String r2, $r6;
        java.util.Iterator r3;
        javax.lang.model.element.TypeElement r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: androidx.remotecallback.compiler.RemoteCallbackProcessor;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.lang.String;

        r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (javax.lang.model.element.TypeElement) $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    private androidx.remotecallback.compiler.CallbackReceiver lambda$process$0(javax.lang.model.element.Element)
    {
        androidx.remotecallback.compiler.RemoteCallbackProcessor r0;
        javax.lang.model.element.Element r1;
        androidx.remotecallback.compiler.CallbackReceiver $r2;
        javax.'annotation'.processing.Messager $r3;
        javax.'annotation'.processing.ProcessingEnvironment $r4;

        r0 := @this: androidx.remotecallback.compiler.RemoteCallbackProcessor;

        r1 := @parameter0: javax.lang.model.element.Element;

        $r2 = new androidx.remotecallback.compiler.CallbackReceiver;

        $r4 = r0.<androidx.remotecallback.compiler.RemoteCallbackProcessor: javax.'annotation'.processing.ProcessingEnvironment mEnv>;

        $r3 = r0.<androidx.remotecallback.compiler.RemoteCallbackProcessor: javax.'annotation'.processing.Messager mMessager>;

        specialinvoke $r2.<androidx.remotecallback.compiler.CallbackReceiver: void <init>(javax.lang.model.element.Element,javax.'annotation'.processing.ProcessingEnvironment,javax.'annotation'.processing.Messager)>(r1, $r4, $r3);

        return $r2;
    }

