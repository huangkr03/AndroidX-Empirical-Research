androidx.compose.material.ripple.RippleHostMap
<androidx.compose.material.ripple.RippleHostMap: java.util.Map indicationToHostMap>
<androidx.compose.material.ripple.RippleHostMap: java.util.Map hostToIndicationMap>
    public void <init>()
    {
        androidx.compose.material.ripple.RippleHostMap r0;
        java.util.LinkedHashMap $r1, $r3;
        java.util.Map $r2, $r4;

        r0 := @this: androidx.compose.material.ripple.RippleHostMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        $r2 = (java.util.Map) $r1;

        r0.<androidx.compose.material.ripple.RippleHostMap: java.util.Map indicationToHostMap> = $r2;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        $r4 = (java.util.Map) $r3;

        r0.<androidx.compose.material.ripple.RippleHostMap: java.util.Map hostToIndicationMap> = $r4;

        return;
    }

    public final void set(androidx.compose.material.ripple.AndroidRippleIndicationInstance, androidx.compose.material.ripple.RippleHostView)
    {
        androidx.compose.material.ripple.RippleHostMap r0;
        androidx.compose.material.ripple.AndroidRippleIndicationInstance r1;
        androidx.compose.material.ripple.RippleHostView r2;
        java.util.Map $r3, $r5;

        r0 := @this: androidx.compose.material.ripple.RippleHostMap;

        r1 := @parameter0: androidx.compose.material.ripple.AndroidRippleIndicationInstance;

        r2 := @parameter1: androidx.compose.material.ripple.RippleHostView;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "indicationInstance");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "rippleHostView");

        $r3 = r0.<androidx.compose.material.ripple.RippleHostMap: java.util.Map indicationToHostMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = r0.<androidx.compose.material.ripple.RippleHostMap: java.util.Map hostToIndicationMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        return;
    }

    public final androidx.compose.material.ripple.RippleHostView get(androidx.compose.material.ripple.AndroidRippleIndicationInstance)
    {
        androidx.compose.material.ripple.RippleHostMap r0;
        androidx.compose.material.ripple.AndroidRippleIndicationInstance r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        androidx.compose.material.ripple.RippleHostView $r4;

        r0 := @this: androidx.compose.material.ripple.RippleHostMap;

        r1 := @parameter0: androidx.compose.material.ripple.AndroidRippleIndicationInstance;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "indicationInstance");

        $r2 = r0.<androidx.compose.material.ripple.RippleHostMap: java.util.Map indicationToHostMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (androidx.compose.material.ripple.RippleHostView) $r3;

        return $r4;
    }

    public final androidx.compose.material.ripple.AndroidRippleIndicationInstance get(androidx.compose.material.ripple.RippleHostView)
    {
        androidx.compose.material.ripple.RippleHostMap r0;
        androidx.compose.material.ripple.RippleHostView r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        androidx.compose.material.ripple.AndroidRippleIndicationInstance $r4;

        r0 := @this: androidx.compose.material.ripple.RippleHostMap;

        r1 := @parameter0: androidx.compose.material.ripple.RippleHostView;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "rippleHostView");

        $r2 = r0.<androidx.compose.material.ripple.RippleHostMap: java.util.Map hostToIndicationMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (androidx.compose.material.ripple.AndroidRippleIndicationInstance) $r3;

        return $r4;
    }

    public final void remove(androidx.compose.material.ripple.AndroidRippleIndicationInstance)
    {
        androidx.compose.material.ripple.RippleHostMap r0;
        androidx.compose.material.ripple.AndroidRippleIndicationInstance r1, $r10;
        androidx.compose.material.ripple.RippleHostView r2, $r5;
        java.util.Map $r3, $r6, $r8;
        java.lang.Object $r4, $r9;

        r0 := @this: androidx.compose.material.ripple.RippleHostMap;

        r1 := @parameter0: androidx.compose.material.ripple.AndroidRippleIndicationInstance;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "indicationInstance");

        $r3 = r0.<androidx.compose.material.ripple.RippleHostMap: java.util.Map indicationToHostMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (androidx.compose.material.ripple.RippleHostView) $r4;

        if $r5 == null goto label1;

        r2 = $r5;

        $r8 = r0.<androidx.compose.material.ripple.RippleHostMap: java.util.Map hostToIndicationMap>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        $r10 = (androidx.compose.material.ripple.AndroidRippleIndicationInstance) $r9;

        goto label1;

     label1:
        $r6 = r0.<androidx.compose.material.ripple.RippleHostMap: java.util.Map indicationToHostMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

