androidx.privacysandbox.ads.adservices.measurement.MeasurementManager
<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion Companion>
<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: int MEASUREMENT_API_STATE_DISABLED>
<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: int MEASUREMENT_API_STATE_ENABLED>
    public void <init>()
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager r0;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: java.lang.Object deleteRegistrations(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest,kotlin.coroutines.Continuation)>
<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: java.lang.Object registerSource(android.net.Uri,android.view.InputEvent,kotlin.coroutines.Continuation)>
<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: java.lang.Object registerTrigger(android.net.Uri,kotlin.coroutines.Continuation)>
<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: java.lang.Object registerWebSource(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest,kotlin.coroutines.Continuation)>
<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: java.lang.Object registerWebTrigger(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest,kotlin.coroutines.Continuation)>
<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: java.lang.Object getMeasurementApiStatus(kotlin.coroutines.Continuation)>
    public static final androidx.privacysandbox.ads.adservices.measurement.MeasurementManager obtain(android.content.Context)
    {
        android.content.Context r0;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion $r1;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = <androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager obtain(android.content.Context)>(r0);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion $r0;

        $r0 = new androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion;

        specialinvoke $r0.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion Companion> = $r0;

        return;
    }

androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl
<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.MeasurementManager mMeasurementManager>
    public void <init>(android.adservices.measurement.MeasurementManager)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl r0;
        android.adservices.measurement.MeasurementManager r1;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter0: android.adservices.measurement.MeasurementManager;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "mMeasurementManager");

        specialinvoke r0.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: void <init>()>();

        r0.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.MeasurementManager mMeasurementManager> = r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.adservices.measurement.MeasurementManager $r3;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/adservices/measurement/MeasurementManager;");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "context.getSystemService\u2026:class.java\n            )");

        $r3 = (android.adservices.measurement.MeasurementManager) $r2;

        specialinvoke r0.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: void <init>(android.adservices.measurement.MeasurementManager)>($r3);

        return;
    }

    public java.lang.Object deleteRegistrations(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl r0;
        androidx.privacysandbox.ads.adservices.measurement.DeletionRequest r1;
        kotlin.coroutines.Continuation $r2, r3, $r7, $r11;
        kotlinx.coroutines.CancellableContinuationImpl r4, $r6;
        kotlinx.coroutines.CancellableContinuation r5;
        android.adservices.measurement.MeasurementManager $r8;
        android.adservices.measurement.DeletionRequest $r9;
        java.util.concurrent.Executor $r10;
        android.os.OutcomeReceiver $r12;
        java.lang.Object $r13, $r14, $r15;
        kotlin.Unit $r16;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.DeletionRequest;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r3 = $r2;

        $r6 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r3);

        specialinvoke $r6.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r7, 1);

        r4 = $r6;

        virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r5 = (kotlinx.coroutines.CancellableContinuation) r4;

        $r8 = staticinvoke <androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl)>(r0);

        $r9 = staticinvoke <androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.DeletionRequest access$convertDeletionRequest(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl,androidx.privacysandbox.ads.adservices.measurement.DeletionRequest)>(r0, r1);

        $r10 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        $r11 = (kotlin.coroutines.Continuation) r5;

        $r12 = staticinvoke <androidx.core.os.OutcomeReceiverKt: android.os.OutcomeReceiver asOutcomeReceiver(kotlin.coroutines.Continuation)>($r11);

        virtualinvoke $r8.<android.adservices.measurement.MeasurementManager: void deleteRegistrations(android.adservices.measurement.DeletionRequest,java.util.concurrent.Executor,android.os.OutcomeReceiver)>($r9, $r10, $r12);

        $r13 = virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r14 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r13 != $r14 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label1:
        $r15 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r13 != $r15 goto label2;

        return $r13;

     label2:
        $r16 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r16;
    }

    private final android.adservices.measurement.DeletionRequest convertDeletionRequest(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl r0;
        androidx.privacysandbox.ads.adservices.measurement.DeletionRequest r1;
        android.adservices.measurement.DeletionRequest$Builder $r2, $r3, $r4, $r6, $r8, $r10, $r12;
        int $i0, $i1;
        java.time.Instant $r5, $r7;
        java.util.List $r9, $r11;
        android.adservices.measurement.DeletionRequest $r13;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.DeletionRequest;

        $r2 = new android.adservices.measurement.DeletionRequest$Builder;

        specialinvoke $r2.<android.adservices.measurement.DeletionRequest$Builder: void <init>()>();

        $i0 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.DeletionRequest: int getDeletionMode()>();

        $r3 = virtualinvoke $r2.<android.adservices.measurement.DeletionRequest$Builder: android.adservices.measurement.DeletionRequest$Builder setDeletionMode(int)>($i0);

        $i1 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.DeletionRequest: int getMatchBehavior()>();

        $r4 = virtualinvoke $r3.<android.adservices.measurement.DeletionRequest$Builder: android.adservices.measurement.DeletionRequest$Builder setMatchBehavior(int)>($i1);

        $r5 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.DeletionRequest: java.time.Instant getStart()>();

        $r6 = virtualinvoke $r4.<android.adservices.measurement.DeletionRequest$Builder: android.adservices.measurement.DeletionRequest$Builder setStart(java.time.Instant)>($r5);

        $r7 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.DeletionRequest: java.time.Instant getEnd()>();

        $r8 = virtualinvoke $r6.<android.adservices.measurement.DeletionRequest$Builder: android.adservices.measurement.DeletionRequest$Builder setEnd(java.time.Instant)>($r7);

        $r9 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.DeletionRequest: java.util.List getDomainUris()>();

        $r10 = virtualinvoke $r8.<android.adservices.measurement.DeletionRequest$Builder: android.adservices.measurement.DeletionRequest$Builder setDomainUris(java.util.List)>($r9);

        $r11 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.DeletionRequest: java.util.List getOriginUris()>();

        $r12 = virtualinvoke $r10.<android.adservices.measurement.DeletionRequest$Builder: android.adservices.measurement.DeletionRequest$Builder setOriginUris(java.util.List)>($r11);

        $r13 = virtualinvoke $r12.<android.adservices.measurement.DeletionRequest$Builder: android.adservices.measurement.DeletionRequest build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r13, "Builder()\n              \u2026\n                .build()");

        return $r13;
    }

    public java.lang.Object registerSource(android.net.Uri, android.view.InputEvent, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl r0;
        android.net.Uri r1;
        android.view.InputEvent r2;
        kotlin.coroutines.Continuation $r3, r4, $r8, $r11;
        kotlinx.coroutines.CancellableContinuationImpl r5, $r7;
        kotlinx.coroutines.CancellableContinuation r6;
        android.adservices.measurement.MeasurementManager $r9;
        java.util.concurrent.Executor $r10;
        android.os.OutcomeReceiver $r12;
        java.lang.Object $r13, $r14, $r15;
        kotlin.Unit $r16;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.view.InputEvent;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        r4 = $r3;

        $r7 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r8 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r4);

        specialinvoke $r7.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r8, 1);

        r5 = $r7;

        virtualinvoke r5.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r6 = (kotlinx.coroutines.CancellableContinuation) r5;

        $r9 = staticinvoke <androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl)>(r0);

        $r10 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        $r11 = (kotlin.coroutines.Continuation) r6;

        $r12 = staticinvoke <androidx.core.os.OutcomeReceiverKt: android.os.OutcomeReceiver asOutcomeReceiver(kotlin.coroutines.Continuation)>($r11);

        virtualinvoke $r9.<android.adservices.measurement.MeasurementManager: void registerSource(android.net.Uri,android.view.InputEvent,java.util.concurrent.Executor,android.os.OutcomeReceiver)>(r1, r2, $r10, $r12);

        $r13 = virtualinvoke r5.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r14 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r13 != $r14 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r3);

     label1:
        $r15 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r13 != $r15 goto label2;

        return $r13;

     label2:
        $r16 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r16;
    }

    public java.lang.Object registerTrigger(android.net.Uri, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl r0;
        android.net.Uri r1;
        kotlin.coroutines.Continuation $r2, r3, $r7, $r10;
        kotlinx.coroutines.CancellableContinuationImpl r4, $r6;
        kotlinx.coroutines.CancellableContinuation r5;
        android.adservices.measurement.MeasurementManager $r8;
        java.util.concurrent.Executor $r9;
        android.os.OutcomeReceiver $r11;
        java.lang.Object $r12, $r13, $r14;
        kotlin.Unit $r15;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r3 = $r2;

        $r6 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r3);

        specialinvoke $r6.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r7, 1);

        r4 = $r6;

        virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r5 = (kotlinx.coroutines.CancellableContinuation) r4;

        $r8 = staticinvoke <androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl)>(r0);

        $r9 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        $r10 = (kotlin.coroutines.Continuation) r5;

        $r11 = staticinvoke <androidx.core.os.OutcomeReceiverKt: android.os.OutcomeReceiver asOutcomeReceiver(kotlin.coroutines.Continuation)>($r10);

        virtualinvoke $r8.<android.adservices.measurement.MeasurementManager: void registerTrigger(android.net.Uri,java.util.concurrent.Executor,android.os.OutcomeReceiver)>(r1, $r9, $r11);

        $r12 = virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r13 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r12 != $r13 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label1:
        $r14 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r12 != $r14 goto label2;

        return $r12;

     label2:
        $r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r15;
    }

    public java.lang.Object registerWebSource(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl r0;
        androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest r1;
        kotlin.coroutines.Continuation $r2, r3, $r7, $r11;
        kotlinx.coroutines.CancellableContinuationImpl r4, $r6;
        kotlinx.coroutines.CancellableContinuation r5;
        android.adservices.measurement.MeasurementManager $r8;
        android.adservices.measurement.WebSourceRegistrationRequest $r9;
        java.util.concurrent.Executor $r10;
        android.os.OutcomeReceiver $r12;
        java.lang.Object $r13, $r14, $r15;
        kotlin.Unit $r16;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r3 = $r2;

        $r6 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r3);

        specialinvoke $r6.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r7, 1);

        r4 = $r6;

        virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r5 = (kotlinx.coroutines.CancellableContinuation) r4;

        $r8 = staticinvoke <androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl)>(r0);

        $r9 = staticinvoke <androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.WebSourceRegistrationRequest access$convertWebSourceRequest(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl,androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest)>(r0, r1);

        $r10 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        $r11 = (kotlin.coroutines.Continuation) r5;

        $r12 = staticinvoke <androidx.core.os.OutcomeReceiverKt: android.os.OutcomeReceiver asOutcomeReceiver(kotlin.coroutines.Continuation)>($r11);

        virtualinvoke $r8.<android.adservices.measurement.MeasurementManager: void registerWebSource(android.adservices.measurement.WebSourceRegistrationRequest,java.util.concurrent.Executor,android.os.OutcomeReceiver)>($r9, $r10, $r12);

        $r13 = virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r14 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r13 != $r14 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label1:
        $r15 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r13 != $r15 goto label2;

        return $r13;

     label2:
        $r16 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r16;
    }

    private final android.adservices.measurement.WebSourceRegistrationRequest convertWebSourceRequest(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl r0;
        androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest r1;
        android.adservices.measurement.WebSourceRegistrationRequest$Builder $r2, $r7, $r9, $r11, $r13;
        java.util.List $r3, $r4;
        android.net.Uri $r5, $r6, $r8, $r12;
        android.view.InputEvent $r10;
        android.adservices.measurement.WebSourceRegistrationRequest $r14;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest;

        $r2 = new android.adservices.measurement.WebSourceRegistrationRequest$Builder;

        $r3 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest: java.util.List getWebSourceParams()>();

        $r4 = specialinvoke r0.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: java.util.List convertWebSourceParams(java.util.List)>($r3);

        $r5 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest: android.net.Uri getTopOriginUri()>();

        specialinvoke $r2.<android.adservices.measurement.WebSourceRegistrationRequest$Builder: void <init>(java.util.List,android.net.Uri)>($r4, $r5);

        $r6 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest: android.net.Uri getWebDestination()>();

        $r7 = virtualinvoke $r2.<android.adservices.measurement.WebSourceRegistrationRequest$Builder: android.adservices.measurement.WebSourceRegistrationRequest$Builder setWebDestination(android.net.Uri)>($r6);

        $r8 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest: android.net.Uri getAppDestination()>();

        $r9 = virtualinvoke $r7.<android.adservices.measurement.WebSourceRegistrationRequest$Builder: android.adservices.measurement.WebSourceRegistrationRequest$Builder setAppDestination(android.net.Uri)>($r8);

        $r10 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest: android.view.InputEvent getInputEvent()>();

        $r11 = virtualinvoke $r9.<android.adservices.measurement.WebSourceRegistrationRequest$Builder: android.adservices.measurement.WebSourceRegistrationRequest$Builder setInputEvent(android.view.InputEvent)>($r10);

        $r12 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest: android.net.Uri getVerifiedDestination()>();

        $r13 = virtualinvoke $r11.<android.adservices.measurement.WebSourceRegistrationRequest$Builder: android.adservices.measurement.WebSourceRegistrationRequest$Builder setVerifiedDestination(android.net.Uri)>($r12);

        $r14 = virtualinvoke $r13.<android.adservices.measurement.WebSourceRegistrationRequest$Builder: android.adservices.measurement.WebSourceRegistrationRequest build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r14, "Builder(\n               \u2026\n                .build()");

        return $r14;
    }

    private final java.util.List convertWebSourceParams(java.util.List)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl r0;
        java.util.List r1, r2;
        java.util.Iterator r3;
        androidx.privacysandbox.ads.adservices.measurement.WebSourceParams r4;
        java.util.ArrayList $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        android.adservices.measurement.WebSourceParams$Builder $r7, $r9;
        android.net.Uri $r8;
        android.adservices.measurement.WebSourceParams $r10;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter0: java.util.List;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r5;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.privacysandbox.ads.adservices.measurement.WebSourceParams) $r6;

        $r7 = new android.adservices.measurement.WebSourceParams$Builder;

        $r8 = virtualinvoke r4.<androidx.privacysandbox.ads.adservices.measurement.WebSourceParams: android.net.Uri getRegistrationUri()>();

        specialinvoke $r7.<android.adservices.measurement.WebSourceParams$Builder: void <init>(android.net.Uri)>($r8);

        $z1 = virtualinvoke r4.<androidx.privacysandbox.ads.adservices.measurement.WebSourceParams: boolean getDebugKeyAllowed()>();

        $r9 = virtualinvoke $r7.<android.adservices.measurement.WebSourceParams$Builder: android.adservices.measurement.WebSourceParams$Builder setDebugKeyAllowed(boolean)>($z1);

        $r10 = virtualinvoke $r9.<android.adservices.measurement.WebSourceParams$Builder: android.adservices.measurement.WebSourceParams build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "Builder(param.registrati\u2026                 .build()");

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        return r2;
    }

    public java.lang.Object registerWebTrigger(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest, kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl r0;
        androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest r1;
        kotlin.coroutines.Continuation $r2, r3, $r7, $r11;
        kotlinx.coroutines.CancellableContinuationImpl r4, $r6;
        kotlinx.coroutines.CancellableContinuation r5;
        android.adservices.measurement.MeasurementManager $r8;
        android.adservices.measurement.WebTriggerRegistrationRequest $r9;
        java.util.concurrent.Executor $r10;
        android.os.OutcomeReceiver $r12;
        java.lang.Object $r13, $r14, $r15;
        kotlin.Unit $r16;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r3 = $r2;

        $r6 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r3);

        specialinvoke $r6.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r7, 1);

        r4 = $r6;

        virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r5 = (kotlinx.coroutines.CancellableContinuation) r4;

        $r8 = staticinvoke <androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl)>(r0);

        $r9 = staticinvoke <androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.WebTriggerRegistrationRequest access$convertWebTriggerRequest(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl,androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest)>(r0, r1);

        $r10 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        $r11 = (kotlin.coroutines.Continuation) r5;

        $r12 = staticinvoke <androidx.core.os.OutcomeReceiverKt: android.os.OutcomeReceiver asOutcomeReceiver(kotlin.coroutines.Continuation)>($r11);

        virtualinvoke $r8.<android.adservices.measurement.MeasurementManager: void registerWebTrigger(android.adservices.measurement.WebTriggerRegistrationRequest,java.util.concurrent.Executor,android.os.OutcomeReceiver)>($r9, $r10, $r12);

        $r13 = virtualinvoke r4.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r14 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r13 != $r14 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r2);

     label1:
        $r15 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r13 != $r15 goto label2;

        return $r13;

     label2:
        $r16 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r16;
    }

    private final android.adservices.measurement.WebTriggerRegistrationRequest convertWebTriggerRequest(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl r0;
        androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest r1;
        android.adservices.measurement.WebTriggerRegistrationRequest$Builder $r2;
        java.util.List $r3, $r4;
        android.net.Uri $r5;
        android.adservices.measurement.WebTriggerRegistrationRequest $r6;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest;

        $r2 = new android.adservices.measurement.WebTriggerRegistrationRequest$Builder;

        $r3 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest: java.util.List getWebTriggerParams()>();

        $r4 = specialinvoke r0.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: java.util.List convertWebTriggerParams(java.util.List)>($r3);

        $r5 = virtualinvoke r1.<androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest: android.net.Uri getDestination()>();

        specialinvoke $r2.<android.adservices.measurement.WebTriggerRegistrationRequest$Builder: void <init>(java.util.List,android.net.Uri)>($r4, $r5);

        $r6 = virtualinvoke $r2.<android.adservices.measurement.WebTriggerRegistrationRequest$Builder: android.adservices.measurement.WebTriggerRegistrationRequest build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r6, "Builder(\n               \u2026\n                .build()");

        return $r6;
    }

    private final java.util.List convertWebTriggerParams(java.util.List)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl r0;
        java.util.List r1, r2;
        java.util.Iterator r3;
        androidx.privacysandbox.ads.adservices.measurement.WebTriggerParams r4;
        java.util.ArrayList $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        android.adservices.measurement.WebTriggerParams$Builder $r7, $r9;
        android.net.Uri $r8;
        android.adservices.measurement.WebTriggerParams $r10;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter0: java.util.List;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = (java.util.List) $r5;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (androidx.privacysandbox.ads.adservices.measurement.WebTriggerParams) $r6;

        $r7 = new android.adservices.measurement.WebTriggerParams$Builder;

        $r8 = virtualinvoke r4.<androidx.privacysandbox.ads.adservices.measurement.WebTriggerParams: android.net.Uri getRegistrationUri()>();

        specialinvoke $r7.<android.adservices.measurement.WebTriggerParams$Builder: void <init>(android.net.Uri)>($r8);

        $z1 = virtualinvoke r4.<androidx.privacysandbox.ads.adservices.measurement.WebTriggerParams: boolean getDebugKeyAllowed()>();

        $r9 = virtualinvoke $r7.<android.adservices.measurement.WebTriggerParams$Builder: android.adservices.measurement.WebTriggerParams$Builder setDebugKeyAllowed(boolean)>($z1);

        $r10 = virtualinvoke $r9.<android.adservices.measurement.WebTriggerParams$Builder: android.adservices.measurement.WebTriggerParams build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r10, "Builder(param.registrati\u2026                 .build()");

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        return r2;
    }

    public java.lang.Object getMeasurementApiStatus(kotlin.coroutines.Continuation)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl r0;
        kotlin.coroutines.Continuation $r1, r2, $r6, $r9;
        kotlinx.coroutines.CancellableContinuationImpl r3, $r5;
        kotlinx.coroutines.CancellableContinuation r4;
        android.adservices.measurement.MeasurementManager $r7;
        java.util.concurrent.Executor $r8;
        android.os.OutcomeReceiver $r10;
        java.lang.Object $r11, $r12;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        $r1 := @parameter0: kotlin.coroutines.Continuation;

        r2 = $r1;

        $r5 = new kotlinx.coroutines.CancellableContinuationImpl;

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)>(r2);

        specialinvoke $r5.<kotlinx.coroutines.CancellableContinuationImpl: void <init>(kotlin.coroutines.Continuation,int)>($r6, 1);

        r3 = $r5;

        virtualinvoke r3.<kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()>();

        r4 = (kotlinx.coroutines.CancellableContinuation) r3;

        $r7 = staticinvoke <androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl)>(r0);

        $r8 = dynamicinvoke "execute" <java.util.concurrent.Executor ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Runnable), methodhandle: "REF_INVOKE_INTERFACE" <java.lang.Runnable: void run()>, methodtype: void __METHODTYPE__(java.lang.Runnable));

        $r9 = (kotlin.coroutines.Continuation) r4;

        $r10 = staticinvoke <androidx.core.os.OutcomeReceiverKt: android.os.OutcomeReceiver asOutcomeReceiver(kotlin.coroutines.Continuation)>($r9);

        virtualinvoke $r7.<android.adservices.measurement.MeasurementManager: void getMeasurementApiStatus(java.util.concurrent.Executor,android.os.OutcomeReceiver)>($r8, $r10);

        $r11 = virtualinvoke r3.<kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()>();

        $r12 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r11 != $r12 goto label1;

        staticinvoke <kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)>($r1);

     label1:
        return $r11;
    }

    public static final android.adservices.measurement.MeasurementManager access$getMMeasurementManager$p(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl $r0;
        android.adservices.measurement.MeasurementManager $r1;

        $r0 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        $r1 = $r0.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.MeasurementManager mMeasurementManager>;

        return $r1;
    }

    public static final android.adservices.measurement.DeletionRequest access$convertDeletionRequest(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl, androidx.privacysandbox.ads.adservices.measurement.DeletionRequest)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl $r0;
        androidx.privacysandbox.ads.adservices.measurement.DeletionRequest r1;
        android.adservices.measurement.DeletionRequest $r2;

        $r0 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter1: androidx.privacysandbox.ads.adservices.measurement.DeletionRequest;

        $r2 = specialinvoke $r0.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.DeletionRequest convertDeletionRequest(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest)>(r1);

        return $r2;
    }

    public static final android.adservices.measurement.WebSourceRegistrationRequest access$convertWebSourceRequest(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl, androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl $r0;
        androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest r1;
        android.adservices.measurement.WebSourceRegistrationRequest $r2;

        $r0 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter1: androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest;

        $r2 = specialinvoke $r0.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.WebSourceRegistrationRequest convertWebSourceRequest(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest)>(r1);

        return $r2;
    }

    public static final android.adservices.measurement.WebTriggerRegistrationRequest access$convertWebTriggerRequest(androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl, androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl $r0;
        androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest r1;
        android.adservices.measurement.WebTriggerRegistrationRequest $r2;

        $r0 := @parameter0: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        r1 := @parameter1: androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest;

        $r2 = specialinvoke $r0.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: android.adservices.measurement.WebTriggerRegistrationRequest convertWebTriggerRequest(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest)>(r1);

        return $r2;
    }

androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion
    private void <init>()
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion r0;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.privacysandbox.ads.adservices.measurement.MeasurementManager obtain(android.content.Context)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion r0;
        android.content.Context r1;
        androidx.privacysandbox.ads.adservices.internal.AdServicesInfo $r2;
        int $i0;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl $r3;
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager $r4;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        $r2 = <androidx.privacysandbox.ads.adservices.internal.AdServicesInfo: androidx.privacysandbox.ads.adservices.internal.AdServicesInfo INSTANCE>;

        $i0 = virtualinvoke $r2.<androidx.privacysandbox.ads.adservices.internal.AdServicesInfo: int version()>();

        if $i0 < 4 goto label1;

        $r3 = new androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl;

        specialinvoke $r3.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext4Impl: void <init>(android.content.Context)>(r1);

        $r4 = (androidx.privacysandbox.ads.adservices.measurement.MeasurementManager) $r3;

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Companion: void <init>()>();

        return;
    }

