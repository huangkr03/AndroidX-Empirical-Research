androidx.metrics.performance.PerformanceMetricsState
<androidx.metrics.performance.PerformanceMetricsState: androidx.metrics.performance.PerformanceMetricsState$Companion Companion>
<androidx.metrics.performance.PerformanceMetricsState: java.util.List states>
<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>
<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesHolder>
<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesToBeCleared>
<androidx.metrics.performance.PerformanceMetricsState: java.util.List stateDataPool>
    private void <init>()
    {
        androidx.metrics.performance.PerformanceMetricsState r0;
        java.util.ArrayList $r1, $r3, $r5, $r7, $r9;
        java.util.List $r2, $r4, $r6, $r8, $r10;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = (java.util.List) $r1;

        r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List states> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = (java.util.List) $r3;

        r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = (java.util.List) $r5;

        r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesHolder> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = (java.util.List) $r7;

        r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesToBeCleared> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10 = (java.util.List) $r9;

        r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List stateDataPool> = $r10;

        return;
    }

    private final void addFrameState(long, long, java.util.List, java.util.List)
    {
        androidx.metrics.performance.PerformanceMetricsState r0;
        long l0, l1, $l7, $l8, $l10, $l12, $l14, $l16, $l17;
        java.util.List r1, r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r19, $r21, $r23, $r24, $r30, $r32, $r35, $r36;
        int i2, $i3, $i4, $i5, $i6, i19, i20, i21, i22, i23, i24, i25, i26;
        androidx.metrics.performance.PerformanceMetricsState$StateData r3, $r12, $r38, r39, r40;
        java.lang.Object $r11, $r16, $r22, $r25, $r34, $r37;
        androidx.metrics.performance.StateInfo $r13, $r26, $r28;
        java.lang.Number $r17;
        java.lang.Integer $r20, $r31, $r33;
        boolean $z1, $z2, $z6;
        java.lang.String $r27, $r29;
        byte $b9, $b11, $b13, $b15, $b18;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: java.util.List;

        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        i19 = $i3 + -1;

        if 0 > i19 goto label04;

     label01:
        i20 = i19;

        i19 = i19 + -1;

        $r34 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i20);

        r39 = (androidx.metrics.performance.PerformanceMetricsState$StateData) $r34;

        $l10 = virtualinvoke r39.<androidx.metrics.performance.PerformanceMetricsState$StateData: long getTimeRemoved()>();

        $b11 = $l10 cmp 0L;

        if $b11 <= 0 goto label02;

        $l17 = virtualinvoke r39.<androidx.metrics.performance.PerformanceMetricsState$StateData: long getTimeRemoved()>();

        $b18 = $l17 cmp l0;

        if $b18 >= 0 goto label02;

        $r37 = interfaceinvoke r2.<java.util.List: java.lang.Object remove(int)>(i20);

        $r38 = (androidx.metrics.performance.PerformanceMetricsState$StateData) $r37;

        virtualinvoke r0.<androidx.metrics.performance.PerformanceMetricsState: void returnStateDataToPool$metrics_performance_release(androidx.metrics.performance.PerformanceMetricsState$StateData)>($r38);

        goto label03;

     label02:
        $l12 = virtualinvoke r39.<androidx.metrics.performance.PerformanceMetricsState$StateData: long getTimeAdded()>();

        $b13 = $l12 cmp l1;

        if $b13 >= 0 goto label03;

        $r35 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesHolder>;

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>(r39);

        $r36 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>;

        $z6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r2, $r36);

        if $z6 == 0 goto label03;

        $l14 = virtualinvoke r39.<androidx.metrics.performance.PerformanceMetricsState$StateData: long getTimeRemoved()>();

        $b15 = $l14 cmp -1L;

        if $b15 != 0 goto label03;

        $l16 = staticinvoke <java.lang.System: long nanoTime()>();

        virtualinvoke r39.<androidx.metrics.performance.PerformanceMetricsState$StateData: void setTimeRemoved(long)>($l16);

     label03:
        if 0 <= i19 goto label01;

     label04:
        $r4 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesHolder>;

        $i4 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i4 <= 0 goto label15;

        i21 = 0;

        $r5 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesHolder>;

        i22 = interfaceinvoke $r5.<java.util.List: int size()>();

     label05:
        if i21 >= i22 goto label10;

        $r19 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesToBeCleared>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i21);

        $z1 = interfaceinvoke $r19.<java.util.List: boolean contains(java.lang.Object)>($r20);

        if $z1 != 0 goto label09;

        $r21 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesHolder>;

        $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i21);

        r40 = (androidx.metrics.performance.PerformanceMetricsState$StateData) $r22;

        i23 = i21 + 1;

        $r23 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesHolder>;

        i2 = interfaceinvoke $r23.<java.util.List: int size()>();

     label06:
        if i23 >= i2 goto label09;

        $r24 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesHolder>;

        $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(i23);

        r3 = (androidx.metrics.performance.PerformanceMetricsState$StateData) $r25;

        $r26 = virtualinvoke r40.<androidx.metrics.performance.PerformanceMetricsState$StateData: androidx.metrics.performance.StateInfo getState()>();

        $r27 = virtualinvoke $r26.<androidx.metrics.performance.StateInfo: java.lang.String getKey()>();

        $r28 = virtualinvoke r3.<androidx.metrics.performance.PerformanceMetricsState$StateData: androidx.metrics.performance.StateInfo getState()>();

        $r29 = virtualinvoke $r28.<androidx.metrics.performance.StateInfo: java.lang.String getKey()>();

        $z2 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r27, $r29);

        if $z2 == 0 goto label08;

        $l7 = virtualinvoke r40.<androidx.metrics.performance.PerformanceMetricsState$StateData: long getTimeAdded()>();

        $l8 = virtualinvoke r3.<androidx.metrics.performance.PerformanceMetricsState$StateData: long getTimeAdded()>();

        $b9 = $l7 cmp $l8;

        if $b9 >= 0 goto label07;

        $r32 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesToBeCleared>;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i21);

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>($r33);

        goto label08;

     label07:
        $r30 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesToBeCleared>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i23);

        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>($r31);

     label08:
        i23 = i23 + 1;

        goto label06;

     label09:
        i21 = i21 + 1;

        goto label05;

     label10:
        $r6 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesToBeCleared>;

        $i5 = interfaceinvoke $r6.<java.util.List: int size()>();

        i24 = $i5 - 1;

     label11:
        if -1 >= i24 goto label12;

        $r15 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesHolder>;

        $r14 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesToBeCleared>;

        $r16 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i24);

        $r17 = (java.lang.Number) $r16;

        $i6 = virtualinvoke $r17.<java.lang.Number: int intValue()>();

        interfaceinvoke $r15.<java.util.List: java.lang.Object remove(int)>($i6);

        i24 = i24 + -1;

        goto label11;

     label12:
        i25 = 0;

        $r7 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesHolder>;

        i26 = interfaceinvoke $r7.<java.util.List: int size()>();

     label13:
        if i25 >= i26 goto label14;

        $r10 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesHolder>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i25);

        $r12 = (androidx.metrics.performance.PerformanceMetricsState$StateData) $r11;

        $r13 = virtualinvoke $r12.<androidx.metrics.performance.PerformanceMetricsState$StateData: androidx.metrics.performance.StateInfo getState()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r13);

        i25 = i25 + 1;

        goto label13;

     label14:
        $r8 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesHolder>;

        interfaceinvoke $r8.<java.util.List: void clear()>();

        $r9 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List statesToBeCleared>;

        interfaceinvoke $r9.<java.util.List: void clear()>();

     label15:
        return;
    }

    private final void markStateForRemoval(java.lang.String, java.util.List, long)
    {
        androidx.metrics.performance.PerformanceMetricsState r0;
        java.lang.String r1, $r7;
        java.util.List r2, r3;
        long l0, $l2;
        int i1, i4;
        androidx.metrics.performance.PerformanceMetricsState$StateData r4;
        java.lang.Object $r5;
        androidx.metrics.performance.StateInfo $r6;
        boolean $z0;
        byte $b3;
        java.lang.Throwable $r8;
        kotlin.Unit $r9;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        l0 := @parameter2: long;

        r3 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>;

        entermonitor r3;

     label1:
        i4 = 0;

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

     label2:
        if i4 >= i1 goto label4;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i4);

        r4 = (androidx.metrics.performance.PerformanceMetricsState$StateData) $r5;

        $r6 = virtualinvoke r4.<androidx.metrics.performance.PerformanceMetricsState$StateData: androidx.metrics.performance.StateInfo getState()>();

        $r7 = virtualinvoke $r6.<androidx.metrics.performance.StateInfo: java.lang.String getKey()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r7, r1);

        if $z0 == 0 goto label3;

        $l2 = virtualinvoke r4.<androidx.metrics.performance.PerformanceMetricsState$StateData: long getTimeRemoved()>();

        $b3 = $l2 cmp 0L;

        if $b3 >= 0 goto label3;

        virtualinvoke r4.<androidx.metrics.performance.PerformanceMetricsState$StateData: void setTimeRemoved(long)>(l0);

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label5:
        exitmonitor r3;

        goto label8;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor r3;

        throw $r8;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public final void putState(java.lang.String, java.lang.String)
    {
        androidx.metrics.performance.PerformanceMetricsState r0;
        java.lang.String r1, r2;
        java.util.List r3, $r4, $r7;
        long l0;
        androidx.metrics.performance.PerformanceMetricsState$StateData $r5;
        androidx.metrics.performance.StateInfo $r6;
        java.lang.Throwable $r8;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        r3 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>;

        entermonitor r3;

     label1:
        l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $r4 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List states>;

        specialinvoke r0.<androidx.metrics.performance.PerformanceMetricsState: void markStateForRemoval(java.lang.String,java.util.List,long)>(r1, $r4, l0);

        $r7 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List states>;

        $r5 = new androidx.metrics.performance.PerformanceMetricsState$StateData;

        $r6 = new androidx.metrics.performance.StateInfo;

        specialinvoke $r6.<androidx.metrics.performance.StateInfo: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        specialinvoke $r5.<androidx.metrics.performance.PerformanceMetricsState$StateData: void <init>(long,long,androidx.metrics.performance.StateInfo)>(l0, -1L, $r6);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        exitmonitor r3;

        goto label5;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r3;

        throw $r8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void putSingleFrameState(java.lang.String, java.lang.String)
    {
        androidx.metrics.performance.PerformanceMetricsState r0;
        java.lang.String r1, r2;
        java.util.List r3, $r4, $r6;
        long l0;
        androidx.metrics.performance.StateInfo $r5;
        androidx.metrics.performance.PerformanceMetricsState$StateData $r7;
        java.lang.Throwable $r8;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "value");

        r3 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>;

        entermonitor r3;

     label1:
        l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $r4 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>;

        specialinvoke r0.<androidx.metrics.performance.PerformanceMetricsState: void markStateForRemoval(java.lang.String,java.util.List,long)>(r1, $r4, l0);

        $r6 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>;

        $r5 = new androidx.metrics.performance.StateInfo;

        specialinvoke $r5.<androidx.metrics.performance.StateInfo: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r7 = virtualinvoke r0.<androidx.metrics.performance.PerformanceMetricsState: androidx.metrics.performance.PerformanceMetricsState$StateData getStateData$metrics_performance_release(long,long,androidx.metrics.performance.StateInfo)>(l0, -1L, $r5);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

     label2:
        exitmonitor r3;

        goto label5;

     label3:
        $r8 := @caughtexception;

     label4:
        exitmonitor r3;

        throw $r8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private final void markStateForRemoval(java.lang.String)
    {
        androidx.metrics.performance.PerformanceMetricsState r0;
        java.lang.String r1;
        java.util.List $r2;
        long $l0;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List states>;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        specialinvoke r0.<androidx.metrics.performance.PerformanceMetricsState: void markStateForRemoval(java.lang.String,java.util.List,long)>(r1, $r2, $l0);

        return;
    }

    public final void removeStateNow$metrics_performance_release(java.lang.String)
    {
        androidx.metrics.performance.PerformanceMetricsState r0;
        java.lang.String r1, $r8;
        java.util.List r2, $r4, $r5, $r9;
        int i0, i1;
        androidx.metrics.performance.PerformanceMetricsState$StateData r3;
        java.lang.Object $r6;
        androidx.metrics.performance.StateInfo $r7;
        boolean $z0;
        java.lang.Throwable $r10;
        kotlin.Unit $r11;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "stateName");

        r2 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>;

        entermonitor r2;

     label1:
        i1 = 0;

        $r4 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List states>;

        i0 = interfaceinvoke $r4.<java.util.List: int size()>();

     label2:
        if i1 >= i0 goto label4;

        $r5 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List states>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (androidx.metrics.performance.PerformanceMetricsState$StateData) $r6;

        $r7 = virtualinvoke r3.<androidx.metrics.performance.PerformanceMetricsState$StateData: androidx.metrics.performance.StateInfo getState()>();

        $r8 = virtualinvoke $r7.<androidx.metrics.performance.StateInfo: java.lang.String getKey()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r8, r1);

        if $z0 == 0 goto label3;

        $r9 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List states>;

        interfaceinvoke $r9.<java.util.List: boolean remove(java.lang.Object)>(r3);

        virtualinvoke r0.<androidx.metrics.performance.PerformanceMetricsState: void returnStateDataToPool$metrics_performance_release(androidx.metrics.performance.PerformanceMetricsState$StateData)>(r3);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r11 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label5:
        exitmonitor r2;

        goto label8;

     label6:
        $r10 := @caughtexception;

     label7:
        exitmonitor r2;

        throw $r10;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public final androidx.metrics.performance.PerformanceMetricsState$StateData getStateData$metrics_performance_release(long, long, androidx.metrics.performance.StateInfo)
    {
        androidx.metrics.performance.PerformanceMetricsState r0;
        long l0, l1;
        androidx.metrics.performance.StateInfo r1;
        java.util.List r2, $r6, $r7;
        androidx.metrics.performance.PerformanceMetricsState$StateData r3, r4, r5, $r9;
        boolean $z0;
        java.lang.Object $r8;
        java.lang.Throwable $r10;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: androidx.metrics.performance.StateInfo;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        r2 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List stateDataPool>;

        entermonitor r2;

     label1:
        $r6 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List stateDataPool>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r9 = new androidx.metrics.performance.PerformanceMetricsState$StateData;

        specialinvoke $r9.<androidx.metrics.performance.PerformanceMetricsState$StateData: void <init>(long,long,androidx.metrics.performance.StateInfo)>(l0, l1, r1);

        r5 = $r9;

     label2:
        exitmonitor r2;

        return r5;

     label3:
        $r7 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List stateDataPool>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(0);

        r3 = (androidx.metrics.performance.PerformanceMetricsState$StateData) $r8;

        virtualinvoke r3.<androidx.metrics.performance.PerformanceMetricsState$StateData: void setTimeAdded(long)>(l0);

        virtualinvoke r3.<androidx.metrics.performance.PerformanceMetricsState$StateData: void setTimeRemoved(long)>(l1);

        virtualinvoke r3.<androidx.metrics.performance.PerformanceMetricsState$StateData: void setState(androidx.metrics.performance.StateInfo)>(r1);

        r4 = r3;

     label4:
        exitmonitor r2;

        return r4;

     label5:
        $r10 := @caughtexception;

     label6:
        exitmonitor r2;

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final void returnStateDataToPool$metrics_performance_release(androidx.metrics.performance.PerformanceMetricsState$StateData)
    {
        androidx.metrics.performance.PerformanceMetricsState r0;
        androidx.metrics.performance.PerformanceMetricsState$StateData r1;
        java.util.List r2, $r4, $r6, $r7;
        java.lang.Throwable r3, $r5, $r8;
        boolean z1;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState;

        r1 := @parameter0: androidx.metrics.performance.PerformanceMetricsState$StateData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "stateData");

        r2 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List stateDataPool>;

        entermonitor r2;

     label1:
        $r4 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List stateDataPool>;

        z1 = interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List stateDataPool>;

        interfaceinvoke $r6.<java.util.List: void clear()>();

        $r7 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List stateDataPool>;

        z1 = interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

     label4:
        exitmonitor r2;

        goto label7;

     label5:
        $r8 := @caughtexception;

     label6:
        exitmonitor r2;

        throw $r8;

     label7:
        return;

        catch java.lang.OutOfMemoryError from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final void removeState(java.lang.String)
    {
        androidx.metrics.performance.PerformanceMetricsState r0;
        java.lang.String r1;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState;

        r1 := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "key");

        specialinvoke r0.<androidx.metrics.performance.PerformanceMetricsState: void markStateForRemoval(java.lang.String)>(r1);

        return;
    }

    public final void getIntervalStates$metrics_performance_release(long, long, java.util.List)
    {
        androidx.metrics.performance.PerformanceMetricsState r0;
        long l0, l1;
        java.util.List r1, r2, $r3, $r4;
        java.lang.Throwable $r5;
        kotlin.Unit $r6;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: java.util.List;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "frameStates");

        r2 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>;

        entermonitor r2;

     label1:
        interfaceinvoke r1.<java.util.List: void clear()>();

        $r3 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List states>;

        specialinvoke r0.<androidx.metrics.performance.PerformanceMetricsState: void addFrameState(long,long,java.util.List,java.util.List)>(l0, l1, r1, $r3);

        $r4 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>;

        specialinvoke r0.<androidx.metrics.performance.PerformanceMetricsState: void addFrameState(long,long,java.util.List,java.util.List)>(l0, l1, r1, $r4);

        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        exitmonitor r2;

        goto label5;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r2;

        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void cleanupSingleFrameStates$metrics_performance_release()
    {
        androidx.metrics.performance.PerformanceMetricsState r0;
        java.util.List r1, $r2, $r3, $r6;
        int $i0, i3;
        java.lang.Object $r4, $r7;
        androidx.metrics.performance.PerformanceMetricsState$StateData $r5, $r8;
        long $l1;
        byte $b2;
        java.lang.Throwable $r9;
        kotlin.Unit $r10;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState;

        r1 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>;

        entermonitor r1;

     label1:
        $r2 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        i3 = $i0 - 1;

     label2:
        if -1 >= i3 goto label4;

        $r3 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        $r5 = (androidx.metrics.performance.PerformanceMetricsState$StateData) $r4;

        $l1 = virtualinvoke $r5.<androidx.metrics.performance.PerformanceMetricsState$StateData: long getTimeRemoved()>();

        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label3;

        $r6 = r0.<androidx.metrics.performance.PerformanceMetricsState: java.util.List singleFrameStates>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object remove(int)>(i3);

        $r8 = (androidx.metrics.performance.PerformanceMetricsState$StateData) $r7;

        virtualinvoke r0.<androidx.metrics.performance.PerformanceMetricsState: void returnStateDataToPool$metrics_performance_release(androidx.metrics.performance.PerformanceMetricsState$StateData)>($r8);

     label3:
        i3 = i3 + -1;

        goto label2;

     label4:
        $r10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label5:
        exitmonitor r1;

        goto label8;

     label6:
        $r9 := @caughtexception;

     label7:
        exitmonitor r1;

        throw $r9;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static final androidx.metrics.performance.PerformanceMetricsState$Holder getHolderForHierarchy(android.view.View)
    {
        android.view.View r0;
        androidx.metrics.performance.PerformanceMetricsState$Companion $r1;
        androidx.metrics.performance.PerformanceMetricsState$Holder $r2;

        r0 := @parameter0: android.view.View;

        $r1 = <androidx.metrics.performance.PerformanceMetricsState: androidx.metrics.performance.PerformanceMetricsState$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.metrics.performance.PerformanceMetricsState$Companion: androidx.metrics.performance.PerformanceMetricsState$Holder getHolderForHierarchy(android.view.View)>(r0);

        return $r2;
    }

    public static final androidx.metrics.performance.PerformanceMetricsState$Holder create$metrics_performance_release(android.view.View)
    {
        android.view.View r0;
        androidx.metrics.performance.PerformanceMetricsState$Companion $r1;
        androidx.metrics.performance.PerformanceMetricsState$Holder $r2;

        r0 := @parameter0: android.view.View;

        $r1 = <androidx.metrics.performance.PerformanceMetricsState: androidx.metrics.performance.PerformanceMetricsState$Companion Companion>;

        $r2 = virtualinvoke $r1.<androidx.metrics.performance.PerformanceMetricsState$Companion: androidx.metrics.performance.PerformanceMetricsState$Holder create$metrics_performance_release(android.view.View)>(r0);

        return $r2;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.metrics.performance.PerformanceMetricsState r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.metrics.performance.PerformanceMetricsState: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        androidx.metrics.performance.PerformanceMetricsState$Companion $r0;

        $r0 = new androidx.metrics.performance.PerformanceMetricsState$Companion;

        specialinvoke $r0.<androidx.metrics.performance.PerformanceMetricsState$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.metrics.performance.PerformanceMetricsState: androidx.metrics.performance.PerformanceMetricsState$Companion Companion> = $r0;

        return;
    }

androidx.metrics.performance.PerformanceMetricsState$Companion
    private void <init>()
    {
        androidx.metrics.performance.PerformanceMetricsState$Companion r0;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.metrics.performance.PerformanceMetricsState$Holder getHolderForHierarchy(android.view.View)
    {
        androidx.metrics.performance.PerformanceMetricsState$Companion r0;
        android.view.View r1, r2;
        int $i0, $i1;
        androidx.metrics.performance.PerformanceMetricsState$Holder $r3, $r4;
        java.lang.Object r5;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$Companion;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        r2 = virtualinvoke r0.<androidx.metrics.performance.PerformanceMetricsState$Companion: android.view.View getRootView$metrics_performance_release(android.view.View)>(r1);

        $i0 = <androidx.metrics.performance.R$id: int metricsStateHolder>;

        r5 = virtualinvoke r2.<android.view.View: java.lang.Object getTag(int)>($i0);

        if r5 != null goto label1;

        $r4 = new androidx.metrics.performance.PerformanceMetricsState$Holder;

        specialinvoke $r4.<androidx.metrics.performance.PerformanceMetricsState$Holder: void <init>()>();

        r5 = $r4;

        $i1 = <androidx.metrics.performance.R$id: int metricsStateHolder>;

        virtualinvoke r2.<android.view.View: void setTag(int,java.lang.Object)>($i1, r5);

     label1:
        $r3 = (androidx.metrics.performance.PerformanceMetricsState$Holder) r5;

        return $r3;
    }

    public final androidx.metrics.performance.PerformanceMetricsState$Holder create$metrics_performance_release(android.view.View)
    {
        androidx.metrics.performance.PerformanceMetricsState$Companion r0;
        android.view.View r1;
        androidx.metrics.performance.PerformanceMetricsState$Holder r2;
        androidx.metrics.performance.PerformanceMetricsState $r3, $r4;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$Companion;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        r2 = virtualinvoke r0.<androidx.metrics.performance.PerformanceMetricsState$Companion: androidx.metrics.performance.PerformanceMetricsState$Holder getHolderForHierarchy(android.view.View)>(r1);

        $r3 = virtualinvoke r2.<androidx.metrics.performance.PerformanceMetricsState$Holder: androidx.metrics.performance.PerformanceMetricsState getState()>();

        if $r3 != null goto label1;

        $r4 = new androidx.metrics.performance.PerformanceMetricsState;

        specialinvoke $r4.<androidx.metrics.performance.PerformanceMetricsState: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        virtualinvoke r2.<androidx.metrics.performance.PerformanceMetricsState$Holder: void setState$metrics_performance_release(androidx.metrics.performance.PerformanceMetricsState)>($r4);

     label1:
        return r2;
    }

    public final android.view.View getRootView$metrics_performance_release(android.view.View)
    {
        androidx.metrics.performance.PerformanceMetricsState$Companion r0;
        android.view.View r1, r2;
        boolean $z0;
        android.view.ViewParent r3;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$Companion;

        r1 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "view");

        r2 = r1;

        r3 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

     label1:
        $z0 = r3 instanceof android.view.View;

        if $z0 == 0 goto label2;

        r2 = (android.view.View) r3;

        r3 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        goto label1;

     label2:
        return r2;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.metrics.performance.PerformanceMetricsState$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.metrics.performance.PerformanceMetricsState$Companion: void <init>()>();

        return;
    }

androidx.metrics.performance.PerformanceMetricsState$Holder
<androidx.metrics.performance.PerformanceMetricsState$Holder: androidx.metrics.performance.PerformanceMetricsState state>
    public void <init>()
    {
        androidx.metrics.performance.PerformanceMetricsState$Holder r0;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$Holder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.metrics.performance.PerformanceMetricsState getState()
    {
        androidx.metrics.performance.PerformanceMetricsState$Holder r0;
        androidx.metrics.performance.PerformanceMetricsState $r1;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$Holder;

        $r1 = r0.<androidx.metrics.performance.PerformanceMetricsState$Holder: androidx.metrics.performance.PerformanceMetricsState state>;

        return $r1;
    }

    public final void setState$metrics_performance_release(androidx.metrics.performance.PerformanceMetricsState)
    {
        androidx.metrics.performance.PerformanceMetricsState$Holder r0;
        androidx.metrics.performance.PerformanceMetricsState r1;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$Holder;

        r1 := @parameter0: androidx.metrics.performance.PerformanceMetricsState;

        r0.<androidx.metrics.performance.PerformanceMetricsState$Holder: androidx.metrics.performance.PerformanceMetricsState state> = r1;

        return;
    }

androidx.metrics.performance.PerformanceMetricsState$StateData
<androidx.metrics.performance.PerformanceMetricsState$StateData: long timeAdded>
<androidx.metrics.performance.PerformanceMetricsState$StateData: long timeRemoved>
<androidx.metrics.performance.PerformanceMetricsState$StateData: androidx.metrics.performance.StateInfo state>
    public void <init>(long, long, androidx.metrics.performance.StateInfo)
    {
        androidx.metrics.performance.PerformanceMetricsState$StateData r0;
        long l0, l1;
        androidx.metrics.performance.StateInfo r1;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$StateData;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: androidx.metrics.performance.StateInfo;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.metrics.performance.PerformanceMetricsState$StateData: long timeAdded> = l0;

        r0.<androidx.metrics.performance.PerformanceMetricsState$StateData: long timeRemoved> = l1;

        r0.<androidx.metrics.performance.PerformanceMetricsState$StateData: androidx.metrics.performance.StateInfo state> = r1;

        return;
    }

    public final long getTimeAdded()
    {
        androidx.metrics.performance.PerformanceMetricsState$StateData r0;
        long $l0;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$StateData;

        $l0 = r0.<androidx.metrics.performance.PerformanceMetricsState$StateData: long timeAdded>;

        return $l0;
    }

    public final void setTimeAdded(long)
    {
        androidx.metrics.performance.PerformanceMetricsState$StateData r0;
        long l0;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$StateData;

        l0 := @parameter0: long;

        r0.<androidx.metrics.performance.PerformanceMetricsState$StateData: long timeAdded> = l0;

        return;
    }

    public final long getTimeRemoved()
    {
        androidx.metrics.performance.PerformanceMetricsState$StateData r0;
        long $l0;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$StateData;

        $l0 = r0.<androidx.metrics.performance.PerformanceMetricsState$StateData: long timeRemoved>;

        return $l0;
    }

    public final void setTimeRemoved(long)
    {
        androidx.metrics.performance.PerformanceMetricsState$StateData r0;
        long l0;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$StateData;

        l0 := @parameter0: long;

        r0.<androidx.metrics.performance.PerformanceMetricsState$StateData: long timeRemoved> = l0;

        return;
    }

    public final androidx.metrics.performance.StateInfo getState()
    {
        androidx.metrics.performance.PerformanceMetricsState$StateData r0;
        androidx.metrics.performance.StateInfo $r1;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$StateData;

        $r1 = r0.<androidx.metrics.performance.PerformanceMetricsState$StateData: androidx.metrics.performance.StateInfo state>;

        return $r1;
    }

    public final void setState(androidx.metrics.performance.StateInfo)
    {
        androidx.metrics.performance.PerformanceMetricsState$StateData r0;
        androidx.metrics.performance.StateInfo r1;

        r0 := @this: androidx.metrics.performance.PerformanceMetricsState$StateData;

        r1 := @parameter0: androidx.metrics.performance.StateInfo;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.metrics.performance.PerformanceMetricsState$StateData: androidx.metrics.performance.StateInfo state> = r1;

        return;
    }

