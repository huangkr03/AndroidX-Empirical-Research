androidx.customview.poolingcontainer.PoolingContainer
<androidx.customview.poolingcontainer.PoolingContainer: int PoolingContainerListenerHolderTag>
<androidx.customview.poolingcontainer.PoolingContainer: int IsPoolingContainerTag>
    public static final void addPoolingContainerListener(android.view.View, androidx.customview.poolingcontainer.PoolingContainerListener)
    {
        android.view.View $r0;
        androidx.customview.poolingcontainer.PoolingContainerListener r1;
        androidx.customview.poolingcontainer.PoolingContainerListenerHolder $r2;

        $r0 := @parameter0: android.view.View;

        r1 := @parameter1: androidx.customview.poolingcontainer.PoolingContainerListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = staticinvoke <androidx.customview.poolingcontainer.PoolingContainer: androidx.customview.poolingcontainer.PoolingContainerListenerHolder getPoolingContainerListenerHolder(android.view.View)>($r0);

        virtualinvoke $r2.<androidx.customview.poolingcontainer.PoolingContainerListenerHolder: void addListener(androidx.customview.poolingcontainer.PoolingContainerListener)>(r1);

        return;
    }

    public static final void removePoolingContainerListener(android.view.View, androidx.customview.poolingcontainer.PoolingContainerListener)
    {
        android.view.View $r0;
        androidx.customview.poolingcontainer.PoolingContainerListener r1;
        androidx.customview.poolingcontainer.PoolingContainerListenerHolder $r2;

        $r0 := @parameter0: android.view.View;

        r1 := @parameter1: androidx.customview.poolingcontainer.PoolingContainerListener;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = staticinvoke <androidx.customview.poolingcontainer.PoolingContainer: androidx.customview.poolingcontainer.PoolingContainerListenerHolder getPoolingContainerListenerHolder(android.view.View)>($r0);

        virtualinvoke $r2.<androidx.customview.poolingcontainer.PoolingContainerListenerHolder: void removeListener(androidx.customview.poolingcontainer.PoolingContainerListener)>(r1);

        return;
    }

    public static final boolean isPoolingContainer(android.view.View)
    {
        android.view.View $r0;
        java.lang.Object r1;
        int $i0;
        boolean $z0, $z1;
        java.lang.Boolean $r2;

        $r0 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = <androidx.customview.poolingcontainer.PoolingContainer: int IsPoolingContainerTag>;

        r1 = virtualinvoke $r0.<android.view.View: java.lang.Object getTag(int)>($i0);

        $z0 = r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.Boolean) r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        if $r2 == null goto label3;

        $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public static final void setPoolingContainer(android.view.View, boolean)
    {
        android.view.View $r0;
        boolean z0;
        int $i0;
        java.lang.Boolean $r1;

        $r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $i0 = <androidx.customview.poolingcontainer.PoolingContainer: int IsPoolingContainerTag>;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r0.<android.view.View: void setTag(int,java.lang.Object)>($i0, $r1);

        return;
    }

    public static final boolean isWithinPoolingContainer(android.view.View)
    {
        android.view.View $r0, $r5;
        kotlin.sequences.Sequence $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        android.view.ViewParent r4;
        boolean $z2, $z3, $z4;

        $r0 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <androidx.core.view.ViewKt: kotlin.sequences.Sequence getAncestors(android.view.View)>($r0);

        r2 = interfaceinvoke $r1.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.view.ViewParent) r3;

        $z3 = r4 instanceof android.view.View;

        if $z3 == 0 goto label2;

        $r5 = (android.view.View) r4;

        $z4 = staticinvoke <androidx.customview.poolingcontainer.PoolingContainer: boolean isPoolingContainer(android.view.View)>($r5);

        if $z4 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public static final void callPoolingContainerOnRelease(android.view.View)
    {
        android.view.View $r0, r4;
        kotlin.sequences.Sequence $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z2;
        androidx.customview.poolingcontainer.PoolingContainerListenerHolder $r5;

        $r0 := @parameter0: android.view.View;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <androidx.core.view.ViewKt: kotlin.sequences.Sequence getAllViews(android.view.View)>($r0);

        r2 = interfaceinvoke $r1.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.view.View) r3;

        $r5 = staticinvoke <androidx.customview.poolingcontainer.PoolingContainer: androidx.customview.poolingcontainer.PoolingContainerListenerHolder getPoolingContainerListenerHolder(android.view.View)>(r4);

        virtualinvoke $r5.<androidx.customview.poolingcontainer.PoolingContainerListenerHolder: void onRelease()>();

        goto label1;

     label2:
        return;
    }

    public static final void callPoolingContainerOnReleaseForChildren(android.view.ViewGroup)
    {
        android.view.ViewGroup $r0;
        kotlin.sequences.Sequence $r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        android.view.View r4;
        boolean $z2;
        androidx.customview.poolingcontainer.PoolingContainerListenerHolder $r5;

        $r0 := @parameter0: android.view.ViewGroup;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        $r1 = staticinvoke <androidx.core.view.ViewGroupKt: kotlin.sequences.Sequence getChildren(android.view.ViewGroup)>($r0);

        r2 = interfaceinvoke $r1.<kotlin.sequences.Sequence: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.view.View) r3;

        $r5 = staticinvoke <androidx.customview.poolingcontainer.PoolingContainer: androidx.customview.poolingcontainer.PoolingContainerListenerHolder getPoolingContainerListenerHolder(android.view.View)>(r4);

        virtualinvoke $r5.<androidx.customview.poolingcontainer.PoolingContainerListenerHolder: void onRelease()>();

        goto label1;

     label2:
        return;
    }

    private static final androidx.customview.poolingcontainer.PoolingContainerListenerHolder getPoolingContainerListenerHolder(android.view.View)
    {
        android.view.View $r0;
        int $i0, $i1;
        java.lang.Object $r1;
        androidx.customview.poolingcontainer.PoolingContainerListenerHolder $r2, r3;

        $r0 := @parameter0: android.view.View;

        $i0 = <androidx.customview.poolingcontainer.PoolingContainer: int PoolingContainerListenerHolderTag>;

        $r1 = virtualinvoke $r0.<android.view.View: java.lang.Object getTag(int)>($i0);

        r3 = (androidx.customview.poolingcontainer.PoolingContainerListenerHolder) $r1;

        if r3 != null goto label1;

        $r2 = new androidx.customview.poolingcontainer.PoolingContainerListenerHolder;

        specialinvoke $r2.<androidx.customview.poolingcontainer.PoolingContainerListenerHolder: void <init>()>();

        r3 = $r2;

        $i1 = <androidx.customview.poolingcontainer.PoolingContainer: int PoolingContainerListenerHolderTag>;

        virtualinvoke $r0.<android.view.View: void setTag(int,java.lang.Object)>($i1, r3);

     label1:
        return r3;
    }

    static void <clinit>()
    {
        int $i0, $i1;

        $i0 = <androidx.customview.poolingcontainer.R$id: int pooling_container_listener_holder_tag>;

        <androidx.customview.poolingcontainer.PoolingContainer: int PoolingContainerListenerHolderTag> = $i0;

        $i1 = <androidx.customview.poolingcontainer.R$id: int is_pooling_container_tag>;

        <androidx.customview.poolingcontainer.PoolingContainer: int IsPoolingContainerTag> = $i1;

        return;
    }

