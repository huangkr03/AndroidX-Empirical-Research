androidx.paging.PagingDataAdapter
<androidx.paging.PagingDataAdapter: boolean userSetRestorationPolicy>
<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>
<androidx.paging.PagingDataAdapter: kotlinx.coroutines.flow.Flow loadStateFlow>
<androidx.paging.PagingDataAdapter: kotlinx.coroutines.flow.Flow onPagesUpdatedFlow>
    public void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.CoroutineDispatcher)
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r1;
        kotlinx.coroutines.CoroutineDispatcher r2, r3;
        androidx.paging.AsyncPagingDataDiffer $r4, $r13, $r15;
        androidx.recyclerview.widget.AdapterListUpdateCallback $r5;
        androidx.recyclerview.widget.RecyclerView$Adapter $r6;
        androidx.recyclerview.widget.ListUpdateCallback $r7;
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy $r8;
        androidx.paging.PagingDataAdapter$1 $r9;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver $r10;
        androidx.paging.PagingDataAdapter$2 $r11;
        kotlin.jvm.functions.Function1 $r12;
        kotlinx.coroutines.flow.Flow $r14, $r16;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        r2 := @parameter1: kotlinx.coroutines.CoroutineDispatcher;

        r3 := @parameter2: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "diffCallback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "mainDispatcher");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "workerDispatcher");

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: void <init>()>();

        $r4 = new androidx.paging.AsyncPagingDataDiffer;

        $r5 = new androidx.recyclerview.widget.AdapterListUpdateCallback;

        $r6 = (androidx.recyclerview.widget.RecyclerView$Adapter) r0;

        specialinvoke $r5.<androidx.recyclerview.widget.AdapterListUpdateCallback: void <init>(androidx.recyclerview.widget.RecyclerView$Adapter)>($r6);

        $r7 = (androidx.recyclerview.widget.ListUpdateCallback) $r5;

        specialinvoke $r4.<androidx.paging.AsyncPagingDataDiffer: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback,androidx.recyclerview.widget.ListUpdateCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher)>(r1, $r7, r2, r3);

        r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ> = $r4;

        $r8 = <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT>;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: void setStateRestorationPolicy(androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy)>($r8);

        $r9 = new androidx.paging.PagingDataAdapter$1;

        specialinvoke $r9.<androidx.paging.PagingDataAdapter$1: void <init>(androidx.paging.PagingDataAdapter)>(r0);

        $r10 = (androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) $r9;

        virtualinvoke r0.<androidx.paging.PagingDataAdapter: void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)>($r10);

        $r11 = new androidx.paging.PagingDataAdapter$2;

        specialinvoke $r11.<androidx.paging.PagingDataAdapter$2: void <init>(androidx.paging.PagingDataAdapter)>(r0);

        $r12 = (kotlin.jvm.functions.Function1) $r11;

        virtualinvoke r0.<androidx.paging.PagingDataAdapter: void addLoadStateListener(kotlin.jvm.functions.Function1)>($r12);

        $r13 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        $r14 = virtualinvoke $r13.<androidx.paging.AsyncPagingDataDiffer: kotlinx.coroutines.flow.Flow getLoadStateFlow()>();

        r0.<androidx.paging.PagingDataAdapter: kotlinx.coroutines.flow.Flow loadStateFlow> = $r14;

        $r15 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        $r16 = virtualinvoke $r15.<androidx.paging.AsyncPagingDataDiffer: kotlinx.coroutines.flow.Flow getOnPagesUpdatedFlow()>();

        r0.<androidx.paging.PagingDataAdapter: kotlinx.coroutines.flow.Flow onPagesUpdatedFlow> = $r16;

        return;
    }

    public void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.CoroutineDispatcher, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r1;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        kotlinx.coroutines.MainCoroutineDispatcher $r3;
        kotlinx.coroutines.CoroutineDispatcher r4, r5;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        r4 := @parameter1: kotlinx.coroutines.CoroutineDispatcher;

        r5 := @parameter2: kotlinx.coroutines.CoroutineDispatcher;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r3 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()>();

        r4 = (kotlinx.coroutines.CoroutineDispatcher) $r3;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r5 = staticinvoke <kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()>();

     label2:
        specialinvoke r0.<androidx.paging.PagingDataAdapter: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher)>(r1, r4, r5);

        return;
    }

    public void setStateRestorationPolicy(androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy)
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy r1;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "strategy");

        r0.<androidx.paging.PagingDataAdapter: boolean userSetRestorationPolicy> = 1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: void setStateRestorationPolicy(androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy)>(r1);

        return;
    }

    public final long getItemId(int)
    {
        androidx.paging.PagingDataAdapter r0;
        int i0;
        long $l1;

        r0 := @this: androidx.paging.PagingDataAdapter;

        i0 := @parameter0: int;

        $l1 = specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$Adapter: long getItemId(int)>(i0);

        return $l1;
    }

    public final void setHasStableIds(boolean)
    {
        androidx.paging.PagingDataAdapter r0;
        boolean z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: androidx.paging.PagingDataAdapter;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Stable ids are unsupported on PagingDataAdapter.");

        throw $r1;
    }

    public final java.lang.Object submitData(androidx.paging.PagingData, kotlin.coroutines.Continuation)
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.paging.PagingData r1;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.AsyncPagingDataDiffer $r3;
        java.lang.Object $r4, $r5;
        kotlin.Unit $r6;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.paging.PagingData;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        $r4 = virtualinvoke $r3.<androidx.paging.AsyncPagingDataDiffer: java.lang.Object submitData(androidx.paging.PagingData,kotlin.coroutines.Continuation)>(r1, $r2);

        $r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r4 != $r5 goto label1;

        return $r4;

     label1:
        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r6;
    }

    public final void submitData(androidx.lifecycle.Lifecycle, androidx.paging.PagingData)
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.lifecycle.Lifecycle r1;
        androidx.paging.PagingData r2;
        androidx.paging.AsyncPagingDataDiffer $r3;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.lifecycle.Lifecycle;

        r2 := @parameter1: androidx.paging.PagingData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "lifecycle");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "pagingData");

        $r3 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        virtualinvoke $r3.<androidx.paging.AsyncPagingDataDiffer: void submitData(androidx.lifecycle.Lifecycle,androidx.paging.PagingData)>(r1, r2);

        return;
    }

    public final void retry()
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.paging.AsyncPagingDataDiffer $r1;

        r0 := @this: androidx.paging.PagingDataAdapter;

        $r1 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        virtualinvoke $r1.<androidx.paging.AsyncPagingDataDiffer: void retry()>();

        return;
    }

    public final void refresh()
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.paging.AsyncPagingDataDiffer $r1;

        r0 := @this: androidx.paging.PagingDataAdapter;

        $r1 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        virtualinvoke $r1.<androidx.paging.AsyncPagingDataDiffer: void refresh()>();

        return;
    }

    protected final java.lang.Object getItem(int)
    {
        androidx.paging.PagingDataAdapter r0;
        int i0;
        androidx.paging.AsyncPagingDataDiffer $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.paging.PagingDataAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        $r2 = virtualinvoke $r1.<androidx.paging.AsyncPagingDataDiffer: java.lang.Object getItem(int)>(i0);

        return $r2;
    }

    public final java.lang.Object peek(int)
    {
        androidx.paging.PagingDataAdapter r0;
        int i0;
        androidx.paging.AsyncPagingDataDiffer $r1;
        java.lang.Object $r2;

        r0 := @this: androidx.paging.PagingDataAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        $r2 = virtualinvoke $r1.<androidx.paging.AsyncPagingDataDiffer: java.lang.Object peek(int)>(i0);

        return $r2;
    }

    public final androidx.paging.ItemSnapshotList snapshot()
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.paging.AsyncPagingDataDiffer $r1;
        androidx.paging.ItemSnapshotList $r2;

        r0 := @this: androidx.paging.PagingDataAdapter;

        $r1 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        $r2 = virtualinvoke $r1.<androidx.paging.AsyncPagingDataDiffer: androidx.paging.ItemSnapshotList snapshot()>();

        return $r2;
    }

    public int getItemCount()
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.paging.AsyncPagingDataDiffer $r1;
        int $i0;

        r0 := @this: androidx.paging.PagingDataAdapter;

        $r1 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        $i0 = virtualinvoke $r1.<androidx.paging.AsyncPagingDataDiffer: int getItemCount()>();

        return $i0;
    }

    public final kotlinx.coroutines.flow.Flow getLoadStateFlow()
    {
        androidx.paging.PagingDataAdapter r0;
        kotlinx.coroutines.flow.Flow $r1;

        r0 := @this: androidx.paging.PagingDataAdapter;

        $r1 = r0.<androidx.paging.PagingDataAdapter: kotlinx.coroutines.flow.Flow loadStateFlow>;

        return $r1;
    }

    public final kotlinx.coroutines.flow.Flow getOnPagesUpdatedFlow()
    {
        androidx.paging.PagingDataAdapter r0;
        kotlinx.coroutines.flow.Flow $r1;

        r0 := @this: androidx.paging.PagingDataAdapter;

        $r1 = r0.<androidx.paging.PagingDataAdapter: kotlinx.coroutines.flow.Flow onPagesUpdatedFlow>;

        return $r1;
    }

    public final void addLoadStateListener(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PagingDataAdapter r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.AsyncPagingDataDiffer $r2;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        virtualinvoke $r2.<androidx.paging.AsyncPagingDataDiffer: void addLoadStateListener(kotlin.jvm.functions.Function1)>(r1);

        return;
    }

    public final void removeLoadStateListener(kotlin.jvm.functions.Function1)
    {
        androidx.paging.PagingDataAdapter r0;
        kotlin.jvm.functions.Function1 r1;
        androidx.paging.AsyncPagingDataDiffer $r2;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        virtualinvoke $r2.<androidx.paging.AsyncPagingDataDiffer: void removeLoadStateListener(kotlin.jvm.functions.Function1)>(r1);

        return;
    }

    public final void addOnPagesUpdatedListener(kotlin.jvm.functions.Function0)
    {
        androidx.paging.PagingDataAdapter r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.paging.AsyncPagingDataDiffer $r2;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        virtualinvoke $r2.<androidx.paging.AsyncPagingDataDiffer: void addOnPagesUpdatedListener(kotlin.jvm.functions.Function0)>(r1);

        return;
    }

    public final void removeOnPagesUpdatedListener(kotlin.jvm.functions.Function0)
    {
        androidx.paging.PagingDataAdapter r0;
        kotlin.jvm.functions.Function0 r1;
        androidx.paging.AsyncPagingDataDiffer $r2;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "listener");

        $r2 = r0.<androidx.paging.PagingDataAdapter: androidx.paging.AsyncPagingDataDiffer differ>;

        virtualinvoke $r2.<androidx.paging.AsyncPagingDataDiffer: void removeOnPagesUpdatedListener(kotlin.jvm.functions.Function0)>(r1);

        return;
    }

    public final androidx.recyclerview.widget.ConcatAdapter withLoadStateHeader(androidx.paging.LoadStateAdapter)
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.paging.LoadStateAdapter r1;
        androidx.recyclerview.widget.RecyclerView$Adapter[] r2;
        androidx.paging.PagingDataAdapter$withLoadStateHeader$1 $r3;
        kotlin.jvm.functions.Function1 $r4;
        androidx.recyclerview.widget.ConcatAdapter $r5;
        androidx.recyclerview.widget.RecyclerView$Adapter $r6, $r7;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.paging.LoadStateAdapter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "header");

        $r3 = new androidx.paging.PagingDataAdapter$withLoadStateHeader$1;

        specialinvoke $r3.<androidx.paging.PagingDataAdapter$withLoadStateHeader$1: void <init>(androidx.paging.LoadStateAdapter)>(r1);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        virtualinvoke r0.<androidx.paging.PagingDataAdapter: void addLoadStateListener(kotlin.jvm.functions.Function1)>($r4);

        $r5 = new androidx.recyclerview.widget.ConcatAdapter;

        r2 = newarray (androidx.recyclerview.widget.RecyclerView$Adapter)[2];

        $r6 = (androidx.recyclerview.widget.RecyclerView$Adapter) r1;

        r2[0] = $r6;

        $r7 = (androidx.recyclerview.widget.RecyclerView$Adapter) r0;

        r2[1] = $r7;

        specialinvoke $r5.<androidx.recyclerview.widget.ConcatAdapter: void <init>(androidx.recyclerview.widget.RecyclerView$Adapter[])>(r2);

        return $r5;
    }

    public final androidx.recyclerview.widget.ConcatAdapter withLoadStateFooter(androidx.paging.LoadStateAdapter)
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.paging.LoadStateAdapter r1;
        androidx.recyclerview.widget.RecyclerView$Adapter[] r2;
        androidx.paging.PagingDataAdapter$withLoadStateFooter$1 $r3;
        kotlin.jvm.functions.Function1 $r4;
        androidx.recyclerview.widget.ConcatAdapter $r5;
        androidx.recyclerview.widget.RecyclerView$Adapter $r6, $r7;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.paging.LoadStateAdapter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "footer");

        $r3 = new androidx.paging.PagingDataAdapter$withLoadStateFooter$1;

        specialinvoke $r3.<androidx.paging.PagingDataAdapter$withLoadStateFooter$1: void <init>(androidx.paging.LoadStateAdapter)>(r1);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        virtualinvoke r0.<androidx.paging.PagingDataAdapter: void addLoadStateListener(kotlin.jvm.functions.Function1)>($r4);

        $r5 = new androidx.recyclerview.widget.ConcatAdapter;

        r2 = newarray (androidx.recyclerview.widget.RecyclerView$Adapter)[2];

        $r6 = (androidx.recyclerview.widget.RecyclerView$Adapter) r0;

        r2[0] = $r6;

        $r7 = (androidx.recyclerview.widget.RecyclerView$Adapter) r1;

        r2[1] = $r7;

        specialinvoke $r5.<androidx.recyclerview.widget.ConcatAdapter: void <init>(androidx.recyclerview.widget.RecyclerView$Adapter[])>(r2);

        return $r5;
    }

    public final androidx.recyclerview.widget.ConcatAdapter withLoadStateHeaderAndFooter(androidx.paging.LoadStateAdapter, androidx.paging.LoadStateAdapter)
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.paging.LoadStateAdapter r1, r2;
        androidx.recyclerview.widget.RecyclerView$Adapter[] r3;
        androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1 $r4;
        kotlin.jvm.functions.Function1 $r5;
        androidx.recyclerview.widget.ConcatAdapter $r6;
        androidx.recyclerview.widget.RecyclerView$Adapter $r7, $r8, $r9;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.paging.LoadStateAdapter;

        r2 := @parameter1: androidx.paging.LoadStateAdapter;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "header");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "footer");

        $r4 = new androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1;

        specialinvoke $r4.<androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1: void <init>(androidx.paging.LoadStateAdapter,androidx.paging.LoadStateAdapter)>(r1, r2);

        $r5 = (kotlin.jvm.functions.Function1) $r4;

        virtualinvoke r0.<androidx.paging.PagingDataAdapter: void addLoadStateListener(kotlin.jvm.functions.Function1)>($r5);

        $r6 = new androidx.recyclerview.widget.ConcatAdapter;

        r3 = newarray (androidx.recyclerview.widget.RecyclerView$Adapter)[3];

        $r7 = (androidx.recyclerview.widget.RecyclerView$Adapter) r1;

        r3[0] = $r7;

        $r8 = (androidx.recyclerview.widget.RecyclerView$Adapter) r0;

        r3[1] = $r8;

        $r9 = (androidx.recyclerview.widget.RecyclerView$Adapter) r2;

        r3[2] = $r9;

        specialinvoke $r6.<androidx.recyclerview.widget.ConcatAdapter: void <init>(androidx.recyclerview.widget.RecyclerView$Adapter[])>(r3);

        return $r6;
    }

    public void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback, kotlinx.coroutines.CoroutineDispatcher)
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r1;
        kotlinx.coroutines.CoroutineDispatcher r2;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        r2 := @parameter1: kotlinx.coroutines.CoroutineDispatcher;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "diffCallback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "mainDispatcher");

        specialinvoke r0.<androidx.paging.PagingDataAdapter: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, r2, null, 4, null);

        return;
    }

    public void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback)
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.recyclerview.widget.DiffUtil$ItemCallback r1;

        r0 := @this: androidx.paging.PagingDataAdapter;

        r1 := @parameter0: androidx.recyclerview.widget.DiffUtil$ItemCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "diffCallback");

        specialinvoke r0.<androidx.paging.PagingDataAdapter: void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback,kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CoroutineDispatcher,int,kotlin.jvm.internal.DefaultConstructorMarker)>(r1, null, null, 6, null);

        return;
    }

    private static final void _init_$considerAllowingStateRestoration(androidx.paging.PagingDataAdapter)
    {
        androidx.paging.PagingDataAdapter r0;
        androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy $r1, $r2, $r3;
        boolean $z0;

        r0 := @parameter0: androidx.paging.PagingDataAdapter;

        $r1 = virtualinvoke r0.<androidx.paging.PagingDataAdapter: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy getStateRestorationPolicy()>();

        $r2 = <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT>;

        if $r1 != $r2 goto label1;

        $z0 = r0.<androidx.paging.PagingDataAdapter: boolean userSetRestorationPolicy>;

        if $z0 != 0 goto label1;

        $r3 = <androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy ALLOW>;

        virtualinvoke r0.<androidx.paging.PagingDataAdapter: void setStateRestorationPolicy(androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy)>($r3);

     label1:
        return;
    }

    public static final void access$_init_$considerAllowingStateRestoration(androidx.paging.PagingDataAdapter)
    {
        androidx.paging.PagingDataAdapter r0;

        r0 := @parameter0: androidx.paging.PagingDataAdapter;

        staticinvoke <androidx.paging.PagingDataAdapter: void _init_$considerAllowingStateRestoration(androidx.paging.PagingDataAdapter)>(r0);

        return;
    }

androidx.paging.PagingDataAdapter$1
<androidx.paging.PagingDataAdapter$1: androidx.paging.PagingDataAdapter this$0>
    void <init>(androidx.paging.PagingDataAdapter)
    {
        androidx.paging.PagingDataAdapter$1 r0;
        androidx.paging.PagingDataAdapter $r1;

        r0 := @this: androidx.paging.PagingDataAdapter$1;

        $r1 := @parameter0: androidx.paging.PagingDataAdapter;

        r0.<androidx.paging.PagingDataAdapter$1: androidx.paging.PagingDataAdapter this$0> = $r1;

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void <init>()>();

        return;
    }

    public void onItemRangeInserted(int, int)
    {
        androidx.paging.PagingDataAdapter$1 r0;
        int i0, i1;
        androidx.paging.PagingDataAdapter $r1, $r3;
        androidx.recyclerview.widget.RecyclerView$AdapterDataObserver $r2;

        r0 := @this: androidx.paging.PagingDataAdapter$1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<androidx.paging.PagingDataAdapter$1: androidx.paging.PagingDataAdapter this$0>;

        staticinvoke <androidx.paging.PagingDataAdapter: void access$_init_$considerAllowingStateRestoration(androidx.paging.PagingDataAdapter)>($r1);

        $r3 = r0.<androidx.paging.PagingDataAdapter$1: androidx.paging.PagingDataAdapter this$0>;

        $r2 = (androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) r0;

        virtualinvoke $r3.<androidx.paging.PagingDataAdapter: void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)>($r2);

        specialinvoke r0.<androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeInserted(int,int)>(i0, i1);

        return;
    }

androidx.paging.PagingDataAdapter$2
<androidx.paging.PagingDataAdapter$2: boolean ignoreNextEvent>
<androidx.paging.PagingDataAdapter$2: androidx.paging.PagingDataAdapter this$0>
    void <init>(androidx.paging.PagingDataAdapter)
    {
        androidx.paging.PagingDataAdapter$2 r0;
        androidx.paging.PagingDataAdapter $r1;

        r0 := @this: androidx.paging.PagingDataAdapter$2;

        $r1 := @parameter0: androidx.paging.PagingDataAdapter;

        r0.<androidx.paging.PagingDataAdapter$2: androidx.paging.PagingDataAdapter this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.PagingDataAdapter$2: boolean ignoreNextEvent> = 1;

        return;
    }

    public void invoke(androidx.paging.CombinedLoadStates)
    {
        androidx.paging.PagingDataAdapter$2 r0;
        androidx.paging.CombinedLoadStates r1;
        boolean $z0, $z1;
        androidx.paging.LoadStates $r2;
        androidx.paging.LoadState $r3;
        androidx.paging.PagingDataAdapter $r4, $r6;
        kotlin.jvm.functions.Function1 $r5;

        r0 := @this: androidx.paging.PagingDataAdapter$2;

        r1 := @parameter0: androidx.paging.CombinedLoadStates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadStates");

        $z0 = r0.<androidx.paging.PagingDataAdapter$2: boolean ignoreNextEvent>;

        if $z0 == 0 goto label1;

        r0.<androidx.paging.PagingDataAdapter$2: boolean ignoreNextEvent> = 0;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<androidx.paging.CombinedLoadStates: androidx.paging.LoadStates getSource()>();

        $r3 = virtualinvoke $r2.<androidx.paging.LoadStates: androidx.paging.LoadState getRefresh()>();

        $z1 = $r3 instanceof androidx.paging.LoadState$NotLoading;

        if $z1 == 0 goto label2;

        $r4 = r0.<androidx.paging.PagingDataAdapter$2: androidx.paging.PagingDataAdapter this$0>;

        staticinvoke <androidx.paging.PagingDataAdapter: void access$_init_$considerAllowingStateRestoration(androidx.paging.PagingDataAdapter)>($r4);

        $r6 = r0.<androidx.paging.PagingDataAdapter$2: androidx.paging.PagingDataAdapter this$0>;

        $r5 = (kotlin.jvm.functions.Function1) r0;

        virtualinvoke $r6.<androidx.paging.PagingDataAdapter: void removeLoadStateListener(kotlin.jvm.functions.Function1)>($r5);

     label2:
        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.PagingDataAdapter$2 r0;
        java.lang.Object r1;
        androidx.paging.CombinedLoadStates $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.paging.PagingDataAdapter$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.CombinedLoadStates) r1;

        virtualinvoke r0.<androidx.paging.PagingDataAdapter$2: void invoke(androidx.paging.CombinedLoadStates)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.paging.PagingDataAdapter$withLoadStateFooter$1
<androidx.paging.PagingDataAdapter$withLoadStateFooter$1: androidx.paging.LoadStateAdapter $footer>
    void <init>(androidx.paging.LoadStateAdapter)
    {
        androidx.paging.PagingDataAdapter$withLoadStateFooter$1 r0;
        androidx.paging.LoadStateAdapter $r1;

        r0 := @this: androidx.paging.PagingDataAdapter$withLoadStateFooter$1;

        $r1 := @parameter0: androidx.paging.LoadStateAdapter;

        r0.<androidx.paging.PagingDataAdapter$withLoadStateFooter$1: androidx.paging.LoadStateAdapter $footer> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.paging.CombinedLoadStates)
    {
        androidx.paging.PagingDataAdapter$withLoadStateFooter$1 r0;
        androidx.paging.CombinedLoadStates r1;
        androidx.paging.LoadStateAdapter $r2;
        androidx.paging.LoadState $r3;

        r0 := @this: androidx.paging.PagingDataAdapter$withLoadStateFooter$1;

        r1 := @parameter0: androidx.paging.CombinedLoadStates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadStates");

        $r2 = r0.<androidx.paging.PagingDataAdapter$withLoadStateFooter$1: androidx.paging.LoadStateAdapter $footer>;

        $r3 = virtualinvoke r1.<androidx.paging.CombinedLoadStates: androidx.paging.LoadState getAppend()>();

        virtualinvoke $r2.<androidx.paging.LoadStateAdapter: void setLoadState(androidx.paging.LoadState)>($r3);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.PagingDataAdapter$withLoadStateFooter$1 r0;
        java.lang.Object r1;
        androidx.paging.CombinedLoadStates $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.paging.PagingDataAdapter$withLoadStateFooter$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.CombinedLoadStates) r1;

        virtualinvoke r0.<androidx.paging.PagingDataAdapter$withLoadStateFooter$1: void invoke(androidx.paging.CombinedLoadStates)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.paging.PagingDataAdapter$withLoadStateHeader$1
<androidx.paging.PagingDataAdapter$withLoadStateHeader$1: androidx.paging.LoadStateAdapter $header>
    void <init>(androidx.paging.LoadStateAdapter)
    {
        androidx.paging.PagingDataAdapter$withLoadStateHeader$1 r0;
        androidx.paging.LoadStateAdapter $r1;

        r0 := @this: androidx.paging.PagingDataAdapter$withLoadStateHeader$1;

        $r1 := @parameter0: androidx.paging.LoadStateAdapter;

        r0.<androidx.paging.PagingDataAdapter$withLoadStateHeader$1: androidx.paging.LoadStateAdapter $header> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.paging.CombinedLoadStates)
    {
        androidx.paging.PagingDataAdapter$withLoadStateHeader$1 r0;
        androidx.paging.CombinedLoadStates r1;
        androidx.paging.LoadStateAdapter $r2;
        androidx.paging.LoadState $r3;

        r0 := @this: androidx.paging.PagingDataAdapter$withLoadStateHeader$1;

        r1 := @parameter0: androidx.paging.CombinedLoadStates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadStates");

        $r2 = r0.<androidx.paging.PagingDataAdapter$withLoadStateHeader$1: androidx.paging.LoadStateAdapter $header>;

        $r3 = virtualinvoke r1.<androidx.paging.CombinedLoadStates: androidx.paging.LoadState getPrepend()>();

        virtualinvoke $r2.<androidx.paging.LoadStateAdapter: void setLoadState(androidx.paging.LoadState)>($r3);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.PagingDataAdapter$withLoadStateHeader$1 r0;
        java.lang.Object r1;
        androidx.paging.CombinedLoadStates $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.paging.PagingDataAdapter$withLoadStateHeader$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.CombinedLoadStates) r1;

        virtualinvoke r0.<androidx.paging.PagingDataAdapter$withLoadStateHeader$1: void invoke(androidx.paging.CombinedLoadStates)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1
<androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1: androidx.paging.LoadStateAdapter $header>
<androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1: androidx.paging.LoadStateAdapter $footer>
    void <init>(androidx.paging.LoadStateAdapter, androidx.paging.LoadStateAdapter)
    {
        androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1 r0;
        androidx.paging.LoadStateAdapter $r1, $r2;

        r0 := @this: androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1;

        $r1 := @parameter0: androidx.paging.LoadStateAdapter;

        $r2 := @parameter1: androidx.paging.LoadStateAdapter;

        r0.<androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1: androidx.paging.LoadStateAdapter $header> = $r1;

        r0.<androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1: androidx.paging.LoadStateAdapter $footer> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.paging.CombinedLoadStates)
    {
        androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1 r0;
        androidx.paging.CombinedLoadStates r1;
        androidx.paging.LoadStateAdapter $r2, $r4;
        androidx.paging.LoadState $r3, $r5;

        r0 := @this: androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1;

        r1 := @parameter0: androidx.paging.CombinedLoadStates;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "loadStates");

        $r2 = r0.<androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1: androidx.paging.LoadStateAdapter $header>;

        $r3 = virtualinvoke r1.<androidx.paging.CombinedLoadStates: androidx.paging.LoadState getPrepend()>();

        virtualinvoke $r2.<androidx.paging.LoadStateAdapter: void setLoadState(androidx.paging.LoadState)>($r3);

        $r4 = r0.<androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1: androidx.paging.LoadStateAdapter $footer>;

        $r5 = virtualinvoke r1.<androidx.paging.CombinedLoadStates: androidx.paging.LoadState getAppend()>();

        virtualinvoke $r4.<androidx.paging.LoadStateAdapter: void setLoadState(androidx.paging.LoadState)>($r5);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1 r0;
        java.lang.Object r1;
        androidx.paging.CombinedLoadStates $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.paging.CombinedLoadStates) r1;

        virtualinvoke r0.<androidx.paging.PagingDataAdapter$withLoadStateHeaderAndFooter$1: void invoke(androidx.paging.CombinedLoadStates)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

