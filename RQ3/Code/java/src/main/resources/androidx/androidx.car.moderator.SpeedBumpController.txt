androidx.car.moderator.SpeedBumpController
<androidx.car.moderator.SpeedBumpController: java.lang.String TAG>
<androidx.car.moderator.SpeedBumpController: double ACQUIRED_PERMITS_PER_SECOND>
<androidx.car.moderator.SpeedBumpController: double MAX_PERMIT_POOL>
<androidx.car.moderator.SpeedBumpController: long PERMIT_FILL_DELAY_MS>
<androidx.car.moderator.SpeedBumpController: androidx.car.moderator.ContentRateLimiter mContentRateLimiter>
<androidx.car.moderator.SpeedBumpController: boolean mInteractionPermitted>
<androidx.car.moderator.SpeedBumpController: int mLockOutMessageDurationMs>
<androidx.car.moderator.SpeedBumpController: android.os.Handler mHandler>
<androidx.car.moderator.SpeedBumpController: android.content.Context mContext>
<androidx.car.moderator.SpeedBumpController: android.view.View mLockoutMessageView>
<androidx.car.moderator.SpeedBumpController: android.widget.ImageView mLockoutImageView>
<androidx.car.moderator.SpeedBumpController: android.car.Car mCar>
<androidx.car.moderator.SpeedBumpController: android.car.drivingstate.CarUxRestrictionsManager mCarUxRestrictionsManager>
<androidx.car.moderator.SpeedBumpController: android.content.ServiceConnection mServiceConnection>
    void <init>(androidx.car.moderator.SpeedBumpView)
    {
        androidx.car.moderator.SpeedBumpController r0;
        androidx.car.moderator.SpeedBumpView r1;
        android.view.LayoutInflater r2;
        android.content.Context $r6, $r7, $r12, $r15;
        int $i0, $i1, $i2, $i3;
        android.view.View $r8, $r9, $r10;
        android.widget.ImageView $r11;
        android.content.res.Resources $r13;
        android.content.ServiceConnection $r14;
        android.car.Car $r16;
        androidx.car.moderator.ContentRateLimiter $r17, r18;
        android.os.Handler r19;
        androidx.car.moderator.SpeedBumpController$3 r20;
        android.view.ViewGroup r21;

        r0 := @this: androidx.car.moderator.SpeedBumpController;

        r1 := @parameter0: androidx.car.moderator.SpeedBumpView;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r18 = new androidx.car.moderator.ContentRateLimiter;

        specialinvoke r18.<androidx.car.moderator.ContentRateLimiter: void <init>(double,double,long)>(0.5, 5.0, 600L);

        r0.<androidx.car.moderator.SpeedBumpController: androidx.car.moderator.ContentRateLimiter mContentRateLimiter> = r18;

        r0.<androidx.car.moderator.SpeedBumpController: boolean mInteractionPermitted> = 1;

        r19 = new android.os.Handler;

        specialinvoke r19.<android.os.Handler: void <init>()>();

        r0.<androidx.car.moderator.SpeedBumpController: android.os.Handler mHandler> = r19;

        r20 = new androidx.car.moderator.SpeedBumpController$3;

        specialinvoke r20.<androidx.car.moderator.SpeedBumpController$3: void <init>(androidx.car.moderator.SpeedBumpController)>(r0);

        r0.<androidx.car.moderator.SpeedBumpController: android.content.ServiceConnection mServiceConnection> = r20;

        $r6 = virtualinvoke r1.<androidx.car.moderator.SpeedBumpView: android.content.Context getContext()>();

        r0.<androidx.car.moderator.SpeedBumpController: android.content.Context mContext> = $r6;

        $r7 = r0.<androidx.car.moderator.SpeedBumpController: android.content.Context mContext>;

        r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r7);

        $i0 = <androidx.car.R$layout: int lock_out_message>;

        r21 = (android.view.ViewGroup) r1;

        $r8 = virtualinvoke r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, r21, 0);

        r0.<androidx.car.moderator.SpeedBumpController: android.view.View mLockoutMessageView> = $r8;

        $r9 = r0.<androidx.car.moderator.SpeedBumpController: android.view.View mLockoutMessageView>;

        $i1 = <androidx.car.R$id: int lock_out_drawable>;

        $r10 = virtualinvoke $r9.<android.view.View: android.view.View findViewById(int)>($i1);

        $r11 = (android.widget.ImageView) $r10;

        r0.<androidx.car.moderator.SpeedBumpController: android.widget.ImageView mLockoutImageView> = $r11;

        $r12 = r0.<androidx.car.moderator.SpeedBumpController: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = <androidx.car.R$integer: int speed_bump_lock_out_duration_ms>;

        $i3 = virtualinvoke $r13.<android.content.res.Resources: int getInteger(int)>($i2);

        r0.<androidx.car.moderator.SpeedBumpController: int mLockOutMessageDurationMs> = $i3;

        $r15 = r0.<androidx.car.moderator.SpeedBumpController: android.content.Context mContext>;

        $r14 = r0.<androidx.car.moderator.SpeedBumpController: android.content.ServiceConnection mServiceConnection>;

        $r16 = staticinvoke <android.car.Car: android.car.Car createCar(android.content.Context,android.content.ServiceConnection)>($r15, $r14);

        r0.<androidx.car.moderator.SpeedBumpController: android.car.Car mCar> = $r16;

        $r17 = r0.<androidx.car.moderator.SpeedBumpController: androidx.car.moderator.ContentRateLimiter mContentRateLimiter>;

        virtualinvoke $r17.<androidx.car.moderator.ContentRateLimiter: void setUnlimitedMode(boolean)>(1);

        return;
    }

    void start()
    {
        androidx.car.moderator.SpeedBumpController r0;
        java.lang.Throwable r1, $r5;
        android.car.Car $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.car.moderator.SpeedBumpController;

     label1:
        $r2 = r0.<androidx.car.moderator.SpeedBumpController: android.car.Car mCar>;

        if $r2 == null goto label2;

        $r3 = r0.<androidx.car.moderator.SpeedBumpController: android.car.Car mCar>;

        $z0 = virtualinvoke $r3.<android.car.Car: boolean isConnected()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<androidx.car.moderator.SpeedBumpController: android.car.Car mCar>;

        virtualinvoke $r4.<android.car.Car: void connect()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SpeedBumpController", "start(); cannot connect to Car");

     label4:
        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    void stop()
    {
        androidx.car.moderator.SpeedBumpController r0;
        android.car.drivingstate.CarUxRestrictionsManager $r1, $r4;
        android.car.Car $r2, $r3, $r8;
        boolean $z0;
        java.lang.Throwable $r5, $r6, r7, r9;

        r0 := @this: androidx.car.moderator.SpeedBumpController;

        $r1 = r0.<androidx.car.moderator.SpeedBumpController: android.car.drivingstate.CarUxRestrictionsManager mCarUxRestrictionsManager>;

        if $r1 == null goto label5;

     label1:
        $r4 = r0.<androidx.car.moderator.SpeedBumpController: android.car.drivingstate.CarUxRestrictionsManager mCarUxRestrictionsManager>;

        virtualinvoke $r4.<android.car.drivingstate.CarUxRestrictionsManager: void unregisterListener()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r7 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SpeedBumpController", "stop(); cannot unregister listener.");

     label4:
        r0.<androidx.car.moderator.SpeedBumpController: android.car.drivingstate.CarUxRestrictionsManager mCarUxRestrictionsManager> = null;

     label5:
        $r8 = r0.<androidx.car.moderator.SpeedBumpController: android.car.Car mCar>;

        if $r8 == null goto label6;

        $r2 = r0.<androidx.car.moderator.SpeedBumpController: android.car.Car mCar>;

        $z0 = virtualinvoke $r2.<android.car.Car: boolean isConnected()>();

        if $z0 == 0 goto label6;

        $r3 = r0.<androidx.car.moderator.SpeedBumpController: android.car.Car mCar>;

        virtualinvoke $r3.<android.car.Car: void disconnect()>();

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;

        r9 = $r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("SpeedBumpController", "stop(); cannot disconnect from Car.");

     label8:
        return;

        catch android.car.CarNotConnectedException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label5 to label6 with label7;
    }

    android.view.View getLockoutMessageView()
    {
        androidx.car.moderator.SpeedBumpController r0;
        android.view.View $r1;

        r0 := @this: androidx.car.moderator.SpeedBumpController;

        $r1 = r0.<androidx.car.moderator.SpeedBumpController: android.view.View mLockoutMessageView>;

        return $r1;
    }

    boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.car.moderator.SpeedBumpController r0;
        android.view.MotionEvent r1;
        int i0;
        boolean z0, $z1, $z2;
        androidx.car.moderator.ContentRateLimiter $r2;

        r0 := @this: androidx.car.moderator.SpeedBumpController;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i0 == 3 goto label1;

        if i0 != 1 goto label2;

     label1:
        $r2 = r0.<androidx.car.moderator.SpeedBumpController: androidx.car.moderator.ContentRateLimiter mContentRateLimiter>;

        z0 = virtualinvoke $r2.<androidx.car.moderator.ContentRateLimiter: boolean tryAcquire()>();

        $z1 = r0.<androidx.car.moderator.SpeedBumpController: boolean mInteractionPermitted>;

        if $z1 == 0 goto label2;

        if z0 != 0 goto label2;

        r0.<androidx.car.moderator.SpeedBumpController: boolean mInteractionPermitted> = 0;

        specialinvoke r0.<androidx.car.moderator.SpeedBumpController: void showLockOutMessage()>();

        return 1;

     label2:
        $z2 = r0.<androidx.car.moderator.SpeedBumpController: boolean mInteractionPermitted>;

        return $z2;
    }

    private void showLockOutMessage()
    {
        androidx.car.moderator.SpeedBumpController r0;
        android.view.animation.Animation r1;
        android.view.View $r2, $r5, $r6;
        int $i0, $i1;
        android.content.Context $r3;
        androidx.car.moderator.SpeedBumpController$1 $r4;
        android.widget.ImageView $r7;
        android.graphics.drawable.Drawable $r8;
        android.graphics.drawable.AnimatedVectorDrawable $r9;

        r0 := @this: androidx.car.moderator.SpeedBumpController;

        $r2 = r0.<androidx.car.moderator.SpeedBumpController: android.view.View mLockoutMessageView>;

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.car.moderator.SpeedBumpController: android.content.Context mContext>;

        $i1 = <androidx.car.R$anim: int lock_out_message_in>;

        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($r3, $i1);

        $r4 = new androidx.car.moderator.SpeedBumpController$1;

        specialinvoke $r4.<androidx.car.moderator.SpeedBumpController$1: void <init>(androidx.car.moderator.SpeedBumpController)>(r0);

        virtualinvoke r1.<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>($r4);

        $r5 = r0.<androidx.car.moderator.SpeedBumpController: android.view.View mLockoutMessageView>;

        virtualinvoke $r5.<android.view.View: void clearAnimation()>();

        $r6 = r0.<androidx.car.moderator.SpeedBumpController: android.view.View mLockoutMessageView>;

        virtualinvoke $r6.<android.view.View: void startAnimation(android.view.animation.Animation)>(r1);

        $r7 = r0.<androidx.car.moderator.SpeedBumpController: android.widget.ImageView mLockoutImageView>;

        $r8 = virtualinvoke $r7.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $r9 = (android.graphics.drawable.AnimatedVectorDrawable) $r8;

        virtualinvoke $r9.<android.graphics.drawable.AnimatedVectorDrawable: void start()>();

        return;
    }

    private void hideLockOutMessage()
    {
        androidx.car.moderator.SpeedBumpController r0;
        android.view.animation.Animation r1;
        android.view.View $r2, $r5;
        int $i0, $i1;
        android.content.Context $r3;
        androidx.car.moderator.SpeedBumpController$2 $r4;

        r0 := @this: androidx.car.moderator.SpeedBumpController;

        $r2 = r0.<androidx.car.moderator.SpeedBumpController: android.view.View mLockoutMessageView>;

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<androidx.car.moderator.SpeedBumpController: android.content.Context mContext>;

        $i1 = <androidx.car.R$anim: int lock_out_message_out>;

        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($r3, $i1);

        $r4 = new androidx.car.moderator.SpeedBumpController$2;

        specialinvoke $r4.<androidx.car.moderator.SpeedBumpController$2: void <init>(androidx.car.moderator.SpeedBumpController)>(r0);

        virtualinvoke r1.<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>($r4);

        $r5 = r0.<androidx.car.moderator.SpeedBumpController: android.view.View mLockoutMessageView>;

        virtualinvoke $r5.<android.view.View: void startAnimation(android.view.animation.Animation)>(r1);

        return;
    }

    void updateUnlimitedModeEnabled(android.car.drivingstate.CarUxRestrictions)
    {
        androidx.car.moderator.SpeedBumpController r0;
        android.car.drivingstate.CarUxRestrictions r1;
        androidx.car.moderator.ContentRateLimiter $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.car.moderator.SpeedBumpController;

        r1 := @parameter0: android.car.drivingstate.CarUxRestrictions;

        $r2 = r0.<androidx.car.moderator.SpeedBumpController: androidx.car.moderator.ContentRateLimiter mContentRateLimiter>;

        $z0 = virtualinvoke r1.<android.car.drivingstate.CarUxRestrictions: boolean isRequiresDistractionOptimization()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke $r2.<androidx.car.moderator.ContentRateLimiter: void setUnlimitedMode(boolean)>($z1);

        return;
    }

    static void access$000(androidx.car.moderator.SpeedBumpController)
    {
        androidx.car.moderator.SpeedBumpController r0;

        r0 := @parameter0: androidx.car.moderator.SpeedBumpController;

        specialinvoke r0.<androidx.car.moderator.SpeedBumpController: void hideLockOutMessage()>();

        return;
    }

androidx.car.moderator.SpeedBumpController$1
<androidx.car.moderator.SpeedBumpController$1: androidx.car.moderator.SpeedBumpController this$0>
    void <init>(androidx.car.moderator.SpeedBumpController)
    {
        androidx.car.moderator.SpeedBumpController$1 r0;
        androidx.car.moderator.SpeedBumpController r1;

        r0 := @this: androidx.car.moderator.SpeedBumpController$1;

        r1 := @parameter0: androidx.car.moderator.SpeedBumpController;

        r0.<androidx.car.moderator.SpeedBumpController$1: androidx.car.moderator.SpeedBumpController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAnimationStart(android.view.animation.Animation)
    {
        androidx.car.moderator.SpeedBumpController$1 r0;
        android.view.animation.Animation r1;
        androidx.car.moderator.SpeedBumpController $r2;
        android.view.View $r3;

        r0 := @this: androidx.car.moderator.SpeedBumpController$1;

        r1 := @parameter0: android.view.animation.Animation;

        $r2 = r0.<androidx.car.moderator.SpeedBumpController$1: androidx.car.moderator.SpeedBumpController this$0>;

        $r3 = $r2.<androidx.car.moderator.SpeedBumpController: android.view.View mLockoutMessageView>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(0);

        return;
    }

    public void onAnimationEnd(android.view.animation.Animation)
    {
        androidx.car.moderator.SpeedBumpController$1 r0;
        android.view.animation.Animation r1;
        androidx.car.moderator.SpeedBumpController $r2, $r3, $r6;
        android.os.Handler $r4;
        java.lang.Runnable $r5;
        int $i0;
        long $l1;

        r0 := @this: androidx.car.moderator.SpeedBumpController$1;

        r1 := @parameter0: android.view.animation.Animation;

        $r2 = r0.<androidx.car.moderator.SpeedBumpController$1: androidx.car.moderator.SpeedBumpController this$0>;

        $r4 = $r2.<androidx.car.moderator.SpeedBumpController: android.os.Handler mHandler>;

        $r3 = r0.<androidx.car.moderator.SpeedBumpController$1: androidx.car.moderator.SpeedBumpController this$0>;

        $r5 = dynamicinvoke "run" <java.lang.Runnable (androidx.car.moderator.SpeedBumpController)>($r3) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.car.moderator.SpeedBumpController$1: void lambda$onAnimationEnd$34(androidx.car.moderator.SpeedBumpController)>, methodtype: void __METHODTYPE__());

        $r6 = r0.<androidx.car.moderator.SpeedBumpController$1: androidx.car.moderator.SpeedBumpController this$0>;

        $i0 = $r6.<androidx.car.moderator.SpeedBumpController: int mLockOutMessageDurationMs>;

        $l1 = (long) $i0;

        virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r5, $l1);

        return;
    }

    public void onAnimationRepeat(android.view.animation.Animation)
    {
        androidx.car.moderator.SpeedBumpController$1 r0;
        android.view.animation.Animation r1;

        r0 := @this: androidx.car.moderator.SpeedBumpController$1;

        r1 := @parameter0: android.view.animation.Animation;

        return;
    }

    private static void lambda$onAnimationEnd$34(androidx.car.moderator.SpeedBumpController)
    {
        androidx.car.moderator.SpeedBumpController r0;

        r0 := @parameter0: androidx.car.moderator.SpeedBumpController;

        staticinvoke <androidx.car.moderator.SpeedBumpController: void access$000(androidx.car.moderator.SpeedBumpController)>(r0);

        return;
    }

androidx.car.moderator.SpeedBumpController$2
<androidx.car.moderator.SpeedBumpController$2: androidx.car.moderator.SpeedBumpController this$0>
    void <init>(androidx.car.moderator.SpeedBumpController)
    {
        androidx.car.moderator.SpeedBumpController$2 r0;
        androidx.car.moderator.SpeedBumpController r1;

        r0 := @this: androidx.car.moderator.SpeedBumpController$2;

        r1 := @parameter0: androidx.car.moderator.SpeedBumpController;

        r0.<androidx.car.moderator.SpeedBumpController$2: androidx.car.moderator.SpeedBumpController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onAnimationStart(android.view.animation.Animation)
    {
        androidx.car.moderator.SpeedBumpController$2 r0;
        android.view.animation.Animation r1;

        r0 := @this: androidx.car.moderator.SpeedBumpController$2;

        r1 := @parameter0: android.view.animation.Animation;

        return;
    }

    public void onAnimationEnd(android.view.animation.Animation)
    {
        androidx.car.moderator.SpeedBumpController$2 r0;
        android.view.animation.Animation r1;
        androidx.car.moderator.SpeedBumpController $r2, $r4;
        android.view.View $r3;

        r0 := @this: androidx.car.moderator.SpeedBumpController$2;

        r1 := @parameter0: android.view.animation.Animation;

        $r2 = r0.<androidx.car.moderator.SpeedBumpController$2: androidx.car.moderator.SpeedBumpController this$0>;

        $r3 = $r2.<androidx.car.moderator.SpeedBumpController: android.view.View mLockoutMessageView>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(8);

        $r4 = r0.<androidx.car.moderator.SpeedBumpController$2: androidx.car.moderator.SpeedBumpController this$0>;

        $r4.<androidx.car.moderator.SpeedBumpController: boolean mInteractionPermitted> = 1;

        return;
    }

    public void onAnimationRepeat(android.view.animation.Animation)
    {
        androidx.car.moderator.SpeedBumpController$2 r0;
        android.view.animation.Animation r1;

        r0 := @this: androidx.car.moderator.SpeedBumpController$2;

        r1 := @parameter0: android.view.animation.Animation;

        return;
    }

androidx.car.moderator.SpeedBumpController$3
<androidx.car.moderator.SpeedBumpController$3: androidx.car.moderator.SpeedBumpController this$0>
    void <init>(androidx.car.moderator.SpeedBumpController)
    {
        androidx.car.moderator.SpeedBumpController$3 r0;
        androidx.car.moderator.SpeedBumpController r1;

        r0 := @this: androidx.car.moderator.SpeedBumpController$3;

        r1 := @parameter0: androidx.car.moderator.SpeedBumpController;

        r0.<androidx.car.moderator.SpeedBumpController$3: androidx.car.moderator.SpeedBumpController this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        androidx.car.moderator.SpeedBumpController$3 r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        android.car.settings.SpeedBumpConfiguration r3;
        androidx.car.moderator.SpeedBumpController $r4, $r6, $r9, $r10, $r13, $r15, $r17, $r20, $r22, $r24;
        android.car.Car $r5, $r18;
        java.lang.Object $r7, $r19;
        android.car.drivingstate.CarUxRestrictionsManager $r8, $r11, $r14;
        android.car.drivingstate.CarUxRestrictionsManager$OnUxRestrictionsChangedListener $r12;
        android.car.drivingstate.CarUxRestrictions $r16;
        androidx.car.moderator.ContentRateLimiter $r21, $r23, $r25;
        double $d0, $d1;
        long $l0;
        java.lang.Throwable $r26, r28;
        android.car.settings.CarConfigurationManager r27;

        r0 := @this: androidx.car.moderator.SpeedBumpController$3;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

     label1:
        $r6 = r0.<androidx.car.moderator.SpeedBumpController$3: androidx.car.moderator.SpeedBumpController this$0>;

        $r4 = r0.<androidx.car.moderator.SpeedBumpController$3: androidx.car.moderator.SpeedBumpController this$0>;

        $r5 = $r4.<androidx.car.moderator.SpeedBumpController: android.car.Car mCar>;

        $r7 = virtualinvoke $r5.<android.car.Car: java.lang.Object getCarManager(java.lang.String)>("uxrestriction");

        $r8 = (android.car.drivingstate.CarUxRestrictionsManager) $r7;

        $r6.<androidx.car.moderator.SpeedBumpController: android.car.drivingstate.CarUxRestrictionsManager mCarUxRestrictionsManager> = $r8;

        $r9 = r0.<androidx.car.moderator.SpeedBumpController$3: androidx.car.moderator.SpeedBumpController this$0>;

        $r11 = $r9.<androidx.car.moderator.SpeedBumpController: android.car.drivingstate.CarUxRestrictionsManager mCarUxRestrictionsManager>;

        $r10 = r0.<androidx.car.moderator.SpeedBumpController$3: androidx.car.moderator.SpeedBumpController this$0>;

        $r12 = dynamicinvoke "onUxRestrictionsChanged" <android.car.drivingstate.CarUxRestrictionsManager$OnUxRestrictionsChangedListener (androidx.car.moderator.SpeedBumpController)>($r10) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(android.car.drivingstate.CarUxRestrictions), methodhandle: "REF_INVOKE_VIRTUAL" <androidx.car.moderator.SpeedBumpController: void updateUnlimitedModeEnabled(android.car.drivingstate.CarUxRestrictions)>, methodtype: void __METHODTYPE__(android.car.drivingstate.CarUxRestrictions));

        virtualinvoke $r11.<android.car.drivingstate.CarUxRestrictionsManager: void registerListener(android.car.drivingstate.CarUxRestrictionsManager$OnUxRestrictionsChangedListener)>($r12);

        $r15 = r0.<androidx.car.moderator.SpeedBumpController$3: androidx.car.moderator.SpeedBumpController this$0>;

        $r13 = r0.<androidx.car.moderator.SpeedBumpController$3: androidx.car.moderator.SpeedBumpController this$0>;

        $r14 = $r13.<androidx.car.moderator.SpeedBumpController: android.car.drivingstate.CarUxRestrictionsManager mCarUxRestrictionsManager>;

        $r16 = virtualinvoke $r14.<android.car.drivingstate.CarUxRestrictionsManager: android.car.drivingstate.CarUxRestrictions getCurrentCarUxRestrictions()>();

        virtualinvoke $r15.<androidx.car.moderator.SpeedBumpController: void updateUnlimitedModeEnabled(android.car.drivingstate.CarUxRestrictions)>($r16);

        $r17 = r0.<androidx.car.moderator.SpeedBumpController$3: androidx.car.moderator.SpeedBumpController this$0>;

        $r18 = $r17.<androidx.car.moderator.SpeedBumpController: android.car.Car mCar>;

        $r19 = virtualinvoke $r18.<android.car.Car: java.lang.Object getCarManager(java.lang.String)>("configuration");

        r27 = (android.car.settings.CarConfigurationManager) $r19;

        r3 = virtualinvoke r27.<android.car.settings.CarConfigurationManager: android.car.settings.SpeedBumpConfiguration getSpeedBumpConfiguration()>();

        $r20 = r0.<androidx.car.moderator.SpeedBumpController$3: androidx.car.moderator.SpeedBumpController this$0>;

        $r21 = $r20.<androidx.car.moderator.SpeedBumpController: androidx.car.moderator.ContentRateLimiter mContentRateLimiter>;

        $d0 = virtualinvoke r3.<android.car.settings.SpeedBumpConfiguration: double getAcquiredPermitsPerSecond()>();

        virtualinvoke $r21.<androidx.car.moderator.ContentRateLimiter: void setAcquiredPermitsRate(double)>($d0);

        $r22 = r0.<androidx.car.moderator.SpeedBumpController$3: androidx.car.moderator.SpeedBumpController this$0>;

        $r23 = $r22.<androidx.car.moderator.SpeedBumpController: androidx.car.moderator.ContentRateLimiter mContentRateLimiter>;

        $d1 = virtualinvoke r3.<android.car.settings.SpeedBumpConfiguration: double getMaxPermitPool()>();

        virtualinvoke $r23.<androidx.car.moderator.ContentRateLimiter: void setMaxStoredPermits(double)>($d1);

        $r24 = r0.<androidx.car.moderator.SpeedBumpController$3: androidx.car.moderator.SpeedBumpController this$0>;

        $r25 = $r24.<androidx.car.moderator.SpeedBumpController: androidx.car.moderator.ContentRateLimiter mContentRateLimiter>;

        $l0 = virtualinvoke r3.<android.car.settings.SpeedBumpConfiguration: long getPermitFillDelay()>();

        virtualinvoke $r25.<androidx.car.moderator.ContentRateLimiter: void setPermitFillDelay(long)>($l0);

     label2:
        goto label4;

     label3:
        $r26 := @caughtexception;

        r28 = $r26;

        virtualinvoke r28.<android.car.CarNotConnectedException: void printStackTrace()>();

     label4:
        return;

        catch android.car.CarNotConnectedException from label1 to label2 with label3;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        androidx.car.moderator.SpeedBumpController$3 r0;
        android.content.ComponentName r1;
        androidx.car.moderator.SpeedBumpController $r2;

        r0 := @this: androidx.car.moderator.SpeedBumpController$3;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = r0.<androidx.car.moderator.SpeedBumpController$3: androidx.car.moderator.SpeedBumpController this$0>;

        $r2.<androidx.car.moderator.SpeedBumpController: android.car.drivingstate.CarUxRestrictionsManager mCarUxRestrictionsManager> = null;

        return;
    }

