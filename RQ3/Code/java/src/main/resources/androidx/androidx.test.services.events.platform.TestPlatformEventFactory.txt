androidx.test.services.events.platform.TestPlatformEventFactory
    public androidx.test.services.events.platform.TestPlatformEvent createFromParcel(android.os.Parcel)
    {
        androidx.test.services.events.platform.TestPlatformEventFactory r0;
        android.os.Parcel r1;
        androidx.test.services.events.platform.TestPlatformEvent$EventType r2;
        java.lang.String r3, $r4, $r16;
        int[] $r5;
        int $i0, $i1;
        androidx.test.services.events.platform.TestRunFinishedEvent $r6;
        androidx.test.services.events.platform.TestCaseFinishedEvent $r7;
        androidx.test.services.events.platform.TestCaseErrorEvent $r8;
        androidx.test.services.events.platform.TestCaseStartedEvent $r9;
        androidx.test.services.events.platform.TestRunErrorEvent $r10;
        androidx.test.services.events.platform.TestRunStartedEvent $r11;
        java.lang.IllegalArgumentException $r12;
        java.lang.StringBuilder $r13, $r14, $r15;

        r0 := @this: androidx.test.services.events.platform.TestPlatformEventFactory;

        r1 := @parameter0: android.os.Parcel;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2 = staticinvoke <androidx.test.services.events.platform.TestPlatformEvent$EventType: androidx.test.services.events.platform.TestPlatformEvent$EventType valueOf(java.lang.String)>($r4);

        $r5 = <androidx.test.services.events.platform.TestPlatformEventFactory$1: int[] $SwitchMap$androidx$test$services$events$platform$TestPlatformEvent$EventType>;

        $i0 = virtualinvoke r2.<androidx.test.services.events.platform.TestPlatformEvent$EventType: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label7;
        };

     label1:
        $r11 = new androidx.test.services.events.platform.TestRunStartedEvent;

        specialinvoke $r11.<androidx.test.services.events.platform.TestRunStartedEvent: void <init>(android.os.Parcel)>(r1);

        return $r11;

     label2:
        $r10 = new androidx.test.services.events.platform.TestRunErrorEvent;

        specialinvoke $r10.<androidx.test.services.events.platform.TestRunErrorEvent: void <init>(android.os.Parcel)>(r1);

        return $r10;

     label3:
        $r9 = new androidx.test.services.events.platform.TestCaseStartedEvent;

        specialinvoke $r9.<androidx.test.services.events.platform.TestCaseStartedEvent: void <init>(android.os.Parcel)>(r1);

        return $r9;

     label4:
        $r8 = new androidx.test.services.events.platform.TestCaseErrorEvent;

        specialinvoke $r8.<androidx.test.services.events.platform.TestCaseErrorEvent: void <init>(android.os.Parcel)>(r1);

        return $r8;

     label5:
        $r7 = new androidx.test.services.events.platform.TestCaseFinishedEvent;

        specialinvoke $r7.<androidx.test.services.events.platform.TestCaseFinishedEvent: void <init>(android.os.Parcel)>(r1);

        return $r7;

     label6:
        $r6 = new androidx.test.services.events.platform.TestRunFinishedEvent;

        specialinvoke $r6.<androidx.test.services.events.platform.TestRunFinishedEvent: void <init>(android.os.Parcel)>(r1);

        return $r6;

     label7:
        $r12 = new java.lang.IllegalArgumentException;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled event type: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r12;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        androidx.test.services.events.platform.TestPlatformEventFactory r0;
        android.os.Parcel r1;
        androidx.test.services.events.platform.TestPlatformEvent $r2;

        r0 := @this: androidx.test.services.events.platform.TestPlatformEventFactory;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<androidx.test.services.events.platform.TestPlatformEventFactory: androidx.test.services.events.platform.TestPlatformEvent createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    public void <init>()
    {
        androidx.test.services.events.platform.TestPlatformEventFactory r0;

        r0 := @this: androidx.test.services.events.platform.TestPlatformEventFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public androidx.test.services.events.platform.TestPlatformEvent[] newArray(int)
    {
        androidx.test.services.events.platform.TestPlatformEventFactory r0;
        int i0;
        androidx.test.services.events.platform.TestPlatformEvent[] $r1;

        r0 := @this: androidx.test.services.events.platform.TestPlatformEventFactory;

        i0 := @parameter0: int;

        $r1 = newarray (androidx.test.services.events.platform.TestPlatformEvent)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        androidx.test.services.events.platform.TestPlatformEventFactory r0;
        int i0;
        androidx.test.services.events.platform.TestPlatformEvent[] $r1;

        r0 := @this: androidx.test.services.events.platform.TestPlatformEventFactory;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<androidx.test.services.events.platform.TestPlatformEventFactory: androidx.test.services.events.platform.TestPlatformEvent[] newArray(int)>(i0);

        return $r1;
    }

androidx.test.services.events.platform.TestPlatformEventFactory$1
<androidx.test.services.events.platform.TestPlatformEventFactory$1: int[] $SwitchMap$androidx$test$services$events$platform$TestPlatformEvent$EventType>
    static void <clinit>()
    {
        androidx.test.services.events.platform.TestPlatformEvent$EventType[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r1, $r3, $r5, $r7, $r9, $r11, $r13;
        androidx.test.services.events.platform.TestPlatformEvent$EventType $r2, $r4, $r6, $r8, $r10, $r12;
        java.lang.Throwable $r14, $r15, $r16, $r17, $r18, $r19, r20, r21, r22, r23, r24, r25;

        $r0 = staticinvoke <androidx.test.services.events.platform.TestPlatformEvent$EventType: androidx.test.services.events.platform.TestPlatformEvent$EventType[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <androidx.test.services.events.platform.TestPlatformEventFactory$1: int[] $SwitchMap$androidx$test$services$events$platform$TestPlatformEvent$EventType> = $r1;

     label01:
        $r3 = <androidx.test.services.events.platform.TestPlatformEventFactory$1: int[] $SwitchMap$androidx$test$services$events$platform$TestPlatformEvent$EventType>;

        $r2 = <androidx.test.services.events.platform.TestPlatformEvent$EventType: androidx.test.services.events.platform.TestPlatformEvent$EventType TEST_RUN_STARTED>;

        $i1 = virtualinvoke $r2.<androidx.test.services.events.platform.TestPlatformEvent$EventType: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r16 := @caughtexception;

        r20 = $r16;

     label04:
        $r5 = <androidx.test.services.events.platform.TestPlatformEventFactory$1: int[] $SwitchMap$androidx$test$services$events$platform$TestPlatformEvent$EventType>;

        $r4 = <androidx.test.services.events.platform.TestPlatformEvent$EventType: androidx.test.services.events.platform.TestPlatformEvent$EventType TEST_RUN_ERROR>;

        $i2 = virtualinvoke $r4.<androidx.test.services.events.platform.TestPlatformEvent$EventType: int ordinal()>();

        $r5[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r15 := @caughtexception;

        r21 = $r15;

     label07:
        $r7 = <androidx.test.services.events.platform.TestPlatformEventFactory$1: int[] $SwitchMap$androidx$test$services$events$platform$TestPlatformEvent$EventType>;

        $r6 = <androidx.test.services.events.platform.TestPlatformEvent$EventType: androidx.test.services.events.platform.TestPlatformEvent$EventType TEST_CASE_STARTED>;

        $i3 = virtualinvoke $r6.<androidx.test.services.events.platform.TestPlatformEvent$EventType: int ordinal()>();

        $r7[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r19 := @caughtexception;

        r22 = $r19;

     label10:
        $r9 = <androidx.test.services.events.platform.TestPlatformEventFactory$1: int[] $SwitchMap$androidx$test$services$events$platform$TestPlatformEvent$EventType>;

        $r8 = <androidx.test.services.events.platform.TestPlatformEvent$EventType: androidx.test.services.events.platform.TestPlatformEvent$EventType TEST_CASE_ERROR>;

        $i4 = virtualinvoke $r8.<androidx.test.services.events.platform.TestPlatformEvent$EventType: int ordinal()>();

        $r9[$i4] = 4;

     label11:
        goto label13;

     label12:
        $r14 := @caughtexception;

        r23 = $r14;

     label13:
        $r11 = <androidx.test.services.events.platform.TestPlatformEventFactory$1: int[] $SwitchMap$androidx$test$services$events$platform$TestPlatformEvent$EventType>;

        $r10 = <androidx.test.services.events.platform.TestPlatformEvent$EventType: androidx.test.services.events.platform.TestPlatformEvent$EventType TEST_CASE_FINISHED>;

        $i5 = virtualinvoke $r10.<androidx.test.services.events.platform.TestPlatformEvent$EventType: int ordinal()>();

        $r11[$i5] = 5;

     label14:
        goto label16;

     label15:
        $r18 := @caughtexception;

        r24 = $r18;

     label16:
        $r13 = <androidx.test.services.events.platform.TestPlatformEventFactory$1: int[] $SwitchMap$androidx$test$services$events$platform$TestPlatformEvent$EventType>;

        $r12 = <androidx.test.services.events.platform.TestPlatformEvent$EventType: androidx.test.services.events.platform.TestPlatformEvent$EventType TEST_RUN_FINISHED>;

        $i6 = virtualinvoke $r12.<androidx.test.services.events.platform.TestPlatformEvent$EventType: int ordinal()>();

        $r13[$i6] = 6;

     label17:
        goto label19;

     label18:
        $r17 := @caughtexception;

        r25 = $r17;

     label19:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label10 to label11 with label12;
        catch java.lang.NoSuchFieldError from label13 to label14 with label15;
        catch java.lang.NoSuchFieldError from label16 to label17 with label18;
    }

