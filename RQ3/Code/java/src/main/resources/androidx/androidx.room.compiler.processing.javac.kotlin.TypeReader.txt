androidx.room.compiler.processing.javac.kotlin.TypeReader
<androidx.room.compiler.processing.javac.kotlin.TypeReader: int flags>
<androidx.room.compiler.processing.javac.kotlin.TypeReader: kotlin.jvm.functions.Function1 output>
<androidx.room.compiler.processing.javac.kotlin.TypeReader: java.util.List typeArguments>
<androidx.room.compiler.processing.javac.kotlin.TypeReader: androidx.room.compiler.processing.javac.kotlin.KmType extendsBound>
<androidx.room.compiler.processing.javac.kotlin.TypeReader: boolean isExtensionType>
    public void <init>(int, kotlin.jvm.functions.Function1)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader r0;
        int i0;
        kotlin.jvm.functions.Function1 r1;
        java.util.ArrayList $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.kotlin.TypeReader;

        i0 := @parameter0: int;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "output");

        specialinvoke r0.<kotlinx.metadata.KmTypeVisitor: void <init>(kotlinx.metadata.KmTypeVisitor,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader: int flags> = i0;

        r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader: kotlin.jvm.functions.Function1 output> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = (java.util.List) $r2;

        r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader: java.util.List typeArguments> = $r3;

        return;
    }

    public kotlinx.metadata.KmTypeVisitor visitArgument(int, kotlinx.metadata.KmVariance)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader r0, $r2;
        int i0;
        kotlinx.metadata.KmVariance r1;
        androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1 $r3;
        kotlin.jvm.functions.Function1 $r4;
        kotlinx.metadata.KmTypeVisitor $r5;

        r0 := @this: androidx.room.compiler.processing.javac.kotlin.TypeReader;

        i0 := @parameter0: int;

        r1 := @parameter1: kotlinx.metadata.KmVariance;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "variance");

        $r2 = new androidx.room.compiler.processing.javac.kotlin.TypeReader;

        $r3 = new androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1;

        specialinvoke $r3.<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1: void <init>(androidx.room.compiler.processing.javac.kotlin.TypeReader)>(r0);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        specialinvoke $r2.<androidx.room.compiler.processing.javac.kotlin.TypeReader: void <init>(int,kotlin.jvm.functions.Function1)>(i0, $r4);

        $r5 = (kotlinx.metadata.KmTypeVisitor) $r2;

        return $r5;
    }

    public kotlinx.metadata.KmTypeVisitor visitFlexibleTypeUpperBound(int, java.lang.String)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader r0, $r2;
        int i0;
        java.lang.String r1;
        androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1 $r3;
        kotlin.jvm.functions.Function1 $r4;
        kotlinx.metadata.KmTypeVisitor $r5;

        r0 := @this: androidx.room.compiler.processing.javac.kotlin.TypeReader;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = new androidx.room.compiler.processing.javac.kotlin.TypeReader;

        $r3 = new androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1;

        specialinvoke $r3.<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1: void <init>(androidx.room.compiler.processing.javac.kotlin.TypeReader)>(r0);

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        specialinvoke $r2.<androidx.room.compiler.processing.javac.kotlin.TypeReader: void <init>(int,kotlin.jvm.functions.Function1)>(i0, $r4);

        $r5 = (kotlinx.metadata.KmTypeVisitor) $r2;

        return $r5;
    }

    public kotlinx.metadata.KmTypeExtensionVisitor visitExtensions(kotlinx.metadata.KmExtensionType)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader r0;
        kotlinx.metadata.KmExtensionType r1, $r2;
        boolean $z0;
        androidx.room.compiler.processing.javac.kotlin.TypeReader$visitExtensions$1 $r3;
        kotlinx.metadata.KmTypeExtensionVisitor $r4;

        r0 := @this: androidx.room.compiler.processing.javac.kotlin.TypeReader;

        r1 := @parameter0: kotlinx.metadata.KmExtensionType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "type");

        $r2 = <kotlinx.metadata.jvm.JvmTypeExtensionVisitor: kotlinx.metadata.KmExtensionType TYPE>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = new androidx.room.compiler.processing.javac.kotlin.TypeReader$visitExtensions$1;

        specialinvoke $r3.<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitExtensions$1: void <init>(androidx.room.compiler.processing.javac.kotlin.TypeReader)>(r0);

        $r4 = (kotlinx.metadata.KmTypeExtensionVisitor) $r3;

        return $r4;
    }

    public void visitEnd()
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader r0;
        androidx.room.compiler.processing.javac.kotlin.KmType $r1, $r2;
        boolean $z0;
        java.util.List $r3;
        int $i0;
        kotlin.jvm.functions.Function1 $r4;

        r0 := @this: androidx.room.compiler.processing.javac.kotlin.TypeReader;

        $r4 = r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader: kotlin.jvm.functions.Function1 output>;

        $r1 = new androidx.room.compiler.processing.javac.kotlin.KmType;

        $i0 = r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader: int flags>;

        $r3 = r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader: java.util.List typeArguments>;

        $r2 = r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader: androidx.room.compiler.processing.javac.kotlin.KmType extendsBound>;

        $z0 = r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader: boolean isExtensionType>;

        specialinvoke $r1.<androidx.room.compiler.processing.javac.kotlin.KmType: void <init>(int,java.util.List,androidx.room.compiler.processing.javac.kotlin.KmType,boolean)>($i0, $r3, $r2, $z0);

        interfaceinvoke $r4.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r1);

        return;
    }

    public static final java.util.List access$getTypeArguments$p(androidx.room.compiler.processing.javac.kotlin.TypeReader)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader $r0;
        java.util.List $r1;

        $r0 := @parameter0: androidx.room.compiler.processing.javac.kotlin.TypeReader;

        $r1 = $r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader: java.util.List typeArguments>;

        return $r1;
    }

    public static final void access$setExtendsBound$p(androidx.room.compiler.processing.javac.kotlin.TypeReader, androidx.room.compiler.processing.javac.kotlin.KmType)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader $r0;
        androidx.room.compiler.processing.javac.kotlin.KmType r1;

        $r0 := @parameter0: androidx.room.compiler.processing.javac.kotlin.TypeReader;

        r1 := @parameter1: androidx.room.compiler.processing.javac.kotlin.KmType;

        $r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader: androidx.room.compiler.processing.javac.kotlin.KmType extendsBound> = r1;

        return;
    }

    public static final void access$setExtensionType$p(androidx.room.compiler.processing.javac.kotlin.TypeReader, boolean)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader $r0;
        boolean z0;

        $r0 := @parameter0: androidx.room.compiler.processing.javac.kotlin.TypeReader;

        z0 := @parameter1: boolean;

        $r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader: boolean isExtensionType> = z0;

        return;
    }

androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1
<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1: androidx.room.compiler.processing.javac.kotlin.TypeReader this$0>
    void <init>(androidx.room.compiler.processing.javac.kotlin.TypeReader)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1 r0;
        androidx.room.compiler.processing.javac.kotlin.TypeReader $r1;

        r0 := @this: androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.kotlin.TypeReader;

        r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1: androidx.room.compiler.processing.javac.kotlin.TypeReader this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.room.compiler.processing.javac.kotlin.KmType)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1 r0;
        androidx.room.compiler.processing.javac.kotlin.KmType r1;
        androidx.room.compiler.processing.javac.kotlin.TypeReader $r2;
        java.util.List $r3;

        r0 := @this: androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1;

        r1 := @parameter0: androidx.room.compiler.processing.javac.kotlin.KmType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1: androidx.room.compiler.processing.javac.kotlin.TypeReader this$0>;

        $r3 = staticinvoke <androidx.room.compiler.processing.javac.kotlin.TypeReader: java.util.List access$getTypeArguments$p(androidx.room.compiler.processing.javac.kotlin.TypeReader)>($r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1 r0;
        java.lang.Object r1;
        androidx.room.compiler.processing.javac.kotlin.KmType $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.room.compiler.processing.javac.kotlin.KmType) r1;

        virtualinvoke r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitArgument$1: void invoke(androidx.room.compiler.processing.javac.kotlin.KmType)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.room.compiler.processing.javac.kotlin.TypeReader$visitExtensions$1
<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitExtensions$1: androidx.room.compiler.processing.javac.kotlin.TypeReader this$0>
    void <init>(androidx.room.compiler.processing.javac.kotlin.TypeReader)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader$visitExtensions$1 r0;
        androidx.room.compiler.processing.javac.kotlin.TypeReader $r1;

        r0 := @this: androidx.room.compiler.processing.javac.kotlin.TypeReader$visitExtensions$1;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.kotlin.TypeReader;

        r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitExtensions$1: androidx.room.compiler.processing.javac.kotlin.TypeReader this$0> = $r1;

        specialinvoke r0.<kotlinx.metadata.jvm.JvmTypeExtensionVisitor: void <init>(kotlinx.metadata.jvm.JvmTypeExtensionVisitor,int,kotlin.jvm.internal.DefaultConstructorMarker)>(null, 1, null);

        return;
    }

    public void visitAnnotation(kotlinx.metadata.KmAnnotation)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader$visitExtensions$1 r0;
        kotlinx.metadata.KmAnnotation r1;
        java.lang.String $r2;
        boolean $z0;
        androidx.room.compiler.processing.javac.kotlin.TypeReader $r3;

        r0 := @this: androidx.room.compiler.processing.javac.kotlin.TypeReader$visitExtensions$1;

        r1 := @parameter0: kotlinx.metadata.KmAnnotation;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "annotation");

        $r2 = virtualinvoke r1.<kotlinx.metadata.KmAnnotation: java.lang.String getClassName()>();

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r2, "kotlin/ExtensionFunctionType");

        if $z0 == 0 goto label1;

        $r3 = r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitExtensions$1: androidx.room.compiler.processing.javac.kotlin.TypeReader this$0>;

        staticinvoke <androidx.room.compiler.processing.javac.kotlin.TypeReader: void access$setExtensionType$p(androidx.room.compiler.processing.javac.kotlin.TypeReader,boolean)>($r3, 1);

     label1:
        return;
    }

androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1
<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1: androidx.room.compiler.processing.javac.kotlin.TypeReader this$0>
    void <init>(androidx.room.compiler.processing.javac.kotlin.TypeReader)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1 r0;
        androidx.room.compiler.processing.javac.kotlin.TypeReader $r1;

        r0 := @this: androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1;

        $r1 := @parameter0: androidx.room.compiler.processing.javac.kotlin.TypeReader;

        r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1: androidx.room.compiler.processing.javac.kotlin.TypeReader this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.room.compiler.processing.javac.kotlin.KmType)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1 r0;
        androidx.room.compiler.processing.javac.kotlin.KmType r1;
        androidx.room.compiler.processing.javac.kotlin.TypeReader $r2;

        r0 := @this: androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1;

        r1 := @parameter0: androidx.room.compiler.processing.javac.kotlin.KmType;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1: androidx.room.compiler.processing.javac.kotlin.TypeReader this$0>;

        staticinvoke <androidx.room.compiler.processing.javac.kotlin.TypeReader: void access$setExtendsBound$p(androidx.room.compiler.processing.javac.kotlin.TypeReader,androidx.room.compiler.processing.javac.kotlin.KmType)>($r2, r1);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1 r0;
        java.lang.Object r1;
        androidx.room.compiler.processing.javac.kotlin.KmType $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.room.compiler.processing.javac.kotlin.KmType) r1;

        virtualinvoke r0.<androidx.room.compiler.processing.javac.kotlin.TypeReader$visitFlexibleTypeUpperBound$1: void invoke(androidx.room.compiler.processing.javac.kotlin.KmType)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

