androidx.credentials.playservices.CredentialProviderPlayServicesImpl
<androidx.credentials.playservices.CredentialProviderPlayServicesImpl: androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion Companion>
<androidx.credentials.playservices.CredentialProviderPlayServicesImpl: android.content.Context context>
<androidx.credentials.playservices.CredentialProviderPlayServicesImpl: com.google.android.gms.common.GoogleApiAvailability googleApiAvailability>
<androidx.credentials.playservices.CredentialProviderPlayServicesImpl: java.lang.String TAG>
    public void <init>(android.content.Context)
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl r0;
        android.content.Context r1;
        com.google.android.gms.common.GoogleApiAvailability $r2;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl;

        r1 := @parameter0: android.content.Context;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "context");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl: android.content.Context context> = r1;

        $r2 = staticinvoke <com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.common.GoogleApiAvailability getInstance()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r2, "getInstance()");

        r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl: com.google.android.gms.common.GoogleApiAvailability googleApiAvailability> = $r2;

        return;
    }

    public final com.google.android.gms.common.GoogleApiAvailability getGoogleApiAvailability()
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl r0;
        com.google.android.gms.common.GoogleApiAvailability $r1;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl;

        $r1 = r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl: com.google.android.gms.common.GoogleApiAvailability googleApiAvailability>;

        return $r1;
    }

    public final void setGoogleApiAvailability(com.google.android.gms.common.GoogleApiAvailability)
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl r0;
        com.google.android.gms.common.GoogleApiAvailability r1;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl;

        r1 := @parameter0: com.google.android.gms.common.GoogleApiAvailability;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl: com.google.android.gms.common.GoogleApiAvailability googleApiAvailability> = r1;

        return;
    }

    public static void getGoogleApiAvailability$annotations()
    {
        return;
    }

    public void onGetCredential(androidx.credentials.GetCredentialRequest, android.app.Activity, android.os.CancellationSignal, java.util.concurrent.Executor, androidx.credentials.CredentialManagerCallback)
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl r0;
        androidx.credentials.GetCredentialRequest r1;
        android.app.Activity r2;
        android.os.CancellationSignal r3;
        java.util.concurrent.Executor r4;
        androidx.credentials.CredentialManagerCallback r5;
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion $r6;
        boolean $z0;
        androidx.credentials.playservices.controllers.BeginSignIn.CredentialProviderBeginSignInController $r7;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl;

        r1 := @parameter0: androidx.credentials.GetCredentialRequest;

        r2 := @parameter1: android.app.Activity;

        r3 := @parameter2: android.os.CancellationSignal;

        r4 := @parameter3: java.util.concurrent.Executor;

        r5 := @parameter4: androidx.credentials.CredentialManagerCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "callback");

        $r6 = <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion Companion>;

        $z0 = virtualinvoke $r6.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion: boolean cancellationReviewer$credentials_play_services_auth_release(android.os.CancellationSignal)>(r3);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r7 = new androidx.credentials.playservices.controllers.BeginSignIn.CredentialProviderBeginSignInController;

        specialinvoke $r7.<androidx.credentials.playservices.controllers.BeginSignIn.CredentialProviderBeginSignInController: void <init>(android.app.Activity)>(r2);

        virtualinvoke $r7.<androidx.credentials.playservices.controllers.BeginSignIn.CredentialProviderBeginSignInController: void invokePlayServices(androidx.credentials.GetCredentialRequest,androidx.credentials.CredentialManagerCallback,java.util.concurrent.Executor,android.os.CancellationSignal)>(r1, r5, r4, r3);

        return;
    }

    public void onCreateCredential(androidx.credentials.CreateCredentialRequest, android.app.Activity, android.os.CancellationSignal, java.util.concurrent.Executor, androidx.credentials.CredentialManagerCallback)
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl r0;
        androidx.credentials.CreateCredentialRequest r1, r6;
        android.app.Activity r2;
        android.os.CancellationSignal r3;
        java.util.concurrent.Executor r4;
        androidx.credentials.CredentialManagerCallback r5;
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion $r7;
        boolean $z0, $z1, $z2;
        java.lang.UnsupportedOperationException $r8;
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.CredentialProviderCreatePublicKeyCredentialController$Companion $r9;
        androidx.credentials.playservices.controllers.CreatePublicKeyCredential.CredentialProviderCreatePublicKeyCredentialController $r10;
        androidx.credentials.CreatePublicKeyCredentialRequest $r11;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion $r12;
        androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController $r13;
        androidx.credentials.CreatePasswordRequest $r14;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl;

        r1 := @parameter0: androidx.credentials.CreateCredentialRequest;

        r2 := @parameter1: android.app.Activity;

        r3 := @parameter2: android.os.CancellationSignal;

        r4 := @parameter3: java.util.concurrent.Executor;

        r5 := @parameter4: androidx.credentials.CredentialManagerCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "activity");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r5, "callback");

        $r7 = <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion Companion>;

        $z0 = virtualinvoke $r7.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion: boolean cancellationReviewer$credentials_play_services_auth_release(android.os.CancellationSignal)>(r3);

        if $z0 == 0 goto label1;

        return;

     label1:
        r6 = r1;

        $z1 = r6 instanceof androidx.credentials.CreatePasswordRequest;

        if $z1 == 0 goto label2;

        $r12 = <androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion Companion>;

        $r13 = virtualinvoke $r12.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController$Companion: androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController getInstance(android.app.Activity)>(r2);

        $r14 = (androidx.credentials.CreatePasswordRequest) r1;

        virtualinvoke $r13.<androidx.credentials.playservices.controllers.CreatePassword.CredentialProviderCreatePasswordController: void invokePlayServices(androidx.credentials.CreatePasswordRequest,androidx.credentials.CredentialManagerCallback,java.util.concurrent.Executor,android.os.CancellationSignal)>($r14, r5, r4, r3);

        goto label4;

     label2:
        $z2 = r6 instanceof androidx.credentials.CreatePublicKeyCredentialRequest;

        if $z2 == 0 goto label3;

        $r9 = <androidx.credentials.playservices.controllers.CreatePublicKeyCredential.CredentialProviderCreatePublicKeyCredentialController: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.CredentialProviderCreatePublicKeyCredentialController$Companion Companion>;

        $r10 = virtualinvoke $r9.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.CredentialProviderCreatePublicKeyCredentialController$Companion: androidx.credentials.playservices.controllers.CreatePublicKeyCredential.CredentialProviderCreatePublicKeyCredentialController getInstance(android.app.Activity)>(r2);

        $r11 = (androidx.credentials.CreatePublicKeyCredentialRequest) r1;

        virtualinvoke $r10.<androidx.credentials.playservices.controllers.CreatePublicKeyCredential.CredentialProviderCreatePublicKeyCredentialController: void invokePlayServices(androidx.credentials.CreatePublicKeyCredentialRequest,androidx.credentials.CredentialManagerCallback,java.util.concurrent.Executor,android.os.CancellationSignal)>($r11, r5, r4, r3);

        goto label4;

     label3:
        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Create Credential request is unsupported, not password or publickeycredential");

        throw $r8;

     label4:
        return;
    }

    public boolean isAvailableOnDevice()
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl r0;
        int i0;
        android.content.Context $r1;
        boolean $z0;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl;

        $r1 = r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl: android.content.Context context>;

        i0 = specialinvoke r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl: int isGooglePlayServicesAvailable(android.content.Context)>($r1);

        if i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private final int isGooglePlayServicesAvailable(android.content.Context)
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl r0;
        android.content.Context r1;
        com.google.android.gms.common.GoogleApiAvailability $r2;
        int $i0;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl: com.google.android.gms.common.GoogleApiAvailability googleApiAvailability>;

        $i0 = virtualinvoke $r2.<com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>(r1);

        return $i0;
    }

    public void onClearCredential(androidx.credentials.ClearCredentialStateRequest, android.os.CancellationSignal, java.util.concurrent.Executor, androidx.credentials.CredentialManagerCallback)
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl r0;
        androidx.credentials.ClearCredentialStateRequest r1;
        android.os.CancellationSignal r2;
        java.util.concurrent.Executor r3;
        androidx.credentials.CredentialManagerCallback r4;
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion $r5;
        boolean $z0;
        android.content.Context $r6;
        com.google.android.gms.auth.api.identity.SignInClient $r7;
        com.google.android.gms.tasks.Task $r8, $r12;
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1 $r9;
        kotlin.jvm.functions.Function1 $r10;
        com.google.android.gms.tasks.OnSuccessListener $r11;
        com.google.android.gms.tasks.OnFailureListener $r13;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl;

        r1 := @parameter0: androidx.credentials.ClearCredentialStateRequest;

        r2 := @parameter1: android.os.CancellationSignal;

        r3 := @parameter2: java.util.concurrent.Executor;

        r4 := @parameter3: androidx.credentials.CredentialManagerCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "request");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "callback");

        $r5 = <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion Companion>;

        $z0 = virtualinvoke $r5.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion: boolean cancellationReviewer$credentials_play_services_auth_release(android.os.CancellationSignal)>(r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r6 = r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl: android.content.Context context>;

        $r7 = staticinvoke <com.google.android.gms.auth.api.identity.Identity: com.google.android.gms.auth.api.identity.SignInClient getSignInClient(android.content.Context)>($r6);

        $r8 = interfaceinvoke $r7.<com.google.android.gms.auth.api.identity.SignInClient: com.google.android.gms.tasks.Task signOut()>();

        $r9 = new androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1;

        specialinvoke $r9.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1: void <init>(android.os.CancellationSignal,java.util.concurrent.Executor,androidx.credentials.CredentialManagerCallback)>(r2, r3, r4);

        $r10 = (kotlin.jvm.functions.Function1) $r9;

        $r11 = dynamicinvoke "onSuccess" <com.google.android.gms.tasks.OnSuccessListener (kotlin.jvm.functions.Function1)>($r10) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Object), methodhandle: "REF_INVOKE_STATIC" <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: void onClearCredential$lambda$0(kotlin.jvm.functions.Function1,java.lang.Object)>, methodtype: void __METHODTYPE__(java.lang.Object));

        $r12 = virtualinvoke $r8.<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnSuccessListener(com.google.android.gms.tasks.OnSuccessListener)>($r11);

        $r13 = dynamicinvoke "onFailure" <com.google.android.gms.tasks.OnFailureListener (androidx.credentials.playservices.CredentialProviderPlayServicesImpl,android.os.CancellationSignal,java.util.concurrent.Executor,androidx.credentials.CredentialManagerCallback)>(r0, r2, r3, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(java.lang.Exception), methodhandle: "REF_INVOKE_STATIC" <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: void onClearCredential$lambda$4(androidx.credentials.playservices.CredentialProviderPlayServicesImpl,android.os.CancellationSignal,java.util.concurrent.Executor,androidx.credentials.CredentialManagerCallback,java.lang.Exception)>, methodtype: void __METHODTYPE__(java.lang.Exception));

        virtualinvoke $r12.<com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnFailureListener(com.google.android.gms.tasks.OnFailureListener)>($r13);

        return;
    }

    private static final void onClearCredential$lambda$0(kotlin.jvm.functions.Function1, java.lang.Object)
    {
        kotlin.jvm.functions.Function1 $r0;
        java.lang.Object r1;

        $r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$tmp0");

        interfaceinvoke $r0.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        return;
    }

    private static final void onClearCredential$lambda$4$lambda$3$lambda$2(androidx.credentials.CredentialManagerCallback, java.lang.Exception)
    {
        androidx.credentials.CredentialManagerCallback $r0;
        java.lang.Exception $r1;
        androidx.credentials.exceptions.ClearCredentialUnknownException $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4;

        $r0 := @parameter0: androidx.credentials.CredentialManagerCallback;

        $r1 := @parameter1: java.lang.Exception;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$callback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$e");

        $r2 = new androidx.credentials.exceptions.ClearCredentialUnknownException;

        $r3 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        $r4 = (java.lang.CharSequence) $r3;

        specialinvoke $r2.<androidx.credentials.exceptions.ClearCredentialUnknownException: void <init>(java.lang.CharSequence)>($r4);

        interfaceinvoke $r0.<androidx.credentials.CredentialManagerCallback: void onError(java.lang.Object)>($r2);

        return;
    }

    private static final void onClearCredential$lambda$4(androidx.credentials.playservices.CredentialProviderPlayServicesImpl, android.os.CancellationSignal, java.util.concurrent.Executor, androidx.credentials.CredentialManagerCallback, java.lang.Exception)
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl r0;
        android.os.CancellationSignal $r1, r6;
        java.util.concurrent.Executor $r2;
        androidx.credentials.CredentialManagerCallback $r3;
        java.lang.Exception r4;
        java.lang.StringBuilder $r7, $r9, $r10;
        java.lang.String $r8, $r11;
        java.lang.Runnable $r12;
        boolean z2;

        r0 := @parameter0: androidx.credentials.playservices.CredentialProviderPlayServicesImpl;

        $r1 := @parameter1: android.os.CancellationSignal;

        $r2 := @parameter2: java.util.concurrent.Executor;

        $r3 := @parameter3: androidx.credentials.CredentialManagerCallback;

        r4 := @parameter4: java.lang.Exception;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "this$0");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "$executor");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "$callback");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r4, "e");

        z2 = 0;

        if $r1 == null goto label1;

        r6 = $r1;

        z2 = virtualinvoke $r1.<android.os.CancellationSignal: boolean isCanceled()>();

        goto label1;

     label1:
        if z2 != 0 goto label2;

        $r8 = <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("During clear credential sign out failed with ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r8, $r11);

        $r12 = dynamicinvoke "run" <java.lang.Runnable (androidx.credentials.CredentialManagerCallback,java.lang.Exception)>($r3, r4) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: void onClearCredential$lambda$4$lambda$3$lambda$2(androidx.credentials.CredentialManagerCallback,java.lang.Exception)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r12);

     label2:
        return;
    }

    public static final java.lang.String access$getTAG$cp()
    {
        java.lang.String $r0;

        $r0 = <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: java.lang.String TAG>;

        return $r0;
    }

    static void <clinit>()
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion $r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        $r0 = new androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion;

        specialinvoke $r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion Companion> = $r0;

        $r1 = class "Landroidx/credentials/playservices/CredentialProviderPlayServicesImpl;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: java.lang.String TAG> = $r2;

        return;
    }

androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion
    private void <init>()
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion r0;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final boolean cancellationReviewer$credentials_play_services_auth_release(android.os.CancellationSignal)
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion r0;
        android.os.CancellationSignal r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion;

        r1 := @parameter0: android.os.CancellationSignal;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.os.CancellationSignal: boolean isCanceled()>();

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: java.lang.String access$getTAG$cp()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, "the flow has been canceled");

        return 1;

     label1:
        $r2 = staticinvoke <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: java.lang.String access$getTAG$cp()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r2, "No cancellationSignal found");

     label2:
        return 0;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$Companion: void <init>()>();

        return;
    }

androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1
<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1: android.os.CancellationSignal $cancellationSignal>
<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1: java.util.concurrent.Executor $executor>
<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1: androidx.credentials.CredentialManagerCallback $callback>
    void <init>(android.os.CancellationSignal, java.util.concurrent.Executor, androidx.credentials.CredentialManagerCallback)
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1 r0;
        android.os.CancellationSignal $r1;
        java.util.concurrent.Executor $r2;
        androidx.credentials.CredentialManagerCallback $r3;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1;

        $r1 := @parameter0: android.os.CancellationSignal;

        $r2 := @parameter1: java.util.concurrent.Executor;

        $r3 := @parameter2: androidx.credentials.CredentialManagerCallback;

        r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1: android.os.CancellationSignal $cancellationSignal> = $r1;

        r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1: java.util.concurrent.Executor $executor> = $r2;

        r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1: androidx.credentials.CredentialManagerCallback $callback> = $r3;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(java.lang.Void)
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1 r0;
        java.lang.Void r1;
        android.os.CancellationSignal r2, r3, r4, $r5;
        java.lang.String $r6;
        androidx.credentials.CredentialManagerCallback $r7;
        java.util.concurrent.Executor $r8;
        java.lang.Runnable $r9;
        boolean z1;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1;

        r1 := @parameter0: java.lang.Void;

        z1 = 0;

        $r5 = r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1: android.os.CancellationSignal $cancellationSignal>;

        if $r5 == null goto label1;

        r2 = $r5;

        r3 = r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1: android.os.CancellationSignal $cancellationSignal>;

        r4 = r2;

        z1 = virtualinvoke r3.<android.os.CancellationSignal: boolean isCanceled()>();

        goto label1;

     label1:
        if z1 != 0 goto label2;

        $r6 = staticinvoke <androidx.credentials.playservices.CredentialProviderPlayServicesImpl: java.lang.String access$getTAG$cp()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r6, "During clear credential, signed out successfully!");

        $r8 = r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1: java.util.concurrent.Executor $executor>;

        $r7 = r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1: androidx.credentials.CredentialManagerCallback $callback>;

        $r9 = dynamicinvoke "run" <java.lang.Runnable (androidx.credentials.CredentialManagerCallback)>($r7) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(), methodhandle: "REF_INVOKE_STATIC" <androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1: void invoke$lambda$1(androidx.credentials.CredentialManagerCallback)>, methodtype: void __METHODTYPE__());

        interfaceinvoke $r8.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r9);

     label2:
        return;
    }

    private static final void invoke$lambda$1(androidx.credentials.CredentialManagerCallback)
    {
        androidx.credentials.CredentialManagerCallback $r0;

        $r0 := @parameter0: androidx.credentials.CredentialManagerCallback;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$callback");

        interfaceinvoke $r0.<androidx.credentials.CredentialManagerCallback: void onResult(java.lang.Object)>(null);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1 r0;
        java.lang.Object r1;
        java.lang.Void $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) r1;

        virtualinvoke r0.<androidx.credentials.playservices.CredentialProviderPlayServicesImpl$onClearCredential$1: void invoke(java.lang.Void)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

