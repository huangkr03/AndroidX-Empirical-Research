androidx.compose.runtime.snapshots.SnapshotKt
<androidx.compose.runtime.snapshots.SnapshotKt: kotlin.jvm.functions.Function1 emptyLambda>
<androidx.compose.runtime.snapshots.SnapshotKt: int INVALID_SNAPSHOT>
<androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.SnapshotThreadLocal threadSnapshot>
<androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object lock>
<androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotIdSet openSnapshots>
<androidx.compose.runtime.snapshots.SnapshotKt: int nextSnapshotId>
<androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap pinningTable>
<androidx.compose.runtime.snapshots.SnapshotKt: java.util.List applyObservers>
<androidx.compose.runtime.snapshots.SnapshotKt: java.util.List globalWriteObservers>
<androidx.compose.runtime.snapshots.SnapshotKt: java.util.concurrent.atomic.AtomicReference currentGlobalSnapshot>
<androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot snapshotInitializer>
    public static final int trackPinning(int, androidx.compose.runtime.snapshots.SnapshotIdSet)
    {
        int i0, i1, $i2;
        androidx.compose.runtime.snapshots.SnapshotIdSet r0;
        java.lang.Object r1, r2;
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap $r3;
        java.lang.Throwable $r4;

        i0 := @parameter0: int;

        r0 := @parameter1: androidx.compose.runtime.snapshots.SnapshotIdSet;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "invalid");

        i1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotIdSet: int lowest(int)>(i0);

        r1 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r2 = r1;

        entermonitor r2;

     label1:
        $r3 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap pinningTable>;

        $i2 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int add(int)>(i1);

     label2:
        exitmonitor r2;

        goto label5;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r2;

        throw $r4;

     label5:
        return $i2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final void releasePinningLocked(int)
    {
        int i0;
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap $r0;

        i0 := @parameter0: int;

        $r0 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap pinningTable>;

        virtualinvoke $r0.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: void remove(int)>(i0);

        return;
    }

    public static final androidx.compose.runtime.snapshots.Snapshot currentSnapshot()
    {
        androidx.compose.runtime.SnapshotThreadLocal $r0;
        java.lang.Object $r1, $r3;
        java.util.concurrent.atomic.AtomicReference $r2;
        androidx.compose.runtime.snapshots.Snapshot $r4;

        $r0 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.SnapshotThreadLocal threadSnapshot>;

        $r1 = virtualinvoke $r0.<androidx.compose.runtime.SnapshotThreadLocal: java.lang.Object get()>();

        $r4 = (androidx.compose.runtime.snapshots.Snapshot) $r1;

        if $r4 != null goto label1;

        $r2 = <androidx.compose.runtime.snapshots.SnapshotKt: java.util.concurrent.atomic.AtomicReference currentGlobalSnapshot>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r3, "currentGlobalSnapshot.get()");

        $r4 = (androidx.compose.runtime.snapshots.Snapshot) $r3;

     label1:
        return $r4;
    }

    private static final androidx.compose.runtime.snapshots.Snapshot createTransparentSnapshotWithNoParentReadObserver(androidx.compose.runtime.snapshots.Snapshot, kotlin.jvm.functions.Function1, boolean)
    {
        androidx.compose.runtime.snapshots.Snapshot r0, $r5;
        kotlin.jvm.functions.Function1 r1;
        boolean z0, $z1, $z2;
        androidx.compose.runtime.snapshots.TransparentObserverMutableSnapshot $r2;
        androidx.compose.runtime.snapshots.TransparentObserverSnapshot $r3;
        androidx.compose.runtime.snapshots.MutableSnapshot $r4;

        r0 := @parameter0: androidx.compose.runtime.snapshots.Snapshot;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        z0 := @parameter2: boolean;

        $z1 = r0 instanceof androidx.compose.runtime.snapshots.MutableSnapshot;

        if $z1 != 0 goto label1;

        if r0 != null goto label4;

     label1:
        $r2 = new androidx.compose.runtime.snapshots.TransparentObserverMutableSnapshot;

        $z2 = r0 instanceof androidx.compose.runtime.snapshots.MutableSnapshot;

        if $z2 == 0 goto label2;

        $r4 = (androidx.compose.runtime.snapshots.MutableSnapshot) r0;

        goto label3;

     label2:
        $r4 = null;

     label3:
        specialinvoke $r2.<androidx.compose.runtime.snapshots.TransparentObserverMutableSnapshot: void <init>(androidx.compose.runtime.snapshots.MutableSnapshot,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,boolean,boolean)>($r4, r1, null, 0, z0);

        $r5 = (androidx.compose.runtime.snapshots.Snapshot) $r2;

        goto label5;

     label4:
        $r3 = new androidx.compose.runtime.snapshots.TransparentObserverSnapshot;

        specialinvoke $r3.<androidx.compose.runtime.snapshots.TransparentObserverSnapshot: void <init>(androidx.compose.runtime.snapshots.Snapshot,kotlin.jvm.functions.Function1,boolean,boolean)>(r0, r1, 0, z0);

        $r5 = (androidx.compose.runtime.snapshots.Snapshot) $r3;

     label5:
        return $r5;
    }

    static androidx.compose.runtime.snapshots.Snapshot createTransparentSnapshotWithNoParentReadObserver$default(androidx.compose.runtime.snapshots.Snapshot, kotlin.jvm.functions.Function1, boolean, int, java.lang.Object)
    {
        androidx.compose.runtime.snapshots.Snapshot r0, $r2;
        int i0, $i1, $i2;
        java.lang.Object r1;
        kotlin.jvm.functions.Function1 r3;
        boolean z0;

        r0 := @parameter0: androidx.compose.runtime.snapshots.Snapshot;

        r3 := @parameter1: kotlin.jvm.functions.Function1;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = null;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        z0 = 0;

     label2:
        $r2 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot createTransparentSnapshotWithNoParentReadObserver(androidx.compose.runtime.snapshots.Snapshot,kotlin.jvm.functions.Function1,boolean)>(r0, r3, z0);

        return $r2;
    }

    private static final kotlin.jvm.functions.Function1 mergedReadObserver(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, boolean)
    {
        kotlin.jvm.functions.Function1 r0, r1, r2, $r4, $r5;
        boolean z0, $z1;
        androidx.compose.runtime.snapshots.SnapshotKt$mergedReadObserver$1 $r3;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $r4 = r1;

        goto label2;

     label1:
        $r4 = null;

     label2:
        r2 = $r4;

        if r0 == null goto label3;

        if r2 == null goto label3;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r0, r2);

        if $z1 != 0 goto label3;

        $r3 = new androidx.compose.runtime.snapshots.SnapshotKt$mergedReadObserver$1;

        specialinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotKt$mergedReadObserver$1: void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>(r0, r2);

        $r5 = (kotlin.jvm.functions.Function1) $r3;

        goto label4;

     label3:
        $r5 = r0;

        if r0 != null goto label4;

        $r5 = r2;

     label4:
        return $r5;
    }

    static kotlin.jvm.functions.Function1 mergedReadObserver$default(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, boolean, int, java.lang.Object)
    {
        kotlin.jvm.functions.Function1 r0, r1, $r3;
        int i0, $i1;
        java.lang.Object r2;
        boolean z0;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r2 := @parameter4: java.lang.Object;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        z0 = 1;

     label1:
        $r3 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: kotlin.jvm.functions.Function1 mergedReadObserver(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,boolean)>(r0, r1, z0);

        return $r3;
    }

    private static final kotlin.jvm.functions.Function1 mergedWriteObserver(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 r0, r1, $r3;
        boolean $z0;
        androidx.compose.runtime.snapshots.SnapshotKt$mergedWriteObserver$1 $r2;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        if r0 == null goto label1;

        if r1 == null goto label1;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r0, r1);

        if $z0 != 0 goto label1;

        $r2 = new androidx.compose.runtime.snapshots.SnapshotKt$mergedWriteObserver$1;

        specialinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotKt$mergedWriteObserver$1: void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>(r0, r1);

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        goto label2;

     label1:
        $r3 = r0;

        if r0 != null goto label2;

        $r3 = r1;

     label2:
        return $r3;
    }

    public static final java.lang.Object getLock()
    {
        java.lang.Object $r0;

        $r0 = <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object lock>;

        return $r0;
    }

    public static void getLock$annotations()
    {
        return;
    }

    public static final java.lang.Object sync(kotlin.jvm.functions.Function0)
    {
        kotlin.jvm.functions.Function0 r0;
        java.lang.Object r1, r2, r4;
        java.lang.Throwable $r3, r5;

        r0 := @parameter0: kotlin.jvm.functions.Function0;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "block");

        r1 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r2 = r1;

        entermonitor r2;

     label1:
        r4 = interfaceinvoke r0.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r2;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label5;

     label3:
        $r3 := @caughtexception;

        r5 = $r3;

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r2;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r5;

     label5:
        return r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()
    {
        androidx.compose.runtime.snapshots.Snapshot $r0;

        $r0 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot snapshotInitializer>;

        return $r0;
    }

    public static void getSnapshotInitializer$annotations()
    {
        return;
    }

    private static final java.lang.Object takeNewGlobalSnapshot(androidx.compose.runtime.snapshots.Snapshot, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.Snapshot r0;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object r2, r3, r4;
        int i0, i1, $i2, $i3, $i4;
        androidx.compose.runtime.snapshots.SnapshotIdSet $r5, $r6, $r7, $r8, $r10, $r12, $r13;
        androidx.compose.runtime.snapshots.GlobalSnapshot $r9;
        java.util.concurrent.atomic.AtomicReference $r11;
        java.lang.Throwable $r14;
        kotlin.Unit $r15;

        r0 := @parameter0: androidx.compose.runtime.snapshots.Snapshot;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r5 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotIdSet openSnapshots>;

        $i2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.Snapshot: int getId()>();

        $r6 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.SnapshotIdSet: androidx.compose.runtime.snapshots.SnapshotIdSet clear(int)>($i2);

        r2 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

        r3 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r4 = r3;

        entermonitor r4;

     label1:
        i0 = <androidx.compose.runtime.snapshots.SnapshotKt: int nextSnapshotId>;

        $i3 = i0 + 1;

        <androidx.compose.runtime.snapshots.SnapshotKt: int nextSnapshotId> = $i3;

        i1 = i0;

        $r7 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotIdSet openSnapshots>;

        $i4 = virtualinvoke r0.<androidx.compose.runtime.snapshots.Snapshot: int getId()>();

        $r8 = virtualinvoke $r7.<androidx.compose.runtime.snapshots.SnapshotIdSet: androidx.compose.runtime.snapshots.SnapshotIdSet clear(int)>($i4);

        <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotIdSet openSnapshots> = $r8;

        $r11 = <androidx.compose.runtime.snapshots.SnapshotKt: java.util.concurrent.atomic.AtomicReference currentGlobalSnapshot>;

        $r9 = new androidx.compose.runtime.snapshots.GlobalSnapshot;

        $r10 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotIdSet openSnapshots>;

        specialinvoke $r9.<androidx.compose.runtime.snapshots.GlobalSnapshot: void <init>(int,androidx.compose.runtime.snapshots.SnapshotIdSet)>(i1, $r10);

        virtualinvoke $r11.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r9);

        virtualinvoke r0.<androidx.compose.runtime.snapshots.Snapshot: void dispose()>();

        $r12 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotIdSet openSnapshots>;

        $r13 = virtualinvoke $r12.<androidx.compose.runtime.snapshots.SnapshotIdSet: androidx.compose.runtime.snapshots.SnapshotIdSet set(int)>(i1);

        <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotIdSet openSnapshots> = $r13;

        $r15 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label2:
        exitmonitor r4;

        goto label5;

     label3:
        $r14 := @caughtexception;

     label4:
        exitmonitor r4;

        throw $r14;

     label5:
        return r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static final java.lang.Object advanceGlobalSnapshot(kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 r0;
        java.lang.Object r1, $r5, r13, r14, r15, r16, r19, r20, $r25;
        kotlin.jvm.functions.Function2 r2;
        androidx.compose.runtime.snapshots.Snapshot $r3, $r6;
        java.util.concurrent.atomic.AtomicReference $r4;
        androidx.compose.runtime.snapshots.GlobalSnapshot $r7, r12;
        java.util.List $r8, $r21, r23;
        java.util.Collection $r9;
        java.lang.Throwable $r10, $r11, r17;
        java.util.Set $r18;
        int $i0, i1;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r3 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot snapshotInitializer>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r3, "null cannot be cast to non-null type androidx.compose.runtime.snapshots.GlobalSnapshot");

        r12 = (androidx.compose.runtime.snapshots.GlobalSnapshot) $r3;

        r13 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r14 = r13;

        entermonitor r14;

     label01:
        $r4 = <androidx.compose.runtime.snapshots.SnapshotKt: java.util.concurrent.atomic.AtomicReference currentGlobalSnapshot>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r5, "currentGlobalSnapshot.get()");

        r15 = $r5;

        $r6 = (androidx.compose.runtime.snapshots.Snapshot) r15;

        r16 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object takeNewGlobalSnapshot(androidx.compose.runtime.snapshots.Snapshot,kotlin.jvm.functions.Function1)>($r6, r0);

     label02:
        exitmonitor r14;

        goto label05;

     label03:
        $r10 := @caughtexception;

        r17 = $r10;

     label04:
        exitmonitor r14;

        throw r17;

     label05:
        r1 = r16;

        $r7 = (androidx.compose.runtime.snapshots.GlobalSnapshot) r15;

        $r18 = virtualinvoke $r7.<androidx.compose.runtime.snapshots.GlobalSnapshot: java.util.Set getModified$runtime_release()>();

        if $r18 == null goto label12;

        r19 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r20 = r19;

        entermonitor r20;

     label06:
        $r8 = <androidx.compose.runtime.snapshots.SnapshotKt: java.util.List applyObservers>;

        $r9 = (java.util.Collection) $r8;

        $r21 = staticinvoke <kotlin.collections.CollectionsKt: java.util.List toMutableList(java.util.Collection)>($r9);

     label07:
        exitmonitor r20;

        goto label10;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor r20;

        throw $r11;

     label10:
        r23 = $r21;

        $i0 = 0;

        i1 = interfaceinvoke r23.<java.util.List: int size()>();

     label11:
        if $i0 >= i1 goto label12;

        $r25 = interfaceinvoke r23.<java.util.List: java.lang.Object get(int)>($i0);

        r2 = (kotlin.jvm.functions.Function2) $r25;

        interfaceinvoke r2.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($r18, r15);

        $i0 = $i0 + 1;

        goto label11;

     label12:
        return r1;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private static final void advanceGlobalSnapshot()
    {
        androidx.compose.runtime.snapshots.SnapshotKt$advanceGlobalSnapshot$2 $r0;
        kotlin.jvm.functions.Function1 $r1;

        $r0 = <androidx.compose.runtime.snapshots.SnapshotKt$advanceGlobalSnapshot$2: androidx.compose.runtime.snapshots.SnapshotKt$advanceGlobalSnapshot$2 INSTANCE>;

        $r1 = (kotlin.jvm.functions.Function1) $r0;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object advanceGlobalSnapshot(kotlin.jvm.functions.Function1)>($r1);

        return;
    }

    private static final androidx.compose.runtime.snapshots.Snapshot takeNewSnapshot(kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 r0, $r2;
        androidx.compose.runtime.snapshots.SnapshotKt$takeNewSnapshot$1 $r1;
        java.lang.Object $r3;
        androidx.compose.runtime.snapshots.Snapshot $r4;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 = new androidx.compose.runtime.snapshots.SnapshotKt$takeNewSnapshot$1;

        specialinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotKt$takeNewSnapshot$1: void <init>(kotlin.jvm.functions.Function1)>(r0);

        $r2 = (kotlin.jvm.functions.Function1) $r1;

        $r3 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object advanceGlobalSnapshot(kotlin.jvm.functions.Function1)>($r2);

        $r4 = (androidx.compose.runtime.snapshots.Snapshot) $r3;

        return $r4;
    }

    private static final void validateOpen(androidx.compose.runtime.snapshots.Snapshot)
    {
        androidx.compose.runtime.snapshots.Snapshot r0;
        androidx.compose.runtime.snapshots.SnapshotIdSet $r1;
        int $i0;
        boolean $z0;
        java.lang.String $r3, $r4;
        java.lang.IllegalStateException r5;
        java.lang.Throwable r6;

        r0 := @parameter0: androidx.compose.runtime.snapshots.Snapshot;

        $r1 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotIdSet openSnapshots>;

        $i0 = virtualinvoke r0.<androidx.compose.runtime.snapshots.Snapshot: int getId()>();

        $z0 = virtualinvoke $r1.<androidx.compose.runtime.snapshots.SnapshotIdSet: boolean get(int)>($i0);

        if $z0 != 0 goto label1;

        r5 = new java.lang.IllegalStateException;

        $r3 = "Snapshot is not open";

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        r6 = (java.lang.Throwable) r5;

        throw r6;

     label1:
        return;
    }

    private static final boolean valid(int, int, androidx.compose.runtime.snapshots.SnapshotIdSet)
    {
        int i0, i1;
        androidx.compose.runtime.snapshots.SnapshotIdSet r0;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: androidx.compose.runtime.snapshots.SnapshotIdSet;

        if i1 == 0 goto label1;

        if i1 > i0 goto label1;

        $z0 = virtualinvoke r0.<androidx.compose.runtime.snapshots.SnapshotIdSet: boolean get(int)>(i1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static final boolean valid(androidx.compose.runtime.snapshots.StateRecord, int, androidx.compose.runtime.snapshots.SnapshotIdSet)
    {
        androidx.compose.runtime.snapshots.StateRecord r0;
        int i0, $i1;
        androidx.compose.runtime.snapshots.SnapshotIdSet r1;
        boolean $z0;

        r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.compose.runtime.snapshots.SnapshotIdSet;

        $i1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.StateRecord: int getSnapshotId$runtime_release()>();

        $z0 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: boolean valid(int,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>(i0, $i1, r1);

        return $z0;
    }

    private static final androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord, int, androidx.compose.runtime.snapshots.SnapshotIdSet)
    {
        androidx.compose.runtime.snapshots.StateRecord r0, r2, r3, $r4;
        int i0, $i1, $i2;
        androidx.compose.runtime.snapshots.SnapshotIdSet r1;
        boolean $z0;

        r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.compose.runtime.snapshots.SnapshotIdSet;

        r2 = r0;

        r3 = null;

     label1:
        if r2 == null goto label6;

        $z0 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: boolean valid(androidx.compose.runtime.snapshots.StateRecord,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>(r2, i0, r1);

        if $z0 == 0 goto label5;

        if r3 != null goto label2;

        $r4 = r2;

        goto label4;

     label2:
        $i1 = virtualinvoke r3.<androidx.compose.runtime.snapshots.StateRecord: int getSnapshotId$runtime_release()>();

        $i2 = virtualinvoke r2.<androidx.compose.runtime.snapshots.StateRecord: int getSnapshotId$runtime_release()>();

        if $i1 >= $i2 goto label3;

        $r4 = r2;

        goto label4;

     label3:
        $r4 = r3;

     label4:
        r3 = $r4;

     label5:
        r2 = virtualinvoke r2.<androidx.compose.runtime.snapshots.StateRecord: androidx.compose.runtime.snapshots.StateRecord getNext$runtime_release()>();

        goto label1;

     label6:
        if r3 == null goto label7;

        return r3;

     label7:
        return null;
    }

    public static final androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord, androidx.compose.runtime.snapshots.StateObject)
    {
        androidx.compose.runtime.snapshots.StateRecord $r0, $r15, $r16;
        androidx.compose.runtime.snapshots.StateObject r1;
        androidx.compose.runtime.snapshots.Snapshot r2, r5;
        java.lang.Object r3, r4;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r6, $r9;
        kotlin.jvm.functions.Function1 $r7;
        int $i0, $i1;
        androidx.compose.runtime.snapshots.SnapshotIdSet $r8, $r10;
        kotlin.KotlinNothingValueException $r12;
        java.lang.Throwable $r14;

        $r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        r1 := @parameter1: androidx.compose.runtime.snapshots.StateObject;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        $r6 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r2 = virtualinvoke $r6.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r7 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: kotlin.jvm.functions.Function1 getReadObserver$runtime_release()>();

        if $r7 == null goto label1;

        interfaceinvoke $r7.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        goto label1;

     label1:
        $i0 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: int getId()>();

        $r8 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.SnapshotIdSet getInvalid$runtime_release()>();

        $r15 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>($r0, $i0, $r8);

        if $r15 != null goto label7;

        r3 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r4 = r3;

        entermonitor r4;

     label2:
        $r9 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r5 = virtualinvoke $r9.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $i1 = virtualinvoke r5.<androidx.compose.runtime.snapshots.Snapshot: int getId()>();

        $r10 = virtualinvoke r5.<androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.SnapshotIdSet getInvalid$runtime_release()>();

        $r16 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>($r0, $i1, $r10);

     label3:
        exitmonitor r4;

        $r15 = $r16;

        goto label6;

     label4:
        $r14 := @caughtexception;

     label5:
        exitmonitor r4;

        throw $r14;

     label6:
        if $r16 != null goto label7;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Void readError()>();

        $r12 = new kotlin.KotlinNothingValueException;

        specialinvoke $r12.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r12;

     label7:
        return $r15;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static final androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord, androidx.compose.runtime.snapshots.StateObject, androidx.compose.runtime.snapshots.Snapshot)
    {
        androidx.compose.runtime.snapshots.StateRecord $r0, $r5;
        androidx.compose.runtime.snapshots.StateObject r1;
        androidx.compose.runtime.snapshots.Snapshot r2;
        kotlin.jvm.functions.Function1 $r3;
        int $i0;
        androidx.compose.runtime.snapshots.SnapshotIdSet $r4;
        kotlin.KotlinNothingValueException $r7;

        $r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        r1 := @parameter1: androidx.compose.runtime.snapshots.StateObject;

        r2 := @parameter2: androidx.compose.runtime.snapshots.Snapshot;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "snapshot");

        $r3 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: kotlin.jvm.functions.Function1 getReadObserver$runtime_release()>();

        if $r3 == null goto label1;

        interfaceinvoke $r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        goto label1;

     label1:
        $i0 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: int getId()>();

        $r4 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.SnapshotIdSet getInvalid$runtime_release()>();

        $r5 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>($r0, $i0, $r4);

        if $r5 != null goto label2;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Void readError()>();

        $r7 = new kotlin.KotlinNothingValueException;

        specialinvoke $r7.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r7;

     label2:
        return $r5;
    }

    private static final java.lang.Void readError()
    {
        java.lang.String $r1, $r2;
        java.lang.IllegalStateException r3;
        java.lang.Throwable r4;

        r3 = new java.lang.IllegalStateException;

        $r1 = "Reading a state that was created after the snapshot was taken or in a snapshot that has not yet been applied";

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        r4 = (java.lang.Throwable) r3;

        throw r4;
    }

    private static final androidx.compose.runtime.snapshots.StateRecord used(androidx.compose.runtime.snapshots.StateObject)
    {
        androidx.compose.runtime.snapshots.StateObject r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        androidx.compose.runtime.snapshots.SnapshotIdSet r1;
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap $r2;
        androidx.compose.runtime.snapshots.SnapshotIdSet$Companion $r3;
        boolean $z0;
        androidx.compose.runtime.snapshots.StateRecord r4, r5, $r6;

        r0 := @parameter0: androidx.compose.runtime.snapshots.StateObject;

        r4 = interfaceinvoke r0.<androidx.compose.runtime.snapshots.StateObject: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        r5 = null;

        $r2 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap pinningTable>;

        $i2 = <androidx.compose.runtime.snapshots.SnapshotKt: int nextSnapshotId>;

        $i3 = virtualinvoke $r2.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: int lowestOrDefault(int)>($i2);

        i0 = $i3 - 1;

        $r3 = <androidx.compose.runtime.snapshots.SnapshotIdSet: androidx.compose.runtime.snapshots.SnapshotIdSet$Companion Companion>;

        r1 = virtualinvoke $r3.<androidx.compose.runtime.snapshots.SnapshotIdSet$Companion: androidx.compose.runtime.snapshots.SnapshotIdSet getEMPTY()>();

     label1:
        if r4 == null goto label7;

        i1 = virtualinvoke r4.<androidx.compose.runtime.snapshots.StateRecord: int getSnapshotId$runtime_release()>();

        if i1 != 0 goto label2;

        return r4;

     label2:
        $z0 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: boolean valid(androidx.compose.runtime.snapshots.StateRecord,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>(r4, i0, r1);

        if $z0 == 0 goto label6;

        if r5 != null goto label3;

        r5 = r4;

        goto label6;

     label3:
        $i4 = virtualinvoke r4.<androidx.compose.runtime.snapshots.StateRecord: int getSnapshotId$runtime_release()>();

        $i5 = virtualinvoke r5.<androidx.compose.runtime.snapshots.StateRecord: int getSnapshotId$runtime_release()>();

        if $i4 >= $i5 goto label4;

        $r6 = r4;

        goto label5;

     label4:
        $r6 = r5;

     label5:
        return $r6;

     label6:
        r4 = virtualinvoke r4.<androidx.compose.runtime.snapshots.StateRecord: androidx.compose.runtime.snapshots.StateRecord getNext$runtime_release()>();

        goto label1;

     label7:
        return null;
    }

    public static final androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord, androidx.compose.runtime.snapshots.StateObject, androidx.compose.runtime.snapshots.Snapshot)
    {
        androidx.compose.runtime.snapshots.StateRecord $r0, r3, r4, $r6;
        androidx.compose.runtime.snapshots.StateObject r1;
        androidx.compose.runtime.snapshots.Snapshot r2;
        int i0, $i1, $i2;
        boolean $z0;
        androidx.compose.runtime.snapshots.SnapshotIdSet $r5;
        kotlin.KotlinNothingValueException $r8;

        $r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        r1 := @parameter1: androidx.compose.runtime.snapshots.StateObject;

        r2 := @parameter2: androidx.compose.runtime.snapshots.Snapshot;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "snapshot");

        $z0 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: boolean getReadOnly()>();

        if $z0 == 0 goto label1;

        virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: void recordModified$runtime_release(androidx.compose.runtime.snapshots.StateObject)>(r1);

     label1:
        i0 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: int getId()>();

        $r5 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.SnapshotIdSet getInvalid$runtime_release()>();

        $r6 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>($r0, i0, $r5);

        if $r6 != null goto label2;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Void readError()>();

        $r8 = new kotlin.KotlinNothingValueException;

        specialinvoke $r8.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r8;

     label2:
        r3 = $r6;

        $i1 = virtualinvoke r3.<androidx.compose.runtime.snapshots.StateRecord: int getSnapshotId$runtime_release()>();

        $i2 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: int getId()>();

        if $i1 != $i2 goto label3;

        return r3;

     label3:
        r4 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord newWritableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>(r3, r1, r2);

        virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: void recordModified$runtime_release(androidx.compose.runtime.snapshots.StateObject)>(r1);

        return r4;
    }

    public static final androidx.compose.runtime.snapshots.StateRecord overwritableRecord(androidx.compose.runtime.snapshots.StateRecord, androidx.compose.runtime.snapshots.StateObject, androidx.compose.runtime.snapshots.Snapshot, androidx.compose.runtime.snapshots.StateRecord)
    {
        androidx.compose.runtime.snapshots.StateRecord $r0, r3, r4;
        androidx.compose.runtime.snapshots.StateObject r1;
        androidx.compose.runtime.snapshots.Snapshot r2;
        int i0, $i1;
        boolean $z0;

        $r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        r1 := @parameter1: androidx.compose.runtime.snapshots.StateObject;

        r2 := @parameter2: androidx.compose.runtime.snapshots.Snapshot;

        r3 := @parameter3: androidx.compose.runtime.snapshots.StateRecord;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "snapshot");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "candidate");

        $z0 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: boolean getReadOnly()>();

        if $z0 == 0 goto label1;

        virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: void recordModified$runtime_release(androidx.compose.runtime.snapshots.StateObject)>(r1);

     label1:
        i0 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: int getId()>();

        $i1 = virtualinvoke r3.<androidx.compose.runtime.snapshots.StateRecord: int getSnapshotId$runtime_release()>();

        if $i1 != i0 goto label2;

        return r3;

     label2:
        r4 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord newOverwritableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject)>($r0, r1);

        virtualinvoke r4.<androidx.compose.runtime.snapshots.StateRecord: void setSnapshotId$runtime_release(int)>(i0);

        virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: void recordModified$runtime_release(androidx.compose.runtime.snapshots.StateObject)>(r1);

        return r4;
    }

    public static final androidx.compose.runtime.snapshots.StateRecord newWritableRecord(androidx.compose.runtime.snapshots.StateRecord, androidx.compose.runtime.snapshots.StateObject, androidx.compose.runtime.snapshots.Snapshot)
    {
        androidx.compose.runtime.snapshots.StateRecord $r0, r3;
        androidx.compose.runtime.snapshots.StateObject r1;
        androidx.compose.runtime.snapshots.Snapshot r2;
        int $i0;

        $r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        r1 := @parameter1: androidx.compose.runtime.snapshots.StateObject;

        r2 := @parameter2: androidx.compose.runtime.snapshots.Snapshot;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "snapshot");

        r3 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord newOverwritableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject)>($r0, r1);

        virtualinvoke r3.<androidx.compose.runtime.snapshots.StateRecord: void assign(androidx.compose.runtime.snapshots.StateRecord)>($r0);

        $i0 = virtualinvoke r2.<androidx.compose.runtime.snapshots.Snapshot: int getId()>();

        virtualinvoke r3.<androidx.compose.runtime.snapshots.StateRecord: void setSnapshotId$runtime_release(int)>($i0);

        return r3;
    }

    public static final androidx.compose.runtime.snapshots.StateRecord newOverwritableRecord(androidx.compose.runtime.snapshots.StateRecord, androidx.compose.runtime.snapshots.StateObject)
    {
        androidx.compose.runtime.snapshots.StateRecord $r0, r2, $r3, $r4, $r5, $r6;
        androidx.compose.runtime.snapshots.StateObject r1;

        $r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        r1 := @parameter1: androidx.compose.runtime.snapshots.StateObject;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        $r3 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord used(androidx.compose.runtime.snapshots.StateObject)>(r1);

        if $r3 == null goto label1;

        r2 = $r3;

        virtualinvoke r2.<androidx.compose.runtime.snapshots.StateRecord: void setSnapshotId$runtime_release(int)>(2147483647);

        $r5 = r2;

        goto label2;

     label1:
        $r6 = virtualinvoke $r0.<androidx.compose.runtime.snapshots.StateRecord: androidx.compose.runtime.snapshots.StateRecord create()>();

        virtualinvoke $r6.<androidx.compose.runtime.snapshots.StateRecord: void setSnapshotId$runtime_release(int)>(2147483647);

        $r4 = interfaceinvoke r1.<androidx.compose.runtime.snapshots.StateObject: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        virtualinvoke $r6.<androidx.compose.runtime.snapshots.StateRecord: void setNext$runtime_release(androidx.compose.runtime.snapshots.StateRecord)>($r4);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type T of androidx.compose.runtime.snapshots.SnapshotKt.newOverwritableRecord$lambda-8");

        interfaceinvoke r1.<androidx.compose.runtime.snapshots.StateObject: void prependStateRecord(androidx.compose.runtime.snapshots.StateRecord)>($r6);

        $r5 = $r6;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)>($r6, "null cannot be cast to non-null type T of androidx.compose.runtime.snapshots.SnapshotKt.newOverwritableRecord");

     label2:
        return $r5;
    }

    public static final void notifyWrite(androidx.compose.runtime.snapshots.Snapshot, androidx.compose.runtime.snapshots.StateObject)
    {
        androidx.compose.runtime.snapshots.Snapshot r0;
        androidx.compose.runtime.snapshots.StateObject r1;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @parameter0: androidx.compose.runtime.snapshots.Snapshot;

        r1 := @parameter1: androidx.compose.runtime.snapshots.StateObject;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "snapshot");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        $r2 = virtualinvoke r0.<androidx.compose.runtime.snapshots.Snapshot: kotlin.jvm.functions.Function1 getWriteObserver$runtime_release()>();

        if $r2 == null goto label1;

        interfaceinvoke $r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r1);

        goto label1;

     label1:
        return;
    }

    public static final java.lang.Object writable(androidx.compose.runtime.snapshots.StateRecord, androidx.compose.runtime.snapshots.StateObject, androidx.compose.runtime.snapshots.Snapshot, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.StateRecord $r0, $r5;
        androidx.compose.runtime.snapshots.StateObject r1;
        androidx.compose.runtime.snapshots.Snapshot r2;
        kotlin.jvm.functions.Function1 r3;
        java.lang.Object r4, r7, r8, r11;
        java.lang.Throwable $r6, r9;

        $r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        r1 := @parameter1: androidx.compose.runtime.snapshots.StateObject;

        r2 := @parameter2: androidx.compose.runtime.snapshots.Snapshot;

        r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "snapshot");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "block");

        r7 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r4 = r7;

        entermonitor r4;

     label1:
        $r5 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r0, r1, r2);

        r8 = interfaceinvoke r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r4;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label5;

     label3:
        $r6 := @caughtexception;

        r9 = $r6;

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r4;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r9;

     label5:
        r11 = r8;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r2, r1);

        return r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final java.lang.Object writable(androidx.compose.runtime.snapshots.StateRecord, androidx.compose.runtime.snapshots.StateObject, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.StateRecord $r0, $r5;
        androidx.compose.runtime.snapshots.StateObject r1;
        kotlin.jvm.functions.Function1 r2;
        java.lang.Object r3, r7, r9;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r4;
        java.lang.Throwable $r6, r10;
        androidx.compose.runtime.snapshots.Snapshot r8;

        $r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        r1 := @parameter1: androidx.compose.runtime.snapshots.StateObject;

        r2 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "block");

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r7 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r3 = r7;

        entermonitor r3;

     label1:
        $r4 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r8 = virtualinvoke $r4.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r5 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord writableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot)>($r0, r1, r8);

        r9 = interfaceinvoke r2.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r5);

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label5;

     label3:
        $r6 := @caughtexception;

        r10 = $r6;

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r3;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r10;

     label5:
        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r8, r1);

        return r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final java.lang.Object overwritable(androidx.compose.runtime.snapshots.StateRecord, androidx.compose.runtime.snapshots.StateObject, androidx.compose.runtime.snapshots.StateRecord, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.StateRecord $r0, r2, $r6;
        androidx.compose.runtime.snapshots.StateObject r1;
        kotlin.jvm.functions.Function1 r3;
        java.lang.Object r4, r8, r10;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r5;
        java.lang.Throwable $r7, r11;
        androidx.compose.runtime.snapshots.Snapshot r9;

        $r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        r1 := @parameter1: androidx.compose.runtime.snapshots.StateObject;

        r2 := @parameter2: androidx.compose.runtime.snapshots.StateRecord;

        r3 := @parameter3: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "state");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "candidate");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "block");

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot getSnapshotInitializer()>();

        r8 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r4 = r8;

        entermonitor r4;

     label1:
        $r5 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r9 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $r6 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord overwritableRecord(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateObject,androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateRecord)>($r0, r1, r9, r2);

        r10 = interfaceinvoke r3.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r6);

     label2:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r4;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        goto label5;

     label3:
        $r7 := @caughtexception;

        r11 = $r7;

     label4:
        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyStart(int)>(1);

        exitmonitor r4;

        staticinvoke <kotlin.jvm.internal.InlineMarker: void finallyEnd(int)>(1);

        throw r11;

     label5:
        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void notifyWrite(androidx.compose.runtime.snapshots.Snapshot,androidx.compose.runtime.snapshots.StateObject)>(r9, r1);

        return r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static final java.util.Map optimisticMerges(androidx.compose.runtime.snapshots.MutableSnapshot, androidx.compose.runtime.snapshots.MutableSnapshot, androidx.compose.runtime.snapshots.SnapshotIdSet)
    {
        androidx.compose.runtime.snapshots.MutableSnapshot r0, r1;
        androidx.compose.runtime.snapshots.SnapshotIdSet r2, r4, $r14, $r15, $r16, $r21;
        java.util.Set r3;
        int i0, $i1, $i2;
        java.util.Iterator r5;
        androidx.compose.runtime.snapshots.StateObject r6;
        androidx.compose.runtime.snapshots.StateRecord r7, r8, r9, r10, r11, $r19, $r20, $r22;
        java.util.HashMap r12, r13, $r24, r27;
        java.util.Map $r17, $r28;
        java.lang.Object $r18;
        boolean $z1, $z2;
        kotlin.KotlinNothingValueException $r26;

        r0 := @parameter0: androidx.compose.runtime.snapshots.MutableSnapshot;

        r1 := @parameter1: androidx.compose.runtime.snapshots.MutableSnapshot;

        r2 := @parameter2: androidx.compose.runtime.snapshots.SnapshotIdSet;

        r3 = virtualinvoke r1.<androidx.compose.runtime.snapshots.MutableSnapshot: java.util.Set getModified$runtime_release()>();

        i0 = virtualinvoke r0.<androidx.compose.runtime.snapshots.MutableSnapshot: int getId()>();

        if r3 != null goto label1;

        return null;

     label1:
        $r14 = virtualinvoke r1.<androidx.compose.runtime.snapshots.MutableSnapshot: androidx.compose.runtime.snapshots.SnapshotIdSet getInvalid$runtime_release()>();

        $i1 = virtualinvoke r1.<androidx.compose.runtime.snapshots.MutableSnapshot: int getId()>();

        $r15 = virtualinvoke $r14.<androidx.compose.runtime.snapshots.SnapshotIdSet: androidx.compose.runtime.snapshots.SnapshotIdSet set(int)>($i1);

        $r16 = virtualinvoke r1.<androidx.compose.runtime.snapshots.MutableSnapshot: androidx.compose.runtime.snapshots.SnapshotIdSet getPreviousIds$runtime_release()>();

        r4 = virtualinvoke $r15.<androidx.compose.runtime.snapshots.SnapshotIdSet: androidx.compose.runtime.snapshots.SnapshotIdSet or(androidx.compose.runtime.snapshots.SnapshotIdSet)>($r16);

        r27 = null;

        r5 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (androidx.compose.runtime.snapshots.StateObject) $r18;

        r7 = interfaceinvoke r6.<androidx.compose.runtime.snapshots.StateObject: androidx.compose.runtime.snapshots.StateRecord getFirstStateRecord()>();

        $r19 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>(r7, i0, r2);

        if $r19 != null goto label3;

        goto label2;

     label3:
        r8 = $r19;

        $r20 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>(r7, i0, r4);

        if $r20 != null goto label4;

        goto label2;

     label4:
        r9 = $r20;

        $z1 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r8, r9);

        if $z1 != 0 goto label2;

        $i2 = virtualinvoke r1.<androidx.compose.runtime.snapshots.MutableSnapshot: int getId()>();

        $r21 = virtualinvoke r1.<androidx.compose.runtime.snapshots.MutableSnapshot: androidx.compose.runtime.snapshots.SnapshotIdSet getInvalid$runtime_release()>();

        $r22 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>(r7, $i2, $r21);

        if $r22 != null goto label5;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Void readError()>();

        $r26 = new kotlin.KotlinNothingValueException;

        specialinvoke $r26.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r26;

     label5:
        r10 = $r22;

        r11 = interfaceinvoke r6.<androidx.compose.runtime.snapshots.StateObject: androidx.compose.runtime.snapshots.StateRecord mergeRecords(androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateRecord,androidx.compose.runtime.snapshots.StateRecord)>(r9, r8, r10);

        if r11 == null goto label7;

        $r28 = (java.util.Map) r27;

        if $r28 != null goto label6;

        $r24 = new java.util.HashMap;

        specialinvoke $r24.<java.util.HashMap: void <init>()>();

        r12 = $r24;

        r13 = r12;

        r27 = r13;

        $r28 = (java.util.Map) r12;

     label6:
        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r11);

        goto label2;

     label7:
        return null;

     label8:
        $r17 = (java.util.Map) r27;

        return $r17;
    }

    private static final java.lang.Void reportReadonlySnapshotWrite()
    {
        java.lang.String $r1, $r2;
        java.lang.IllegalStateException r3;
        java.lang.Throwable r4;

        r3 = new java.lang.IllegalStateException;

        $r1 = "Cannot modify a state object in a read-only snapshot";

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        r4 = (java.lang.Throwable) r3;

        throw r4;
    }

    public static final androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord, androidx.compose.runtime.snapshots.Snapshot)
    {
        androidx.compose.runtime.snapshots.StateRecord r0, $r3;
        androidx.compose.runtime.snapshots.Snapshot r1;
        int $i0;
        androidx.compose.runtime.snapshots.SnapshotIdSet $r2;
        kotlin.KotlinNothingValueException $r5;

        r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        r1 := @parameter1: androidx.compose.runtime.snapshots.Snapshot;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "r");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "snapshot");

        $i0 = virtualinvoke r1.<androidx.compose.runtime.snapshots.Snapshot: int getId()>();

        $r2 = virtualinvoke r1.<androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.SnapshotIdSet getInvalid$runtime_release()>();

        $r3 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>(r0, $i0, $r2);

        if $r3 != null goto label1;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Void readError()>();

        $r5 = new kotlin.KotlinNothingValueException;

        specialinvoke $r5.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r5;

     label1:
        return $r3;
    }

    public static final androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)
    {
        androidx.compose.runtime.snapshots.StateRecord r0, $r12, $r13;
        androidx.compose.runtime.snapshots.Snapshot r1, r4;
        java.lang.Object r2, r3;
        androidx.compose.runtime.snapshots.Snapshot$Companion $r5, $r7;
        int $i0, $i1;
        androidx.compose.runtime.snapshots.SnapshotIdSet $r6, $r8;
        kotlin.KotlinNothingValueException $r10;
        java.lang.Throwable $r11;

        r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "r");

        $r5 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r1 = virtualinvoke $r5.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $i0 = virtualinvoke r1.<androidx.compose.runtime.snapshots.Snapshot: int getId()>();

        $r6 = virtualinvoke r1.<androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.SnapshotIdSet getInvalid$runtime_release()>();

        $r12 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>(r0, $i0, $r6);

        if $r12 != null goto label6;

        r2 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object getLock()>();

        r3 = r2;

        entermonitor r3;

     label1:
        $r7 = <androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.Snapshot$Companion Companion>;

        r4 = virtualinvoke $r7.<androidx.compose.runtime.snapshots.Snapshot$Companion: androidx.compose.runtime.snapshots.Snapshot getCurrent()>();

        $i1 = virtualinvoke r4.<androidx.compose.runtime.snapshots.Snapshot: int getId()>();

        $r8 = virtualinvoke r4.<androidx.compose.runtime.snapshots.Snapshot: androidx.compose.runtime.snapshots.SnapshotIdSet getInvalid$runtime_release()>();

        $r13 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>(r0, $i1, $r8);

     label2:
        exitmonitor r3;

        $r12 = $r13;

        goto label5;

     label3:
        $r11 := @caughtexception;

     label4:
        exitmonitor r3;

        throw $r11;

     label5:
        if $r13 != null goto label6;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Void readError()>();

        $r10 = new kotlin.KotlinNothingValueException;

        specialinvoke $r10.<kotlin.KotlinNothingValueException: void <init>()>();

        throw $r10;

     label6:
        return $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static final java.lang.Object withCurrent(androidx.compose.runtime.snapshots.StateRecord, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.StateRecord $r0, $r2;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object $r3;

        $r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "block");

        $r2 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord current(androidx.compose.runtime.snapshots.StateRecord)>($r0);

        $r3 = interfaceinvoke r1.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>($r2);

        return $r3;
    }

    public static final androidx.compose.runtime.snapshots.SnapshotIdSet addRange(androidx.compose.runtime.snapshots.SnapshotIdSet, int, int)
    {
        androidx.compose.runtime.snapshots.SnapshotIdSet $r0, r1;
        int i0, i1, i2;

        $r0 := @parameter0: androidx.compose.runtime.snapshots.SnapshotIdSet;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "<this>");

        r1 = $r0;

        i2 = i0;

     label1:
        if i2 >= i1 goto label2;

        r1 = virtualinvoke r1.<androidx.compose.runtime.snapshots.SnapshotIdSet: androidx.compose.runtime.snapshots.SnapshotIdSet set(int)>(i2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static final androidx.compose.runtime.SnapshotThreadLocal access$getThreadSnapshot$p()
    {
        androidx.compose.runtime.SnapshotThreadLocal $r0;

        $r0 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.SnapshotThreadLocal threadSnapshot>;

        return $r0;
    }

    public static final void access$setOpenSnapshots$p(androidx.compose.runtime.snapshots.SnapshotIdSet)
    {
        androidx.compose.runtime.snapshots.SnapshotIdSet r0;

        r0 := @parameter0: androidx.compose.runtime.snapshots.SnapshotIdSet;

        <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotIdSet openSnapshots> = r0;

        return;
    }

    public static final androidx.compose.runtime.snapshots.SnapshotIdSet access$getOpenSnapshots$p()
    {
        androidx.compose.runtime.snapshots.SnapshotIdSet $r0;

        $r0 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotIdSet openSnapshots>;

        return $r0;
    }

    public static final java.lang.Object access$advanceGlobalSnapshot(kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 r0;
        java.lang.Object $r1;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object advanceGlobalSnapshot(kotlin.jvm.functions.Function1)>(r0);

        return $r1;
    }

    public static final kotlin.jvm.functions.Function1 access$getEmptyLambda$p()
    {
        kotlin.jvm.functions.Function1 $r0;

        $r0 = <androidx.compose.runtime.snapshots.SnapshotKt: kotlin.jvm.functions.Function1 emptyLambda>;

        return $r0;
    }

    public static final java.util.List access$getApplyObservers$p()
    {
        java.util.List $r0;

        $r0 = <androidx.compose.runtime.snapshots.SnapshotKt: java.util.List applyObservers>;

        return $r0;
    }

    public static final void access$advanceGlobalSnapshot()
    {
        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void advanceGlobalSnapshot()>();

        return;
    }

    public static final java.util.List access$getGlobalWriteObservers$p()
    {
        java.util.List $r0;

        $r0 = <androidx.compose.runtime.snapshots.SnapshotKt: java.util.List globalWriteObservers>;

        return $r0;
    }

    public static final java.util.concurrent.atomic.AtomicReference access$getCurrentGlobalSnapshot$p()
    {
        java.util.concurrent.atomic.AtomicReference $r0;

        $r0 = <androidx.compose.runtime.snapshots.SnapshotKt: java.util.concurrent.atomic.AtomicReference currentGlobalSnapshot>;

        return $r0;
    }

    public static final java.util.Map access$optimisticMerges(androidx.compose.runtime.snapshots.MutableSnapshot, androidx.compose.runtime.snapshots.MutableSnapshot, androidx.compose.runtime.snapshots.SnapshotIdSet)
    {
        androidx.compose.runtime.snapshots.MutableSnapshot r0, r1;
        androidx.compose.runtime.snapshots.SnapshotIdSet r2;
        java.util.Map $r3;

        r0 := @parameter0: androidx.compose.runtime.snapshots.MutableSnapshot;

        r1 := @parameter1: androidx.compose.runtime.snapshots.MutableSnapshot;

        r2 := @parameter2: androidx.compose.runtime.snapshots.SnapshotIdSet;

        $r3 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.util.Map optimisticMerges(androidx.compose.runtime.snapshots.MutableSnapshot,androidx.compose.runtime.snapshots.MutableSnapshot,androidx.compose.runtime.snapshots.SnapshotIdSet)>(r0, r1, r2);

        return $r3;
    }

    public static final androidx.compose.runtime.snapshots.StateRecord access$readable(androidx.compose.runtime.snapshots.StateRecord, int, androidx.compose.runtime.snapshots.SnapshotIdSet)
    {
        androidx.compose.runtime.snapshots.StateRecord r0, $r2;
        int i0;
        androidx.compose.runtime.snapshots.SnapshotIdSet r1;

        r0 := @parameter0: androidx.compose.runtime.snapshots.StateRecord;

        i0 := @parameter1: int;

        r1 := @parameter2: androidx.compose.runtime.snapshots.SnapshotIdSet;

        $r2 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.StateRecord readable(androidx.compose.runtime.snapshots.StateRecord,int,androidx.compose.runtime.snapshots.SnapshotIdSet)>(r0, i0, r1);

        return $r2;
    }

    public static final java.lang.Void access$readError()
    {
        java.lang.Void $r0;

        $r0 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Void readError()>();

        return $r0;
    }

    public static final int access$getNextSnapshotId$p()
    {
        int $i0;

        $i0 = <androidx.compose.runtime.snapshots.SnapshotKt: int nextSnapshotId>;

        return $i0;
    }

    public static final void access$setNextSnapshotId$p(int)
    {
        int i0;

        i0 := @parameter0: int;

        <androidx.compose.runtime.snapshots.SnapshotKt: int nextSnapshotId> = i0;

        return;
    }

    public static final kotlin.jvm.functions.Function1 access$mergedWriteObserver(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 r0, r1, $r2;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: kotlin.jvm.functions.Function1 mergedWriteObserver(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)>(r0, r1);

        return $r2;
    }

    public static final void access$validateOpen(androidx.compose.runtime.snapshots.Snapshot)
    {
        androidx.compose.runtime.snapshots.Snapshot r0;

        r0 := @parameter0: androidx.compose.runtime.snapshots.Snapshot;

        staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: void validateOpen(androidx.compose.runtime.snapshots.Snapshot)>(r0);

        return;
    }

    public static final java.lang.Object access$takeNewGlobalSnapshot(androidx.compose.runtime.snapshots.Snapshot, kotlin.jvm.functions.Function1)
    {
        androidx.compose.runtime.snapshots.Snapshot r0;
        kotlin.jvm.functions.Function1 r1;
        java.lang.Object $r2;

        r0 := @parameter0: androidx.compose.runtime.snapshots.Snapshot;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        $r2 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object takeNewGlobalSnapshot(androidx.compose.runtime.snapshots.Snapshot,kotlin.jvm.functions.Function1)>(r0, r1);

        return $r2;
    }

    public static final java.lang.Void access$reportReadonlySnapshotWrite()
    {
        java.lang.Void $r0;

        $r0 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Void reportReadonlySnapshotWrite()>();

        return $r0;
    }

    public static final androidx.compose.runtime.snapshots.Snapshot access$takeNewSnapshot(kotlin.jvm.functions.Function1)
    {
        kotlin.jvm.functions.Function1 r0;
        androidx.compose.runtime.snapshots.Snapshot $r1;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        $r1 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot takeNewSnapshot(kotlin.jvm.functions.Function1)>(r0);

        return $r1;
    }

    public static final kotlin.jvm.functions.Function1 access$mergedReadObserver(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, boolean)
    {
        kotlin.jvm.functions.Function1 r0, r1, $r2;
        boolean z0;

        r0 := @parameter0: kotlin.jvm.functions.Function1;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: kotlin.jvm.functions.Function1 mergedReadObserver(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,boolean)>(r0, r1, z0);

        return $r2;
    }

    public static final androidx.compose.runtime.snapshots.Snapshot access$createTransparentSnapshotWithNoParentReadObserver(androidx.compose.runtime.snapshots.Snapshot, kotlin.jvm.functions.Function1, boolean)
    {
        androidx.compose.runtime.snapshots.Snapshot r0, $r2;
        kotlin.jvm.functions.Function1 r1;
        boolean z0;

        r0 := @parameter0: androidx.compose.runtime.snapshots.Snapshot;

        r1 := @parameter1: kotlin.jvm.functions.Function1;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot createTransparentSnapshotWithNoParentReadObserver(androidx.compose.runtime.snapshots.Snapshot,kotlin.jvm.functions.Function1,boolean)>(r0, r1, z0);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.compose.runtime.snapshots.GlobalSnapshot r0, r1, $r13, r22;
        androidx.compose.runtime.snapshots.SnapshotKt$emptyLambda$1 $r2;
        kotlin.jvm.functions.Function1 $r3;
        androidx.compose.runtime.SnapshotThreadLocal $r4;
        java.lang.Object $r5, $r20;
        androidx.compose.runtime.snapshots.SnapshotIdSet$Companion $r6, $r14;
        androidx.compose.runtime.snapshots.SnapshotIdSet $r7, $r15, $r16, $r17;
        androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap $r8;
        java.util.ArrayList $r9, $r11;
        java.util.List $r10, $r12;
        int $i0, $i1, i2;
        java.util.concurrent.atomic.AtomicReference $r18, $r19;
        androidx.compose.runtime.snapshots.Snapshot $r21;

        $r2 = <androidx.compose.runtime.snapshots.SnapshotKt$emptyLambda$1: androidx.compose.runtime.snapshots.SnapshotKt$emptyLambda$1 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        <androidx.compose.runtime.snapshots.SnapshotKt: kotlin.jvm.functions.Function1 emptyLambda> = $r3;

        $r4 = new androidx.compose.runtime.SnapshotThreadLocal;

        specialinvoke $r4.<androidx.compose.runtime.SnapshotThreadLocal: void <init>()>();

        <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.SnapshotThreadLocal threadSnapshot> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        <androidx.compose.runtime.snapshots.SnapshotKt: java.lang.Object lock> = $r5;

        $r6 = <androidx.compose.runtime.snapshots.SnapshotIdSet: androidx.compose.runtime.snapshots.SnapshotIdSet$Companion Companion>;

        $r7 = virtualinvoke $r6.<androidx.compose.runtime.snapshots.SnapshotIdSet$Companion: androidx.compose.runtime.snapshots.SnapshotIdSet getEMPTY()>();

        <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotIdSet openSnapshots> = $r7;

        <androidx.compose.runtime.snapshots.SnapshotKt: int nextSnapshotId> = 1;

        $r8 = new androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap;

        specialinvoke $r8.<androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap: void <init>()>();

        <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotDoubleIndexHeap pinningTable> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10 = (java.util.List) $r9;

        <androidx.compose.runtime.snapshots.SnapshotKt: java.util.List applyObservers> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $r12 = (java.util.List) $r11;

        <androidx.compose.runtime.snapshots.SnapshotKt: java.util.List globalWriteObservers> = $r12;

        $r13 = new androidx.compose.runtime.snapshots.GlobalSnapshot;

        i2 = <androidx.compose.runtime.snapshots.SnapshotKt: int nextSnapshotId>;

        $i0 = i2 + 1;

        <androidx.compose.runtime.snapshots.SnapshotKt: int nextSnapshotId> = $i0;

        $r14 = <androidx.compose.runtime.snapshots.SnapshotIdSet: androidx.compose.runtime.snapshots.SnapshotIdSet$Companion Companion>;

        $r15 = virtualinvoke $r14.<androidx.compose.runtime.snapshots.SnapshotIdSet$Companion: androidx.compose.runtime.snapshots.SnapshotIdSet getEMPTY()>();

        specialinvoke $r13.<androidx.compose.runtime.snapshots.GlobalSnapshot: void <init>(int,androidx.compose.runtime.snapshots.SnapshotIdSet)>(i2, $r15);

        r22 = $r13;

        r0 = r22;

        $r16 = <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotIdSet openSnapshots>;

        $i1 = virtualinvoke r0.<androidx.compose.runtime.snapshots.GlobalSnapshot: int getId()>();

        $r17 = virtualinvoke $r16.<androidx.compose.runtime.snapshots.SnapshotIdSet: androidx.compose.runtime.snapshots.SnapshotIdSet set(int)>($i1);

        <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.SnapshotIdSet openSnapshots> = $r17;

        r1 = r22;

        $r18 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r18.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(r1);

        <androidx.compose.runtime.snapshots.SnapshotKt: java.util.concurrent.atomic.AtomicReference currentGlobalSnapshot> = $r18;

        $r19 = <androidx.compose.runtime.snapshots.SnapshotKt: java.util.concurrent.atomic.AtomicReference currentGlobalSnapshot>;

        $r20 = virtualinvoke $r19.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r20, "currentGlobalSnapshot.get()");

        $r21 = (androidx.compose.runtime.snapshots.Snapshot) $r20;

        <androidx.compose.runtime.snapshots.SnapshotKt: androidx.compose.runtime.snapshots.Snapshot snapshotInitializer> = $r21;

        return;
    }

