androidx.compose.ui.test.junit4.AndroidComposeTestRule_androidKt
    public static final androidx.compose.ui.test.junit4.ComposeContentTestRule createComposeRule()
    {
        androidx.compose.ui.test.junit4.AndroidComposeTestRule $r0;
        androidx.compose.ui.test.junit4.ComposeContentTestRule $r1;

        $r0 = staticinvoke <androidx.compose.ui.test.junit4.AndroidComposeTestRule_androidKt: androidx.compose.ui.test.junit4.AndroidComposeTestRule createAndroidComposeRule(java.lang.Class)>(class "Landroidx/activity/ComponentActivity;");

        $r1 = (androidx.compose.ui.test.junit4.ComposeContentTestRule) $r0;

        return $r1;
    }

    public static final androidx.compose.ui.test.junit4.AndroidComposeTestRule createAndroidComposeRule()
    {
        java.lang.Class $r0;
        androidx.compose.ui.test.junit4.AndroidComposeTestRule $r1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)>(4, "A");

        $r0 = (java.lang.Class) class "Landroidx/activity/ComponentActivity;";

        $r1 = staticinvoke <androidx.compose.ui.test.junit4.AndroidComposeTestRule_androidKt: androidx.compose.ui.test.junit4.AndroidComposeTestRule createAndroidComposeRule(java.lang.Class)>($r0);

        return $r1;
    }

    public static final androidx.compose.ui.test.junit4.AndroidComposeTestRule createAndroidComposeRule(java.lang.Class)
    {
        java.lang.Class r0;
        androidx.compose.ui.test.junit4.AndroidComposeTestRule $r1;
        androidx.test.ext.junit.rules.ActivityScenarioRule $r2;
        androidx.compose.ui.test.junit4.AndroidComposeTestRule_androidKt$createAndroidComposeRule$1 $r3;
        kotlin.jvm.functions.Function1 $r4;
        org.junit.rules.TestRule $r5;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "activityClass");

        $r1 = new androidx.compose.ui.test.junit4.AndroidComposeTestRule;

        $r2 = new androidx.test.ext.junit.rules.ActivityScenarioRule;

        specialinvoke $r2.<androidx.test.ext.junit.rules.ActivityScenarioRule: void <init>(java.lang.Class)>(r0);

        $r5 = (org.junit.rules.TestRule) $r2;

        $r3 = <androidx.compose.ui.test.junit4.AndroidComposeTestRule_androidKt$createAndroidComposeRule$1: androidx.compose.ui.test.junit4.AndroidComposeTestRule_androidKt$createAndroidComposeRule$1 INSTANCE>;

        $r4 = (kotlin.jvm.functions.Function1) $r3;

        specialinvoke $r1.<androidx.compose.ui.test.junit4.AndroidComposeTestRule: void <init>(org.junit.rules.TestRule,kotlin.jvm.functions.Function1)>($r5, $r4);

        return $r1;
    }

    public static final androidx.compose.ui.test.junit4.ComposeTestRule createEmptyComposeRule()
    {
        androidx.compose.ui.test.junit4.AndroidComposeTestRule $r0;
        org.junit.rules.TestRule $r1;
        androidx.compose.ui.test.junit4.AndroidComposeTestRule_androidKt$createEmptyComposeRule$2 $r2;
        kotlin.jvm.functions.Function1 $r3;
        androidx.compose.ui.test.junit4.ComposeTestRule $r4;

        $r0 = new androidx.compose.ui.test.junit4.AndroidComposeTestRule;

        $r1 = dynamicinvoke "apply" <org.junit.rules.TestRule ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: org.junit.runners.model.Statement __METHODTYPE__(org.junit.runners.model.Statement,org.junit.runner.Description), methodhandle: "REF_INVOKE_STATIC" <androidx.compose.ui.test.junit4.AndroidComposeTestRule_androidKt: org.junit.runners.model.Statement createEmptyComposeRule$lambda-0(org.junit.runners.model.Statement,org.junit.runner.Description)>, methodtype: org.junit.runners.model.Statement __METHODTYPE__(org.junit.runners.model.Statement,org.junit.runner.Description));

        $r2 = <androidx.compose.ui.test.junit4.AndroidComposeTestRule_androidKt$createEmptyComposeRule$2: androidx.compose.ui.test.junit4.AndroidComposeTestRule_androidKt$createEmptyComposeRule$2 INSTANCE>;

        $r3 = (kotlin.jvm.functions.Function1) $r2;

        specialinvoke $r0.<androidx.compose.ui.test.junit4.AndroidComposeTestRule: void <init>(org.junit.rules.TestRule,kotlin.jvm.functions.Function1)>($r1, $r3);

        $r4 = (androidx.compose.ui.test.junit4.ComposeTestRule) $r0;

        return $r4;
    }

    private static final androidx.activity.ComponentActivity getActivityFromTestRule(androidx.test.ext.junit.rules.ActivityScenarioRule)
    {
        androidx.test.ext.junit.rules.ActivityScenarioRule r0;
        kotlin.jvm.internal.Ref$ObjectRef r1, $r2;
        androidx.test.core.app.ActivityScenario $r3;
        androidx.test.core.app.ActivityScenario$ActivityAction $r4;
        java.lang.Object $r6, $r7;
        androidx.activity.ComponentActivity $r8;
        java.lang.IllegalStateException $r9;

        r0 := @parameter0: androidx.test.ext.junit.rules.ActivityScenarioRule;

        $r2 = new kotlin.jvm.internal.Ref$ObjectRef;

        specialinvoke $r2.<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r0.<androidx.test.ext.junit.rules.ActivityScenarioRule: androidx.test.core.app.ActivityScenario getScenario()>();

        $r4 = dynamicinvoke "perform" <androidx.test.core.app.ActivityScenario$ActivityAction (kotlin.jvm.internal.Ref$ObjectRef)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: void __METHODTYPE__(android.app.Activity), methodhandle: "REF_INVOKE_STATIC" <androidx.compose.ui.test.junit4.AndroidComposeTestRule_androidKt: void getActivityFromTestRule$lambda-1(kotlin.jvm.internal.Ref$ObjectRef,androidx.activity.ComponentActivity)>, methodtype: void __METHODTYPE__(androidx.activity.ComponentActivity));

        virtualinvoke $r3.<androidx.test.core.app.ActivityScenario: androidx.test.core.app.ActivityScenario onActivity(androidx.test.core.app.ActivityScenario$ActivityAction)>($r4);

        $r6 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        if $r6 != null goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Activity was not set in the ActivityScenarioRule!");

        throw $r9;

     label1:
        $r7 = r1.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element>;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r7);

        $r8 = (androidx.activity.ComponentActivity) $r7;

        return $r8;
    }

    private static final org.junit.runners.model.Statement createEmptyComposeRule$lambda-0(org.junit.runners.model.Statement, org.junit.runner.Description)
    {
        org.junit.runners.model.Statement r0;
        org.junit.runner.Description r1;

        r0 := @parameter0: org.junit.runners.model.Statement;

        r1 := @parameter1: org.junit.runner.Description;

        return r0;
    }

    private static final void getActivityFromTestRule$lambda-1(kotlin.jvm.internal.Ref$ObjectRef, androidx.activity.ComponentActivity)
    {
        kotlin.jvm.internal.Ref$ObjectRef $r0;
        androidx.activity.ComponentActivity r1;

        $r0 := @parameter0: kotlin.jvm.internal.Ref$ObjectRef;

        r1 := @parameter1: androidx.activity.ComponentActivity;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r0, "$activity");

        $r0.<kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element> = r1;

        return;
    }

    public static final androidx.activity.ComponentActivity access$getActivityFromTestRule(androidx.test.ext.junit.rules.ActivityScenarioRule)
    {
        androidx.test.ext.junit.rules.ActivityScenarioRule r0;
        androidx.activity.ComponentActivity $r1;

        r0 := @parameter0: androidx.test.ext.junit.rules.ActivityScenarioRule;

        $r1 = staticinvoke <androidx.compose.ui.test.junit4.AndroidComposeTestRule_androidKt: androidx.activity.ComponentActivity getActivityFromTestRule(androidx.test.ext.junit.rules.ActivityScenarioRule)>(r0);

        return $r1;
    }

