androidx.security.crypto.MasterKeyKt
    public static final androidx.security.crypto.MasterKey MasterKey(android.content.Context, java.lang.String, androidx.security.crypto.MasterKey$KeyScheme, boolean, int, boolean)
    {
        android.content.Context r0;
        java.lang.String r1;
        androidx.security.crypto.MasterKey$KeyScheme r2;
        boolean z0, z1;
        int i0;
        androidx.security.crypto.MasterKey$Builder $r3, $r4, $r5, $r6;
        androidx.security.crypto.MasterKey $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: androidx.security.crypto.MasterKey$KeyScheme;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        z1 := @parameter5: boolean;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r0, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "keyAlias");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "keyScheme");

        $r3 = new androidx.security.crypto.MasterKey$Builder;

        specialinvoke $r3.<androidx.security.crypto.MasterKey$Builder: void <init>(android.content.Context,java.lang.String)>(r0, r1);

        $r4 = virtualinvoke $r3.<androidx.security.crypto.MasterKey$Builder: androidx.security.crypto.MasterKey$Builder setKeyScheme(androidx.security.crypto.MasterKey$KeyScheme)>(r2);

        $r5 = virtualinvoke $r4.<androidx.security.crypto.MasterKey$Builder: androidx.security.crypto.MasterKey$Builder setUserAuthenticationRequired(boolean,int)>(z0, i0);

        $r6 = virtualinvoke $r5.<androidx.security.crypto.MasterKey$Builder: androidx.security.crypto.MasterKey$Builder setRequestStrongBoxBacked(boolean)>(z1);

        $r7 = virtualinvoke $r6.<androidx.security.crypto.MasterKey$Builder: androidx.security.crypto.MasterKey build()>();

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>($r7, "Builder(context, keyAlia\u2026ngBoxBacked)\n    .build()");

        return $r7;
    }

    public static androidx.security.crypto.MasterKey MasterKey$default(android.content.Context, java.lang.String, androidx.security.crypto.MasterKey$KeyScheme, boolean, int, boolean, int, java.lang.Object)
    {
        android.content.Context r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Object r1;
        androidx.security.crypto.MasterKey $r2;
        java.lang.String r3;
        androidx.security.crypto.MasterKey$KeyScheme r4;
        boolean z0, z1;

        r0 := @parameter0: android.content.Context;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: androidx.security.crypto.MasterKey$KeyScheme;

        z0 := @parameter3: boolean;

        i6 := @parameter4: int;

        z1 := @parameter5: boolean;

        i0 := @parameter6: int;

        r1 := @parameter7: java.lang.Object;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        r3 = "_androidx_security_master_key_";

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        r4 = <androidx.security.crypto.MasterKey$KeyScheme: androidx.security.crypto.MasterKey$KeyScheme AES256_GCM>;

     label2:
        $i3 = i0 & 8;

        if $i3 == 0 goto label3;

        z0 = 0;

     label3:
        $i4 = i0 & 16;

        if $i4 == 0 goto label4;

        i6 = staticinvoke <androidx.security.crypto.MasterKey: int getDefaultAuthenticationValidityDurationSeconds()>();

     label4:
        $i5 = i0 & 32;

        if $i5 == 0 goto label5;

        z1 = 0;

     label5:
        $r2 = staticinvoke <androidx.security.crypto.MasterKeyKt: androidx.security.crypto.MasterKey MasterKey(android.content.Context,java.lang.String,androidx.security.crypto.MasterKey$KeyScheme,boolean,int,boolean)>(r0, r3, r4, z0, i6, z1);

        return $r2;
    }

