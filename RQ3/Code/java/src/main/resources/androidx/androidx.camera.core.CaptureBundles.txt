androidx.camera.core.CaptureBundles
    public static androidx.camera.core.impl.CaptureBundle singleDefaultCaptureBundle()
    {
        androidx.camera.core.impl.CaptureStage[] $r0;
        androidx.camera.core.impl.CaptureStage$DefaultCaptureStage $r1;
        androidx.camera.core.impl.CaptureBundle $r2;

        $r0 = newarray (androidx.camera.core.impl.CaptureStage)[1];

        $r1 = new androidx.camera.core.impl.CaptureStage$DefaultCaptureStage;

        specialinvoke $r1.<androidx.camera.core.impl.CaptureStage$DefaultCaptureStage: void <init>()>();

        $r0[0] = $r1;

        $r2 = staticinvoke <androidx.camera.core.CaptureBundles: androidx.camera.core.impl.CaptureBundle createCaptureBundle(androidx.camera.core.impl.CaptureStage[])>($r0);

        return $r2;
    }

    static transient androidx.camera.core.impl.CaptureBundle createCaptureBundle(androidx.camera.core.impl.CaptureStage[])
    {
        androidx.camera.core.impl.CaptureStage[] r0;
        androidx.camera.core.CaptureBundles$CaptureBundleImpl $r1;
        java.util.List $r2;

        r0 := @parameter0: androidx.camera.core.impl.CaptureStage[];

        $r1 = new androidx.camera.core.CaptureBundles$CaptureBundleImpl;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        specialinvoke $r1.<androidx.camera.core.CaptureBundles$CaptureBundleImpl: void <init>(java.util.List)>($r2);

        return $r1;
    }

    static androidx.camera.core.impl.CaptureBundle createCaptureBundle(java.util.List)
    {
        java.util.List r0;
        androidx.camera.core.CaptureBundles$CaptureBundleImpl $r1;

        r0 := @parameter0: java.util.List;

        $r1 = new androidx.camera.core.CaptureBundles$CaptureBundleImpl;

        specialinvoke $r1.<androidx.camera.core.CaptureBundles$CaptureBundleImpl: void <init>(java.util.List)>(r0);

        return $r1;
    }

    private void <init>()
    {
        androidx.camera.core.CaptureBundles r0;

        r0 := @this: androidx.camera.core.CaptureBundles;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

androidx.camera.core.CaptureBundles$CaptureBundleImpl
<androidx.camera.core.CaptureBundles$CaptureBundleImpl: java.util.List mCaptureStageList>
    void <init>(java.util.List)
    {
        androidx.camera.core.CaptureBundles$CaptureBundleImpl r0;
        java.util.List r1, $r4;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this: androidx.camera.core.CaptureBundles$CaptureBundleImpl;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        r0.<androidx.camera.core.CaptureBundles$CaptureBundleImpl: java.util.List mCaptureStageList> = $r4;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot set an empty CaptureStage list.");

        throw $r2;

     label2:
        return;
    }

    public java.util.List getCaptureStages()
    {
        androidx.camera.core.CaptureBundles$CaptureBundleImpl r0;
        java.util.List $r1;

        r0 := @this: androidx.camera.core.CaptureBundles$CaptureBundleImpl;

        $r1 = r0.<androidx.camera.core.CaptureBundles$CaptureBundleImpl: java.util.List mCaptureStageList>;

        return $r1;
    }

