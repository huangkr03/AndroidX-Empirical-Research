androidx.paging.UnbatchedFlowCombiner
<androidx.paging.UnbatchedFlowCombiner: kotlin.jvm.functions.Function4 send>
<androidx.paging.UnbatchedFlowCombiner: kotlinx.coroutines.CompletableDeferred initialDispatched>
<androidx.paging.UnbatchedFlowCombiner: kotlinx.coroutines.sync.Mutex lock>
<androidx.paging.UnbatchedFlowCombiner: kotlinx.coroutines.CompletableDeferred[] valueReceived>
<androidx.paging.UnbatchedFlowCombiner: java.lang.Object[] values>
    public void <init>(kotlin.jvm.functions.Function4)
    {
        androidx.paging.UnbatchedFlowCombiner r0, r7, r9;
        kotlin.jvm.functions.Function4 r1;
        kotlinx.coroutines.CompletableDeferred $r2, $r5;
        kotlinx.coroutines.sync.Mutex $r3;
        java.lang.Object $r4;
        int i0, i1, i2, i3;
        kotlinx.coroutines.CompletableDeferred[] r6;
        java.lang.Object[] r8;

        r0 := @this: androidx.paging.UnbatchedFlowCombiner;

        r1 := @parameter0: kotlin.jvm.functions.Function4;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "send");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.paging.UnbatchedFlowCombiner: kotlin.jvm.functions.Function4 send> = r1;

        $r2 = staticinvoke <kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        r0.<androidx.paging.UnbatchedFlowCombiner: kotlinx.coroutines.CompletableDeferred initialDispatched> = $r2;

        $r3 = staticinvoke <kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.sync.Mutex Mutex$default(boolean,int,java.lang.Object)>(0, 1, null);

        r0.<androidx.paging.UnbatchedFlowCombiner: kotlinx.coroutines.sync.Mutex lock> = $r3;

        i0 = 0;

        r6 = newarray (kotlinx.coroutines.CompletableDeferred)[2];

        r7 = r0;

     label1:
        if i0 >= 2 goto label2;

        i1 = i0;

        $r5 = staticinvoke <kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred$default(kotlinx.coroutines.Job,int,java.lang.Object)>(null, 1, null);

        r6[i1] = $r5;

        i0 = i0 + 1;

        goto label1;

     label2:
        r7.<androidx.paging.UnbatchedFlowCombiner: kotlinx.coroutines.CompletableDeferred[] valueReceived> = r6;

        i2 = 0;

        r8 = newarray (java.lang.Object)[2];

        r9 = r0;

     label3:
        if i2 >= 2 goto label4;

        i3 = i2;

        $r4 = staticinvoke <androidx.paging.FlowExtKt: java.lang.Object access$getNULL$p()>();

        r8[i3] = $r4;

        i2 = i2 + 1;

        goto label3;

     label4:
        r9.<androidx.paging.UnbatchedFlowCombiner: java.lang.Object[] values> = r8;

        return;
    }

    public final java.lang.Object onNext(int, java.lang.Object, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r46, r47;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r1, r2, $r4, $r5, $r9, $r10, $r12, $r13, $r14, $r15, $r22, r26, r30, r31, r33, r34, $r38, $r40, $r41;
        kotlin.Unit $r6, $r8, $r19, r42;
        kotlinx.coroutines.CompletableDeferred $r7, $r17, $r20, $r21;
        java.lang.Object[] $r11, r29, r32, $r37, $r39;
        kotlinx.coroutines.CompletableDeferred[] $r16, $r18;
        int $i0, $i1, $i2, $i3, i4, $i5, i6, i7, i8, i9;
        java.lang.Throwable $r24, r43;
        androidx.paging.UnbatchedFlowCombiner r25;
        androidx.paging.UnbatchedFlowCombiner$onNext$1 $r27, r44;
        kotlinx.coroutines.sync.Mutex $r28;
        androidx.paging.CombineSource $r35;
        kotlin.jvm.functions.Function4 $r36;
        java.lang.IllegalStateException r45;

        r25 := @this: androidx.paging.UnbatchedFlowCombiner;

        i4 := @parameter0: int;

        r26 := @parameter1: java.lang.Object;

        r0 := @parameter2: kotlin.coroutines.Continuation;

        $z1 = r0 instanceof androidx.paging.UnbatchedFlowCombiner$onNext$1;

        if $z1 == 0 goto label01;

        $r27 = (androidx.paging.UnbatchedFlowCombiner$onNext$1) r0;

        $i0 = $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label01;

        $i2 = $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: int label>;

        $i3 = $i2 - -2147483648;

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: int label> = $i3;

        goto label02;

     label01:
        r44 = new androidx.paging.UnbatchedFlowCombiner$onNext$1;

        specialinvoke r44.<androidx.paging.UnbatchedFlowCombiner$onNext$1: void <init>(androidx.paging.UnbatchedFlowCombiner,kotlin.coroutines.Continuation)>(r25, r0);

        $r27 = r44;

     label02:
        $r1 = $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object result>;

        r2 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i5 = $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: int label>;

        tableswitch($i5)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label08;
            case 3: goto label26;
            default: goto label34;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r16 = r25.<androidx.paging.UnbatchedFlowCombiner: kotlinx.coroutines.CompletableDeferred[] valueReceived>;

        $r17 = $r16[i4];

        $z2 = interfaceinvoke $r17.<kotlinx.coroutines.CompletableDeferred: boolean isCompleted()>();

        if $z2 == 0 goto label06;

        $r21 = r25.<androidx.paging.UnbatchedFlowCombiner: kotlinx.coroutines.CompletableDeferred initialDispatched>;

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$0> = r25;

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$1> = r26;

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: int I$0> = i4;

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: int label> = 1;

        r46 = (kotlin.coroutines.Continuation) $r27;

        $r22 = interfaceinvoke $r21.<kotlinx.coroutines.CompletableDeferred: java.lang.Object await(kotlin.coroutines.Continuation)>(r46);

        if $r22 != r2 goto label05;

        return r2;

     label04:
        i4 = $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: int I$0>;

        r26 = $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$1>;

        $r14 = $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$0>;

        r25 = (androidx.paging.UnbatchedFlowCombiner) $r14;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label05:
        goto label07;

     label06:
        $r18 = r25.<androidx.paging.UnbatchedFlowCombiner: kotlinx.coroutines.CompletableDeferred[] valueReceived>;

        $r20 = $r18[i4];

        $r19 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke $r20.<kotlinx.coroutines.CompletableDeferred: boolean complete(java.lang.Object)>($r19);

     label07:
        $r28 = r25.<androidx.paging.UnbatchedFlowCombiner: kotlinx.coroutines.sync.Mutex lock>;

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$0> = r25;

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$1> = r26;

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$2> = $r28;

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: int I$0> = i4;

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: int label> = 2;

        r47 = (kotlin.coroutines.Continuation) $r27;

        $r15 = interfaceinvoke $r28.<kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)>(null, r47);

        if $r15 != r2 goto label09;

        return r2;

     label08:
        i4 = $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: int I$0>;

        $r9 = $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$2>;

        $r28 = (kotlinx.coroutines.sync.Mutex) $r9;

        r26 = $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$1>;

        $r10 = $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$0>;

        r25 = (androidx.paging.UnbatchedFlowCombiner) $r10;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label09:
        r29 = r25.<androidx.paging.UnbatchedFlowCombiner: java.lang.Object[] values>;

        i6 = lengthof r29;

        i7 = 0;

     label10:
        if i7 >= i6 goto label14;

        r30 = r29[i7];

        r31 = r30;

        $r13 = staticinvoke <androidx.paging.FlowExtKt: java.lang.Object access$getNULL$p()>();

        if r31 != $r13 goto label11;

        $z3 = 1;

        goto label12;

     label11:
        $z3 = 0;

     label12:
        if $z3 == 0 goto label13;

        $z4 = 1;

        goto label15;

     label13:
        i7 = i7 + 1;

        goto label10;

     label14:
        $z4 = 0;

     label15:
        z0 = $z4;

        $r11 = r25.<androidx.paging.UnbatchedFlowCombiner: java.lang.Object[] values>;

        $r11[i4] = r26;

        r32 = r25.<androidx.paging.UnbatchedFlowCombiner: java.lang.Object[] values>;

        i8 = lengthof r32;

        i9 = 0;

     label16:
        if i9 >= i8 goto label20;

        r33 = r32[i9];

        r34 = r33;

        $r12 = staticinvoke <androidx.paging.FlowExtKt: java.lang.Object access$getNULL$p()>();

        if r34 != $r12 goto label17;

        $z5 = 1;

        goto label18;

     label17:
        $z5 = 0;

     label18:
        if $z5 == 0 goto label19;

        $z6 = 0;

        goto label21;

     label19:
        i9 = i9 + 1;

        goto label16;

     label20:
        $z6 = 1;

     label21:
        if $z6 == 0 goto label29;

        if z0 == 0 goto label22;

        $r35 = <androidx.paging.CombineSource: androidx.paging.CombineSource INITIAL>;

        goto label24;

     label22:
        if i4 != 0 goto label23;

        $r35 = <androidx.paging.CombineSource: androidx.paging.CombineSource RECEIVER>;

        goto label24;

     label23:
        $r35 = <androidx.paging.CombineSource: androidx.paging.CombineSource OTHER>;

     label24:
        $r36 = r25.<androidx.paging.UnbatchedFlowCombiner: kotlin.jvm.functions.Function4 send>;

        $r37 = r25.<androidx.paging.UnbatchedFlowCombiner: java.lang.Object[] values>;

        $r38 = $r37[0];

        $r39 = r25.<androidx.paging.UnbatchedFlowCombiner: java.lang.Object[] values>;

        $r40 = $r39[1];

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$0> = r25;

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$1> = $r28;

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$2> = null;

        $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: int label> = 3;

        $r41 = interfaceinvoke $r36.<kotlin.jvm.functions.Function4: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r38, $r40, $r35, $r27);

     label25:
        if $r41 != r2 goto label28;

        return r2;

     label26:
        $r4 = $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$1>;

        $r28 = (kotlinx.coroutines.sync.Mutex) $r4;

        $r5 = $r27.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$0>;

        r25 = (androidx.paging.UnbatchedFlowCombiner) $r5;

     label27:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label28:
        $r7 = r25.<androidx.paging.UnbatchedFlowCombiner: kotlinx.coroutines.CompletableDeferred initialDispatched>;

        $r6 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        interfaceinvoke $r7.<kotlinx.coroutines.CompletableDeferred: boolean complete(java.lang.Object)>($r6);

     label29:
        r42 = <kotlin.Unit: kotlin.Unit INSTANCE>;

     label30:
        interfaceinvoke $r28.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        goto label33;

     label31:
        $r24 := @caughtexception;

        r43 = $r24;

     label32:
        interfaceinvoke $r28.<kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)>(null);

        throw r43;

     label33:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;

     label34:
        r45 = new java.lang.IllegalStateException;

        specialinvoke r45.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r45;

        catch java.lang.Throwable from label09 to label25 with label31;
        catch java.lang.Throwable from label27 to label30 with label31;
        catch java.lang.Throwable from label31 to label32 with label31;
    }

androidx.paging.UnbatchedFlowCombiner$onNext$1
<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$0>
<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$1>
<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object L$2>
<androidx.paging.UnbatchedFlowCombiner$onNext$1: int I$0>
<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object result>
<androidx.paging.UnbatchedFlowCombiner$onNext$1: androidx.paging.UnbatchedFlowCombiner this$0>
<androidx.paging.UnbatchedFlowCombiner$onNext$1: int label>
    void <init>(androidx.paging.UnbatchedFlowCombiner, kotlin.coroutines.Continuation)
    {
        androidx.paging.UnbatchedFlowCombiner$onNext$1 r0;
        androidx.paging.UnbatchedFlowCombiner r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.paging.UnbatchedFlowCombiner$onNext$1;

        r1 := @parameter0: androidx.paging.UnbatchedFlowCombiner;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.paging.UnbatchedFlowCombiner$onNext$1: androidx.paging.UnbatchedFlowCombiner this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.paging.UnbatchedFlowCombiner$onNext$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.paging.UnbatchedFlowCombiner $r3;

        r0 := @this: androidx.paging.UnbatchedFlowCombiner$onNext$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.paging.UnbatchedFlowCombiner$onNext$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.paging.UnbatchedFlowCombiner$onNext$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.paging.UnbatchedFlowCombiner$onNext$1: int label> = $i1;

        $r3 = r0.<androidx.paging.UnbatchedFlowCombiner$onNext$1: androidx.paging.UnbatchedFlowCombiner this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.paging.UnbatchedFlowCombiner: java.lang.Object onNext(int,java.lang.Object,kotlin.coroutines.Continuation)>(0, null, $r2);

        return $r4;
    }

