androidx.wear.compose.material.SwipeableState
<androidx.wear.compose.material.SwipeableState: androidx.wear.compose.material.SwipeableState$Companion Companion>
<androidx.wear.compose.material.SwipeableState: java.lang.Object initialValue>
<androidx.wear.compose.material.SwipeableState: androidx.compose.animation.core.AnimationSpec animationSpec>
<androidx.wear.compose.material.SwipeableState: kotlin.jvm.functions.Function1 confirmStateChange>
<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState currentValue$delegate>
<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState isAnimationRunning$delegate>
<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState offsetState>
<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState overflowState>
<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState absoluteOffset>
<androidx.wear.compose.material.SwipeableState: float initialOffset>
<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState animationTarget>
<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState anchors$delegate>
<androidx.wear.compose.material.SwipeableState: kotlinx.coroutines.flow.Flow latestNonEmptyAnchorsFlow>
<androidx.wear.compose.material.SwipeableState: float minBound>
<androidx.wear.compose.material.SwipeableState: float maxBound>
<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState thresholds$delegate>
<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState velocityThreshold$delegate>
<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState resistance$delegate>
<androidx.wear.compose.material.SwipeableState: androidx.compose.foundation.gestures.DraggableState draggableState>
    public void <init>(java.lang.Object, androidx.compose.animation.core.AnimationSpec, kotlin.jvm.functions.Function1)
    {
        androidx.wear.compose.material.SwipeableState r0;
        java.lang.Object r1, $r5;
        androidx.compose.animation.core.AnimationSpec r2;
        kotlin.jvm.functions.Function1 r3, $r29;
        kotlinx.coroutines.flow.Flow $r4, $r21, $r22;
        androidx.compose.runtime.MutableState $r6, $r8, $r10, $r12, $r14, $r15, $r17, $r24, $r26, $r27;
        java.lang.Boolean $r7;
        java.lang.Float $r9, $r11, $r13, $r25;
        java.util.Map $r16;
        androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1 $r18;
        kotlin.jvm.functions.Function0 $r19;
        androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1 $r20;
        androidx.wear.compose.material.SwipeableState$thresholds$2 $r23;
        androidx.wear.compose.material.SwipeableState$draggableState$1 $r28;
        androidx.compose.foundation.gestures.DraggableState $r30;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.compose.animation.core.AnimationSpec;

        r3 := @parameter2: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "animationSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r3, "confirmStateChange");

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<androidx.wear.compose.material.SwipeableState: java.lang.Object initialValue> = r1;

        r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.animation.core.AnimationSpec animationSpec> = r2;

        r0.<androidx.wear.compose.material.SwipeableState: kotlin.jvm.functions.Function1 confirmStateChange> = r3;

        $r5 = r0.<androidx.wear.compose.material.SwipeableState: java.lang.Object initialValue>;

        $r6 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r5, null, 2, null);

        r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState currentValue$delegate> = $r6;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r8 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r7, null, 2, null);

        r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState isAnimationRunning$delegate> = $r8;

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        $r10 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r9, null, 2, null);

        r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState offsetState> = $r10;

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        $r12 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r11, null, 2, null);

        r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState overflowState> = $r12;

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        $r14 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r13, null, 2, null);

        r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState absoluteOffset> = $r14;

        $r15 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(null, null, 2, null);

        r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState animationTarget> = $r15;

        $r16 = staticinvoke <kotlin.collections.MapsKt: java.util.Map emptyMap()>();

        $r17 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r16, null, 2, null);

        r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState anchors$delegate> = $r17;

        $r18 = new androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1;

        specialinvoke $r18.<androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1: void <init>(androidx.wear.compose.material.SwipeableState)>(r0);

        $r19 = (kotlin.jvm.functions.Function0) $r18;

        $r4 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: kotlinx.coroutines.flow.Flow snapshotFlow(kotlin.jvm.functions.Function0)>($r19);

        $r20 = new androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1;

        specialinvoke $r20.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1: void <init>(kotlinx.coroutines.flow.Flow)>($r4);

        $r21 = (kotlinx.coroutines.flow.Flow) $r20;

        $r22 = staticinvoke <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow take(kotlinx.coroutines.flow.Flow,int)>($r21, 1);

        r0.<androidx.wear.compose.material.SwipeableState: kotlinx.coroutines.flow.Flow latestNonEmptyAnchorsFlow> = $r22;

        r0.<androidx.wear.compose.material.SwipeableState: float minBound> = #-InfinityF;

        r0.<androidx.wear.compose.material.SwipeableState: float maxBound> = #InfinityF;

        $r23 = <androidx.wear.compose.material.SwipeableState$thresholds$2: androidx.wear.compose.material.SwipeableState$thresholds$2 INSTANCE>;

        $r24 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r23, null, 2, null);

        r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState thresholds$delegate> = $r24;

        $r25 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        $r26 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>($r25, null, 2, null);

        r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState velocityThreshold$delegate> = $r26;

        $r27 = staticinvoke <androidx.compose.runtime.SnapshotStateKt: androidx.compose.runtime.MutableState mutableStateOf$default(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy,int,java.lang.Object)>(null, null, 2, null);

        r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState resistance$delegate> = $r27;

        $r28 = new androidx.wear.compose.material.SwipeableState$draggableState$1;

        specialinvoke $r28.<androidx.wear.compose.material.SwipeableState$draggableState$1: void <init>(androidx.wear.compose.material.SwipeableState)>(r0);

        $r29 = (kotlin.jvm.functions.Function1) $r28;

        $r30 = staticinvoke <androidx.compose.foundation.gestures.DraggableKt: androidx.compose.foundation.gestures.DraggableState DraggableState(kotlin.jvm.functions.Function1)>($r29);

        r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.foundation.gestures.DraggableState draggableState> = $r30;

        return;
    }

    public void <init>(java.lang.Object, androidx.compose.animation.core.AnimationSpec, kotlin.jvm.functions.Function1, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.wear.compose.material.SwipeableState r0;
        java.lang.Object r1;
        int i0, $i1, $i2;
        kotlin.jvm.internal.DefaultConstructorMarker r2;
        androidx.wear.compose.material.SwipeableState$1 $r3;
        androidx.wear.compose.material.SwipeableDefaults $r4;
        androidx.compose.animation.core.SpringSpec $r5;
        androidx.compose.animation.core.AnimationSpec r6;
        kotlin.jvm.functions.Function1 r7;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        r1 := @parameter0: java.lang.Object;

        r6 := @parameter1: androidx.compose.animation.core.AnimationSpec;

        r7 := @parameter2: kotlin.jvm.functions.Function1;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $r4 = <androidx.wear.compose.material.SwipeableDefaults: androidx.wear.compose.material.SwipeableDefaults INSTANCE>;

        $r5 = virtualinvoke $r4.<androidx.wear.compose.material.SwipeableDefaults: androidx.compose.animation.core.SpringSpec getAnimationSpec()>();

        r6 = (androidx.compose.animation.core.AnimationSpec) $r5;

     label1:
        $i2 = i0 & 4;

        if $i2 == 0 goto label2;

        $r3 = <androidx.wear.compose.material.SwipeableState$1: androidx.wear.compose.material.SwipeableState$1 INSTANCE>;

        r7 = (kotlin.jvm.functions.Function1) $r3;

     label2:
        specialinvoke r0.<androidx.wear.compose.material.SwipeableState: void <init>(java.lang.Object,androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function1)>(r1, r6, r7);

        return;
    }

    public final java.lang.Object getInitialValue$compose_material_release()
    {
        androidx.wear.compose.material.SwipeableState r0;
        java.lang.Object $r1;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r1 = r0.<androidx.wear.compose.material.SwipeableState: java.lang.Object initialValue>;

        return $r1;
    }

    public final androidx.compose.animation.core.AnimationSpec getAnimationSpec$compose_material_release()
    {
        androidx.wear.compose.material.SwipeableState r0;
        androidx.compose.animation.core.AnimationSpec $r1;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r1 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.animation.core.AnimationSpec animationSpec>;

        return $r1;
    }

    public final kotlin.jvm.functions.Function1 getConfirmStateChange$compose_material_release()
    {
        androidx.wear.compose.material.SwipeableState r0;
        kotlin.jvm.functions.Function1 $r1;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r1 = r0.<androidx.wear.compose.material.SwipeableState: kotlin.jvm.functions.Function1 confirmStateChange>;

        return $r1;
    }

    public final java.lang.Object getCurrentValue()
    {
        androidx.wear.compose.material.SwipeableState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r2 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState currentValue$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        return $r3;
    }

    private final void setCurrentValue(java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState r0;
        java.lang.Object r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState currentValue$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public static void getCurrentValue$annotations()
    {
        return;
    }

    public final boolean isAnimationRunning()
    {
        androidx.wear.compose.material.SwipeableState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;
        boolean $z0;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r2 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState isAnimationRunning$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private final void setAnimationRunning(boolean)
    {
        androidx.wear.compose.material.SwipeableState r0;
        boolean z0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Boolean r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        z0 := @parameter0: boolean;

        $r1 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState isAnimationRunning$delegate>;

        r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public static void isAnimationRunning$annotations()
    {
        return;
    }

    public final androidx.compose.runtime.State getOffset()
    {
        androidx.wear.compose.material.SwipeableState r0;
        androidx.compose.runtime.MutableState $r1;
        androidx.compose.runtime.State $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r1 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState offsetState>;

        $r2 = (androidx.compose.runtime.State) $r1;

        return $r2;
    }

    public static void getOffset$annotations()
    {
        return;
    }

    public final androidx.compose.runtime.State getOverflow()
    {
        androidx.wear.compose.material.SwipeableState r0;
        androidx.compose.runtime.MutableState $r1;
        androidx.compose.runtime.State $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r1 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState overflowState>;

        $r2 = (androidx.compose.runtime.State) $r1;

        return $r2;
    }

    public static void getOverflow$annotations()
    {
        return;
    }

    public final java.util.Map getAnchors$compose_material_release()
    {
        androidx.wear.compose.material.SwipeableState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.util.Map $r4;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r2 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState anchors$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.util.Map) $r3;

        return $r4;
    }

    public final void setAnchors$compose_material_release(java.util.Map)
    {
        androidx.wear.compose.material.SwipeableState r0;
        java.util.Map r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        $r2 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState anchors$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final float getMinBound$compose_material_release()
    {
        androidx.wear.compose.material.SwipeableState r0;
        float $f0;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $f0 = r0.<androidx.wear.compose.material.SwipeableState: float minBound>;

        return $f0;
    }

    public final void setMinBound$compose_material_release(float)
    {
        androidx.wear.compose.material.SwipeableState r0;
        float f0;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        f0 := @parameter0: float;

        r0.<androidx.wear.compose.material.SwipeableState: float minBound> = f0;

        return;
    }

    public final float getMaxBound$compose_material_release()
    {
        androidx.wear.compose.material.SwipeableState r0;
        float $f0;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $f0 = r0.<androidx.wear.compose.material.SwipeableState: float maxBound>;

        return $f0;
    }

    public final void setMaxBound$compose_material_release(float)
    {
        androidx.wear.compose.material.SwipeableState r0;
        float f0;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        f0 := @parameter0: float;

        r0.<androidx.wear.compose.material.SwipeableState: float maxBound> = f0;

        return;
    }

    public final void ensureInit$compose_material_release(java.util.Map)
    {
        androidx.wear.compose.material.SwipeableState r0;
        java.util.Map r1, $r3;
        java.lang.Float r2;
        boolean $z0;
        java.lang.Object $r4;
        androidx.compose.runtime.MutableState $r5, $r6;
        float $f0;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r8, $r9;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        r1 := @parameter0: java.util.Map;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "newAnchors");

        $r3 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.util.Map getAnchors$compose_material_release()>();

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.lang.Object getCurrentValue()>();

        r2 = staticinvoke <androidx.wear.compose.material.SwipeableKt: java.lang.Float access$getOffset(java.util.Map,java.lang.Object)>(r1, $r4);

        if r2 != null goto label1;

        $r9 = "The initial value must have an associated anchor.";

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label1:
        $r5 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState offsetState>;

        interfaceinvoke $r5.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        $r6 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState absoluteOffset>;

        interfaceinvoke $r6.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        $f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        r0.<androidx.wear.compose.material.SwipeableState: float initialOffset> = $f0;

     label2:
        return;
    }

    public final java.lang.Object processNewAnchors$compose_material_release(java.util.Map, java.util.Map, kotlin.coroutines.Continuation)
    {
        java.util.Map r0, r68;
        kotlin.coroutines.Continuation r1, r97, r98, r99;
        java.lang.Iterable $r2, $r11, $r14, $r21, $r24, $r46, $r49, $r62, $r65, $r83;
        java.lang.Object $r3, r4, $r6, $r7, $r9, $r16, $r17, $r19, $r28, $r30, $r31, $r36, $r40, $r51, $r52, $r57, $r60, r73, $r76, r77, r78, r80, $r81, r82, $r85, r86, r87, $r90;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z13, z14, z15, z16;
        java.lang.Float $r8, $r12, $r15, $r18, $r22, $r25, $r32, $r47, $r50, $r59, $r63, $r66, r70, r72, r74;
        java.util.Set $r10, $r13, $r20, $r23, $r33, $r42, $r45, $r48, $r61, $r64;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, f19, f20, f21, f22, f23, f24, f25, f26;
        kotlin.Unit $r26, $r93;
        androidx.compose.runtime.MutableState $r27;
        androidx.compose.runtime.State $r29, $r35, $r39;
        java.lang.Number $r34, $r37, $r38, $r41, $r43, $r44, $r79, $r88;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r54, r71;
        java.lang.Throwable $r56, $r58, r91, r92;
        androidx.wear.compose.material.SwipeableState r67;
        androidx.wear.compose.material.SwipeableState$processNewAnchors$1 $r69, r94;
        java.util.Iterator r75, r84;
        androidx.compose.animation.core.AnimationSpec $r89;
        java.lang.IllegalArgumentException r95;
        java.lang.IllegalStateException r96;

        r67 := @this: androidx.wear.compose.material.SwipeableState;

        r0 := @parameter0: java.util.Map;

        r68 := @parameter1: java.util.Map;

        r1 := @parameter2: kotlin.coroutines.Continuation;

        $z1 = r1 instanceof androidx.wear.compose.material.SwipeableState$processNewAnchors$1;

        if $z1 == 0 goto label01;

        $r69 = (androidx.wear.compose.material.SwipeableState$processNewAnchors$1) r1;

        $i2 = $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: int label>;

        $i3 = $i2 & -2147483648;

        if $i3 == 0 goto label01;

        $i4 = $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: int label>;

        $i5 = $i4 - -2147483648;

        $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: int label> = $i5;

        goto label02;

     label01:
        r94 = new androidx.wear.compose.material.SwipeableState$processNewAnchors$1;

        specialinvoke r94.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: void <init>(androidx.wear.compose.material.SwipeableState,kotlin.coroutines.Continuation)>(r67, r1);

        $r69 = r94;

     label02:
        $r3 = $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: java.lang.Object result>;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i6 = $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: int label>;

        tableswitch($i6)
        {
            case 0: goto label03;
            case 1: goto label05;
            case 2: goto label26;
            case 3: goto label31;
            default: goto label37;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        $z2 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>();

        if $z2 == 0 goto label07;

        $r45 = interfaceinvoke r68.<java.util.Map: java.util.Set keySet()>();

        $r46 = (java.lang.Iterable) $r45;

        $r47 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Float minOrNull(java.lang.Iterable)>($r46);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r47);

        $f12 = virtualinvoke $r47.<java.lang.Float: float floatValue()>();

        r67.<androidx.wear.compose.material.SwipeableState: float minBound> = $f12;

        $r48 = interfaceinvoke r68.<java.util.Map: java.util.Set keySet()>();

        $r49 = (java.lang.Iterable) $r48;

        $r50 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Float maxOrNull(java.lang.Iterable)>($r49);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r50);

        $f13 = virtualinvoke $r50.<java.lang.Float: float floatValue()>();

        r67.<androidx.wear.compose.material.SwipeableState: float maxBound> = $f13;

        $r51 = virtualinvoke r67.<androidx.wear.compose.material.SwipeableState: java.lang.Object getCurrentValue()>();

        r70 = staticinvoke <androidx.wear.compose.material.SwipeableKt: java.lang.Float access$getOffset(java.util.Map,java.lang.Object)>(r68, $r51);

        if r70 != null goto label04;

        z11 = 0;

        r71 = "The initial value must have an associated anchor.";

        r95 = new java.lang.IllegalArgumentException;

        $r54 = virtualinvoke r71.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r95.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r54);

        throw r95;

     label04:
        $f14 = virtualinvoke r70.<java.lang.Float: float floatValue()>();

        $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: int label> = 1;

        r97 = (kotlin.coroutines.Continuation) $r69;

        $r52 = specialinvoke r67.<androidx.wear.compose.material.SwipeableState: java.lang.Object snapInternalToOffset(float,kotlin.coroutines.Continuation)>($f14, r97);

        if $r52 != r4 goto label06;

        return r4;

     label05:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

     label06:
        $r26 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r26;

     label07:
        $z3 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r68, r0);

        if $z3 != 0 goto label36;

        r67.<androidx.wear.compose.material.SwipeableState: float minBound> = #-InfinityF;

        r67.<androidx.wear.compose.material.SwipeableState: float maxBound> = #InfinityF;

        $r27 = r67.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState animationTarget>;

        $r28 = interfaceinvoke $r27.<androidx.compose.runtime.MutableState: java.lang.Object getValue()>();

        r72 = (java.lang.Float) $r28;

        if r72 == null goto label14;

        r73 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r72);

        r74 = staticinvoke <androidx.wear.compose.material.SwipeableKt: java.lang.Float access$getOffset(java.util.Map,java.lang.Object)>(r68, r73);

        if r74 == null goto label08;

        $f17 = virtualinvoke r74.<java.lang.Float: float floatValue()>();

        goto label23;

     label08:
        $r42 = interfaceinvoke r68.<java.util.Map: java.util.Set keySet()>();

        $r2 = (java.lang.Iterable) $r42;

        r75 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z8 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>();

        if $z8 != 0 goto label09;

        $r76 = null;

        goto label13;

     label09:
        r77 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>();

        $z9 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>();

        if $z9 != 0 goto label10;

        $r76 = r77;

        goto label13;

     label10:
        $r43 = (java.lang.Number) r77;

        f18 = virtualinvoke $r43.<java.lang.Number: float floatValue()>();

        z13 = 0;

        $f8 = virtualinvoke r72.<java.lang.Float: float floatValue()>();

        $f9 = f18 - $f8;

        f19 = staticinvoke <java.lang.Math: float abs(float)>($f9);

     label11:
        r78 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>();

        $r44 = (java.lang.Number) r78;

        f20 = virtualinvoke $r44.<java.lang.Number: float floatValue()>();

        z14 = 0;

        $f10 = virtualinvoke r72.<java.lang.Float: float floatValue()>();

        $f11 = f20 - $f10;

        f21 = staticinvoke <java.lang.Math: float abs(float)>($f11);

        $i1 = staticinvoke <java.lang.Float: int compare(float,float)>(f19, f21);

        if $i1 <= 0 goto label12;

        r77 = r78;

        f19 = f21;

     label12:
        $z10 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>();

        if $z10 != 0 goto label11;

        $r76 = r77;

     label13:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r76);

        $r79 = (java.lang.Number) $r76;

        $f17 = virtualinvoke $r79.<java.lang.Number: float floatValue()>();

        goto label23;

     label14:
        $r29 = virtualinvoke r67.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.State getOffset()>();

        $r30 = interfaceinvoke $r29.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        r80 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r30);

        $r31 = virtualinvoke r67.<androidx.wear.compose.material.SwipeableState: java.lang.Object getCurrentValue()>();

        $z4 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(r80, $r31);

        if $z4 == 0 goto label15;

        $r81 = virtualinvoke r67.<androidx.wear.compose.material.SwipeableState: java.lang.Object getCurrentValue()>();

        goto label16;

     label15:
        $r81 = r80;

     label16:
        r82 = $r81;

        $r32 = staticinvoke <androidx.wear.compose.material.SwipeableKt: java.lang.Float access$getOffset(java.util.Map,java.lang.Object)>(r68, r82);

        if $r32 == null goto label17;

        $f17 = virtualinvoke $r32.<java.lang.Float: float floatValue()>();

        goto label23;

     label17:
        $r33 = interfaceinvoke r68.<java.util.Map: java.util.Set keySet()>();

        $r83 = (java.lang.Iterable) $r33;

        z15 = 0;

        r84 = interfaceinvoke $r83.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z5 = interfaceinvoke r84.<java.util.Iterator: boolean hasNext()>();

        if $z5 != 0 goto label18;

        $r85 = null;

        goto label22;

     label18:
        r86 = interfaceinvoke r84.<java.util.Iterator: java.lang.Object next()>();

        $z6 = interfaceinvoke r84.<java.util.Iterator: boolean hasNext()>();

        if $z6 != 0 goto label19;

        $r85 = r86;

        goto label22;

     label19:
        $r34 = (java.lang.Number) r86;

        f22 = virtualinvoke $r34.<java.lang.Number: float floatValue()>();

        z16 = 0;

        $r35 = virtualinvoke r67.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.State getOffset()>();

        $r36 = interfaceinvoke $r35.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r37 = (java.lang.Number) $r36;

        $f4 = virtualinvoke $r37.<java.lang.Number: float floatValue()>();

        $f5 = f22 - $f4;

        f23 = staticinvoke <java.lang.Math: float abs(float)>($f5);

     label20:
        r87 = interfaceinvoke r84.<java.util.Iterator: java.lang.Object next()>();

        $r38 = (java.lang.Number) r87;

        f24 = virtualinvoke $r38.<java.lang.Number: float floatValue()>();

        $r39 = virtualinvoke r67.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.State getOffset()>();

        $r40 = interfaceinvoke $r39.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r41 = (java.lang.Number) $r40;

        $f6 = virtualinvoke $r41.<java.lang.Number: float floatValue()>();

        $f7 = f24 - $f6;

        f25 = staticinvoke <java.lang.Math: float abs(float)>($f7);

        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>(f23, f25);

        if $i0 <= 0 goto label21;

        r86 = r87;

        f23 = f25;

     label21:
        $z7 = interfaceinvoke r84.<java.util.Iterator: boolean hasNext()>();

        if $z7 != 0 goto label20;

        $r85 = r86;

     label22:
        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r85);

        $r88 = (java.lang.Number) $r85;

        $f17 = virtualinvoke $r88.<java.lang.Number: float floatValue()>();

     label23:
        f26 = $f17;

     label24:
        $r89 = r67.<androidx.wear.compose.material.SwipeableState: androidx.compose.animation.core.AnimationSpec animationSpec>;

        $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: java.lang.Object L$0> = r67;

        $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: java.lang.Object L$1> = r68;

        $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: float F$0> = f26;

        $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: int label> = 2;

        r98 = (kotlin.coroutines.Continuation) $r69;

        $r90 = specialinvoke r67.<androidx.wear.compose.material.SwipeableState: java.lang.Object animateInternalToOffset(float,androidx.compose.animation.core.AnimationSpec,kotlin.coroutines.Continuation)>(f26, $r89, r98);

     label25:
        if $r90 != r4 goto label28;

        return r4;

     label26:
        f26 = $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: float F$0>;

        $r16 = $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: java.lang.Object L$1>;

        r68 = (java.util.Map) $r16;

        $r17 = $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: java.lang.Object L$0>;

        r67 = (androidx.wear.compose.material.SwipeableState) $r17;

     label27:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

     label28:
        $r18 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(f26);

        $r19 = staticinvoke <kotlin.collections.MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)>(r68, $r18);

        specialinvoke r67.<androidx.wear.compose.material.SwipeableState: void setCurrentValue(java.lang.Object)>($r19);

        $r20 = interfaceinvoke r68.<java.util.Map: java.util.Set keySet()>();

        $r21 = (java.lang.Iterable) $r20;

        $r22 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Float minOrNull(java.lang.Iterable)>($r21);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r22);

        $f2 = virtualinvoke $r22.<java.lang.Float: float floatValue()>();

        r67.<androidx.wear.compose.material.SwipeableState: float minBound> = $f2;

        $r23 = interfaceinvoke r68.<java.util.Map: java.util.Set keySet()>();

        $r24 = (java.lang.Iterable) $r23;

        $r25 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Float maxOrNull(java.lang.Iterable)>($r24);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r25);

        $f3 = virtualinvoke $r25.<java.lang.Float: float floatValue()>();

        r67.<androidx.wear.compose.material.SwipeableState: float maxBound> = $f3;

        goto label36;

     label29:
        $r56 := @caughtexception;

        r91 = $r56;

        $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: java.lang.Object L$0> = r67;

        $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: java.lang.Object L$1> = r68;

        $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: float F$0> = f26;

        $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: int label> = 3;

        r99 = (kotlin.coroutines.Continuation) $r69;

        $r57 = specialinvoke r67.<androidx.wear.compose.material.SwipeableState: java.lang.Object snapInternalToOffset(float,kotlin.coroutines.Continuation)>(f26, r99);

     label30:
        if $r57 != r4 goto label33;

        return r4;

     label31:
        f26 = $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: float F$0>;

        $r6 = $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: java.lang.Object L$1>;

        r68 = (java.util.Map) $r6;

        $r7 = $r69.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: java.lang.Object L$0>;

        r67 = (androidx.wear.compose.material.SwipeableState) $r7;

     label32:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

     label33:
        $r8 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(f26);

        $r9 = staticinvoke <kotlin.collections.MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)>(r68, $r8);

        specialinvoke r67.<androidx.wear.compose.material.SwipeableState: void setCurrentValue(java.lang.Object)>($r9);

        $r10 = interfaceinvoke r68.<java.util.Map: java.util.Set keySet()>();

        $r11 = (java.lang.Iterable) $r10;

        $r12 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Float minOrNull(java.lang.Iterable)>($r11);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r12);

        $f0 = virtualinvoke $r12.<java.lang.Float: float floatValue()>();

        r67.<androidx.wear.compose.material.SwipeableState: float minBound> = $f0;

        $r13 = interfaceinvoke r68.<java.util.Map: java.util.Set keySet()>();

        $r14 = (java.lang.Iterable) $r13;

        $r15 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Float maxOrNull(java.lang.Iterable)>($r14);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r15);

        $f1 = virtualinvoke $r15.<java.lang.Float: float floatValue()>();

        r67.<androidx.wear.compose.material.SwipeableState: float maxBound> = $f1;

        goto label36;

     label34:
        $r58 := @caughtexception;

        r92 = $r58;

     label35:
        $r59 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(f26);

        $r60 = staticinvoke <kotlin.collections.MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)>(r68, $r59);

        specialinvoke r67.<androidx.wear.compose.material.SwipeableState: void setCurrentValue(java.lang.Object)>($r60);

        $r61 = interfaceinvoke r68.<java.util.Map: java.util.Set keySet()>();

        $r62 = (java.lang.Iterable) $r61;

        $r63 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Float minOrNull(java.lang.Iterable)>($r62);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r63);

        $f15 = virtualinvoke $r63.<java.lang.Float: float floatValue()>();

        r67.<androidx.wear.compose.material.SwipeableState: float minBound> = $f15;

        $r64 = interfaceinvoke r68.<java.util.Map: java.util.Set keySet()>();

        $r65 = (java.lang.Iterable) $r64;

        $r66 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Float maxOrNull(java.lang.Iterable)>($r65);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r66);

        $f16 = virtualinvoke $r66.<java.lang.Float: float floatValue()>();

        r67.<androidx.wear.compose.material.SwipeableState: float maxBound> = $f16;

        throw r92;

     label36:
        $r93 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r93;

     label37:
        r96 = new java.lang.IllegalStateException;

        specialinvoke r96.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r96;

        catch java.util.concurrent.CancellationException from label24 to label25 with label29;
        catch java.util.concurrent.CancellationException from label27 to label28 with label29;
        catch java.lang.Throwable from label24 to label25 with label34;
        catch java.lang.Throwable from label27 to label28 with label34;
        catch java.lang.Throwable from label29 to label30 with label34;
        catch java.lang.Throwable from label32 to label33 with label34;
        catch java.lang.Throwable from label34 to label35 with label34;
    }

    public final kotlin.jvm.functions.Function2 getThresholds$compose_material_release()
    {
        androidx.wear.compose.material.SwipeableState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        kotlin.jvm.functions.Function2 $r4;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r2 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState thresholds$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (kotlin.jvm.functions.Function2) $r3;

        return $r4;
    }

    public final void setThresholds$compose_material_release(kotlin.jvm.functions.Function2)
    {
        androidx.wear.compose.material.SwipeableState r0;
        kotlin.jvm.functions.Function2 r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        r1 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        $r2 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState thresholds$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final float getVelocityThreshold$compose_material_release()
    {
        androidx.wear.compose.material.SwipeableState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        java.lang.Number $r4;
        float $f0;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r2 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState velocityThreshold$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        return $f0;
    }

    public final void setVelocityThreshold$compose_material_release(float)
    {
        androidx.wear.compose.material.SwipeableState r0;
        float f0;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Float r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState velocityThreshold$delegate>;

        r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r2);

        return;
    }

    public final androidx.wear.compose.material.ResistanceConfig getResistance$compose_material_release()
    {
        androidx.wear.compose.material.SwipeableState r0;
        androidx.compose.runtime.State $r1;
        androidx.compose.runtime.MutableState $r2;
        java.lang.Object $r3;
        androidx.wear.compose.material.ResistanceConfig $r4;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r2 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState resistance$delegate>;

        $r1 = (androidx.compose.runtime.State) $r2;

        $r3 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r4 = (androidx.wear.compose.material.ResistanceConfig) $r3;

        return $r4;
    }

    public final void setResistance$compose_material_release(androidx.wear.compose.material.ResistanceConfig)
    {
        androidx.wear.compose.material.SwipeableState r0;
        androidx.wear.compose.material.ResistanceConfig r1;
        androidx.compose.runtime.MutableState $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        r1 := @parameter0: androidx.wear.compose.material.ResistanceConfig;

        $r2 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState resistance$delegate>;

        interfaceinvoke $r2.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r1);

        return;
    }

    public final androidx.compose.foundation.gestures.DraggableState getDraggableState$compose_material_release()
    {
        androidx.wear.compose.material.SwipeableState r0;
        androidx.compose.foundation.gestures.DraggableState $r1;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r1 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.foundation.gestures.DraggableState draggableState>;

        return $r1;
    }

    private final java.lang.Object snapInternalToOffset(float, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState r0;
        float f0;
        kotlin.coroutines.Continuation $r1;
        androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2 $r2;
        androidx.compose.foundation.gestures.DraggableState $r3;
        kotlin.jvm.functions.Function2 $r4;
        java.lang.Object $r5, $r6;
        kotlin.Unit $r7;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        f0 := @parameter0: float;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.foundation.gestures.DraggableState draggableState>;

        $r2 = new androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2;

        specialinvoke $r2.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: void <init>(float,androidx.wear.compose.material.SwipeableState,kotlin.coroutines.Continuation)>(f0, r0, null);

        $r4 = (kotlin.jvm.functions.Function2) $r2;

        $r5 = staticinvoke <androidx.compose.foundation.gestures.DraggableState: java.lang.Object drag$default(androidx.compose.foundation.gestures.DraggableState,androidx.compose.foundation.MutatePriority,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object)>($r3, null, $r4, $r1, 1, null);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label1;

        return $r5;

     label1:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

    private final java.lang.Object animateInternalToOffset(float, androidx.compose.animation.core.AnimationSpec, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState r0;
        float f0;
        androidx.compose.animation.core.AnimationSpec r1;
        kotlin.coroutines.Continuation $r2;
        androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2 $r3;
        androidx.compose.foundation.gestures.DraggableState $r4;
        kotlin.jvm.functions.Function2 $r5;
        java.lang.Object $r6, $r7;
        kotlin.Unit $r8;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        f0 := @parameter0: float;

        r1 := @parameter1: androidx.compose.animation.core.AnimationSpec;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        $r4 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.foundation.gestures.DraggableState draggableState>;

        $r3 = new androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2;

        specialinvoke $r3.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: void <init>(androidx.wear.compose.material.SwipeableState,float,androidx.compose.animation.core.AnimationSpec,kotlin.coroutines.Continuation)>(r0, f0, r1, null);

        $r5 = (kotlin.jvm.functions.Function2) $r3;

        $r6 = staticinvoke <androidx.compose.foundation.gestures.DraggableState: java.lang.Object drag$default(androidx.compose.foundation.gestures.DraggableState,androidx.compose.foundation.MutatePriority,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object)>($r4, null, $r5, $r2, 1, null);

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r6 != $r7 goto label1;

        return $r6;

     label1:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;
    }

    public final java.lang.Object getTargetValue()
    {
        androidx.wear.compose.material.SwipeableState r0;
        float f0, $f1, $f2, $f3;
        androidx.compose.runtime.MutableState $r1;
        java.lang.Object $r2, $r5, $r8, $r11, $r18;
        java.lang.Float $r3, $r9, $r17;
        androidx.compose.runtime.State $r4, $r10;
        java.lang.Number $r6, $r12;
        java.util.Map $r7, $r13, $r16;
        java.util.Set $r14;
        kotlin.jvm.functions.Function2 $r15;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r1 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState animationTarget>;

        $r2 = interfaceinvoke $r1.<androidx.compose.runtime.MutableState: java.lang.Object getValue()>();

        $r3 = (java.lang.Float) $r2;

        if $r3 == null goto label1;

        $f2 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        goto label4;

     label1:
        $r4 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.State getOffset()>();

        $r5 = interfaceinvoke $r4.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r6 = (java.lang.Number) $r5;

        $f1 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        $r7 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.util.Map getAnchors$compose_material_release()>();

        $r8 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.lang.Object getCurrentValue()>();

        $r9 = staticinvoke <androidx.wear.compose.material.SwipeableKt: java.lang.Float access$getOffset(java.util.Map,java.lang.Object)>($r7, $r8);

        if $r9 == null goto label2;

        $f3 = virtualinvoke $r9.<java.lang.Float: float floatValue()>();

        goto label3;

     label2:
        $r10 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.State getOffset()>();

        $r11 = interfaceinvoke $r10.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r12 = (java.lang.Number) $r11;

        $f3 = virtualinvoke $r12.<java.lang.Number: float floatValue()>();

     label3:
        $r13 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.util.Map getAnchors$compose_material_release()>();

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Set keySet()>();

        $r15 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: kotlin.jvm.functions.Function2 getThresholds$compose_material_release()>();

        $f2 = staticinvoke <androidx.wear.compose.material.SwipeableKt: float access$computeTarget(float,float,java.util.Set,kotlin.jvm.functions.Function2,float,float)>($f1, $f3, $r14, $r15, 0.0F, #InfinityF);

     label4:
        f0 = $f2;

        $r16 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.util.Map getAnchors$compose_material_release()>();

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r18 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        if $r18 != null goto label5;

        $r18 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.lang.Object getCurrentValue()>();

     label5:
        return $r18;
    }

    public static void getTargetValue$annotations()
    {
        return;
    }

    public final androidx.wear.compose.material.SwipeProgress getProgress()
    {
        androidx.wear.compose.material.SwipeableState r0;
        java.util.List r1;
        kotlin.Pair r2, $r29;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, f7;
        androidx.compose.runtime.State $r3, $r22;
        java.lang.Object $r4, $r9, $r11, $r12, $r13, $r14, $r16, $r23, $r25, $r26, r27, r28;
        java.lang.Number $r5, $r15, $r17, $r24;
        java.util.Map $r6, $r8, $r10, $r18, $r20;
        java.util.Set $r7;
        int $i0;
        byte $b1;
        java.lang.Float $r19, $r21;
        androidx.wear.compose.material.SwipeProgress $r30;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r3 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.State getOffset()>();

        $r4 = interfaceinvoke $r3.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r5 = (java.lang.Number) $r4;

        $f2 = virtualinvoke $r5.<java.lang.Number: float floatValue()>();

        $r6 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.util.Map getAnchors$compose_material_release()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        r1 = staticinvoke <androidx.wear.compose.material.SwipeableKt: java.util.List access$findBounds(float,java.util.Set)>($f2, $r7);

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        r27 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.lang.Object getCurrentValue()>();

        r28 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.lang.Object getCurrentValue()>();

        f7 = 1.0F;

        goto label6;

     label2:
        $r8 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.util.Map getAnchors$compose_material_release()>();

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r27 = staticinvoke <kotlin.collections.MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)>($r8, $r9);

        $r10 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.util.Map getAnchors$compose_material_release()>();

        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r28 = staticinvoke <kotlin.collections.MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)>($r10, $r11);

        f7 = 1.0F;

        goto label6;

     label3:
        $f3 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: float getDirection()>();

        $b1 = $f3 cmpl 0.0F;

        if $b1 <= 0 goto label4;

        $r25 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r26 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        $r29 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r25, $r26);

        goto label5;

     label4:
        $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        $r13 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r29 = staticinvoke <kotlin.TuplesKt: kotlin.Pair 'to'(java.lang.Object,java.lang.Object)>($r12, $r13);

     label5:
        r2 = $r29;

        $r14 = virtualinvoke r2.<kotlin.Pair: java.lang.Object component1()>();

        $r15 = (java.lang.Number) $r14;

        f0 = virtualinvoke $r15.<java.lang.Number: float floatValue()>();

        $r16 = virtualinvoke r2.<kotlin.Pair: java.lang.Object component2()>();

        $r17 = (java.lang.Number) $r16;

        f1 = virtualinvoke $r17.<java.lang.Number: float floatValue()>();

        $r18 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.util.Map getAnchors$compose_material_release()>();

        $r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r27 = staticinvoke <kotlin.collections.MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)>($r18, $r19);

        $r20 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.util.Map getAnchors$compose_material_release()>();

        $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        r28 = staticinvoke <kotlin.collections.MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)>($r20, $r21);

        $r22 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.State getOffset()>();

        $r23 = interfaceinvoke $r22.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r24 = (java.lang.Number) $r23;

        $f4 = virtualinvoke $r24.<java.lang.Number: float floatValue()>();

        $f6 = $f4 - f0;

        $f5 = f1 - f0;

        f7 = $f6 / $f5;

     label6:
        $r30 = new androidx.wear.compose.material.SwipeProgress;

        specialinvoke $r30.<androidx.wear.compose.material.SwipeProgress: void <init>(java.lang.Object,java.lang.Object,float)>(r27, r28, f7);

        return $r30;
    }

    public static void getProgress$annotations()
    {
        return;
    }

    public final float getDirection()
    {
        androidx.wear.compose.material.SwipeableState r0;
        float f0, $f1, $f2, $f3;
        java.util.Map $r1;
        java.lang.Object $r2, $r6;
        java.lang.Float $r3;
        java.lang.Number $r4, $r7;
        androidx.compose.runtime.State $r5;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        $r1 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.util.Map getAnchors$compose_material_release()>();

        $r2 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.lang.Object getCurrentValue()>();

        $r3 = staticinvoke <androidx.wear.compose.material.SwipeableKt: java.lang.Float access$getOffset(java.util.Map,java.lang.Object)>($r1, $r2);

        if $r3 == null goto label1;

        $r4 = (java.lang.Number) $r3;

        f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.State getOffset()>();

        $r6 = interfaceinvoke $r5.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r7 = (java.lang.Number) $r6;

        $f1 = virtualinvoke $r7.<java.lang.Number: float floatValue()>();

        $f2 = $f1 - f0;

        $f3 = staticinvoke <java.lang.Math: float signum(float)>($f2);

        goto label2;

     label1:
        $f3 = 0.0F;

     label2:
        return $f3;
    }

    public static void getDirection$annotations()
    {
        return;
    }

    public final java.lang.Object snapTo(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState r0;
        java.lang.Object r1, $r6, $r7;
        kotlin.coroutines.Continuation $r2;
        androidx.wear.compose.material.SwipeableState$snapTo$2 $r3;
        kotlinx.coroutines.flow.Flow $r4;
        kotlinx.coroutines.flow.FlowCollector $r5;
        kotlin.Unit $r8;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = r0.<androidx.wear.compose.material.SwipeableState: kotlinx.coroutines.flow.Flow latestNonEmptyAnchorsFlow>;

        $r3 = new androidx.wear.compose.material.SwipeableState$snapTo$2;

        specialinvoke $r3.<androidx.wear.compose.material.SwipeableState$snapTo$2: void <init>(java.lang.Object,androidx.wear.compose.material.SwipeableState)>(r1, r0);

        $r5 = (kotlinx.coroutines.flow.FlowCollector) $r3;

        $r6 = interfaceinvoke $r4.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r5, $r2);

        $r7 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r6 != $r7 goto label1;

        return $r6;

     label1:
        $r8 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r8;
    }

    public final java.lang.Object animateTo(java.lang.Object, androidx.compose.animation.core.AnimationSpec, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState r0;
        java.lang.Object r1, $r7, $r8;
        androidx.compose.animation.core.AnimationSpec r2;
        kotlin.coroutines.Continuation $r3;
        androidx.wear.compose.material.SwipeableState$animateTo$2 $r4;
        kotlinx.coroutines.flow.Flow $r5;
        kotlinx.coroutines.flow.FlowCollector $r6;
        kotlin.Unit $r9;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: androidx.compose.animation.core.AnimationSpec;

        $r3 := @parameter2: kotlin.coroutines.Continuation;

        $r5 = r0.<androidx.wear.compose.material.SwipeableState: kotlinx.coroutines.flow.Flow latestNonEmptyAnchorsFlow>;

        $r4 = new androidx.wear.compose.material.SwipeableState$animateTo$2;

        specialinvoke $r4.<androidx.wear.compose.material.SwipeableState$animateTo$2: void <init>(java.lang.Object,androidx.wear.compose.material.SwipeableState,androidx.compose.animation.core.AnimationSpec)>(r1, r0, r2);

        $r6 = (kotlinx.coroutines.flow.FlowCollector) $r4;

        $r7 = interfaceinvoke $r5.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r6, $r3);

        $r8 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r7 != $r8 goto label1;

        return $r7;

     label1:
        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r9;
    }

    public static java.lang.Object animateTo$default(androidx.wear.compose.material.SwipeableState, java.lang.Object, androidx.compose.animation.core.AnimationSpec, kotlin.coroutines.Continuation, int, java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState r0;
        java.lang.Object r1, r3, $r4;
        kotlin.coroutines.Continuation r2;
        int i0, $i1;
        java.lang.UnsupportedOperationException $r5;
        androidx.compose.animation.core.AnimationSpec r6;

        r0 := @parameter0: androidx.wear.compose.material.SwipeableState;

        r1 := @parameter1: java.lang.Object;

        r6 := @parameter2: androidx.compose.animation.core.AnimationSpec;

        r2 := @parameter3: kotlin.coroutines.Continuation;

        i0 := @parameter4: int;

        r3 := @parameter5: java.lang.Object;

        if r3 == null goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Super calls with default arguments not supported in this target, function: animateTo");

        throw $r5;

     label1:
        $i1 = i0 & 2;

        if $i1 == 0 goto label2;

        r6 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.animation.core.AnimationSpec animationSpec>;

     label2:
        $r4 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState: java.lang.Object animateTo(java.lang.Object,androidx.compose.animation.core.AnimationSpec,kotlin.coroutines.Continuation)>(r1, r6, r2);

        return $r4;
    }

    public final java.lang.Object performFling(float, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState r0;
        float f0;
        kotlin.coroutines.Continuation $r1;
        androidx.wear.compose.material.SwipeableState$performFling$2 $r2;
        kotlinx.coroutines.flow.Flow $r3;
        kotlinx.coroutines.flow.FlowCollector $r4;
        java.lang.Object $r5, $r6;
        kotlin.Unit $r7;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        f0 := @parameter0: float;

        $r1 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = r0.<androidx.wear.compose.material.SwipeableState: kotlinx.coroutines.flow.Flow latestNonEmptyAnchorsFlow>;

        $r2 = new androidx.wear.compose.material.SwipeableState$performFling$2;

        specialinvoke $r2.<androidx.wear.compose.material.SwipeableState$performFling$2: void <init>(androidx.wear.compose.material.SwipeableState,float)>(r0, f0);

        $r4 = (kotlinx.coroutines.flow.FlowCollector) $r2;

        $r5 = interfaceinvoke $r3.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r4, $r1);

        $r6 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r5 != $r6 goto label1;

        return $r5;

     label1:
        $r7 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r7;
    }

    public final float performDrag$compose_material_release(float)
    {
        androidx.wear.compose.material.SwipeableState r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8;
        androidx.compose.runtime.MutableState $r1, $r4;
        java.lang.Object $r2, $r5;
        java.lang.Number $r3, $r6;
        byte $b0;
        androidx.compose.foundation.gestures.DraggableState $r7;

        r0 := @this: androidx.wear.compose.material.SwipeableState;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState absoluteOffset>;

        $r2 = interfaceinvoke $r1.<androidx.compose.runtime.MutableState: java.lang.Object getValue()>();

        $r3 = (java.lang.Number) $r2;

        $f4 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        f1 = $f4 + f0;

        $f6 = r0.<androidx.wear.compose.material.SwipeableState: float minBound>;

        $f5 = r0.<androidx.wear.compose.material.SwipeableState: float maxBound>;

        f2 = staticinvoke <kotlin.ranges.RangesKt: float coerceIn(float,float,float)>(f1, $f6, $f5);

        $r4 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState absoluteOffset>;

        $r5 = interfaceinvoke $r4.<androidx.compose.runtime.MutableState: java.lang.Object getValue()>();

        $r6 = (java.lang.Number) $r5;

        $f7 = virtualinvoke $r6.<java.lang.Number: float floatValue()>();

        f3 = f2 - $f7;

        $f8 = staticinvoke <java.lang.Math: float abs(float)>(f3);

        $b0 = $f8 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $r7 = r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.foundation.gestures.DraggableState draggableState>;

        interfaceinvoke $r7.<androidx.compose.foundation.gestures.DraggableState: void dispatchRawDelta(float)>(f3);

     label1:
        return f3;
    }

    public static final java.lang.Object access$snapInternalToOffset(androidx.wear.compose.material.SwipeableState, float, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState $r0;
        float f0;
        kotlin.coroutines.Continuation $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: androidx.wear.compose.material.SwipeableState;

        f0 := @parameter1: float;

        $r1 := @parameter2: kotlin.coroutines.Continuation;

        $r2 = specialinvoke $r0.<androidx.wear.compose.material.SwipeableState: java.lang.Object snapInternalToOffset(float,kotlin.coroutines.Continuation)>(f0, $r1);

        return $r2;
    }

    public static final androidx.compose.runtime.MutableState access$getAbsoluteOffset$p(androidx.wear.compose.material.SwipeableState)
    {
        androidx.wear.compose.material.SwipeableState $r0;
        androidx.compose.runtime.MutableState $r1;

        $r0 := @parameter0: androidx.wear.compose.material.SwipeableState;

        $r1 = $r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState absoluteOffset>;

        return $r1;
    }

    public static final java.lang.Object access$animateInternalToOffset(androidx.wear.compose.material.SwipeableState, float, androidx.compose.animation.core.AnimationSpec, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState $r0;
        float f0;
        androidx.compose.animation.core.AnimationSpec r1;
        kotlin.coroutines.Continuation $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: androidx.wear.compose.material.SwipeableState;

        f0 := @parameter1: float;

        r1 := @parameter2: androidx.compose.animation.core.AnimationSpec;

        $r2 := @parameter3: kotlin.coroutines.Continuation;

        $r3 = specialinvoke $r0.<androidx.wear.compose.material.SwipeableState: java.lang.Object animateInternalToOffset(float,androidx.compose.animation.core.AnimationSpec,kotlin.coroutines.Continuation)>(f0, r1, $r2);

        return $r3;
    }

    public static final androidx.compose.runtime.MutableState access$getAnimationTarget$p(androidx.wear.compose.material.SwipeableState)
    {
        androidx.wear.compose.material.SwipeableState $r0;
        androidx.compose.runtime.MutableState $r1;

        $r0 := @parameter0: androidx.wear.compose.material.SwipeableState;

        $r1 = $r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState animationTarget>;

        return $r1;
    }

    public static final void access$setAnimationRunning(androidx.wear.compose.material.SwipeableState, boolean)
    {
        androidx.wear.compose.material.SwipeableState $r0;
        boolean z0;

        $r0 := @parameter0: androidx.wear.compose.material.SwipeableState;

        z0 := @parameter1: boolean;

        specialinvoke $r0.<androidx.wear.compose.material.SwipeableState: void setAnimationRunning(boolean)>(z0);

        return;
    }

    public static final void access$setCurrentValue(androidx.wear.compose.material.SwipeableState, java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState $r0;
        java.lang.Object r1;

        $r0 := @parameter0: androidx.wear.compose.material.SwipeableState;

        r1 := @parameter1: java.lang.Object;

        specialinvoke $r0.<androidx.wear.compose.material.SwipeableState: void setCurrentValue(java.lang.Object)>(r1);

        return;
    }

    public static final androidx.compose.runtime.MutableState access$getOffsetState$p(androidx.wear.compose.material.SwipeableState)
    {
        androidx.wear.compose.material.SwipeableState $r0;
        androidx.compose.runtime.MutableState $r1;

        $r0 := @parameter0: androidx.wear.compose.material.SwipeableState;

        $r1 = $r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState offsetState>;

        return $r1;
    }

    public static final androidx.compose.runtime.MutableState access$getOverflowState$p(androidx.wear.compose.material.SwipeableState)
    {
        androidx.wear.compose.material.SwipeableState $r0;
        androidx.compose.runtime.MutableState $r1;

        $r0 := @parameter0: androidx.wear.compose.material.SwipeableState;

        $r1 = $r0.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState overflowState>;

        return $r1;
    }

    static void <clinit>()
    {
        androidx.wear.compose.material.SwipeableState$Companion $r0;

        $r0 = new androidx.wear.compose.material.SwipeableState$Companion;

        specialinvoke $r0.<androidx.wear.compose.material.SwipeableState$Companion: void <init>(kotlin.jvm.internal.DefaultConstructorMarker)>(null);

        <androidx.wear.compose.material.SwipeableState: androidx.wear.compose.material.SwipeableState$Companion Companion> = $r0;

        return;
    }

androidx.wear.compose.material.SwipeableState$1
<androidx.wear.compose.material.SwipeableState$1: androidx.wear.compose.material.SwipeableState$1 INSTANCE>
    void <init>()
    {
        androidx.wear.compose.material.SwipeableState$1 r0;

        r0 := @this: androidx.wear.compose.material.SwipeableState$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final java.lang.Boolean invoke(java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$1 r0;
        java.lang.Object r1;
        java.lang.Boolean $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$1 r0;
        java.lang.Object r1;
        java.lang.Boolean $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$1: java.lang.Boolean invoke(java.lang.Object)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        androidx.wear.compose.material.SwipeableState$1 $r0;

        $r0 = new androidx.wear.compose.material.SwipeableState$1;

        specialinvoke $r0.<androidx.wear.compose.material.SwipeableState$1: void <init>()>();

        <androidx.wear.compose.material.SwipeableState$1: androidx.wear.compose.material.SwipeableState$1 INSTANCE> = $r0;

        return;
    }

androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1
<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1: androidx.compose.foundation.gestures.DragScope $$this$drag>
<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1: kotlin.jvm.internal.Ref$FloatRef $prevValue>
    void <init>(androidx.compose.foundation.gestures.DragScope, kotlin.jvm.internal.Ref$FloatRef)
    {
        androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1 r0;
        androidx.compose.foundation.gestures.DragScope $r1;
        kotlin.jvm.internal.Ref$FloatRef $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1;

        $r1 := @parameter0: androidx.compose.foundation.gestures.DragScope;

        $r2 := @parameter1: kotlin.jvm.internal.Ref$FloatRef;

        r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1: androidx.compose.foundation.gestures.DragScope $$this$drag> = $r1;

        r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1: kotlin.jvm.internal.Ref$FloatRef $prevValue> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(androidx.compose.animation.core.Animatable)
    {
        androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1 r0;
        androidx.compose.animation.core.Animatable $r1;
        androidx.compose.foundation.gestures.DragScope $r2;
        java.lang.Object $r3, $r7;
        java.lang.Number $r4, $r8;
        float $f0, $f1, $f2, $f3;
        kotlin.jvm.internal.Ref$FloatRef $r5, $r6;

        r0 := @this: androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1;

        $r1 := @parameter0: androidx.compose.animation.core.Animatable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$animateTo");

        $r2 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1: androidx.compose.foundation.gestures.DragScope $$this$drag>;

        $r3 = virtualinvoke $r1.<androidx.compose.animation.core.Animatable: java.lang.Object getValue()>();

        $r4 = (java.lang.Number) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1: kotlin.jvm.internal.Ref$FloatRef $prevValue>;

        $f1 = $r5.<kotlin.jvm.internal.Ref$FloatRef: float element>;

        $f2 = $f0 - $f1;

        interfaceinvoke $r2.<androidx.compose.foundation.gestures.DragScope: void dragBy(float)>($f2);

        $r6 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1: kotlin.jvm.internal.Ref$FloatRef $prevValue>;

        $r7 = virtualinvoke $r1.<androidx.compose.animation.core.Animatable: java.lang.Object getValue()>();

        $r8 = (java.lang.Number) $r7;

        $f3 = virtualinvoke $r8.<java.lang.Number: float floatValue()>();

        $r6.<kotlin.jvm.internal.Ref$FloatRef: float element> = $f3;

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1 r0;
        java.lang.Object r1;
        androidx.compose.animation.core.Animatable $r2;
        kotlin.Unit $r3;

        r0 := @this: androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (androidx.compose.animation.core.Animatable) r1;

        virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1: void invoke(androidx.compose.animation.core.Animatable)>($r2);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2
<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: int label>
<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: java.lang.Object L$0>
<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0>
<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: float $target>
<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.compose.animation.core.AnimationSpec $spec>
    void <init>(androidx.wear.compose.material.SwipeableState, float, androidx.compose.animation.core.AnimationSpec, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2 r0;
        androidx.wear.compose.material.SwipeableState $r1;
        float $f0;
        androidx.compose.animation.core.AnimationSpec $r2;
        kotlin.coroutines.Continuation $r3;

        r0 := @this: androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2;

        $r1 := @parameter0: androidx.wear.compose.material.SwipeableState;

        $f0 := @parameter1: float;

        $r2 := @parameter2: androidx.compose.animation.core.AnimationSpec;

        $r3 := @parameter3: kotlin.coroutines.Continuation;

        r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0> = $r1;

        r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: float $target> = $f0;

        r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.compose.animation.core.AnimationSpec $spec> = $r2;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r3);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2 r0;
        java.lang.Object $r1, r5, $r10, $r14, $r26;
        androidx.compose.foundation.gestures.DragScope $r2;
        kotlin.jvm.internal.Ref$FloatRef r3, $r11;
        java.lang.Throwable r4, $r28;
        int $i0;
        androidx.wear.compose.material.SwipeableState $r6, $r8, $r12, $r16, $r19, $r29, $r31;
        androidx.compose.runtime.MutableState $r7, $r13, $r17, $r30;
        kotlin.Unit $r9;
        java.lang.Number $r15;
        float $f0, $f1, $f2, $f3;
        java.lang.Float $r18, $r21;
        androidx.compose.animation.core.Animatable $r20;
        androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1 $r22;
        androidx.compose.animation.core.AnimationSpec $r23;
        kotlin.jvm.functions.Function1 $r24;
        kotlin.coroutines.Continuation $r25;
        java.lang.IllegalStateException $r27;

        r0 := @this: androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2;

        $r1 := @parameter0: java.lang.Object;

        r5 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label4;
            default: goto label9;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r10 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: java.lang.Object L$0>;

        $r2 = (androidx.compose.foundation.gestures.DragScope) $r10;

        $r11 = new kotlin.jvm.internal.Ref$FloatRef;

        specialinvoke $r11.<kotlin.jvm.internal.Ref$FloatRef: void <init>()>();

        r3 = $r11;

        $r12 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r13 = staticinvoke <androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState access$getAbsoluteOffset$p(androidx.wear.compose.material.SwipeableState)>($r12);

        $r14 = interfaceinvoke $r13.<androidx.compose.runtime.MutableState: java.lang.Object getValue()>();

        $r15 = (java.lang.Number) $r14;

        $f0 = virtualinvoke $r15.<java.lang.Number: float floatValue()>();

        r3.<kotlin.jvm.internal.Ref$FloatRef: float element> = $f0;

        $r16 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r17 = staticinvoke <androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState access$getAnimationTarget$p(androidx.wear.compose.material.SwipeableState)>($r16);

        $f1 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: float $target>;

        $r18 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>($f1);

        interfaceinvoke $r17.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>($r18);

        $r19 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0>;

        staticinvoke <androidx.wear.compose.material.SwipeableState: void access$setAnimationRunning(androidx.wear.compose.material.SwipeableState,boolean)>($r19, 1);

     label2:
        $f2 = r3.<kotlin.jvm.internal.Ref$FloatRef: float element>;

        $r20 = staticinvoke <androidx.compose.animation.core.AnimatableKt: androidx.compose.animation.core.Animatable Animatable$default(float,float,int,java.lang.Object)>($f2, 0.0F, 2, null);

        $f3 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: float $target>;

        $r21 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>($f3);

        $r23 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.compose.animation.core.AnimationSpec $spec>;

        $r22 = new androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1;

        specialinvoke $r22.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2$1: void <init>(androidx.compose.foundation.gestures.DragScope,kotlin.jvm.internal.Ref$FloatRef)>($r2, r3);

        $r24 = (kotlin.jvm.functions.Function1) $r22;

        $r25 = (kotlin.coroutines.Continuation) r0;

        r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: int label> = 1;

        $r26 = staticinvoke <androidx.compose.animation.core.Animatable: java.lang.Object animateTo$default(androidx.compose.animation.core.Animatable,java.lang.Object,androidx.compose.animation.core.AnimationSpec,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation,int,java.lang.Object)>($r20, $r21, $r23, null, $r24, $r25, 4, null);

     label3:
        if $r26 != r5 goto label5;

        return r5;

     label4:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

     label5:
        $r6 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r7 = staticinvoke <androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState access$getAnimationTarget$p(androidx.wear.compose.material.SwipeableState)>($r6);

        interfaceinvoke $r7.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(null);

        $r8 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0>;

        staticinvoke <androidx.wear.compose.material.SwipeableState: void access$setAnimationRunning(androidx.wear.compose.material.SwipeableState,boolean)>($r8, 0);

        goto label8;

     label6:
        $r28 := @caughtexception;

        r4 = $r28;

     label7:
        $r29 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r30 = staticinvoke <androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState access$getAnimationTarget$p(androidx.wear.compose.material.SwipeableState)>($r29);

        interfaceinvoke $r30.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(null);

        $r31 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0>;

        staticinvoke <androidx.wear.compose.material.SwipeableState: void access$setAnimationRunning(androidx.wear.compose.material.SwipeableState,boolean)>($r31, 0);

        throw r4;

     label8:
        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r9;

     label9:
        $r27 = new java.lang.IllegalStateException;

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r27;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r7;
        androidx.compose.animation.core.AnimationSpec $r5;
        float $f0;
        androidx.wear.compose.material.SwipeableState $r6;

        r0 := @this: androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2;

        $r6 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0>;

        $f0 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: float $target>;

        $r5 = r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: androidx.compose.animation.core.AnimationSpec $spec>;

        specialinvoke $r4.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: void <init>(androidx.wear.compose.material.SwipeableState,float,androidx.compose.animation.core.AnimationSpec,kotlin.coroutines.Continuation)>($r6, $f0, $r5, $r2);

        r3 = $r4;

        r3.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: java.lang.Object L$0> = r1;

        $r7 = (kotlin.coroutines.Continuation) r3;

        return $r7;
    }

    public final java.lang.Object invoke(androidx.compose.foundation.gestures.DragScope, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2 r0, $r5;
        androidx.compose.foundation.gestures.DragScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2;

        r1 := @parameter0: androidx.compose.foundation.gestures.DragScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        androidx.compose.foundation.gestures.DragScope $r4;

        r0 := @this: androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.foundation.gestures.DragScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$animateInternalToOffset$2: java.lang.Object invoke(androidx.compose.foundation.gestures.DragScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1
<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: java.lang.Object L$0>
<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: java.lang.Object L$1>
<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: java.lang.Object result>
<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: androidx.wear.compose.material.SwipeableState$animateTo$2 this$0>
<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: int label>
    void <init>(androidx.wear.compose.material.SwipeableState$animateTo$2, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1 r0;
        androidx.wear.compose.material.SwipeableState$animateTo$2 r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1;

        r1 := @parameter0: androidx.wear.compose.material.SwipeableState$animateTo$2;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: androidx.wear.compose.material.SwipeableState$animateTo$2 this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.wear.compose.material.SwipeableState$animateTo$2 $r3;

        r0 := @this: androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: int label> = $i1;

        $r3 = r0.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: androidx.wear.compose.material.SwipeableState$animateTo$2 this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.wear.compose.material.SwipeableState$animateTo$2: java.lang.Object emit(java.util.Map,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.wear.compose.material.SwipeableState$animateTo$2
<androidx.wear.compose.material.SwipeableState$animateTo$2: java.lang.Object $targetValue>
<androidx.wear.compose.material.SwipeableState$animateTo$2: androidx.wear.compose.material.SwipeableState this$0>
<androidx.wear.compose.material.SwipeableState$animateTo$2: androidx.compose.animation.core.AnimationSpec $anim>
    void <init>(java.lang.Object, androidx.wear.compose.material.SwipeableState, androidx.compose.animation.core.AnimationSpec)
    {
        androidx.wear.compose.material.SwipeableState$animateTo$2 r0;
        java.lang.Object $r1;
        androidx.wear.compose.material.SwipeableState $r2;
        androidx.compose.animation.core.AnimationSpec $r3;

        r0 := @this: androidx.wear.compose.material.SwipeableState$animateTo$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: androidx.wear.compose.material.SwipeableState;

        $r3 := @parameter2: androidx.compose.animation.core.AnimationSpec;

        r0.<androidx.wear.compose.material.SwipeableState$animateTo$2: java.lang.Object $targetValue> = $r1;

        r0.<androidx.wear.compose.material.SwipeableState$animateTo$2: androidx.wear.compose.material.SwipeableState this$0> = $r2;

        r0.<androidx.wear.compose.material.SwipeableState$animateTo$2: androidx.compose.animation.core.AnimationSpec $anim> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.util.Map, kotlin.coroutines.Continuation)
    {
        kotlin.coroutines.Continuation r0, r70;
        java.lang.Object r1, $r2, r3, $r5, $r6, $r9, $r19, $r20, $r22, $r23, $r25, $r28, $r35, $r44, $r45, $r47, $r48, $r58, r59, $r64;
        boolean $z1, z2, $z4, z5, $z6, z7, $z8, $z9;
        androidx.wear.compose.material.SwipeableState $r7, $r16, $r18, $r26, $r33, $r42, $r43;
        androidx.compose.runtime.MutableState $r8, $r34;
        java.lang.Number $r10, $r21, $r36, $r46;
        java.util.Set $r12, $r38;
        java.util.Map $r13, $r39, r51;
        java.util.Collection $r14, $r40;
        java.lang.Iterable $r15, $r41;
        kotlin.Unit $r17;
        float $f0, $f1, $f2, $f3, $f4, f5, f6, f7, f8;
        byte $b0, $b5;
        androidx.compose.animation.core.AnimationSpec $r27;
        java.lang.String $r30, r54;
        int $i1, $i2, $i3, $i4, $i6;
        java.lang.Throwable $r32, r60;
        androidx.wear.compose.material.SwipeableState$animateTo$2 r50;
        androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1 $r52, r65;
        java.lang.Float r53;
        java.util.LinkedHashMap r55, r61, r67, r68;
        java.util.Iterator r56, r62;
        java.util.Map$Entry r57, r63;
        java.lang.IllegalArgumentException r66;
        java.lang.IllegalStateException r69;

        r50 := @this: androidx.wear.compose.material.SwipeableState$animateTo$2;

        r51 := @parameter0: java.util.Map;

        r0 := @parameter1: kotlin.coroutines.Continuation;

        $z1 = r0 instanceof androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1;

        if $z1 == 0 goto label01;

        $r52 = (androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1) r0;

        $i1 = $r52.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: int label>;

        $i2 = $i1 & -2147483648;

        if $i2 == 0 goto label01;

        $i3 = $r52.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: int label>;

        $i4 = $i3 - -2147483648;

        $r52.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: int label> = $i4;

        goto label02;

     label01:
        r65 = new androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1;

        specialinvoke r65.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: void <init>(androidx.wear.compose.material.SwipeableState$animateTo$2,kotlin.coroutines.Continuation)>(r50, r0);

        $r52 = r65;

     label02:
        $r2 = $r52.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: java.lang.Object result>;

        r3 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i6 = $r52.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: int label>;

        tableswitch($i6)
        {
            case 0: goto label03;
            case 1: goto label07;
            default: goto label23;
        };

     label03:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label04:
        $r25 = r50.<androidx.wear.compose.material.SwipeableState$animateTo$2: java.lang.Object $targetValue>;

        r53 = staticinvoke <androidx.wear.compose.material.SwipeableKt: java.lang.Float access$getOffset(java.util.Map,java.lang.Object)>(r51, $r25);

        if r53 != null goto label05;

        z2 = 0;

        r54 = "The target value must have an associated anchor.";

        r66 = new java.lang.IllegalArgumentException;

        $r30 = virtualinvoke r54.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r66.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw r66;

     label05:
        $r26 = r50.<androidx.wear.compose.material.SwipeableState$animateTo$2: androidx.wear.compose.material.SwipeableState this$0>;

        $f2 = virtualinvoke r53.<java.lang.Float: float floatValue()>();

        $r27 = r50.<androidx.wear.compose.material.SwipeableState$animateTo$2: androidx.compose.animation.core.AnimationSpec $anim>;

        $r52.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: java.lang.Object L$0> = r50;

        $r52.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: java.lang.Object L$1> = r51;

        $r52.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: int label> = 1;

        r70 = (kotlin.coroutines.Continuation) $r52;

        $r28 = staticinvoke <androidx.wear.compose.material.SwipeableState: java.lang.Object access$animateInternalToOffset(androidx.wear.compose.material.SwipeableState,float,androidx.compose.animation.core.AnimationSpec,kotlin.coroutines.Continuation)>($r26, $f2, $r27, r70);

     label06:
        if $r28 != r3 goto label09;

        return r3;

     label07:
        $r5 = $r52.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: java.lang.Object L$1>;

        r51 = (java.util.Map) $r5;

        $r6 = $r52.<androidx.wear.compose.material.SwipeableState$animateTo$2$emit$1: java.lang.Object L$0>;

        r50 = (androidx.wear.compose.material.SwipeableState$animateTo$2) $r6;

     label08:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r2);

     label09:
        $r7 = r50.<androidx.wear.compose.material.SwipeableState$animateTo$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r8 = staticinvoke <androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState access$getAbsoluteOffset$p(androidx.wear.compose.material.SwipeableState)>($r7);

        $r9 = interfaceinvoke $r8.<androidx.compose.runtime.MutableState: java.lang.Object getValue()>();

        $r10 = (java.lang.Number) $r9;

        f5 = virtualinvoke $r10.<java.lang.Number: float floatValue()>();

        r67 = new java.util.LinkedHashMap;

        specialinvoke r67.<java.util.LinkedHashMap: void <init>()>();

        r55 = r67;

        $r12 = interfaceinvoke r51.<java.util.Map: java.util.Set entrySet()>();

        r56 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z4 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label13;

        $r19 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>();

        r57 = (java.util.Map$Entry) $r19;

        $r20 = interfaceinvoke r57.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r21 = (java.lang.Number) $r20;

        f6 = virtualinvoke $r21.<java.lang.Number: float floatValue()>();

        z5 = 0;

        $f0 = f6 - f5;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $b0 = $f1 cmpg 0.5F;

        if $b0 >= 0 goto label11;

        $z6 = 1;

        goto label12;

     label11:
        $z6 = 0;

     label12:
        if $z6 == 0 goto label10;

        $r22 = interfaceinvoke r57.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r23 = interfaceinvoke r57.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r55.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r23);

        goto label10;

     label13:
        $r13 = (java.util.Map) r55;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Collection values()>();

        $r15 = (java.lang.Iterable) $r14;

        $r58 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.lang.Iterable)>($r15);

        if $r58 != null goto label14;

        $r18 = r50.<androidx.wear.compose.material.SwipeableState$animateTo$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r58 = virtualinvoke $r18.<androidx.wear.compose.material.SwipeableState: java.lang.Object getCurrentValue()>();

     label14:
        r59 = $r58;

        $r16 = r50.<androidx.wear.compose.material.SwipeableState$animateTo$2: androidx.wear.compose.material.SwipeableState this$0>;

        staticinvoke <androidx.wear.compose.material.SwipeableState: void access$setCurrentValue(androidx.wear.compose.material.SwipeableState,java.lang.Object)>($r16, r59);

        goto label22;

     label15:
        $r32 := @caughtexception;

        r60 = $r32;

     label16:
        $r33 = r50.<androidx.wear.compose.material.SwipeableState$animateTo$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r34 = staticinvoke <androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState access$getAbsoluteOffset$p(androidx.wear.compose.material.SwipeableState)>($r33);

        $r35 = interfaceinvoke $r34.<androidx.compose.runtime.MutableState: java.lang.Object getValue()>();

        $r36 = (java.lang.Number) $r35;

        f7 = virtualinvoke $r36.<java.lang.Number: float floatValue()>();

        z7 = 0;

        r68 = new java.util.LinkedHashMap;

        specialinvoke r68.<java.util.LinkedHashMap: void <init>()>();

        r61 = r68;

        $r38 = interfaceinvoke r51.<java.util.Map: java.util.Set entrySet()>();

        r62 = interfaceinvoke $r38.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z8 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label20;

        $r44 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>();

        r63 = (java.util.Map$Entry) $r44;

        $r45 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r46 = (java.lang.Number) $r45;

        f8 = virtualinvoke $r46.<java.lang.Number: float floatValue()>();

        $f3 = f8 - f7;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        $b5 = $f4 cmpg 0.5F;

        if $b5 >= 0 goto label18;

        $z9 = 1;

        goto label19;

     label18:
        $z9 = 0;

     label19:
        if $z9 == 0 goto label17;

        $r47 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r48 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r61.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, $r48);

        goto label17;

     label20:
        $r39 = (java.util.Map) r61;

        $r40 = interfaceinvoke $r39.<java.util.Map: java.util.Collection values()>();

        $r41 = (java.lang.Iterable) $r40;

        $r64 = staticinvoke <kotlin.collections.CollectionsKt: java.lang.Object firstOrNull(java.lang.Iterable)>($r41);

        if $r64 != null goto label21;

        $r43 = r50.<androidx.wear.compose.material.SwipeableState$animateTo$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r64 = virtualinvoke $r43.<androidx.wear.compose.material.SwipeableState: java.lang.Object getCurrentValue()>();

     label21:
        r1 = $r64;

        $r42 = r50.<androidx.wear.compose.material.SwipeableState$animateTo$2: androidx.wear.compose.material.SwipeableState this$0>;

        staticinvoke <androidx.wear.compose.material.SwipeableState: void access$setCurrentValue(androidx.wear.compose.material.SwipeableState,java.lang.Object)>($r42, r1);

        throw r60;

     label22:
        $r17 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r17;

     label23:
        r69 = new java.lang.IllegalStateException;

        specialinvoke r69.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r69;

        catch java.lang.Throwable from label04 to label06 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public volatile java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$animateTo$2 r0;
        java.lang.Object r1, $r4;
        kotlin.coroutines.Continuation $r2;
        java.util.Map $r3;

        r0 := @this: androidx.wear.compose.material.SwipeableState$animateTo$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = (java.util.Map) r1;

        $r4 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$animateTo$2: java.lang.Object emit(java.util.Map,kotlin.coroutines.Continuation)>($r3, $r2);

        return $r4;
    }

androidx.wear.compose.material.SwipeableState$Companion$Saver$1
<androidx.wear.compose.material.SwipeableState$Companion$Saver$1: androidx.wear.compose.material.SwipeableState$Companion$Saver$1 INSTANCE>
    void <init>()
    {
        androidx.wear.compose.material.SwipeableState$Companion$Saver$1 r0;

        r0 := @this: androidx.wear.compose.material.SwipeableState$Companion$Saver$1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final java.lang.Object invoke(androidx.compose.runtime.saveable.SaverScope, androidx.wear.compose.material.SwipeableState)
    {
        androidx.wear.compose.material.SwipeableState$Companion$Saver$1 r0;
        androidx.compose.runtime.saveable.SaverScope $r1;
        androidx.wear.compose.material.SwipeableState r2;
        java.lang.Object $r3;

        r0 := @this: androidx.wear.compose.material.SwipeableState$Companion$Saver$1;

        $r1 := @parameter0: androidx.compose.runtime.saveable.SaverScope;

        r2 := @parameter1: androidx.wear.compose.material.SwipeableState;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "$this$Saver");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "it");

        $r3 = virtualinvoke r2.<androidx.wear.compose.material.SwipeableState: java.lang.Object getCurrentValue()>();

        return $r3;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$Companion$Saver$1 r0;
        java.lang.Object r1, r2, $r5;
        androidx.wear.compose.material.SwipeableState $r3;
        androidx.compose.runtime.saveable.SaverScope $r4;

        r0 := @this: androidx.wear.compose.material.SwipeableState$Companion$Saver$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.runtime.saveable.SaverScope) r1;

        $r3 = (androidx.wear.compose.material.SwipeableState) r2;

        $r5 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$Companion$Saver$1: java.lang.Object invoke(androidx.compose.runtime.saveable.SaverScope,androidx.wear.compose.material.SwipeableState)>($r4, $r3);

        return $r5;
    }

    static void <clinit>()
    {
        androidx.wear.compose.material.SwipeableState$Companion$Saver$1 $r0;

        $r0 = new androidx.wear.compose.material.SwipeableState$Companion$Saver$1;

        specialinvoke $r0.<androidx.wear.compose.material.SwipeableState$Companion$Saver$1: void <init>()>();

        <androidx.wear.compose.material.SwipeableState$Companion$Saver$1: androidx.wear.compose.material.SwipeableState$Companion$Saver$1 INSTANCE> = $r0;

        return;
    }

androidx.wear.compose.material.SwipeableState$Companion$Saver$2
<androidx.wear.compose.material.SwipeableState$Companion$Saver$2: androidx.compose.animation.core.AnimationSpec $animationSpec>
<androidx.wear.compose.material.SwipeableState$Companion$Saver$2: kotlin.jvm.functions.Function1 $confirmStateChange>
    void <init>(androidx.compose.animation.core.AnimationSpec, kotlin.jvm.functions.Function1)
    {
        androidx.wear.compose.material.SwipeableState$Companion$Saver$2 r0;
        androidx.compose.animation.core.AnimationSpec $r1;
        kotlin.jvm.functions.Function1 $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState$Companion$Saver$2;

        $r1 := @parameter0: androidx.compose.animation.core.AnimationSpec;

        $r2 := @parameter1: kotlin.jvm.functions.Function1;

        r0.<androidx.wear.compose.material.SwipeableState$Companion$Saver$2: androidx.compose.animation.core.AnimationSpec $animationSpec> = $r1;

        r0.<androidx.wear.compose.material.SwipeableState$Companion$Saver$2: kotlin.jvm.functions.Function1 $confirmStateChange> = $r2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final androidx.wear.compose.material.SwipeableState invoke(java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$Companion$Saver$2 r0;
        java.lang.Object r1;
        androidx.wear.compose.material.SwipeableState $r2;
        kotlin.jvm.functions.Function1 $r3;
        androidx.compose.animation.core.AnimationSpec $r4;

        r0 := @this: androidx.wear.compose.material.SwipeableState$Companion$Saver$2;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "it");

        $r2 = new androidx.wear.compose.material.SwipeableState;

        $r4 = r0.<androidx.wear.compose.material.SwipeableState$Companion$Saver$2: androidx.compose.animation.core.AnimationSpec $animationSpec>;

        $r3 = r0.<androidx.wear.compose.material.SwipeableState$Companion$Saver$2: kotlin.jvm.functions.Function1 $confirmStateChange>;

        specialinvoke $r2.<androidx.wear.compose.material.SwipeableState: void <init>(java.lang.Object,androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function1)>(r1, $r4, $r3);

        return $r2;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$Companion$Saver$2 r0;
        java.lang.Object r1;
        androidx.wear.compose.material.SwipeableState $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState$Companion$Saver$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$Companion$Saver$2: androidx.wear.compose.material.SwipeableState invoke(java.lang.Object)>(r1);

        return $r2;
    }

androidx.wear.compose.material.SwipeableState$Companion
    private void <init>()
    {
        androidx.wear.compose.material.SwipeableState$Companion r0;

        r0 := @this: androidx.wear.compose.material.SwipeableState$Companion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final androidx.compose.runtime.saveable.Saver Saver(androidx.compose.animation.core.AnimationSpec, kotlin.jvm.functions.Function1)
    {
        androidx.wear.compose.material.SwipeableState$Companion r0;
        androidx.compose.animation.core.AnimationSpec r1;
        kotlin.jvm.functions.Function1 r2, $r6;
        androidx.wear.compose.material.SwipeableState$Companion$Saver$1 $r3;
        androidx.wear.compose.material.SwipeableState$Companion$Saver$2 $r4;
        kotlin.jvm.functions.Function2 $r5;
        androidx.compose.runtime.saveable.Saver $r7;

        r0 := @this: androidx.wear.compose.material.SwipeableState$Companion;

        r1 := @parameter0: androidx.compose.animation.core.AnimationSpec;

        r2 := @parameter1: kotlin.jvm.functions.Function1;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "animationSpec");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r2, "confirmStateChange");

        $r3 = <androidx.wear.compose.material.SwipeableState$Companion$Saver$1: androidx.wear.compose.material.SwipeableState$Companion$Saver$1 INSTANCE>;

        $r5 = (kotlin.jvm.functions.Function2) $r3;

        $r4 = new androidx.wear.compose.material.SwipeableState$Companion$Saver$2;

        specialinvoke $r4.<androidx.wear.compose.material.SwipeableState$Companion$Saver$2: void <init>(androidx.compose.animation.core.AnimationSpec,kotlin.jvm.functions.Function1)>(r1, r2);

        $r6 = (kotlin.jvm.functions.Function1) $r4;

        $r7 = staticinvoke <androidx.compose.runtime.saveable.SaverKt: androidx.compose.runtime.saveable.Saver Saver(kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1)>($r5, $r6);

        return $r7;
    }

    public void <init>(kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.wear.compose.material.SwipeableState$Companion r0;
        kotlin.jvm.internal.DefaultConstructorMarker $r1;

        r0 := @this: androidx.wear.compose.material.SwipeableState$Companion;

        $r1 := @parameter0: kotlin.jvm.internal.DefaultConstructorMarker;

        specialinvoke r0.<androidx.wear.compose.material.SwipeableState$Companion: void <init>()>();

        return;
    }

androidx.wear.compose.material.SwipeableState$draggableState$1
<androidx.wear.compose.material.SwipeableState$draggableState$1: androidx.wear.compose.material.SwipeableState this$0>
    void <init>(androidx.wear.compose.material.SwipeableState)
    {
        androidx.wear.compose.material.SwipeableState$draggableState$1 r0;
        androidx.wear.compose.material.SwipeableState $r1;

        r0 := @this: androidx.wear.compose.material.SwipeableState$draggableState$1;

        $r1 := @parameter0: androidx.wear.compose.material.SwipeableState;

        r0.<androidx.wear.compose.material.SwipeableState$draggableState$1: androidx.wear.compose.material.SwipeableState this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(1);

        return;
    }

    public final void invoke(float)
    {
        androidx.wear.compose.material.SwipeableState$draggableState$1 r0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9;
        androidx.wear.compose.material.SwipeableState $r1, $r5, $r6, $r7, $r9, $r12, $r15;
        androidx.compose.runtime.MutableState $r2, $r10, $r13, $r16;
        java.lang.Object $r3;
        java.lang.Number $r4;
        androidx.wear.compose.material.ResistanceConfig $r8;
        java.lang.Float $r11, $r14, $r17;

        r0 := @this: androidx.wear.compose.material.SwipeableState$draggableState$1;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.wear.compose.material.SwipeableState$draggableState$1: androidx.wear.compose.material.SwipeableState this$0>;

        $r2 = staticinvoke <androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState access$getAbsoluteOffset$p(androidx.wear.compose.material.SwipeableState)>($r1);

        $r3 = interfaceinvoke $r2.<androidx.compose.runtime.MutableState: java.lang.Object getValue()>();

        $r4 = (java.lang.Number) $r3;

        $f5 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        f1 = $f5 + f0;

        $r5 = r0.<androidx.wear.compose.material.SwipeableState$draggableState$1: androidx.wear.compose.material.SwipeableState this$0>;

        $f6 = virtualinvoke $r5.<androidx.wear.compose.material.SwipeableState: float getMinBound$compose_material_release()>();

        $r6 = r0.<androidx.wear.compose.material.SwipeableState$draggableState$1: androidx.wear.compose.material.SwipeableState this$0>;

        $f7 = virtualinvoke $r6.<androidx.wear.compose.material.SwipeableState: float getMaxBound$compose_material_release()>();

        f2 = staticinvoke <kotlin.ranges.RangesKt: float coerceIn(float,float,float)>(f1, $f6, $f7);

        f3 = f1 - f2;

        $r7 = r0.<androidx.wear.compose.material.SwipeableState$draggableState$1: androidx.wear.compose.material.SwipeableState this$0>;

        $r8 = virtualinvoke $r7.<androidx.wear.compose.material.SwipeableState: androidx.wear.compose.material.ResistanceConfig getResistance$compose_material_release()>();

        if $r8 == null goto label1;

        $f9 = virtualinvoke $r8.<androidx.wear.compose.material.ResistanceConfig: float computeResistance(float)>(f3);

        goto label2;

     label1:
        $f9 = 0.0F;

     label2:
        f4 = $f9;

        $r9 = r0.<androidx.wear.compose.material.SwipeableState$draggableState$1: androidx.wear.compose.material.SwipeableState this$0>;

        $r10 = staticinvoke <androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState access$getOffsetState$p(androidx.wear.compose.material.SwipeableState)>($r9);

        $f8 = f2 + f4;

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f8);

        interfaceinvoke $r10.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>($r11);

        $r12 = r0.<androidx.wear.compose.material.SwipeableState$draggableState$1: androidx.wear.compose.material.SwipeableState this$0>;

        $r13 = staticinvoke <androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState access$getOverflowState$p(androidx.wear.compose.material.SwipeableState)>($r12);

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f3);

        interfaceinvoke $r13.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>($r14);

        $r15 = r0.<androidx.wear.compose.material.SwipeableState$draggableState$1: androidx.wear.compose.material.SwipeableState this$0>;

        $r16 = staticinvoke <androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState access$getAbsoluteOffset$p(androidx.wear.compose.material.SwipeableState)>($r15);

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        interfaceinvoke $r16.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>($r17);

        return;
    }

    public volatile java.lang.Object invoke(java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$draggableState$1 r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        float $f0;
        kotlin.Unit $r3;

        r0 := @this: androidx.wear.compose.material.SwipeableState$draggableState$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $f0 = virtualinvoke $r2.<java.lang.Number: float floatValue()>();

        virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$draggableState$1: void invoke(float)>($f0);

        $r3 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r3;
    }

androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1
<androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1: androidx.wear.compose.material.SwipeableState this$0>
    void <init>(androidx.wear.compose.material.SwipeableState)
    {
        androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1 r0;
        androidx.wear.compose.material.SwipeableState $r1;

        r0 := @this: androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1;

        $r1 := @parameter0: androidx.wear.compose.material.SwipeableState;

        r0.<androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1: androidx.wear.compose.material.SwipeableState this$0> = $r1;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(0);

        return;
    }

    public final java.util.Map invoke()
    {
        androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1 r0;
        androidx.wear.compose.material.SwipeableState $r1;
        java.util.Map $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1;

        $r1 = r0.<androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1: androidx.wear.compose.material.SwipeableState this$0>;

        $r2 = virtualinvoke $r1.<androidx.wear.compose.material.SwipeableState: java.util.Map getAnchors$compose_material_release()>();

        return $r2;
    }

    public volatile java.lang.Object invoke()
    {
        androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1 r0;
        java.util.Map $r1;

        r0 := @this: androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1;

        $r1 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$latestNonEmptyAnchorsFlow$1: java.util.Map invoke()>();

        return $r1;
    }

androidx.wear.compose.material.SwipeableState$performFling$2
<androidx.wear.compose.material.SwipeableState$performFling$2: androidx.wear.compose.material.SwipeableState this$0>
<androidx.wear.compose.material.SwipeableState$performFling$2: float $velocity>
    void <init>(androidx.wear.compose.material.SwipeableState, float)
    {
        androidx.wear.compose.material.SwipeableState$performFling$2 r0;
        androidx.wear.compose.material.SwipeableState $r1;
        float $f0;

        r0 := @this: androidx.wear.compose.material.SwipeableState$performFling$2;

        $r1 := @parameter0: androidx.wear.compose.material.SwipeableState;

        $f0 := @parameter1: float;

        r0.<androidx.wear.compose.material.SwipeableState$performFling$2: androidx.wear.compose.material.SwipeableState this$0> = $r1;

        r0.<androidx.wear.compose.material.SwipeableState$performFling$2: float $velocity> = $f0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.util.Map, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$performFling$2 r0;
        java.util.Map r1;
        kotlin.coroutines.Continuation $r2;
        float f0, f1, $f2, $f3, $f4;
        java.lang.Object r3, $r5, $r9, $r19, $r20, $r24, $r27, $r28;
        androidx.wear.compose.material.SwipeableState $r4, $r7, $r12, $r14, $r16, $r17, $r22, $r26;
        java.lang.Float $r6, $r15;
        androidx.compose.runtime.State $r8;
        java.lang.Number $r10;
        java.util.Set $r11;
        kotlin.jvm.functions.Function2 $r13;
        androidx.compose.animation.core.AnimationSpec $r18;
        kotlin.Unit $r21, $r29;
        kotlin.jvm.functions.Function1 $r23;
        java.lang.Boolean $r25;
        boolean $z0;

        r0 := @this: androidx.wear.compose.material.SwipeableState$performFling$2;

        r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = r0.<androidx.wear.compose.material.SwipeableState$performFling$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r5 = virtualinvoke $r4.<androidx.wear.compose.material.SwipeableState: java.lang.Object getCurrentValue()>();

        $r6 = staticinvoke <androidx.wear.compose.material.SwipeableKt: java.lang.Float access$getOffset(java.util.Map,java.lang.Object)>(r1, $r5);

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)>($r6);

        f0 = virtualinvoke $r6.<java.lang.Float: float floatValue()>();

        $r7 = r0.<androidx.wear.compose.material.SwipeableState$performFling$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r8 = virtualinvoke $r7.<androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.State getOffset()>();

        $r9 = interfaceinvoke $r8.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r10 = (java.lang.Number) $r9;

        $f2 = virtualinvoke $r10.<java.lang.Number: float floatValue()>();

        $r11 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r12 = r0.<androidx.wear.compose.material.SwipeableState$performFling$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r13 = virtualinvoke $r12.<androidx.wear.compose.material.SwipeableState: kotlin.jvm.functions.Function2 getThresholds$compose_material_release()>();

        $f3 = r0.<androidx.wear.compose.material.SwipeableState$performFling$2: float $velocity>;

        $r14 = r0.<androidx.wear.compose.material.SwipeableState$performFling$2: androidx.wear.compose.material.SwipeableState this$0>;

        $f4 = virtualinvoke $r14.<androidx.wear.compose.material.SwipeableState: float getVelocityThreshold$compose_material_release()>();

        f1 = staticinvoke <androidx.wear.compose.material.SwipeableKt: float access$computeTarget(float,float,java.util.Set,kotlin.jvm.functions.Function2,float,float)>($f2, f0, $r11, $r13, $f3, $f4);

        $r15 = staticinvoke <kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)>(f1);

        r3 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);

        if r3 == null goto label2;

        $r22 = r0.<androidx.wear.compose.material.SwipeableState$performFling$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r23 = virtualinvoke $r22.<androidx.wear.compose.material.SwipeableState: kotlin.jvm.functions.Function1 getConfirmStateChange$compose_material_release()>();

        $r24 = interfaceinvoke $r23.<kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)>(r3);

        $r25 = (java.lang.Boolean) $r24;

        $z0 = virtualinvoke $r25.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r26 = r0.<androidx.wear.compose.material.SwipeableState$performFling$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r27 = staticinvoke <androidx.wear.compose.material.SwipeableState: java.lang.Object animateTo$default(androidx.wear.compose.material.SwipeableState,java.lang.Object,androidx.compose.animation.core.AnimationSpec,kotlin.coroutines.Continuation,int,java.lang.Object)>($r26, r3, null, $r2, 2, null);

        $r28 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r27 != $r28 goto label1;

        return $r27;

     label1:
        $r29 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r29;

     label2:
        $r17 = r0.<androidx.wear.compose.material.SwipeableState$performFling$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r16 = r0.<androidx.wear.compose.material.SwipeableState$performFling$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r18 = virtualinvoke $r16.<androidx.wear.compose.material.SwipeableState: androidx.compose.animation.core.AnimationSpec getAnimationSpec$compose_material_release()>();

        $r19 = staticinvoke <androidx.wear.compose.material.SwipeableState: java.lang.Object access$animateInternalToOffset(androidx.wear.compose.material.SwipeableState,float,androidx.compose.animation.core.AnimationSpec,kotlin.coroutines.Continuation)>($r17, f0, $r18, $r2);

        $r20 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r19 != $r20 goto label3;

        return $r19;

     label3:
        $r21 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r21;
    }

    public volatile java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$performFling$2 r0;
        java.lang.Object r1, $r4;
        kotlin.coroutines.Continuation $r2;
        java.util.Map $r3;

        r0 := @this: androidx.wear.compose.material.SwipeableState$performFling$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = (java.util.Map) r1;

        $r4 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$performFling$2: java.lang.Object emit(java.util.Map,kotlin.coroutines.Continuation)>($r3, $r2);

        return $r4;
    }

androidx.wear.compose.material.SwipeableState$processNewAnchors$1
<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: java.lang.Object L$0>
<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: java.lang.Object L$1>
<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: float F$0>
<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: java.lang.Object result>
<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: androidx.wear.compose.material.SwipeableState this$0>
<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: int label>
    void <init>(androidx.wear.compose.material.SwipeableState, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$processNewAnchors$1 r0;
        androidx.wear.compose.material.SwipeableState r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState$processNewAnchors$1;

        r1 := @parameter0: androidx.wear.compose.material.SwipeableState;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: androidx.wear.compose.material.SwipeableState this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$processNewAnchors$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.wear.compose.material.SwipeableState $r3;

        r0 := @this: androidx.wear.compose.material.SwipeableState$processNewAnchors$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: int label> = $i1;

        $r3 = r0.<androidx.wear.compose.material.SwipeableState$processNewAnchors$1: androidx.wear.compose.material.SwipeableState this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.wear.compose.material.SwipeableState: java.lang.Object processNewAnchors$compose_material_release(java.util.Map,java.util.Map,kotlin.coroutines.Continuation)>(null, null, $r2);

        return $r4;
    }

androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2
<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: int label>
<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: java.lang.Object L$0>
<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: float $target>
<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0>
    void <init>(float, androidx.wear.compose.material.SwipeableState, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2 r0;
        float $f0;
        androidx.wear.compose.material.SwipeableState $r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2;

        $f0 := @parameter0: float;

        $r1 := @parameter1: androidx.wear.compose.material.SwipeableState;

        $r2 := @parameter2: kotlin.coroutines.Continuation;

        r0.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: float $target> = $f0;

        r0.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0> = $r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.SuspendLambda: void <init>(int,kotlin.coroutines.Continuation)>(2, $r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2 r0;
        java.lang.Object $r1, $r4, $r7;
        androidx.compose.foundation.gestures.DragScope $r2;
        int $i0;
        androidx.wear.compose.material.SwipeableState $r5;
        float $f0, $f1, $f2;
        androidx.compose.runtime.MutableState $r6;
        java.lang.Number $r8;
        kotlin.Unit $r9;
        java.lang.IllegalStateException $r10;

        r0 := @this: androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2;

        $r1 := @parameter0: java.lang.Object;

        staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i0 = r0.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: int label>;

        tableswitch($i0)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r1);

        $r4 = r0.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: java.lang.Object L$0>;

        $r2 = (androidx.compose.foundation.gestures.DragScope) $r4;

        $f0 = r0.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: float $target>;

        $r5 = r0.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r6 = staticinvoke <androidx.wear.compose.material.SwipeableState: androidx.compose.runtime.MutableState access$getAbsoluteOffset$p(androidx.wear.compose.material.SwipeableState)>($r5);

        $r7 = interfaceinvoke $r6.<androidx.compose.runtime.MutableState: java.lang.Object getValue()>();

        $r8 = (java.lang.Number) $r7;

        $f1 = virtualinvoke $r8.<java.lang.Number: float floatValue()>();

        $f2 = $f0 - $f1;

        interfaceinvoke $r2.<androidx.compose.foundation.gestures.DragScope: void dragBy(float)>($f2);

        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r9;

     label2:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw $r10;
    }

    public final kotlin.coroutines.Continuation create(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2 r0, r3, $r4;
        java.lang.Object r1;
        kotlin.coroutines.Continuation $r2, $r6;
        androidx.wear.compose.material.SwipeableState $r5;
        float $f0;

        r0 := @this: androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r4 = new androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2;

        $f0 = r0.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: float $target>;

        $r5 = r0.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: androidx.wear.compose.material.SwipeableState this$0>;

        specialinvoke $r4.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: void <init>(float,androidx.wear.compose.material.SwipeableState,kotlin.coroutines.Continuation)>($f0, $r5, $r2);

        r3 = $r4;

        r3.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: java.lang.Object L$0> = r1;

        $r6 = (kotlin.coroutines.Continuation) r3;

        return $r6;
    }

    public final java.lang.Object invoke(androidx.compose.foundation.gestures.DragScope, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2 r0, $r5;
        androidx.compose.foundation.gestures.DragScope r1;
        kotlin.coroutines.Continuation r2, $r3;
        kotlin.Unit $r4;
        java.lang.Object $r6;

        r0 := @this: androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2;

        r1 := @parameter0: androidx.compose.foundation.gestures.DragScope;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)>(r1, r2);

        $r5 = (androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2) $r3;

        $r4 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        $r6 = virtualinvoke $r5.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: java.lang.Object invokeSuspend(java.lang.Object)>($r4);

        return $r6;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2 r0;
        java.lang.Object r1, r2, $r5;
        kotlin.coroutines.Continuation $r3;
        androidx.compose.foundation.gestures.DragScope $r4;

        r0 := @this: androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (androidx.compose.foundation.gestures.DragScope) r1;

        $r3 = (kotlin.coroutines.Continuation) r2;

        $r5 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$snapInternalToOffset$2: java.lang.Object invoke(androidx.compose.foundation.gestures.DragScope,kotlin.coroutines.Continuation)>($r4, $r3);

        return $r5;
    }

androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1
<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: java.lang.Object L$0>
<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: java.lang.Object result>
<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: androidx.wear.compose.material.SwipeableState$snapTo$2 this$0>
<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: int label>
    void <init>(androidx.wear.compose.material.SwipeableState$snapTo$2, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1 r0;
        androidx.wear.compose.material.SwipeableState$snapTo$2 r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1;

        r1 := @parameter0: androidx.wear.compose.material.SwipeableState$snapTo$2;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: androidx.wear.compose.material.SwipeableState$snapTo$2 this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.wear.compose.material.SwipeableState$snapTo$2 $r3;

        r0 := @this: androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: int label> = $i1;

        $r3 = r0.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: androidx.wear.compose.material.SwipeableState$snapTo$2 this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.wear.compose.material.SwipeableState$snapTo$2: java.lang.Object emit(java.util.Map,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.wear.compose.material.SwipeableState$snapTo$2
<androidx.wear.compose.material.SwipeableState$snapTo$2: java.lang.Object $targetValue>
<androidx.wear.compose.material.SwipeableState$snapTo$2: androidx.wear.compose.material.SwipeableState this$0>
    void <init>(java.lang.Object, androidx.wear.compose.material.SwipeableState)
    {
        androidx.wear.compose.material.SwipeableState$snapTo$2 r0;
        java.lang.Object $r1;
        androidx.wear.compose.material.SwipeableState $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState$snapTo$2;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: androidx.wear.compose.material.SwipeableState;

        r0.<androidx.wear.compose.material.SwipeableState$snapTo$2: java.lang.Object $targetValue> = $r1;

        r0.<androidx.wear.compose.material.SwipeableState$snapTo$2: androidx.wear.compose.material.SwipeableState this$0> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.util.Map, kotlin.coroutines.Continuation)
    {
        java.util.Map r0;
        kotlin.coroutines.Continuation r1, r22;
        java.lang.Float r2;
        java.lang.Object $r3, r4, $r6, $r7, $r10, $r12;
        boolean $z0;
        androidx.wear.compose.material.SwipeableState $r8, $r11;
        kotlin.Unit $r9;
        float $f0;
        java.lang.String $r14, $r18;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.wear.compose.material.SwipeableState$snapTo$2 r16;
        androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1 $r17, r19;
        java.lang.IllegalArgumentException r20;
        java.lang.IllegalStateException r21;

        r16 := @this: androidx.wear.compose.material.SwipeableState$snapTo$2;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: kotlin.coroutines.Continuation;

        $z0 = r1 instanceof androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1;

        if $z0 == 0 goto label1;

        $r17 = (androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1) r1;

        $i0 = $r17.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r17.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: int label>;

        $i3 = $i2 - -2147483648;

        $r17.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: int label> = $i3;

        goto label2;

     label1:
        r19 = new androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1;

        specialinvoke r19.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: void <init>(androidx.wear.compose.material.SwipeableState$snapTo$2,kotlin.coroutines.Continuation)>(r16, r1);

        $r17 = r19;

     label2:
        $r3 = $r17.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: java.lang.Object result>;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r17.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label5;
            default: goto label7;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        $r10 = r16.<androidx.wear.compose.material.SwipeableState$snapTo$2: java.lang.Object $targetValue>;

        r2 = staticinvoke <androidx.wear.compose.material.SwipeableKt: java.lang.Float access$getOffset(java.util.Map,java.lang.Object)>(r0, $r10);

        if r2 != null goto label4;

        $r18 = "The target value must have an associated anchor.";

        r20 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw r20;

     label4:
        $r11 = r16.<androidx.wear.compose.material.SwipeableState$snapTo$2: androidx.wear.compose.material.SwipeableState this$0>;

        $f0 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        $r17.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: java.lang.Object L$0> = r16;

        $r17.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: int label> = 1;

        r22 = (kotlin.coroutines.Continuation) $r17;

        $r12 = staticinvoke <androidx.wear.compose.material.SwipeableState: java.lang.Object access$snapInternalToOffset(androidx.wear.compose.material.SwipeableState,float,kotlin.coroutines.Continuation)>($r11, $f0, r22);

        if $r12 != r4 goto label6;

        return r4;

     label5:
        $r6 = $r17.<androidx.wear.compose.material.SwipeableState$snapTo$2$emit$1: java.lang.Object L$0>;

        r16 = (androidx.wear.compose.material.SwipeableState$snapTo$2) $r6;

        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

     label6:
        $r8 = r16.<androidx.wear.compose.material.SwipeableState$snapTo$2: androidx.wear.compose.material.SwipeableState this$0>;

        $r7 = r16.<androidx.wear.compose.material.SwipeableState$snapTo$2: java.lang.Object $targetValue>;

        staticinvoke <androidx.wear.compose.material.SwipeableState: void access$setCurrentValue(androidx.wear.compose.material.SwipeableState,java.lang.Object)>($r8, $r7);

        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r9;

     label7:
        r21 = new java.lang.IllegalStateException;

        specialinvoke r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r21;
    }

    public volatile java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$snapTo$2 r0;
        java.lang.Object r1, $r4;
        kotlin.coroutines.Continuation $r2;
        java.util.Map $r3;

        r0 := @this: androidx.wear.compose.material.SwipeableState$snapTo$2;

        r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r3 = (java.util.Map) r1;

        $r4 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$snapTo$2: java.lang.Object emit(java.util.Map,kotlin.coroutines.Continuation)>($r3, $r2);

        return $r4;
    }

androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1
<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: java.lang.Object result>
<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: int label>
<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: java.lang.Object L$0>
<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: java.lang.Object L$1>
<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2 this$0>
    public void <init>(androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1 r0;
        androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2 r1;
        kotlin.coroutines.Continuation $r2;

        r0 := @this: androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1;

        r1 := @parameter0: androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        r0.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2 this$0> = r1;

        specialinvoke r0.<kotlin.coroutines.jvm.internal.ContinuationImpl: void <init>(kotlin.coroutines.Continuation)>($r2);

        return;
    }

    public final java.lang.Object invokeSuspend(java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1 r0;
        java.lang.Object $r1, $r4;
        int $i0, $i1;
        kotlin.coroutines.Continuation $r2;
        androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2 $r3;

        r0 := @this: androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1;

        $r1 := @parameter0: java.lang.Object;

        r0.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: java.lang.Object result> = $r1;

        $i0 = r0.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: int label>;

        $i1 = $i0 | -2147483648;

        r0.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: int label> = $i1;

        $r3 = r0.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2 this$0>;

        $r2 = (kotlin.coroutines.Continuation) r0;

        $r4 = virtualinvoke $r3.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>(null, $r2);

        return $r4;
    }

androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2
<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>
    public void <init>(kotlinx.coroutines.flow.FlowCollector)
    {
        androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2 r0;
        kotlinx.coroutines.flow.FlowCollector $r1;

        r0 := @this: androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2;

        $r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        r0.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object emit(java.lang.Object, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2 r0;
        java.lang.Object r1, $r3, r4, r5, $r11;
        kotlin.coroutines.Continuation r2, $r10, r16;
        kotlinx.coroutines.flow.FlowCollector $r6;
        java.util.Map r7;
        boolean $z1, $z2, $z4;
        kotlin.Unit $r9;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1 $r13, r14;
        java.lang.IllegalStateException r15;

        r0 := @this: androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: kotlin.coroutines.Continuation;

        $z1 = r2 instanceof androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1;

        if $z1 == 0 goto label1;

        $r13 = (androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1) r2;

        $i0 = $r13.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: int label>;

        $i1 = $i0 & -2147483648;

        if $i1 == 0 goto label1;

        $i2 = $r13.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: int label>;

        $i3 = $i2 - -2147483648;

        $r13.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: int label> = $i3;

        goto label2;

     label1:
        r14 = new androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1;

        specialinvoke r14.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: void <init>(androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2,kotlin.coroutines.Continuation)>(r0, r2);

        $r13 = r14;

     label2:
        $r3 = $r13.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: java.lang.Object result>;

        r4 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        $i4 = $r13.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: int label>;

        tableswitch($i4)
        {
            case 0: goto label3;
            case 1: goto label6;
            default: goto label9;
        };

     label3:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

        r5 = r1;

        $r6 = r0.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow>;

        $r10 = (kotlin.coroutines.Continuation) $r13;

        r7 = (java.util.Map) r5;

        $z2 = interfaceinvoke r7.<java.util.Map: boolean isEmpty()>();

        if $z2 != 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        if $z4 == 0 goto label8;

        $r13.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2$1: int label> = 1;

        r16 = (kotlin.coroutines.Continuation) $r13;

        $r11 = interfaceinvoke $r6.<kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)>(r5, r16);

        if $r11 != r4 goto label7;

        return r4;

     label6:
        staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r3);

     label7:
        goto label8;

     label8:
        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r9;

     label9:
        r15 = new java.lang.IllegalStateException;

        specialinvoke r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call to \'resume\' before \'invoke\' with coroutine");

        throw r15;
    }

androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1
<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined>
    public void <init>(kotlinx.coroutines.flow.Flow)
    {
        androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1 r0;
        kotlinx.coroutines.flow.Flow r1;

        r0 := @this: androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1;

        r1 := @parameter0: kotlinx.coroutines.flow.Flow;

        r0.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector, kotlin.coroutines.Continuation)
    {
        androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1 r0;
        kotlinx.coroutines.flow.FlowCollector r1, $r6;
        kotlin.coroutines.Continuation $r2;
        androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2 $r4;
        kotlinx.coroutines.flow.Flow $r5;
        java.lang.Object $r7, $r8;
        kotlin.Unit $r9;

        r0 := @this: androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1;

        r1 := @parameter0: kotlinx.coroutines.flow.FlowCollector;

        $r2 := @parameter1: kotlin.coroutines.Continuation;

        $r5 = r0.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined>;

        $r4 = new androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2;

        specialinvoke $r4.<androidx.wear.compose.material.SwipeableState$special$$inlined$filter$1$2: void <init>(kotlinx.coroutines.flow.FlowCollector)>(r1);

        $r6 = (kotlinx.coroutines.flow.FlowCollector) $r4;

        $r7 = interfaceinvoke $r5.<kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)>($r6, $r2);

        $r8 = staticinvoke <kotlin.coroutines.intrinsics.IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()>();

        if $r7 != $r8 goto label1;

        return $r7;

     label1:
        $r9 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $r9;
    }

androidx.wear.compose.material.SwipeableState$thresholds$2
<androidx.wear.compose.material.SwipeableState$thresholds$2: androidx.wear.compose.material.SwipeableState$thresholds$2 INSTANCE>
    void <init>()
    {
        androidx.wear.compose.material.SwipeableState$thresholds$2 r0;

        r0 := @this: androidx.wear.compose.material.SwipeableState$thresholds$2;

        specialinvoke r0.<kotlin.jvm.internal.Lambda: void <init>(int)>(2);

        return;
    }

    public final java.lang.Float invoke(float, float)
    {
        androidx.wear.compose.material.SwipeableState$thresholds$2 r0;
        float f0, f1;
        java.lang.Float $r1;

        r0 := @this: androidx.wear.compose.material.SwipeableState$thresholds$2;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        return $r1;
    }

    public volatile java.lang.Object invoke(java.lang.Object, java.lang.Object)
    {
        androidx.wear.compose.material.SwipeableState$thresholds$2 r0;
        java.lang.Object r1, r2;
        java.lang.Number $r3, $r4;
        float $f0, $f1;
        java.lang.Float $r5;

        r0 := @this: androidx.wear.compose.material.SwipeableState$thresholds$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Number) r1;

        $f0 = virtualinvoke $r3.<java.lang.Number: float floatValue()>();

        $r4 = (java.lang.Number) r2;

        $f1 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $r5 = virtualinvoke r0.<androidx.wear.compose.material.SwipeableState$thresholds$2: java.lang.Float invoke(float,float)>($f0, $f1);

        return $r5;
    }

    static void <clinit>()
    {
        androidx.wear.compose.material.SwipeableState$thresholds$2 $r0;

        $r0 = new androidx.wear.compose.material.SwipeableState$thresholds$2;

        specialinvoke $r0.<androidx.wear.compose.material.SwipeableState$thresholds$2: void <init>()>();

        <androidx.wear.compose.material.SwipeableState$thresholds$2: androidx.wear.compose.material.SwipeableState$thresholds$2 INSTANCE> = $r0;

        return;
    }

