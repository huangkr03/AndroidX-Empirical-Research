androidx.compose.foundation.text.AnimatedFloatModel
<androidx.compose.foundation.text.AnimatedFloatModel: kotlin.reflect.KProperty[] $$delegatedProperties>
<androidx.compose.foundation.text.AnimatedFloatModel: androidx.compose.runtime.MutableState value$delegate>
    public void <init>(float, androidx.compose.animation.core.AnimationClockObservable, float)
    {
        androidx.compose.foundation.text.AnimatedFloatModel r0;
        float f0, f1;
        androidx.compose.animation.core.AnimationClockObservable r1;
        java.lang.Float $r2;
        androidx.compose.runtime.SnapshotMutationPolicy $r3;
        androidx.compose.runtime.MutableState $r4;

        r0 := @this: androidx.compose.foundation.text.AnimatedFloatModel;

        f0 := @parameter0: float;

        r1 := @parameter1: androidx.compose.animation.core.AnimationClockObservable;

        f1 := @parameter2: float;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "clock");

        specialinvoke r0.<androidx.compose.animation.core.AnimatedFloat: void <init>(androidx.compose.animation.core.AnimationClockObservable,float)>(r1, f1);

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r3 = staticinvoke <androidx.compose.runtime.MutableStateKt: androidx.compose.runtime.SnapshotMutationPolicy structuralEqualityPolicy()>();

        $r4 = staticinvoke <androidx.compose.runtime.MutableStateKt: androidx.compose.runtime.MutableState mutableStateOf(java.lang.Object,androidx.compose.runtime.SnapshotMutationPolicy)>($r2, $r3);

        r0.<androidx.compose.foundation.text.AnimatedFloatModel: androidx.compose.runtime.MutableState value$delegate> = $r4;

        return;
    }

    public void <init>(float, androidx.compose.animation.core.AnimationClockObservable, float, int, kotlin.jvm.internal.DefaultConstructorMarker)
    {
        androidx.compose.foundation.text.AnimatedFloatModel r0;
        float f0, f1;
        androidx.compose.animation.core.AnimationClockObservable r1;
        int i0, $i1;
        kotlin.jvm.internal.DefaultConstructorMarker r2;

        r0 := @this: androidx.compose.foundation.text.AnimatedFloatModel;

        f0 := @parameter0: float;

        r1 := @parameter1: androidx.compose.animation.core.AnimationClockObservable;

        f1 := @parameter2: float;

        i0 := @parameter3: int;

        r2 := @parameter4: kotlin.jvm.internal.DefaultConstructorMarker;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        f1 = 0.01F;

     label1:
        specialinvoke r0.<androidx.compose.foundation.text.AnimatedFloatModel: void <init>(float,androidx.compose.animation.core.AnimationClockObservable,float)>(f0, r1, f1);

        return;
    }

    public java.lang.Float getValue()
    {
        androidx.compose.foundation.text.AnimatedFloatModel r0;
        androidx.compose.runtime.State $r1;
        kotlin.reflect.KProperty r2;
        androidx.compose.runtime.MutableState $r3;
        kotlin.reflect.KProperty[] $r4;
        java.lang.Object $r5;
        java.lang.Float $r6;

        r0 := @this: androidx.compose.foundation.text.AnimatedFloatModel;

        $r3 = r0.<androidx.compose.foundation.text.AnimatedFloatModel: androidx.compose.runtime.MutableState value$delegate>;

        $r1 = (androidx.compose.runtime.State) $r3;

        $r4 = <androidx.compose.foundation.text.AnimatedFloatModel: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[0];

        $r5 = interfaceinvoke $r1.<androidx.compose.runtime.State: java.lang.Object getValue()>();

        $r6 = (java.lang.Float) $r5;

        return $r6;
    }

    protected void setValue(float)
    {
        androidx.compose.foundation.text.AnimatedFloatModel r0;
        float f0;
        androidx.compose.runtime.MutableState $r1;
        kotlin.reflect.KProperty r2;
        java.lang.Float r3;
        kotlin.reflect.KProperty[] $r4;

        r0 := @this: androidx.compose.foundation.text.AnimatedFloatModel;

        f0 := @parameter0: float;

        $r1 = r0.<androidx.compose.foundation.text.AnimatedFloatModel: androidx.compose.runtime.MutableState value$delegate>;

        $r4 = <androidx.compose.foundation.text.AnimatedFloatModel: kotlin.reflect.KProperty[] $$delegatedProperties>;

        r2 = $r4[0];

        r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        interfaceinvoke $r1.<androidx.compose.runtime.MutableState: void setValue(java.lang.Object)>(r3);

        return;
    }

    public volatile java.lang.Object getValue()
    {
        androidx.compose.foundation.text.AnimatedFloatModel r0;
        java.lang.Float $r1;

        r0 := @this: androidx.compose.foundation.text.AnimatedFloatModel;

        $r1 = virtualinvoke r0.<androidx.compose.foundation.text.AnimatedFloatModel: java.lang.Float getValue()>();

        return $r1;
    }

    protected volatile void setValue(java.lang.Object)
    {
        androidx.compose.foundation.text.AnimatedFloatModel r0;
        java.lang.Object r1;
        java.lang.Number $r2;
        float $f0;

        r0 := @this: androidx.compose.foundation.text.AnimatedFloatModel;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Number) r1;

        $f0 = virtualinvoke $r2.<java.lang.Number: float floatValue()>();

        virtualinvoke r0.<androidx.compose.foundation.text.AnimatedFloatModel: void setValue(float)>($f0);

        return;
    }

    static void <clinit>()
    {
        kotlin.reflect.KProperty[] r0;
        kotlin.jvm.internal.MutablePropertyReference1Impl $r1;
        kotlin.reflect.KClass $r2;
        kotlin.reflect.KDeclarationContainer $r3;
        kotlin.jvm.internal.MutablePropertyReference1 $r4;
        kotlin.reflect.KMutableProperty1 $r5;
        kotlin.reflect.KProperty $r6;

        r0 = newarray (kotlin.reflect.KProperty)[1];

        $r1 = new kotlin.jvm.internal.MutablePropertyReference1Impl;

        $r2 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)>(class "Landroidx/compose/foundation/text/AnimatedFloatModel;");

        $r3 = (kotlin.reflect.KDeclarationContainer) $r2;

        specialinvoke $r1.<kotlin.jvm.internal.MutablePropertyReference1Impl: void <init>(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)>($r3, "value", "getValue()Ljava/lang/Float;");

        $r4 = (kotlin.jvm.internal.MutablePropertyReference1) $r1;

        $r5 = staticinvoke <kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)>($r4);

        $r6 = (kotlin.reflect.KProperty) $r5;

        r0[0] = $r6;

        <androidx.compose.foundation.text.AnimatedFloatModel: kotlin.reflect.KProperty[] $$delegatedProperties> = r0;

        return;
    }

