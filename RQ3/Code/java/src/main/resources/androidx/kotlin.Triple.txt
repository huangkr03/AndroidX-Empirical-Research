kotlin.Triple
<kotlin.Triple: java.lang.Object first>
<kotlin.Triple: java.lang.Object second>
<kotlin.Triple: java.lang.Object third>
    public void <init>(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        kotlin.Triple $r0;
        java.lang.Object $r1, $r2, $r3;

        $r0 := @this: kotlin.Triple;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<kotlin.Triple: java.lang.Object first> = $r1;

        $r0.<kotlin.Triple: java.lang.Object second> = $r2;

        $r0.<kotlin.Triple: java.lang.Object third> = $r3;

        return;
    }

    public static kotlin.Triple copy$default(kotlin.Triple, java.lang.Object, java.lang.Object, java.lang.Object, int, java.lang.Object)
    {
        kotlin.Triple $r0;
        java.lang.Object $r1, $r2, $r3, $r4;
        int $i0, $i1;

        $r0 := @parameter0: kotlin.Triple;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 := @parameter3: java.lang.Object;

        $i0 := @parameter4: int;

        $r4 := @parameter5: java.lang.Object;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $r1 = $r0.<kotlin.Triple: java.lang.Object first>;

     label1:
        $i1 = $i0 & 2;

        if $i1 == 0 goto label2;

        $r2 = $r0.<kotlin.Triple: java.lang.Object second>;

     label2:
        $i0 = $i0 & 4;

        if $i0 == 0 goto label3;

        $r3 = $r0.<kotlin.Triple: java.lang.Object third>;

     label3:
        $r0 = virtualinvoke $r0.<kotlin.Triple: kotlin.Triple copy(java.lang.Object,java.lang.Object,java.lang.Object)>($r1, $r2, $r3);

        return $r0;
    }

    public final java.lang.Object component1()
    {
        kotlin.Triple $r0;
        java.lang.Object r1;

        $r0 := @this: kotlin.Triple;

        r1 = $r0.<kotlin.Triple: java.lang.Object first>;

        return r1;
    }

    public final java.lang.Object component2()
    {
        kotlin.Triple $r0;
        java.lang.Object r1;

        $r0 := @this: kotlin.Triple;

        r1 = $r0.<kotlin.Triple: java.lang.Object second>;

        return r1;
    }

    public final java.lang.Object component3()
    {
        kotlin.Triple $r0;
        java.lang.Object r1;

        $r0 := @this: kotlin.Triple;

        r1 = $r0.<kotlin.Triple: java.lang.Object third>;

        return r1;
    }

    public final kotlin.Triple copy(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        kotlin.Triple $r0;
        java.lang.Object $r1, $r2, $r3;

        $r0 := @this: kotlin.Triple;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $r0 = new kotlin.Triple;

        specialinvoke $r0.<kotlin.Triple: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>($r1, $r2, $r3);

        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        kotlin.Triple $r0, $r2;
        java.lang.Object $r1, $r3;
        boolean $z0;

        $r0 := @this: kotlin.Triple;

        $r1 := @parameter0: java.lang.Object;

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof kotlin.Triple;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (kotlin.Triple) $r1;

        $r1 = $r0.<kotlin.Triple: java.lang.Object first>;

        $r3 = $r2.<kotlin.Triple: java.lang.Object first>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r3);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r1 = $r0.<kotlin.Triple: java.lang.Object second>;

        $r3 = $r2.<kotlin.Triple: java.lang.Object second>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r3);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $r1 = $r0.<kotlin.Triple: java.lang.Object third>;

        $r3 = $r2.<kotlin.Triple: java.lang.Object third>;

        $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r1, $r3);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public final java.lang.Object getFirst()
    {
        kotlin.Triple $r0;
        java.lang.Object r1;

        $r0 := @this: kotlin.Triple;

        r1 = $r0.<kotlin.Triple: java.lang.Object first>;

        return r1;
    }

    public final java.lang.Object getSecond()
    {
        kotlin.Triple $r0;
        java.lang.Object r1;

        $r0 := @this: kotlin.Triple;

        r1 = $r0.<kotlin.Triple: java.lang.Object second>;

        return r1;
    }

    public final java.lang.Object getThird()
    {
        kotlin.Triple $r0;
        java.lang.Object r1;

        $r0 := @this: kotlin.Triple;

        r1 = $r0.<kotlin.Triple: java.lang.Object third>;

        return r1;
    }

    public int hashCode()
    {
        kotlin.Triple $r0;
        java.lang.Object $r1;
        int $i0, $i1, $i2;

        $r0 := @this: kotlin.Triple;

        $r1 = $r0.<kotlin.Triple: java.lang.Object first>;

        $i0 = 0;

        if $r1 != null goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

     label2:
        $i1 = $i1 * 31;

        $r1 = $r0.<kotlin.Triple: java.lang.Object second>;

        if $r1 != null goto label3;

        $i2 = 0;

        goto label4;

     label3:
        $i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

     label4:
        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r1 = $r0.<kotlin.Triple: java.lang.Object third>;

        if $r1 != null goto label5;

        goto label6;

     label5:
        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

     label6:
        $i0 = $i1 + $i0;

        return $i0;
    }

    public java.lang.String toString()
    {
        kotlin.Triple $r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: kotlin.Triple;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r1 = $r0.<kotlin.Triple: java.lang.Object first>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r1 = $r0.<kotlin.Triple: java.lang.Object second>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r1 = $r0.<kotlin.Triple: java.lang.Object third>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

