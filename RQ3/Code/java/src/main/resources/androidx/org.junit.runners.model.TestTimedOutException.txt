org.junit.runners.model.TestTimedOutException
<org.junit.runners.model.TestTimedOutException: long serialVersionUID>
<org.junit.runners.model.TestTimedOutException: java.util.concurrent.TimeUnit timeUnit>
<org.junit.runners.model.TestTimedOutException: long timeout>
    public void <init>(long, java.util.concurrent.TimeUnit)
    {
        org.junit.runners.model.TestTimedOutException $r0;
        long $l0;
        java.util.concurrent.TimeUnit $r1;
        java.lang.Object[] $r2;
        java.lang.Long $r3;
        java.lang.String $r4;

        $r0 := @this: org.junit.runners.model.TestTimedOutException;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r2[0] = $r3;

        $r4 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: java.lang.String name()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        $r2[1] = $r4;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("test timed out after %d %s", $r2);

        specialinvoke $r0.<java.lang.Exception: void <init>(java.lang.String)>($r4);

        $r0.<org.junit.runners.model.TestTimedOutException: java.util.concurrent.TimeUnit timeUnit> = $r1;

        $r0.<org.junit.runners.model.TestTimedOutException: long timeout> = $l0;

        return;
    }

