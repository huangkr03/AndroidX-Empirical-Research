androidx.media3.exoplayer.rtsp.SessionDescriptionParser
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.util.regex.Pattern SDP_LINE_PATTERN>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.util.regex.Pattern ATTRIBUTE_PATTERN>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.util.regex.Pattern MEDIA_DESCRIPTION_PATTERN>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String VERSION_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String ORIGIN_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String SESSION_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String INFORMATION_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String URI_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String EMAIL_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String PHONE_NUMBER_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String CONNECTION_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String BANDWIDTH_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String TIMING_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String KEY_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String ATTRIBUTE_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String MEDIA_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String REPEAT_TYPE>
<androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.lang.String ZONE_TYPE>
    public static androidx.media3.exoplayer.rtsp.SessionDescription parse(java.lang.String) throws androidx.media3.common.ParserException
    {
        java.lang.String r0, r2, r3, r4, r5, r7, r8, $r11, $r13, $r15, $r18, $r20, $r26, $r31, $r44, $r46, $r51;
        androidx.media3.exoplayer.rtsp.SessionDescription$Builder r1, $r9;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String[] r6, r56;
        androidx.media3.exoplayer.rtsp.SessionDescription $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        java.util.regex.Pattern $r12, $r17;
        java.lang.Object $r14, $r16, $r19;
        java.lang.StringBuilder $r23, $r24, $r25, $r48, $r49, $r50;
        androidx.media3.common.ParserException $r27, $r47, $r52, $r54;
        android.net.Uri $r38;
        java.lang.Object[] $r45;
        java.lang.Throwable $r53, r59;
        androidx.media3.exoplayer.rtsp.MediaDescription$Builder r55;
        java.util.regex.Matcher r57, r58;
        byte b7;

        r0 := @parameter0: java.lang.String;

        $r9 = new androidx.media3.exoplayer.rtsp.SessionDescription$Builder;

        specialinvoke $r9.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: void <init>()>();

        r1 = $r9;

        r55 = null;

        r56 = staticinvoke <androidx.media3.exoplayer.rtsp.RtspMessageUtil: java.lang.String[] splitRtspMessageBody(java.lang.String)>(r0);

        i0 = lengthof r56;

        i6 = 0;

     label01:
        if i6 >= i0 goto label43;

        r2 = r56[i6];

        $r11 = "";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label02;

        goto label42;

     label02:
        $r12 = <androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.util.regex.Pattern SDP_LINE_PATTERN>;

        r57 = virtualinvoke $r12.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);

        $z1 = virtualinvoke r57.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label03;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed SDP line: ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        $r52 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>($r51, null);

        throw $r52;

     label03:
        $r13 = virtualinvoke r57.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r14 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r13);

        r3 = (java.lang.String) $r14;

        $r15 = virtualinvoke r57.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r16 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r15);

        r4 = (java.lang.String) $r16;

        r5 = r3;

        b7 = -1;

        $i2 = virtualinvoke r5.<java.lang.String: int hashCode()>();

        tableswitch($i2)
        {
            case 97: goto label15;
            case 98: goto label12;
            case 99: goto label11;
            case 100: goto label19;
            case 101: goto label09;
            case 102: goto label19;
            case 103: goto label19;
            case 104: goto label19;
            case 105: goto label07;
            case 106: goto label19;
            case 107: goto label14;
            case 108: goto label19;
            case 109: goto label16;
            case 110: goto label19;
            case 111: goto label05;
            case 112: goto label10;
            case 113: goto label19;
            case 114: goto label17;
            case 115: goto label06;
            case 116: goto label13;
            case 117: goto label08;
            case 118: goto label04;
            case 119: goto label19;
            case 120: goto label19;
            case 121: goto label19;
            case 122: goto label18;
            default: goto label19;
        };

     label04:
        $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("v");

        if $z5 == 0 goto label19;

        b7 = 0;

        goto label19;

     label05:
        $z11 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("o");

        if $z11 == 0 goto label19;

        b7 = 1;

        goto label19;

     label06:
        $z8 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("s");

        if $z8 == 0 goto label19;

        b7 = 2;

        goto label19;

     label07:
        $z14 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("i");

        if $z14 == 0 goto label19;

        b7 = 3;

        goto label19;

     label08:
        $z6 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("u");

        if $z6 == 0 goto label19;

        b7 = 4;

        goto label19;

     label09:
        $z15 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("e");

        if $z15 == 0 goto label19;

        b7 = 5;

        goto label19;

     label10:
        $z10 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("p");

        if $z10 == 0 goto label19;

        b7 = 6;

        goto label19;

     label11:
        $z16 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("c");

        if $z16 == 0 goto label19;

        b7 = 7;

        goto label19;

     label12:
        $z17 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("b");

        if $z17 == 0 goto label19;

        b7 = 8;

        goto label19;

     label13:
        $z7 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("t");

        if $z7 == 0 goto label19;

        b7 = 9;

        goto label19;

     label14:
        $z13 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("k");

        if $z13 == 0 goto label19;

        b7 = 10;

        goto label19;

     label15:
        $z18 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("a");

        if $z18 == 0 goto label19;

        b7 = 11;

        goto label19;

     label16:
        $z12 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("m");

        if $z12 == 0 goto label19;

        b7 = 12;

        goto label19;

     label17:
        $z9 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("r");

        if $z9 == 0 goto label19;

        b7 = 13;

        goto label19;

     label18:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("z");

        if $z2 == 0 goto label19;

        b7 = 14;

     label19:
        tableswitch(b7)
        {
            case 0: goto label20;
            case 1: goto label21;
            case 2: goto label22;
            case 3: goto label23;
            case 4: goto label25;
            case 5: goto label26;
            case 6: goto label27;
            case 7: goto label28;
            case 8: goto label30;
            case 9: goto label34;
            case 10: goto label35;
            case 11: goto label37;
            case 12: goto label40;
            case 13: goto label42;
            case 14: goto label42;
            default: goto label42;
        };

     label20:
        $r44 = "0";

        $z4 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 != 0 goto label42;

        $r45 = newarray (java.lang.Object)[1];

        $r45[0] = r4;

        $r46 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SDP version %s is not supported.", $r45);

        $r47 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>($r46, null);

        throw $r47;

     label21:
        virtualinvoke r1.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: androidx.media3.exoplayer.rtsp.SessionDescription$Builder setOrigin(java.lang.String)>(r4);

        goto label42;

     label22:
        virtualinvoke r1.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: androidx.media3.exoplayer.rtsp.SessionDescription$Builder setSessionName(java.lang.String)>(r4);

        goto label42;

     label23:
        if r55 != null goto label24;

        virtualinvoke r1.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: androidx.media3.exoplayer.rtsp.SessionDescription$Builder setSessionInfo(java.lang.String)>(r4);

        goto label42;

     label24:
        virtualinvoke r55.<androidx.media3.exoplayer.rtsp.MediaDescription$Builder: androidx.media3.exoplayer.rtsp.MediaDescription$Builder setMediaTitle(java.lang.String)>(r4);

        goto label42;

     label25:
        $r38 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r4);

        virtualinvoke r1.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: androidx.media3.exoplayer.rtsp.SessionDescription$Builder setUri(android.net.Uri)>($r38);

        goto label42;

     label26:
        virtualinvoke r1.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: androidx.media3.exoplayer.rtsp.SessionDescription$Builder setEmailAddress(java.lang.String)>(r4);

        goto label42;

     label27:
        virtualinvoke r1.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: androidx.media3.exoplayer.rtsp.SessionDescription$Builder setPhoneNumber(java.lang.String)>(r4);

        goto label42;

     label28:
        if r55 != null goto label29;

        virtualinvoke r1.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: androidx.media3.exoplayer.rtsp.SessionDescription$Builder setConnection(java.lang.String)>(r4);

        goto label42;

     label29:
        virtualinvoke r55.<androidx.media3.exoplayer.rtsp.MediaDescription$Builder: androidx.media3.exoplayer.rtsp.MediaDescription$Builder setConnection(java.lang.String)>(r4);

        goto label42;

     label30:
        r6 = staticinvoke <androidx.media3.common.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)>(r4, ":\\s?");

        $i3 = lengthof r6;

        if $i3 != 2 goto label31;

        $z19 = 1;

        goto label32;

     label31:
        $z19 = 0;

     label32:
        staticinvoke <androidx.media3.common.util.Assertions: void checkArgument(boolean)>($z19);

        $r31 = r6[1];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r31);

        if r55 != null goto label33;

        $i5 = i1 * 1000;

        virtualinvoke r1.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: androidx.media3.exoplayer.rtsp.SessionDescription$Builder setBitrate(int)>($i5);

        goto label42;

     label33:
        $i4 = i1 * 1000;

        virtualinvoke r55.<androidx.media3.exoplayer.rtsp.MediaDescription$Builder: androidx.media3.exoplayer.rtsp.MediaDescription$Builder setBitrate(int)>($i4);

        goto label42;

     label34:
        virtualinvoke r1.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: androidx.media3.exoplayer.rtsp.SessionDescription$Builder setTiming(java.lang.String)>(r4);

        goto label42;

     label35:
        if r55 != null goto label36;

        virtualinvoke r1.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: androidx.media3.exoplayer.rtsp.SessionDescription$Builder setKey(java.lang.String)>(r4);

        goto label42;

     label36:
        virtualinvoke r55.<androidx.media3.exoplayer.rtsp.MediaDescription$Builder: androidx.media3.exoplayer.rtsp.MediaDescription$Builder setKey(java.lang.String)>(r4);

        goto label42;

     label37:
        $r17 = <androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.util.regex.Pattern ATTRIBUTE_PATTERN>;

        r58 = virtualinvoke $r17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r4);

        $z3 = virtualinvoke r58.<java.util.regex.Matcher: boolean matches()>();

        if $z3 != 0 goto label38;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed Attribute line: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>($r26, null);

        throw $r27;

     label38:
        $r18 = virtualinvoke r58.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r19 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r18);

        r7 = (java.lang.String) $r19;

        $r20 = virtualinvoke r58.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        r8 = staticinvoke <com.google.common.base.Strings: java.lang.String nullToEmpty(java.lang.String)>($r20);

        if r55 != null goto label39;

        virtualinvoke r1.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: androidx.media3.exoplayer.rtsp.SessionDescription$Builder addAttribute(java.lang.String,java.lang.String)>(r7, r8);

        goto label42;

     label39:
        virtualinvoke r55.<androidx.media3.exoplayer.rtsp.MediaDescription$Builder: androidx.media3.exoplayer.rtsp.MediaDescription$Builder addAttribute(java.lang.String,java.lang.String)>(r7, r8);

        goto label42;

     label40:
        if r55 == null goto label41;

        staticinvoke <androidx.media3.exoplayer.rtsp.SessionDescriptionParser: void addMediaDescriptionToSession(androidx.media3.exoplayer.rtsp.SessionDescription$Builder,androidx.media3.exoplayer.rtsp.MediaDescription$Builder)>(r1, r55);

     label41:
        r55 = staticinvoke <androidx.media3.exoplayer.rtsp.SessionDescriptionParser: androidx.media3.exoplayer.rtsp.MediaDescription$Builder parseMediaDescriptionLine(java.lang.String)>(r4);

        goto label42;

     label42:
        i6 = i6 + 1;

        goto label01;

     label43:
        if r55 == null goto label44;

        staticinvoke <androidx.media3.exoplayer.rtsp.SessionDescriptionParser: void addMediaDescriptionToSession(androidx.media3.exoplayer.rtsp.SessionDescription$Builder,androidx.media3.exoplayer.rtsp.MediaDescription$Builder)>(r1, r55);

     label44:
        $r10 = virtualinvoke r1.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: androidx.media3.exoplayer.rtsp.SessionDescription build()>();

     label45:
        return $r10;

     label46:
        $r53 := @caughtexception;

        r59 = $r53;

        $r54 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>(null, r59);

        throw $r54;

        catch java.lang.IllegalArgumentException from label44 to label45 with label46;
        catch java.lang.IllegalStateException from label44 to label45 with label46;
    }

    private static void addMediaDescriptionToSession(androidx.media3.exoplayer.rtsp.SessionDescription$Builder, androidx.media3.exoplayer.rtsp.MediaDescription$Builder) throws androidx.media3.common.ParserException
    {
        androidx.media3.exoplayer.rtsp.SessionDescription$Builder r0;
        androidx.media3.exoplayer.rtsp.MediaDescription$Builder r1;
        java.lang.Throwable r2, $r5;
        androidx.media3.exoplayer.rtsp.MediaDescription $r3;
        androidx.media3.common.ParserException $r6;

        r0 := @parameter0: androidx.media3.exoplayer.rtsp.SessionDescription$Builder;

        r1 := @parameter1: androidx.media3.exoplayer.rtsp.MediaDescription$Builder;

     label1:
        $r3 = virtualinvoke r1.<androidx.media3.exoplayer.rtsp.MediaDescription$Builder: androidx.media3.exoplayer.rtsp.MediaDescription build()>();

        virtualinvoke r0.<androidx.media3.exoplayer.rtsp.SessionDescription$Builder: androidx.media3.exoplayer.rtsp.SessionDescription$Builder addMediaDescription(androidx.media3.exoplayer.rtsp.MediaDescription)>($r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>(null, r2);

        throw $r6;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    private static androidx.media3.exoplayer.rtsp.MediaDescription$Builder parseMediaDescriptionLine(java.lang.String) throws androidx.media3.common.ParserException
    {
        java.lang.String r0, r2, r3, r4, r5, $r8, $r10, $r12, $r14, $r20, $r26;
        java.util.regex.Matcher r1;
        java.lang.Throwable r6, $r22;
        java.util.regex.Pattern $r7;
        boolean $z0;
        java.lang.Object $r9, $r11, $r13, $r15;
        androidx.media3.exoplayer.rtsp.MediaDescription$Builder $r16;
        int $i0, $i1;
        java.lang.StringBuilder $r17, $r18, $r19, $r23, $r24, $r25;
        androidx.media3.common.ParserException $r21, $r27;

        r0 := @parameter0: java.lang.String;

        $r7 = <androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.util.regex.Pattern MEDIA_DESCRIPTION_PATTERN>;

        r1 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed SDP media description line: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>($r20, null);

        throw $r21;

     label1:
        $r8 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r9 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r8);

        r2 = (java.lang.String) $r9;

        $r10 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r11 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r10);

        r3 = (java.lang.String) $r11;

        $r12 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r13 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r12);

        r4 = (java.lang.String) $r13;

        $r14 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        $r15 = staticinvoke <androidx.media3.common.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r14);

        r5 = (java.lang.String) $r15;

     label2:
        $r16 = new androidx.media3.exoplayer.rtsp.MediaDescription$Builder;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);

        specialinvoke $r16.<androidx.media3.exoplayer.rtsp.MediaDescription$Builder: void <init>(java.lang.String,int,java.lang.String,int)>(r2, $i0, r4, $i1);

     label3:
        return $r16;

     label4:
        $r22 := @caughtexception;

        r6 = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed SDP media description line: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = staticinvoke <androidx.media3.common.ParserException: androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable)>($r26, r6);

        throw $r27;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    private void <init>()
    {
        androidx.media3.exoplayer.rtsp.SessionDescriptionParser r0;

        r0 := @this: androidx.media3.exoplayer.rtsp.SessionDescriptionParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1, $r2;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([a-z])=\\s?(.+)");

        <androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.util.regex.Pattern SDP_LINE_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([\\x21\\x23-\\x27\\x2a\\x2b\\x2d\\x2e\\x30-\\x39\\x41-\\x5a\\x5e-\\x7e]+)(?::(.*))?");

        <androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.util.regex.Pattern ATTRIBUTE_PATTERN> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\S+)\\s(\\S+)\\s(\\S+)\\s(\\S+)");

        <androidx.media3.exoplayer.rtsp.SessionDescriptionParser: java.util.regex.Pattern MEDIA_DESCRIPTION_PATTERN> = $r2;

        return;
    }

