androidx.webkit.internal.ApiHelperForQ
    private void <init>()
    {
        androidx.webkit.internal.ApiHelperForQ r0;

        r0 := @this: androidx.webkit.internal.ApiHelperForQ;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setForceDark(android.webkit.WebSettings, int)
    {
        android.webkit.WebSettings r0;
        int i0;

        r0 := @parameter0: android.webkit.WebSettings;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.webkit.WebSettings: void setForceDark(int)>(i0);

        return;
    }

    public static int getForceDark(android.webkit.WebSettings)
    {
        android.webkit.WebSettings r0;
        int $i0;

        r0 := @parameter0: android.webkit.WebSettings;

        $i0 = virtualinvoke r0.<android.webkit.WebSettings: int getForceDark()>();

        return $i0;
    }

    public static android.webkit.WebViewRenderProcess getWebViewRenderProcess(android.webkit.WebView)
    {
        android.webkit.WebView r0;
        android.webkit.WebViewRenderProcess $r1;

        r0 := @parameter0: android.webkit.WebView;

        $r1 = virtualinvoke r0.<android.webkit.WebView: android.webkit.WebViewRenderProcess getWebViewRenderProcess()>();

        return $r1;
    }

    public static boolean terminate(android.webkit.WebViewRenderProcess)
    {
        android.webkit.WebViewRenderProcess r0;
        boolean $z0;

        r0 := @parameter0: android.webkit.WebViewRenderProcess;

        $z0 = virtualinvoke r0.<android.webkit.WebViewRenderProcess: boolean terminate()>();

        return $z0;
    }

    public static void setWebViewRenderProcessClient(android.webkit.WebView, java.util.concurrent.Executor, androidx.webkit.WebViewRenderProcessClient)
    {
        android.webkit.WebView r0;
        java.util.concurrent.Executor r1;
        androidx.webkit.WebViewRenderProcessClient r2;
        androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter r3, $r4;

        r0 := @parameter0: android.webkit.WebView;

        r1 := @parameter1: java.util.concurrent.Executor;

        r2 := @parameter2: androidx.webkit.WebViewRenderProcessClient;

        if r2 == null goto label1;

        $r4 = new androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter;

        specialinvoke $r4.<androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter: void <init>(androidx.webkit.WebViewRenderProcessClient)>(r2);

        goto label2;

     label1:
        $r4 = null;

     label2:
        r3 = $r4;

        virtualinvoke r0.<android.webkit.WebView: void setWebViewRenderProcessClient(java.util.concurrent.Executor,android.webkit.WebViewRenderProcessClient)>(r1, r3);

        return;
    }

    public static void setWebViewRenderProcessClient(android.webkit.WebView, androidx.webkit.WebViewRenderProcessClient)
    {
        android.webkit.WebView r0;
        androidx.webkit.WebViewRenderProcessClient r1;
        androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter r2, $r3;

        r0 := @parameter0: android.webkit.WebView;

        r1 := @parameter1: androidx.webkit.WebViewRenderProcessClient;

        if r1 == null goto label1;

        $r3 = new androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter;

        specialinvoke $r3.<androidx.webkit.internal.WebViewRenderProcessClientFrameworkAdapter: void <init>(androidx.webkit.WebViewRenderProcessClient)>(r1);

        goto label2;

     label1:
        $r3 = null;

     label2:
        r2 = $r3;

        virtualinvoke r0.<android.webkit.WebView: void setWebViewRenderProcessClient(android.webkit.WebViewRenderProcessClient)>(r2);

        return;
    }

    public static android.webkit.WebViewRenderProcessClient getWebViewRenderProcessClient(android.webkit.WebView)
    {
        android.webkit.WebView r0;
        android.webkit.WebViewRenderProcessClient $r1;

        r0 := @parameter0: android.webkit.WebView;

        $r1 = virtualinvoke r0.<android.webkit.WebView: android.webkit.WebViewRenderProcessClient getWebViewRenderProcessClient()>();

        return $r1;
    }

