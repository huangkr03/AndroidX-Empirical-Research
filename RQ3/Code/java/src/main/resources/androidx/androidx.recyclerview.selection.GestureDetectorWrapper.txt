androidx.recyclerview.selection.GestureDetectorWrapper
<androidx.recyclerview.selection.GestureDetectorWrapper: android.view.GestureDetector mDetector>
<androidx.recyclerview.selection.GestureDetectorWrapper: boolean mDisallowIntercept>
    void <init>(android.view.GestureDetector)
    {
        androidx.recyclerview.selection.GestureDetectorWrapper r0;
        android.view.GestureDetector r1;
        boolean $z0;

        r0 := @this: androidx.recyclerview.selection.GestureDetectorWrapper;

        r1 := @parameter0: android.view.GestureDetector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <androidx.core.util.Preconditions: void checkArgument(boolean)>($z0);

        r0.<androidx.recyclerview.selection.GestureDetectorWrapper: android.view.GestureDetector mDetector> = r1;

        return;
    }

    public boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView, android.view.MotionEvent)
    {
        androidx.recyclerview.selection.GestureDetectorWrapper r0;
        androidx.recyclerview.widget.RecyclerView r1;
        android.view.MotionEvent r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.view.GestureDetector $r3;

        r0 := @this: androidx.recyclerview.selection.GestureDetectorWrapper;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: android.view.MotionEvent;

        $z0 = r0.<androidx.recyclerview.selection.GestureDetectorWrapper: boolean mDisallowIntercept>;

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <androidx.recyclerview.selection.MotionEvents: boolean isActionDown(android.view.MotionEvent)>(r2);

        if $z2 == 0 goto label1;

        r0.<androidx.recyclerview.selection.GestureDetectorWrapper: boolean mDisallowIntercept> = 0;

     label1:
        $z3 = r0.<androidx.recyclerview.selection.GestureDetectorWrapper: boolean mDisallowIntercept>;

        if $z3 != 0 goto label2;

        $r3 = r0.<androidx.recyclerview.selection.GestureDetectorWrapper: android.view.GestureDetector mDetector>;

        $z1 = virtualinvoke $r3.<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r2);

        if $z1 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public void onTouchEvent(androidx.recyclerview.widget.RecyclerView, android.view.MotionEvent)
    {
        androidx.recyclerview.selection.GestureDetectorWrapper r0;
        androidx.recyclerview.widget.RecyclerView r1;
        android.view.MotionEvent r2;

        r0 := @this: androidx.recyclerview.selection.GestureDetectorWrapper;

        r1 := @parameter0: androidx.recyclerview.widget.RecyclerView;

        r2 := @parameter1: android.view.MotionEvent;

        return;
    }

    public void onRequestDisallowInterceptTouchEvent(boolean)
    {
        androidx.recyclerview.selection.GestureDetectorWrapper r0;
        boolean z0;

        r0 := @this: androidx.recyclerview.selection.GestureDetectorWrapper;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        return;

     label1:
        r0.<androidx.recyclerview.selection.GestureDetectorWrapper: boolean mDisallowIntercept> = z0;

        specialinvoke r0.<androidx.recyclerview.selection.GestureDetectorWrapper: void sendCancelEvent()>();

        return;
    }

    public boolean isResetRequired()
    {
        androidx.recyclerview.selection.GestureDetectorWrapper r0;

        r0 := @this: androidx.recyclerview.selection.GestureDetectorWrapper;

        return 1;
    }

    public void reset()
    {
        androidx.recyclerview.selection.GestureDetectorWrapper r0;

        r0 := @this: androidx.recyclerview.selection.GestureDetectorWrapper;

        r0.<androidx.recyclerview.selection.GestureDetectorWrapper: boolean mDisallowIntercept> = 0;

        specialinvoke r0.<androidx.recyclerview.selection.GestureDetectorWrapper: void sendCancelEvent()>();

        return;
    }

    private void sendCancelEvent()
    {
        androidx.recyclerview.selection.GestureDetectorWrapper r0;
        android.view.GestureDetector $r1;
        android.view.MotionEvent $r2;

        r0 := @this: androidx.recyclerview.selection.GestureDetectorWrapper;

        $r1 = r0.<androidx.recyclerview.selection.GestureDetectorWrapper: android.view.GestureDetector mDetector>;

        $r2 = staticinvoke <androidx.recyclerview.selection.MotionEvents: android.view.MotionEvent createCancelEvent()>();

        virtualinvoke $r1.<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>($r2);

        return;
    }

