kotlinx.coroutines.Unconfined
<kotlinx.coroutines.Unconfined: kotlinx.coroutines.Unconfined INSTANCE>
    static void <clinit>()
    {
        kotlinx.coroutines.Unconfined $r0;

        $r0 = new kotlinx.coroutines.Unconfined;

        specialinvoke $r0.<kotlinx.coroutines.Unconfined: void <init>()>();

        <kotlinx.coroutines.Unconfined: kotlinx.coroutines.Unconfined INSTANCE> = $r0;

        return;
    }

    private void <init>()
    {
        kotlinx.coroutines.Unconfined $r0;

        $r0 := @this: kotlinx.coroutines.Unconfined;

        specialinvoke $r0.<kotlinx.coroutines.CoroutineDispatcher: void <init>()>();

        return;
    }

    public void dispatch(kotlin.coroutines.CoroutineContext, java.lang.Runnable)
    {
        kotlinx.coroutines.Unconfined $r0;
        kotlin.coroutines.CoroutineContext$Element $r1;
        kotlin.coroutines.CoroutineContext $r2;
        java.lang.Runnable $r3;
        kotlinx.coroutines.YieldContext$Key $r4;
        kotlinx.coroutines.YieldContext $r5;
        java.lang.UnsupportedOperationException $r6;

        $r0 := @this: kotlinx.coroutines.Unconfined;

        $r2 := @parameter0: kotlin.coroutines.CoroutineContext;

        $r3 := @parameter1: java.lang.Runnable;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r2, "context");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r3, "block");

        $r4 = <kotlinx.coroutines.YieldContext: kotlinx.coroutines.YieldContext$Key Key>;

        $r1 = interfaceinvoke $r2.<kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)>($r4);

        $r5 = (kotlinx.coroutines.YieldContext) $r1;

        if $r5 == null goto label1;

        $r5.<kotlinx.coroutines.YieldContext: boolean dispatcherWasUnconfined> = 1;

        return;

     label1:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Dispatchers.Unconfined.dispatch function can only be used by the yield function. If you wrap Unconfined dispatcher in your code, make sure you properly delegate isDispatchNeeded and dispatch calls.");

        throw $r6;
    }

    public boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
    {
        kotlinx.coroutines.Unconfined $r0;
        kotlin.coroutines.CoroutineContext $r1;

        $r0 := @this: kotlinx.coroutines.Unconfined;

        $r1 := @parameter0: kotlin.coroutines.CoroutineContext;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>($r1, "context");

        return 0;
    }

    public java.lang.String toString()
    {
        kotlinx.coroutines.Unconfined $r0;

        $r0 := @this: kotlinx.coroutines.Unconfined;

        return "Dispatchers.Unconfined";
    }

