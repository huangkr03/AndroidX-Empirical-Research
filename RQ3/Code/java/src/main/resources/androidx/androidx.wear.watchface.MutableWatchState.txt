androidx.wear.watchface.MutableWatchState
<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData interruptionFilter>
<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isAmbient>
<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isBatteryLowAndNotCharging>
<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isVisible>
<androidx.wear.watchface.MutableWatchState: boolean hasLowBitAmbient>
<androidx.wear.watchface.MutableWatchState: boolean hasBurnInProtection>
<androidx.wear.watchface.MutableWatchState: long analogPreviewReferenceTimeMillis>
<androidx.wear.watchface.MutableWatchState: long digitalPreviewReferenceTimeMillis>
<androidx.wear.watchface.MutableWatchState: int chinHeight>
<androidx.wear.watchface.MutableWatchState: boolean isHeadless>
    public void <init>()
    {
        androidx.wear.watchface.MutableWatchState r0;
        androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData $r1, $r3, $r4, $r5;
        java.lang.Integer $r2;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke $r1.<androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData: void <init>(java.lang.Object)>($r2);

        r0.<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData interruptionFilter> = $r1;

        $r3 = new androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData;

        specialinvoke $r3.<androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData: void <init>()>();

        r0.<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isAmbient> = $r3;

        $r4 = new androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData;

        specialinvoke $r4.<androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData: void <init>()>();

        r0.<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isBatteryLowAndNotCharging> = $r4;

        $r5 = new androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData;

        specialinvoke $r5.<androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData: void <init>()>();

        r0.<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isVisible> = $r5;

        return;
    }

    public final androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData getInterruptionFilter()
    {
        androidx.wear.watchface.MutableWatchState r0;
        androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData $r1;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        $r1 = r0.<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData interruptionFilter>;

        return $r1;
    }

    public final void setInterruptionFilter(androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData)
    {
        androidx.wear.watchface.MutableWatchState r0;
        androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData r1;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        r1 := @parameter0: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(r1, "<set-?>");

        r0.<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData interruptionFilter> = r1;

        return;
    }

    public final androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isAmbient()
    {
        androidx.wear.watchface.MutableWatchState r0;
        androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData $r1;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        $r1 = r0.<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isAmbient>;

        return $r1;
    }

    public final androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isBatteryLowAndNotCharging()
    {
        androidx.wear.watchface.MutableWatchState r0;
        androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData $r1;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        $r1 = r0.<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isBatteryLowAndNotCharging>;

        return $r1;
    }

    public final androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isVisible()
    {
        androidx.wear.watchface.MutableWatchState r0;
        androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData $r1;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        $r1 = r0.<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isVisible>;

        return $r1;
    }

    public final boolean getHasLowBitAmbient()
    {
        androidx.wear.watchface.MutableWatchState r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        $z0 = r0.<androidx.wear.watchface.MutableWatchState: boolean hasLowBitAmbient>;

        return $z0;
    }

    public final void setHasLowBitAmbient(boolean)
    {
        androidx.wear.watchface.MutableWatchState r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.MutableWatchState: boolean hasLowBitAmbient> = z0;

        return;
    }

    public final boolean getHasBurnInProtection()
    {
        androidx.wear.watchface.MutableWatchState r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        $z0 = r0.<androidx.wear.watchface.MutableWatchState: boolean hasBurnInProtection>;

        return $z0;
    }

    public final void setHasBurnInProtection(boolean)
    {
        androidx.wear.watchface.MutableWatchState r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.MutableWatchState: boolean hasBurnInProtection> = z0;

        return;
    }

    public final long getAnalogPreviewReferenceTimeMillis()
    {
        androidx.wear.watchface.MutableWatchState r0;
        long $l0;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        $l0 = r0.<androidx.wear.watchface.MutableWatchState: long analogPreviewReferenceTimeMillis>;

        return $l0;
    }

    public final void setAnalogPreviewReferenceTimeMillis(long)
    {
        androidx.wear.watchface.MutableWatchState r0;
        long l0;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        l0 := @parameter0: long;

        r0.<androidx.wear.watchface.MutableWatchState: long analogPreviewReferenceTimeMillis> = l0;

        return;
    }

    public final long getDigitalPreviewReferenceTimeMillis()
    {
        androidx.wear.watchface.MutableWatchState r0;
        long $l0;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        $l0 = r0.<androidx.wear.watchface.MutableWatchState: long digitalPreviewReferenceTimeMillis>;

        return $l0;
    }

    public final void setDigitalPreviewReferenceTimeMillis(long)
    {
        androidx.wear.watchface.MutableWatchState r0;
        long l0;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        l0 := @parameter0: long;

        r0.<androidx.wear.watchface.MutableWatchState: long digitalPreviewReferenceTimeMillis> = l0;

        return;
    }

    public final int getChinHeight()
    {
        androidx.wear.watchface.MutableWatchState r0;
        int $i0;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        $i0 = r0.<androidx.wear.watchface.MutableWatchState: int chinHeight>;

        return $i0;
    }

    public final void setChinHeight(int)
    {
        androidx.wear.watchface.MutableWatchState r0;
        int i0;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        i0 := @parameter0: int;

        r0.<androidx.wear.watchface.MutableWatchState: int chinHeight> = i0;

        return;
    }

    public final boolean isHeadless()
    {
        androidx.wear.watchface.MutableWatchState r0;
        boolean $z0;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        $z0 = r0.<androidx.wear.watchface.MutableWatchState: boolean isHeadless>;

        return $z0;
    }

    public final void setHeadless(boolean)
    {
        androidx.wear.watchface.MutableWatchState r0;
        boolean z0;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        z0 := @parameter0: boolean;

        r0.<androidx.wear.watchface.MutableWatchState: boolean isHeadless> = z0;

        return;
    }

    public final androidx.wear.watchface.WatchState asWatchState()
    {
        androidx.wear.watchface.MutableWatchState r0;
        androidx.wear.watchface.WatchState $r1;
        androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        int $i0;
        long $l1, $l2;
        androidx.wear.watchface.ObservableWatchData $r6, $r7, $r8, $r9;

        r0 := @this: androidx.wear.watchface.MutableWatchState;

        $r1 = new androidx.wear.watchface.WatchState;

        $r2 = r0.<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData interruptionFilter>;

        $r9 = (androidx.wear.watchface.ObservableWatchData) $r2;

        $r3 = r0.<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isAmbient>;

        $r8 = (androidx.wear.watchface.ObservableWatchData) $r3;

        $r4 = r0.<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isBatteryLowAndNotCharging>;

        $r7 = (androidx.wear.watchface.ObservableWatchData) $r4;

        $r5 = r0.<androidx.wear.watchface.MutableWatchState: androidx.wear.watchface.ObservableWatchData$MutableObservableWatchData isVisible>;

        $r6 = (androidx.wear.watchface.ObservableWatchData) $r5;

        $z2 = r0.<androidx.wear.watchface.MutableWatchState: boolean hasLowBitAmbient>;

        $z1 = r0.<androidx.wear.watchface.MutableWatchState: boolean hasBurnInProtection>;

        $l2 = r0.<androidx.wear.watchface.MutableWatchState: long analogPreviewReferenceTimeMillis>;

        $l1 = r0.<androidx.wear.watchface.MutableWatchState: long digitalPreviewReferenceTimeMillis>;

        $i0 = r0.<androidx.wear.watchface.MutableWatchState: int chinHeight>;

        $z0 = r0.<androidx.wear.watchface.MutableWatchState: boolean isHeadless>;

        specialinvoke $r1.<androidx.wear.watchface.WatchState: void <init>(androidx.wear.watchface.ObservableWatchData,androidx.wear.watchface.ObservableWatchData,androidx.wear.watchface.ObservableWatchData,androidx.wear.watchface.ObservableWatchData,boolean,boolean,long,long,int,boolean)>($r9, $r8, $r7, $r6, $z2, $z1, $l2, $l1, $i0, $z0);

        return $r1;
    }

